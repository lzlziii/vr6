using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Security;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Security.Principal;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using Il2CppDummyDll;
using Kernys.Bson;
using LibTessDotNet;
using Pico.Platform;
using Pico.Platform.Models;
using RootMotion.FinalIK;
using SocketIO;
using TMPro;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.XR;
using VRStandardAssets.Utils;
using VRTK;
using Virtence.OpenTypeCS;
using Virtence.VText.LEGACY;
using Virtence.VText.Tesselation;
using Virtence.VText.Tesselation.Poly2Tri;
using WebSocketSharp;
using WebSocketSharp.Net;
using WebSocketSharp.Net.Security;
using WebSocketSharp.Net.WebSockets;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public static class BetterStreamingAssets
{
	[Token(Token = "0x2000003")]
	internal struct ReadInfo
	{
		[Token(Token = "0x4000001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string readPath;

		[Token(Token = "0x4000002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long size;

		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long offset;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint crc32;
	}

	[Token(Token = "0x2000004")]
	internal static class ApkImpl
	{
		[Token(Token = "0x2000005")]
		private struct PartInfo
		{
			[Token(Token = "0x4000008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long size;

			[Token(Token = "0x4000009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public long offset;

			[Token(Token = "0x400000A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint crc32;
		}

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] s_paths;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static PartInfo[] s_streamingAssets;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string s_root;

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x926838", Offset = "0x926838", VA = "0x926838")]
		public static void Initialize(string dataPath, string streamingAssetsPath)
		{
		}

		[Token(Token = "0x6000012")]
		[Address(RVA = "0x926ABC", Offset = "0x926ABC", VA = "0x926ABC")]
		public static bool TryGetInfo(string path, out ReadInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x926C20", Offset = "0x926C20", VA = "0x926C20")]
		public static bool DirectoryExists(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6000014")]
		[Address(RVA = "0x92782C", Offset = "0x92782C", VA = "0x92782C")]
		public static string[] GetFiles(string path, string searchPattern, SearchOption searchOption)
		{
			return null;
		}

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x9274F4", Offset = "0x9274F4", VA = "0x9274F4")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0x926E00", Offset = "0x926E00", VA = "0x926E00")]
		public static Stream OpenRead(string path)
		{
			return null;
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0x928674", Offset = "0x928674", VA = "0x928674")]
		private static int GetDirectoryIndex(string path)
		{
			return default(int);
		}

		[Token(Token = "0x6000018")]
		[Address(RVA = "0x927D88", Offset = "0x927D88", VA = "0x927D88")]
		private static void GetStreamingAssetsInfoFromJar(string apkPath, List<string> paths, List<PartInfo> parts)
		{
		}
	}

	[Token(Token = "0x17000001")]
	public static string Root
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x9267CC", Offset = "0x9267CC", VA = "0x9267CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x926814", Offset = "0x926814", VA = "0x926814")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x926A94", Offset = "0x926A94", VA = "0x926A94")]
	public static bool FileExists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x926C1C", Offset = "0x926C1C", VA = "0x926C1C")]
	public static bool DirectoryExists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x926CA0", Offset = "0x926CA0", VA = "0x926CA0")]
	public static AssetBundleCreateRequest LoadAssetBundleAsync(string path, uint crc = 0u)
	{
		return null;
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x926D18", Offset = "0x926D18", VA = "0x926D18")]
	public static AssetBundle LoadAssetBundle(string path, uint crc = 0u)
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x926D48", Offset = "0x926D48", VA = "0x926D48")]
	public static Stream OpenRead(string path)
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x926F48", Offset = "0x926F48", VA = "0x926F48")]
	public static StreamReader OpenText(string path)
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x927048", Offset = "0x927048", VA = "0x927048")]
	public static string ReadAllText(string path)
	{
		return null;
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x9271D4", Offset = "0x9271D4", VA = "0x9271D4")]
	public static string[] ReadAllLines(string path)
	{
		return null;
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x92743C", Offset = "0x92743C", VA = "0x92743C")]
	public static byte[] ReadAllBytes(string path)
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x927828", Offset = "0x927828", VA = "0x927828")]
	public static string[] GetFiles(string path, string searchPattern, SearchOption searchOption)
	{
		return null;
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x927D18", Offset = "0x927D18", VA = "0x927D18")]
	public static string[] GetFiles(string path)
	{
		return null;
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x927D24", Offset = "0x927D24", VA = "0x927D24")]
	public static string[] GetFiles(string path, string searchPattern)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x926CD0", Offset = "0x926CD0", VA = "0x926CD0")]
	private static ReadInfo GetInfoOrThrow(string path)
	{
		return default(ReadInfo);
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x927D2C", Offset = "0x927D2C", VA = "0x927D2C")]
	private static void ThrowFileNotFound(string path)
	{
	}
}
[Token(Token = "0x2000008")]
public class Loom : MonoBehaviour
{
	[Token(Token = "0x2000009")]
	public struct DelayedQueueItem
	{
		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Action action;
	}

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int maxThreads;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int numThreads;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Loom _current;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _count;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool initialized;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<Action> _actions;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<DelayedQueueItem> _delayed;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly List<DelayedQueueItem> _currentDelayed;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Action> _currentActions;

	[Token(Token = "0x17000002")]
	public static Loom Current
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x928954", Offset = "0x928954", VA = "0x928954")]
		get
		{
			return null;
		}
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x92889C", Offset = "0x92889C", VA = "0x92889C")]
		set
		{
		}
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x928AC0", Offset = "0x928AC0", VA = "0x928AC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x9289B0", Offset = "0x9289B0", VA = "0x9289B0")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x928B34", Offset = "0x928B34", VA = "0x928B34")]
	public static void QueueOnMainThread(Action action)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x928B8C", Offset = "0x928B8C", VA = "0x928B8C")]
	public static void QueueOnMainThread(Action action, float time)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x928EE4", Offset = "0x928EE4", VA = "0x928EE4")]
	public static Thread RunAsync(Action a)
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x928FF4", Offset = "0x928FF4", VA = "0x928FF4")]
	private static void RunAction(object action)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x92918C", Offset = "0x92918C", VA = "0x92918C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x929250", Offset = "0x929250", VA = "0x929250")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x929254", Offset = "0x929254", VA = "0x929254")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x92992C", Offset = "0x92992C", VA = "0x92992C")]
	public Loom()
	{
	}
}
[Token(Token = "0x200000B")]
public static class Poly2Mesh
{
	[Token(Token = "0x200000C")]
	public class Polygon
	{
		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> outside;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<List<Vector3>> holes;

		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 planeNormal;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rotation;

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x92AEB4", Offset = "0x92AEB4", VA = "0x92AEB4")]
		public Polygon()
		{
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0x92AFC4", Offset = "0x92AFC4", VA = "0x92AFC4")]
		public void CalcPlaneNormal()
		{
		}

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x92B018", Offset = "0x92B018", VA = "0x92B018")]
		public void CalcPlaneNormal(Vector3 hint)
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x92AC14", Offset = "0x92AC14", VA = "0x92AC14")]
		public void CalcRotation()
		{
		}
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x929B50", Offset = "0x929B50", VA = "0x929B50")]
	private static List<PolygonPoint> ConvertPoints(List<Vector3> points, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x929D2C", Offset = "0x929D2C", VA = "0x929D2C")]
	public static UnityEngine.Mesh CreateMesh(Polygon polygon)
	{
		return null;
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x92AD64", Offset = "0x92AD64", VA = "0x92AD64")]
	public static GameObject CreateGameObject(Polygon polygon, string name = "Polygon")
	{
		return null;
	}
}
[Token(Token = "0x200000D")]
public class GenericEventArgs<T> : EventArgs, IGenericEventArgs<T>
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T _value;

	[Token(Token = "0x17000003")]
	public T Value
	{
		[Token(Token = "0x6000034")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x6000035")]
	public GenericEventArgs(T value)
	{
	}
}
[Token(Token = "0x200000E")]
public interface IGenericEventArgs<T>
{
	[Token(Token = "0x17000004")]
	T Value
	{
		[Token(Token = "0x6000036")]
		get;
	}
}
[Token(Token = "0x200000F")]
public class animarpublico : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float tiempoSinCambio;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float offsetActual;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int indiceMaterial;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool subiendo;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] materiales;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x92B3D0", Offset = "0x92B3D0", VA = "0x92B3D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x92B428", Offset = "0x92B428", VA = "0x92B428")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x92B4E0", Offset = "0x92B4E0", VA = "0x92B4E0")]
	public animarpublico()
	{
	}
}
[Token(Token = "0x2000010")]
public class apagarCamaraScoreBoardPorTicks : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera miCamara;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int ticksApagado;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x92B4F0", Offset = "0x92B4F0", VA = "0x92B4F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x92B560", Offset = "0x92B560", VA = "0x92B560")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x92B5B0", Offset = "0x92B5B0", VA = "0x92B5B0")]
	public apagarCamaraScoreBoardPorTicks()
	{
	}
}
[Token(Token = "0x2000011")]
public class ApagarEnNolo : MonoBehaviour
{
	[Token(Token = "0x600003D")]
	[Address(RVA = "0x92B5B8", Offset = "0x92B5B8", VA = "0x92B5B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x92B5BC", Offset = "0x92B5BC", VA = "0x92B5BC")]
	public ApagarEnNolo()
	{
	}
}
[Token(Token = "0x2000012")]
public class ApagarGuantesAlPerderFoco : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer meshGuanteD;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer meshGuanteI;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool apagarGuanteFocus;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool guanteApagado;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool apagarGuanteOVRFocus;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SkinnedMeshRenderer porteroMesh;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x92B5C4", Offset = "0x92B5C4", VA = "0x92B5C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x92B5C8", Offset = "0x92B5C8", VA = "0x92B5C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x92B5CC", Offset = "0x92B5CC", VA = "0x92B5CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x92B8EC", Offset = "0x92B8EC", VA = "0x92B8EC")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x92B8FC", Offset = "0x92B8FC", VA = "0x92B8FC")]
	private void Focus()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x92B904", Offset = "0x92B904", VA = "0x92B904")]
	private void UnFocus()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x92B910", Offset = "0x92B910", VA = "0x92B910")]
	public ApagarGuantesAlPerderFoco()
	{
	}
}
[Token(Token = "0x2000013")]
public class ApagarSegunParametro : MonoBehaviour
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool MostrarEnModoSinHistoria;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool MostrarEnArcade;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool MostrarEnSimulador;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x92B918", Offset = "0x92B918", VA = "0x92B918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x92B91C", Offset = "0x92B91C", VA = "0x92B91C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x92B920", Offset = "0x92B920", VA = "0x92B920")]
	public ApagarSegunParametro()
	{
	}
}
[Token(Token = "0x2000014")]
public class asignarTexturaManual : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material newMaterialRef;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x92B928", Offset = "0x92B928", VA = "0x92B928")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x92B984", Offset = "0x92B984", VA = "0x92B984")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x92B988", Offset = "0x92B988", VA = "0x92B988")]
	public asignarTexturaManual()
	{
	}
}
[Token(Token = "0x2000015")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x92B990", Offset = "0x92B990", VA = "0x92B990")]
	public void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x92BA9C", Offset = "0x92BA9C", VA = "0x92BA9C")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x92BAD0", Offset = "0x92BAD0", VA = "0x92BAD0")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x92BB9C", Offset = "0x92BB9C", VA = "0x92BB9C")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x92BC68", Offset = "0x92BC68", VA = "0x92BC68")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x2000016")]
[AddComponentMenu("Camera-Control/Smooth Mouse Orbit - Unluck Software")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x92BC84", Offset = "0x92BC84", VA = "0x92BC84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x92C180", Offset = "0x92C180", VA = "0x92C180")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x92BC88", Offset = "0x92BC88", VA = "0x92BC88")]
	public void Init()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x92C184", Offset = "0x92C184", VA = "0x92C184")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x92C65C", Offset = "0x92C65C", VA = "0x92C65C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x92C698", Offset = "0x92C698", VA = "0x92C698")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000017")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockController _spawner;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 _wayPoint;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _dived;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _stuckCounter;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _damping;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _soar;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool _landing;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _targetSpeed;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool _move;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _avoidValue;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _avoidDistance;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool _avoid;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x92C6D4", Offset = "0x92C6D4", VA = "0x92C6D4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x92CE0C", Offset = "0x92CE0C", VA = "0x92CE0C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x92D51C", Offset = "0x92D51C", VA = "0x92D51C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x92D550", Offset = "0x92D550", VA = "0x92D550")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x92C7B8", Offset = "0x92C7B8", VA = "0x92C7B8")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x92CAB4", Offset = "0x92CAB4", VA = "0x92CAB4")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x92CDB8", Offset = "0x92CDB8", VA = "0x92CDB8")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x92C9B8", Offset = "0x92C9B8", VA = "0x92C9B8")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x92CE68", Offset = "0x92CE68", VA = "0x92CE68")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x92CEC0", Offset = "0x92CEC0", VA = "0x92CEC0")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x92CFD0", Offset = "0x92CFD0", VA = "0x92CFD0")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x92D840", Offset = "0x92D840", VA = "0x92D840")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x92D2C4", Offset = "0x92D2C4", VA = "0x92D2C4")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x92C910", Offset = "0x92C910", VA = "0x92C910")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x92DDBC", Offset = "0x92DDBC", VA = "0x92DDBC")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x92D5FC", Offset = "0x92D5FC", VA = "0x92D5FC")]
	public void Flap()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x92C9F4", Offset = "0x92C9F4", VA = "0x92C9F4")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x92DE7C", Offset = "0x92DE7C", VA = "0x92DE7C")]
	public void Soar()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x92DF0C", Offset = "0x92DF0C", VA = "0x92DF0C")]
	public void Dive()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x92E2A8", Offset = "0x92E2A8", VA = "0x92E2A8")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x92E5EC", Offset = "0x92E5EC", VA = "0x92E5EC")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x2000018")]
[RequireComponent(typeof(AudioSource))]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x92E610", Offset = "0x92E610", VA = "0x92E610")]
	public void Start()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x92E728", Offset = "0x92E728", VA = "0x92E728")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x92E92C", Offset = "0x92E92C", VA = "0x92E92C")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x92EA28", Offset = "0x92EA28", VA = "0x92EA28")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x2000019")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x92EA4C", Offset = "0x92EA4C", VA = "0x92EA4C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x92EB44", Offset = "0x92EB44", VA = "0x92EB44")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x92EDF8", Offset = "0x92EDF8", VA = "0x92EDF8")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x92EE48", Offset = "0x92EE48", VA = "0x92EE48")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x92EF50", Offset = "0x92EF50", VA = "0x92EF50")]
	public void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x92EC98", Offset = "0x92EC98", VA = "0x92EC98")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x92EFB4", Offset = "0x92EFB4", VA = "0x92EFB4")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x92F044", Offset = "0x92F044", VA = "0x92F044")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x92D6D0", Offset = "0x92D6D0", VA = "0x92D6D0")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x92F22C", Offset = "0x92F22C", VA = "0x92F22C")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x92F338", Offset = "0x92F338", VA = "0x92F338")]
	public FlockController()
	{
	}
}
[Token(Token = "0x200001A")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x92F49C", Offset = "0x92F49C", VA = "0x92F49C")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x92F56C", Offset = "0x92F56C", VA = "0x92F56C")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x92F620", Offset = "0x92F620", VA = "0x92F620")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x92F764", Offset = "0x92F764", VA = "0x92F764")]
	private void Invoker()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x92F7EC", Offset = "0x92F7EC", VA = "0x92F7EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x92F860", Offset = "0x92F860", VA = "0x92F860")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x92F8AC", Offset = "0x92F8AC", VA = "0x92F8AC")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x200001B")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x92F8C4", Offset = "0x92F8C4", VA = "0x92F8C4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x92F9BC", Offset = "0x92F9BC", VA = "0x92F9BC")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x92F9D8", Offset = "0x92F9D8", VA = "0x92F9D8")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x200001C")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x92F9E8", Offset = "0x92F9E8", VA = "0x92F9E8")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x92FF60", Offset = "0x92FF60", VA = "0x92FF60")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x200001D")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x200001E")]
	[CompilerGenerated]
	private sealed class <GetFlockChild>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000092")]
			[Address(RVA = "0x9317E8", Offset = "0x9317E8", VA = "0x9317E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000094")]
			[Address(RVA = "0x931830", Offset = "0x931830", VA = "0x931830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008F")]
		[Address(RVA = "0x930B54", Offset = "0x930B54", VA = "0x930B54")]
		[DebuggerHidden]
		public <GetFlockChild>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000090")]
		[Address(RVA = "0x9310B4", Offset = "0x9310B4", VA = "0x9310B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0x9310B8", Offset = "0x9310B8", VA = "0x9310B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x9317F0", Offset = "0x9317F0", VA = "0x9317F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockChild landingChild;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool landing;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LandingSpotController _controller;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x92FF70", Offset = "0x92FF70", VA = "0x92FF70")]
	public void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x930134", Offset = "0x930134", VA = "0x930134")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x930474", Offset = "0x930474", VA = "0x930474")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x930990", Offset = "0x930990", VA = "0x930990")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x9300AC", Offset = "0x9300AC", VA = "0x9300AC")]
	[IteratorStateMachine(typeof(<GetFlockChild>d__11))]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x930B7C", Offset = "0x930B7C", VA = "0x930B7C")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x930E18", Offset = "0x930E18", VA = "0x930E18")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x9310AC", Offset = "0x9310AC", VA = "0x9310AC")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x200001F")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	[CompilerGenerated]
	private sealed class <InstantLandOnStart>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009F")]
			[Address(RVA = "0x931E64", Offset = "0x931E64", VA = "0x931E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0x931EAC", Offset = "0x931EAC", VA = "0x931EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x931C4C", Offset = "0x931C4C", VA = "0x931C4C")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x931CE0", Offset = "0x931CE0", VA = "0x931CE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x931CE4", Offset = "0x931CE4", VA = "0x931CE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x931E6C", Offset = "0x931E6C", VA = "0x931E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000021")]
	[CompilerGenerated]
	private sealed class <InstantLand>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A5")]
			[Address(RVA = "0x932038", Offset = "0x932038", VA = "0x932038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A7")]
			[Address(RVA = "0x932080", Offset = "0x932080", VA = "0x932080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x931C74", Offset = "0x931C74", VA = "0x931C74")]
		[DebuggerHidden]
		public <InstantLand>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x931EB4", Offset = "0x931EB4", VA = "0x931EB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x931EB8", Offset = "0x931EB8", VA = "0x931EB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x932040", Offset = "0x932040", VA = "0x932040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x931838", Offset = "0x931838", VA = "0x931838")]
	public void Start()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x92F758", Offset = "0x92F758", VA = "0x92F758")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x931B04", Offset = "0x931B04", VA = "0x931B04")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x92FDBC", Offset = "0x92FDBC", VA = "0x92FDBC")]
	public void LandAll()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x931A80", Offset = "0x931A80", VA = "0x931A80")]
	[IteratorStateMachine(typeof(<InstantLandOnStart>d__21))]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x92FEDC", Offset = "0x92FEDC", VA = "0x92FEDC")]
	[IteratorStateMachine(typeof(<InstantLand>d__22))]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x931C9C", Offset = "0x931C9C", VA = "0x931C9C")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x2000022")]
public class HBAOControl : MonoBehaviour
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HBAO hbao;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider aoRadiusSlider;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x932088", Offset = "0x932088", VA = "0x932088")]
	public void ToggleShowAO()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x9320C0", Offset = "0x9320C0", VA = "0x9320C0")]
	public void UpdateAoRadius()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x932158", Offset = "0x932158", VA = "0x932158")]
	public HBAOControl()
	{
	}
}
[Token(Token = "0x2000023")]
public class RotateObject : MonoBehaviour
{
	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x932160", Offset = "0x932160", VA = "0x932160")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x932164", Offset = "0x932164", VA = "0x932164")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x9321FC", Offset = "0x9321FC", VA = "0x9321FC")]
	public RotateObject()
	{
	}
}
[Token(Token = "0x2000024")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("Image Effects/HBAO")]
[ExecuteInEditMode]
public class HBAO : MonoBehaviour
{
	[Token(Token = "0x2000025")]
	public enum Preset
	{
		[Token(Token = "0x40000F5")]
		FastestPerformance,
		[Token(Token = "0x40000F6")]
		FastPerformance,
		[Token(Token = "0x40000F7")]
		Normal,
		[Token(Token = "0x40000F8")]
		HighQuality,
		[Token(Token = "0x40000F9")]
		HighestQuality,
		[Token(Token = "0x40000FA")]
		Custom
	}

	[Token(Token = "0x2000026")]
	public enum Quality
	{
		[Token(Token = "0x40000FC")]
		Lowest,
		[Token(Token = "0x40000FD")]
		Low,
		[Token(Token = "0x40000FE")]
		Medium,
		[Token(Token = "0x40000FF")]
		High,
		[Token(Token = "0x4000100")]
		Highest
	}

	[Token(Token = "0x2000027")]
	public enum Resolution
	{
		[Token(Token = "0x4000102")]
		Full,
		[Token(Token = "0x4000103")]
		Half
	}

	[Token(Token = "0x2000028")]
	public enum DisplayMode
	{
		[Token(Token = "0x4000105")]
		Normal,
		[Token(Token = "0x4000106")]
		AOOnly,
		[Token(Token = "0x4000107")]
		ColorBleedingOnly,
		[Token(Token = "0x4000108")]
		SplitWithoutAOAndWithAO,
		[Token(Token = "0x4000109")]
		SplitWithAOAndAOOnly,
		[Token(Token = "0x400010A")]
		SplitWithoutAOAndAOOnly
	}

	[Token(Token = "0x2000029")]
	public enum Blur
	{
		[Token(Token = "0x400010C")]
		None,
		[Token(Token = "0x400010D")]
		Narrow,
		[Token(Token = "0x400010E")]
		Medium,
		[Token(Token = "0x400010F")]
		Wide,
		[Token(Token = "0x4000110")]
		ExtraWide
	}

	[Token(Token = "0x200002A")]
	public enum NoiseType
	{
		[Token(Token = "0x4000112")]
		Random,
		[Token(Token = "0x4000113")]
		Dither
	}

	[Token(Token = "0x200002B")]
	public enum PerPixelNormals
	{
		[Token(Token = "0x4000115")]
		GBuffer,
		[Token(Token = "0x4000116")]
		Camera
	}

	[Serializable]
	[Token(Token = "0x200002C")]
	public struct Presets
	{
		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Preset preset;

		[Token(Token = "0x17000010")]
		[SerializeField]
		public static Presets defaultPresets
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0x933840", Offset = "0x933840", VA = "0x933840")]
			get
			{
				return default(Presets);
			}
		}
	}

	[Serializable]
	[Token(Token = "0x200002D")]
	public struct GeneralSettings
	{
		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Space(6f)]
		[Tooltip("The quality of the AO.")]
		public Quality quality;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Tooltip("The resolution at which the AO is calculated.")]
		public Resolution resolution;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Space(10f)]
		[Tooltip("The type of noise to use.")]
		public NoiseType noiseType;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Space(10f)]
		[Tooltip("The way the AO is displayed on screen.")]
		public DisplayMode displayMode;

		[Token(Token = "0x17000011")]
		[SerializeField]
		public static GeneralSettings defaultSettings
		{
			[Token(Token = "0x60000C7")]
			[Address(RVA = "0x9336D4", Offset = "0x9336D4", VA = "0x9336D4")]
			get
			{
				return default(GeneralSettings);
			}
		}
	}

	[Serializable]
	[Token(Token = "0x200002E")]
	public struct AOSettings
	{
		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Space(6f)]
		[Tooltip("Eye-space AO radius: this is the distance outside which occluders are ignored.")]
		[Range(0f, 2f)]
		public float radius;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Tooltip("Maximum radius in pixels: this prevents the radius to grow too much with close-up object and impact on performances.")]
		[Range(32f, 256f)]
		public float maxRadiusPixels;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Tooltip("For low-tessellated geometry, occlusion variations tend to appear at creases and ridges, which betray the underlying tessellation. To remove these artifacts, we use an angle bias parameter which restricts the hemisphere.")]
		[Range(0f, 0.5f)]
		public float bias;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Tooltip("This value allows to scale up the ambient occlusion values.")]
		[Range(0f, 10f)]
		public float intensity;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("This value allows to attenuate ambient occlusion depending on final color luminance.")]
		[Range(0f, 1f)]
		public float luminanceInfluence;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1500f)]
		[Tooltip("The max distance to display AO.")]
		public float maxDistance;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The distance before max distance at which AO start to decrease.")]
		[Range(0f, 500f)]
		public float distanceFalloff;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("The type of per pixel normals to use.")]
		[Space(10f)]
		public PerPixelNormals perPixelNormals;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(10f)]
		[Tooltip("This setting allow you to set the base color if the AO, the alpha channel value is unused.")]
		public Color baseColor;

		[Token(Token = "0x17000012")]
		[SerializeField]
		public static AOSettings defaultSettings
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0x9336E0", Offset = "0x9336E0", VA = "0x9336E0")]
			get
			{
				return default(AOSettings);
			}
		}
	}

	[Serializable]
	[Token(Token = "0x200002F")]
	public struct ColorBleedingSettings
	{
		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Space(6f)]
		public bool enabled;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Tooltip("This value allows to control the saturation of the color bleeding.")]
		[Space(10f)]
		[Range(0f, 4f)]
		public float saturation;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Range(0f, 32f)]
		[Tooltip("This value allows to scale the contribution of the color bleeding samples.")]
		public float albedoMultiplier;

		[Token(Token = "0x17000013")]
		[SerializeField]
		public static ColorBleedingSettings defaultSettings
		{
			[Token(Token = "0x60000C9")]
			[Address(RVA = "0x933710", Offset = "0x933710", VA = "0x933710")]
			get
			{
				return default(ColorBleedingSettings);
			}
		}
	}

	[Serializable]
	[Token(Token = "0x2000030")]
	public struct BlurSettings
	{
		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Space(6f)]
		[Tooltip("The type of blur to use.")]
		public Blur amount;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Tooltip("This parameter controls the depth-dependent weight of the bilateral filter, to avoid bleeding across edges. A zero sharpness is a pure Gaussian blur. Increasing the blur sharpness removes bleeding by using lower weights for samples with large depth delta from the current pixel.")]
		[Range(0f, 16f)]
		[Space(10f)]
		public float sharpness;

		[Token(Token = "0x17000014")]
		[SerializeField]
		public static BlurSettings defaultSettings
		{
			[Token(Token = "0x60000CA")]
			[Address(RVA = "0x93371C", Offset = "0x93371C", VA = "0x93371C")]
			get
			{
				return default(BlurSettings);
			}
		}
	}

	[Token(Token = "0x2000031")]
	[AttributeUsage(AttributeTargets.Field)]
	public class SettingsGroup : Attribute
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x933848", Offset = "0x933848", VA = "0x933848")]
		public SettingsGroup()
		{
		}
	}

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D noiseTex;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader hbaoShader;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SettingsGroup]
	[SerializeField]
	private Presets m_Presets;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SettingsGroup]
	[SerializeField]
	private GeneralSettings m_GeneralSettings;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SettingsGroup]
	[SerializeField]
	private AOSettings m_AOSettings;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SettingsGroup]
	[SerializeField]
	private ColorBleedingSettings m_ColorBleedingSettings;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[SettingsGroup]
	private BlurSettings m_BlurSettings;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quality _quality;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private NoiseType _noiseType;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _radius;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _maxRadiusPixels;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _bias;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _intensity;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _luminanceInfluence;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _maxDistance;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _distanceFalloff;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PerPixelNormals _perPixelNormals;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color _aoBaseColor;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _colorBleedingEnabled;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float _colorBleedSaturation;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _albedoMultiplier;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Blur _blurAmount;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _blurSharpness;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private RenderingPath _renderingPath;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _orthographic;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] _hbaoShaderKeywords;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Material _hbaoMaterial;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Camera _hbaoCamera;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int[] _numSampleDirections;

	[Token(Token = "0x1700000B")]
	public Presets presets
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x932204", Offset = "0x932204", VA = "0x932204")]
		get
		{
			return default(Presets);
		}
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x93220C", Offset = "0x93220C", VA = "0x93220C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public GeneralSettings generalSettings
	{
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x932214", Offset = "0x932214", VA = "0x932214")]
		get
		{
			return default(GeneralSettings);
		}
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x932224", Offset = "0x932224", VA = "0x932224")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public AOSettings aoSettings
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x932230", Offset = "0x932230", VA = "0x932230")]
		get
		{
			return default(AOSettings);
		}
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x932248", Offset = "0x932248", VA = "0x932248")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public ColorBleedingSettings colorBleedingSettings
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x932260", Offset = "0x932260", VA = "0x932260")]
		get
		{
			return default(ColorBleedingSettings);
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x932270", Offset = "0x932270", VA = "0x932270")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public BlurSettings blurSettings
	{
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x93227C", Offset = "0x93227C", VA = "0x93227C")]
		get
		{
			return default(BlurSettings);
		}
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x932284", Offset = "0x932284", VA = "0x932284")]
		set
		{
		}
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x93228C", Offset = "0x93228C", VA = "0x93228C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x932580", Offset = "0x932580", VA = "0x932580")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x932658", Offset = "0x932658", VA = "0x932658")]
	[ImageEffectOpaque]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x93311C", Offset = "0x93311C", VA = "0x93311C")]
	private void RenderHBAO(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x93246C", Offset = "0x93246C", VA = "0x93246C")]
	private void CreateMaterial()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x932A88", Offset = "0x932A88", VA = "0x932A88")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x933398", Offset = "0x933398", VA = "0x933398")]
	private int GetDownsampling()
	{
		return default(int);
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x9333B4", Offset = "0x9333B4", VA = "0x9333B4")]
	private int GetAoPass()
	{
		return default(int);
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x9333C8", Offset = "0x9333C8", VA = "0x9333C8")]
	private int GetBlurXPass()
	{
		return default(int);
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x9333EC", Offset = "0x9333EC", VA = "0x9333EC")]
	private int GetBlurYPass()
	{
		return default(int);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x933410", Offset = "0x933410", VA = "0x933410")]
	private int GetFinalPass()
	{
		return default(int);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x933430", Offset = "0x933430", VA = "0x933430")]
	private void CreateRandomTexture(int size)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x9335E0", Offset = "0x9335E0", VA = "0x9335E0")]
	public void ApplyPreset(Preset preset)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x933728", Offset = "0x933728", VA = "0x933728")]
	public HBAO()
	{
	}
}
[Token(Token = "0x2000032")]
public class BlinkBoton : MonoBehaviour
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer meshBoton;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool enBlink;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x933850", Offset = "0x933850", VA = "0x933850")]
	public void Blink(bool activar)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x9338A4", Offset = "0x9338A4", VA = "0x9338A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x93391C", Offset = "0x93391C", VA = "0x93391C")]
	public BlinkBoton()
	{
	}
}
[Token(Token = "0x2000033")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/Anomaly")]
public class CameraFilterPack_3D_Anomaly : MonoBehaviour
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.5f, 0.99f)]
	public float Anomaly_Near;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Anomaly_Far;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 2f)]
	public float Intensity;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float AnomalyWithoutObject;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0.1f, 1f)]
	public float Anomaly_Distortion;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(4f, 64f)]
	public float Anomaly_Distortion_Size;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-4f, 8f)]
	public float Anomaly_Intensity;

	[Token(Token = "0x17000015")]
	private Material material
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x933924", Offset = "0x933924", VA = "0x933924")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x9339F8", Offset = "0x9339F8", VA = "0x9339F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x933A78", Offset = "0x933A78", VA = "0x933A78")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x933DF0", Offset = "0x933DF0", VA = "0x933DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x933DF4", Offset = "0x933DF4", VA = "0x933DF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x933E80", Offset = "0x933E80", VA = "0x933E80")]
	public CameraFilterPack_3D_Anomaly()
	{
	}
}
[Token(Token = "0x2000034")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/Binary")]
public class CameraFilterPack_3D_Binary : MonoBehaviour
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-5f, 5f)]
	public float LightIntensity;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 8f)]
	public float MatrixSize;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-4f, 4f)]
	public float MatrixSpeed;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float FadeFromBinary;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color _MatrixColor;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x17000016")]
	private Material material
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x933EA4", Offset = "0x933EA4", VA = "0x933EA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x933F78", Offset = "0x933F78", VA = "0x933F78")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x93406C", Offset = "0x93406C", VA = "0x93406C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x934440", Offset = "0x934440", VA = "0x934440")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x934444", Offset = "0x934444", VA = "0x934444")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x9344D0", Offset = "0x9344D0", VA = "0x9344D0")]
	public CameraFilterPack_3D_Binary()
	{
	}
}
[Token(Token = "0x2000035")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/BlackHole")]
public class CameraFilterPack_3D_BlackHole : MonoBehaviour
{
	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.99f, 0.99f)]
	public float _Distance;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float _Size;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-2f, 2f)]
	public float DistortionLevel;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float DistortionSize;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool AutoAnimatedNear;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-5f, 5f)]
	public float AutoAnimatedNearSpeed;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x17000017")]
	private Material material
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x934504", Offset = "0x934504", VA = "0x934504")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x9345D8", Offset = "0x9345D8", VA = "0x9345D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x934658", Offset = "0x934658", VA = "0x934658")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x9349DC", Offset = "0x9349DC", VA = "0x9349DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x9349E0", Offset = "0x9349E0", VA = "0x9349E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x934A6C", Offset = "0x934A6C", VA = "0x934A6C")]
	public CameraFilterPack_3D_BlackHole()
	{
	}
}
[Token(Token = "0x2000036")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/Computer")]
public class CameraFilterPack_3D_Computer : MonoBehaviour
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-5f, 5f)]
	public float LightIntensity;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 8f)]
	public float MatrixSize;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-4f, 4f)]
	public float MatrixSpeed;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color _MatrixColor;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x17000018")]
	private Material material
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x934A90", Offset = "0x934A90", VA = "0x934A90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x934B64", Offset = "0x934B64", VA = "0x934B64")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x934C58", Offset = "0x934C58", VA = "0x934C58")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x934FFC", Offset = "0x934FFC", VA = "0x934FFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x935000", Offset = "0x935000", VA = "0x935000")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x93508C", Offset = "0x93508C", VA = "0x93508C")]
	public CameraFilterPack_3D_Computer()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/Distortion")]
public class CameraFilterPack_3D_Distortion : MonoBehaviour
{
	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.99f, 0.99f)]
	public float _Distance;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.5f)]
	public float _Size;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	public float DistortionLevel;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0.1f, 10f)]
	public float DistortionSize;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-2f, 4f)]
	public float LightIntensity;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool AutoAnimatedNear;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-5f, 5f)]
	public float AutoAnimatedNearSpeed;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x17000019")]
	private Material material
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x9350B4", Offset = "0x9350B4", VA = "0x9350B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x935188", Offset = "0x935188", VA = "0x935188")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x935208", Offset = "0x935208", VA = "0x935208")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x9355D8", Offset = "0x9355D8", VA = "0x9355D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x9355DC", Offset = "0x9355DC", VA = "0x9355DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x935668", Offset = "0x935668", VA = "0x935668")]
	public CameraFilterPack_3D_Distortion()
	{
	}
}
[Token(Token = "0x2000038")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/Fog_Smoke")]
public class CameraFilterPack_3D_Fog_Smoke : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-5f, 5f)]
	public float LightIntensity;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 2f)]
	public float MatrixSize;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-4f, 4f)]
	public float MatrixSpeed;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color _MatrixColor;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x1700001A")]
	private Material material
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x9356A0", Offset = "0x9356A0", VA = "0x9356A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x935774", Offset = "0x935774", VA = "0x935774")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x935868", Offset = "0x935868", VA = "0x935868")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x935C0C", Offset = "0x935C0C", VA = "0x935C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x935C10", Offset = "0x935C10", VA = "0x935C10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x935C9C", Offset = "0x935C9C", VA = "0x935C9C")]
	public CameraFilterPack_3D_Fog_Smoke()
	{
	}
}
[Token(Token = "0x2000039")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/Ghost")]
public class CameraFilterPack_3D_Ghost : MonoBehaviour
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.5f, 0.99f)]
	public float Ghost_Near;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Ghost_Far;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 2f)]
	public float Intensity;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float GhostWithoutObject;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-1f, 1f)]
	public float GhostPosX;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-1f, 1f)]
	public float GhostPosY;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0.1f, 8f)]
	public float GhostFade2;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(-1f, 1f)]
	public float GhostFade;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0.5f, 1.5f)]
	public float GhostSize;

	[Token(Token = "0x1700001B")]
	private Material material
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x935CC0", Offset = "0x935CC0", VA = "0x935CC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x935D94", Offset = "0x935D94", VA = "0x935D94")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x935E14", Offset = "0x935E14", VA = "0x935E14")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x9361EC", Offset = "0x9361EC", VA = "0x9361EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x9361F0", Offset = "0x9361F0", VA = "0x9361F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x93627C", Offset = "0x93627C", VA = "0x93627C")]
	public CameraFilterPack_3D_Ghost()
	{
	}
}
[Token(Token = "0x200003A")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/Inverse")]
public class CameraFilterPack_3D_Inverse : MonoBehaviour
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.99f, 0.99f)]
	public float _Distance;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.5f)]
	public float _Size;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float LightIntensity;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool AutoAnimatedNear;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-5f, 5f)]
	public float AutoAnimatedNearSpeed;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x1700001C")]
	private Material material
	{
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x9362B0", Offset = "0x9362B0", VA = "0x9362B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x936384", Offset = "0x936384", VA = "0x936384")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x936404", Offset = "0x936404", VA = "0x936404")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x936758", Offset = "0x936758", VA = "0x936758")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x93675C", Offset = "0x93675C", VA = "0x93675C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x9367E8", Offset = "0x9367E8", VA = "0x9367E8")]
	public CameraFilterPack_3D_Inverse()
	{
	}
}
[Token(Token = "0x200003B")]
[AddComponentMenu("Camera Filter Pack/3D/Matrix")]
[ExecuteInEditMode]
public class CameraFilterPack_3D_Matrix : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-5f, 5f)]
	public float LightIntensity;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 6f)]
	public float MatrixSize;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-4f, 4f)]
	public float MatrixSpeed;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color _MatrixColor;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x1700001D")]
	private Material material
	{
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x93680C", Offset = "0x93680C", VA = "0x93680C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x9368E0", Offset = "0x9368E0", VA = "0x9368E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x9369D4", Offset = "0x9369D4", VA = "0x9369D4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x936D78", Offset = "0x936D78", VA = "0x936D78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x936D7C", Offset = "0x936D7C", VA = "0x936D7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x936E08", Offset = "0x936E08", VA = "0x936E08")]
	public CameraFilterPack_3D_Matrix()
	{
	}
}
[Token(Token = "0x200003C")]
[AddComponentMenu("Camera Filter Pack/3D/Mirror")]
[ExecuteInEditMode]
public class CameraFilterPack_3D_Mirror : MonoBehaviour
{
	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.99f, 0.99f)]
	public float _Distance;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.5f)]
	public float _Size;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 2f)]
	public float Lightning;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool AutoAnimatedNear;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-5f, 5f)]
	public float AutoAnimatedNearSpeed;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x1700001E")]
	private Material material
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x936E2C", Offset = "0x936E2C", VA = "0x936E2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x936F00", Offset = "0x936F00", VA = "0x936F00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x936F80", Offset = "0x936F80", VA = "0x936F80")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x937304", Offset = "0x937304", VA = "0x937304")]
	private void Update()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x937308", Offset = "0x937308", VA = "0x937308")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x937394", Offset = "0x937394", VA = "0x937394")]
	public CameraFilterPack_3D_Mirror()
	{
	}
}
[Token(Token = "0x200003D")]
[AddComponentMenu("Camera Filter Pack/3D/Myst")]
[ExecuteInEditMode]
public class CameraFilterPack_3D_Myst : MonoBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.99f, 0.99f)]
	public float _Distance;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.5f)]
	public float _Size;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	public float DistortionLevel;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0.1f, 10f)]
	public float DistortionSize;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-2f, 4f)]
	public float LightIntensity;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool AutoAnimatedNear;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-5f, 5f)]
	public float AutoAnimatedNearSpeed;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D Texture2;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x1700001F")]
	private Material material
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x9373C0", Offset = "0x9373C0", VA = "0x9373C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x937494", Offset = "0x937494", VA = "0x937494")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x937588", Offset = "0x937588", VA = "0x937588")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x937988", Offset = "0x937988", VA = "0x937988")]
	private void Update()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x93798C", Offset = "0x93798C", VA = "0x93798C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x937A18", Offset = "0x937A18", VA = "0x937A18")]
	public CameraFilterPack_3D_Myst()
	{
	}
}
[Token(Token = "0x200003E")]
[AddComponentMenu("Camera Filter Pack/3D/Scan_Scene")]
[ExecuteInEditMode]
public class CameraFilterPack_3D_Scan_Scene : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 0.99f)]
	public float _Distance;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.1f)]
	public float _Size;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool AutoAnimatedNear;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-5f, 5f)]
	public float AutoAnimatedNearSpeed;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color ScanColor;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x17000020")]
	private Material material
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x938A50", Offset = "0x938A50", VA = "0x938A50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x938B24", Offset = "0x938B24", VA = "0x938B24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x938BA4", Offset = "0x938BA4", VA = "0x938BA4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x938F28", Offset = "0x938F28", VA = "0x938F28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x938F2C", Offset = "0x938F2C", VA = "0x938F2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x938FB8", Offset = "0x938FB8", VA = "0x938FB8")]
	public CameraFilterPack_3D_Scan_Scene()
	{
	}
}
[Token(Token = "0x200003F")]
[AddComponentMenu("Camera Filter Pack/3D/Shield")]
[ExecuteInEditMode]
public class CameraFilterPack_3D_Shield : MonoBehaviour
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.99f, 0.99f)]
	public float _Distance;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.5f)]
	public float _Size;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float _FadeShield;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-0.2f, 0.2f)]
	public float LightIntensity;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool AutoAnimatedNear;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-5f, 5f)]
	public float AutoAnimatedNearSpeed;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 10f)]
	public float Speed_X;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0f, 1f)]
	public float Speed_Y;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(0f, 10f)]
	public float Intensity;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x17000021")]
	private Material material
	{
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x938FF0", Offset = "0x938FF0", VA = "0x938FF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x9390C4", Offset = "0x9390C4", VA = "0x9390C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x939144", Offset = "0x939144", VA = "0x939144")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x939594", Offset = "0x939594", VA = "0x939594")]
	private void Update()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x939598", Offset = "0x939598", VA = "0x939598")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x939624", Offset = "0x939624", VA = "0x939624")]
	public CameraFilterPack_3D_Shield()
	{
	}
}
[Token(Token = "0x2000040")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/3D/Snow")]
public class CameraFilterPack_3D_Snow : MonoBehaviour
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.5f, 0.99f)]
	public float Snow_Near;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Snow_Far;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 2f)]
	public float Intensity;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0.4f, 2f)]
	public float Size;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 0.5f)]
	public float Speed;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 1f)]
	public float SnowWithoutObject;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	public float Myst;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color Myst_Color;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Texture2D Texture2;

	[Token(Token = "0x17000022")]
	private Material material
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x939664", Offset = "0x939664", VA = "0x939664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x939738", Offset = "0x939738", VA = "0x939738")]
	private void Start()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x93982C", Offset = "0x93982C", VA = "0x93982C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x939C40", Offset = "0x939C40", VA = "0x939C40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x939C44", Offset = "0x939C44", VA = "0x939C44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x939CD0", Offset = "0x939CD0", VA = "0x939CD0")]
	public CameraFilterPack_3D_Snow()
	{
	}
}
[Token(Token = "0x2000041")]
[AddComponentMenu("Camera Filter Pack/AAA/Blood")]
[ExecuteInEditMode]
public class CameraFilterPack_AAA_Blood : MonoBehaviour
{
	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 128f)]
	public float Blood1;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 128f)]
	public float Blood2;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 128f)]
	public float Blood3;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 128f)]
	public float Blood4;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.004f)]
	public float LightReflect;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D Texture2;

	[Token(Token = "0x17000023")]
	private Material material
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x939D00", Offset = "0x939D00", VA = "0x939D00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x939DD4", Offset = "0x939DD4", VA = "0x939DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x939EC8", Offset = "0x939EC8", VA = "0x939EC8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x93A138", Offset = "0x93A138", VA = "0x93A138")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x93A13C", Offset = "0x93A13C", VA = "0x93A13C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x93A1C8", Offset = "0x93A1C8", VA = "0x93A1C8")]
	public CameraFilterPack_AAA_Blood()
	{
	}
}
[Token(Token = "0x2000042")]
[AddComponentMenu("Camera Filter Pack/AAA/Blood On Screen")]
[ExecuteInEditMode]
public class CameraFilterPack_AAA_BloodOnScreen : MonoBehaviour
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.02f, 1.6f)]
	public float Blood_On_Screen;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color Blood_Color;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 2f)]
	public float Blood_Intensify;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 2f)]
	public float Blood_Darkness;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Blood_Distortion_Speed;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Blood_Fade;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D Texture2;

	[Token(Token = "0x17000024")]
	private Material material
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x93A1E4", Offset = "0x93A1E4", VA = "0x93A1E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x93A2B8", Offset = "0x93A2B8", VA = "0x93A2B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x93A3AC", Offset = "0x93A3AC", VA = "0x93A3AC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x93A6AC", Offset = "0x93A6AC", VA = "0x93A6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x93A6B0", Offset = "0x93A6B0", VA = "0x93A6B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x93A73C", Offset = "0x93A73C", VA = "0x93A73C")]
	public CameraFilterPack_AAA_BloodOnScreen()
	{
	}
}
[Token(Token = "0x2000043")]
[AddComponentMenu("Camera Filter Pack/AAA/Blood_Hit")]
[ExecuteInEditMode]
public class CameraFilterPack_AAA_Blood_Hit : MonoBehaviour
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float Hit_Left;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float Hit_Up;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float Hit_Right;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float Hit_Down;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float Blood_Hit_Left;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float Blood_Hit_Up;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float Blood_Hit_Right;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Blood_Hit_Down;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Hit_Full;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Blood_Hit_Full_1;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Blood_Hit_Full_2;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Blood_Hit_Full_3;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float LightReflect;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material SCMaterial;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D Texture2;

	[Token(Token = "0x17000025")]
	private Material material
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x93A764", Offset = "0x93A764", VA = "0x93A764")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x93A838", Offset = "0x93A838", VA = "0x93A838")]
	private void Start()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x93A92C", Offset = "0x93A92C", VA = "0x93A92C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x93ADC8", Offset = "0x93ADC8", VA = "0x93ADC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x93ADCC", Offset = "0x93ADCC", VA = "0x93ADCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x93AE58", Offset = "0x93AE58", VA = "0x93AE58")]
	public CameraFilterPack_AAA_Blood_Hit()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/AAA/Blood_Plus")]
public class CameraFilterPack_AAA_Blood_Plus : MonoBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float Blood_1;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float Blood_2;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float Blood_3;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float Blood_4;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float Blood_5;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float Blood_6;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float Blood_7;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Blood_8;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Blood_9;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Blood_10;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Blood_11;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Blood_12;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float LightReflect;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material SCMaterial;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D Texture2;

	[Token(Token = "0x17000026")]
	private Material material
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x93AE70", Offset = "0x93AE70", VA = "0x93AE70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x93AF44", Offset = "0x93AF44", VA = "0x93AF44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x93B038", Offset = "0x93B038", VA = "0x93B038")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x93B4D4", Offset = "0x93B4D4", VA = "0x93B4D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x93B4D8", Offset = "0x93B4D8", VA = "0x93B4D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x93B564", Offset = "0x93B564", VA = "0x93B564")]
	public CameraFilterPack_AAA_Blood_Plus()
	{
	}
}
[Token(Token = "0x2000045")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/AAA/Super Computer")]
public class CameraFilterPack_AAA_SuperComputer : MonoBehaviour
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float _AlphaHexa;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float TimeX;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-20f, 20f)]
	public float ShapeFormula;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 6f)]
	public float Shape;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-4f, 4f)]
	public float _BorderSize;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color _BorderColor;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _SpotSize;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 center;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Radius;

	[Token(Token = "0x17000027")]
	private Material material
	{
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x93B57C", Offset = "0x93B57C", VA = "0x93B57C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x93B650", Offset = "0x93B650", VA = "0x93B650")]
	private void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x93B6D0", Offset = "0x93B6D0", VA = "0x93B6D0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x93BA54", Offset = "0x93BA54", VA = "0x93BA54")]
	private void Update()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x93BA58", Offset = "0x93BA58", VA = "0x93BA58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x93BAE4", Offset = "0x93BAE4", VA = "0x93BAE4")]
	public CameraFilterPack_AAA_SuperComputer()
	{
	}
}
[Token(Token = "0x2000046")]
[AddComponentMenu("Camera Filter Pack/AAA/Super Hexagon")]
[ExecuteInEditMode]
public class CameraFilterPack_AAA_SuperHexagon : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float _AlphaHexa;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float TimeX;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.2f, 10f)]
	public float HexaSize;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _BorderSize;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color _BorderColor;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color _HexaColor;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _SpotSize;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 center;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float Radius;

	[Token(Token = "0x17000028")]
	private Material material
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x93BB18", Offset = "0x93BB18", VA = "0x93BB18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x93BBEC", Offset = "0x93BBEC", VA = "0x93BBEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x93BC6C", Offset = "0x93BC6C", VA = "0x93BC6C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x93BFEC", Offset = "0x93BFEC", VA = "0x93BFEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x93BFF0", Offset = "0x93BFF0", VA = "0x93BFF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x93C07C", Offset = "0x93C07C", VA = "0x93C07C")]
	public CameraFilterPack_AAA_SuperHexagon()
	{
	}
}
[Token(Token = "0x2000047")]
[AddComponentMenu("Camera Filter Pack/AAA/WaterDrop")]
[ExecuteInEditMode]
public class CameraFilterPack_AAA_WaterDrop : MonoBehaviour
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(8f, 64f)]
	public float Distortion;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 7f)]
	public float SizeX;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 7f)]
	public float SizeY;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D Texture2;

	[Token(Token = "0x17000029")]
	private Material material
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x93C0C0", Offset = "0x93C0C0", VA = "0x93C0C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x93C194", Offset = "0x93C194", VA = "0x93C194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x93C288", Offset = "0x93C288", VA = "0x93C288")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x93C4C8", Offset = "0x93C4C8", VA = "0x93C4C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x93C4CC", Offset = "0x93C4CC", VA = "0x93C4CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x93C558", Offset = "0x93C558", VA = "0x93C558")]
	public CameraFilterPack_AAA_WaterDrop()
	{
	}
}
[Token(Token = "0x2000048")]
[AddComponentMenu("Camera Filter Pack/AAA/WaterDropPro")]
[ExecuteInEditMode]
public class CameraFilterPack_AAA_WaterDropPro : MonoBehaviour
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(8f, 64f)]
	public float Distortion;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 7f)]
	public float SizeX;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 7f)]
	public float SizeY;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D Texture2;

	[Token(Token = "0x1700002A")]
	private Material material
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x93C574", Offset = "0x93C574", VA = "0x93C574")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x93C648", Offset = "0x93C648", VA = "0x93C648")]
	private void Start()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x93C73C", Offset = "0x93C73C", VA = "0x93C73C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x93C97C", Offset = "0x93C97C", VA = "0x93C97C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x93C980", Offset = "0x93C980", VA = "0x93C980")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x93CA0C", Offset = "0x93CA0C", VA = "0x93CA0C")]
	public CameraFilterPack_AAA_WaterDropPro()
	{
	}
}
[Token(Token = "0x2000049")]
[AddComponentMenu("Camera Filter Pack/Alien/Vision")]
[ExecuteInEditMode]
public class CameraFilterPack_Alien_Vision : MonoBehaviour
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.5f)]
	public float Therma_Variation;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Speed;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 4f)]
	private float Burn;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 16f)]
	private float SceneCut;

	[Token(Token = "0x1700002B")]
	private Material material
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x93CA28", Offset = "0x93CA28", VA = "0x93CA28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x93CAFC", Offset = "0x93CAFC", VA = "0x93CAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x93CB7C", Offset = "0x93CB7C", VA = "0x93CB7C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x93CE04", Offset = "0x93CE04", VA = "0x93CE04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x93CE08", Offset = "0x93CE08", VA = "0x93CE08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x93CE94", Offset = "0x93CE94", VA = "0x93CE94")]
	public CameraFilterPack_Alien_Vision()
	{
	}
}
[Token(Token = "0x200004A")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Antialiasing/FXAA")]
public class CameraFilterPack_Antialiasing_FXAA : MonoBehaviour
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x1700002C")]
	private Material material
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x93CEB0", Offset = "0x93CEB0", VA = "0x93CEB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x93CF84", Offset = "0x93CF84", VA = "0x93CF84")]
	private void Start()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x93D004", Offset = "0x93D004", VA = "0x93D004")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x93D1B8", Offset = "0x93D1B8", VA = "0x93D1B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x93D1BC", Offset = "0x93D1BC", VA = "0x93D1BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x93D248", Offset = "0x93D248", VA = "0x93D248")]
	public CameraFilterPack_Antialiasing_FXAA()
	{
	}
}
[Token(Token = "0x200004B")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Weather/Fog")]
public class CameraFilterPack_Atmosphere_Fog : MonoBehaviour
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float _Near;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float _Far;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color FogColor;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color ChangeColorRGB;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D Texture2;

	[Token(Token = "0x1700002D")]
	private Material material
	{
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x93D258", Offset = "0x93D258", VA = "0x93D258")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x93D32C", Offset = "0x93D32C", VA = "0x93D32C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x93D420", Offset = "0x93D420", VA = "0x93D420")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x93D70C", Offset = "0x93D70C", VA = "0x93D70C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x93D710", Offset = "0x93D710", VA = "0x93D710")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x93D79C", Offset = "0x93D79C", VA = "0x93D79C")]
	public CameraFilterPack_Atmosphere_Fog()
	{
	}
}
[Token(Token = "0x200004C")]
[AddComponentMenu("Camera Filter Pack/Weather/Rain")]
[ExecuteInEditMode]
public class CameraFilterPack_Atmosphere_Rain : MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 2f)]
	public float Intensity;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-0.25f, 0.25f)]
	public float DirectionX;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0.4f, 2f)]
	public float Size;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 0.5f)]
	public float Speed;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 0.5f)]
	public float Distortion;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	public float StormFlashOnOff;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D Texture2;

	[Token(Token = "0x1700002E")]
	private Material material
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x93D7C0", Offset = "0x93D7C0", VA = "0x93D7C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x93D894", Offset = "0x93D894", VA = "0x93D894")]
	private void Start()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x93D988", Offset = "0x93D988", VA = "0x93D988")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x93DCD0", Offset = "0x93DCD0", VA = "0x93DCD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x93DCD4", Offset = "0x93DCD4", VA = "0x93DCD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x93DD60", Offset = "0x93DD60", VA = "0x93DD60")]
	public CameraFilterPack_Atmosphere_Rain()
	{
	}
}
[Token(Token = "0x200004D")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Weather/Rain_Pro")]
public class CameraFilterPack_Atmosphere_Rain_Pro : MonoBehaviour
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 2f)]
	public float Intensity;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-0.25f, 0.25f)]
	public float DirectionX;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0.4f, 2f)]
	public float Size;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 0.5f)]
	public float Speed;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 0.5f)]
	public float Distortion;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	public float StormFlashOnOff;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 1f)]
	public float DropOnOff;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D Texture2;

	[Token(Token = "0x1700002F")]
	private Material material
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x93DD94", Offset = "0x93DD94", VA = "0x93DD94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x93DE68", Offset = "0x93DE68", VA = "0x93DE68")]
	private void Start()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x93DF5C", Offset = "0x93DF5C", VA = "0x93DF5C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x93E2D4", Offset = "0x93E2D4", VA = "0x93E2D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x93E2D8", Offset = "0x93E2D8", VA = "0x93E2D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x93E364", Offset = "0x93E364", VA = "0x93E364")]
	public CameraFilterPack_Atmosphere_Rain_Pro()
	{
	}
}
[Token(Token = "0x200004E")]
[AddComponentMenu("Camera Filter Pack/Weather/Rain_Pro_3D")]
[ExecuteInEditMode]
public class CameraFilterPack_Atmosphere_Rain_Pro_3D : MonoBehaviour
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 2f)]
	public float Intensity;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool DirectionFollowCameraZ;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-0.45f, 0.45f)]
	public float DirectionX;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0.4f, 2f)]
	public float Size;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 0.5f)]
	public float Speed;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 0.5f)]
	public float Distortion;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	public float StormFlashOnOff;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0f, 1f)]
	public float DropOnOff;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(-0.5f, 0.99f)]
	public float Drop_Near;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Range(0f, 1f)]
	public float Drop_Far;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Range(0f, 1f)]
	public float Drop_With_Obj;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Range(0f, 1f)]
	public float Myst;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Range(0f, 1f)]
	public float Drop_Floor_Fluid;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color Myst_Color;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Texture2D Texture2;

	[Token(Token = "0x17000030")]
	private Material material
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x93E388", Offset = "0x93E388", VA = "0x93E388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x93E45C", Offset = "0x93E45C", VA = "0x93E45C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x93E550", Offset = "0x93E550", VA = "0x93E550")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x93EAD8", Offset = "0x93EAD8", VA = "0x93EAD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x93EADC", Offset = "0x93EADC", VA = "0x93EADC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x93EB68", Offset = "0x93EB68", VA = "0x93EB68")]
	public CameraFilterPack_Atmosphere_Rain_Pro_3D()
	{
	}
}
[Token(Token = "0x200004F")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Pixel/Snow_8bits")]
public class CameraFilterPack_Atmosphere_Snow_8bits : MonoBehaviour
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.9f, 2f)]
	public float Threshold;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(8f, 256f)]
	public float Size;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-0.5f, 0.5f)]
	public float DirectionX;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x17000031")]
	private Material material
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x93EBCC", Offset = "0x93EBCC", VA = "0x93EBCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x93ECA0", Offset = "0x93ECA0", VA = "0x93ECA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x93ED20", Offset = "0x93ED20", VA = "0x93ED20")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x93EFA8", Offset = "0x93EFA8", VA = "0x93EFA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x93EFAC", Offset = "0x93EFAC", VA = "0x93EFAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x93F038", Offset = "0x93F038", VA = "0x93F038")]
	public CameraFilterPack_Atmosphere_Snow_8bits()
	{
	}
}
[Token(Token = "0x2000050")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Blend")]
public class CameraFilterPack_Blend2Camera_Blend : MonoBehaviour
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000032")]
	private Material material
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x93F058", Offset = "0x93F058", VA = "0x93F058")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x93F12C", Offset = "0x93F12C", VA = "0x93F12C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x93F260", Offset = "0x93F260", VA = "0x93F260")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x93F488", Offset = "0x93F488", VA = "0x93F488")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x93F580", Offset = "0x93F580", VA = "0x93F580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x93F584", Offset = "0x93F584", VA = "0x93F584")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x93F67C", Offset = "0x93F67C", VA = "0x93F67C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x93F748", Offset = "0x93F748", VA = "0x93F748")]
	public CameraFilterPack_Blend2Camera_Blend()
	{
	}
}
[Token(Token = "0x2000051")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Chroma Key/BlueScreen")]
public class CameraFilterPack_Blend2Camera_BlueScreen : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.2f, 0.2f)]
	public float Adjust;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-0.2f, 0.2f)]
	public float Precision;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-0.2f, 0.2f)]
	public float Luminosity;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-0.3f, 0.3f)]
	public float Change_Red;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-0.3f, 0.3f)]
	public float Change_Green;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-0.3f, 0.3f)]
	public float Change_Blue;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 ScreenSize;

	[Token(Token = "0x17000033")]
	private Material material
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x93F7B0", Offset = "0x93F7B0", VA = "0x93F7B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x93F884", Offset = "0x93F884", VA = "0x93F884")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x93F8B4", Offset = "0x93F8B4", VA = "0x93F8B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x93F9EC", Offset = "0x93F9EC", VA = "0x93F9EC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x93FCF0", Offset = "0x93FCF0", VA = "0x93FCF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x93FD24", Offset = "0x93FD24", VA = "0x93FD24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x93FD28", Offset = "0x93FD28", VA = "0x93FD28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x93FDF4", Offset = "0x93FDF4", VA = "0x93FDF4")]
	public CameraFilterPack_Blend2Camera_BlueScreen()
	{
	}
}
[Token(Token = "0x2000052")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Color")]
public class CameraFilterPack_Blend2Camera_Color : MonoBehaviour
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000034")]
	private Material material
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x93FE58", Offset = "0x93FE58", VA = "0x93FE58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x93FF2C", Offset = "0x93FF2C", VA = "0x93FF2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x940060", Offset = "0x940060", VA = "0x940060")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x9402E0", Offset = "0x9402E0", VA = "0x9402E0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x9403D8", Offset = "0x9403D8", VA = "0x9403D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x9403DC", Offset = "0x9403DC", VA = "0x9403DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x9404D4", Offset = "0x9404D4", VA = "0x9404D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x9405A0", Offset = "0x9405A0", VA = "0x9405A0")]
	public CameraFilterPack_Blend2Camera_Color()
	{
	}
}
[Token(Token = "0x2000053")]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/ColorBurn")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_ColorBurn : MonoBehaviour
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000035")]
	private Material material
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x940608", Offset = "0x940608", VA = "0x940608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x9406DC", Offset = "0x9406DC", VA = "0x9406DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x940810", Offset = "0x940810", VA = "0x940810")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x940A90", Offset = "0x940A90", VA = "0x940A90")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x940B88", Offset = "0x940B88", VA = "0x940B88")]
	private void Update()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x940B8C", Offset = "0x940B8C", VA = "0x940B8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x940C84", Offset = "0x940C84", VA = "0x940C84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x940D50", Offset = "0x940D50", VA = "0x940D50")]
	public CameraFilterPack_Blend2Camera_ColorBurn()
	{
	}
}
[Token(Token = "0x2000054")]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/ColorDodge")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_ColorDodge : MonoBehaviour
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000036")]
	private Material material
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x940DB8", Offset = "0x940DB8", VA = "0x940DB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x940E8C", Offset = "0x940E8C", VA = "0x940E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x940FC0", Offset = "0x940FC0", VA = "0x940FC0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x941240", Offset = "0x941240", VA = "0x941240")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x941338", Offset = "0x941338", VA = "0x941338")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x94133C", Offset = "0x94133C", VA = "0x94133C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x941434", Offset = "0x941434", VA = "0x941434")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x941500", Offset = "0x941500", VA = "0x941500")]
	public CameraFilterPack_Blend2Camera_ColorDodge()
	{
	}
}
[Token(Token = "0x2000055")]
[AddComponentMenu("Camera Filter Pack/Chroma Key/Color Key")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_ColorKey : MonoBehaviour
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color ColorKey;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-0.2f, 0.2f)]
	public float Adjust;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-0.2f, 0.2f)]
	public float Precision;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-0.2f, 0.2f)]
	public float Luminosity;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(-0.3f, 0.3f)]
	public float Change_Red;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(-0.3f, 0.3f)]
	public float Change_Green;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(-0.3f, 0.3f)]
	public float Change_Blue;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2 ScreenSize;

	[Token(Token = "0x17000037")]
	private Material material
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x941568", Offset = "0x941568", VA = "0x941568")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x94163C", Offset = "0x94163C", VA = "0x94163C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x941774", Offset = "0x941774", VA = "0x941774")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x941AAC", Offset = "0x941AAC", VA = "0x941AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x941AE0", Offset = "0x941AE0", VA = "0x941AE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x941AF8", Offset = "0x941AF8", VA = "0x941AF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x941C00", Offset = "0x941C00", VA = "0x941C00")]
	public CameraFilterPack_Blend2Camera_ColorKey()
	{
	}
}
[Token(Token = "0x2000056")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Darken")]
public class CameraFilterPack_Blend2Camera_Darken : MonoBehaviour
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000038")]
	private Material material
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x941C64", Offset = "0x941C64", VA = "0x941C64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x941D38", Offset = "0x941D38", VA = "0x941D38")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x941E6C", Offset = "0x941E6C", VA = "0x941E6C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x9420EC", Offset = "0x9420EC", VA = "0x9420EC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x9421E4", Offset = "0x9421E4", VA = "0x9421E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x9421E8", Offset = "0x9421E8", VA = "0x9421E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x9422E0", Offset = "0x9422E0", VA = "0x9422E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x9423AC", Offset = "0x9423AC", VA = "0x9423AC")]
	public CameraFilterPack_Blend2Camera_Darken()
	{
	}
}
[Token(Token = "0x2000057")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/DarkerColor")]
public class CameraFilterPack_Blend2Camera_DarkerColor : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000039")]
	private Material material
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x942414", Offset = "0x942414", VA = "0x942414")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x9424E8", Offset = "0x9424E8", VA = "0x9424E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x94261C", Offset = "0x94261C", VA = "0x94261C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x94289C", Offset = "0x94289C", VA = "0x94289C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x942994", Offset = "0x942994", VA = "0x942994")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x942998", Offset = "0x942998", VA = "0x942998")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x942A90", Offset = "0x942A90", VA = "0x942A90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x942B5C", Offset = "0x942B5C", VA = "0x942B5C")]
	public CameraFilterPack_Blend2Camera_DarkerColor()
	{
	}
}
[Token(Token = "0x2000058")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Difference")]
public class CameraFilterPack_Blend2Camera_Difference : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700003A")]
	private Material material
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x942BC4", Offset = "0x942BC4", VA = "0x942BC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x942C98", Offset = "0x942C98", VA = "0x942C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x942DCC", Offset = "0x942DCC", VA = "0x942DCC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x94304C", Offset = "0x94304C", VA = "0x94304C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x943144", Offset = "0x943144", VA = "0x943144")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x943148", Offset = "0x943148", VA = "0x943148")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x943240", Offset = "0x943240", VA = "0x943240")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x94330C", Offset = "0x94330C", VA = "0x94330C")]
	public CameraFilterPack_Blend2Camera_Difference()
	{
	}
}
[Token(Token = "0x2000059")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Divide")]
public class CameraFilterPack_Blend2Camera_Divide : MonoBehaviour
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700003B")]
	private Material material
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x943374", Offset = "0x943374", VA = "0x943374")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x943448", Offset = "0x943448", VA = "0x943448")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x94357C", Offset = "0x94357C", VA = "0x94357C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x9437FC", Offset = "0x9437FC", VA = "0x9437FC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x9438F4", Offset = "0x9438F4", VA = "0x9438F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x9438F8", Offset = "0x9438F8", VA = "0x9438F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x9439F0", Offset = "0x9439F0", VA = "0x9439F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x943ABC", Offset = "0x943ABC", VA = "0x943ABC")]
	public CameraFilterPack_Blend2Camera_Divide()
	{
	}
}
[Token(Token = "0x200005A")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Exclusion")]
public class CameraFilterPack_Blend2Camera_Exclusion : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700003C")]
	private Material material
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x943B24", Offset = "0x943B24", VA = "0x943B24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x943BF8", Offset = "0x943BF8", VA = "0x943BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x943D2C", Offset = "0x943D2C", VA = "0x943D2C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x943FAC", Offset = "0x943FAC", VA = "0x943FAC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x9440A4", Offset = "0x9440A4", VA = "0x9440A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x9440A8", Offset = "0x9440A8", VA = "0x9440A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x9441A0", Offset = "0x9441A0", VA = "0x9441A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x94426C", Offset = "0x94426C", VA = "0x94426C")]
	public CameraFilterPack_Blend2Camera_Exclusion()
	{
	}
}
[Token(Token = "0x200005B")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Chroma Key/GreenScreen")]
public class CameraFilterPack_Blend2Camera_GreenScreen : MonoBehaviour
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.2f, 0.2f)]
	public float Adjust;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-0.2f, 0.2f)]
	public float Precision;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-0.2f, 0.2f)]
	public float Luminosity;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-0.3f, 0.3f)]
	public float Change_Red;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-0.3f, 0.3f)]
	public float Change_Green;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-0.3f, 0.3f)]
	public float Change_Blue;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 ScreenSize;

	[Token(Token = "0x1700003D")]
	private Material material
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x9442D4", Offset = "0x9442D4", VA = "0x9442D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x9443A8", Offset = "0x9443A8", VA = "0x9443A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x9444E0", Offset = "0x9444E0", VA = "0x9444E0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x9447E4", Offset = "0x9447E4", VA = "0x9447E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x944818", Offset = "0x944818", VA = "0x944818")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x944830", Offset = "0x944830", VA = "0x944830")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x944938", Offset = "0x944938", VA = "0x944938")]
	public CameraFilterPack_Blend2Camera_GreenScreen()
	{
	}
}
[Token(Token = "0x200005C")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/HardLight")]
public class CameraFilterPack_Blend2Camera_HardLight : MonoBehaviour
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700003E")]
	private Material material
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x94499C", Offset = "0x94499C", VA = "0x94499C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x944A70", Offset = "0x944A70", VA = "0x944A70")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x944BA4", Offset = "0x944BA4", VA = "0x944BA4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x944E24", Offset = "0x944E24", VA = "0x944E24")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x944F1C", Offset = "0x944F1C", VA = "0x944F1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x944F20", Offset = "0x944F20", VA = "0x944F20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x945018", Offset = "0x945018", VA = "0x945018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x9450E4", Offset = "0x9450E4", VA = "0x9450E4")]
	public CameraFilterPack_Blend2Camera_HardLight()
	{
	}
}
[Token(Token = "0x200005D")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/HardMix")]
public class CameraFilterPack_Blend2Camera_HardMix : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700003F")]
	private Material material
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x94514C", Offset = "0x94514C", VA = "0x94514C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x945220", Offset = "0x945220", VA = "0x945220")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x945354", Offset = "0x945354", VA = "0x945354")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x9455D4", Offset = "0x9455D4", VA = "0x9455D4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x9456CC", Offset = "0x9456CC", VA = "0x9456CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x9456D0", Offset = "0x9456D0", VA = "0x9456D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x9457C8", Offset = "0x9457C8", VA = "0x9457C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x945894", Offset = "0x945894", VA = "0x945894")]
	public CameraFilterPack_Blend2Camera_HardMix()
	{
	}
}
[Token(Token = "0x200005E")]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Hue")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_Hue : MonoBehaviour
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000040")]
	private Material material
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x9458FC", Offset = "0x9458FC", VA = "0x9458FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x9459D0", Offset = "0x9459D0", VA = "0x9459D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x945B04", Offset = "0x945B04", VA = "0x945B04")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x945D84", Offset = "0x945D84", VA = "0x945D84")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x945E7C", Offset = "0x945E7C", VA = "0x945E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x945E80", Offset = "0x945E80", VA = "0x945E80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x945F78", Offset = "0x945F78", VA = "0x945F78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x946044", Offset = "0x946044", VA = "0x946044")]
	public CameraFilterPack_Blend2Camera_Hue()
	{
	}
}
[Token(Token = "0x200005F")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Lighten")]
public class CameraFilterPack_Blend2Camera_Lighten : MonoBehaviour
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000041")]
	private Material material
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x9460AC", Offset = "0x9460AC", VA = "0x9460AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x946180", Offset = "0x946180", VA = "0x946180")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x9462B4", Offset = "0x9462B4", VA = "0x9462B4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x946534", Offset = "0x946534", VA = "0x946534")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x94662C", Offset = "0x94662C", VA = "0x94662C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x946630", Offset = "0x946630", VA = "0x946630")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x946728", Offset = "0x946728", VA = "0x946728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x9467F4", Offset = "0x9467F4", VA = "0x9467F4")]
	public CameraFilterPack_Blend2Camera_Lighten()
	{
	}
}
[Token(Token = "0x2000060")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/LighterColor")]
public class CameraFilterPack_Blend2Camera_LighterColor : MonoBehaviour
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000042")]
	private Material material
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x94685C", Offset = "0x94685C", VA = "0x94685C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x946930", Offset = "0x946930", VA = "0x946930")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x946A64", Offset = "0x946A64", VA = "0x946A64")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x946CE4", Offset = "0x946CE4", VA = "0x946CE4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x946DDC", Offset = "0x946DDC", VA = "0x946DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x946DE0", Offset = "0x946DE0", VA = "0x946DE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x946ED8", Offset = "0x946ED8", VA = "0x946ED8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x946FA4", Offset = "0x946FA4", VA = "0x946FA4")]
	public CameraFilterPack_Blend2Camera_LighterColor()
	{
	}
}
[Token(Token = "0x2000061")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/LinearBurn")]
public class CameraFilterPack_Blend2Camera_LinearBurn : MonoBehaviour
{
	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000043")]
	private Material material
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x94700C", Offset = "0x94700C", VA = "0x94700C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x9470E0", Offset = "0x9470E0", VA = "0x9470E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x947214", Offset = "0x947214", VA = "0x947214")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x947494", Offset = "0x947494", VA = "0x947494")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x94758C", Offset = "0x94758C", VA = "0x94758C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x947590", Offset = "0x947590", VA = "0x947590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x947688", Offset = "0x947688", VA = "0x947688")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x947754", Offset = "0x947754", VA = "0x947754")]
	public CameraFilterPack_Blend2Camera_LinearBurn()
	{
	}
}
[Token(Token = "0x2000062")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/LinearDodge")]
public class CameraFilterPack_Blend2Camera_LinearDodge : MonoBehaviour
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000044")]
	private Material material
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x9477BC", Offset = "0x9477BC", VA = "0x9477BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x947890", Offset = "0x947890", VA = "0x947890")]
	private void Start()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x9479C4", Offset = "0x9479C4", VA = "0x9479C4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x947C44", Offset = "0x947C44", VA = "0x947C44")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x947D3C", Offset = "0x947D3C", VA = "0x947D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x947D40", Offset = "0x947D40", VA = "0x947D40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x947E38", Offset = "0x947E38", VA = "0x947E38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x947F04", Offset = "0x947F04", VA = "0x947F04")]
	public CameraFilterPack_Blend2Camera_LinearDodge()
	{
	}
}
[Token(Token = "0x2000063")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/LinearLight")]
public class CameraFilterPack_Blend2Camera_LinearLight : MonoBehaviour
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000045")]
	private Material material
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x947F6C", Offset = "0x947F6C", VA = "0x947F6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x948040", Offset = "0x948040", VA = "0x948040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x948174", Offset = "0x948174", VA = "0x948174")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x9483F4", Offset = "0x9483F4", VA = "0x9483F4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x9484EC", Offset = "0x9484EC", VA = "0x9484EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x9484F0", Offset = "0x9484F0", VA = "0x9484F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x9485E8", Offset = "0x9485E8", VA = "0x9485E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x9486B4", Offset = "0x9486B4", VA = "0x9486B4")]
	public CameraFilterPack_Blend2Camera_LinearLight()
	{
	}
}
[Token(Token = "0x2000064")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Luminosity")]
public class CameraFilterPack_Blend2Camera_Luminosity : MonoBehaviour
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000046")]
	private Material material
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x94871C", Offset = "0x94871C", VA = "0x94871C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x9487F0", Offset = "0x9487F0", VA = "0x9487F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x948924", Offset = "0x948924", VA = "0x948924")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x948BA4", Offset = "0x948BA4", VA = "0x948BA4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x948C9C", Offset = "0x948C9C", VA = "0x948C9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x948CA0", Offset = "0x948CA0", VA = "0x948CA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x948D98", Offset = "0x948D98", VA = "0x948D98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x948E64", Offset = "0x948E64", VA = "0x948E64")]
	public CameraFilterPack_Blend2Camera_Luminosity()
	{
	}
}
[Token(Token = "0x2000065")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Multiply")]
public class CameraFilterPack_Blend2Camera_Multiply : MonoBehaviour
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000047")]
	private Material material
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x948ECC", Offset = "0x948ECC", VA = "0x948ECC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x948FA0", Offset = "0x948FA0", VA = "0x948FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x9490D4", Offset = "0x9490D4", VA = "0x9490D4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x949354", Offset = "0x949354", VA = "0x949354")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x94944C", Offset = "0x94944C", VA = "0x94944C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x949450", Offset = "0x949450", VA = "0x949450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x949548", Offset = "0x949548", VA = "0x949548")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x949614", Offset = "0x949614", VA = "0x949614")]
	public CameraFilterPack_Blend2Camera_Multiply()
	{
	}
}
[Token(Token = "0x2000066")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Overlay")]
public class CameraFilterPack_Blend2Camera_Overlay : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000048")]
	private Material material
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x94967C", Offset = "0x94967C", VA = "0x94967C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x949750", Offset = "0x949750", VA = "0x949750")]
	private void Start()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x949884", Offset = "0x949884", VA = "0x949884")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x949B04", Offset = "0x949B04", VA = "0x949B04")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x949BFC", Offset = "0x949BFC", VA = "0x949BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x949C00", Offset = "0x949C00", VA = "0x949C00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x949CF8", Offset = "0x949CF8", VA = "0x949CF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x949DC4", Offset = "0x949DC4", VA = "0x949DC4")]
	public CameraFilterPack_Blend2Camera_Overlay()
	{
	}
}
[Token(Token = "0x2000067")]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/PhotoshopFilters")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_PhotoshopFilters : MonoBehaviour
{
	[Token(Token = "0x2000068")]
	public enum filters
	{
		[Token(Token = "0x4000374")]
		Darken,
		[Token(Token = "0x4000375")]
		Multiply,
		[Token(Token = "0x4000376")]
		ColorBurn,
		[Token(Token = "0x4000377")]
		LinearBurn,
		[Token(Token = "0x4000378")]
		DarkerColor,
		[Token(Token = "0x4000379")]
		Lighten,
		[Token(Token = "0x400037A")]
		Screen,
		[Token(Token = "0x400037B")]
		ColorDodge,
		[Token(Token = "0x400037C")]
		LinearDodge,
		[Token(Token = "0x400037D")]
		LighterColor,
		[Token(Token = "0x400037E")]
		Overlay,
		[Token(Token = "0x400037F")]
		SoftLight,
		[Token(Token = "0x4000380")]
		HardLight,
		[Token(Token = "0x4000381")]
		VividLight,
		[Token(Token = "0x4000382")]
		LinearLight,
		[Token(Token = "0x4000383")]
		PinLight,
		[Token(Token = "0x4000384")]
		HardMix,
		[Token(Token = "0x4000385")]
		Difference,
		[Token(Token = "0x4000386")]
		Exclusion,
		[Token(Token = "0x4000387")]
		Subtract,
		[Token(Token = "0x4000388")]
		Divide,
		[Token(Token = "0x4000389")]
		Hue,
		[Token(Token = "0x400038A")]
		Saturation,
		[Token(Token = "0x400038B")]
		Color,
		[Token(Token = "0x400038C")]
		Luminosity
	}

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public filters filterchoice;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private filters filterchoicememo;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float TimeX;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material SCMaterial;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000049")]
	private Material material
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x949E2C", Offset = "0x949E2C", VA = "0x949E2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x949F00", Offset = "0x949F00", VA = "0x949F00")]
	private void ChangeFilters()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x94A440", Offset = "0x94A440", VA = "0x94A440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x94A584", Offset = "0x94A584", VA = "0x94A584")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x94A804", Offset = "0x94A804", VA = "0x94A804")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x94A9C8", Offset = "0x94A9C8", VA = "0x94A9C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x94A9CC", Offset = "0x94A9CC", VA = "0x94A9CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x94AAC4", Offset = "0x94AAC4", VA = "0x94AAC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x94AB90", Offset = "0x94AB90", VA = "0x94AB90")]
	public CameraFilterPack_Blend2Camera_PhotoshopFilters()
	{
	}
}
[Token(Token = "0x2000069")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/PinLight")]
public class CameraFilterPack_Blend2Camera_PinLight : MonoBehaviour
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700004A")]
	private Material material
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x94ABF8", Offset = "0x94ABF8", VA = "0x94ABF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x94ACCC", Offset = "0x94ACCC", VA = "0x94ACCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x94AE00", Offset = "0x94AE00", VA = "0x94AE00")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x94B080", Offset = "0x94B080", VA = "0x94B080")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x94B178", Offset = "0x94B178", VA = "0x94B178")]
	private void Update()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x94B17C", Offset = "0x94B17C", VA = "0x94B17C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x94B274", Offset = "0x94B274", VA = "0x94B274")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x94B340", Offset = "0x94B340", VA = "0x94B340")]
	public CameraFilterPack_Blend2Camera_PinLight()
	{
	}
}
[Token(Token = "0x200006A")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Saturation")]
public class CameraFilterPack_Blend2Camera_Saturation : MonoBehaviour
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700004B")]
	private Material material
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x94B3A8", Offset = "0x94B3A8", VA = "0x94B3A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x94B47C", Offset = "0x94B47C", VA = "0x94B47C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x94B5B0", Offset = "0x94B5B0", VA = "0x94B5B0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x94B830", Offset = "0x94B830", VA = "0x94B830")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x94B928", Offset = "0x94B928", VA = "0x94B928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x94B92C", Offset = "0x94B92C", VA = "0x94B92C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x94BA24", Offset = "0x94BA24", VA = "0x94BA24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x94BAF0", Offset = "0x94BAF0", VA = "0x94BAF0")]
	public CameraFilterPack_Blend2Camera_Saturation()
	{
	}
}
[Token(Token = "0x200006B")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Screen")]
public class CameraFilterPack_Blend2Camera_Screen : MonoBehaviour
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700004C")]
	private Material material
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0x94BB58", Offset = "0x94BB58", VA = "0x94BB58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x94BC2C", Offset = "0x94BC2C", VA = "0x94BC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x94BD60", Offset = "0x94BD60", VA = "0x94BD60")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x94BFE0", Offset = "0x94BFE0", VA = "0x94BFE0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x94C0D8", Offset = "0x94C0D8", VA = "0x94C0D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x94C0DC", Offset = "0x94C0DC", VA = "0x94C0DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x94C1D4", Offset = "0x94C1D4", VA = "0x94C1D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x94C2A0", Offset = "0x94C2A0", VA = "0x94C2A0")]
	public CameraFilterPack_Blend2Camera_Screen()
	{
	}
}
[Token(Token = "0x200006C")]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/SoftLight")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_SoftLight : MonoBehaviour
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x1700004D")]
	private Material material
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xA17170", Offset = "0xA17170", VA = "0xA17170")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xA17244", Offset = "0xA17244", VA = "0xA17244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xA17378", Offset = "0xA17378", VA = "0xA17378")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xA175F8", Offset = "0xA175F8", VA = "0xA175F8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xA176F0", Offset = "0xA176F0", VA = "0xA176F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xA176F4", Offset = "0xA176F4", VA = "0xA176F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xA177EC", Offset = "0xA177EC", VA = "0xA177EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xA178B8", Offset = "0xA178B8", VA = "0xA178B8")]
	public CameraFilterPack_Blend2Camera_SoftLight()
	{
	}
}
[Token(Token = "0x200006D")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Split Screen/SideBySide")]
public class CameraFilterPack_Blend2Camera_SplitScreen : MonoBehaviour
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-3f, 3f)]
	public float SplitX;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-3f, 3f)]
	public float SplitY;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 2f)]
	public float Smooth;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-3.14f, 3.14f)]
	public float Rotation;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool ForceYSwap;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 ScreenSize;

	[Token(Token = "0x1700004E")]
	private Material material
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xA17920", Offset = "0xA17920", VA = "0xA17920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xA179F4", Offset = "0xA179F4", VA = "0xA179F4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xA17A24", Offset = "0xA17A24", VA = "0xA17A24")]
	private void Start()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xA17B5C", Offset = "0xA17B5C", VA = "0xA17B5C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xA17E64", Offset = "0xA17E64", VA = "0xA17E64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xA17E94", Offset = "0xA17E94", VA = "0xA17E94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xA17E98", Offset = "0xA17E98", VA = "0xA17E98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xA17F64", Offset = "0xA17F64", VA = "0xA17F64")]
	public CameraFilterPack_Blend2Camera_SplitScreen()
	{
	}
}
[Token(Token = "0x200006E")]
[AddComponentMenu("Camera Filter Pack/Split Screen/Split 3D")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_SplitScreen3D : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float _FixDistance;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-0.99f, 0.99f)]
	public float _Distance;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.5f)]
	public float _Size;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-3f, 3f)]
	public float SplitX;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-3f, 3f)]
	public float SplitY;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 2f)]
	public float Smooth;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(-3.14f, 3.14f)]
	public float Rotation;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool ForceYSwap;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 ScreenSize;

	[Token(Token = "0x1700004F")]
	private Material material
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xA17FDC", Offset = "0xA17FDC", VA = "0xA17FDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xA180B0", Offset = "0xA180B0", VA = "0xA180B0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xA180E0", Offset = "0xA180E0", VA = "0xA180E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xA18218", Offset = "0xA18218", VA = "0xA18218")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xA185E0", Offset = "0xA185E0", VA = "0xA185E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xA18610", Offset = "0xA18610", VA = "0xA18610")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xA18614", Offset = "0xA18614", VA = "0xA18614")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xA186E0", Offset = "0xA186E0", VA = "0xA186E0")]
	public CameraFilterPack_Blend2Camera_SplitScreen3D()
	{
	}
}
[Token(Token = "0x200006F")]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/Subtract")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_Subtract : MonoBehaviour
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000050")]
	private Material material
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xA18770", Offset = "0xA18770", VA = "0xA18770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xA18844", Offset = "0xA18844", VA = "0xA18844")]
	private void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xA18978", Offset = "0xA18978", VA = "0xA18978")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xA18BF8", Offset = "0xA18BF8", VA = "0xA18BF8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xA18CF0", Offset = "0xA18CF0", VA = "0xA18CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xA18CF4", Offset = "0xA18CF4", VA = "0xA18CF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xA18DEC", Offset = "0xA18DEC", VA = "0xA18DEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xA18EB8", Offset = "0xA18EB8", VA = "0xA18EB8")]
	public CameraFilterPack_Blend2Camera_Subtract()
	{
	}
}
[Token(Token = "0x2000070")]
[AddComponentMenu("Camera Filter Pack/Blend 2 Camera/VividLight")]
[ExecuteInEditMode]
public class CameraFilterPack_Blend2Camera_VividLight : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera Camera2;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SwitchCameraToCamera2;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float BlendFX;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture Camera2tex;

	[Token(Token = "0x17000051")]
	private Material material
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xA18F20", Offset = "0xA18F20", VA = "0xA18F20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xA18FF4", Offset = "0xA18FF4", VA = "0xA18FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xA19128", Offset = "0xA19128", VA = "0xA19128")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xA193A8", Offset = "0xA193A8", VA = "0xA193A8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xA194A0", Offset = "0xA194A0", VA = "0xA194A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xA194A4", Offset = "0xA194A4", VA = "0xA194A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xA1959C", Offset = "0xA1959C", VA = "0xA1959C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xA19668", Offset = "0xA19668", VA = "0xA19668")]
	public CameraFilterPack_Blend2Camera_VividLight()
	{
	}
}
[Token(Token = "0x2000071")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Weather/Blizzard")]
public class CameraFilterPack_Blizzard : MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 2f)]
	public float _Speed;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0.2f, 2f)]
	public float _Size;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float _Fade;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material SCMaterial;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D Texture2;

	[Token(Token = "0x17000052")]
	private Material material
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xA196D0", Offset = "0xA196D0", VA = "0xA196D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xA197A4", Offset = "0xA197A4", VA = "0xA197A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xA19898", Offset = "0xA19898", VA = "0xA19898")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xA19AA8", Offset = "0xA19AA8", VA = "0xA19AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xA19AAC", Offset = "0xA19AAC", VA = "0xA19AAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xA19B38", Offset = "0xA19B38", VA = "0xA19B38")]
	public CameraFilterPack_Blizzard()
	{
	}
}
[Token(Token = "0x2000072")]
[AddComponentMenu("Camera Filter Pack/Blur/Bloom")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_Bloom : MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float Amount;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Glow;

	[Token(Token = "0x17000053")]
	private Material material
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xA19B48", Offset = "0xA19B48", VA = "0xA19B48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xA19C1C", Offset = "0xA19C1C", VA = "0xA19C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xA19C9C", Offset = "0xA19C9C", VA = "0xA19C9C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xA19EB0", Offset = "0xA19EB0", VA = "0xA19EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xA19EB4", Offset = "0xA19EB4", VA = "0xA19EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xA19F40", Offset = "0xA19F40", VA = "0xA19F40")]
	public CameraFilterPack_Blur_Bloom()
	{
	}
}
[Token(Token = "0x2000073")]
[AddComponentMenu("Camera Filter Pack/Blur/Blur Hole")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_BlurHole : MonoBehaviour
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 16f)]
	public float Size;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float _Radius;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 4f)]
	public float _SpotSize;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float _CenterX;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float _CenterY;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float _AlphaBlur;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float _AlphaBlurInside;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material SCMaterial;

	[Token(Token = "0x17000054")]
	private Material material
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xA19F5C", Offset = "0xA19F5C", VA = "0xA19F5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xA1A030", Offset = "0xA1A030", VA = "0xA1A030")]
	private void Start()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xA1A0B0", Offset = "0xA1A0B0", VA = "0xA1A0B0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xA1A3B4", Offset = "0xA1A3B4", VA = "0xA1A3B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xA1A3B8", Offset = "0xA1A3B8", VA = "0xA1A3B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xA1A444", Offset = "0xA1A444", VA = "0xA1A444")]
	public CameraFilterPack_Blur_BlurHole()
	{
	}
}
[Token(Token = "0x2000074")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blur/Blurry")]
public class CameraFilterPack_Blur_Blurry : MonoBehaviour
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	public float Amount;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(1f, 8f)]
	public int FastFilter;

	[Token(Token = "0x17000055")]
	private Material material
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xA1A468", Offset = "0xA1A468", VA = "0xA1A468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xA1A53C", Offset = "0xA1A53C", VA = "0xA1A53C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xA1A5BC", Offset = "0xA1A5BC", VA = "0xA1A5BC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xA1A86C", Offset = "0xA1A86C", VA = "0xA1A86C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xA1A870", Offset = "0xA1A870", VA = "0xA1A870")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xA1A8FC", Offset = "0xA1A8FC", VA = "0xA1A8FC")]
	public CameraFilterPack_Blur_Blurry()
	{
	}
}
[Token(Token = "0x2000075")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blur/Dithering2x2")]
public class CameraFilterPack_Blur_Dithering2x2 : MonoBehaviour
{
	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(2f, 16f)]
	public int Level;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 Distance;

	[Token(Token = "0x17000056")]
	private Material material
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xA1A918", Offset = "0xA1A918", VA = "0xA1A918")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xA1A9EC", Offset = "0xA1A9EC", VA = "0xA1A9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xA1AA6C", Offset = "0xA1AA6C", VA = "0xA1AA6C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xA1ACA0", Offset = "0xA1ACA0", VA = "0xA1ACA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xA1ACA4", Offset = "0xA1ACA4", VA = "0xA1ACA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xA1AD30", Offset = "0xA1AD30", VA = "0xA1AD30")]
	public CameraFilterPack_Blur_Dithering2x2()
	{
	}
}
[Token(Token = "0x2000076")]
[AddComponentMenu("Camera Filter Pack/Blur/DitherOffset")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_DitherOffset : MonoBehaviour
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 16f)]
	public int Level;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 Distance;

	[Token(Token = "0x17000057")]
	private Material material
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xA1AD50", Offset = "0xA1AD50", VA = "0xA1AD50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xA1AE24", Offset = "0xA1AE24", VA = "0xA1AE24")]
	private void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xA1AEA4", Offset = "0xA1AEA4", VA = "0xA1AEA4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xA1B0D8", Offset = "0xA1B0D8", VA = "0xA1B0D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xA1B0DC", Offset = "0xA1B0DC", VA = "0xA1B0DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xA1B168", Offset = "0xA1B168", VA = "0xA1B168")]
	public CameraFilterPack_Blur_DitherOffset()
	{
	}
}
[Token(Token = "0x2000077")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blur/Focus")]
public class CameraFilterPack_Blur_Focus : MonoBehaviour
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1f, 1f)]
	public float CenterX;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float CenterY;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	public float _Size;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0.12f, 64f)]
	public float _Eyes;

	[Token(Token = "0x17000058")]
	private Material material
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xA1B188", Offset = "0xA1B188", VA = "0xA1B188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xA1B25C", Offset = "0xA1B25C", VA = "0xA1B25C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xA1B2DC", Offset = "0xA1B2DC", VA = "0xA1B2DC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xA1B5D4", Offset = "0xA1B5D4", VA = "0xA1B5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xA1B5D8", Offset = "0xA1B5D8", VA = "0xA1B5D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xA1B664", Offset = "0xA1B664", VA = "0xA1B664")]
	public CameraFilterPack_Blur_Focus()
	{
	}
}
[Token(Token = "0x2000078")]
[AddComponentMenu("Camera Filter Pack/Blur/GaussianBlur")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_GaussianBlur : MonoBehaviour
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 16f)]
	public float Size;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000059")]
	private Material material
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xA1B680", Offset = "0xA1B680", VA = "0xA1B680")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xA1B754", Offset = "0xA1B754", VA = "0xA1B754")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xA1B7D4", Offset = "0xA1B7D4", VA = "0xA1B7D4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xA1B9B8", Offset = "0xA1B9B8", VA = "0xA1B9B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xA1B9BC", Offset = "0xA1B9BC", VA = "0xA1B9BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xA1BA48", Offset = "0xA1BA48", VA = "0xA1BA48")]
	public CameraFilterPack_Blur_GaussianBlur()
	{
	}
}
[Token(Token = "0x2000079")]
[AddComponentMenu("Camera Filter Pack/Blur/Movie")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_Movie : MonoBehaviour
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1000f)]
	public float Radius;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1000f)]
	public float Factor;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(1f, 8f)]
	public int FastFilter;

	[Token(Token = "0x1700005A")]
	private Material material
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xA1BA5C", Offset = "0xA1BA5C", VA = "0xA1BA5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xA1BB30", Offset = "0xA1BB30", VA = "0xA1BB30")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xA1BBB0", Offset = "0xA1BBB0", VA = "0xA1BBB0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xA1BE88", Offset = "0xA1BE88", VA = "0xA1BE88")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xA1BE8C", Offset = "0xA1BE8C", VA = "0xA1BE8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xA1BF18", Offset = "0xA1BF18", VA = "0xA1BF18")]
	public CameraFilterPack_Blur_Movie()
	{
	}
}
[Token(Token = "0x200007A")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blur/Noise")]
public class CameraFilterPack_Blur_Noise : MonoBehaviour
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(2f, 16f)]
	public int Level;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 Distance;

	[Token(Token = "0x1700005B")]
	private Material material
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xA1BF3C", Offset = "0xA1BF3C", VA = "0xA1BF3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA1C010", Offset = "0xA1C010", VA = "0xA1C010")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xA1C090", Offset = "0xA1C090", VA = "0xA1C090")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xA1C2C4", Offset = "0xA1C2C4", VA = "0xA1C2C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xA1C2C8", Offset = "0xA1C2C8", VA = "0xA1C2C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xA1C354", Offset = "0xA1C354", VA = "0xA1C354")]
	public CameraFilterPack_Blur_Noise()
	{
	}
}
[Token(Token = "0x200007B")]
[AddComponentMenu("Camera Filter Pack/Blur/Radial")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_Radial : MonoBehaviour
{
	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-0.5f, 0.5f)]
	public float Intensity;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-2f, 2f)]
	public float MovX;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-2f, 2f)]
	public float MovY;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float blurWidth;

	[Token(Token = "0x1700005C")]
	private Material material
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xA1C374", Offset = "0xA1C374", VA = "0xA1C374")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xA1C448", Offset = "0xA1C448", VA = "0xA1C448")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xA1C4C8", Offset = "0xA1C4C8", VA = "0xA1C4C8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xA1C750", Offset = "0xA1C750", VA = "0xA1C750")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xA1C754", Offset = "0xA1C754", VA = "0xA1C754")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xA1C7E0", Offset = "0xA1C7E0", VA = "0xA1C7E0")]
	public CameraFilterPack_Blur_Radial()
	{
	}
}
[Token(Token = "0x200007C")]
[AddComponentMenu("Camera Filter Pack/Blur/Radial_Fast")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_Radial_Fast : MonoBehaviour
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-0.5f, 0.5f)]
	public float Intensity;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-2f, 2f)]
	public float MovX;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-2f, 2f)]
	public float MovY;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float blurWidth;

	[Token(Token = "0x1700005D")]
	private Material material
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xA1C7FC", Offset = "0xA1C7FC", VA = "0xA1C7FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xA1C8D0", Offset = "0xA1C8D0", VA = "0xA1C8D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xA1C950", Offset = "0xA1C950", VA = "0xA1C950")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xA1CBD8", Offset = "0xA1CBD8", VA = "0xA1CBD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xA1CBDC", Offset = "0xA1CBDC", VA = "0xA1CBDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xA1CC68", Offset = "0xA1CC68", VA = "0xA1CC68")]
	public CameraFilterPack_Blur_Radial_Fast()
	{
	}
}
[Token(Token = "0x200007D")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blur/Regular")]
public class CameraFilterPack_Blur_Regular : MonoBehaviour
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 16f)]
	public int Level;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 Distance;

	[Token(Token = "0x1700005E")]
	private Material material
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xA1CC84", Offset = "0xA1CC84", VA = "0xA1CC84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xA1CD58", Offset = "0xA1CD58", VA = "0xA1CD58")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xA1CDD8", Offset = "0xA1CDD8", VA = "0xA1CDD8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xA1D00C", Offset = "0xA1D00C", VA = "0xA1D00C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xA1D010", Offset = "0xA1D010", VA = "0xA1D010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xA1D09C", Offset = "0xA1D09C", VA = "0xA1D09C")]
	public CameraFilterPack_Blur_Regular()
	{
	}
}
[Token(Token = "0x200007E")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blur/Steam")]
public class CameraFilterPack_Blur_Steam : MonoBehaviour
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Radius;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Quality;

	[Token(Token = "0x1700005F")]
	private Material material
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xA1D0BC", Offset = "0xA1D0BC", VA = "0xA1D0BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA1D190", Offset = "0xA1D190", VA = "0xA1D190")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA1D210", Offset = "0xA1D210", VA = "0xA1D210")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xA1D424", Offset = "0xA1D424", VA = "0xA1D424")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xA1D428", Offset = "0xA1D428", VA = "0xA1D428")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xA1D4B4", Offset = "0xA1D4B4", VA = "0xA1D4B4")]
	public CameraFilterPack_Blur_Steam()
	{
	}
}
[Token(Token = "0x200007F")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Blur/Tilt_Shift")]
public class CameraFilterPack_Blur_Tilt_Shift : MonoBehaviour
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	public float Amount;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(2f, 16f)]
	public int FastFilter;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Smooth;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Size;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-1f, 1f)]
	public float Position;

	[Token(Token = "0x17000060")]
	private Material material
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xA1D4D0", Offset = "0xA1D4D0", VA = "0xA1D4D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xA1D5A4", Offset = "0xA1D5A4", VA = "0xA1D5A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xA1D624", Offset = "0xA1D624", VA = "0xA1D624")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xA1DA50", Offset = "0xA1DA50", VA = "0xA1DA50")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xA1DA54", Offset = "0xA1DA54", VA = "0xA1DA54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xA1DAE0", Offset = "0xA1DAE0", VA = "0xA1DAE0")]
	public CameraFilterPack_Blur_Tilt_Shift()
	{
	}
}
[Token(Token = "0x2000080")]
[AddComponentMenu("Camera Filter Pack/Blur/Tilt_Shift_Hole")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_Tilt_Shift_Hole : MonoBehaviour
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	public float Amount;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(2f, 16f)]
	public int FastFilter;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Smooth;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Size;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-1f, 1f)]
	public float PositionX;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-1f, 1f)]
	public float PositionY;

	[Token(Token = "0x17000061")]
	private Material material
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xA1DB0C", Offset = "0xA1DB0C", VA = "0xA1DB0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xA1DBE0", Offset = "0xA1DBE0", VA = "0xA1DBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xA1DC60", Offset = "0xA1DC60", VA = "0xA1DC60")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xA1E05C", Offset = "0xA1E05C", VA = "0xA1E05C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xA1E060", Offset = "0xA1E060", VA = "0xA1E060")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xA1E0EC", Offset = "0xA1E0EC", VA = "0xA1E0EC")]
	public CameraFilterPack_Blur_Tilt_Shift_Hole()
	{
	}
}
[Token(Token = "0x2000081")]
[AddComponentMenu("Camera Filter Pack/Blur/Tilt_Shift_V")]
[ExecuteInEditMode]
public class CameraFilterPack_Blur_Tilt_Shift_V : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	public float Amount;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(2f, 16f)]
	public int FastFilter;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Smooth;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Size;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-1f, 1f)]
	public float Position;

	[Token(Token = "0x17000062")]
	private Material material
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xA1E114", Offset = "0xA1E114", VA = "0xA1E114")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xA1E1E8", Offset = "0xA1E1E8", VA = "0xA1E1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xA1E268", Offset = "0xA1E268", VA = "0xA1E268")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xA1E634", Offset = "0xA1E634", VA = "0xA1E634")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA1E638", Offset = "0xA1E638", VA = "0xA1E638")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xA1E6C4", Offset = "0xA1E6C4", VA = "0xA1E6C4")]
	public CameraFilterPack_Blur_Tilt_Shift_V()
	{
	}
}
[Token(Token = "0x2000082")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/ColorsAdjust/ColorRGB")]
public class CameraFilterPack_Colors_Adjust_ColorRGB : MonoBehaviour
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-2f, 2f)]
	public float Red;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-2f, 2f)]
	public float Green;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-2f, 2f)]
	public float Blue;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-1f, 1f)]
	public float Brightness;

	[Token(Token = "0x17000063")]
	private Material material
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xA1E6F0", Offset = "0xA1E6F0", VA = "0xA1E6F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xA1E7C4", Offset = "0xA1E7C4", VA = "0xA1E7C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xA1E844", Offset = "0xA1E844", VA = "0xA1E844")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xA1EACC", Offset = "0xA1EACC", VA = "0xA1EACC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xA1EAD0", Offset = "0xA1EAD0", VA = "0xA1EAD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA1EB5C", Offset = "0xA1EB5C", VA = "0xA1EB5C")]
	public CameraFilterPack_Colors_Adjust_ColorRGB()
	{
	}
}
[Token(Token = "0x2000083")]
[AddComponentMenu("Camera Filter Pack/ColorsAdjust/FullColors")]
[ExecuteInEditMode]
public class CameraFilterPack_Colors_Adjust_FullColors : MonoBehaviour
{
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-200f, 200f)]
	public float Red_R;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-200f, 200f)]
	public float Red_G;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-200f, 200f)]
	public float Red_B;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-200f, 200f)]
	public float Red_Constant;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-200f, 200f)]
	public float Green_R;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(-200f, 200f)]
	public float Green_G;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-200f, 200f)]
	public float Green_B;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-200f, 200f)]
	public float Green_Constant;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(-200f, 200f)]
	public float Blue_R;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(-200f, 200f)]
	public float Blue_G;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(-200f, 200f)]
	public float Blue_B;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Range(-200f, 200f)]
	public float Blue_Constant;

	[Token(Token = "0x17000064")]
	private Material material
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xA1EB6C", Offset = "0xA1EB6C", VA = "0xA1EB6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xA1EC40", Offset = "0xA1EC40", VA = "0xA1EC40")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA1ECC0", Offset = "0xA1ECC0", VA = "0xA1ECC0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA1F158", Offset = "0xA1F158", VA = "0xA1F158")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xA1F160", Offset = "0xA1F160", VA = "0xA1F160")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xA1F1EC", Offset = "0xA1F1EC", VA = "0xA1F1EC")]
	public CameraFilterPack_Colors_Adjust_FullColors()
	{
	}
}
[Token(Token = "0x2000084")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/ColorsAdjust/Photo Filters")]
public class CameraFilterPack_Colors_Adjust_PreFilters : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	public enum filters
	{
		[Token(Token = "0x400047F")]
		Normal,
		[Token(Token = "0x4000480")]
		BlueLagoon,
		[Token(Token = "0x4000481")]
		BlueMoon,
		[Token(Token = "0x4000482")]
		RedWhite,
		[Token(Token = "0x4000483")]
		NashVille,
		[Token(Token = "0x4000484")]
		VintageYellow,
		[Token(Token = "0x4000485")]
		GoldenPink,
		[Token(Token = "0x4000486")]
		DarkPink,
		[Token(Token = "0x4000487")]
		PopRocket,
		[Token(Token = "0x4000488")]
		RedSoftLight,
		[Token(Token = "0x4000489")]
		YellowSunSet,
		[Token(Token = "0x400048A")]
		Walden,
		[Token(Token = "0x400048B")]
		WhiteShine,
		[Token(Token = "0x400048C")]
		Fluo,
		[Token(Token = "0x400048D")]
		MarsSunRise,
		[Token(Token = "0x400048E")]
		Amelie,
		[Token(Token = "0x400048F")]
		BlueJeans,
		[Token(Token = "0x4000490")]
		NightVision,
		[Token(Token = "0x4000491")]
		BlueParadise,
		[Token(Token = "0x4000492")]
		Blindness_Deuteranomaly,
		[Token(Token = "0x4000493")]
		Blindness_Protanopia,
		[Token(Token = "0x4000494")]
		Blindness_Protanomaly,
		[Token(Token = "0x4000495")]
		Blindness_Deuteranopia,
		[Token(Token = "0x4000496")]
		Blindness_Tritanomaly,
		[Token(Token = "0x4000497")]
		Blindness_Achromatopsia,
		[Token(Token = "0x4000498")]
		Blindness_Achromatomaly,
		[Token(Token = "0x4000499")]
		Blindness_Tritanopia,
		[Token(Token = "0x400049A")]
		BlackAndWhite_Blue,
		[Token(Token = "0x400049B")]
		BlackAndWhite_Green,
		[Token(Token = "0x400049C")]
		BlackAndWhite_Orange,
		[Token(Token = "0x400049D")]
		BlackAndWhite_Red,
		[Token(Token = "0x400049E")]
		BlackAndWhite_Yellow
	}

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public filters filterchoice;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float FadeFX;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SCMaterial;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] Matrix9;

	[Token(Token = "0x17000065")]
	private Material material
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xA1F20C", Offset = "0xA1F20C", VA = "0xA1F20C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xA1F2E0", Offset = "0xA1F2E0", VA = "0xA1F2E0")]
	private void ChangeFilters()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xA1FD2C", Offset = "0xA1FD2C", VA = "0xA1FD2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xA1FD7C", Offset = "0xA1FD7C", VA = "0xA1FD7C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xA20334", Offset = "0xA20334", VA = "0xA20334")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xA20338", Offset = "0xA20338", VA = "0xA20338")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xA2033C", Offset = "0xA2033C", VA = "0xA2033C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xA203C8", Offset = "0xA203C8", VA = "0xA203C8")]
	public CameraFilterPack_Colors_Adjust_PreFilters()
	{
	}
}
[Token(Token = "0x2000086")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/BleachBypass")]
public class CameraFilterPack_Colors_BleachBypass : MonoBehaviour
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1f, 2f)]
	public float Value;

	[Token(Token = "0x17000066")]
	private Material material
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xA20428", Offset = "0xA20428", VA = "0xA20428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xA204FC", Offset = "0xA204FC", VA = "0xA204FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xA2057C", Offset = "0xA2057C", VA = "0xA2057C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xA20774", Offset = "0xA20774", VA = "0xA20774")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xA20778", Offset = "0xA20778", VA = "0xA20778")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xA20804", Offset = "0xA20804", VA = "0xA20804")]
	public CameraFilterPack_Colors_BleachBypass()
	{
	}
}
[Token(Token = "0x2000087")]
[AddComponentMenu("Camera Filter Pack/Colors/Brightness")]
[ExecuteInEditMode]
public class CameraFilterPack_Colors_Brightness : MonoBehaviour
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 2f)]
	public float _Brightness;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x17000067")]
	private Material material
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xA20818", Offset = "0xA20818", VA = "0xA20818")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xA208EC", Offset = "0xA208EC", VA = "0xA208EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xA2096C", Offset = "0xA2096C", VA = "0xA2096C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xA20A88", Offset = "0xA20A88", VA = "0xA20A88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xA20A8C", Offset = "0xA20A8C", VA = "0xA20A8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xA20B18", Offset = "0xA20B18", VA = "0xA20B18")]
	public CameraFilterPack_Colors_Brightness()
	{
	}
}
[Token(Token = "0x2000088")]
[AddComponentMenu("Camera Filter Pack/Colors/DarkColor")]
[ExecuteInEditMode]
public class CameraFilterPack_Colors_DarkColor : MonoBehaviour
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-5f, 5f)]
	public float Alpha;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 16f)]
	private float Colors;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	private float Green_Mod;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x17000068")]
	private Material material
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xA20B28", Offset = "0xA20B28", VA = "0xA20B28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xA20BFC", Offset = "0xA20BFC", VA = "0xA20BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xA20C7C", Offset = "0xA20C7C", VA = "0xA20C7C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xA20F04", Offset = "0xA20F04", VA = "0xA20F04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xA20F08", Offset = "0xA20F08", VA = "0xA20F08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xA20F94", Offset = "0xA20F94", VA = "0xA20F94")]
	public CameraFilterPack_Colors_DarkColor()
	{
	}
}
[Token(Token = "0x2000089")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/HSV")]
public class CameraFilterPack_Colors_HSV : MonoBehaviour
{
	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 360f)]
	public float _HueShift;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(-32f, 32f)]
	public float _Saturation;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(-32f, 32f)]
	public float _ValueBrightness;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material SCMaterial;

	[Token(Token = "0x17000069")]
	private Material material
	{
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xA20FB0", Offset = "0xA20FB0", VA = "0xA20FB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xA21084", Offset = "0xA21084", VA = "0xA21084")]
	private void Start()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xA210B4", Offset = "0xA210B4", VA = "0xA210B4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xA21230", Offset = "0xA21230", VA = "0xA21230")]
	private void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xA21234", Offset = "0xA21234", VA = "0xA21234")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xA212C0", Offset = "0xA212C0", VA = "0xA212C0")]
	public CameraFilterPack_Colors_HSV()
	{
	}
}
[Token(Token = "0x200008A")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/HUE_Rotate")]
public class CameraFilterPack_Colors_HUE_Rotate : MonoBehaviour
{
	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 20f)]
	public float Speed;

	[Token(Token = "0x1700006A")]
	private Material material
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xA212DC", Offset = "0xA212DC", VA = "0xA212DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xA213B0", Offset = "0xA213B0", VA = "0xA213B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xA21430", Offset = "0xA21430", VA = "0xA21430")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xA21614", Offset = "0xA21614", VA = "0xA21614")]
	private void Update()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xA21618", Offset = "0xA21618", VA = "0xA21618")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xA216A4", Offset = "0xA216A4", VA = "0xA216A4")]
	public CameraFilterPack_Colors_HUE_Rotate()
	{
	}
}
[Token(Token = "0x200008B")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/NewPosterize")]
public class CameraFilterPack_Colors_NewPosterize : MonoBehaviour
{
	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2f)]
	public float Gamma;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 16f)]
	public float Colors;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float Green_Mod;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x1700006B")]
	private Material material
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xA216BC", Offset = "0xA216BC", VA = "0xA216BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xA21790", Offset = "0xA21790", VA = "0xA21790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA21810", Offset = "0xA21810", VA = "0xA21810")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA21A98", Offset = "0xA21A98", VA = "0xA21A98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA21A9C", Offset = "0xA21A9C", VA = "0xA21A9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA21B28", Offset = "0xA21B28", VA = "0xA21B28")]
	public CameraFilterPack_Colors_NewPosterize()
	{
	}
}
[Token(Token = "0x200008C")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/RgbClamp")]
public class CameraFilterPack_Colors_RgbClamp : MonoBehaviour
{
	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Red_Start;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Red_End;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Green_Start;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Green_End;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Blue_Start;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float Blue_End;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	public float RGB_Start;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 1f)]
	public float RGB_End;

	[Token(Token = "0x1700006C")]
	private Material material
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xA21B44", Offset = "0xA21B44", VA = "0xA21B44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA21C18", Offset = "0xA21C18", VA = "0xA21C18")]
	private void Start()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA21C98", Offset = "0xA21C98", VA = "0xA21C98")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA21FE0", Offset = "0xA21FE0", VA = "0xA21FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA21FE4", Offset = "0xA21FE4", VA = "0xA21FE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xA22070", Offset = "0xA22070", VA = "0xA22070")]
	public CameraFilterPack_Colors_RgbClamp()
	{
	}
}
[Token(Token = "0x200008D")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/Threshold")]
public class CameraFilterPack_Colors_Threshold : MonoBehaviour
{
	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float Threshold;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x1700006D")]
	private Material material
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xA22090", Offset = "0xA22090", VA = "0xA22090")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xA22164", Offset = "0xA22164", VA = "0xA22164")]
	private void Start()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xA221E4", Offset = "0xA221E4", VA = "0xA221E4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xA22364", Offset = "0xA22364", VA = "0xA22364")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xA22368", Offset = "0xA22368", VA = "0xA22368")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xA223F4", Offset = "0xA223F4", VA = "0xA223F4")]
	public CameraFilterPack_Colors_Threshold()
	{
	}
}
[Token(Token = "0x200008E")]
[AddComponentMenu("Camera Filter Pack/Colors/BrightContrastSaturation")]
[ExecuteInEditMode]
public class CameraFilterPack_Color_BrightContrastSaturation : MonoBehaviour
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float Brightness;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float Saturation;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	public float Contrast;

	[Token(Token = "0x1700006E")]
	private Material material
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xA22408", Offset = "0xA22408", VA = "0xA22408")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xA224DC", Offset = "0xA224DC", VA = "0xA224DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xA2255C", Offset = "0xA2255C", VA = "0xA2255C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xA227B4", Offset = "0xA227B4", VA = "0xA227B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xA227B8", Offset = "0xA227B8", VA = "0xA227B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xA22844", Offset = "0xA22844", VA = "0xA22844")]
	public CameraFilterPack_Color_BrightContrastSaturation()
	{
	}
}
[Token(Token = "0x200008F")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/Chromatic_Aberration")]
public class CameraFilterPack_Color_Chromatic_Aberration : MonoBehaviour
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-0.02f, 0.02f)]
	public float Offset;

	[Token(Token = "0x1700006F")]
	private Material material
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xA22868", Offset = "0xA22868", VA = "0xA22868")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xA2293C", Offset = "0xA2293C", VA = "0xA2293C")]
	private void Start()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xA229BC", Offset = "0xA229BC", VA = "0xA229BC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xA22BB4", Offset = "0xA22BB4", VA = "0xA22BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xA22BB8", Offset = "0xA22BB8", VA = "0xA22BB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xA22C44", Offset = "0xA22C44", VA = "0xA22C44")]
	public CameraFilterPack_Color_Chromatic_Aberration()
	{
	}
}
[Token(Token = "0x2000090")]
[AddComponentMenu("Camera Filter Pack/Colors/Chromatic_Plus")]
[ExecuteInEditMode]
public class CameraFilterPack_Color_Chromatic_Plus : MonoBehaviour
{
	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.8f)]
	public float Size;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0.01f, 0.4f)]
	public float Smooth;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-0.02f, 0.02f)]
	public float Offset;

	[Token(Token = "0x17000070")]
	private Material material
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xA22C60", Offset = "0xA22C60", VA = "0xA22C60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xA22D34", Offset = "0xA22D34", VA = "0xA22D34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xA22DB4", Offset = "0xA22DB4", VA = "0xA22DB4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xA2300C", Offset = "0xA2300C", VA = "0xA2300C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xA23010", Offset = "0xA23010", VA = "0xA23010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xA2309C", Offset = "0xA2309C", VA = "0xA2309C")]
	public CameraFilterPack_Color_Chromatic_Plus()
	{
	}
}
[Token(Token = "0x2000091")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/Contrast")]
public class CameraFilterPack_Color_Contrast : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float Contrast;

	[Token(Token = "0x17000071")]
	private Material material
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xA230C4", Offset = "0xA230C4", VA = "0xA230C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xA23198", Offset = "0xA23198", VA = "0xA23198")]
	private void Start()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xA23218", Offset = "0xA23218", VA = "0xA23218")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xA23410", Offset = "0xA23410", VA = "0xA23410")]
	private void Update()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xA23414", Offset = "0xA23414", VA = "0xA23414")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xA234A0", Offset = "0xA234A0", VA = "0xA234A0")]
	public CameraFilterPack_Color_Contrast()
	{
	}
}
[Token(Token = "0x2000092")]
[AddComponentMenu("Camera Filter Pack/Colors/GrayScale")]
[ExecuteInEditMode]
public class CameraFilterPack_Color_GrayScale : MonoBehaviour
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float _Fade;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000072")]
	private Material material
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xA234B8", Offset = "0xA234B8", VA = "0xA234B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xA2358C", Offset = "0xA2358C", VA = "0xA2358C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xA2360C", Offset = "0xA2360C", VA = "0xA2360C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xA23804", Offset = "0xA23804", VA = "0xA23804")]
	private void Update()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xA23808", Offset = "0xA23808", VA = "0xA23808")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xA23894", Offset = "0xA23894", VA = "0xA23894")]
	public CameraFilterPack_Color_GrayScale()
	{
	}
}
[Token(Token = "0x2000093")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/Invert")]
public class CameraFilterPack_Color_Invert : MonoBehaviour
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float _Fade;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000073")]
	private Material material
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xA238A4", Offset = "0xA238A4", VA = "0xA238A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xA23978", Offset = "0xA23978", VA = "0xA23978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xA239F8", Offset = "0xA239F8", VA = "0xA239F8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xA23BF0", Offset = "0xA23BF0", VA = "0xA23BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xA23BF4", Offset = "0xA23BF4", VA = "0xA23BF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xA23C80", Offset = "0xA23C80", VA = "0xA23C80")]
	public CameraFilterPack_Color_Invert()
	{
	}
}
[Token(Token = "0x2000094")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/Noise")]
public class CameraFilterPack_Color_Noise : MonoBehaviour
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Noise;

	[Token(Token = "0x17000074")]
	private Material material
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0xA23C90", Offset = "0xA23C90", VA = "0xA23C90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xA23D64", Offset = "0xA23D64", VA = "0xA23D64")]
	private void Start()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xA23DE4", Offset = "0xA23DE4", VA = "0xA23DE4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xA23FDC", Offset = "0xA23FDC", VA = "0xA23FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xA23FE0", Offset = "0xA23FE0", VA = "0xA23FE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xA2406C", Offset = "0xA2406C", VA = "0xA2406C")]
	public CameraFilterPack_Color_Noise()
	{
	}
}
[Token(Token = "0x2000095")]
[AddComponentMenu("Camera Filter Pack/Colors/RGB")]
[ExecuteInEditMode]
public class CameraFilterPack_Color_RGB : MonoBehaviour
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color ColorRGB;

	[Token(Token = "0x17000075")]
	private Material material
	{
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xA24088", Offset = "0xA24088", VA = "0xA24088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xA2415C", Offset = "0xA2415C", VA = "0xA2415C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xA241DC", Offset = "0xA241DC", VA = "0xA241DC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xA243D8", Offset = "0xA243D8", VA = "0xA243D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xA243DC", Offset = "0xA243DC", VA = "0xA243DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xA24468", Offset = "0xA24468", VA = "0xA24468")]
	public CameraFilterPack_Color_RGB()
	{
	}
}
[Token(Token = "0x2000096")]
[AddComponentMenu("Camera Filter Pack/Colors/Sepia")]
[ExecuteInEditMode]
public class CameraFilterPack_Color_Sepia : MonoBehaviour
{
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float _Fade;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000076")]
	private Material material
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xA24480", Offset = "0xA24480", VA = "0xA24480")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA24554", Offset = "0xA24554", VA = "0xA24554")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA245D4", Offset = "0xA245D4", VA = "0xA245D4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA247CC", Offset = "0xA247CC", VA = "0xA247CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xA247D0", Offset = "0xA247D0", VA = "0xA247D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xA2485C", Offset = "0xA2485C", VA = "0xA2485C")]
	public CameraFilterPack_Color_Sepia()
	{
	}
}
[Token(Token = "0x2000097")]
[AddComponentMenu("Camera Filter Pack/Colors/Switching")]
[ExecuteInEditMode]
public class CameraFilterPack_Color_Switching : MonoBehaviour
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 5f)]
	public int Color;

	[Token(Token = "0x17000077")]
	private Material material
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0xA2486C", Offset = "0xA2486C", VA = "0xA2486C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xA24940", Offset = "0xA24940", VA = "0xA24940")]
	private void Start()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xA249C0", Offset = "0xA249C0", VA = "0xA249C0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xA24BBC", Offset = "0xA24BBC", VA = "0xA24BBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xA24BC0", Offset = "0xA24BC0", VA = "0xA24BC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xA24C4C", Offset = "0xA24C4C", VA = "0xA24C4C")]
	public CameraFilterPack_Color_Switching()
	{
	}
}
[Token(Token = "0x2000098")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Colors/Color_YUV")]
public class CameraFilterPack_Color_YUV : MonoBehaviour
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1f, 1f)]
	public float _Y;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float _U;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float _V;

	[Token(Token = "0x17000078")]
	private Material material
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xA24C64", Offset = "0xA24C64", VA = "0xA24C64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xA24D38", Offset = "0xA24D38", VA = "0xA24D38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xA24DB8", Offset = "0xA24DB8", VA = "0xA24DB8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xA25010", Offset = "0xA25010", VA = "0xA25010")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xA25014", Offset = "0xA25014", VA = "0xA25014")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xA250A0", Offset = "0xA250A0", VA = "0xA250A0")]
	public CameraFilterPack_Color_YUV()
	{
	}
}
[Token(Token = "0x2000099")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/Aspiration")]
public class CameraFilterPack_Distortion_Aspiration : MonoBehaviour
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Value;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float PosX;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float PosY;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x17000079")]
	private Material material
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0xA250B0", Offset = "0xA250B0", VA = "0xA250B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xA25184", Offset = "0xA25184", VA = "0xA25184")]
	private void Start()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xA25204", Offset = "0xA25204", VA = "0xA25204")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xA25494", Offset = "0xA25494", VA = "0xA25494")]
	private void Update()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xA25498", Offset = "0xA25498", VA = "0xA25498")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xA25524", Offset = "0xA25524", VA = "0xA25524")]
	public CameraFilterPack_Distortion_Aspiration()
	{
	}
}
[Token(Token = "0x200009A")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/BigFace")]
public class CameraFilterPack_Distortion_BigFace : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _Size;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(2f, 10f)]
	public float Distortion;

	[Token(Token = "0x1700007A")]
	private Material material
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xA25540", Offset = "0xA25540", VA = "0xA25540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xA25614", Offset = "0xA25614", VA = "0xA25614")]
	private void Start()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xA25694", Offset = "0xA25694", VA = "0xA25694")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xA258BC", Offset = "0xA258BC", VA = "0xA258BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xA258C0", Offset = "0xA258C0", VA = "0xA258C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xA2594C", Offset = "0xA2594C", VA = "0xA2594C")]
	public CameraFilterPack_Distortion_BigFace()
	{
	}
}
[Token(Token = "0x200009B")]
[AddComponentMenu("Camera Filter Pack/Distortion/BlackHole")]
[ExecuteInEditMode]
public class CameraFilterPack_Distortion_BlackHole : MonoBehaviour
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1f, 1f)]
	public float PositionX;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float PositionY;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-5f, 5f)]
	public float Size;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 180f)]
	public float Distortion;

	[Token(Token = "0x1700007B")]
	private Material material
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0xA25968", Offset = "0xA25968", VA = "0xA25968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xA25A3C", Offset = "0xA25A3C", VA = "0xA25A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xA25ABC", Offset = "0xA25ABC", VA = "0xA25ABC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xA25D30", Offset = "0xA25D30", VA = "0xA25D30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xA25D34", Offset = "0xA25D34", VA = "0xA25D34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xA25DC0", Offset = "0xA25DC0", VA = "0xA25DC0")]
	public CameraFilterPack_Distortion_BlackHole()
	{
	}
}
[Token(Token = "0x200009C")]
[AddComponentMenu("Camera Filter Pack/Distortion/Dissipation")]
[ExecuteInEditMode]
public class CameraFilterPack_Distortion_Dissipation : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2.99f)]
	public float Dissipation;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 16f)]
	private float Colors;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	private float Green_Mod;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x1700007C")]
	private Material material
	{
		[Token(Token = "0x600037A")]
		[Address(RVA = "0xA25DDC", Offset = "0xA25DDC", VA = "0xA25DDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xA25EB0", Offset = "0xA25EB0", VA = "0xA25EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xA25F30", Offset = "0xA25F30", VA = "0xA25F30")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xA261B8", Offset = "0xA261B8", VA = "0xA261B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xA261BC", Offset = "0xA261BC", VA = "0xA261BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xA26248", Offset = "0xA26248", VA = "0xA26248")]
	public CameraFilterPack_Distortion_Dissipation()
	{
	}
}
[Token(Token = "0x200009D")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/Dream")]
public class CameraFilterPack_Distortion_Dream : MonoBehaviour
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 10f)]
	public float Distortion;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x1700007D")]
	private Material material
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0xA26264", Offset = "0xA26264", VA = "0xA26264")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xA26338", Offset = "0xA26338", VA = "0xA26338")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xA263B8", Offset = "0xA263B8", VA = "0xA263B8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xA26538", Offset = "0xA26538", VA = "0xA26538")]
	private void Update()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xA2653C", Offset = "0xA2653C", VA = "0xA2653C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xA265C8", Offset = "0xA265C8", VA = "0xA265C8")]
	public CameraFilterPack_Distortion_Dream()
	{
	}
}
[Token(Token = "0x200009E")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/Dream2")]
public class CameraFilterPack_Distortion_Dream2 : MonoBehaviour
{
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float Distortion;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 32f)]
	public float Speed;

	[Token(Token = "0x1700007E")]
	private Material material
	{
		[Token(Token = "0x6000386")]
		[Address(RVA = "0xA265D8", Offset = "0xA265D8", VA = "0xA265D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xA266AC", Offset = "0xA266AC", VA = "0xA266AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xA2672C", Offset = "0xA2672C", VA = "0xA2672C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xA26954", Offset = "0xA26954", VA = "0xA26954")]
	private void Update()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xA26958", Offset = "0xA26958", VA = "0xA26958")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xA269E4", Offset = "0xA269E4", VA = "0xA269E4")]
	public CameraFilterPack_Distortion_Dream2()
	{
	}
}
[Token(Token = "0x200009F")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/FishEye")]
public class CameraFilterPack_Distortion_FishEye : MonoBehaviour
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Distortion;

	[Token(Token = "0x1700007F")]
	private Material material
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0xA26A00", Offset = "0xA26A00", VA = "0xA26A00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xA26AD4", Offset = "0xA26AD4", VA = "0xA26AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xA26B54", Offset = "0xA26B54", VA = "0xA26B54")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xA26D4C", Offset = "0xA26D4C", VA = "0xA26D4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xA26D50", Offset = "0xA26D50", VA = "0xA26D50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xA26DDC", Offset = "0xA26DDC", VA = "0xA26DDC")]
	public CameraFilterPack_Distortion_FishEye()
	{
	}
}
[Token(Token = "0x20000A0")]
[AddComponentMenu("Camera Filter Pack/Distortion/Flag")]
[ExecuteInEditMode]
public class CameraFilterPack_Distortion_Flag : MonoBehaviour
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 2f)]
	public float Distortion;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ChangeDistortion;

	[Token(Token = "0x17000080")]
	private Material material
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xA26DF8", Offset = "0xA26DF8", VA = "0xA26DF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xA26ECC", Offset = "0xA26ECC", VA = "0xA26ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xA26F4C", Offset = "0xA26F4C", VA = "0xA26F4C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xA27130", Offset = "0xA27130", VA = "0xA27130")]
	private void Update()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xA27134", Offset = "0xA27134", VA = "0xA27134")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xA271C0", Offset = "0xA271C0", VA = "0xA271C0")]
	public CameraFilterPack_Distortion_Flag()
	{
	}
}
[Token(Token = "0x20000A1")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/Flush")]
public class CameraFilterPack_Distortion_Flush : MonoBehaviour
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-10f, 50f)]
	public float Value;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1.5f, 1.5f)]
	private float LightBackGround;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Speed;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Size2;

	[Token(Token = "0x17000081")]
	private Material material
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xA271D0", Offset = "0xA271D0", VA = "0xA271D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xA272A4", Offset = "0xA272A4", VA = "0xA272A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xA27324", Offset = "0xA27324", VA = "0xA27324")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xA2751C", Offset = "0xA2751C", VA = "0xA2751C")]
	private void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xA27520", Offset = "0xA27520", VA = "0xA27520")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xA275AC", Offset = "0xA275AC", VA = "0xA275AC")]
	public CameraFilterPack_Distortion_Flush()
	{
	}
}
[Token(Token = "0x20000A2")]
[AddComponentMenu("Camera Filter Pack/Distortion/Half_Sphere")]
[ExecuteInEditMode]
public class CameraFilterPack_Distortion_Half_Sphere : MonoBehaviour
{
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 6f)]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float SphereSize;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float SpherePositionX;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float SpherePositionY;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(1f, 10f)]
	public float Strength;

	[Token(Token = "0x17000082")]
	private Material material
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0xA275C8", Offset = "0xA275C8", VA = "0xA275C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xA2769C", Offset = "0xA2769C", VA = "0xA2769C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xA2771C", Offset = "0xA2771C", VA = "0xA2771C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xA27990", Offset = "0xA27990", VA = "0xA27990")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xA27994", Offset = "0xA27994", VA = "0xA27994")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xA27A20", Offset = "0xA27A20", VA = "0xA27A20")]
	public CameraFilterPack_Distortion_Half_Sphere()
	{
	}
}
[Token(Token = "0x20000A3")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/Heat")]
public class CameraFilterPack_Distortion_Heat : MonoBehaviour
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 100f)]
	public float Distortion;

	[Token(Token = "0x17000083")]
	private Material material
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xA27A40", Offset = "0xA27A40", VA = "0xA27A40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xA27B14", Offset = "0xA27B14", VA = "0xA27B14")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xA27B94", Offset = "0xA27B94", VA = "0xA27B94")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xA27D8C", Offset = "0xA27D8C", VA = "0xA27D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xA27D90", Offset = "0xA27D90", VA = "0xA27D90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xA27E1C", Offset = "0xA27E1C", VA = "0xA27E1C")]
	public CameraFilterPack_Distortion_Heat()
	{
	}
}
[Token(Token = "0x20000A4")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/Lens")]
public class CameraFilterPack_Distortion_Lens : MonoBehaviour
{
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1f, 1f)]
	public float CenterX;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float CenterY;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 3f)]
	public float Distortion;

	[Token(Token = "0x17000084")]
	private Material material
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xA27E34", Offset = "0xA27E34", VA = "0xA27E34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xA27F08", Offset = "0xA27F08", VA = "0xA27F08")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xA27F88", Offset = "0xA27F88", VA = "0xA27F88")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xA281CC", Offset = "0xA281CC", VA = "0xA281CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xA281D0", Offset = "0xA281D0", VA = "0xA281D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xA2825C", Offset = "0xA2825C", VA = "0xA2825C")]
	public CameraFilterPack_Distortion_Lens()
	{
	}
}
[Token(Token = "0x20000A5")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/Noise")]
public class CameraFilterPack_Distortion_Noise : MonoBehaviour
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 3f)]
	public float Distortion;

	[Token(Token = "0x17000085")]
	private Material material
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xA28270", Offset = "0xA28270", VA = "0xA28270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xA28344", Offset = "0xA28344", VA = "0xA28344")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xA283C4", Offset = "0xA283C4", VA = "0xA283C4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xA285A8", Offset = "0xA285A8", VA = "0xA285A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xA285AC", Offset = "0xA285AC", VA = "0xA285AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xA28638", Offset = "0xA28638", VA = "0xA28638")]
	public CameraFilterPack_Distortion_Noise()
	{
	}
}
[Token(Token = "0x20000A6")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/ShockWave")]
public class CameraFilterPack_Distortion_ShockWave : MonoBehaviour
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1.5f, 1.5f)]
	public float PosX;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1.5f, 1.5f)]
	public float PosY;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Size;

	[Token(Token = "0x17000086")]
	private Material material
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xA2864C", Offset = "0xA2864C", VA = "0xA2864C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xA28720", Offset = "0xA28720", VA = "0xA28720")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xA287A0", Offset = "0xA287A0", VA = "0xA287A0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xA28A28", Offset = "0xA28A28", VA = "0xA28A28")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xA28A2C", Offset = "0xA28A2C", VA = "0xA28A2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xA28AB8", Offset = "0xA28AB8", VA = "0xA28AB8")]
	public CameraFilterPack_Distortion_ShockWave()
	{
	}
}
[Token(Token = "0x20000A7")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/ShockWave Manual")]
public class CameraFilterPack_Distortion_ShockWaveManual : MonoBehaviour
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1.5f, 1.5f)]
	public float PosX;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1.5f, 1.5f)]
	public float PosY;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-0.1f, 2f)]
	public float Value;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	public float Size;

	[Token(Token = "0x17000087")]
	private Material material
	{
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xA28AD4", Offset = "0xA28AD4", VA = "0xA28AD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xA28BA8", Offset = "0xA28BA8", VA = "0xA28BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xA28C28", Offset = "0xA28C28", VA = "0xA28C28")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xA28EB0", Offset = "0xA28EB0", VA = "0xA28EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xA28EB4", Offset = "0xA28EB4", VA = "0xA28EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xA28F40", Offset = "0xA28F40", VA = "0xA28F40")]
	public CameraFilterPack_Distortion_ShockWaveManual()
	{
	}
}
[Token(Token = "0x20000A8")]
[AddComponentMenu("Camera Filter Pack/Distortion/Twist")]
[ExecuteInEditMode]
public class CameraFilterPack_Distortion_Twist : MonoBehaviour
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-2f, 2f)]
	public float CenterX;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-2f, 2f)]
	public float CenterY;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-3.14f, 3.14f)]
	public float Distortion;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-2f, 2f)]
	public float Size;

	[Token(Token = "0x17000088")]
	private Material material
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xA28F5C", Offset = "0xA28F5C", VA = "0xA28F5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xA29030", Offset = "0xA29030", VA = "0xA29030")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xA290B0", Offset = "0xA290B0", VA = "0xA290B0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xA29324", Offset = "0xA29324", VA = "0xA29324")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xA29328", Offset = "0xA29328", VA = "0xA29328")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xA293B4", Offset = "0xA293B4", VA = "0xA293B4")]
	public CameraFilterPack_Distortion_Twist()
	{
	}
}
[Token(Token = "0x20000A9")]
[AddComponentMenu("Camera Filter Pack/Distortion/Twist_Square")]
[ExecuteInEditMode]
public class CameraFilterPack_Distortion_Twist_Square : MonoBehaviour
{
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-2f, 2f)]
	public float CenterX;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-2f, 2f)]
	public float CenterY;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-3.14f, 3.14f)]
	public float Distortion;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-2f, 2f)]
	public float Size;

	[Token(Token = "0x17000089")]
	private Material material
	{
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xA293D0", Offset = "0xA293D0", VA = "0xA293D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xA294A4", Offset = "0xA294A4", VA = "0xA294A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xA29524", Offset = "0xA29524", VA = "0xA29524")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xA29798", Offset = "0xA29798", VA = "0xA29798")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xA2979C", Offset = "0xA2979C", VA = "0xA2979C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xA29828", Offset = "0xA29828", VA = "0xA29828")]
	public CameraFilterPack_Distortion_Twist_Square()
	{
	}
}
[Token(Token = "0x20000AA")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Distortion/Water_Drop")]
public class CameraFilterPack_Distortion_Water_Drop : MonoBehaviour
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1f, 1f)]
	public float CenterX;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float CenterY;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	public float WaveIntensity;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 20f)]
	public int NumberOfWaves;

	[Token(Token = "0x1700008A")]
	private Material material
	{
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xA29844", Offset = "0xA29844", VA = "0xA29844")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xA29918", Offset = "0xA29918", VA = "0xA29918")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xA29998", Offset = "0xA29998", VA = "0xA29998")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xA29C0C", Offset = "0xA29C0C", VA = "0xA29C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xA29C10", Offset = "0xA29C10", VA = "0xA29C10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xA29C9C", Offset = "0xA29C9C", VA = "0xA29C9C")]
	public CameraFilterPack_Distortion_Water_Drop()
	{
	}
}
[Token(Token = "0x20000AB")]
[AddComponentMenu("Camera Filter Pack/Distortion/Wave_Horizontal")]
[ExecuteInEditMode]
public class CameraFilterPack_Distortion_Wave_Horizontal : MonoBehaviour
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 100f)]
	public float WaveIntensity;

	[Token(Token = "0x1700008B")]
	private Material material
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xA29CB8", Offset = "0xA29CB8", VA = "0xA29CB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xA29D8C", Offset = "0xA29D8C", VA = "0xA29D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xA29E0C", Offset = "0xA29E0C", VA = "0xA29E0C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xA29FF0", Offset = "0xA29FF0", VA = "0xA29FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xA29FF4", Offset = "0xA29FF4", VA = "0xA29FF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xA2A080", Offset = "0xA2A080", VA = "0xA2A080")]
	public CameraFilterPack_Distortion_Wave_Horizontal()
	{
	}
}
[Token(Token = "0x20000AC")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/BluePrint")]
public class CameraFilterPack_Drawing_BluePrint : MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Pencil_Color;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.0001f, 0.0022f)]
	public float Pencil_Size;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 2f)]
	public float Pencil_Correction;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2f)]
	public float Speed_Animation;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Corner_Lose;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Fade_Paper_to_BackColor;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade_With_Original;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Back_Color;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material SCMaterial;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x1700008C")]
	private Material material
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xA2A098", Offset = "0xA2A098", VA = "0xA2A098")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xA2A16C", Offset = "0xA2A16C", VA = "0xA2A16C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xA2A260", Offset = "0xA2A260", VA = "0xA2A260")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xA2A598", Offset = "0xA2A598", VA = "0xA2A598")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xA2A59C", Offset = "0xA2A59C", VA = "0xA2A59C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xA2A628", Offset = "0xA2A628", VA = "0xA2A628")]
	public CameraFilterPack_Drawing_BluePrint()
	{
	}
}
[Token(Token = "0x20000AD")]
[AddComponentMenu("Camera Filter Pack/Drawing/CellShading")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_CellShading : MonoBehaviour
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float EdgeSize;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float ColorLevel;

	[Token(Token = "0x1700008D")]
	private Material material
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xA3F744", Offset = "0xA3F744", VA = "0xA3F744")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xA3F818", Offset = "0xA3F818", VA = "0xA3F818")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xA3F898", Offset = "0xA3F898", VA = "0xA3F898")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xA3FAAC", Offset = "0xA3FAAC", VA = "0xA3FAAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xA3FAB0", Offset = "0xA3FAB0", VA = "0xA3FAB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xA3FB3C", Offset = "0xA3FB3C", VA = "0xA3FB3C")]
	public CameraFilterPack_Drawing_CellShading()
	{
	}
}
[Token(Token = "0x20000AE")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/CellShading2")]
public class CameraFilterPack_Drawing_CellShading2 : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float EdgeSize;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float ColorLevel;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Blur;

	[Token(Token = "0x1700008E")]
	private Material material
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xA3FB58", Offset = "0xA3FB58", VA = "0xA3FB58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xA3FC2C", Offset = "0xA3FC2C", VA = "0xA3FC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xA3FCAC", Offset = "0xA3FCAC", VA = "0xA3FCAC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xA3FEF0", Offset = "0xA3FEF0", VA = "0xA3FEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xA3FEF4", Offset = "0xA3FEF4", VA = "0xA3FEF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xA3FF80", Offset = "0xA3FF80", VA = "0xA3FF80")]
	public CameraFilterPack_Drawing_CellShading2()
	{
	}
}
[Token(Token = "0x20000AF")]
[AddComponentMenu("Camera Filter Pack/Drawing/Comics")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Comics : MonoBehaviour
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float DotSize;

	[Token(Token = "0x1700008F")]
	private Material material
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xA3FFA0", Offset = "0xA3FFA0", VA = "0xA3FFA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xA40074", Offset = "0xA40074", VA = "0xA40074")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xA400F4", Offset = "0xA400F4", VA = "0xA400F4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xA40274", Offset = "0xA40274", VA = "0xA40274")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xA40278", Offset = "0xA40278", VA = "0xA40278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xA40304", Offset = "0xA40304", VA = "0xA40304")]
	public CameraFilterPack_Drawing_Comics()
	{
	}
}
[Token(Token = "0x20000B0")]
[AddComponentMenu("Camera Filter Pack/Drawing/Crosshatch")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Crosshatch : MonoBehaviour
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 10f)]
	public float Width;

	[Token(Token = "0x17000090")]
	private Material material
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xA4031C", Offset = "0xA4031C", VA = "0xA4031C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xA403F0", Offset = "0xA403F0", VA = "0xA403F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xA40470", Offset = "0xA40470", VA = "0xA40470")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xA40668", Offset = "0xA40668", VA = "0xA40668")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xA4066C", Offset = "0xA4066C", VA = "0xA4066C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xA406F8", Offset = "0xA406F8", VA = "0xA406F8")]
	public CameraFilterPack_Drawing_Crosshatch()
	{
	}
}
[Token(Token = "0x20000B1")]
[AddComponentMenu("Camera Filter Pack/Drawing/Curve")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Curve : MonoBehaviour
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(3f, 5f)]
	public float Size;

	[Token(Token = "0x17000091")]
	private Material material
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xA40710", Offset = "0xA40710", VA = "0xA40710")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xA407E4", Offset = "0xA407E4", VA = "0xA407E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xA40864", Offset = "0xA40864", VA = "0xA40864")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xA40A5C", Offset = "0xA40A5C", VA = "0xA40A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xA40A60", Offset = "0xA40A60", VA = "0xA40A60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xA40AEC", Offset = "0xA40AEC", VA = "0xA40AEC")]
	public CameraFilterPack_Drawing_Curve()
	{
	}
}
[Token(Token = "0x20000B2")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/EnhancedComics")]
public class CameraFilterPack_Drawing_EnhancedComics : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float DotSize;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float _ColorR;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float _ColorG;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float _ColorB;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float _Blood;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float _SmoothStart;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float _SmoothEnd;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color ColorRGB;

	[Token(Token = "0x17000092")]
	private Material material
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xA40B00", Offset = "0xA40B00", VA = "0xA40B00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xA40BD4", Offset = "0xA40BD4", VA = "0xA40BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xA40C54", Offset = "0xA40C54", VA = "0xA40C54")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xA40F28", Offset = "0xA40F28", VA = "0xA40F28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xA40F2C", Offset = "0xA40F2C", VA = "0xA40F2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xA40FB8", Offset = "0xA40FB8", VA = "0xA40FB8")]
	public CameraFilterPack_Drawing_EnhancedComics()
	{
	}
}
[Token(Token = "0x20000B3")]
[AddComponentMenu("Camera Filter Pack/Drawing/Halftone")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Halftone : MonoBehaviour
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float Threshold;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(1f, 16f)]
	public float DotSize;

	[Token(Token = "0x17000093")]
	private Material material
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xA40FE4", Offset = "0xA40FE4", VA = "0xA40FE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xA410B8", Offset = "0xA410B8", VA = "0xA410B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xA41138", Offset = "0xA41138", VA = "0xA41138")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xA412E8", Offset = "0xA412E8", VA = "0xA412E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xA412EC", Offset = "0xA412EC", VA = "0xA412EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xA41378", Offset = "0xA41378", VA = "0xA41378")]
	public CameraFilterPack_Drawing_Halftone()
	{
	}
}
[Token(Token = "0x20000B4")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/Laplacian")]
public class CameraFilterPack_Drawing_Laplacian : MonoBehaviour
{
	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000094")]
	private Material material
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0xA41394", Offset = "0xA41394", VA = "0xA41394")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xA41468", Offset = "0xA41468", VA = "0xA41468")]
	private void Start()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xA414E8", Offset = "0xA414E8", VA = "0xA414E8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xA416B0", Offset = "0xA416B0", VA = "0xA416B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xA416B8", Offset = "0xA416B8", VA = "0xA416B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xA41744", Offset = "0xA41744", VA = "0xA41744")]
	public CameraFilterPack_Drawing_Laplacian()
	{
	}
}
[Token(Token = "0x20000B5")]
[AddComponentMenu("Camera Filter Pack/Drawing/Lines")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Lines : MonoBehaviour
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.1f, 10f)]
	public float Number;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Random;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float PositionY;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x17000095")]
	private Material material
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0xA41754", Offset = "0xA41754", VA = "0xA41754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xA41828", Offset = "0xA41828", VA = "0xA41828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xA418A8", Offset = "0xA418A8", VA = "0xA418A8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xA41B30", Offset = "0xA41B30", VA = "0xA41B30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xA41B34", Offset = "0xA41B34", VA = "0xA41B34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xA41BC0", Offset = "0xA41BC0", VA = "0xA41BC0")]
	public CameraFilterPack_Drawing_Lines()
	{
	}
}
[Token(Token = "0x20000B6")]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga : MonoBehaviour
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 8f)]
	public float DotSize;

	[Token(Token = "0x17000096")]
	private Material material
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xA41BDC", Offset = "0xA41BDC", VA = "0xA41BDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xA41CB0", Offset = "0xA41CB0", VA = "0xA41CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xA41D30", Offset = "0xA41D30", VA = "0xA41D30")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xA41EB0", Offset = "0xA41EB0", VA = "0xA41EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xA41EB4", Offset = "0xA41EB4", VA = "0xA41EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xA41F40", Offset = "0xA41F40", VA = "0xA41F40")]
	public CameraFilterPack_Drawing_Manga()
	{
	}
}
[Token(Token = "0x20000B7")]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga2")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga2 : MonoBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 8f)]
	public float DotSize;

	[Token(Token = "0x17000097")]
	private Material material
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0xA41F5C", Offset = "0xA41F5C", VA = "0xA41F5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xA42030", Offset = "0xA42030", VA = "0xA42030")]
	private void Start()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xA420B0", Offset = "0xA420B0", VA = "0xA420B0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xA42230", Offset = "0xA42230", VA = "0xA42230")]
	private void Update()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xA42234", Offset = "0xA42234", VA = "0xA42234")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xA422C0", Offset = "0xA422C0", VA = "0xA422C0")]
	public CameraFilterPack_Drawing_Manga2()
	{
	}
}
[Token(Token = "0x20000B8")]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga3")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga3 : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 8f)]
	public float DotSize;

	[Token(Token = "0x17000098")]
	private Material material
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xA422DC", Offset = "0xA422DC", VA = "0xA422DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xA423B0", Offset = "0xA423B0", VA = "0xA423B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xA42430", Offset = "0xA42430", VA = "0xA42430")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xA425B0", Offset = "0xA425B0", VA = "0xA425B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xA425B4", Offset = "0xA425B4", VA = "0xA425B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xA42640", Offset = "0xA42640", VA = "0xA42640")]
	public CameraFilterPack_Drawing_Manga3()
	{
	}
}
[Token(Token = "0x20000B9")]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga4")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga4 : MonoBehaviour
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 8f)]
	public float DotSize;

	[Token(Token = "0x17000099")]
	private Material material
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0xA4265C", Offset = "0xA4265C", VA = "0xA4265C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xA42730", Offset = "0xA42730", VA = "0xA42730")]
	private void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xA427B0", Offset = "0xA427B0", VA = "0xA427B0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xA42930", Offset = "0xA42930", VA = "0xA42930")]
	private void Update()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xA42934", Offset = "0xA42934", VA = "0xA42934")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xA429C0", Offset = "0xA429C0", VA = "0xA429C0")]
	public CameraFilterPack_Drawing_Manga4()
	{
	}
}
[Token(Token = "0x20000BA")]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga5")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga5 : MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 8f)]
	public float DotSize;

	[Token(Token = "0x1700009A")]
	private Material material
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xA429DC", Offset = "0xA429DC", VA = "0xA429DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xA42AB0", Offset = "0xA42AB0", VA = "0xA42AB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xA42B30", Offset = "0xA42B30", VA = "0xA42B30")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xA42CB0", Offset = "0xA42CB0", VA = "0xA42CB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xA42CB4", Offset = "0xA42CB4", VA = "0xA42CB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xA42D40", Offset = "0xA42D40", VA = "0xA42D40")]
	public CameraFilterPack_Drawing_Manga5()
	{
	}
}
[Token(Token = "0x20000BB")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga_Color")]
public class CameraFilterPack_Drawing_Manga_Color : MonoBehaviour
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 8f)]
	public float DotSize;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ChangeDotSize;

	[Token(Token = "0x1700009B")]
	private Material material
	{
		[Token(Token = "0x6000434")]
		[Address(RVA = "0xA42D5C", Offset = "0xA42D5C", VA = "0xA42D5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xA42E30", Offset = "0xA42E30", VA = "0xA42E30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xA42EB0", Offset = "0xA42EB0", VA = "0xA42EB0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xA43030", Offset = "0xA43030", VA = "0xA43030")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xA43034", Offset = "0xA43034", VA = "0xA43034")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xA430C0", Offset = "0xA430C0", VA = "0xA430C0")]
	public CameraFilterPack_Drawing_Manga_Color()
	{
	}
}
[Token(Token = "0x20000BC")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga_Flash")]
public class CameraFilterPack_Drawing_Manga_Flash : MonoBehaviour
{
	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 10f)]
	public float Size;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 30f)]
	public int Speed;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float PosX;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-1f, 1f)]
	public float PosY;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x1700009C")]
	private Material material
	{
		[Token(Token = "0x600043A")]
		[Address(RVA = "0xA430DC", Offset = "0xA430DC", VA = "0xA430DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xA431B0", Offset = "0xA431B0", VA = "0xA431B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xA43230", Offset = "0xA43230", VA = "0xA43230")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xA434EC", Offset = "0xA434EC", VA = "0xA434EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xA434F0", Offset = "0xA434F0", VA = "0xA434F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xA4357C", Offset = "0xA4357C", VA = "0xA4357C")]
	public CameraFilterPack_Drawing_Manga_Flash()
	{
	}
}
[Token(Token = "0x20000BD")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga_FlashWhite")]
public class CameraFilterPack_Drawing_Manga_FlashWhite : MonoBehaviour
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 10f)]
	public float Size;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 30f)]
	public int Speed;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float PosX;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-1f, 1f)]
	public float PosY;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x1700009D")]
	private Material material
	{
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xA435A4", Offset = "0xA435A4", VA = "0xA435A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xA43678", Offset = "0xA43678", VA = "0xA43678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xA436F8", Offset = "0xA436F8", VA = "0xA436F8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xA439B4", Offset = "0xA439B4", VA = "0xA439B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xA439B8", Offset = "0xA439B8", VA = "0xA439B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xA43A44", Offset = "0xA43A44", VA = "0xA43A44")]
	public CameraFilterPack_Drawing_Manga_FlashWhite()
	{
	}
}
[Token(Token = "0x20000BE")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/Manga_Flash_Color")]
public class CameraFilterPack_Drawing_Manga_Flash_Color : MonoBehaviour
{
	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 10f)]
	public float Size;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color Color;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 30f)]
	public int Speed;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-1f, 1f)]
	public float PosX;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-1f, 1f)]
	public float PosY;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x1700009E")]
	private Material material
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0xA43A6C", Offset = "0xA43A6C", VA = "0xA43A6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xA43B40", Offset = "0xA43B40", VA = "0xA43B40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xA43BC0", Offset = "0xA43BC0", VA = "0xA43BC0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xA43EB0", Offset = "0xA43EB0", VA = "0xA43EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xA43EB4", Offset = "0xA43EB4", VA = "0xA43EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xA43F40", Offset = "0xA43F40", VA = "0xA43F40")]
	public CameraFilterPack_Drawing_Manga_Flash_Color()
	{
	}
}
[Token(Token = "0x20000BF")]
[AddComponentMenu("Camera Filter Pack/Drawing/NewCellShading")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_NewCellShading : MonoBehaviour
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Threshold;

	[Token(Token = "0x1700009F")]
	private Material material
	{
		[Token(Token = "0x600044C")]
		[Address(RVA = "0xA43F74", Offset = "0xA43F74", VA = "0xA43F74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xA44048", Offset = "0xA44048", VA = "0xA44048")]
	private void Start()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xA440C8", Offset = "0xA440C8", VA = "0xA440C8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xA442AC", Offset = "0xA442AC", VA = "0xA442AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xA442B0", Offset = "0xA442B0", VA = "0xA442B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xA4433C", Offset = "0xA4433C", VA = "0xA4433C")]
	public CameraFilterPack_Drawing_NewCellShading()
	{
	}
}
[Token(Token = "0x20000C0")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/Paper")]
public class CameraFilterPack_Drawing_Paper : MonoBehaviour
{
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Pencil_Color;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.0001f, 0.0022f)]
	public float Pencil_Size;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 2f)]
	public float Pencil_Correction;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2f)]
	public float Speed_Animation;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Corner_Lose;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Fade_Paper_to_BackColor;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade_With_Original;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Back_Color;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material SCMaterial;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x170000A0")]
	private Material material
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xA44358", Offset = "0xA44358", VA = "0xA44358")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xA4442C", Offset = "0xA4442C", VA = "0xA4442C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xA44520", Offset = "0xA44520", VA = "0xA44520")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xA44858", Offset = "0xA44858", VA = "0xA44858")]
	private void Update()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xA4485C", Offset = "0xA4485C", VA = "0xA4485C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xA448E8", Offset = "0xA448E8", VA = "0xA448E8")]
	public CameraFilterPack_Drawing_Paper()
	{
	}
}
[Token(Token = "0x20000C1")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Drawing/Paper2")]
public class CameraFilterPack_Drawing_Paper2 : MonoBehaviour
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Pencil_Color;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.0001f, 0.0022f)]
	public float Pencil_Size;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 2f)]
	public float Pencil_Correction;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2f)]
	public float Speed_Animation;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Corner_Lose;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Fade_Paper_to_BackColor;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade_With_Original;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Back_Color;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material SCMaterial;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x170000A1")]
	private Material material
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0xA44920", Offset = "0xA44920", VA = "0xA44920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xA449F4", Offset = "0xA449F4", VA = "0xA449F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xA44AE8", Offset = "0xA44AE8", VA = "0xA44AE8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xA44E20", Offset = "0xA44E20", VA = "0xA44E20")]
	private void Update()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xA44E24", Offset = "0xA44E24", VA = "0xA44E24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xA44EB0", Offset = "0xA44EB0", VA = "0xA44EB0")]
	public CameraFilterPack_Drawing_Paper2()
	{
	}
}
[Token(Token = "0x20000C2")]
[AddComponentMenu("Camera Filter Pack/Drawing/Paper3")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Paper3 : MonoBehaviour
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Pencil_Color;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.0001f, 0.0022f)]
	public float Pencil_Size;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 2f)]
	public float Pencil_Correction;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2f)]
	public float Speed_Animation;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Corner_Lose;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Fade_Paper_to_BackColor;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade_With_Original;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Back_Color;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material SCMaterial;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x170000A2")]
	private Material material
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xA44EEC", Offset = "0xA44EEC", VA = "0xA44EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xA44FC0", Offset = "0xA44FC0", VA = "0xA44FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xA450B4", Offset = "0xA450B4", VA = "0xA450B4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xA453EC", Offset = "0xA453EC", VA = "0xA453EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xA453F0", Offset = "0xA453F0", VA = "0xA453F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA4547C", Offset = "0xA4547C", VA = "0xA4547C")]
	public CameraFilterPack_Drawing_Paper3()
	{
	}
}
[Token(Token = "0x20000C3")]
[AddComponentMenu("Camera Filter Pack/Drawing/Toon")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Toon : MonoBehaviour
{
	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material SCMaterial;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 2f)]
	public float Threshold;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 8f)]
	public float DotSize;

	[Token(Token = "0x170000A3")]
	private Material material
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xA454B0", Offset = "0xA454B0", VA = "0xA454B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA45584", Offset = "0xA45584", VA = "0xA45584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xA45604", Offset = "0xA45604", VA = "0xA45604")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xA457B4", Offset = "0xA457B4", VA = "0xA457B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xA457B8", Offset = "0xA457B8", VA = "0xA457B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xA45844", Offset = "0xA45844", VA = "0xA45844")]
	public CameraFilterPack_Drawing_Toon()
	{
	}
}
[Token(Token = "0x20000C4")]
[AddComponentMenu("Camera Filter Pack/Edge/BlackLine")]
[ExecuteInEditMode]
public class CameraFilterPack_Edge_BlackLine : MonoBehaviour
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000A4")]
	private Material material
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xA4585C", Offset = "0xA4585C", VA = "0xA4585C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xA45930", Offset = "0xA45930", VA = "0xA45930")]
	private void Start()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xA459B0", Offset = "0xA459B0", VA = "0xA459B0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xA45B64", Offset = "0xA45B64", VA = "0xA45B64")]
	private void Update()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xA45B68", Offset = "0xA45B68", VA = "0xA45B68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xA45BF4", Offset = "0xA45BF4", VA = "0xA45BF4")]
	public CameraFilterPack_Edge_BlackLine()
	{
	}
}
[Token(Token = "0x20000C5")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Edge/Edge_filter")]
public class CameraFilterPack_Edge_Edge_filter : MonoBehaviour
{
	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float RedAmplifier;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float GreenAmplifier;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	public float BlueAmplifier;

	[Token(Token = "0x170000A5")]
	private Material material
	{
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xA45C04", Offset = "0xA45C04", VA = "0xA45C04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xA45CD8", Offset = "0xA45CD8", VA = "0xA45CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xA45D58", Offset = "0xA45D58", VA = "0xA45D58")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xA45F9C", Offset = "0xA45F9C", VA = "0xA45F9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xA45FA0", Offset = "0xA45FA0", VA = "0xA45FA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xA4602C", Offset = "0xA4602C", VA = "0xA4602C")]
	public CameraFilterPack_Edge_Edge_filter()
	{
	}
}
[Token(Token = "0x20000C6")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Edge/Golden")]
public class CameraFilterPack_Edge_Golden : MonoBehaviour
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000A6")]
	private Material material
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xA46044", Offset = "0xA46044", VA = "0xA46044")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xA46118", Offset = "0xA46118", VA = "0xA46118")]
	private void Start()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xA46198", Offset = "0xA46198", VA = "0xA46198")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xA4634C", Offset = "0xA4634C", VA = "0xA4634C")]
	private void Update()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xA46350", Offset = "0xA46350", VA = "0xA46350")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xA463DC", Offset = "0xA463DC", VA = "0xA463DC")]
	public CameraFilterPack_Edge_Golden()
	{
	}
}
[Token(Token = "0x20000C7")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Edge/Neon")]
public class CameraFilterPack_Edge_Neon : MonoBehaviour
{
	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 10f)]
	public float EdgeWeight;

	[Token(Token = "0x170000A7")]
	private Material material
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0xA463EC", Offset = "0xA463EC", VA = "0xA463EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xA464C0", Offset = "0xA464C0", VA = "0xA464C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xA46540", Offset = "0xA46540", VA = "0xA46540")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xA46724", Offset = "0xA46724", VA = "0xA46724")]
	private void Update()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xA46728", Offset = "0xA46728", VA = "0xA46728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xA467B4", Offset = "0xA467B4", VA = "0xA467B4")]
	public CameraFilterPack_Edge_Neon()
	{
	}
}
[Token(Token = "0x20000C8")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Edge/Sigmoid")]
public class CameraFilterPack_Edge_Sigmoid : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 10f)]
	public float Gain;

	[Token(Token = "0x170000A8")]
	private Material material
	{
		[Token(Token = "0x6000482")]
		[Address(RVA = "0xA467C8", Offset = "0xA467C8", VA = "0xA467C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xA4689C", Offset = "0xA4689C", VA = "0xA4689C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xA4691C", Offset = "0xA4691C", VA = "0xA4691C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xA46B00", Offset = "0xA46B00", VA = "0xA46B00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xA46B04", Offset = "0xA46B04", VA = "0xA46B04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xA46B90", Offset = "0xA46B90", VA = "0xA46B90")]
	public CameraFilterPack_Edge_Sigmoid()
	{
	}
}
[Token(Token = "0x20000C9")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Edge/Sobel")]
public class CameraFilterPack_Edge_Sobel : MonoBehaviour
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000A9")]
	private Material material
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xA46BA8", Offset = "0xA46BA8", VA = "0xA46BA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xA46C7C", Offset = "0xA46C7C", VA = "0xA46C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xA46CFC", Offset = "0xA46CFC", VA = "0xA46CFC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xA46EC4", Offset = "0xA46EC4", VA = "0xA46EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xA46EC8", Offset = "0xA46EC8", VA = "0xA46EC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xA46F54", Offset = "0xA46F54", VA = "0xA46F54")]
	public CameraFilterPack_Edge_Sobel()
	{
	}
}
[Token(Token = "0x20000CA")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/EXTRA/Rotation")]
public class CameraFilterPack_EXTRA_Rotation : MonoBehaviour
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-360f, 360f)]
	public float Rotation;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 2f)]
	public float PositionX;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 2f)]
	public float PositionY;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x170000AA")]
	private Material material
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0xA46F64", Offset = "0xA46F64", VA = "0xA46F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xA47038", Offset = "0xA47038", VA = "0xA47038")]
	private void Start()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xA470B8", Offset = "0xA470B8", VA = "0xA470B8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xA47344", Offset = "0xA47344", VA = "0xA47344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xA47348", Offset = "0xA47348", VA = "0xA47348")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xA473D4", Offset = "0xA473D4", VA = "0xA473D4")]
	public CameraFilterPack_EXTRA_Rotation()
	{
	}
}
[Token(Token = "0x20000CB")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/EXTRA/SHOWFPS")]
public class CameraFilterPack_EXTRA_SHOWFPS : MonoBehaviour
{
	[Token(Token = "0x20000CC")]
	[CompilerGenerated]
	private sealed class <FPSX>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFilterPack_EXTRA_SHOWFPS <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049E")]
			[Address(RVA = "0xA47A60", Offset = "0xA47A60", VA = "0xA47A60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A0")]
			[Address(RVA = "0xA47AA8", Offset = "0xA47AA8", VA = "0xA47AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xA47860", Offset = "0xA47860", VA = "0xA47860")]
		[DebuggerHidden]
		public <FPSX>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xA47988", Offset = "0xA47988", VA = "0xA47988", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xA4798C", Offset = "0xA4798C", VA = "0xA4798C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xA47A68", Offset = "0xA47A68", VA = "0xA47A68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(8f, 42f)]
	public float Size;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 100f)]
	private int FPS;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float accum;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int frames;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float frequency;

	[Token(Token = "0x170000AB")]
	private Material material
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0xA473F0", Offset = "0xA473F0", VA = "0xA473F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xA474C4", Offset = "0xA474C4", VA = "0xA474C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xA475D4", Offset = "0xA475D4", VA = "0xA475D4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xA47560", Offset = "0xA47560", VA = "0xA47560")]
	[IteratorStateMachine(typeof(<FPSX>d__15))]
	private IEnumerator FPSX()
	{
		return null;
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xA47888", Offset = "0xA47888", VA = "0xA47888")]
	private void Update()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xA478D0", Offset = "0xA478D0", VA = "0xA478D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xA4795C", Offset = "0xA4795C", VA = "0xA4795C")]
	public CameraFilterPack_EXTRA_SHOWFPS()
	{
	}
}
[Token(Token = "0x20000CD")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Eyes 1")]
public class CameraFilterPack_EyesVision_1 : MonoBehaviour
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 32f)]
	public float _EyeWave;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 10f)]
	public float _EyeSpeed;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 8f)]
	public float _EyeMove;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float _EyeBlink;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D Texture2;

	[Token(Token = "0x170000AE")]
	private Material material
	{
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xA47AB0", Offset = "0xA47AB0", VA = "0xA47AB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xA47B84", Offset = "0xA47B84", VA = "0xA47B84")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xA47C78", Offset = "0xA47C78", VA = "0xA47C78")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xA47EB8", Offset = "0xA47EB8", VA = "0xA47EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xA47EBC", Offset = "0xA47EBC", VA = "0xA47EBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xA47F48", Offset = "0xA47F48", VA = "0xA47F48")]
	public CameraFilterPack_EyesVision_1()
	{
	}
}
[Token(Token = "0x20000CE")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Eyes 2")]
public class CameraFilterPack_EyesVision_2 : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 32f)]
	public float _EyeWave;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 10f)]
	public float _EyeSpeed;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 8f)]
	public float _EyeMove;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float _EyeBlink;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D Texture2;

	[Token(Token = "0x170000AF")]
	private Material material
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xA47F64", Offset = "0xA47F64", VA = "0xA47F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xA48038", Offset = "0xA48038", VA = "0xA48038")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xA4812C", Offset = "0xA4812C", VA = "0xA4812C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xA4836C", Offset = "0xA4836C", VA = "0xA4836C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xA48370", Offset = "0xA48370", VA = "0xA48370")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xA483FC", Offset = "0xA483FC", VA = "0xA483FC")]
	public CameraFilterPack_EyesVision_2()
	{
	}
}
[Token(Token = "0x20000CF")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Film/ColorPerfection")]
public class CameraFilterPack_Film_ColorPerfection : MonoBehaviour
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 4f)]
	public float Gamma;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	private float Value2;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x170000B0")]
	private Material material
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xA48418", Offset = "0xA48418", VA = "0xA48418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xA484EC", Offset = "0xA484EC", VA = "0xA484EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xA4856C", Offset = "0xA4856C", VA = "0xA4856C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xA487F4", Offset = "0xA487F4", VA = "0xA487F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xA487F8", Offset = "0xA487F8", VA = "0xA487F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xA48884", Offset = "0xA48884", VA = "0xA48884")]
	public CameraFilterPack_Film_ColorPerfection()
	{
	}
}
[Token(Token = "0x20000D0")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Film/Grain")]
public class CameraFilterPack_Film_Grain : MonoBehaviour
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-64f, 64f)]
	public float Value;

	[Token(Token = "0x170000B1")]
	private Material material
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xA488A0", Offset = "0xA488A0", VA = "0xA488A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xA48974", Offset = "0xA48974", VA = "0xA48974")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xA489F4", Offset = "0xA489F4", VA = "0xA489F4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xA48BEC", Offset = "0xA48BEC", VA = "0xA48BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xA48BF0", Offset = "0xA48BF0", VA = "0xA48BF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xA48C7C", Offset = "0xA48C7C", VA = "0xA48C7C")]
	public CameraFilterPack_Film_Grain()
	{
	}
}
[Token(Token = "0x20000D1")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Fly_Vision")]
public class CameraFilterPack_Fly_Vision : MonoBehaviour
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.04f, 1.5f)]
	public float Zoom;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Distortion;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D Texture2;

	[Token(Token = "0x170000B2")]
	private Material material
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xA48C94", Offset = "0xA48C94", VA = "0xA48C94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xA48D68", Offset = "0xA48D68", VA = "0xA48D68")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xA48E5C", Offset = "0xA48E5C", VA = "0xA48E5C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xA49114", Offset = "0xA49114", VA = "0xA49114")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xA49118", Offset = "0xA49118", VA = "0xA49118")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xA491A4", Offset = "0xA491A4", VA = "0xA491A4")]
	public CameraFilterPack_Fly_Vision()
	{
	}
}
[Token(Token = "0x20000D2")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Pixel/8bits")]
public class CameraFilterPack_FX_8bits : MonoBehaviour
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(-1f, 1f)]
	public float Brightness;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(80f, 640f)]
	public int ResolutionX;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(60f, 480f)]
	public int ResolutionY;

	[Token(Token = "0x170000B3")]
	private Material material
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xA491C0", Offset = "0xA491C0", VA = "0xA491C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xA49294", Offset = "0xA49294", VA = "0xA49294")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xA49314", Offset = "0xA49314", VA = "0xA49314")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xA494F0", Offset = "0xA494F0", VA = "0xA494F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xA494F4", Offset = "0xA494F4", VA = "0xA494F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xA49580", Offset = "0xA49580", VA = "0xA49580")]
	public CameraFilterPack_FX_8bits()
	{
	}
}
[Token(Token = "0x20000D3")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Pixel/8bits_gb")]
public class CameraFilterPack_FX_8bits_gb : MonoBehaviour
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(-1f, 1f)]
	public float Brightness;

	[Token(Token = "0x170000B4")]
	private Material material
	{
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xA4959C", Offset = "0xA4959C", VA = "0xA4959C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xA49670", Offset = "0xA49670", VA = "0xA49670")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xA496F0", Offset = "0xA496F0", VA = "0xA496F0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xA498D0", Offset = "0xA498D0", VA = "0xA498D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xA498D4", Offset = "0xA498D4", VA = "0xA498D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xA49960", Offset = "0xA49960", VA = "0xA49960")]
	public CameraFilterPack_FX_8bits_gb()
	{
	}
}
[Token(Token = "0x20000D4")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Ascii")]
public class CameraFilterPack_FX_Ascii : MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 2f)]
	public float Value;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.01f, 1f)]
	public float Fade;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x170000B5")]
	private Material material
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xA49970", Offset = "0xA49970", VA = "0xA49970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xA49A44", Offset = "0xA49A44", VA = "0xA49A44")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xA49AC4", Offset = "0xA49AC4", VA = "0xA49AC4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xA49CEC", Offset = "0xA49CEC", VA = "0xA49CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xA49CF0", Offset = "0xA49CF0", VA = "0xA49CF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xA49D7C", Offset = "0xA49D7C", VA = "0xA49D7C")]
	public CameraFilterPack_FX_Ascii()
	{
	}
}
[Token(Token = "0x20000D5")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/DarkMatter")]
public class CameraFilterPack_FX_DarkMatter : MonoBehaviour
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-10f, 10f)]
	public float Speed;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 2f)]
	public float PosX;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-1f, 2f)]
	public float PosY;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-2f, 2f)]
	public float Zoom;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 5f)]
	public float DarkIntensity;

	[Token(Token = "0x170000B6")]
	private Material material
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xA49D94", Offset = "0xA49D94", VA = "0xA49D94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xA49E68", Offset = "0xA49E68", VA = "0xA49E68")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xA49EE8", Offset = "0xA49EE8", VA = "0xA49EE8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA4A1D0", Offset = "0xA4A1D0", VA = "0xA4A1D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA4A1D4", Offset = "0xA4A1D4", VA = "0xA4A1D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA4A260", Offset = "0xA4A260", VA = "0xA4A260")]
	public CameraFilterPack_FX_DarkMatter()
	{
	}
}
[Token(Token = "0x20000D6")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/DigitalMatrix")]
public class CameraFilterPack_FX_DigitalMatrix : MonoBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.4f, 5f)]
	public float Size;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-10f, 10f)]
	public float Speed;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float ColorR;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-1f, 1f)]
	public float ColorG;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-1f, 1f)]
	public float ColorB;

	[Token(Token = "0x170000B7")]
	private Material material
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xA4A28C", Offset = "0xA4A28C", VA = "0xA4A28C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA4A360", Offset = "0xA4A360", VA = "0xA4A360")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA4A3E0", Offset = "0xA4A3E0", VA = "0xA4A3E0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA4A698", Offset = "0xA4A698", VA = "0xA4A698")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xA4A69C", Offset = "0xA4A69C", VA = "0xA4A69C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xA4A728", Offset = "0xA4A728", VA = "0xA4A728")]
	public CameraFilterPack_FX_DigitalMatrix()
	{
	}
}
[Token(Token = "0x20000D7")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/DigitalMatrixDistortion")]
public class CameraFilterPack_FX_DigitalMatrixDistortion : MonoBehaviour
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.4f, 5f)]
	public float Size;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-2f, 2f)]
	public float Speed;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-5f, 5f)]
	public float Distortion;

	[Token(Token = "0x170000B8")]
	private Material material
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xA4A74C", Offset = "0xA4A74C", VA = "0xA4A74C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xA4A820", Offset = "0xA4A820", VA = "0xA4A820")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xA4A8A0", Offset = "0xA4A8A0", VA = "0xA4A8A0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xA4AAF8", Offset = "0xA4AAF8", VA = "0xA4AAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xA4AAFC", Offset = "0xA4AAFC", VA = "0xA4AAFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xA4AB88", Offset = "0xA4AB88", VA = "0xA4AB88")]
	public CameraFilterPack_FX_DigitalMatrixDistortion()
	{
	}
}
[Token(Token = "0x20000D8")]
[AddComponentMenu("Camera Filter Pack/FX/Dot_Circle")]
[ExecuteInEditMode]
public class CameraFilterPack_FX_Dot_Circle : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(4f, 32f)]
	public float Value;

	[Token(Token = "0x170000B9")]
	private Material material
	{
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xA4ABB0", Offset = "0xA4ABB0", VA = "0xA4ABB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xA4AC84", Offset = "0xA4AC84", VA = "0xA4AC84")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xA4AD04", Offset = "0xA4AD04", VA = "0xA4AD04")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xA4AEFC", Offset = "0xA4AEFC", VA = "0xA4AEFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xA4AF00", Offset = "0xA4AF00", VA = "0xA4AF00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xA4AF8C", Offset = "0xA4AF8C", VA = "0xA4AF8C")]
	public CameraFilterPack_FX_Dot_Circle()
	{
	}
}
[Token(Token = "0x20000D9")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Drunk")]
public class CameraFilterPack_FX_Drunk : MonoBehaviour
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	public float Value;

	[Token(Token = "0x170000BA")]
	private Material material
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xA4AFA4", Offset = "0xA4AFA4", VA = "0xA4AFA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xA4B078", Offset = "0xA4B078", VA = "0xA4B078")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xA4B0F8", Offset = "0xA4B0F8", VA = "0xA4B0F8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xA4B2F0", Offset = "0xA4B2F0", VA = "0xA4B2F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xA4B2F4", Offset = "0xA4B2F4", VA = "0xA4B2F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xA4B380", Offset = "0xA4B380", VA = "0xA4B380")]
	public CameraFilterPack_FX_Drunk()
	{
	}
}
[Token(Token = "0x20000DA")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Drunk2")]
public class CameraFilterPack_FX_Drunk2 : MonoBehaviour
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	private float Value;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	private float Value2;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x170000BB")]
	private Material material
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xA4B398", Offset = "0xA4B398", VA = "0xA4B398")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xA4B46C", Offset = "0xA4B46C", VA = "0xA4B46C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xA4B4EC", Offset = "0xA4B4EC", VA = "0xA4B4EC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xA4B774", Offset = "0xA4B774", VA = "0xA4B774")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xA4B778", Offset = "0xA4B778", VA = "0xA4B778")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xA4B804", Offset = "0xA4B804", VA = "0xA4B804")]
	public CameraFilterPack_FX_Drunk2()
	{
	}
}
[Token(Token = "0x20000DB")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Earth Quake")]
public class CameraFilterPack_FX_EarthQuake : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float Speed;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 0.2f)]
	public float X;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.2f)]
	public float Y;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 0.2f)]
	private float Value4;

	[Token(Token = "0x170000BC")]
	private Material material
	{
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xA4B81C", Offset = "0xA4B81C", VA = "0xA4B81C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xA4B8F0", Offset = "0xA4B8F0", VA = "0xA4B8F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xA4B970", Offset = "0xA4B970", VA = "0xA4B970")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xA4BBF8", Offset = "0xA4BBF8", VA = "0xA4BBF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xA4BBFC", Offset = "0xA4BBFC", VA = "0xA4BBFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xA4BC88", Offset = "0xA4BC88", VA = "0xA4BC88")]
	public CameraFilterPack_FX_EarthQuake()
	{
	}
}
[Token(Token = "0x20000DC")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Funk")]
public class CameraFilterPack_FX_Funk : MonoBehaviour
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000BD")]
	private Material material
	{
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xA4BCA4", Offset = "0xA4BCA4", VA = "0xA4BCA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xA4BD78", Offset = "0xA4BD78", VA = "0xA4BD78")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xA4BDF8", Offset = "0xA4BDF8", VA = "0xA4BDF8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xA4BFC0", Offset = "0xA4BFC0", VA = "0xA4BFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xA4BFC4", Offset = "0xA4BFC4", VA = "0xA4BFC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xA4C050", Offset = "0xA4C050", VA = "0xA4C050")]
	public CameraFilterPack_FX_Funk()
	{
	}
}
[Token(Token = "0x20000DD")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Glitch/Glitch1")]
public class CameraFilterPack_FX_Glitch1 : MonoBehaviour
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	private float Value;

	[Token(Token = "0x170000BE")]
	private Material material
	{
		[Token(Token = "0x6000501")]
		[Address(RVA = "0xA4C060", Offset = "0xA4C060", VA = "0xA4C060")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xA4C134", Offset = "0xA4C134", VA = "0xA4C134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xA4C1B4", Offset = "0xA4C1B4", VA = "0xA4C1B4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xA4C3AC", Offset = "0xA4C3AC", VA = "0xA4C3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xA4C3B0", Offset = "0xA4C3B0", VA = "0xA4C3B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xA4C43C", Offset = "0xA4C43C", VA = "0xA4C43C")]
	public CameraFilterPack_FX_Glitch1()
	{
	}
}
[Token(Token = "0x20000DE")]
[AddComponentMenu("Camera Filter Pack/Glitch/Glitch2")]
[ExecuteInEditMode]
public class CameraFilterPack_FX_Glitch2 : MonoBehaviour
{
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	private float Value;

	[Token(Token = "0x170000BF")]
	private Material material
	{
		[Token(Token = "0x6000507")]
		[Address(RVA = "0xA4C454", Offset = "0xA4C454", VA = "0xA4C454")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xA4C528", Offset = "0xA4C528", VA = "0xA4C528")]
	private void Start()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xA4C5A8", Offset = "0xA4C5A8", VA = "0xA4C5A8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xA4C7A0", Offset = "0xA4C7A0", VA = "0xA4C7A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xA4C7A4", Offset = "0xA4C7A4", VA = "0xA4C7A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xA4C830", Offset = "0xA4C830", VA = "0xA4C830")]
	public CameraFilterPack_FX_Glitch2()
	{
	}
}
[Token(Token = "0x20000DF")]
[AddComponentMenu("Camera Filter Pack/Glitch/Glitch3")]
[ExecuteInEditMode]
public class CameraFilterPack_FX_Glitch3 : MonoBehaviour
{
	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	private float Value;

	[Token(Token = "0x170000C0")]
	private Material material
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0xA4C848", Offset = "0xA4C848", VA = "0xA4C848")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xA4C91C", Offset = "0xA4C91C", VA = "0xA4C91C")]
	private void Start()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xA4C99C", Offset = "0xA4C99C", VA = "0xA4C99C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xA4CB94", Offset = "0xA4CB94", VA = "0xA4CB94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xA4CB98", Offset = "0xA4CB98", VA = "0xA4CB98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xA4CC24", Offset = "0xA4CC24", VA = "0xA4CC24")]
	public CameraFilterPack_FX_Glitch3()
	{
	}
}
[Token(Token = "0x20000E0")]
[AddComponentMenu("Camera Filter Pack/FX/Grid")]
[ExecuteInEditMode]
public class CameraFilterPack_FX_Grid : MonoBehaviour
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 5f)]
	public float Distortion;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ChangeDistortion;

	[Token(Token = "0x170000C1")]
	private Material material
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0xA4CC3C", Offset = "0xA4CC3C", VA = "0xA4CC3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xA4CD10", Offset = "0xA4CD10", VA = "0xA4CD10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xA4CD90", Offset = "0xA4CD90", VA = "0xA4CD90")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xA4CF10", Offset = "0xA4CF10", VA = "0xA4CF10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xA4CF14", Offset = "0xA4CF14", VA = "0xA4CF14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xA4CFA0", Offset = "0xA4CFA0", VA = "0xA4CFA0")]
	public CameraFilterPack_FX_Grid()
	{
	}
}
[Token(Token = "0x20000E1")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Hexagon")]
public class CameraFilterPack_FX_Hexagon : MonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000C2")]
	private Material material
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0xA4CFB4", Offset = "0xA4CFB4", VA = "0xA4CFB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xA4D088", Offset = "0xA4D088", VA = "0xA4D088")]
	private void Start()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xA4D108", Offset = "0xA4D108", VA = "0xA4D108")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xA4D2D0", Offset = "0xA4D2D0", VA = "0xA4D2D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xA4D2D4", Offset = "0xA4D2D4", VA = "0xA4D2D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xA4D360", Offset = "0xA4D360", VA = "0xA4D360")]
	public CameraFilterPack_FX_Hexagon()
	{
	}
}
[Token(Token = "0x20000E2")]
[AddComponentMenu("Camera Filter Pack/FX/Hexagon_Black")]
[ExecuteInEditMode]
public class CameraFilterPack_FX_Hexagon_Black : MonoBehaviour
{
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.2f, 10f)]
	public float Value;

	[Token(Token = "0x170000C3")]
	private Material material
	{
		[Token(Token = "0x600051F")]
		[Address(RVA = "0xA4D370", Offset = "0xA4D370", VA = "0xA4D370")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xA4D444", Offset = "0xA4D444", VA = "0xA4D444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xA4D4C4", Offset = "0xA4D4C4", VA = "0xA4D4C4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xA4D6BC", Offset = "0xA4D6BC", VA = "0xA4D6BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xA4D6C0", Offset = "0xA4D6C0", VA = "0xA4D6C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xA4D74C", Offset = "0xA4D74C", VA = "0xA4D74C")]
	public CameraFilterPack_FX_Hexagon_Black()
	{
	}
}
[Token(Token = "0x20000E3")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Hypno")]
public class CameraFilterPack_FX_Hypno : MonoBehaviour
{
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Speed;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-2f, 2f)]
	public float Red;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-2f, 2f)]
	public float Green;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-2f, 2f)]
	public float Blue;

	[Token(Token = "0x170000C4")]
	private Material material
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0xA4D760", Offset = "0xA4D760", VA = "0xA4D760")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xA4D834", Offset = "0xA4D834", VA = "0xA4D834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xA4D8B4", Offset = "0xA4D8B4", VA = "0xA4D8B4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xA4DB3C", Offset = "0xA4DB3C", VA = "0xA4DB3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xA4DB40", Offset = "0xA4DB40", VA = "0xA4DB40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xA4DBCC", Offset = "0xA4DBCC", VA = "0xA4DBCC")]
	public CameraFilterPack_FX_Hypno()
	{
	}
}
[Token(Token = "0x20000E4")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/InverChromiLum")]
public class CameraFilterPack_FX_InverChromiLum : MonoBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000C5")]
	private Material material
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0xA4DBE8", Offset = "0xA4DBE8", VA = "0xA4DBE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xA4DCBC", Offset = "0xA4DCBC", VA = "0xA4DCBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xA4DD3C", Offset = "0xA4DD3C", VA = "0xA4DD3C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xA4DF04", Offset = "0xA4DF04", VA = "0xA4DF04")]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xA4DF08", Offset = "0xA4DF08", VA = "0xA4DF08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xA4DF94", Offset = "0xA4DF94", VA = "0xA4DF94")]
	public CameraFilterPack_FX_InverChromiLum()
	{
	}
}
[Token(Token = "0x20000E5")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Mirror")]
public class CameraFilterPack_FX_Mirror : MonoBehaviour
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000C6")]
	private Material material
	{
		[Token(Token = "0x6000531")]
		[Address(RVA = "0xA4DFA4", Offset = "0xA4DFA4", VA = "0xA4DFA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xA4E078", Offset = "0xA4E078", VA = "0xA4E078")]
	private void Start()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xA4E0F8", Offset = "0xA4E0F8", VA = "0xA4E0F8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xA4E2C0", Offset = "0xA4E2C0", VA = "0xA4E2C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xA4E2C4", Offset = "0xA4E2C4", VA = "0xA4E2C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xA4E350", Offset = "0xA4E350", VA = "0xA4E350")]
	public CameraFilterPack_FX_Mirror()
	{
	}
}
[Token(Token = "0x20000E6")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Plasma")]
public class CameraFilterPack_FX_Plasma : MonoBehaviour
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	private float Value;

	[Token(Token = "0x170000C7")]
	private Material material
	{
		[Token(Token = "0x6000537")]
		[Address(RVA = "0xA4E360", Offset = "0xA4E360", VA = "0xA4E360")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xA4E434", Offset = "0xA4E434", VA = "0xA4E434")]
	private void Start()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xA4E4B4", Offset = "0xA4E4B4", VA = "0xA4E4B4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xA4E6AC", Offset = "0xA4E6AC", VA = "0xA4E6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xA4E6B0", Offset = "0xA4E6B0", VA = "0xA4E6B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xA4E73C", Offset = "0xA4E73C", VA = "0xA4E73C")]
	public CameraFilterPack_FX_Plasma()
	{
	}
}
[Token(Token = "0x20000E7")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Psycho")]
public class CameraFilterPack_FX_Psycho : MonoBehaviour
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material SCMaterial;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float Distortion;

	[Token(Token = "0x170000C8")]
	private Material material
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xA4E754", Offset = "0xA4E754", VA = "0xA4E754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xA4E828", Offset = "0xA4E828", VA = "0xA4E828")]
	private void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xA4E8A8", Offset = "0xA4E8A8", VA = "0xA4E8A8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xA4EA28", Offset = "0xA4EA28", VA = "0xA4EA28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xA4EA2C", Offset = "0xA4EA2C", VA = "0xA4EA2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xA4EAB8", Offset = "0xA4EAB8", VA = "0xA4EAB8")]
	public CameraFilterPack_FX_Psycho()
	{
	}
}
[Token(Token = "0x20000E8")]
[AddComponentMenu("Camera Filter Pack/FX/Scan")]
[ExecuteInEditMode]
public class CameraFilterPack_FX_Scan : MonoBehaviour
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.001f, 0.1f)]
	public float Size;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x170000C9")]
	private Material material
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xA4EAC8", Offset = "0xA4EAC8", VA = "0xA4EAC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xA4EB9C", Offset = "0xA4EB9C", VA = "0xA4EB9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xA4EC1C", Offset = "0xA4EC1C", VA = "0xA4EC1C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xA4EEA4", Offset = "0xA4EEA4", VA = "0xA4EEA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xA4EEA8", Offset = "0xA4EEA8", VA = "0xA4EEA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xA4EF34", Offset = "0xA4EF34", VA = "0xA4EF34")]
	public CameraFilterPack_FX_Scan()
	{
	}
}
[Token(Token = "0x20000E9")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Screens")]
public class CameraFilterPack_FX_Screens : MonoBehaviour
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 256f)]
	public float Tiles;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 5f)]
	public float Speed;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float PosX;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-1f, 1f)]
	public float PosY;

	[Token(Token = "0x170000CA")]
	private Material material
	{
		[Token(Token = "0x6000549")]
		[Address(RVA = "0xA4EF50", Offset = "0xA4EF50", VA = "0xA4EF50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA4F024", Offset = "0xA4F024", VA = "0xA4F024")]
	private void Start()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA4F0A4", Offset = "0xA4F0A4", VA = "0xA4F0A4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA4F32C", Offset = "0xA4F32C", VA = "0xA4F32C")]
	private void Update()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA4F330", Offset = "0xA4F330", VA = "0xA4F330")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA4F3BC", Offset = "0xA4F3BC", VA = "0xA4F3BC")]
	public CameraFilterPack_FX_Screens()
	{
	}
}
[Token(Token = "0x20000EA")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/Spot")]
public class CameraFilterPack_FX_Spot : MonoBehaviour
{
	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 center;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Radius;

	[Token(Token = "0x170000CB")]
	private Material material
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xA4F3D8", Offset = "0xA4F3D8", VA = "0xA4F3D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA4F4AC", Offset = "0xA4F4AC", VA = "0xA4F4AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA4F52C", Offset = "0xA4F52C", VA = "0xA4F52C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xA4F784", Offset = "0xA4F784", VA = "0xA4F784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA4F788", Offset = "0xA4F788", VA = "0xA4F788")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA4F814", Offset = "0xA4F814", VA = "0xA4F814")]
	public CameraFilterPack_FX_Spot()
	{
	}
}
[Token(Token = "0x20000EB")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/SuperDot")]
public class CameraFilterPack_FX_superDot : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000CC")]
	private Material material
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xA4F838", Offset = "0xA4F838", VA = "0xA4F838")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xA4F90C", Offset = "0xA4F90C", VA = "0xA4F90C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA4F98C", Offset = "0xA4F98C", VA = "0xA4F98C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA4FB54", Offset = "0xA4FB54", VA = "0xA4FB54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA4FB58", Offset = "0xA4FB58", VA = "0xA4FB58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA4FBE4", Offset = "0xA4FBE4", VA = "0xA4FBE4")]
	public CameraFilterPack_FX_superDot()
	{
	}
}
[Token(Token = "0x20000EC")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/FX/ZebraColor")]
public class CameraFilterPack_FX_ZebraColor : MonoBehaviour
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 10f)]
	public float Value;

	[Token(Token = "0x170000CD")]
	private Material material
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xA4FBF4", Offset = "0xA4FBF4", VA = "0xA4FBF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xA4FCC8", Offset = "0xA4FCC8", VA = "0xA4FCC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xA4FD48", Offset = "0xA4FD48", VA = "0xA4FD48")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA4FF40", Offset = "0xA4FF40", VA = "0xA4FF40")]
	private void Update()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA4FF44", Offset = "0xA4FF44", VA = "0xA4FF44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA4FFD0", Offset = "0xA4FFD0", VA = "0xA4FFD0")]
	public CameraFilterPack_FX_ZebraColor()
	{
	}
}
[Token(Token = "0x20000ED")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Glitch/Mozaic")]
public class CameraFilterPack_Glitch_Mozaic : MonoBehaviour
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float Intensity;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	private float Value2;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x170000CE")]
	private Material material
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xA4FFE8", Offset = "0xA4FFE8", VA = "0xA4FFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xA500BC", Offset = "0xA500BC", VA = "0xA500BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xA5013C", Offset = "0xA5013C", VA = "0xA5013C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xA503C4", Offset = "0xA503C4", VA = "0xA503C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xA503C8", Offset = "0xA503C8", VA = "0xA503C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xA50454", Offset = "0xA50454", VA = "0xA50454")]
	public CameraFilterPack_Glitch_Mozaic()
	{
	}
}
[Token(Token = "0x20000EE")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Glow/Glow")]
public class CameraFilterPack_Glow_Glow : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	public float Amount;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(2f, 16f)]
	public int FastFilter;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Threshold;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-1f, 1f)]
	public float Precision;

	[Token(Token = "0x170000CF")]
	private Material material
	{
		[Token(Token = "0x6000567")]
		[Address(RVA = "0xA5046C", Offset = "0xA5046C", VA = "0xA5046C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xA50540", Offset = "0xA50540", VA = "0xA50540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xA505C0", Offset = "0xA505C0", VA = "0xA505C0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xA50A0C", Offset = "0xA50A0C", VA = "0xA50A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xA50A10", Offset = "0xA50A10", VA = "0xA50A10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xA50A9C", Offset = "0xA50A9C", VA = "0xA50A9C")]
	public CameraFilterPack_Glow_Glow()
	{
	}
}
[Token(Token = "0x20000EF")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Glow/Glow_Color")]
public class CameraFilterPack_Glow_Glow_Color : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 20f)]
	public float Amount;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(2f, 16f)]
	public int FastFilter;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Threshold;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 3f)]
	public float Intensity;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(-1f, 1f)]
	public float Precision;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color GlowColor;

	[Token(Token = "0x170000D0")]
	private Material material
	{
		[Token(Token = "0x600056D")]
		[Address(RVA = "0xA50AD0", Offset = "0xA50AD0", VA = "0xA50AD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xA50BA4", Offset = "0xA50BA4", VA = "0xA50BA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xA50C24", Offset = "0xA50C24", VA = "0xA50C24")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xA510A4", Offset = "0xA510A4", VA = "0xA510A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xA510A8", Offset = "0xA510A8", VA = "0xA510A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xA51134", Offset = "0xA51134", VA = "0xA51134")]
	public CameraFilterPack_Glow_Glow_Color()
	{
	}
}
[Token(Token = "0x20000F0")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Gradients/Ansi")]
public class CameraFilterPack_Gradients_Ansi : MonoBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D1")]
	private Material material
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0xA51170", Offset = "0xA51170", VA = "0xA51170")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xA51244", Offset = "0xA51244", VA = "0xA51244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xA51290", Offset = "0xA51290", VA = "0xA51290")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xA514B8", Offset = "0xA514B8", VA = "0xA514B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xA514BC", Offset = "0xA514BC", VA = "0xA514BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xA51548", Offset = "0xA51548", VA = "0xA51548")]
	public CameraFilterPack_Gradients_Ansi()
	{
	}
}
[Token(Token = "0x20000F1")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Gradients/Desert")]
public class CameraFilterPack_Gradients_Desert : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D2")]
	private Material material
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xA515B0", Offset = "0xA515B0", VA = "0xA515B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xA51684", Offset = "0xA51684", VA = "0xA51684")]
	private void Start()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xA516D0", Offset = "0xA516D0", VA = "0xA516D0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xA518F8", Offset = "0xA518F8", VA = "0xA518F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xA518FC", Offset = "0xA518FC", VA = "0xA518FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xA51988", Offset = "0xA51988", VA = "0xA51988")]
	public CameraFilterPack_Gradients_Desert()
	{
	}
}
[Token(Token = "0x20000F2")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Gradients/Electric")]
public class CameraFilterPack_Gradients_ElectricGradient : MonoBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D3")]
	private Material material
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xA519F0", Offset = "0xA519F0", VA = "0xA519F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xA51AC4", Offset = "0xA51AC4", VA = "0xA51AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xA51B10", Offset = "0xA51B10", VA = "0xA51B10")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xA51D38", Offset = "0xA51D38", VA = "0xA51D38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xA51D3C", Offset = "0xA51D3C", VA = "0xA51D3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xA51DC8", Offset = "0xA51DC8", VA = "0xA51DC8")]
	public CameraFilterPack_Gradients_ElectricGradient()
	{
	}
}
[Token(Token = "0x20000F3")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Gradients/Fire")]
public class CameraFilterPack_Gradients_FireGradient : MonoBehaviour
{
	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D4")]
	private Material material
	{
		[Token(Token = "0x6000585")]
		[Address(RVA = "0xA51E30", Offset = "0xA51E30", VA = "0xA51E30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xA51F04", Offset = "0xA51F04", VA = "0xA51F04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xA51F50", Offset = "0xA51F50", VA = "0xA51F50")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xA52178", Offset = "0xA52178", VA = "0xA52178")]
	private void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xA5217C", Offset = "0xA5217C", VA = "0xA5217C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xA52208", Offset = "0xA52208", VA = "0xA52208")]
	public CameraFilterPack_Gradients_FireGradient()
	{
	}
}
[Token(Token = "0x20000F4")]
[AddComponentMenu("Camera Filter Pack/Gradients/Hue")]
[ExecuteInEditMode]
public class CameraFilterPack_Gradients_Hue : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D5")]
	private Material material
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xA52270", Offset = "0xA52270", VA = "0xA52270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xA52344", Offset = "0xA52344", VA = "0xA52344")]
	private void Start()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xA52390", Offset = "0xA52390", VA = "0xA52390")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xA525B8", Offset = "0xA525B8", VA = "0xA525B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xA525BC", Offset = "0xA525BC", VA = "0xA525BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xA52648", Offset = "0xA52648", VA = "0xA52648")]
	public CameraFilterPack_Gradients_Hue()
	{
	}
}
[Token(Token = "0x20000F5")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Gradients/Neon")]
public class CameraFilterPack_Gradients_NeonGradient : MonoBehaviour
{
	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D6")]
	private Material material
	{
		[Token(Token = "0x6000591")]
		[Address(RVA = "0xA526B0", Offset = "0xA526B0", VA = "0xA526B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xA52784", Offset = "0xA52784", VA = "0xA52784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xA527D0", Offset = "0xA527D0", VA = "0xA527D0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xA529F8", Offset = "0xA529F8", VA = "0xA529F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xA529FC", Offset = "0xA529FC", VA = "0xA529FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xA52A88", Offset = "0xA52A88", VA = "0xA52A88")]
	public CameraFilterPack_Gradients_NeonGradient()
	{
	}
}
[Token(Token = "0x20000F6")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Gradients/Rainbow")]
public class CameraFilterPack_Gradients_Rainbow : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D7")]
	private Material material
	{
		[Token(Token = "0x6000597")]
		[Address(RVA = "0xA52AF0", Offset = "0xA52AF0", VA = "0xA52AF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xA52BC4", Offset = "0xA52BC4", VA = "0xA52BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xA52C10", Offset = "0xA52C10", VA = "0xA52C10")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xA52E38", Offset = "0xA52E38", VA = "0xA52E38")]
	private void Update()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xA52E3C", Offset = "0xA52E3C", VA = "0xA52E3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xA52EC8", Offset = "0xA52EC8", VA = "0xA52EC8")]
	public CameraFilterPack_Gradients_Rainbow()
	{
	}
}
[Token(Token = "0x20000F7")]
[AddComponentMenu("Camera Filter Pack/Gradients/Stripe")]
[ExecuteInEditMode]
public class CameraFilterPack_Gradients_Stripe : MonoBehaviour
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D8")]
	private Material material
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0xA53F30", Offset = "0xA53F30", VA = "0xA53F30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xA54004", Offset = "0xA54004", VA = "0xA54004")]
	private void Start()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xA54050", Offset = "0xA54050", VA = "0xA54050")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xA54278", Offset = "0xA54278", VA = "0xA54278")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xA5427C", Offset = "0xA5427C", VA = "0xA5427C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xA54308", Offset = "0xA54308", VA = "0xA54308")]
	public CameraFilterPack_Gradients_Stripe()
	{
	}
}
[Token(Token = "0x20000F8")]
[AddComponentMenu("Camera Filter Pack/Gradients/Tech")]
[ExecuteInEditMode]
public class CameraFilterPack_Gradients_Tech : MonoBehaviour
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000D9")]
	private Material material
	{
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xA54370", Offset = "0xA54370", VA = "0xA54370")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xA54444", Offset = "0xA54444", VA = "0xA54444")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xA54490", Offset = "0xA54490", VA = "0xA54490")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xA546B8", Offset = "0xA546B8", VA = "0xA546B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xA546BC", Offset = "0xA546BC", VA = "0xA546BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xA54748", Offset = "0xA54748", VA = "0xA54748")]
	public CameraFilterPack_Gradients_Tech()
	{
	}
}
[Token(Token = "0x20000F9")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Gradients/Thermal")]
public class CameraFilterPack_Gradients_Therma : MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ShaderName;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Switch;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x170000DA")]
	private Material material
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xA547B0", Offset = "0xA547B0", VA = "0xA547B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xA54884", Offset = "0xA54884", VA = "0xA54884")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xA548D0", Offset = "0xA548D0", VA = "0xA548D0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xA54AF8", Offset = "0xA54AF8", VA = "0xA54AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xA54AFC", Offset = "0xA54AFC", VA = "0xA54AFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xA54B88", Offset = "0xA54B88", VA = "0xA54B88")]
	public CameraFilterPack_Gradients_Therma()
	{
	}
}
[Token(Token = "0x20000FA")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Light/Rainbow")]
public class CameraFilterPack_Light_Rainbow : MonoBehaviour
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.01f, 5f)]
	public float Value;

	[Token(Token = "0x170000DB")]
	private Material material
	{
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xA54BF0", Offset = "0xA54BF0", VA = "0xA54BF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xA54CC4", Offset = "0xA54CC4", VA = "0xA54CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xA54D44", Offset = "0xA54D44", VA = "0xA54D44")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xA54F3C", Offset = "0xA54F3C", VA = "0xA54F3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xA54F40", Offset = "0xA54F40", VA = "0xA54F40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xA54FCC", Offset = "0xA54FCC", VA = "0xA54FCC")]
	public CameraFilterPack_Light_Rainbow()
	{
	}
}
[Token(Token = "0x20000FB")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Light/Rainbow2")]
public class CameraFilterPack_Light_Rainbow2 : MonoBehaviour
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.01f, 5f)]
	public float Value;

	[Token(Token = "0x170000DC")]
	private Material material
	{
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xA54FE4", Offset = "0xA54FE4", VA = "0xA54FE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xA550B8", Offset = "0xA550B8", VA = "0xA550B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xA55138", Offset = "0xA55138", VA = "0xA55138")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xA55330", Offset = "0xA55330", VA = "0xA55330")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xA55334", Offset = "0xA55334", VA = "0xA55334")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xA553C0", Offset = "0xA553C0", VA = "0xA553C0")]
	public CameraFilterPack_Light_Rainbow2()
	{
	}
}
[Token(Token = "0x20000FC")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Light/Water")]
public class CameraFilterPack_Light_Water : MonoBehaviour
{
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Size;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 2f)]
	public float Alpha;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 32f)]
	public float Distance;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-2f, 2f)]
	public float Speed;

	[Token(Token = "0x170000DD")]
	private Material material
	{
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xA553D8", Offset = "0xA553D8", VA = "0xA553D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xA554AC", Offset = "0xA554AC", VA = "0xA554AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xA5552C", Offset = "0xA5552C", VA = "0xA5552C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xA5578C", Offset = "0xA5578C", VA = "0xA5578C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xA55790", Offset = "0xA55790", VA = "0xA55790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xA5581C", Offset = "0xA5581C", VA = "0xA5581C")]
	public CameraFilterPack_Light_Water()
	{
	}
}
[Token(Token = "0x20000FD")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Light/Water2")]
public class CameraFilterPack_Light_Water2 : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float Speed_X;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Speed_Y;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	public float Intensity;

	[Token(Token = "0x170000DE")]
	private Material material
	{
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xA55838", Offset = "0xA55838", VA = "0xA55838")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xA5590C", Offset = "0xA5590C", VA = "0xA5590C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xA5598C", Offset = "0xA5598C", VA = "0xA5598C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xA55C14", Offset = "0xA55C14", VA = "0xA55C14")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xA55C18", Offset = "0xA55C18", VA = "0xA55C18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xA55CA4", Offset = "0xA55CA4", VA = "0xA55CA4")]
	public CameraFilterPack_Light_Water2()
	{
	}
}
[Token(Token = "0x20000FE")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Lut/PlayWith")]
public class CameraFilterPack_Lut_PlayWith : MonoBehaviour
{
	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D LutTexture;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture3D converted3DLut;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Blend;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 3f)]
	public float OriginalIntensity;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-1f, 1f)]
	public float ResultIntensity;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-1f, 1f)]
	public float FinalIntensity;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool LutChange;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string MemoPath;

	[Token(Token = "0x170000DF")]
	private Material material
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xA55CC0", Offset = "0xA55CC0", VA = "0xA55CC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xA55D94", Offset = "0xA55D94", VA = "0xA55D94")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xA55E14", Offset = "0xA55E14", VA = "0xA55E14")]
	public void SetIdentityLut()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xA55FE0", Offset = "0xA55FE0", VA = "0xA55FE0")]
	public bool ValidDimensions(Texture2D tex2d)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xA560E0", Offset = "0xA560E0", VA = "0xA560E0")]
	public void Convert(Texture2D temp2DTex)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xA563DC", Offset = "0xA563DC", VA = "0xA563DC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xA56674", Offset = "0xA56674", VA = "0xA56674")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xA56678", Offset = "0xA56678", VA = "0xA56678")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xA5667C", Offset = "0xA5667C", VA = "0xA5667C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xA56708", Offset = "0xA56708", VA = "0xA56708")]
	public CameraFilterPack_Lut_PlayWith()
	{
	}
}
[Token(Token = "0x20000FF")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Lut/Plus")]
public class CameraFilterPack_Lut_Plus : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D LutTexture;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture3D converted3DLut;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Blend;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool LutChange;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string MemoPath;

	[Token(Token = "0x170000E0")]
	private Material material
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xA56720", Offset = "0xA56720", VA = "0xA56720")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xA567F4", Offset = "0xA567F4", VA = "0xA567F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xA56874", Offset = "0xA56874", VA = "0xA56874")]
	public void SetIdentityLut()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xA56A40", Offset = "0xA56A40", VA = "0xA56A40")]
	public bool ValidDimensions(Texture2D tex2d)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xA56B40", Offset = "0xA56B40", VA = "0xA56B40")]
	public void Convert(Texture2D temp2DTex)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xA56E3C", Offset = "0xA56E3C", VA = "0xA56E3C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xA57044", Offset = "0xA57044", VA = "0xA57044")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xA57048", Offset = "0xA57048", VA = "0xA57048")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xA5704C", Offset = "0xA5704C", VA = "0xA5704C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xA570D8", Offset = "0xA570D8", VA = "0xA570D8")]
	public CameraFilterPack_Lut_Plus()
	{
	}
}
[Token(Token = "0x2000100")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Lut/Simple")]
public class CameraFilterPack_Lut_Simple : MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D LutTexture;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture3D converted3DLut;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool LutChange;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string MemoPath;

	[Token(Token = "0x170000E1")]
	private Material material
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xA570EC", Offset = "0xA570EC", VA = "0xA570EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xA571C0", Offset = "0xA571C0", VA = "0xA571C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xA57240", Offset = "0xA57240", VA = "0xA57240")]
	public void SetIdentityLut()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xA5740C", Offset = "0xA5740C", VA = "0xA5740C")]
	public bool ValidDimensions(Texture2D tex2d)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xA5750C", Offset = "0xA5750C", VA = "0xA5750C")]
	public void Convert(Texture2D temp2DTex)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xA57808", Offset = "0xA57808", VA = "0xA57808")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xA579E0", Offset = "0xA579E0", VA = "0xA579E0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xA579E4", Offset = "0xA579E4", VA = "0xA579E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xA579E8", Offset = "0xA579E8", VA = "0xA579E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xA57A74", Offset = "0xA57A74", VA = "0xA57A74")]
	public CameraFilterPack_Lut_Simple()
	{
	}
}
[Token(Token = "0x2000101")]
[AddComponentMenu("Camera Filter Pack/Lut/TestMode")]
[ExecuteInEditMode]
public class CameraFilterPack_Lut_TestMode : MonoBehaviour
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D LutTexture;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture3D converted3DLut;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Blend;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 3f)]
	public float OriginalIntensity;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-1f, 1f)]
	public float ResultIntensity;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-1f, 1f)]
	public float FinalIntensity;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	public float TestMode;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool LutChange;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string MemoPath;

	[Token(Token = "0x170000E2")]
	private Material material
	{
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xA57A84", Offset = "0xA57A84", VA = "0xA57A84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xA57B58", Offset = "0xA57B58", VA = "0xA57B58")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xA57BD8", Offset = "0xA57BD8", VA = "0xA57BD8")]
	public void SetIdentityLut()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xA57DA4", Offset = "0xA57DA4", VA = "0xA57DA4")]
	public bool ValidDimensions(Texture2D tex2d)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xA57EA4", Offset = "0xA57EA4", VA = "0xA57EA4")]
	public void Convert(Texture2D temp2DTex)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xA581A0", Offset = "0xA581A0", VA = "0xA581A0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xA58468", Offset = "0xA58468", VA = "0xA58468")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xA5846C", Offset = "0xA5846C", VA = "0xA5846C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xA58470", Offset = "0xA58470", VA = "0xA58470")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xA584FC", Offset = "0xA584FC", VA = "0xA584FC")]
	public CameraFilterPack_Lut_TestMode()
	{
	}
}
[Token(Token = "0x2000102")]
[AddComponentMenu("Camera Filter Pack/Night Vision/Night Vision FX")]
[ExecuteInEditMode]
public class CameraFilterPack_NightVisionFX : MonoBehaviour
{
	[Token(Token = "0x2000103")]
	public enum preset
	{
		[Token(Token = "0x40007EB")]
		Night_Vision_Personalized = -1,
		[Token(Token = "0x40007EC")]
		Night_Vision_FX,
		[Token(Token = "0x40007ED")]
		Night_Vision_Classic,
		[Token(Token = "0x40007EE")]
		Night_Vision_Full,
		[Token(Token = "0x40007EF")]
		Night_Vision_Dark,
		[Token(Token = "0x40007F0")]
		Night_Vision_Sharp,
		[Token(Token = "0x40007F1")]
		Night_Vision_BlueSky,
		[Token(Token = "0x40007F2")]
		Night_Vision_Low_Light,
		[Token(Token = "0x40007F3")]
		Night_Vision_Pinky,
		[Token(Token = "0x40007F4")]
		Night_Vision_RedBurn,
		[Token(Token = "0x40007F5")]
		Night_Vision_PurpleShadow
	}

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public preset Preset;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private preset PresetMemo;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float OnOff;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0.2f, 2f)]
	public float Greenness;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Vignette;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	public float Vignette_Alpha;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-10f, 10f)]
	public float Distortion;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 1f)]
	public float Noise;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(-2f, 1f)]
	public float Intensity;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0f, 2f)]
	public float Light;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(0f, 1f)]
	public float Light2;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Range(0f, 2f)]
	public float Line;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Range(-2f, 2f)]
	public float Color_R;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Range(-2f, 2f)]
	public float Color_G;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Range(-2f, 2f)]
	public float Color_B;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Range(0f, 1f)]
	public float _Binocular_Size;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Range(0f, 1f)]
	public float _Binocular_Smooth;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Range(0f, 1f)]
	public float _Binocular_Dist;

	[Token(Token = "0x170000E3")]
	private Material material
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xA5851C", Offset = "0xA5851C", VA = "0xA5851C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xA585F0", Offset = "0xA585F0", VA = "0xA585F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xA58670", Offset = "0xA58670", VA = "0xA58670")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xA58B24", Offset = "0xA58B24", VA = "0xA58B24")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xA58EB4", Offset = "0xA58EB4", VA = "0xA58EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xA58F40", Offset = "0xA58F40", VA = "0xA58F40")]
	public CameraFilterPack_NightVisionFX()
	{
	}
}
[Token(Token = "0x2000104")]
[AddComponentMenu("Camera Filter Pack/Night Vision/Night Vision 4")]
[ExecuteInEditMode]
public class CameraFilterPack_NightVision_4 : MonoBehaviour
{
	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float FadeFX;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float TimeX;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] Matrix9;

	[Token(Token = "0x170000E4")]
	private Material material
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xA58F80", Offset = "0xA58F80", VA = "0xA58F80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xA59054", Offset = "0xA59054", VA = "0xA59054")]
	private void ChangeFilters()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xA590D8", Offset = "0xA590D8", VA = "0xA590D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xA59128", Offset = "0xA59128", VA = "0xA59128")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xA596E0", Offset = "0xA596E0", VA = "0xA596E0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xA596E4", Offset = "0xA596E4", VA = "0xA596E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xA596E8", Offset = "0xA596E8", VA = "0xA596E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xA59774", Offset = "0xA59774", VA = "0xA59774")]
	public CameraFilterPack_NightVision_4()
	{
	}
}
[Token(Token = "0x2000105")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Noise/TV")]
public class CameraFilterPack_Noise_TV : MonoBehaviour
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	private float Value2;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D Texture2;

	[Token(Token = "0x170000E5")]
	private Material material
	{
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xA597D4", Offset = "0xA597D4", VA = "0xA597D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xA598A8", Offset = "0xA598A8", VA = "0xA598A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xA5999C", Offset = "0xA5999C", VA = "0xA5999C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xA59C54", Offset = "0xA59C54", VA = "0xA59C54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xA59C58", Offset = "0xA59C58", VA = "0xA59C58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xA59CE4", Offset = "0xA59CE4", VA = "0xA59CE4")]
	public CameraFilterPack_Noise_TV()
	{
	}
}
[Token(Token = "0x2000106")]
[AddComponentMenu("Camera Filter Pack/Noise/TV_2")]
[ExecuteInEditMode]
public class CameraFilterPack_Noise_TV_2 : MonoBehaviour
{
	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Fade_Additive;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Fade_Distortion;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D Texture2;

	[Token(Token = "0x170000E6")]
	private Material material
	{
		[Token(Token = "0x6000603")]
		[Address(RVA = "0xA59CFC", Offset = "0xA59CFC", VA = "0xA59CFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xA59DD0", Offset = "0xA59DD0", VA = "0xA59DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xA59EC4", Offset = "0xA59EC4", VA = "0xA59EC4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xA5A17C", Offset = "0xA5A17C", VA = "0xA5A17C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xA5A180", Offset = "0xA5A180", VA = "0xA5A180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xA5A20C", Offset = "0xA5A20C", VA = "0xA5A20C")]
	public CameraFilterPack_Noise_TV_2()
	{
	}
}
[Token(Token = "0x2000107")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Noise/TV_3")]
public class CameraFilterPack_Noise_TV_3 : MonoBehaviour
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Fade_Additive;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Fade_Distortion;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D Texture2;

	[Token(Token = "0x170000E7")]
	private Material material
	{
		[Token(Token = "0x6000609")]
		[Address(RVA = "0xA5A224", Offset = "0xA5A224", VA = "0xA5A224")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xA5A2F8", Offset = "0xA5A2F8", VA = "0xA5A2F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xA5A3EC", Offset = "0xA5A3EC", VA = "0xA5A3EC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xA5A6A4", Offset = "0xA5A6A4", VA = "0xA5A6A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xA5A6A8", Offset = "0xA5A6A8", VA = "0xA5A6A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xA5A734", Offset = "0xA5A734", VA = "0xA5A734")]
	public CameraFilterPack_Noise_TV_3()
	{
	}
}
[Token(Token = "0x2000108")]
[AddComponentMenu("Camera Filter Pack/Night Vision/Night Vision 1")]
[ExecuteInEditMode]
public class CameraFilterPack_Oculus_NightVision1 : MonoBehaviour
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float Distortion;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public float Vignette;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(1f, 150f)]
	public float Linecount;

	[Token(Token = "0x170000E8")]
	private Material material
	{
		[Token(Token = "0x600060F")]
		[Address(RVA = "0xA5A74C", Offset = "0xA5A74C", VA = "0xA5A74C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xA5A820", Offset = "0xA5A820", VA = "0xA5A820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xA5A8A0", Offset = "0xA5A8A0", VA = "0xA5A8A0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xA5AAF8", Offset = "0xA5AAF8", VA = "0xA5AAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xA5AAFC", Offset = "0xA5AAFC", VA = "0xA5AAFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xA5AB88", Offset = "0xA5AB88", VA = "0xA5AB88")]
	public CameraFilterPack_Oculus_NightVision1()
	{
	}
}
[Token(Token = "0x2000109")]
[AddComponentMenu("Camera Filter Pack/Night Vision/Night Vision 2")]
[ExecuteInEditMode]
public class CameraFilterPack_Oculus_NightVision2 : MonoBehaviour
{
	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float FadeFX;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float TimeX;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] Matrix9;

	[Token(Token = "0x170000E9")]
	private Material material
	{
		[Token(Token = "0x6000615")]
		[Address(RVA = "0xA5ABA4", Offset = "0xA5ABA4", VA = "0xA5ABA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xA5AC78", Offset = "0xA5AC78", VA = "0xA5AC78")]
	private void ChangeFilters()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xA5ACFC", Offset = "0xA5ACFC", VA = "0xA5ACFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xA5AD4C", Offset = "0xA5AD4C", VA = "0xA5AD4C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xA5B304", Offset = "0xA5B304", VA = "0xA5B304")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xA5B308", Offset = "0xA5B308", VA = "0xA5B308")]
	private void Update()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xA5B30C", Offset = "0xA5B30C", VA = "0xA5B30C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xA5B398", Offset = "0xA5B398", VA = "0xA5B398")]
	public CameraFilterPack_Oculus_NightVision2()
	{
	}
}
[Token(Token = "0x200010A")]
[AddComponentMenu("Camera Filter Pack/Night Vision/Night Vision 3")]
[ExecuteInEditMode]
public class CameraFilterPack_Oculus_NightVision3 : MonoBehaviour
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.2f, 2f)]
	public float Greenness;

	[Token(Token = "0x170000EA")]
	private Material material
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0xA5B3F8", Offset = "0xA5B3F8", VA = "0xA5B3F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xA5B4CC", Offset = "0xA5B4CC", VA = "0xA5B4CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xA5B54C", Offset = "0xA5B54C", VA = "0xA5B54C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xA5B730", Offset = "0xA5B730", VA = "0xA5B730")]
	private void Update()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xA5B734", Offset = "0xA5B734", VA = "0xA5B734")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xA5B7C0", Offset = "0xA5B7C0", VA = "0xA5B7C0")]
	public CameraFilterPack_Oculus_NightVision3()
	{
	}
}
[Token(Token = "0x200010B")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Night Vision/Night Vision 5")]
public class CameraFilterPack_Oculus_NightVision5 : MonoBehaviour
{
	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string ShaderName;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader SCShader;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float FadeFX;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float _Size;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float _Smooth;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float _Dist;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float TimeX;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material SCMaterial;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] Matrix9;

	[Token(Token = "0x170000EB")]
	private Material material
	{
		[Token(Token = "0x6000623")]
		[Address(RVA = "0xA5B7D4", Offset = "0xA5B7D4", VA = "0xA5B7D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xA5B8A8", Offset = "0xA5B8A8", VA = "0xA5B8A8")]
	private void ChangeFilters()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xA5B92C", Offset = "0xA5B92C", VA = "0xA5B92C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xA5B97C", Offset = "0xA5B97C", VA = "0xA5B97C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xA5BFC4", Offset = "0xA5BFC4", VA = "0xA5BFC4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xA5BFC8", Offset = "0xA5BFC8", VA = "0xA5BFC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xA5BFCC", Offset = "0xA5BFCC", VA = "0xA5BFCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xA5C058", Offset = "0xA5C058", VA = "0xA5C058")]
	public CameraFilterPack_Oculus_NightVision5()
	{
	}
}
[Token(Token = "0x200010C")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/ThermaVision")]
public class CameraFilterPack_Oculus_ThermaVision : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Therma_Variation;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 8f)]
	private float Contrast;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 4f)]
	private float Burn;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 16f)]
	private float SceneCut;

	[Token(Token = "0x170000EC")]
	private Material material
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0xA5C0C4", Offset = "0xA5C0C4", VA = "0xA5C0C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xA5C198", Offset = "0xA5C198", VA = "0xA5C198")]
	private void Start()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xA5C218", Offset = "0xA5C218", VA = "0xA5C218")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xA5C4A0", Offset = "0xA5C4A0", VA = "0xA5C4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xA5C4A4", Offset = "0xA5C4A4", VA = "0xA5C4A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xA5C530", Offset = "0xA5C530", VA = "0xA5C530")]
	public CameraFilterPack_Oculus_ThermaVision()
	{
	}
}
[Token(Token = "0x200010D")]
[AddComponentMenu("Camera Filter Pack/Old Film/Cutting 1")]
[ExecuteInEditMode]
public class CameraFilterPack_OldFilm_Cutting1 : MonoBehaviour
{
	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 2f)]
	public float Luminosity;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float Vignette;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 2f)]
	public float Negative;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D Texture2;

	[Token(Token = "0x170000ED")]
	private Material material
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0xA5C550", Offset = "0xA5C550", VA = "0xA5C550")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xA5C624", Offset = "0xA5C624", VA = "0xA5C624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xA5C718", Offset = "0xA5C718", VA = "0xA5C718")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xA5C960", Offset = "0xA5C960", VA = "0xA5C960")]
	private void Update()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xA5C964", Offset = "0xA5C964", VA = "0xA5C964")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xA5C9F0", Offset = "0xA5C9F0", VA = "0xA5C9F0")]
	public CameraFilterPack_OldFilm_Cutting1()
	{
	}
}
[Token(Token = "0x200010E")]
[AddComponentMenu("Camera Filter Pack/Old Film/Cutting 2")]
[ExecuteInEditMode]
public class CameraFilterPack_OldFilm_Cutting2 : MonoBehaviour
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 2f)]
	public float Luminosity;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float Vignette;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float Negative;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D Texture2;

	[Token(Token = "0x170000EE")]
	private Material material
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0xA5CA04", Offset = "0xA5CA04", VA = "0xA5CA04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xA5CAD8", Offset = "0xA5CAD8", VA = "0xA5CAD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xA5CBCC", Offset = "0xA5CBCC", VA = "0xA5CBCC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xA5CE1C", Offset = "0xA5CE1C", VA = "0xA5CE1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xA5CE20", Offset = "0xA5CE20", VA = "0xA5CE20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xA5CEAC", Offset = "0xA5CEAC", VA = "0xA5CEAC")]
	public CameraFilterPack_OldFilm_Cutting2()
	{
	}
}
[Token(Token = "0x200010F")]
[AddComponentMenu("Camera Filter Pack/Pixelisation/Dot")]
[ExecuteInEditMode]
public class CameraFilterPack_Pixelisation_Dot : MonoBehaviour
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.0001f, 0.5f)]
	public float Size;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float LightBackGround;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Speed;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Size2;

	[Token(Token = "0x170000EF")]
	private Material material
	{
		[Token(Token = "0x600063D")]
		[Address(RVA = "0xA5CEC0", Offset = "0xA5CEC0", VA = "0xA5CEC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xA5CF94", Offset = "0xA5CF94", VA = "0xA5CF94")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xA5D014", Offset = "0xA5D014", VA = "0xA5D014")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xA5D29C", Offset = "0xA5D29C", VA = "0xA5D29C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xA5D2A0", Offset = "0xA5D2A0", VA = "0xA5D2A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xA5D32C", Offset = "0xA5D32C", VA = "0xA5D32C")]
	public CameraFilterPack_Pixelisation_Dot()
	{
	}
}
[Token(Token = "0x2000110")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Pixelisation/OilPaint")]
public class CameraFilterPack_Pixelisation_OilPaint : MonoBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 5f)]
	public float Value;

	[Token(Token = "0x170000F0")]
	private Material material
	{
		[Token(Token = "0x6000643")]
		[Address(RVA = "0xA5D348", Offset = "0xA5D348", VA = "0xA5D348")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xA5D41C", Offset = "0xA5D41C", VA = "0xA5D41C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xA5D49C", Offset = "0xA5D49C", VA = "0xA5D49C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xA5D694", Offset = "0xA5D694", VA = "0xA5D694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xA5D698", Offset = "0xA5D698", VA = "0xA5D698")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xA5D724", Offset = "0xA5D724", VA = "0xA5D724")]
	public CameraFilterPack_Pixelisation_OilPaint()
	{
	}
}
[Token(Token = "0x2000111")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Pixelisation/OilPaintHQ")]
public class CameraFilterPack_Pixelisation_OilPaintHQ : MonoBehaviour
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 5f)]
	public float Value;

	[Token(Token = "0x170000F1")]
	private Material material
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0xA5D738", Offset = "0xA5D738", VA = "0xA5D738")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xA5D80C", Offset = "0xA5D80C", VA = "0xA5D80C")]
	private void Start()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xA5D88C", Offset = "0xA5D88C", VA = "0xA5D88C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xA5DA84", Offset = "0xA5DA84", VA = "0xA5DA84")]
	private void Update()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xA5DA88", Offset = "0xA5DA88", VA = "0xA5DA88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xA5DB14", Offset = "0xA5DB14", VA = "0xA5DB14")]
	public CameraFilterPack_Pixelisation_OilPaintHQ()
	{
	}
}
[Token(Token = "0x2000112")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Pixelisation/Pixelisation_Sweater")]
public class CameraFilterPack_Pixelisation_Sweater : MonoBehaviour
{
	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(16f, 128f)]
	public float SweaterSize;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 2f)]
	public float _Intensity;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D Texture2;

	[Token(Token = "0x170000F2")]
	private Material material
	{
		[Token(Token = "0x600064F")]
		[Address(RVA = "0xA5DB2C", Offset = "0xA5DB2C", VA = "0xA5DB2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xA5DC00", Offset = "0xA5DC00", VA = "0xA5DC00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xA5DCF4", Offset = "0xA5DCF4", VA = "0xA5DCF4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xA5DF04", Offset = "0xA5DF04", VA = "0xA5DF04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xA5DF08", Offset = "0xA5DF08", VA = "0xA5DF08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xA5DF94", Offset = "0xA5DF94", VA = "0xA5DF94")]
	public CameraFilterPack_Pixelisation_Sweater()
	{
	}
}
[Token(Token = "0x2000113")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Pixel/Pixelisation")]
public class CameraFilterPack_Pixel_Pixelisation : MonoBehaviour
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.6f, 120f)]
	public float _Pixelisation;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.6f, 120f)]
	public float _SizeX;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0.6f, 120f)]
	public float _SizeY;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material SCMaterial;

	[Token(Token = "0x170000F3")]
	private Material material
	{
		[Token(Token = "0x6000655")]
		[Address(RVA = "0xA5DFB4", Offset = "0xA5DFB4", VA = "0xA5DFB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xA5E088", Offset = "0xA5E088", VA = "0xA5E088")]
	private void Start()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xA5E108", Offset = "0xA5E108", VA = "0xA5E108")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xA5E284", Offset = "0xA5E284", VA = "0xA5E284")]
	private void Update()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xA5E288", Offset = "0xA5E288", VA = "0xA5E288")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xA5E314", Offset = "0xA5E314", VA = "0xA5E314")]
	public CameraFilterPack_Pixel_Pixelisation()
	{
	}
}
[Token(Token = "0x2000114")]
[AddComponentMenu("CameraFilterPack/VHS/Real VHS HQ")]
[ExecuteInEditMode]
public class CameraFilterPack_Real_VHS : MonoBehaviour
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material SCMaterial;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D VHS;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D VHS2;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float TRACKING;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1.5f)]
	public float Constrast;

	[Token(Token = "0x170000F4")]
	private Material material
	{
		[Token(Token = "0x600065B")]
		[Address(RVA = "0xA5E330", Offset = "0xA5E330", VA = "0xA5E330")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xA5E404", Offset = "0xA5E404", VA = "0xA5E404")]
	private void Start()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xA5E564", Offset = "0xA5E564", VA = "0xA5E564")]
	public static Texture2D GetRTPixels(Texture2D t, RenderTexture rt, int sx, int sy)
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xA5E618", Offset = "0xA5E618", VA = "0xA5E618")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xA5E810", Offset = "0xA5E810", VA = "0xA5E810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xA5E814", Offset = "0xA5E814", VA = "0xA5E814")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xA5E8A0", Offset = "0xA5E8A0", VA = "0xA5E8A0")]
	public CameraFilterPack_Real_VHS()
	{
	}
}
[Token(Token = "0x2000115")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Retro/Loading")]
public class CameraFilterPack_Retro_Loading : MonoBehaviour
{
	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.1f, 10f)]
	public float Speed;

	[Token(Token = "0x170000F5")]
	private Material material
	{
		[Token(Token = "0x6000662")]
		[Address(RVA = "0xA5E8B4", Offset = "0xA5E8B4", VA = "0xA5E8B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xA5E988", Offset = "0xA5E988", VA = "0xA5E988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xA5EA08", Offset = "0xA5EA08", VA = "0xA5EA08")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xA5EC00", Offset = "0xA5EC00", VA = "0xA5EC00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xA5EC04", Offset = "0xA5EC04", VA = "0xA5EC04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xA5EC90", Offset = "0xA5EC90", VA = "0xA5EC90")]
	public CameraFilterPack_Retro_Loading()
	{
	}
}
[Token(Token = "0x2000116")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Sharpen/Sharpen")]
public class CameraFilterPack_Sharpen_Sharpen : MonoBehaviour
{
	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.001f, 100f)]
	public float Value;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.001f, 32f)]
	public float Value2;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x170000F6")]
	private Material material
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xA5ECA4", Offset = "0xA5ECA4", VA = "0xA5ECA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xA5ED78", Offset = "0xA5ED78", VA = "0xA5ED78")]
	private void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xA5EDF8", Offset = "0xA5EDF8", VA = "0xA5EDF8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xA5F020", Offset = "0xA5F020", VA = "0xA5F020")]
	private void Update()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xA5F024", Offset = "0xA5F024", VA = "0xA5F024")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xA5F0B0", Offset = "0xA5F0B0", VA = "0xA5F0B0")]
	public CameraFilterPack_Sharpen_Sharpen()
	{
	}
}
[Token(Token = "0x2000117")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Special/Bubble")]
public class CameraFilterPack_Special_Bubble : MonoBehaviour
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-4f, 4f)]
	public float X;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-4f, 4f)]
	public float Y;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 5f)]
	public float Rate;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x170000F7")]
	private Material material
	{
		[Token(Token = "0x600066E")]
		[Address(RVA = "0xA5F0CC", Offset = "0xA5F0CC", VA = "0xA5F0CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xA5F1A0", Offset = "0xA5F1A0", VA = "0xA5F1A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xA5F220", Offset = "0xA5F220", VA = "0xA5F220")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xA5F4A8", Offset = "0xA5F4A8", VA = "0xA5F4A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xA5F4AC", Offset = "0xA5F4AC", VA = "0xA5F4AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xA5F538", Offset = "0xA5F538", VA = "0xA5F538")]
	public CameraFilterPack_Special_Bubble()
	{
	}
}
[Token(Token = "0x2000118")]
[AddComponentMenu("Camera Filter Pack/TV/50s")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_50 : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000F8")]
	private Material material
	{
		[Token(Token = "0x6000674")]
		[Address(RVA = "0xA5F554", Offset = "0xA5F554", VA = "0xA5F554")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xA5F628", Offset = "0xA5F628", VA = "0xA5F628")]
	private void Start()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xA5F6A8", Offset = "0xA5F6A8", VA = "0xA5F6A8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xA5F870", Offset = "0xA5F870", VA = "0xA5F870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xA5F874", Offset = "0xA5F874", VA = "0xA5F874")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xA5F900", Offset = "0xA5F900", VA = "0xA5F900")]
	public CameraFilterPack_TV_50()
	{
	}
}
[Token(Token = "0x2000119")]
[AddComponentMenu("Camera Filter Pack/TV/80s")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_80 : MonoBehaviour
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000F9")]
	private Material material
	{
		[Token(Token = "0x600067A")]
		[Address(RVA = "0xA5F910", Offset = "0xA5F910", VA = "0xA5F910")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xA5F9E4", Offset = "0xA5F9E4", VA = "0xA5F9E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xA5FA64", Offset = "0xA5FA64", VA = "0xA5FA64")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xA5FC2C", Offset = "0xA5FC2C", VA = "0xA5FC2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xA5FC30", Offset = "0xA5FC30", VA = "0xA5FC30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xA5FCBC", Offset = "0xA5FCBC", VA = "0xA5FCBC")]
	public CameraFilterPack_TV_80()
	{
	}
}
[Token(Token = "0x200011A")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/ARCADE")]
public class CameraFilterPack_TV_ARCADE : MonoBehaviour
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x170000FA")]
	private Material material
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xA5FCCC", Offset = "0xA5FCCC", VA = "0xA5FCCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xA5FDA0", Offset = "0xA5FDA0", VA = "0xA5FDA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xA5FE20", Offset = "0xA5FE20", VA = "0xA5FE20")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xA5FFE8", Offset = "0xA5FFE8", VA = "0xA5FFE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xA5FFEC", Offset = "0xA5FFEC", VA = "0xA5FFEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xA60078", Offset = "0xA60078", VA = "0xA60078")]
	public CameraFilterPack_TV_ARCADE()
	{
	}
}
[Token(Token = "0x200011B")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/ARCADE_2")]
public class CameraFilterPack_TV_ARCADE_2 : MonoBehaviour
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float Interferance_Size;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float Interferance_Speed;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	public float Contrast;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x170000FB")]
	private Material material
	{
		[Token(Token = "0x6000686")]
		[Address(RVA = "0xA60088", Offset = "0xA60088", VA = "0xA60088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xA6015C", Offset = "0xA6015C", VA = "0xA6015C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xA601DC", Offset = "0xA601DC", VA = "0xA601DC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xA60464", Offset = "0xA60464", VA = "0xA60464")]
	private void Update()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xA60468", Offset = "0xA60468", VA = "0xA60468")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xA604F4", Offset = "0xA604F4", VA = "0xA604F4")]
	public CameraFilterPack_TV_ARCADE_2()
	{
	}
}
[Token(Token = "0x200011C")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/ARCADE_Fast")]
public class CameraFilterPack_TV_ARCADE_Fast : MonoBehaviour
{
	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.05f)]
	public float Interferance_Size;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 4f)]
	public float Interferance_Speed;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	public float Contrast;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D Texture2;

	[Token(Token = "0x170000FC")]
	private Material material
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xA60510", Offset = "0xA60510", VA = "0xA60510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xA605E4", Offset = "0xA605E4", VA = "0xA605E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xA606D8", Offset = "0xA606D8", VA = "0xA606D8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xA60990", Offset = "0xA60990", VA = "0xA60990")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xA60994", Offset = "0xA60994", VA = "0xA60994")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xA60A20", Offset = "0xA60A20", VA = "0xA60A20")]
	public CameraFilterPack_TV_ARCADE_Fast()
	{
	}
}
[Token(Token = "0x200011D")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/Artefact")]
public class CameraFilterPack_TV_Artefact : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(-10f, 10f)]
	public float Colorisation;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-10f, 10f)]
	public float Parasite;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(-10f, 10f)]
	public float Noise;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x170000FD")]
	private Material material
	{
		[Token(Token = "0x6000692")]
		[Address(RVA = "0xA60A3C", Offset = "0xA60A3C", VA = "0xA60A3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xA60B10", Offset = "0xA60B10", VA = "0xA60B10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xA60B90", Offset = "0xA60B90", VA = "0xA60B90")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xA60DE8", Offset = "0xA60DE8", VA = "0xA60DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xA60DEC", Offset = "0xA60DEC", VA = "0xA60DEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xA60E78", Offset = "0xA60E78", VA = "0xA60E78")]
	public CameraFilterPack_TV_Artefact()
	{
	}
}
[Token(Token = "0x200011E")]
[AddComponentMenu("Camera Filter Pack/TV/Broken Glass")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_BrokenGlass : MonoBehaviour
{
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 128f)]
	public float Broken_Small;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 128f)]
	public float Broken_Medium;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 128f)]
	public float Broken_High;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 128f)]
	public float Broken_Big;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.004f)]
	public float LightReflect;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D Texture2;

	[Token(Token = "0x170000FE")]
	private Material material
	{
		[Token(Token = "0x6000698")]
		[Address(RVA = "0xA60E88", Offset = "0xA60E88", VA = "0xA60E88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xA60F5C", Offset = "0xA60F5C", VA = "0xA60F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xA61050", Offset = "0xA61050", VA = "0xA61050")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xA612C0", Offset = "0xA612C0", VA = "0xA612C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xA612C4", Offset = "0xA612C4", VA = "0xA612C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xA61350", Offset = "0xA61350", VA = "0xA61350")]
	public CameraFilterPack_TV_BrokenGlass()
	{
	}
}
[Token(Token = "0x200011F")]
[AddComponentMenu("Camera Filter Pack/TV/Broken Glass2")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_BrokenGlass2 : MonoBehaviour
{
	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float Bullet_1;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float Bullet_2;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float Bullet_3;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float Bullet_4;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float Bullet_5;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float Bullet_6;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float Bullet_7;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Bullet_8;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Bullet_9;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Bullet_10;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float Bullet_11;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Bullet_12;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material SCMaterial;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D Texture2;

	[Token(Token = "0x170000FF")]
	private Material material
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0xA6136C", Offset = "0xA6136C", VA = "0xA6136C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xA61440", Offset = "0xA61440", VA = "0xA61440")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xA61534", Offset = "0xA61534", VA = "0xA61534")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xA61AA8", Offset = "0xA61AA8", VA = "0xA61AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xA61AAC", Offset = "0xA61AAC", VA = "0xA61AAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xA61B38", Offset = "0xA61B38", VA = "0xA61B38")]
	public CameraFilterPack_TV_BrokenGlass2()
	{
	}
}
[Token(Token = "0x2000120")]
[AddComponentMenu("Camera Filter Pack/TV/Chromatical")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Chromatical : MonoBehaviour
{
	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000100")]
	private Material material
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xA61B4C", Offset = "0xA61B4C", VA = "0xA61B4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xA61C20", Offset = "0xA61C20", VA = "0xA61C20")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xA61CA0", Offset = "0xA61CA0", VA = "0xA61CA0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xA61E58", Offset = "0xA61E58", VA = "0xA61E58")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xA61E5C", Offset = "0xA61E5C", VA = "0xA61E5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xA61EE8", Offset = "0xA61EE8", VA = "0xA61EE8")]
	public CameraFilterPack_TV_Chromatical()
	{
	}
}
[Token(Token = "0x2000121")]
[AddComponentMenu("Camera Filter Pack/TV/Chromatical2")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Chromatical2 : MonoBehaviour
{
	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float Aberration;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	private float Value2;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x17000101")]
	private Material material
	{
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xA61EF8", Offset = "0xA61EF8", VA = "0xA61EF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xA61FCC", Offset = "0xA61FCC", VA = "0xA61FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xA6204C", Offset = "0xA6204C", VA = "0xA6204C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xA622D4", Offset = "0xA622D4", VA = "0xA622D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xA622D8", Offset = "0xA622D8", VA = "0xA622D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xA62364", Offset = "0xA62364", VA = "0xA62364")]
	public CameraFilterPack_TV_Chromatical2()
	{
	}
}
[Token(Token = "0x2000122")]
[AddComponentMenu("Camera Filter Pack/Glitch/Compression FX")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_CompressionFX : MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(-10f, 10f)]
	public float Parasite;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000102")]
	private Material material
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xA62380", Offset = "0xA62380", VA = "0xA62380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xA62454", Offset = "0xA62454", VA = "0xA62454")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xA624D4", Offset = "0xA624D4", VA = "0xA624D4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xA626CC", Offset = "0xA626CC", VA = "0xA626CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xA626D0", Offset = "0xA626D0", VA = "0xA626D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xA6275C", Offset = "0xA6275C", VA = "0xA6275C")]
	public CameraFilterPack_TV_CompressionFX()
	{
	}
}
[Token(Token = "0x2000123")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/Distorted")]
public class CameraFilterPack_TV_Distorted : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 10f)]
	public float Distortion;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(-0.01f, 0.01f)]
	public float RGB;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material SCMaterial;

	[Token(Token = "0x17000103")]
	private Material material
	{
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xA6276C", Offset = "0xA6276C", VA = "0xA6276C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xA62840", Offset = "0xA62840", VA = "0xA62840")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xA628C0", Offset = "0xA628C0", VA = "0xA628C0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xA62A70", Offset = "0xA62A70", VA = "0xA62A70")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xA62A74", Offset = "0xA62A74", VA = "0xA62A74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xA62B00", Offset = "0xA62B00", VA = "0xA62B00")]
	public CameraFilterPack_TV_Distorted()
	{
	}
}
[Token(Token = "0x2000124")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/Horror")]
public class CameraFilterPack_TV_Horror : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	private float Fade_Additive;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	private float Fade_Distortion;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D Texture2;

	[Token(Token = "0x17000104")]
	private Material material
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xA62B1C", Offset = "0xA62B1C", VA = "0xA62B1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xA62BF0", Offset = "0xA62BF0", VA = "0xA62BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xA62CE4", Offset = "0xA62CE4", VA = "0xA62CE4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xA62F9C", Offset = "0xA62F9C", VA = "0xA62F9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xA62FA0", Offset = "0xA62FA0", VA = "0xA62FA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xA6302C", Offset = "0xA6302C", VA = "0xA6302C")]
	public CameraFilterPack_TV_Horror()
	{
	}
}
[Token(Token = "0x2000125")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/LED")]
public class CameraFilterPack_TV_LED : MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(1f, 10f)]
	private float Distortion;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(1f, 15f)]
	public int Size;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material SCMaterial;

	[Token(Token = "0x17000105")]
	private Material material
	{
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xA63044", Offset = "0xA63044", VA = "0xA63044")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xA63118", Offset = "0xA63118", VA = "0xA63118")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xA63198", Offset = "0xA63198", VA = "0xA63198")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xA633C4", Offset = "0xA633C4", VA = "0xA633C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xA633C8", Offset = "0xA633C8", VA = "0xA633C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xA63454", Offset = "0xA63454", VA = "0xA63454")]
	public CameraFilterPack_TV_LED()
	{
	}
}
[Token(Token = "0x2000126")]
[AddComponentMenu("Camera Filter Pack/TV/Noise")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Noise : MonoBehaviour
{
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.0001f, 0.5f)]
	private float Size;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1.5f, 1.5f)]
	private float LightBackGround;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Speed;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Size2;

	[Token(Token = "0x17000106")]
	private Material material
	{
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xA6346C", Offset = "0xA6346C", VA = "0xA6346C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xA63540", Offset = "0xA63540", VA = "0xA63540")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xA635C0", Offset = "0xA635C0", VA = "0xA635C0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xA63848", Offset = "0xA63848", VA = "0xA63848")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xA6384C", Offset = "0xA6384C", VA = "0xA6384C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xA638D8", Offset = "0xA638D8", VA = "0xA638D8")]
	public CameraFilterPack_TV_Noise()
	{
	}
}
[Token(Token = "0x2000127")]
[AddComponentMenu("Camera Filter Pack/Old Film/Old")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Old : MonoBehaviour
{
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 10f)]
	public float Distortion;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x17000107")]
	private Material material
	{
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xA638F4", Offset = "0xA638F4", VA = "0xA638F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xA639C8", Offset = "0xA639C8", VA = "0xA639C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xA63A48", Offset = "0xA63A48", VA = "0xA63A48")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xA63BC8", Offset = "0xA63BC8", VA = "0xA63BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xA63BCC", Offset = "0xA63BCC", VA = "0xA63BCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xA63C58", Offset = "0xA63C58", VA = "0xA63C58")]
	public CameraFilterPack_TV_Old()
	{
	}
}
[Token(Token = "0x2000128")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Old Film/Old_Movie")]
public class CameraFilterPack_TV_Old_Movie : MonoBehaviour
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 10f)]
	public float Distortion;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x17000108")]
	private Material material
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xA63C68", Offset = "0xA63C68", VA = "0xA63C68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xA63D3C", Offset = "0xA63D3C", VA = "0xA63D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xA63DBC", Offset = "0xA63DBC", VA = "0xA63DBC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xA63F3C", Offset = "0xA63F3C", VA = "0xA63F3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xA63F40", Offset = "0xA63F40", VA = "0xA63F40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xA63FCC", Offset = "0xA63FCC", VA = "0xA63FCC")]
	public CameraFilterPack_TV_Old_Movie()
	{
	}
}
[Token(Token = "0x2000129")]
[AddComponentMenu("Camera Filter Pack/Old Film/Old_Movie_2")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Old_Movie_2 : MonoBehaviour
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 60f)]
	public float FramePerSecond;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 5f)]
	public float Contrast;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 4f)]
	public float Burn;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 16f)]
	public float SceneCut;

	[Token(Token = "0x17000109")]
	private Material material
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xA63FDC", Offset = "0xA63FDC", VA = "0xA63FDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xA640B0", Offset = "0xA640B0", VA = "0xA640B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xA64130", Offset = "0xA64130", VA = "0xA64130")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xA643B8", Offset = "0xA643B8", VA = "0xA643B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xA643BC", Offset = "0xA643BC", VA = "0xA643BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xA64448", Offset = "0xA64448", VA = "0xA64448")]
	public CameraFilterPack_TV_Old_Movie_2()
	{
	}
}
[Token(Token = "0x200012A")]
[AddComponentMenu("Camera Filter Pack/TV/Planet Mars")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_PlanetMars : MonoBehaviour
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(-10f, 10f)]
	public float Distortion;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x1700010A")]
	private Material material
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xA64468", Offset = "0xA64468", VA = "0xA64468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xA6453C", Offset = "0xA6453C", VA = "0xA6453C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xA645BC", Offset = "0xA645BC", VA = "0xA645BC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xA647B4", Offset = "0xA647B4", VA = "0xA647B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xA647B8", Offset = "0xA647B8", VA = "0xA647B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xA64844", Offset = "0xA64844", VA = "0xA64844")]
	public CameraFilterPack_TV_PlanetMars()
	{
	}
}
[Token(Token = "0x200012B")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/Posterize")]
public class CameraFilterPack_TV_Posterize : MonoBehaviour
{
	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 256f)]
	public float Posterize;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x1700010B")]
	private Material material
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xA64854", Offset = "0xA64854", VA = "0xA64854")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xA64928", Offset = "0xA64928", VA = "0xA64928")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xA649A8", Offset = "0xA649A8", VA = "0xA649A8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xA64B28", Offset = "0xA64B28", VA = "0xA64B28")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xA64B2C", Offset = "0xA64B2C", VA = "0xA64B2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xA64BB8", Offset = "0xA64BB8", VA = "0xA64BB8")]
	public CameraFilterPack_TV_Posterize()
	{
	}
}
[Token(Token = "0x200012C")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/RGB Display")]
public class CameraFilterPack_TV_Rgb : MonoBehaviour
{
	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float TimeX;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.01f, 4f)]
	public float Distortion;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x1700010C")]
	private Material material
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xA64BCC", Offset = "0xA64BCC", VA = "0xA64BCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xA64CA0", Offset = "0xA64CA0", VA = "0xA64CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xA64D20", Offset = "0xA64D20", VA = "0xA64D20")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xA64F18", Offset = "0xA64F18", VA = "0xA64F18")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xA64F1C", Offset = "0xA64F1C", VA = "0xA64F1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xA64FA8", Offset = "0xA64FA8", VA = "0xA64FA8")]
	public CameraFilterPack_TV_Rgb()
	{
	}
}
[Token(Token = "0x200012D")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/Tiles")]
public class CameraFilterPack_TV_Tiles : MonoBehaviour
{
	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.5f, 2f)]
	public float Size;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float Intensity;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float StretchX;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float StretchY;

	[Token(Token = "0x1700010D")]
	private Material material
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xA64FB8", Offset = "0xA64FB8", VA = "0xA64FB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xA6508C", Offset = "0xA6508C", VA = "0xA6508C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xA6510C", Offset = "0xA6510C", VA = "0xA6510C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xA65394", Offset = "0xA65394", VA = "0xA65394")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xA65398", Offset = "0xA65398", VA = "0xA65398")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xA65424", Offset = "0xA65424", VA = "0xA65424")]
	public CameraFilterPack_TV_Tiles()
	{
	}
}
[Token(Token = "0x200012E")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/VHS/VCR Distortion")]
public class CameraFilterPack_TV_Vcr : MonoBehaviour
{
	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 10f)]
	public float Distortion;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x1700010E")]
	private Material material
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xA65440", Offset = "0xA65440", VA = "0xA65440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xA65514", Offset = "0xA65514", VA = "0xA65514")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xA65594", Offset = "0xA65594", VA = "0xA65594")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xA65714", Offset = "0xA65714", VA = "0xA65714")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xA65718", Offset = "0xA65718", VA = "0xA65718")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xA657A4", Offset = "0xA657A4", VA = "0xA657A4")]
	public CameraFilterPack_TV_Vcr()
	{
	}
}
[Token(Token = "0x200012F")]
[AddComponentMenu("Camera Filter Pack/VHS/VHS")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_VHS : MonoBehaviour
{
	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(1f, 256f)]
	public float Cryptage;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(1f, 100f)]
	public float Parasite;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 3f)]
	public float Calibrage;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float WhiteParasite;

	[Token(Token = "0x1700010F")]
	private Material material
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xA657B4", Offset = "0xA657B4", VA = "0xA657B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xA65888", Offset = "0xA65888", VA = "0xA65888")]
	private void Start()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xA65908", Offset = "0xA65908", VA = "0xA65908")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xA65B90", Offset = "0xA65B90", VA = "0xA65B90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xA65B94", Offset = "0xA65B94", VA = "0xA65B94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xA65C20", Offset = "0xA65C20", VA = "0xA65C20")]
	public CameraFilterPack_TV_VHS()
	{
	}
}
[Token(Token = "0x2000130")]
[AddComponentMenu("Camera Filter Pack/VHS/VHS_Rewind")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_VHS_Rewind : MonoBehaviour
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Cryptage;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-20f, 20f)]
	public float Parasite;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-20f, 20f)]
	public float Parasite2;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	private float WhiteParasite;

	[Token(Token = "0x17000110")]
	private Material material
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0xA65C40", Offset = "0xA65C40", VA = "0xA65C40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xA65D14", Offset = "0xA65D14", VA = "0xA65D14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xA65D94", Offset = "0xA65D94", VA = "0xA65D94")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xA6601C", Offset = "0xA6601C", VA = "0xA6601C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xA66020", Offset = "0xA66020", VA = "0xA66020")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xA660AC", Offset = "0xA660AC", VA = "0xA660AC")]
	public CameraFilterPack_TV_VHS_Rewind()
	{
	}
}
[Token(Token = "0x2000131")]
[AddComponentMenu("Camera Filter Pack/TV/Video3D")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Video3D : MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000111")]
	private Material material
	{
		[Token(Token = "0x600070A")]
		[Address(RVA = "0xA660C8", Offset = "0xA660C8", VA = "0xA660C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xA6619C", Offset = "0xA6619C", VA = "0xA6619C")]
	private void Start()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xA6621C", Offset = "0xA6621C", VA = "0xA6621C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xA663E4", Offset = "0xA663E4", VA = "0xA663E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xA663E8", Offset = "0xA663E8", VA = "0xA663E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xA66474", Offset = "0xA66474", VA = "0xA66474")]
	public CameraFilterPack_TV_Video3D()
	{
	}
}
[Token(Token = "0x2000132")]
[AddComponentMenu("Camera Filter Pack/TV/Videoflip")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Videoflip : MonoBehaviour
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x17000112")]
	private Material material
	{
		[Token(Token = "0x6000710")]
		[Address(RVA = "0xA66484", Offset = "0xA66484", VA = "0xA66484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xA66558", Offset = "0xA66558", VA = "0xA66558")]
	private void Start()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xA665D8", Offset = "0xA665D8", VA = "0xA665D8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xA667A0", Offset = "0xA667A0", VA = "0xA667A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xA667A4", Offset = "0xA667A4", VA = "0xA667A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xA66830", Offset = "0xA66830", VA = "0xA66830")]
	public CameraFilterPack_TV_Videoflip()
	{
	}
}
[Token(Token = "0x2000133")]
[AddComponentMenu("Camera Filter Pack/TV/Vignetting")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Vignetting : MonoBehaviour
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material SCMaterial;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D Vignette;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float Vignetting;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float VignettingFull;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float VignettingDirt;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color VignettingColor;

	[Token(Token = "0x17000113")]
	private Material material
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0xA66840", Offset = "0xA66840", VA = "0xA66840")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xA66914", Offset = "0xA66914", VA = "0xA66914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xA66A14", Offset = "0xA66A14", VA = "0xA66A14")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xA66BF4", Offset = "0xA66BF4", VA = "0xA66BF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xA66BF8", Offset = "0xA66BF8", VA = "0xA66BF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xA66C84", Offset = "0xA66C84", VA = "0xA66C84")]
	public CameraFilterPack_TV_Vignetting()
	{
	}
}
[Token(Token = "0x2000134")]
[AddComponentMenu("Camera Filter Pack/TV/Vintage")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_Vintage : MonoBehaviour
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 10f)]
	public float Distortion;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x17000114")]
	private Material material
	{
		[Token(Token = "0x600071C")]
		[Address(RVA = "0xA66CA0", Offset = "0xA66CA0", VA = "0xA66CA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xA66D74", Offset = "0xA66D74", VA = "0xA66D74")]
	private void Start()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xA66DF4", Offset = "0xA66DF4", VA = "0xA66DF4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xA66F74", Offset = "0xA66F74", VA = "0xA66F74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xA66F78", Offset = "0xA66F78", VA = "0xA66F78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xA67004", Offset = "0xA67004", VA = "0xA67004")]
	public CameraFilterPack_TV_Vintage()
	{
	}
}
[Token(Token = "0x2000135")]
[AddComponentMenu("Camera Filter Pack/TV/WideScreenCircle")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_WideScreenCircle : MonoBehaviour
{
	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.8f)]
	public float Size;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0.01f, 0.4f)]
	public float Smooth;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float StretchX;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float StretchY;

	[Token(Token = "0x17000115")]
	private Material material
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0xA68014", Offset = "0xA68014", VA = "0xA68014")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xA680E8", Offset = "0xA680E8", VA = "0xA680E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xA68168", Offset = "0xA68168", VA = "0xA68168")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xA683F0", Offset = "0xA683F0", VA = "0xA683F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xA683F4", Offset = "0xA683F4", VA = "0xA683F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xA68480", Offset = "0xA68480", VA = "0xA68480")]
	public CameraFilterPack_TV_WideScreenCircle()
	{
	}
}
[Token(Token = "0x2000136")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/WideScreenHorizontal")]
public class CameraFilterPack_TV_WideScreenHorizontal : MonoBehaviour
{
	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.8f)]
	public float Size;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0.001f, 0.4f)]
	public float Smooth;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float StretchX;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float StretchY;

	[Token(Token = "0x17000116")]
	private Material material
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0xA6849C", Offset = "0xA6849C", VA = "0xA6849C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xA68570", Offset = "0xA68570", VA = "0xA68570")]
	private void Start()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xA685F0", Offset = "0xA685F0", VA = "0xA685F0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xA68878", Offset = "0xA68878", VA = "0xA68878")]
	private void Update()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xA6887C", Offset = "0xA6887C", VA = "0xA6887C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xA68908", Offset = "0xA68908", VA = "0xA68908")]
	public CameraFilterPack_TV_WideScreenHorizontal()
	{
	}
}
[Token(Token = "0x2000137")]
[AddComponentMenu("Camera Filter Pack/TV/WideScreenHV")]
[ExecuteInEditMode]
public class CameraFilterPack_TV_WideScreenHV : MonoBehaviour
{
	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.8f)]
	public float Size;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0.001f, 0.4f)]
	public float Smooth;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float StretchX;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float StretchY;

	[Token(Token = "0x17000117")]
	private Material material
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0xA68924", Offset = "0xA68924", VA = "0xA68924")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xA689F8", Offset = "0xA689F8", VA = "0xA689F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xA68A78", Offset = "0xA68A78", VA = "0xA68A78")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xA68D00", Offset = "0xA68D00", VA = "0xA68D00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xA68D04", Offset = "0xA68D04", VA = "0xA68D04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xA68D90", Offset = "0xA68D90", VA = "0xA68D90")]
	public CameraFilterPack_TV_WideScreenHV()
	{
	}
}
[Token(Token = "0x2000138")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/TV/WideScreenVertical")]
public class CameraFilterPack_TV_WideScreenVertical : MonoBehaviour
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.8f)]
	public float Size;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0.001f, 0.4f)]
	public float Smooth;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float StretchX;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float StretchY;

	[Token(Token = "0x17000118")]
	private Material material
	{
		[Token(Token = "0x6000734")]
		[Address(RVA = "0xA68DAC", Offset = "0xA68DAC", VA = "0xA68DAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xA68E80", Offset = "0xA68E80", VA = "0xA68E80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xA68F00", Offset = "0xA68F00", VA = "0xA68F00")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xA69188", Offset = "0xA69188", VA = "0xA69188")]
	private void Update()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xA6918C", Offset = "0xA6918C", VA = "0xA6918C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xA69218", Offset = "0xA69218", VA = "0xA69218")]
	public CameraFilterPack_TV_WideScreenVertical()
	{
	}
}
[Token(Token = "0x2000139")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/VHS/Tracking")]
public class CameraFilterPack_VHS_Tracking : MonoBehaviour
{
	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2f)]
	public float Tracking;

	[Token(Token = "0x17000119")]
	private Material material
	{
		[Token(Token = "0x600073A")]
		[Address(RVA = "0xA69234", Offset = "0xA69234", VA = "0xA69234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xA69308", Offset = "0xA69308", VA = "0xA69308")]
	private void Start()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xA69388", Offset = "0xA69388", VA = "0xA69388")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xA69580", Offset = "0xA69580", VA = "0xA69580")]
	private void Update()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xA69584", Offset = "0xA69584", VA = "0xA69584")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xA69610", Offset = "0xA69610", VA = "0xA69610")]
	public CameraFilterPack_VHS_Tracking()
	{
	}
}
[Token(Token = "0x200013A")]
[AddComponentMenu("Camera Filter Pack/Vision/Aura")]
[ExecuteInEditMode]
public class CameraFilterPack_Vision_Aura : MonoBehaviour
{
	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2f)]
	public float Twist;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-4f, 4f)]
	public float Speed;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color Color;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-1f, 2f)]
	public float PosX;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-1f, 2f)]
	public float PosY;

	[Token(Token = "0x1700011A")]
	private Material material
	{
		[Token(Token = "0x6000740")]
		[Address(RVA = "0xA69624", Offset = "0xA69624", VA = "0xA69624")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xA696F8", Offset = "0xA696F8", VA = "0xA696F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xA69778", Offset = "0xA69778", VA = "0xA69778")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xA69A34", Offset = "0xA69A34", VA = "0xA69A34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xA69A38", Offset = "0xA69A38", VA = "0xA69A38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xA69AC4", Offset = "0xA69AC4", VA = "0xA69AC4")]
	public CameraFilterPack_Vision_Aura()
	{
	}
}
[Token(Token = "0x200013B")]
[AddComponentMenu("Camera Filter Pack/Vision/AuraDistortion")]
[ExecuteInEditMode]
public class CameraFilterPack_Vision_AuraDistortion : MonoBehaviour
{
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 2f)]
	public float Twist;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-4f, 4f)]
	public float Speed;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color Color;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(-1f, 2f)]
	public float PosX;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(-1f, 2f)]
	public float PosY;

	[Token(Token = "0x1700011B")]
	private Material material
	{
		[Token(Token = "0x6000746")]
		[Address(RVA = "0xA69AE8", Offset = "0xA69AE8", VA = "0xA69AE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xA69BBC", Offset = "0xA69BBC", VA = "0xA69BBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xA69C3C", Offset = "0xA69C3C", VA = "0xA69C3C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xA69EF8", Offset = "0xA69EF8", VA = "0xA69EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xA69EFC", Offset = "0xA69EFC", VA = "0xA69EFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xA69F88", Offset = "0xA69F88", VA = "0xA69F88")]
	public CameraFilterPack_Vision_AuraDistortion()
	{
	}
}
[Token(Token = "0x200013C")]
[AddComponentMenu("Camera Filter Pack/Vision/Blood")]
[ExecuteInEditMode]
public class CameraFilterPack_Vision_Blood : MonoBehaviour
{
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.01f, 1f)]
	public float HoleSize;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float HoleSmooth;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-2f, 2f)]
	public float Color1;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-2f, 2f)]
	public float Color2;

	[Token(Token = "0x1700011C")]
	private Material material
	{
		[Token(Token = "0x600074C")]
		[Address(RVA = "0xA69FAC", Offset = "0xA69FAC", VA = "0xA69FAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xA6A080", Offset = "0xA6A080", VA = "0xA6A080")]
	private void Start()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xA6A100", Offset = "0xA6A100", VA = "0xA6A100")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xA6A388", Offset = "0xA6A388", VA = "0xA6A388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xA6A38C", Offset = "0xA6A38C", VA = "0xA6A38C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xA6A418", Offset = "0xA6A418", VA = "0xA6A418")]
	public CameraFilterPack_Vision_Blood()
	{
	}
}
[Token(Token = "0x200013D")]
[AddComponentMenu("Camera Filter Pack/Vision/Blood_Fast")]
[ExecuteInEditMode]
public class CameraFilterPack_Vision_Blood_Fast : MonoBehaviour
{
	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.01f, 1f)]
	public float HoleSize;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float HoleSmooth;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-2f, 2f)]
	public float Color1;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-2f, 2f)]
	public float Color2;

	[Token(Token = "0x1700011D")]
	private Material material
	{
		[Token(Token = "0x6000752")]
		[Address(RVA = "0xA6A434", Offset = "0xA6A434", VA = "0xA6A434")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xA6A508", Offset = "0xA6A508", VA = "0xA6A508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xA6A588", Offset = "0xA6A588", VA = "0xA6A588")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xA6A810", Offset = "0xA6A810", VA = "0xA6A810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xA6A814", Offset = "0xA6A814", VA = "0xA6A814")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xA6A8A0", Offset = "0xA6A8A0", VA = "0xA6A8A0")]
	public CameraFilterPack_Vision_Blood_Fast()
	{
	}
}
[Token(Token = "0x200013E")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Crystal")]
public class CameraFilterPack_Vision_Crystal : MonoBehaviour
{
	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-10f, 10f)]
	public float Value;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float X;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float Y;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-1f, 1f)]
	private float Value4;

	[Token(Token = "0x1700011E")]
	private Material material
	{
		[Token(Token = "0x6000758")]
		[Address(RVA = "0xA6A8BC", Offset = "0xA6A8BC", VA = "0xA6A8BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xA6A990", Offset = "0xA6A990", VA = "0xA6A990")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xA6AA10", Offset = "0xA6AA10", VA = "0xA6AA10")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xA6AC98", Offset = "0xA6AC98", VA = "0xA6AC98")]
	private void Update()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xA6AC9C", Offset = "0xA6AC9C", VA = "0xA6AC9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xA6AD28", Offset = "0xA6AD28", VA = "0xA6AD28")]
	public CameraFilterPack_Vision_Crystal()
	{
	}
}
[Token(Token = "0x200013F")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Drost")]
public class CameraFilterPack_Vision_Drost : MonoBehaviour
{
	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.4f)]
	public float Intensity;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x1700011F")]
	private Material material
	{
		[Token(Token = "0x600075E")]
		[Address(RVA = "0xA6AD40", Offset = "0xA6AD40", VA = "0xA6AD40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xA6AE14", Offset = "0xA6AE14", VA = "0xA6AE14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xA6AE94", Offset = "0xA6AE94", VA = "0xA6AE94")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xA6B11C", Offset = "0xA6B11C", VA = "0xA6B11C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xA6B120", Offset = "0xA6B120", VA = "0xA6B120")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xA6B1AC", Offset = "0xA6B1AC", VA = "0xA6B1AC")]
	public CameraFilterPack_Vision_Drost()
	{
	}
}
[Token(Token = "0x2000140")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Hell_Blood")]
public class CameraFilterPack_Vision_Hell_Blood : MonoBehaviour
{
	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Hole_Size;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 0.5f)]
	public float Hole_Smooth;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-2f, 2f)]
	public float Hole_Speed;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-10f, 10f)]
	public float Intensity;

	[Token(Token = "0x17000120")]
	private Material material
	{
		[Token(Token = "0x6000764")]
		[Address(RVA = "0xA6B1C8", Offset = "0xA6B1C8", VA = "0xA6B1C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xA6B29C", Offset = "0xA6B29C", VA = "0xA6B29C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xA6B31C", Offset = "0xA6B31C", VA = "0xA6B31C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xA6B5AC", Offset = "0xA6B5AC", VA = "0xA6B5AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xA6B5B0", Offset = "0xA6B5B0", VA = "0xA6B5B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xA6B63C", Offset = "0xA6B63C", VA = "0xA6B63C")]
	public CameraFilterPack_Vision_Hell_Blood()
	{
	}
}
[Token(Token = "0x2000141")]
[AddComponentMenu("Camera Filter Pack/Vision/Plasma")]
[ExecuteInEditMode]
public class CameraFilterPack_Vision_Plasma : MonoBehaviour
{
	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-2f, 2f)]
	public float Value;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-2f, 2f)]
	public float Value2;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 60f)]
	public float Intensity;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x17000121")]
	private Material material
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0xA6B658", Offset = "0xA6B658", VA = "0xA6B658")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xA6B72C", Offset = "0xA6B72C", VA = "0xA6B72C")]
	private void Start()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xA6B7AC", Offset = "0xA6B7AC", VA = "0xA6B7AC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xA6BA34", Offset = "0xA6BA34", VA = "0xA6BA34")]
	private void Update()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA6BA38", Offset = "0xA6BA38", VA = "0xA6BA38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA6BAC4", Offset = "0xA6BAC4", VA = "0xA6BAC4")]
	public CameraFilterPack_Vision_Plasma()
	{
	}
}
[Token(Token = "0x2000142")]
[AddComponentMenu("Camera Filter Pack/Vision/Psycho")]
[ExecuteInEditMode]
public class CameraFilterPack_Vision_Psycho : MonoBehaviour
{
	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.01f, 1f)]
	public float HoleSize;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(-1f, 1f)]
	public float HoleSmooth;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-2f, 2f)]
	public float Color1;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(-2f, 2f)]
	public float Color2;

	[Token(Token = "0x17000122")]
	private Material material
	{
		[Token(Token = "0x6000770")]
		[Address(RVA = "0xA6BAE0", Offset = "0xA6BAE0", VA = "0xA6BAE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xA6BBB4", Offset = "0xA6BBB4", VA = "0xA6BBB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xA6BC34", Offset = "0xA6BC34", VA = "0xA6BC34")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xA6BEBC", Offset = "0xA6BEBC", VA = "0xA6BEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xA6BEC0", Offset = "0xA6BEC0", VA = "0xA6BEC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xA6BF4C", Offset = "0xA6BF4C", VA = "0xA6BF4C")]
	public CameraFilterPack_Vision_Psycho()
	{
	}
}
[Token(Token = "0x2000143")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Rainbow")]
public class CameraFilterPack_Vision_Rainbow : MonoBehaviour
{
	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 10f)]
	public float Speed;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float PosX;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float PosY;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 5f)]
	public float Colors;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float Vision;

	[Token(Token = "0x17000123")]
	private Material material
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0xA6BF68", Offset = "0xA6BF68", VA = "0xA6BF68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xA6C03C", Offset = "0xA6C03C", VA = "0xA6C03C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xA6C0BC", Offset = "0xA6C0BC", VA = "0xA6C0BC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xA6C374", Offset = "0xA6C374", VA = "0xA6C374")]
	private void Update()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xA6C378", Offset = "0xA6C378", VA = "0xA6C378")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xA6C404", Offset = "0xA6C404", VA = "0xA6C404")]
	public CameraFilterPack_Vision_Rainbow()
	{
	}
}
[Token(Token = "0x2000144")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Tunnel")]
public class CameraFilterPack_Vision_Tunnel : MonoBehaviour
{
	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Value;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Value2;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x17000124")]
	private Material material
	{
		[Token(Token = "0x600077C")]
		[Address(RVA = "0xA6C428", Offset = "0xA6C428", VA = "0xA6C428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xA6C4FC", Offset = "0xA6C4FC", VA = "0xA6C4FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xA6C57C", Offset = "0xA6C57C", VA = "0xA6C57C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xA6C804", Offset = "0xA6C804", VA = "0xA6C804")]
	private void Update()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xA6C808", Offset = "0xA6C808", VA = "0xA6C808")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xA6C894", Offset = "0xA6C894", VA = "0xA6C894")]
	public CameraFilterPack_Vision_Tunnel()
	{
	}
}
[Token(Token = "0x2000145")]
[ExecuteInEditMode]
[AddComponentMenu("Camera Filter Pack/Vision/Warp")]
public class CameraFilterPack_Vision_Warp : MonoBehaviour
{
	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Value;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Value2;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	private float Value3;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x17000125")]
	private Material material
	{
		[Token(Token = "0x6000782")]
		[Address(RVA = "0xA6C8B0", Offset = "0xA6C8B0", VA = "0xA6C8B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xA6C984", Offset = "0xA6C984", VA = "0xA6C984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xA6CA04", Offset = "0xA6CA04", VA = "0xA6CA04")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xA6CC8C", Offset = "0xA6CC8C", VA = "0xA6CC8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xA6CC90", Offset = "0xA6CC90", VA = "0xA6CC90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xA6CD1C", Offset = "0xA6CD1C", VA = "0xA6CD1C")]
	public CameraFilterPack_Vision_Warp()
	{
	}
}
[Token(Token = "0x2000146")]
[AddComponentMenu("Camera Filter Pack/Vision/Warp2")]
[ExecuteInEditMode]
public class CameraFilterPack_Vision_Warp2 : MonoBehaviour
{
	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector4 ScreenResolution;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material SCMaterial;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Value;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float Value2;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 2f)]
	public float Intensity;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	private float Value4;

	[Token(Token = "0x17000126")]
	private Material material
	{
		[Token(Token = "0x6000788")]
		[Address(RVA = "0xA6CD38", Offset = "0xA6CD38", VA = "0xA6CD38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xA6CE0C", Offset = "0xA6CE0C", VA = "0xA6CE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xA6CE8C", Offset = "0xA6CE8C", VA = "0xA6CE8C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xA6D114", Offset = "0xA6D114", VA = "0xA6D114")]
	private void Update()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xA6D118", Offset = "0xA6D118", VA = "0xA6D118")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xA6D1A4", Offset = "0xA6D1A4", VA = "0xA6D1A4")]
	public CameraFilterPack_Vision_Warp2()
	{
	}
}
[Token(Token = "0x2000147")]
public class ControladorLeaderboardsMuseo : MonoBehaviour
{
	[Token(Token = "0x2000148")]
	[CompilerGenerated]
	private sealed class <mostrarLeaderboardsDentroDeUnRato>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorLeaderboardsMuseo <>4__this;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <tiempo>5__2;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000794")]
			[Address(RVA = "0xA6D59C", Offset = "0xA6D59C", VA = "0xA6D59C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000796")]
			[Address(RVA = "0xA6D5E4", Offset = "0xA6D5E4", VA = "0xA6D5E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xA6D254", Offset = "0xA6D254", VA = "0xA6D254")]
		[DebuggerHidden]
		public <mostrarLeaderboardsDentroDeUnRato>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xA6D284", Offset = "0xA6D284", VA = "0xA6D284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xA6D288", Offset = "0xA6D288", VA = "0xA6D288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xA6D5A4", Offset = "0xA6D5A4", VA = "0xA6D5A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderboardMuseo leaderSimu;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LeaderboardMuseo leaderArcade;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xA6D1C0", Offset = "0xA6D1C0", VA = "0xA6D1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xA6D1E0", Offset = "0xA6D1E0", VA = "0xA6D1E0")]
	[IteratorStateMachine(typeof(<mostrarLeaderboardsDentroDeUnRato>d__3))]
	private IEnumerator mostrarLeaderboardsDentroDeUnRato()
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xA6D27C", Offset = "0xA6D27C", VA = "0xA6D27C")]
	public ControladorLeaderboardsMuseo()
	{
	}
}
[Token(Token = "0x2000149")]
public class EscribirLog : MonoBehaviour
{
	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xA6D5EC", Offset = "0xA6D5EC", VA = "0xA6D5EC")]
	public void SetLog(string log)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xA6D674", Offset = "0xA6D674", VA = "0xA6D674")]
	public EscribirLog()
	{
	}
}
[Token(Token = "0x200014A")]
public class AnimacionesBarrera : MonoBehaviour
{
	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string anim_Idle;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string anim_Celebration_1;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string anim_Salto_1;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string anim_Salto_2;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string anim_Golpe_Cabeza;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string anim_Golpe_Pelvis;

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xA6D67C", Offset = "0xA6D67C", VA = "0xA6D67C")]
	public AnimacionesBarrera()
	{
	}
}
[Token(Token = "0x200014B")]
public class BarreraHits : MonoBehaviour
{
	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool soyCabeza;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject jugador;

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xA6D724", Offset = "0xA6D724", VA = "0xA6D724")]
	public BarreraHits()
	{
	}
}
[Token(Token = "0x200014C")]
public class Diana : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	public enum TipoDiana
	{
		[Token(Token = "0x40009E0")]
		small,
		[Token(Token = "0x40009E1")]
		medium,
		[Token(Token = "0x40009E2")]
		big
	}

	[Token(Token = "0x200014E")]
	public enum MultiplicadorPuntos
	{
		[Token(Token = "0x40009E4")]
		x2,
		[Token(Token = "0x40009E5")]
		x3,
		[Token(Token = "0x40009E6")]
		x4
	}

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TipoDiana tipoDiana;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private MultiplicadorPuntos multiplicador;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text textoMultiplicador;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefabDianaRota;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xA6D72C", Offset = "0xA6D72C", VA = "0xA6D72C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xA6D7B4", Offset = "0xA6D7B4", VA = "0xA6D7B4")]
	private void RompermeEnPedazos(Vector3 posicionExplosion)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xA6DA70", Offset = "0xA6DA70", VA = "0xA6DA70")]
	public void ColocarDianaEnPosicionAleatoria()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xA6DE30", Offset = "0xA6DE30", VA = "0xA6DE30")]
	private void InicializarDiana()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xA6E128", Offset = "0xA6E128", VA = "0xA6E128")]
	public Diana()
	{
	}
}
[Token(Token = "0x200014F")]
public class DontGoThroughThings : MonoBehaviour
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LayerMask layerMask;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float skinWidth;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minimumExtent;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float partialExtent;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sqrMinimumExtent;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 previousPosition;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xA6E130", Offset = "0xA6E130", VA = "0xA6E130")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xA6E2B0", Offset = "0xA6E2B0", VA = "0xA6E2B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xA6E3E4", Offset = "0xA6E3E4", VA = "0xA6E3E4")]
	public void ResetPreviousPosition()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xA6E410", Offset = "0xA6E410", VA = "0xA6E410")]
	public DontGoThroughThings()
	{
	}
}
[Token(Token = "0x2000150")]
public class BarreraManager : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	public struct ParametrosBarrera
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 posicion;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Quaternion rotacion;
	}

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Jugadores;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] cabezasJugadores;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool playBarrierIdleAnimationOnNextFixedUpdate;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int genteEnBarrera;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xA6E424", Offset = "0xA6E424", VA = "0xA6E424")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xA6E444", Offset = "0xA6E444", VA = "0xA6E444")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xA6E544", Offset = "0xA6E544", VA = "0xA6E544")]
	public void ColocarBarreraEnPosicion(Vector3 position, Quaternion rotation, int numeroBarreras)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xA6EB6C", Offset = "0xA6EB6C", VA = "0xA6EB6C")]
	public void BarrierCelebration()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xA6EC90", Offset = "0xA6EC90", VA = "0xA6EC90")]
	public void BarrierLosing()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xA6EC94", Offset = "0xA6EC94", VA = "0xA6EC94")]
	public void BarrierJumpReset()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xA6EE78", Offset = "0xA6EE78", VA = "0xA6EE78")]
	public void BarrierJump()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xA6EFF8", Offset = "0xA6EFF8", VA = "0xA6EFF8")]
	public void BarrierChangeHair()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xA6F094", Offset = "0xA6F094", VA = "0xA6F094")]
	public void BarrierChangeHair(int jugadorBarrera, int id)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xA6F13C", Offset = "0xA6F13C", VA = "0xA6F13C")]
	public BarreraManager()
	{
	}
}
[Token(Token = "0x2000152")]
public class PelotaPuntoTiempo : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	public class PointAndTime
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 point;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float time;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool touchGround;

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xA6F704", Offset = "0xA6F704", VA = "0xA6F704")]
		public PointAndTime(Vector3 p, float t)
		{
		}
	}

	[Token(Token = "0x2000154")]
	[CompilerGenerated]
	private sealed class <StopTimed>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeInSeconds;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0xA6F83C", Offset = "0xA6F83C", VA = "0xA6F83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0xA6F884", Offset = "0xA6F884", VA = "0xA6F884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xA6F6DC", Offset = "0xA6F6DC", VA = "0xA6F6DC")]
		[DebuggerHidden]
		public <StopTimed>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xA6F760", Offset = "0xA6F760", VA = "0xA6F760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xA6F764", Offset = "0xA6F764", VA = "0xA6F764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xA6F844", Offset = "0xA6F844", VA = "0xA6F844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PointAndTime pointTime;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float frictionAceleration;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject puntoPaso;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 initBallPosition;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 previousDirection;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float previousInitSpeedMagnitude;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 previousForceApplied;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 previousInitBallPosition;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PointAndTime previousPointAndTime;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float ballRadius;

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xA6F144", Offset = "0xA6F144", VA = "0xA6F144")]
	public void CalculaPuntoYTiempo(Vector3 v_Dir, float magnitud, Vector3 v_Eff)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xA6F608", Offset = "0xA6F608", VA = "0xA6F608")]
	private GameObject DameInstanciaPelota()
	{
		return null;
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xA6F66C", Offset = "0xA6F66C", VA = "0xA6F66C")]
	[IteratorStateMachine(typeof(<StopTimed>d__13))]
	private IEnumerator StopTimed(float timeInSeconds)
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xA6F164", Offset = "0xA6F164", VA = "0xA6F164")]
	private PointAndTime ComputeGoalEnterPointAndTime(Vector3 direction, float fuerzaChute, Vector3 fuerzaEfecto)
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xA6F744", Offset = "0xA6F744", VA = "0xA6F744")]
	private float GetRadius()
	{
		return default(float);
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xA6F750", Offset = "0xA6F750", VA = "0xA6F750")]
	public PelotaPuntoTiempo()
	{
	}
}
[Token(Token = "0x2000155")]
public class PorteroIA : MonoBehaviour
{
	[Token(Token = "0x2000156")]
	private class Quadrant
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float untilHeight;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string topLeftAnim;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string topRightAnim;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string bottomLeftAnim;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string bottomRightAnim;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blockInPercentage;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool endsStanding;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float blockTime;

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xA70B30", Offset = "0xA70B30", VA = "0xA70B30")]
		public Quadrant(float untilH, string topLAnim, string topRAnim, string botLAnim, string botRAnim, float blockPercent, bool endStand, float blockT)
		{
		}
	}

	[Token(Token = "0x2000157")]
	private class QuadrantColumn
	{
		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float untilWidth;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quadrant[] quadrants;

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xA70BF8", Offset = "0xA70BF8", VA = "0xA70BF8")]
		public QuadrantColumn(float untilW, Quadrant[] quads)
		{
		}
	}

	[Token(Token = "0x2000158")]
	private class RowColumnAndMaxMins
	{
		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int row;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int column;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxX;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minX;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxY;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minY;

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xA7087C", Offset = "0xA7087C", VA = "0xA7087C")]
		public RowColumnAndMaxMins()
		{
		}
	}

	[Token(Token = "0x2000159")]
	private enum EEndPosition
	{
		[Token(Token = "0x4000A37")]
		STANDING,
		[Token(Token = "0x4000A38")]
		KNEES,
		[Token(Token = "0x4000A39")]
		LYING_LEFT,
		[Token(Token = "0x4000A3A")]
		LYING_RIGHT
	}

	[Token(Token = "0x200015A")]
	[CompilerGenerated]
	private sealed class <ParaPelotaATiempo>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tiempo;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PorteroIA <>4__this;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0xA70CF4", Offset = "0xA70CF4", VA = "0xA70CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0xA70D3C", Offset = "0xA70D3C", VA = "0xA70D3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xA708DC", Offset = "0xA708DC", VA = "0xA708DC")]
		[DebuggerHidden]
		public <ParaPelotaATiempo>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xA70C38", Offset = "0xA70C38", VA = "0xA70C38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xA70C3C", Offset = "0xA70C3C", VA = "0xA70C3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xA70CFC", Offset = "0xA70CFC", VA = "0xA70CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015B")]
	[CompilerGenerated]
	private sealed class <InicializarCuadrantes>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PorteroIA <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xA71694", Offset = "0xA71694", VA = "0xA71694", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xA716DC", Offset = "0xA716DC", VA = "0xA716DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xA70904", Offset = "0xA70904", VA = "0xA70904")]
		[DebuggerHidden]
		public <InicializarCuadrantes>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xA70D44", Offset = "0xA70D44", VA = "0xA70D44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xA70D48", Offset = "0xA70D48", VA = "0xA70D48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xA7169C", Offset = "0xA7169C", VA = "0xA7169C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015C")]
	[CompilerGenerated]
	private sealed class <InicializarPortero>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PorteroIA <>4__this;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0xA71C74", Offset = "0xA71C74", VA = "0xA71C74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0xA71CBC", Offset = "0xA71CBC", VA = "0xA71CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xA709A0", Offset = "0xA709A0", VA = "0xA709A0")]
		[DebuggerHidden]
		public <InicializarPortero>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xA716E4", Offset = "0xA716E4", VA = "0xA716E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xA716E8", Offset = "0xA716E8", VA = "0xA716E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xA71C7C", Offset = "0xA71C7C", VA = "0xA71C7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PorteroIA instance;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private QuadrantColumn[] quadrantColumns;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EEndPosition endPosition;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float nextBlockTopLeftWeight;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float nextBlockTopRightWeight;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float nextBlockBottomLeftWeight;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float nextBlockBottomRightWeight;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string nextBlockTopLeftAnimation;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string nextBlockTopRightAnimation;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string nextBlockBottomLeftAnimation;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string nextBlockBottomRightAnimation;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float nextQuadrantColumn;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float nextQuadrantRow;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool speedFactorAppliedAfterPreparingBlock;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string idle;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string winAnimIfOtherFall;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string winAnimStandingAndMissVeryHigh;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string winDefaultAnim1;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string winDefaultAnim2;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string loseAnimStanding;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string loseAnimLying;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string loseAnimKnees;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string winMatchEndedAnim;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string loseMatchEndedAnim;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string leftKickBottomAnim;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string rightKickBottomAnim;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string mirrorSuffix;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject objetivoPortero;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool useMirror;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool lerpecitoGiroPortero;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float tiempoInicioLerpecitoPortero;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion rotacionInicial;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Quaternion rotacionParaParar;

	[Token(Token = "0x4000A25")]
	private const float kTiempoGirar = 0.2f;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xA6F88C", Offset = "0xA6F88C", VA = "0xA6F88C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xA6F970", Offset = "0xA6F970", VA = "0xA6F970")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xA6FA0C", Offset = "0xA6FA0C", VA = "0xA6FA0C")]
	public void PreparaLaParada(Vector2 posicion, bool pelotaHaTocadoSuelo)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xA70398", Offset = "0xA70398", VA = "0xA70398")]
	public void EjecutaParadaPreparada()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xA704CC", Offset = "0xA704CC", VA = "0xA704CC")]
	public void BurlaPorFallo()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xA70534", Offset = "0xA70534", VA = "0xA70534")]
	public void BurlaPorGlobo()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xA7059C", Offset = "0xA7059C", VA = "0xA7059C")]
	public void AnimacionPerder()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xA705A0", Offset = "0xA705A0", VA = "0xA705A0")]
	public void AnimacionGanar()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xA6FA14", Offset = "0xA6FA14", VA = "0xA6FA14")]
	private void PrepareBlock(Vector2 position, bool hasTouchedGround)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xA705A4", Offset = "0xA705A4", VA = "0xA705A4")]
	private RowColumnAndMaxMins GetRowAndColumnFromNormalizedPosition(Vector2 position)
	{
		return null;
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xA707B4", Offset = "0xA707B4", VA = "0xA707B4")]
	private float GetBlockTime(Vector2 normalizedPosition)
	{
		return default(float);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xA70884", Offset = "0xA70884", VA = "0xA70884")]
	private float GetBlockTime(int row, int column)
	{
		return default(float);
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xA707F8", Offset = "0xA707F8", VA = "0xA707F8")]
	[IteratorStateMachine(typeof(<ParaPelotaATiempo>d__50))]
	private IEnumerator ParaPelotaATiempo(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xA6F8FC", Offset = "0xA6F8FC", VA = "0xA6F8FC")]
	[IteratorStateMachine(typeof(<InicializarCuadrantes>d__51))]
	private IEnumerator InicializarCuadrantes()
	{
		return null;
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xA7092C", Offset = "0xA7092C", VA = "0xA7092C")]
	[IteratorStateMachine(typeof(<InicializarPortero>d__52))]
	private IEnumerator InicializarPortero()
	{
		return null;
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xA709C8", Offset = "0xA709C8", VA = "0xA709C8")]
	public PorteroIA()
	{
	}
}
[Token(Token = "0x200015D")]
public class DestroyThisTimed : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	[CompilerGenerated]
	private sealed class <DestroyThis>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestroyThisTimed <>4__this;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0xA71E8C", Offset = "0xA71E8C", VA = "0xA71E8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0xA71ED4", Offset = "0xA71ED4", VA = "0xA71ED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xA71D58", Offset = "0xA71D58", VA = "0xA71D58")]
		[DebuggerHidden]
		public <DestroyThis>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xA71D90", Offset = "0xA71D90", VA = "0xA71D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xA71D94", Offset = "0xA71D94", VA = "0xA71D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xA71E94", Offset = "0xA71E94", VA = "0xA71E94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeInSeconds;

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xA71CC4", Offset = "0xA71CC4", VA = "0xA71CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xA71CE4", Offset = "0xA71CE4", VA = "0xA71CE4")]
	[IteratorStateMachine(typeof(<DestroyThis>d__2))]
	private IEnumerator DestroyThis()
	{
		return null;
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xA71D80", Offset = "0xA71D80", VA = "0xA71D80")]
	public DestroyThisTimed()
	{
	}
}
[Token(Token = "0x200015F")]
public class LimbsDummy : MonoBehaviour
{
	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LimbIK limbManoDcha;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LimbIK limbManoIzda;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LimbIK limbPieDcho;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LimbIK limbPieIzdo;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xA71EDC", Offset = "0xA71EDC", VA = "0xA71EDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xA71FC0", Offset = "0xA71FC0", VA = "0xA71FC0")]
	public LimbsDummy()
	{
	}
}
[Token(Token = "0x2000160")]
public class ControladorLluvia : MonoBehaviour
{
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particulasRayo;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light luzEscena;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float intensidadInicialLuz;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float intensidadMaximaLuz;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material materialSkybox;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float exposureInicialSkybox;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float exposureMaximoSkybox;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] clipsLuvia;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float tiempoDelUltimoRayo;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float tiempoRandomEntreRayos;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool haciendoRayo;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool rayoIda;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int ticksSubiendo;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int ticksBajando;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool tocaElTrueno1;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float tFadeRayo;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float intensidadAcutalLuz;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float exposureActualSkybox;

	[Token(Token = "0x4000A5F")]
	private const string exposure = "_Exposure";

	[Token(Token = "0x4000A60")]
	private const string truenoSonido = "TruenoSonido";

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource trueno1;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource trueno2;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xA71FC8", Offset = "0xA71FC8", VA = "0xA71FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xA72174", Offset = "0xA72174", VA = "0xA72174")]
	public void ForzarRayo()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xA722B4", Offset = "0xA722B4", VA = "0xA722B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xA721C4", Offset = "0xA721C4", VA = "0xA721C4")]
	private void PonerRayoEnPosicionAleatoria()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xA7255C", Offset = "0xA7255C", VA = "0xA7255C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xA72638", Offset = "0xA72638", VA = "0xA72638")]
	public ControladorLluvia()
	{
	}
}
[Token(Token = "0x2000161")]
public class spawnerRayos : MonoBehaviour
{
	[Token(Token = "0x2000162")]
	[CompilerGenerated]
	private sealed class <instaciarRayo>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public spawnerRayos <>4__this;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Light <luz>5__2;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <cont>5__3;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0xA72F34", Offset = "0xA72F34", VA = "0xA72F34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0xA72F7C", Offset = "0xA72F7C", VA = "0xA72F7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xA72714", Offset = "0xA72714", VA = "0xA72714")]
		[DebuggerHidden]
		public <instaciarRayo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xA72A38", Offset = "0xA72A38", VA = "0xA72A38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xA72A3C", Offset = "0xA72A3C", VA = "0xA72A3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xA72F3C", Offset = "0xA72F3C", VA = "0xA72F3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000163")]
	[CompilerGenerated]
	private sealed class <DestruirTrueno>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public spawnerRayos <>4__this;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject sonidoRayoInstance;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0xA73080", Offset = "0xA73080", VA = "0xA73080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0xA730C8", Offset = "0xA730C8", VA = "0xA730C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xA727CC", Offset = "0xA727CC", VA = "0xA727CC")]
		[DebuggerHidden]
		public <DestruirTrueno>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xA72F84", Offset = "0xA72F84", VA = "0xA72F84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xA72F88", Offset = "0xA72F88", VA = "0xA72F88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xA73088", Offset = "0xA73088", VA = "0xA73088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000164")]
	[CompilerGenerated]
	private sealed class <Tormenta>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public spawnerRayos <>4__this;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0xA731BC", Offset = "0xA731BC", VA = "0xA731BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0xA73204", Offset = "0xA73204", VA = "0xA73204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xA72868", Offset = "0xA72868", VA = "0xA72868")]
		[DebuggerHidden]
		public <Tormenta>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xA730D0", Offset = "0xA730D0", VA = "0xA730D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xA730D4", Offset = "0xA730D4", VA = "0xA730D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xA731C4", Offset = "0xA731C4", VA = "0xA731C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sonidoRayo;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject sonidoRayoInstance;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip trueno1;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip trueno2;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 randoRange;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject prefabRayo;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform inicioRayo;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform finalRayo;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 areaEfectividad;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float duracionRayo;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int cont;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine storm;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject rayoInstance;

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xA72648", Offset = "0xA72648", VA = "0xA72648")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xA726A0", Offset = "0xA726A0", VA = "0xA726A0")]
	[IteratorStateMachine(typeof(<instaciarRayo>d__14))]
	private IEnumerator instaciarRayo()
	{
		return null;
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xA7273C", Offset = "0xA7273C", VA = "0xA7273C")]
	[IteratorStateMachine(typeof(<DestruirTrueno>d__15))]
	private IEnumerator DestruirTrueno(GameObject sonidoRayoInstance)
	{
		return null;
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xA727F4", Offset = "0xA727F4", VA = "0xA727F4")]
	[IteratorStateMachine(typeof(<Tormenta>d__16))]
	private IEnumerator Tormenta()
	{
		return null;
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xA72890", Offset = "0xA72890", VA = "0xA72890")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xA729B8", Offset = "0xA729B8", VA = "0xA729B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xA72A24", Offset = "0xA72A24", VA = "0xA72A24")]
	public spawnerRayos()
	{
	}
}
[Token(Token = "0x2000165")]
public class ManoLaserNostalgia : MonoBehaviour
{
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int layerMaskUI;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform laser;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool botonApretado;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool sinVR;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine focusCorr;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float distanciaRayo;

	[Token(Token = "0x4000A83")]
	private const int layerSuelo = 11;

	[Token(Token = "0x4000A84")]
	private const int layerUI = 5;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool inGame;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool noApagar;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool clickEnUIUpPendiente;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 auxEscalaLaser;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Ray rayo;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hit;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform pantalla;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool heClicado;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool distanciaTocando;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float trigger;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool triggerSoltado;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool manoDerecha;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private InputDevice deviceI;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private InputDevice deviceD;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float antimonkey;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool triggerUp;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float triggerOld;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private BotonDemo botonDemoOld;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject botonDemoOldGo;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LayerMask layerRaycast;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private WaitForSecondsRealtime esperaRayoIA;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string tagBoton;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine esperaBoton;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float tiempoEspera;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xA7320C", Offset = "0xA7320C", VA = "0xA7320C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA73224", Offset = "0xA73224", VA = "0xA73224")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xA73228", Offset = "0xA73228", VA = "0xA73228")]
	private void Start()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xA73340", Offset = "0xA73340", VA = "0xA73340")]
	private void GetDevice()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xA73370", Offset = "0xA73370", VA = "0xA73370")]
	private void Update()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xA749A0", Offset = "0xA749A0", VA = "0xA749A0")]
	public ManoLaserNostalgia()
	{
	}
}
[Token(Token = "0x2000166")]
public class ControladorNostalgia : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	[CompilerGenerated]
	private sealed class <MainMenu>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0xA753BC", Offset = "0xA753BC", VA = "0xA753BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0xA75404", Offset = "0xA75404", VA = "0xA75404", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xA74C9C", Offset = "0xA74C9C", VA = "0xA74C9C")]
		[DebuggerHidden]
		public <MainMenu>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xA75190", Offset = "0xA75190", VA = "0xA75190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xA75194", Offset = "0xA75194", VA = "0xA75194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xA753C4", Offset = "0xA753C4", VA = "0xA753C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaquinaDemo maquinaDemoSeleccionadaDer;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaquinaDemo maquinaDemoSeleccionadaIzq;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MaquinaDemo maquinaDemoSentado;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ControladorNostalgia instance;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject teleport;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool puedoGirar;

	[Token(Token = "0x4000AA3")]
	private const float coldownGiro = 0.5f;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float ultimaVezQueGire;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float desviacion;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform camara;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xA74A14", Offset = "0xA74A14", VA = "0xA74A14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xA74A6C", Offset = "0xA74A6C", VA = "0xA74A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xA741A8", Offset = "0xA741A8", VA = "0xA741A8")]
	public float GetTrigger()
	{
		return default(float);
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xA74AB8", Offset = "0xA74AB8", VA = "0xA74AB8")]
	public Vector2 GetStick()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xA741CC", Offset = "0xA741CC", VA = "0xA741CC")]
	public void IrAMainMenu()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xA74C3C", Offset = "0xA74C3C", VA = "0xA74C3C")]
	[IteratorStateMachine(typeof(<MainMenu>d__10))]
	public IEnumerator MainMenu()
	{
		return null;
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xA74ADC", Offset = "0xA74ADC", VA = "0xA74ADC")]
	public void RotarZonaDeJuego30Grados(bool derecha)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xA74D6C", Offset = "0xA74D6C", VA = "0xA74D6C")]
	public void RecolocarCamara(Vector3 posicion, Quaternion rotacionDeseada, bool rotar = false)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xA7481C", Offset = "0xA7481C", VA = "0xA7481C")]
	public MaquinaDemo GetMaquinaDemoSeleccionada(bool derecha)
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xA74834", Offset = "0xA74834", VA = "0xA74834")]
	public void SetMaquinaDemoSeleccionada(bool derecha, MaquinaDemo newMaquina)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xA74CC4", Offset = "0xA74CC4", VA = "0xA74CC4")]
	public Transform GetCabeza()
	{
		return null;
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xA748A0", Offset = "0xA748A0", VA = "0xA748A0")]
	public void MoverPlayer(Vector3 pos)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xA74F20", Offset = "0xA74F20", VA = "0xA74F20")]
	public void MirarAMaquina(Transform playerEnMaquina)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xA7517C", Offset = "0xA7517C", VA = "0xA7517C")]
	public ControladorNostalgia()
	{
	}
}
[Token(Token = "0x2000168")]
public class AccionesPlayerNostalgia : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	[CompilerGenerated]
	private sealed class <RecolocarInicio>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AccionesPlayerNostalgia <>4__this;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600082E")]
			[Address(RVA = "0xA75E0C", Offset = "0xA75E0C", VA = "0xA75E0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0xA75E54", Offset = "0xA75E54", VA = "0xA75E54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xA755B4", Offset = "0xA755B4", VA = "0xA755B4")]
		[DebuggerHidden]
		public <RecolocarInicio>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xA759F0", Offset = "0xA759F0", VA = "0xA759F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xA759F4", Offset = "0xA759F4", VA = "0xA759F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xA75E14", Offset = "0xA75E14", VA = "0xA75E14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AccionesPlayerNostalgia instance;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform player;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform manoDerecha;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform manoIzquierda;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform cabeza;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool manoDerechaPuedeHacerTeleport;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool manoIzquierdaPuedeHacerTeleport;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool teleportDerechoSoltado;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool teleportIzquierdoSoltado;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool teleportDerechoPulsado;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool teleportIzquierdoPulsado;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool botonB;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool botonA;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool trigger;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform posPlayerInicio;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Activar botones de quest en recreativas.")]
	public bool botonesDeQuest;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[HideInInspector]
	public bool bloquearMaquina;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool puedoGirar;

	[Token(Token = "0x4000ABB")]
	private const float coldownGiro = 0.5f;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float ultimaVezQueGire;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float desviacion;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xA7540C", Offset = "0xA7540C", VA = "0xA7540C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xA75464", Offset = "0xA75464", VA = "0xA75464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xA75540", Offset = "0xA75540", VA = "0xA75540")]
	[IteratorStateMachine(typeof(<RecolocarInicio>d__19))]
	private IEnumerator RecolocarInicio()
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xA755DC", Offset = "0xA755DC", VA = "0xA755DC")]
	public void RotarZonaDeJuego30Grados(bool derecha)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xA75860", Offset = "0xA75860", VA = "0xA75860")]
	public void RotarZonaDeJuego(Vector3 euler)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xA75724", Offset = "0xA75724", VA = "0xA75724")]
	public void RecolocarCamara(Vector3 posicion, Quaternion rotacionDeseada, bool rotar = false)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xA759D4", Offset = "0xA759D4", VA = "0xA759D4")]
	public AccionesPlayerNostalgia()
	{
	}
}
[Token(Token = "0x200016A")]
public class BotonDemo : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	public enum TipoDeBotonDemo
	{
		[Token(Token = "0x4000ACB")]
		Demo,
		[Token(Token = "0x4000ACC")]
		FullGame
	}

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaquinaDemo maquinaAsociada;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TipoDeBotonDemo tipoDeBoton;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool steam;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool botonDeQuest;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image img;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float tiempoAntiMonkey;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float vel;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float amp;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float t;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xA75E5C", Offset = "0xA75E5C", VA = "0xA75E5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xA763BC", Offset = "0xA763BC", VA = "0xA763BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xA76790", Offset = "0xA76790", VA = "0xA76790")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xA767C8", Offset = "0xA767C8", VA = "0xA767C8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xA74934", Offset = "0xA74934", VA = "0xA74934")]
	public void Apagar()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xA74968", Offset = "0xA74968", VA = "0xA74968")]
	public void Encender()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xA767FC", Offset = "0xA767FC", VA = "0xA767FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xA74860", Offset = "0xA74860", VA = "0xA74860")]
	public void Invocar()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xA768B8", Offset = "0xA768B8", VA = "0xA768B8")]
	public BotonDemo()
	{
	}
}
[Token(Token = "0x200016C")]
public abstract class ControladorInputNostalgia : MonoBehaviour
{
	[Token(Token = "0x600083A")]
	public abstract Vector2 GetStick(bool derecha);

	[Token(Token = "0x600083B")]
	public abstract float GetTrigger(bool derecha);

	[Token(Token = "0x600083C")]
	public abstract bool GetButtonB(bool derecha);

	[Token(Token = "0x600083D")]
	public abstract bool GetButtonA(bool derecha);

	[Token(Token = "0x600083E")]
	public abstract Vector2 GetTeleport2(bool derecha);

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xA768CC", Offset = "0xA768CC", VA = "0xA768CC")]
	protected ControladorInputNostalgia()
	{
	}
}
[Token(Token = "0x200016D")]
public class ControladorInputNostalgiaOculus : ControladorInputNostalgia
{
	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputDevice deviceI;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice deviceD;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float antimonkey;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xA768D4", Offset = "0xA768D4", VA = "0xA768D4")]
	private void GetDevice()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xA76904", Offset = "0xA76904", VA = "0xA76904", Slot = "5")]
	public override float GetTrigger(bool derecha)
	{
		return default(float);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xA7699C", Offset = "0xA7699C", VA = "0xA7699C", Slot = "4")]
	public override Vector2 GetStick(bool derecha)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xA76A68", Offset = "0xA76A68", VA = "0xA76A68", Slot = "6")]
	public override bool GetButtonB(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xA76B00", Offset = "0xA76B00", VA = "0xA76B00", Slot = "7")]
	public override bool GetButtonA(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xA76B98", Offset = "0xA76B98", VA = "0xA76B98", Slot = "8")]
	public override Vector2 GetTeleport2(bool derecha)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xA76BD8", Offset = "0xA76BD8", VA = "0xA76BD8")]
	public ControladorInputNostalgiaOculus()
	{
	}
}
[Token(Token = "0x200016E")]
public class ControladorInputNostalgiaSteam : ControladorInputNostalgia
{
	[Token(Token = "0x6000847")]
	[Address(RVA = "0xA76BE0", Offset = "0xA76BE0", VA = "0xA76BE0", Slot = "5")]
	public override float GetTrigger(bool derecha)
	{
		return default(float);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xA76BE8", Offset = "0xA76BE8", VA = "0xA76BE8", Slot = "4")]
	public override Vector2 GetStick(bool derecha)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xA76C28", Offset = "0xA76C28", VA = "0xA76C28", Slot = "6")]
	public override bool GetButtonB(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xA76C30", Offset = "0xA76C30", VA = "0xA76C30", Slot = "7")]
	public override bool GetButtonA(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xA76C38", Offset = "0xA76C38", VA = "0xA76C38", Slot = "8")]
	public override Vector2 GetTeleport2(bool derecha)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xA76C78", Offset = "0xA76C78", VA = "0xA76C78")]
	public ControladorInputNostalgiaSteam()
	{
	}
}
[Token(Token = "0x200016F")]
public class ControladorMenuNostalgia : MonoBehaviour
{
	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject panelInicio;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool menuActivo;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float tiempoParaCerrar;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xA76C80", Offset = "0xA76C80", VA = "0xA76C80")]
	private void Start()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xA76C84", Offset = "0xA76C84", VA = "0xA76C84")]
	private void Update()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xA76C88", Offset = "0xA76C88", VA = "0xA76C88")]
	public void AbrirYcerrarMenu()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xA76D4C", Offset = "0xA76D4C", VA = "0xA76D4C")]
	public void RecolocarMenu()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xA76E98", Offset = "0xA76E98", VA = "0xA76E98")]
	public void IrA(int num)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xA76EB4", Offset = "0xA76EB4", VA = "0xA76EB4")]
	public ControladorMenuNostalgia()
	{
	}
}
[Token(Token = "0x2000170")]
public class MaquinaDemo : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	public enum TipoMaquinaArcadeDemo
	{
		[Token(Token = "0x4000ADF")]
		MilNovecientos,
		[Token(Token = "0x4000AE0")]
		Dosmil,
		[Token(Token = "0x4000AE1")]
		Bb,
		[Token(Token = "0x4000AE2")]
		Pangman,
		[Token(Token = "0x4000AE3")]
		Tk,
		[Token(Token = "0x4000AE4")]
		Warcade,
		[Token(Token = "0x4000AE5")]
		FinalSoccer,
		[Token(Token = "0x4000AE6")]
		echowars
	}

	[Token(Token = "0x2000172")]
	[CompilerGenerated]
	private sealed class <PonerPantallaComprar>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaquinaDemo <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0xA7734C", Offset = "0xA7734C", VA = "0xA7734C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0xA77394", Offset = "0xA77394", VA = "0xA77394", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xA7710C", Offset = "0xA7710C", VA = "0xA7710C")]
		[DebuggerHidden]
		public <PonerPantallaComprar>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xA77288", Offset = "0xA77288", VA = "0xA77288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xA7728C", Offset = "0xA7728C", VA = "0xA7728C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xA77354", Offset = "0xA77354", VA = "0xA77354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TipoMaquinaArcadeDemo tipoDeMaquina;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool seleccionada;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] meshes;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Material> materialesInicio;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material materialFantasma;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform posicionPlayer;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject canvasDemo;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 posPersonajeOld;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider col;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Collider[] cols;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine corPonerPantallaComprar;

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xA76EBC", Offset = "0xA76EBC", VA = "0xA76EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xA741EC", Offset = "0xA741EC", VA = "0xA741EC")]
	public void SeleccionarDeseleccionar(bool on)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xA74468", Offset = "0xA74468", VA = "0xA74468")]
	public void SentarseLevantarse(bool sentarte)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xA77098", Offset = "0xA77098", VA = "0xA77098")]
	[IteratorStateMachine(typeof(<PonerPantallaComprar>d__15))]
	private IEnumerator PonerPantallaComprar()
	{
		return null;
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xA76460", Offset = "0xA76460", VA = "0xA76460")]
	public void Demo(BotonDemo.TipoDeBotonDemo tipoDeBoton)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xA77134", Offset = "0xA77134", VA = "0xA77134")]
	private void DebugMs(Message<string> msg)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xA76458", Offset = "0xA76458", VA = "0xA76458")]
	public void DemoSteam()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xA771EC", Offset = "0xA771EC", VA = "0xA771EC")]
	public void QuitarPantallaComprar()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xA7720C", Offset = "0xA7720C", VA = "0xA7720C")]
	public MaquinaDemo()
	{
	}
}
[Token(Token = "0x2000173")]
public class PlayerNostalgia : MonoBehaviour
{
	[Token(Token = "0x2000174")]
	[CompilerGenerated]
	private sealed class <ASW>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0xA77898", Offset = "0xA77898", VA = "0xA77898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xA778E0", Offset = "0xA778E0", VA = "0xA778E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xA774E0", Offset = "0xA774E0", VA = "0xA774E0")]
		[DebuggerHidden]
		public <ASW>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xA777F4", Offset = "0xA777F4", VA = "0xA777F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xA777F8", Offset = "0xA777F8", VA = "0xA777F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xA778A0", Offset = "0xA778A0", VA = "0xA778A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControladorInputNostalgia controladorInput;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform offsetDer;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform offsetIzq;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform manoDer;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform manoIzq;

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xA7739C", Offset = "0xA7739C", VA = "0xA7739C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xA773A0", Offset = "0xA773A0", VA = "0xA773A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xA77480", Offset = "0xA77480", VA = "0xA77480")]
	[IteratorStateMachine(typeof(<ASW>d__7))]
	private IEnumerator ASW()
	{
		return null;
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xA77508", Offset = "0xA77508", VA = "0xA77508")]
	private void Update()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xA777EC", Offset = "0xA777EC", VA = "0xA777EC")]
	public PlayerNostalgia()
	{
	}
}
[Token(Token = "0x2000175")]
public class CartelNoTeleportInDemo : MonoBehaviour
{
	[Token(Token = "0x600086D")]
	[Address(RVA = "0xA778E8", Offset = "0xA778E8", VA = "0xA778E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xA77954", Offset = "0xA77954", VA = "0xA77954")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xA779F8", Offset = "0xA779F8", VA = "0xA779F8")]
	public CartelNoTeleportInDemo()
	{
	}
}
[Token(Token = "0x2000176")]
public class InhibidorManoTeleport : MonoBehaviour
{
	[Token(Token = "0x2000177")]
	public enum MiManita
	{
		[Token(Token = "0x4000AF4")]
		dcha,
		[Token(Token = "0x4000AF5")]
		izda
	}

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MiManita miManita;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider miCollider;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xA77A00", Offset = "0xA77A00", VA = "0xA77A00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xA77A58", Offset = "0xA77A58", VA = "0xA77A58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xA77A78", Offset = "0xA77A78", VA = "0xA77A78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xA77AF8", Offset = "0xA77AF8", VA = "0xA77AF8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xA77AFC", Offset = "0xA77AFC", VA = "0xA77AFC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xA77B84", Offset = "0xA77B84", VA = "0xA77B84")]
	public InhibidorManoTeleport()
	{
	}
}
[Token(Token = "0x2000178")]
public class ControlPirateoOculus : MonoBehaviour
{
	[Token(Token = "0x6000876")]
	[Address(RVA = "0xA77B8C", Offset = "0xA77B8C", VA = "0xA77B8C")]
	public ControlPirateoOculus()
	{
	}
}
[Token(Token = "0x2000179")]
public class IAPManager : MonoBehaviour
{
	[Token(Token = "0x4000AF6")]
	private const string CONSUMABLE_1 = "FinalSoccerPRO";

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currency;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string price;

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xA77B94", Offset = "0xA77B94", VA = "0xA77B94")]
	public void GetPrecio()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xA77C00", Offset = "0xA77C00", VA = "0xA77C00")]
	public void GetProductosComprados()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xA77BFC", Offset = "0xA77BFC", VA = "0xA77BFC")]
	public void FetchProductPrices()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xA77D20", Offset = "0xA77D20", VA = "0xA77D20")]
	private void GetProductsBySKUCallback(Message<ProductList> msg)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xA77C74", Offset = "0xA77C74", VA = "0xA77C74")]
	public void FetchPurchasedProducts()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xA77F6C", Offset = "0xA77F6C", VA = "0xA77F6C")]
	private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xA783AC", Offset = "0xA783AC", VA = "0xA783AC")]
	public void BuyGame()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xA783B0", Offset = "0xA783B0", VA = "0xA783B0")]
	private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xA7847C", Offset = "0xA7847C", VA = "0xA7847C")]
	private void Salir()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xA784F8", Offset = "0xA784F8", VA = "0xA784F8")]
	public IAPManager()
	{
	}
}
[Token(Token = "0x200017A")]
public class OculusNetworkManager : LogrosRecords
{
	[Token(Token = "0x6000881")]
	[Address(RVA = "0xA78560", Offset = "0xA78560", VA = "0xA78560")]
	private void Start()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xA785CC", Offset = "0xA785CC", VA = "0xA785CC", Slot = "17")]
	public override void ComprobarYDarLogroPlatino()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xA7860C", Offset = "0xA7860C", VA = "0xA7860C", Slot = "15")]
	public override string DameMiNombre()
	{
		return null;
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xA7864C", Offset = "0xA7864C", VA = "0xA7864C", Slot = "8")]
	public override void GuardarLogros()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xA7868C", Offset = "0xA7868C", VA = "0xA7868C", Slot = "9")]
	public override void InicializarLogros()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xA786CC", Offset = "0xA786CC", VA = "0xA786CC", Slot = "10")]
	public override void InicializarTablas(string[] tablas)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xA7870C", Offset = "0xA7870C", VA = "0xA7870C", Slot = "11")]
	public override void InicializarTablas(List<InfoTabla> tablas)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xA7874C", Offset = "0xA7874C", VA = "0xA7874C", Slot = "14")]
	public override void MarcarLogroCompletado(string idLogro)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xA7878C", Offset = "0xA7878C", VA = "0xA7878C", Slot = "16")]
	public override void MostrarTienda()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xA787CC", Offset = "0xA787CC", VA = "0xA787CC", Slot = "12")]
	public override void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xA7880C", Offset = "0xA7880C", VA = "0xA7880C", Slot = "13")]
	public override void SubirRecord(string tabla, int record)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xA7884C", Offset = "0xA7884C", VA = "0xA7884C")]
	public OculusNetworkManager()
	{
	}
}
[Token(Token = "0x200017B")]
public class ponerversion : MonoBehaviour
{
	[Token(Token = "0x600088D")]
	[Address(RVA = "0xA78854", Offset = "0xA78854", VA = "0xA78854")]
	private void Start()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xA788D4", Offset = "0xA788D4", VA = "0xA788D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xA788D8", Offset = "0xA788D8", VA = "0xA788D8")]
	public ponerversion()
	{
	}
}
[Token(Token = "0x200017C")]
public class PACustomBillboardGenerator : PABillboardParticle, PAICustomParticleGenerator
{
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<PACustomParticle> particles;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	[SerializeField]
	private UnityEngine.Mesh particleMesh;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2[] particleUVs;

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xA788E0", Offset = "0xA788E0", VA = "0xA788E0", Slot = "7")]
	protected override void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xA788E4", Offset = "0xA788E4", VA = "0xA788E4", Slot = "8")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xA7892C", Offset = "0xA7892C", VA = "0xA7892C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xA789EC", Offset = "0xA789EC", VA = "0xA789EC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xA78B70", Offset = "0xA78B70", VA = "0xA78B70", Slot = "15")]
	[ContextMenu("Apply Particles")]
	public void ApplyParticles()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xA78D74", Offset = "0xA78D74", VA = "0xA78D74")]
	private void SetOriginDirection(int particleIndex, Vector3 direction)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xA78F0C", Offset = "0xA78F0C", VA = "0xA78F0C")]
	private void SetSpeed(int particleIndex, float speed)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xA78F5C", Offset = "0xA78F5C", VA = "0xA78F5C")]
	private void SetSpinSpeed(int particleIndex, float spinSpeed)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xA78EB8", Offset = "0xA78EB8", VA = "0xA78EB8")]
	private void SetColor(int particleIndex, Color color)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xA78FAC", Offset = "0xA78FAC", VA = "0xA78FAC")]
	private void SetUV(int particleIndex, Rect uv)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xA78DCC", Offset = "0xA78DCC", VA = "0xA78DCC")]
	private void SetSize(int particleIndex, float size)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xA79164", Offset = "0xA79164", VA = "0xA79164")]
	private void SetIndex(int particleIndex, float normalizedIndex)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xA791B4", Offset = "0xA791B4", VA = "0xA791B4")]
	public PACustomBillboardGenerator()
	{
	}
}
[Token(Token = "0x200017E")]
public interface PAICustomParticleGenerator
{
	[Token(Token = "0x60008A0")]
	void ApplyParticles();
}
[Serializable]
[Token(Token = "0x200017F")]
public class PACustomParticle
{
	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 originDirection;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float size;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spinSpeed;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect uv;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xA7A2D0", Offset = "0xA7A2D0", VA = "0xA7A2D0")]
	public void SetDefaultValuesIfUninitialized()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xA7A40C", Offset = "0xA7A40C", VA = "0xA7A40C")]
	public PACustomParticle()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xA7A4B8", Offset = "0xA7A4B8", VA = "0xA7A4B8")]
	public PACustomParticle(Vector3 originDirection, Color color, float size, float speed, float spinSpeed, Rect uv)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xA7A5A4", Offset = "0xA7A5A4", VA = "0xA7A5A4")]
	public PACustomParticle(Vector3 originDirection, Color color, float size = 1f, float speed = 0f, float spinSpeed = 0f)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xA7A694", Offset = "0xA7A694", VA = "0xA7A694")]
	public PACustomParticle(Vector3 originDirection)
	{
	}
}
[Token(Token = "0x2000180")]
public class PACustomMeshParticleGenerator : PAMeshParticle, PAICustomParticleGenerator
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<PACustomMeshParticle> particles;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xA7A758", Offset = "0xA7A758", VA = "0xA7A758")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xA7A830", Offset = "0xA7A830", VA = "0xA7A830")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xA7A9B8", Offset = "0xA7A9B8", VA = "0xA7A9B8", Slot = "7")]
	protected override void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xA7A9BC", Offset = "0xA7A9BC", VA = "0xA7A9BC", Slot = "8")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xA7AA04", Offset = "0xA7AA04", VA = "0xA7AA04", Slot = "15")]
	[ContextMenu("Apply Particles")]
	public void ApplyParticles()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xA7B738", Offset = "0xA7B738", VA = "0xA7B738")]
	public PACustomMeshParticleGenerator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000182")]
public class PACustomMeshParticle : PACustomParticle
{
	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 spinAxis;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Mesh mesh;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xA7B7D4", Offset = "0xA7B7D4", VA = "0xA7B7D4")]
	public PACustomMeshParticle()
	{
	}
}
[Token(Token = "0x2000183")]
public class PABillboardParticle : PAParticleMeshGenerator
{
	[Token(Token = "0x4000B09")]
	private const int MAX_PARTICLE_COUNT = 16250;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Vector2[] quadUVs;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static readonly Vector2[] quadOffsets;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xA7B7D8", Offset = "0xA7B7D8", VA = "0xA7B7D8", Slot = "4")]
	public override int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xA7B7E0", Offset = "0xA7B7E0", VA = "0xA7B7E0", Slot = "8")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xA7BC18", Offset = "0xA7BC18", VA = "0xA7BC18", Slot = "9")]
	protected override void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xA7BDB4", Offset = "0xA7BDB4", VA = "0xA7BDB4", Slot = "12")]
	protected override void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xA7BF2C", Offset = "0xA7BF2C", VA = "0xA7BF2C", Slot = "11")]
	protected override void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xA7C020", Offset = "0xA7C020", VA = "0xA7C020", Slot = "10")]
	protected override void UpdateSurface(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xA7C24C", Offset = "0xA7C24C", VA = "0xA7C24C", Slot = "14")]
	protected override void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xA7C338", Offset = "0xA7C338", VA = "0xA7C338", Slot = "13")]
	protected override void UpdateIndicies()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xA7C3F4", Offset = "0xA7C3F4", VA = "0xA7C3F4")]
	public PABillboardParticle()
	{
	}
}
[Token(Token = "0x2000184")]
public class PAMeshParticle : PAParticleMeshGenerator
{
	[Token(Token = "0x4000B0C")]
	private const int MAX_VERT_COUNT = 65536;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public UnityEngine.Mesh inputMesh;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xA7C534", Offset = "0xA7C534", VA = "0xA7C534", Slot = "4")]
	public override int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xA7C5DC", Offset = "0xA7C5DC", VA = "0xA7C5DC", Slot = "5")]
	public override float GetParticleBaseSize()
	{
		return default(float);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xA7C714", Offset = "0xA7C714", VA = "0xA7C714", Slot = "6")]
	public override void UpdateMesh(UnityEngine.Mesh mesh, PAParticleField settings)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xA7C808", Offset = "0xA7C808", VA = "0xA7C808", Slot = "8")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xA7C8D4", Offset = "0xA7C8D4", VA = "0xA7C8D4", Slot = "9")]
	protected override void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xA7CAA4", Offset = "0xA7CAA4", VA = "0xA7CAA4", Slot = "12")]
	protected override void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xA7CC44", Offset = "0xA7CC44", VA = "0xA7CC44", Slot = "10")]
	protected override void UpdateSurface(PAParticleField settings, int startAt = 0)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xA7D048", Offset = "0xA7D048", VA = "0xA7D048", Slot = "14")]
	protected override void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xA7D16C", Offset = "0xA7D16C", VA = "0xA7D16C", Slot = "11")]
	protected override void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xA7B470", Offset = "0xA7B470", VA = "0xA7B470")]
	public static float Vector3ToFloat(Vector3 c)
	{
		return default(float);
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xA7B740", Offset = "0xA7B740", VA = "0xA7B740")]
	public PAMeshParticle()
	{
	}
}
[Token(Token = "0x2000185")]
public class PAPFHelper
{
	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInitialized;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int _IsUnserialized;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int _Editor;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int _UserFacing;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int _EdgeAlpha;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int _EdgeScale;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int _ParticleSize;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int _FieldSize;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int _Speed;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int _SpinSpeed;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int _Force;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int _SpeedScale;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int _UOffset;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int _EdgeThreshold;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int _InverseEdgeThreshold;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int _FaceDirection;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int _UpDirection;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int _ParticleCount;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int _CountMask;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int _TotalTime;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int _DeltaSpeed;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int _DeltaForce;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int _DeltaPosition;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int _NearFadeDistance;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int _NearFadeOffset;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[] _ExclusionMatrix;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int[] _ExclusionThreshold;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int[] _InverseExclusionThreshold;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int _TurbulenceOffset;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int _TurbulenceFrequency;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int _TurbulenceScale;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int _TurbulenceDeltaOffset;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int _MainTex;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static int _Color;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int _CutOff;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static int _Softness;

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xA7D39C", Offset = "0xA7D39C", VA = "0xA7D39C")]
	public static void GetPropertyIDs()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xA7DC4C", Offset = "0xA7DC4C", VA = "0xA7DC4C")]
	public PAPFHelper()
	{
	}
}
[Token(Token = "0x2000186")]
public class PAParticleMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000187")]
	public static class RandomWrapper
	{
		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_Seed;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static UnityEngine.Random.State cachedState;

		[Token(Token = "0x17000141")]
		public static int seed
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0xA7E398", Offset = "0xA7E398", VA = "0xA7E398")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0xA7DF08", Offset = "0xA7DF08", VA = "0xA7DF08")]
			set
			{
			}
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xA7DE70", Offset = "0xA7DE70", VA = "0xA7DE70")]
		public static void CacheState()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xA7DF70", Offset = "0xA7DF70", VA = "0xA7DF70")]
		public static void RestoreState()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xA7DEE8", Offset = "0xA7DEE8", VA = "0xA7DEE8")]
		public static void SetState(int seed)
		{
		}
	}

	[Token(Token = "0x4000B32")]
	private const int DATA_STRUCTURE_VERSION = 2;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	protected Vector3[] verts;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	protected Vector3[] normals;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	protected Vector4[] tangents;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	protected Vector2[] uv0;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	protected Vector2[] uv1;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	protected Color[] colors;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	protected int[] triangles;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private int dataStructureVersion;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xA7DC54", Offset = "0xA7DC54", VA = "0xA7DC54")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xA7DE68", Offset = "0xA7DE68", VA = "0xA7DE68")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xA7DE6C", Offset = "0xA7DE6C", VA = "0xA7DE6C")]
	protected void CacheSeed()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xA7DEC4", Offset = "0xA7DEC4", VA = "0xA7DEC4")]
	private void SetSeed(int seed)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xA7BD54", Offset = "0xA7BD54", VA = "0xA7BD54")]
	protected float GetRandomAndIncrement(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xA7DF6C", Offset = "0xA7DF6C", VA = "0xA7DF6C")]
	protected void ResetSeed()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xA7DFC0", Offset = "0xA7DFC0", VA = "0xA7DFC0", Slot = "4")]
	public virtual int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xA7C70C", Offset = "0xA7C70C", VA = "0xA7C70C", Slot = "5")]
	public virtual float GetParticleBaseSize()
	{
		return default(float);
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xA7BD28", Offset = "0xA7BD28", VA = "0xA7BD28")]
	protected void SkipRandomCalls(int callsPerParticle, int count)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xA7C7D0", Offset = "0xA7C7D0", VA = "0xA7C7D0", Slot = "6")]
	public virtual void UpdateMesh(UnityEngine.Mesh mesh, PAParticleField settings)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xA7DFC8", Offset = "0xA7DFC8", VA = "0xA7DFC8", Slot = "7")]
	protected virtual void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xA7B69C", Offset = "0xA7B69C", VA = "0xA7B69C")]
	protected void FillMesh(UnityEngine.Mesh mesh)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xA7B854", Offset = "0xA7B854", VA = "0xA7B854")]
	public int GetClampedParticleCount(int count)
	{
		return default(int);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xA7E304", Offset = "0xA7E304", VA = "0xA7E304", Slot = "8")]
	protected virtual int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xA7B87C", Offset = "0xA7B87C", VA = "0xA7B87C")]
	protected void SetArraySizes(int vertCount, int triCount)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xA7E30C", Offset = "0xA7E30C", VA = "0xA7E30C", Slot = "9")]
	protected virtual void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xA7E310", Offset = "0xA7E310", VA = "0xA7E310", Slot = "10")]
	protected virtual void UpdateSurface(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xA7E314", Offset = "0xA7E314", VA = "0xA7E314", Slot = "11")]
	protected virtual void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xA7E318", Offset = "0xA7E318", VA = "0xA7E318", Slot = "12")]
	protected virtual void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xA7E31C", Offset = "0xA7E31C", VA = "0xA7E31C", Slot = "13")]
	protected virtual void UpdateIndicies()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xA7E320", Offset = "0xA7E320", VA = "0xA7E320", Slot = "14")]
	protected virtual void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xA7DD08", Offset = "0xA7DD08", VA = "0xA7DD08")]
	public void ClearCache()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xA7E324", Offset = "0xA7E324", VA = "0xA7E324")]
	public void CheckDataStructureVersion()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xA7C3FC", Offset = "0xA7C3FC", VA = "0xA7C3FC")]
	public PAParticleMeshGenerator()
	{
	}
}
[Token(Token = "0x2000188")]
[ExecuteInEditMode]
public class PAExclusionZone : MonoBehaviour
{
	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PAExclusionZone> exclusionZones;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask affectsLayers;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 edgeThreshold;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool important;

	[Token(Token = "0x17000142")]
	private Bounds bounds
	{
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xA7E6E8", Offset = "0xA7E6E8", VA = "0xA7E6E8")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xA7E3E0", Offset = "0xA7E3E0", VA = "0xA7E3E0")]
	public static void RegisterZone(PAExclusionZone zone)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xA7E554", Offset = "0xA7E554", VA = "0xA7E554")]
	public static void UnregisterZone(PAExclusionZone zone)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xA7E6DC", Offset = "0xA7E6DC", VA = "0xA7E6DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xA7E6E0", Offset = "0xA7E6E0", VA = "0xA7E6E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xA7E6E4", Offset = "0xA7E6E4", VA = "0xA7E6E4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xA7EA4C", Offset = "0xA7EA4C", VA = "0xA7EA4C")]
	private static Vector3 ClosestPointOnBounds(Bounds bounds, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xA7EB58", Offset = "0xA7EB58", VA = "0xA7EB58")]
	public static bool GetExclusionZones(ref PAExclusionZone[] zones, Vector3 position, Bounds checkBounds, int layer)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xA7EF9C", Offset = "0xA7EF9C", VA = "0xA7EF9C")]
	public static PAExclusionZone Create(string name)
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xA7F018", Offset = "0xA7F018", VA = "0xA7F018")]
	public PAExclusionZone()
	{
	}
}
[Token(Token = "0x200018A")]
[RequireComponent(typeof(MeshRenderer))]
[ExecuteInEditMode]
public class PAParticleField : MonoBehaviour
{
	[Token(Token = "0x200018B")]
	public enum ParticleType
	{
		[Token(Token = "0x4000B8F")]
		Billboard,
		[Token(Token = "0x4000B90")]
		Mesh,
		[Token(Token = "0x4000B91")]
		Custom
	}

	[Token(Token = "0x200018C")]
	public enum SimulationSpace
	{
		[Token(Token = "0x4000B93")]
		World,
		[Token(Token = "0x4000B94")]
		Local,
		[Token(Token = "0x4000B95")]
		LocalWithDelta
	}

	[Token(Token = "0x200018D")]
	public enum Shape
	{
		[Token(Token = "0x4000B97")]
		Cube,
		[Token(Token = "0x4000B98")]
		Sphere,
		[Token(Token = "0x4000B99")]
		Cylinder
	}

	[Token(Token = "0x200018E")]
	public enum EdgeMode
	{
		[Token(Token = "0x4000B9B")]
		Alpha,
		[Token(Token = "0x4000B9C")]
		Scale,
		[Token(Token = "0x4000B9D")]
		Both
	}

	[Token(Token = "0x200018F")]
	public enum MaterialType
	{
		[Token(Token = "0x4000B9F")]
		Transparent,
		[Token(Token = "0x4000BA0")]
		TransparentLit,
		[Token(Token = "0x4000BA1")]
		Additive,
		[Token(Token = "0x4000BA2")]
		AdditiveLit,
		[Token(Token = "0x4000BA3")]
		CutOff,
		[Token(Token = "0x4000BA4")]
		CutOffLit,
		[Token(Token = "0x4000BA5")]
		Custom,
		[Token(Token = "0x4000BA6")]
		MeshDefault,
		[Token(Token = "0x4000BA7")]
		MeshUnlit
	}

	[Token(Token = "0x2000190")]
	public enum TextureType
	{
		[Token(Token = "0x4000BA9")]
		Simple,
		[Token(Token = "0x4000BAA")]
		SpriteGrid,
		[Token(Token = "0x4000BAB")]
		AnimatedRows
	}

	[Token(Token = "0x2000191")]
	public enum SoftParticleType
	{
		[Token(Token = "0x4000BAD")]
		None,
		[Token(Token = "0x4000BAE")]
		NearClipOnly,
		[Token(Token = "0x4000BAF")]
		NearClipAndCameraDepth
	}

	[Token(Token = "0x2000192")]
	public enum TurbulenceType
	{
		[Token(Token = "0x4000BB1")]
		None,
		[Token(Token = "0x4000BB2")]
		Sine
	}

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] builtinShaderNames;

	[Token(Token = "0x4000B44")]
	private const int MAX_PARTICLE_COUNT = 16250;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clearCacheInBuilds;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isOpenGL;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int mSeed;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleType mGeneratorType;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEngine.Mesh mInputMesh;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int mParticleCount;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float mParticleCountMask;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 mFieldSize;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 mEdgeThreshold;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EdgeMode mEdgeMode;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private SimulationSpace mSimulationSpace;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Shape mShape;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool mUseExclusionZones;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform mExclusionAnchorOverride;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Vector2 mParticleSize;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float mSpeed;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private Vector3 mSpeedMask;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Color mColor;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Vector3 mForce;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private bool mCustomFacingDirection;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Vector3 mFacingDirection;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private bool mCustomUpDirection;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Vector3 mUpDirection;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private bool mStretchedBillboard;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float mSpeedScaleMultiplier;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private bool mSpin;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float mSpinSpeed;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float mMinSpinSpeed;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private bool mCustomRotationAxis;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private Vector3 mRotationAxis;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private SoftParticleType mSoftParticles;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private float mNearFadeDistance;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private float mNearFadeOffset;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float mSoftness;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TurbulenceType mTurbulenceType;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private float mTurbulenceFrequency;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private float mTurbulenceAmplitude;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private Vector3 mTurbulenceScale;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Vector3 mTurbulenceOffsetSpeed;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Gradient mColorVariation;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private float mMinimumSize;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private float mMinimumSpeed;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private MaterialType mMaterialType;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Shader mShader;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Texture2D mTexture;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Vector2 mPivotOffset;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private TextureType mTextureType;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[SerializeField]
	private int mSpriteColumns;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private int mSpriteRows;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[SerializeField]
	private float mFramerate;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private float mCutOff;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[SerializeField]
	private bool mReceiveShadows;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
	[SerializeField]
	private bool mCastShadows;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private UnityEngine.Mesh particleMesh;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private PAParticleMeshGenerator m_MeshGenerator;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	public Material material;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Material renderingMaterial;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float time;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 speedTime;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Vector3 forceTime;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float spinTime;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Vector3 turbulenceOffsetTime;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float frameTime;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Vector3 position;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Vector3 deltaPosition;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Vector3 scale;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	private bool foundExclusionZones;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private PAExclusionZone[] zones;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private Material temporarySerializableMaterial;

	[Token(Token = "0x17000143")]
	public int seed
	{
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xA7F128", Offset = "0xA7F128", VA = "0xA7F128")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xA7F130", Offset = "0xA7F130", VA = "0xA7F130")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public ParticleType generatorType
	{
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xA7F150", Offset = "0xA7F150", VA = "0xA7F150")]
		get
		{
			return default(ParticleType);
		}
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xA7A810", Offset = "0xA7A810", VA = "0xA7A810")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public int particleCount
	{
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xA7F158", Offset = "0xA7F158", VA = "0xA7F158")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xA7F160", Offset = "0xA7F160", VA = "0xA7F160")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public float particleCountMask
	{
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xA7F31C", Offset = "0xA7F31C", VA = "0xA7F31C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xA7F324", Offset = "0xA7F324", VA = "0xA7F324")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public Vector3 fieldSize
	{
		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xA7F354", Offset = "0xA7F354", VA = "0xA7F354")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xA7F360", Offset = "0xA7F360", VA = "0xA7F360")]
		set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public Vector3 edgeThreshold
	{
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xA7F3AC", Offset = "0xA7F3AC", VA = "0xA7F3AC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xA7F3B8", Offset = "0xA7F3B8", VA = "0xA7F3B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public SimulationSpace simulationSpace
	{
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xA7F430", Offset = "0xA7F430", VA = "0xA7F430")]
		get
		{
			return default(SimulationSpace);
		}
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xA7F438", Offset = "0xA7F438", VA = "0xA7F438")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public Shape shape
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xA7F454", Offset = "0xA7F454", VA = "0xA7F454")]
		get
		{
			return default(Shape);
		}
		[Token(Token = "0x6000900")]
		[Address(RVA = "0xA7F45C", Offset = "0xA7F45C", VA = "0xA7F45C")]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public EdgeMode edgeMode
	{
		[Token(Token = "0x6000901")]
		[Address(RVA = "0xA7F478", Offset = "0xA7F478", VA = "0xA7F478")]
		get
		{
			return default(EdgeMode);
		}
		[Token(Token = "0x6000902")]
		[Address(RVA = "0xA7F480", Offset = "0xA7F480", VA = "0xA7F480")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public bool useExclusionZones
	{
		[Token(Token = "0x6000903")]
		[Address(RVA = "0xA7F49C", Offset = "0xA7F49C", VA = "0xA7F49C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000904")]
		[Address(RVA = "0xA7F4A4", Offset = "0xA7F4A4", VA = "0xA7F4A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public Transform exclusionAnchorOverride
	{
		[Token(Token = "0x6000905")]
		[Address(RVA = "0xA7F4C4", Offset = "0xA7F4C4", VA = "0xA7F4C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000906")]
		[Address(RVA = "0xA7F4CC", Offset = "0xA7F4CC", VA = "0xA7F4CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public Color color
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0xA7F55C", Offset = "0xA7F55C", VA = "0xA7F55C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000908")]
		[Address(RVA = "0xA7F568", Offset = "0xA7F568", VA = "0xA7F568")]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public float alpha
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0xA7F5C0", Offset = "0xA7F5C0", VA = "0xA7F5C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600090A")]
		[Address(RVA = "0xA7F5C8", Offset = "0xA7F5C8", VA = "0xA7F5C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public float speed
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xA7F5E8", Offset = "0xA7F5E8", VA = "0xA7F5E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xA7F5F0", Offset = "0xA7F5F0", VA = "0xA7F5F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public Vector3 speedMask
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0xA7F60C", Offset = "0xA7F60C", VA = "0xA7F60C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600090E")]
		[Address(RVA = "0xA7F618", Offset = "0xA7F618", VA = "0xA7F618")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public Vector2 particleSize
	{
		[Token(Token = "0x600090F")]
		[Address(RVA = "0xA7F664", Offset = "0xA7F664", VA = "0xA7F664")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000910")]
		[Address(RVA = "0xA7F66C", Offset = "0xA7F66C", VA = "0xA7F66C")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public bool stretchedBillboard
	{
		[Token(Token = "0x6000911")]
		[Address(RVA = "0xA7F6A4", Offset = "0xA7F6A4", VA = "0xA7F6A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xA7F6AC", Offset = "0xA7F6AC", VA = "0xA7F6AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public float speedScaleMultiplier
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xA7F6D8", Offset = "0xA7F6D8", VA = "0xA7F6D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xA7F6E0", Offset = "0xA7F6E0", VA = "0xA7F6E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public bool spin
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xA7F6FC", Offset = "0xA7F6FC", VA = "0xA7F6FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000916")]
		[Address(RVA = "0xA7F704", Offset = "0xA7F704", VA = "0xA7F704")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public float spinSpeed
	{
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xA7F730", Offset = "0xA7F730", VA = "0xA7F730")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000918")]
		[Address(RVA = "0xA7F738", Offset = "0xA7F738", VA = "0xA7F738")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public float minSpinSpeed
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xA7F754", Offset = "0xA7F754", VA = "0xA7F754")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xA7F75C", Offset = "0xA7F75C", VA = "0xA7F75C")]
		set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public bool customRotationAxis
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xA7F790", Offset = "0xA7F790", VA = "0xA7F790")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600091C")]
		[Address(RVA = "0xA7F798", Offset = "0xA7F798", VA = "0xA7F798")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public Vector3 rotationAxis
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xA7F7BC", Offset = "0xA7F7BC", VA = "0xA7F7BC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600091E")]
		[Address(RVA = "0xA7F7C8", Offset = "0xA7F7C8", VA = "0xA7F7C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public bool customFacingDirection
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xA7F818", Offset = "0xA7F818", VA = "0xA7F818")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xA7F820", Offset = "0xA7F820", VA = "0xA7F820")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public Vector3 facingDirection
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xA7F840", Offset = "0xA7F840", VA = "0xA7F840")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xA7F84C", Offset = "0xA7F84C", VA = "0xA7F84C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public bool customUpDirection
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0xA7F89C", Offset = "0xA7F89C", VA = "0xA7F89C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0xA7F8A4", Offset = "0xA7F8A4", VA = "0xA7F8A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public Vector3 upDirection
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xA7F8D0", Offset = "0xA7F8D0", VA = "0xA7F8D0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xA7F8DC", Offset = "0xA7F8DC", VA = "0xA7F8DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public SoftParticleType softParticles
	{
		[Token(Token = "0x6000927")]
		[Address(RVA = "0xA7F928", Offset = "0xA7F928", VA = "0xA7F928")]
		get
		{
			return default(SoftParticleType);
		}
		[Token(Token = "0x6000928")]
		[Address(RVA = "0xA7F930", Offset = "0xA7F930", VA = "0xA7F930")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public float nearFadeDistance
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0xA7FA2C", Offset = "0xA7FA2C", VA = "0xA7FA2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600092A")]
		[Address(RVA = "0xA7FA34", Offset = "0xA7FA34", VA = "0xA7FA34")]
		set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public float nearFadeOffset
	{
		[Token(Token = "0x600092B")]
		[Address(RVA = "0xA7FA50", Offset = "0xA7FA50", VA = "0xA7FA50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600092C")]
		[Address(RVA = "0xA7FA58", Offset = "0xA7FA58", VA = "0xA7FA58")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public float softness
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0xA7FA74", Offset = "0xA7FA74", VA = "0xA7FA74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600092E")]
		[Address(RVA = "0xA7FA7C", Offset = "0xA7FA7C", VA = "0xA7FA7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public TurbulenceType turbulenceType
	{
		[Token(Token = "0x600092F")]
		[Address(RVA = "0xA7FA98", Offset = "0xA7FA98", VA = "0xA7FA98")]
		get
		{
			return default(TurbulenceType);
		}
		[Token(Token = "0x6000930")]
		[Address(RVA = "0xA7FAA0", Offset = "0xA7FAA0", VA = "0xA7FAA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public float turbulenceFrequency
	{
		[Token(Token = "0x6000931")]
		[Address(RVA = "0xA7FABC", Offset = "0xA7FABC", VA = "0xA7FABC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000932")]
		[Address(RVA = "0xA7FAC4", Offset = "0xA7FAC4", VA = "0xA7FAC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000164")]
	public float turbulenceAmplitude
	{
		[Token(Token = "0x6000933")]
		[Address(RVA = "0xA7FAE0", Offset = "0xA7FAE0", VA = "0xA7FAE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000934")]
		[Address(RVA = "0xA7FAE8", Offset = "0xA7FAE8", VA = "0xA7FAE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public Vector3 turbulenceScale
	{
		[Token(Token = "0x6000935")]
		[Address(RVA = "0xA7FB04", Offset = "0xA7FB04", VA = "0xA7FB04")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000936")]
		[Address(RVA = "0xA7FB10", Offset = "0xA7FB10", VA = "0xA7FB10")]
		set
		{
		}
	}

	[Token(Token = "0x17000166")]
	public Vector3 turbulenceOffsetSpeed
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xA7FB5C", Offset = "0xA7FB5C", VA = "0xA7FB5C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000938")]
		[Address(RVA = "0xA7FB6C", Offset = "0xA7FB6C", VA = "0xA7FB6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000167")]
	public Gradient colorVariation
	{
		[Token(Token = "0x6000939")]
		[Address(RVA = "0xA7BEB0", Offset = "0xA7BEB0", VA = "0xA7BEB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600093A")]
		[Address(RVA = "0xA7FBC0", Offset = "0xA7FBC0", VA = "0xA7FBC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000168")]
	public float minimumSize
	{
		[Token(Token = "0x600093B")]
		[Address(RVA = "0xA7FBF4", Offset = "0xA7FBF4", VA = "0xA7FBF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600093C")]
		[Address(RVA = "0xA7FBFC", Offset = "0xA7FBFC", VA = "0xA7FBFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public float minimumSpeed
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0xA7FC30", Offset = "0xA7FC30", VA = "0xA7FC30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600093E")]
		[Address(RVA = "0xA7FC38", Offset = "0xA7FC38", VA = "0xA7FC38")]
		set
		{
		}
	}

	[Token(Token = "0x1700016A")]
	public Vector3 force
	{
		[Token(Token = "0x600093F")]
		[Address(RVA = "0xA7FC6C", Offset = "0xA7FC6C", VA = "0xA7FC6C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000940")]
		[Address(RVA = "0xA7FC78", Offset = "0xA7FC78", VA = "0xA7FC78")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public MaterialType materialType
	{
		[Token(Token = "0x6000941")]
		[Address(RVA = "0xA7FCC4", Offset = "0xA7FCC4", VA = "0xA7FCC4")]
		get
		{
			return default(MaterialType);
		}
		[Token(Token = "0x6000942")]
		[Address(RVA = "0xA7FCCC", Offset = "0xA7FCCC", VA = "0xA7FCCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public Shader shader
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0xA7FE20", Offset = "0xA7FE20", VA = "0xA7FE20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000944")]
		[Address(RVA = "0xA7FD94", Offset = "0xA7FD94", VA = "0xA7FD94")]
		private set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public Texture2D texture
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0xA7FE28", Offset = "0xA7FE28", VA = "0xA7FE28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000946")]
		[Address(RVA = "0xA7FE30", Offset = "0xA7FE30", VA = "0xA7FE30")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public TextureType textureType
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0xA7FEBC", Offset = "0xA7FEBC", VA = "0xA7FEBC")]
		get
		{
			return default(TextureType);
		}
		[Token(Token = "0x6000948")]
		[Address(RVA = "0xA7FEC4", Offset = "0xA7FEC4", VA = "0xA7FEC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public int spriteColumns
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0xA7FEE0", Offset = "0xA7FEE0", VA = "0xA7FEE0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600094A")]
		[Address(RVA = "0xA7FEE8", Offset = "0xA7FEE8", VA = "0xA7FEE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public int spriteRows
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0xA7FF10", Offset = "0xA7FF10", VA = "0xA7FF10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600094C")]
		[Address(RVA = "0xA7FF18", Offset = "0xA7FF18", VA = "0xA7FF18")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public float framerate
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0xA7FF40", Offset = "0xA7FF40", VA = "0xA7FF40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600094E")]
		[Address(RVA = "0xA7FF48", Offset = "0xA7FF48", VA = "0xA7FF48")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public float cutOff
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xA7FF5C", Offset = "0xA7FF5C", VA = "0xA7FF5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xA7FF64", Offset = "0xA7FF64", VA = "0xA7FF64")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public Vector2 pivotOffset
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xA7FF94", Offset = "0xA7FF94", VA = "0xA7FF94")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000952")]
		[Address(RVA = "0xA7FFA0", Offset = "0xA7FFA0", VA = "0xA7FFA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public UnityEngine.Mesh inputMesh
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0xA7FFE4", Offset = "0xA7FFE4", VA = "0xA7FFE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xA7FFEC", Offset = "0xA7FFEC", VA = "0xA7FFEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public bool receiveShadows
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0xA80014", Offset = "0xA80014", VA = "0xA80014")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000956")]
		[Address(RVA = "0xA8001C", Offset = "0xA8001C", VA = "0xA8001C")]
		set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public bool castShadows
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0xA800B8", Offset = "0xA800B8", VA = "0xA800B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000958")]
		[Address(RVA = "0xA800C0", Offset = "0xA800C0", VA = "0xA800C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	private PAParticleMeshGenerator meshGenerator
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0xA7F238", Offset = "0xA7F238", VA = "0xA7F238")]
		get
		{
			return null;
		}
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xA80304", Offset = "0xA80304", VA = "0xA80304")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public MeshFlags meshIsDirtyMask
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0xA80314", Offset = "0xA80314", VA = "0xA80314")]
		[CompilerGenerated]
		get
		{
			return default(MeshFlags);
		}
		[Token(Token = "0x600095C")]
		[Address(RVA = "0xA8031C", Offset = "0xA8031C", VA = "0xA8031C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public bool shaderIsDirty
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0xA80324", Offset = "0xA80324", VA = "0xA80324")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600095E")]
		[Address(RVA = "0xA8032C", Offset = "0xA8032C", VA = "0xA8032C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600095F")]
	private T GetOrAddComponent<T>() where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xA80338", Offset = "0xA80338", VA = "0xA80338")]
	private void GetRenderingComponents()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xA80418", Offset = "0xA80418", VA = "0xA80418")]
	private void CreateAssetTypes()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xA805BC", Offset = "0xA805BC", VA = "0xA805BC")]
	private Material CreateInstanceMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xA8015C", Offset = "0xA8015C", VA = "0xA8015C")]
	private void UpdateGeneratorType(ParticleType newType)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xA80744", Offset = "0xA80744", VA = "0xA80744")]
	private void SetShaderValues()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xA812C8", Offset = "0xA812C8", VA = "0xA812C8")]
	private void SetKeyword(string keyword, bool enable)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xA81338", Offset = "0xA81338", VA = "0xA81338")]
	private static void SetMaterialKeyword(string keyword, bool enable, Material material)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xA813E0", Offset = "0xA813E0", VA = "0xA813E0")]
	private void SetFloatKeyword(string keyword, bool enable)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xA8129C", Offset = "0xA8129C", VA = "0xA8129C")]
	private void SetFloatKeyword(int keywordID, bool enable)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xA8140C", Offset = "0xA8140C", VA = "0xA8140C")]
	public void UpdateParticleField()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xA8142C", Offset = "0xA8142C", VA = "0xA8142C")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xA814DC", Offset = "0xA814DC", VA = "0xA814DC")]
	public void UpdateShader()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xA814F4", Offset = "0xA814F4", VA = "0xA814F4")]
	private void UpdateAnimationValues()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xA81528", Offset = "0xA81528", VA = "0xA81528")]
	public void Simulate(float t, bool restart = false)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xA816A4", Offset = "0xA816A4", VA = "0xA816A4")]
	private void UpdateExclusionZoneValues()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xA817E0", Offset = "0xA817E0", VA = "0xA817E0")]
	private void SetShaderAnimationValues()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xA81B3C", Offset = "0xA81B3C", VA = "0xA81B3C")]
	private void SetShaderExclusionZoneValues()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xA821CC", Offset = "0xA821CC", VA = "0xA821CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xA82264", Offset = "0xA82264", VA = "0xA82264")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xA81614", Offset = "0xA81614", VA = "0xA81614")]
	public void ResetTimers()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xA82268", Offset = "0xA82268", VA = "0xA82268")]
	private void Update()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xA8244C", Offset = "0xA8244C", VA = "0xA8244C")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xA82590", Offset = "0xA82590", VA = "0xA82590")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xA82660", Offset = "0xA82660", VA = "0xA82660")]
	public int GetMaxCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xA826FC", Offset = "0xA826FC", VA = "0xA826FC")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xA82840", Offset = "0xA82840", VA = "0xA82840")]
	public static PAParticleField Create(string name)
	{
		return null;
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xA828BC", Offset = "0xA828BC", VA = "0xA828BC")]
	private void CreateTemporarySerializableMaterial()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xA82950", Offset = "0xA82950", VA = "0xA82950")]
	public PAParticleField()
	{
	}
}
[Token(Token = "0x2000193")]
[Flags]
public enum MeshFlags
{
	[Token(Token = "0x4000BB4")]
	None = 0,
	[Token(Token = "0x4000BB5")]
	Generator = 1,
	[Token(Token = "0x4000BB6")]
	Count = 2,
	[Token(Token = "0x4000BB7")]
	Color = 4,
	[Token(Token = "0x4000BB8")]
	Speed = 8,
	[Token(Token = "0x4000BB9")]
	Surface = 0x10,
	[Token(Token = "0x4000BBA")]
	Seed = 0x1C,
	[Token(Token = "0x4000BBB")]
	All = 0x1F
}
[Token(Token = "0x2000194")]
public class AnimationBlendTest : MonoBehaviour
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lerpValue;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xA82FC8", Offset = "0xA82FC8", VA = "0xA82FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xA83038", Offset = "0xA83038", VA = "0xA83038")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xA830A8", Offset = "0xA830A8", VA = "0xA830A8")]
	public AnimationBlendTest()
	{
	}
}
[Token(Token = "0x2000195")]
internal class OffsetTracking
{
	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TrackerRole trackerRole;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTrans;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int deviceIndex;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<int, Transform> deviceMarkerDict;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject child;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xA830B0", Offset = "0xA830B0", VA = "0xA830B0")]
	private Pose GetPose(int index)
	{
		return default(Pose);
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xA83160", Offset = "0xA83160", VA = "0xA83160")]
	public void StartTracking()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xA8330C", Offset = "0xA8330C", VA = "0xA8330C")]
	public void UpdateOffsetTracking()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xA83384", Offset = "0xA83384", VA = "0xA83384")]
	public OffsetTracking()
	{
	}
}
[Token(Token = "0x2000196")]
public class PlayerTracked : MonoBehaviour
{
	[Token(Token = "0x2000197")]
	[CompilerGenerated]
	private sealed class <Espera>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerTracked <>4__this;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xA845AC", Offset = "0xA845AC", VA = "0xA845AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xA845F4", Offset = "0xA845F4", VA = "0xA845F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xA83544", Offset = "0xA83544", VA = "0xA83544")]
		[DebuggerHidden]
		public <Espera>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xA83BD4", Offset = "0xA83BD4", VA = "0xA83BD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xA83BD8", Offset = "0xA83BD8", VA = "0xA83BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xA845B4", Offset = "0xA845B4", VA = "0xA845B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform manoDerecha;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform manoIzquierda;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pieDerecho;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform pieIzquierdo;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform torso;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform cabeza;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform manoDerechaT;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform manoIzquierdaT;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform pieDerechoT;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform pieIzquierdoT;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform torsoT;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform cabezaT;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform manoDerechaO;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform manoIzquierdaO;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform pieDerechoO;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform pieIzquierdoO;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform torsoO;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform cabezaO;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool trackersConseguidos;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private Vector3 offsetManoD;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Vector3 offsetManoI;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private Vector3 offsetPieD;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Vector3 offsetPieI;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private Vector3 offsetCabeza;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Vector3 offsetTorso;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private Quaternion offsetManoDR;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[SerializeField]
	private Quaternion offsetManoIR;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	private Quaternion offsetPieDR;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private Quaternion offsetPieIR;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[SerializeField]
	private Quaternion offsetCabezaR;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	private Quaternion offsetTorsoR;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xA8340C", Offset = "0xA8340C", VA = "0xA8340C")]
	private void UpdateIK()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xA834CC", Offset = "0xA834CC", VA = "0xA834CC")]
	private void TrackearDevices()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xA834D0", Offset = "0xA834D0", VA = "0xA834D0")]
	[IteratorStateMachine(typeof(<Espera>d__21))]
	private IEnumerator Espera()
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xA8356C", Offset = "0xA8356C", VA = "0xA8356C")]
	private void UpdatePartes()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xA83BC4", Offset = "0xA83BC4", VA = "0xA83BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xA83BC8", Offset = "0xA83BC8", VA = "0xA83BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xA83BCC", Offset = "0xA83BCC", VA = "0xA83BCC")]
	public PlayerTracked()
	{
	}
}
[Token(Token = "0x2000198")]
internal struct Pose
{
	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 pos;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rot;
}
[Token(Token = "0x2000199")]
internal enum TrackerRole
{
	[Token(Token = "0x4000BE8")]
	HandRight,
	[Token(Token = "0x4000BE9")]
	HandLeft,
	[Token(Token = "0x4000BEA")]
	Torso,
	[Token(Token = "0x4000BEB")]
	FootRight,
	[Token(Token = "0x4000BEC")]
	FootLeft
}
[Token(Token = "0x200019A")]
internal class DumbConfigFile
{
	[Token(Token = "0x4000BED")]
	private const string configFileName = "height_config.txt";

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xA845FC", Offset = "0xA845FC", VA = "0xA845FC")]
	public static bool ReadString(out string strValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xA846A4", Offset = "0xA846A4", VA = "0xA846A4")]
	public static bool ReadFloat(out float fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xA846FC", Offset = "0xA846FC", VA = "0xA846FC")]
	public DumbConfigFile()
	{
	}
}
[Token(Token = "0x200019B")]
public class ViveIKDemo : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	public enum Stage
	{
		[Token(Token = "0x4000C10")]
		Stage0,
		[Token(Token = "0x4000C11")]
		Stage1,
		[Token(Token = "0x4000C12")]
		Stage2,
		[Token(Token = "0x4000C13")]
		Stage3
	}

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ViveIKDemo instance;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject modeloPortero;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text logText;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ankleMarkerLeft;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ankleMarkerRight;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> deviceMarkers;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftHandOffsetObject;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rightHandOffsetObject;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, Transform> deviceMarkerDict;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Stage stage;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Queue<object> logQueue;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int maxLogCount;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float initHeight;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<TrackerRole, int> trackers;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<OffsetTracking> offsetTrackedList;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform leftHandTarget;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform rightHandTarget;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AnimationBlendTest animationBlender;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool activarCalibrado;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 posicionInicialHelperTobillo1;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 posicionInicialHelperTobillo2;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 posicionInicialTorso;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion rotacionInicialTobillo1;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion rotacionInicialTobillo2;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion rotacionInicialTorso;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 scaleInicial;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool porteroVinculadoAlgunaVez;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float ultimaAlturaUsadaParaEscalarModelo;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Collider[] collidersCuerpo;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public LimbIK limbIKManoDcha;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LimbIK limbIKManoIzda;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public LimbIK limbIKPieIzdo;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public LimbIK limbIKPieDcho;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xA84704", Offset = "0xA84704", VA = "0xA84704")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xA8475C", Offset = "0xA8475C", VA = "0xA8475C")]
	public void ActivarCollidersCuerpo()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xA847C0", Offset = "0xA847C0", VA = "0xA847C0")]
	public void DesactivarCollidersCuerpo()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xA84824", Offset = "0xA84824", VA = "0xA84824")]
	private void resetearValoresPortero()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xA84904", Offset = "0xA84904", VA = "0xA84904")]
	private void Start()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xA84A64", Offset = "0xA84A64", VA = "0xA84A64")]
	private void Update()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xA85C88", Offset = "0xA85C88", VA = "0xA85C88")]
	private void InitWithCustomHeight()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xA85D58", Offset = "0xA85D58", VA = "0xA85D58")]
	public void AdjustToHeight(float customHeight)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xA858B8", Offset = "0xA858B8", VA = "0xA858B8")]
	private void StartIK()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xA84C64", Offset = "0xA84C64", VA = "0xA84C64")]
	private void UpdateIK()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xA85E0C", Offset = "0xA85E0C", VA = "0xA85E0C")]
	private Pose GetPose(int index)
	{
		return default(Pose);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xA852B8", Offset = "0xA852B8", VA = "0xA852B8")]
	private void StartOffsetTracking()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xA85A64", Offset = "0xA85A64", VA = "0xA85A64")]
	private void UpdateOffsetTracking()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xA85EBC", Offset = "0xA85EBC", VA = "0xA85EBC")]
	private void UpdatePistolEffect(float triggerValue)
	{
	}

	[Token(Token = "0x60009A2")]
	private void Swap<T>(List<T> list, int indexA, int indexB)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xA84D24", Offset = "0xA84D24", VA = "0xA84D24")]
	private bool AssignTrackers()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xA85FB8", Offset = "0xA85FB8", VA = "0xA85FB8")]
	private bool MirarSiSoySensorMano(int indiceSensor)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xA85EC0", Offset = "0xA85EC0", VA = "0xA85EC0")]
	private void AssignChildAndKeepLocalTrans(ref Transform parent, Transform child)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xA85028", Offset = "0xA85028", VA = "0xA85028")]
	private void MyLog(object msg)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xA8514C", Offset = "0xA8514C", VA = "0xA8514C")]
	private void MyLogError(object msg)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xA85FC0", Offset = "0xA85FC0", VA = "0xA85FC0")]
	private void DisplayLogQueue()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xA861D8", Offset = "0xA861D8", VA = "0xA861D8")]
	public ViveIKDemo()
	{
	}
}
[Token(Token = "0x200019D")]
public class CambiarMaterialesSegunCalidad : MonoBehaviour
{
	[Token(Token = "0x200019E")]
	public enum tipoParaCambiar
	{
		[Token(Token = "0x4000C18")]
		trail,
		[Token(Token = "0x4000C19")]
		renderer,
		[Token(Token = "0x4000C1A")]
		meshRenderer,
		[Token(Token = "0x4000C1B")]
		trailRenderer
	}

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool soloEnQuest1;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public tipoParaCambiar tipo;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> materialBarato;

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xA86378", Offset = "0xA86378", VA = "0xA86378")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xA86588", Offset = "0xA86588", VA = "0xA86588")]
	public CambiarMaterialesSegunCalidad()
	{
	}
}
[Token(Token = "0x200019F")]
public class CambiarMaterialSegunCalidad : MonoBehaviour
{
	[Token(Token = "0x20001A0")]
	public enum tipoParaCambiar
	{
		[Token(Token = "0x4000C20")]
		trail,
		[Token(Token = "0x4000C21")]
		renderer,
		[Token(Token = "0x4000C22")]
		meshRenderer,
		[Token(Token = "0x4000C23")]
		trailRenderer
	}

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool soloEnQuest1;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public tipoParaCambiar tipo;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material materialBarato;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xA86598", Offset = "0xA86598", VA = "0xA86598")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xA86738", Offset = "0xA86738", VA = "0xA86738")]
	public CambiarMaterialSegunCalidad()
	{
	}
}
[Token(Token = "0x20001A1")]
public abstract class LogrosRecords : MonoBehaviour
{
	[Token(Token = "0x20001A2")]
	public struct Resultado
	{
		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string usuario;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int record;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int posicion;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong id;
	}

	[Token(Token = "0x20001A3")]
	public enum OrdenTabla
	{
		[Token(Token = "0x4000C2F")]
		ascendente,
		[Token(Token = "0x4000C30")]
		descendente,
		[Token(Token = "0x4000C31")]
		ninguno
	}

	[Token(Token = "0x20001A4")]
	public struct InfoTabla
	{
		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string nombre;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OrdenTabla orden;
	}

	[Token(Token = "0x20001A5")]
	public enum Logros
	{
		[Token(Token = "0x4000C35")]
		Nivel1,
		[Token(Token = "0x4000C36")]
		Nivel2,
		[Token(Token = "0x4000C37")]
		Nivel3,
		[Token(Token = "0x4000C38")]
		Nivel4,
		[Token(Token = "0x4000C39")]
		Nivel5,
		[Token(Token = "0x4000C3A")]
		Nivel6,
		[Token(Token = "0x4000C3B")]
		Nivel7,
		[Token(Token = "0x4000C3C")]
		Nivel8,
		[Token(Token = "0x4000C3D")]
		Nivel9,
		[Token(Token = "0x4000C3E")]
		Nivel10,
		[Token(Token = "0x4000C3F")]
		Nivel11,
		[Token(Token = "0x4000C40")]
		Nivel12,
		[Token(Token = "0x4000C41")]
		Nivel13,
		[Token(Token = "0x4000C42")]
		Nivel14,
		[Token(Token = "0x4000C43")]
		Nivel15,
		[Token(Token = "0x4000C44")]
		Nivel16,
		[Token(Token = "0x4000C45")]
		Mejora1Avion,
		[Token(Token = "0x4000C46")]
		MejoraNivel2Avion,
		[Token(Token = "0x4000C47")]
		MejoraNivel5Avion,
		[Token(Token = "0x4000C48")]
		MejoraNivel10Avion,
		[Token(Token = "0x4000C49")]
		MejoraNivel15Avion
	}

	[Token(Token = "0x20001A6")]
	public delegate void IGSMTablaEncontradaEventHandler(object sender, string tabla);

	[Token(Token = "0x20001A7")]
	public delegate void IGSMResultadosEventHandler(object sender, List<Resultado> resultados, bool dosListados, string tabla);

	[Token(Token = "0x20001A8")]
	public delegate void IGSMResultadoSubidoEventHandler(object sender, int miMejorResultado, string tabla);

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogrosRecords instance;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config.PlataformaJuego m_Plataforma;

	[Token(Token = "0x4000C26")]
	public const int NUM_LOGROS = 21;

	[Token(Token = "0x14000001")]
	public event IGSMResultadosEventHandler ResultadosObtenidos
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xA868C8", Offset = "0xA868C8", VA = "0xA868C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xA86964", Offset = "0xA86964", VA = "0xA86964")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event IGSMTablaEncontradaEventHandler TablaEncontrada
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xA86A00", Offset = "0xA86A00", VA = "0xA86A00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xA86A9C", Offset = "0xA86A9C", VA = "0xA86A9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event IGSMResultadoSubidoEventHandler RecordSubido
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xA86B38", Offset = "0xA86B38", VA = "0xA86B38")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xA86BD4", Offset = "0xA86BD4", VA = "0xA86BD4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xA86748", Offset = "0xA86748", VA = "0xA86748")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xA86C70", Offset = "0xA86C70", VA = "0xA86C70", Slot = "4")]
	public virtual bool TengoOperacionesPendientes()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xA86C78", Offset = "0xA86C78", VA = "0xA86C78", Slot = "5")]
	protected virtual void OnResultadosObtenidos(object sender, List<Resultado> resultados, bool dosListados, string tabla)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xA86D3C", Offset = "0xA86D3C", VA = "0xA86D3C", Slot = "6")]
	protected virtual void OnTablaEncontrada(object sender, string tabla)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xA86DE4", Offset = "0xA86DE4", VA = "0xA86DE4", Slot = "7")]
	protected virtual void OnRecordSubido(object sender, int miMejorResultado, string tabla)
	{
	}

	[Token(Token = "0x60009B9")]
	public abstract void GuardarLogros();

	[Token(Token = "0x60009BA")]
	public abstract void InicializarLogros();

	[Token(Token = "0x60009BB")]
	public abstract void InicializarTablas(string[] tablas);

	[Token(Token = "0x60009BC")]
	public abstract void InicializarTablas(List<InfoTabla> tablas);

	[Token(Token = "0x60009BD")]
	public abstract void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero);

	[Token(Token = "0x60009BE")]
	public abstract void SubirRecord(string tabla, int record);

	[Token(Token = "0x60009BF")]
	public abstract void MarcarLogroCompletado(string idLogro);

	[Token(Token = "0x60009C0")]
	public abstract string DameMiNombre();

	[Token(Token = "0x60009C1")]
	public abstract void MostrarTienda();

	[Token(Token = "0x60009C2")]
	public abstract void ComprobarYDarLogroPlatino();

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xA86E94", Offset = "0xA86E94", VA = "0xA86E94", Slot = "18")]
	public virtual void Comprar()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xA86E98", Offset = "0xA86E98", VA = "0xA86E98", Slot = "19")]
	public virtual void ComprarJuego()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xA86E9C", Offset = "0xA86E9C", VA = "0xA86E9C")]
	public string DameNombreAchivement(Logros logro)
	{
		return null;
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xA86FF4", Offset = "0xA86FF4", VA = "0xA86FF4")]
	protected LogrosRecords()
	{
	}
}
[Token(Token = "0x20001A9")]
public class VRDeviceNames
{
	[Token(Token = "0x4000C4A")]
	public const string None = "None";

	[Token(Token = "0x4000C4B")]
	public const string Unknown = "Unknown";

	[Token(Token = "0x4000C4C")]
	public const string Oculus = "Oculus";

	[Token(Token = "0x4000C4D")]
	public const string PlayStationVR = "PlayStationVR";

	[Token(Token = "0x4000C4E")]
	public const string PSVR_Display = "PSVR Display";

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xA87504", Offset = "0xA87504", VA = "0xA87504")]
	public VRDeviceNames()
	{
	}
}
[Token(Token = "0x20001AA")]
public class VRManager : MonoBehaviour
{
	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xA8750C", Offset = "0xA8750C", VA = "0xA8750C")]
	public VRManager()
	{
	}
}
[Token(Token = "0x20001AB")]
public class VRPostReprojection : MonoBehaviour
{
	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xA87514", Offset = "0xA87514", VA = "0xA87514")]
	public VRPostReprojection()
	{
	}
}
[Token(Token = "0x20001AC")]
public class retrasarInicioLluvia : MonoBehaviour
{
	[Token(Token = "0x20001AD")]
	[CompilerGenerated]
	private sealed class <retraso>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public retrasarInicioLluvia <>4__this;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0xA876A0", Offset = "0xA876A0", VA = "0xA876A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xA876E8", Offset = "0xA876E8", VA = "0xA876E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xA87590", Offset = "0xA87590", VA = "0xA87590")]
		[DebuggerHidden]
		public <retraso>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xA875E0", Offset = "0xA875E0", VA = "0xA875E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xA875E4", Offset = "0xA875E4", VA = "0xA875E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xA876A8", Offset = "0xA876A8", VA = "0xA876A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objetoQueQueQuieroRetrasar;

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xA8751C", Offset = "0xA8751C", VA = "0xA8751C")]
	[IteratorStateMachine(typeof(<retraso>d__1))]
	private IEnumerator retraso()
	{
		return null;
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xA875B8", Offset = "0xA875B8", VA = "0xA875B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xA875D8", Offset = "0xA875D8", VA = "0xA875D8")]
	public retrasarInicioLluvia()
	{
	}
}
[Token(Token = "0x20001AE")]
public class ActivadoCamaraInteligente : MonoBehaviour
{
	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject camaraHTC;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject camaraOVR;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRTK_InteractGrab interactGrabDcho;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRTK_InteractTouch interactTouchDcho;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRTK_InteractGrab interactGrabIzdo;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRTK_InteractTouch interactTouchIzdo;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xA876F0", Offset = "0xA876F0", VA = "0xA876F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xA87864", Offset = "0xA87864", VA = "0xA87864")]
	public ActivadoCamaraInteligente()
	{
	}
}
[Token(Token = "0x20001AF")]
public class activarASW : MonoBehaviour
{
	[Token(Token = "0x20001B0")]
	[CompilerGenerated]
	private sealed class <aplicarSetSpaceWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public activarASW <>4__this;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xA87B88", Offset = "0xA87B88", VA = "0xA87B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0xA87BD0", Offset = "0xA87BD0", VA = "0xA87BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xA87900", Offset = "0xA87900", VA = "0xA87900")]
		[DebuggerHidden]
		public <aplicarSetSpaceWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xA87940", Offset = "0xA87940", VA = "0xA87940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xA87944", Offset = "0xA87944", VA = "0xA87944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xA87B90", Offset = "0xA87B90", VA = "0xA87B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int objetivoFPS;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float renderobjetivo;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xA8786C", Offset = "0xA8786C", VA = "0xA8786C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xA8788C", Offset = "0xA8788C", VA = "0xA8788C")]
	[IteratorStateMachine(typeof(<aplicarSetSpaceWarp>d__3))]
	private IEnumerator aplicarSetSpaceWarp(float pausa)
	{
		return null;
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xA87928", Offset = "0xA87928", VA = "0xA87928")]
	public activarASW()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ActivarCabezaSiFullRig : MonoBehaviour
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mrCabeza;

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xA87BD8", Offset = "0xA87BD8", VA = "0xA87BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xA87BDC", Offset = "0xA87BDC", VA = "0xA87BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xA87C90", Offset = "0xA87C90", VA = "0xA87C90")]
	public ActivarCabezaSiFullRig()
	{
	}
}
[Token(Token = "0x20001B2")]
public class ajustarCamaraMuseoSegunCalidad : MonoBehaviour
{
	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xA87C98", Offset = "0xA87C98", VA = "0xA87C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xA87CB8", Offset = "0xA87CB8", VA = "0xA87CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xA87CBC", Offset = "0xA87CBC", VA = "0xA87CBC")]
	public ajustarCamaraMuseoSegunCalidad()
	{
	}
}
[Token(Token = "0x20001B3")]
public class ApagarLucesEnDebug : MonoBehaviour
{
	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xA87CC4", Offset = "0xA87CC4", VA = "0xA87CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xA87E6C", Offset = "0xA87E6C", VA = "0xA87E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xA87E70", Offset = "0xA87E70", VA = "0xA87E70")]
	public ApagarLucesEnDebug()
	{
	}
}
[Token(Token = "0x20001B4")]
public class banda_diana : MonoBehaviour
{
	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject miDiana;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xA87E78", Offset = "0xA87E78", VA = "0xA87E78")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xA87E7C", Offset = "0xA87E7C", VA = "0xA87E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xA87E80", Offset = "0xA87E80", VA = "0xA87E80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xA87EDC", Offset = "0xA87EDC", VA = "0xA87EDC")]
	public banda_diana()
	{
	}
}
[Token(Token = "0x20001B5")]
public class BotonGenerico : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	public enum AccionBoton
	{
		[Token(Token = "0x4000C6E")]
		MainMenu,
		[Token(Token = "0x4000C6F")]
		ModoPartidaRapida,
		[Token(Token = "0x4000C70")]
		ModoHistoria,
		[Token(Token = "0x4000C71")]
		ModoArcade,
		[Token(Token = "0x4000C72")]
		Settings,
		[Token(Token = "0x4000C73")]
		DebugChutes,
		[Token(Token = "0x4000C74")]
		Rejugar,
		[Token(Token = "0x4000C75")]
		Multijugador,
		[Token(Token = "0x4000C76")]
		NewCode,
		[Token(Token = "0x4000C77")]
		ModoShooterOnline,
		[Token(Token = "0x4000C78")]
		ModoShooterTraining,
		[Token(Token = "0x4000C79")]
		ModoNostalgia
	}

	[Token(Token = "0x20001B7")]
	[CompilerGenerated]
	private sealed class <destruyePelotaDentroDeUnRato>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject estaPelota;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0xA89C3C", Offset = "0xA89C3C", VA = "0xA89C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xA89C84", Offset = "0xA89C84", VA = "0xA89C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xA887B4", Offset = "0xA887B4", VA = "0xA887B4")]
		[DebuggerHidden]
		public <destruyePelotaDentroDeUnRato>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xA89B64", Offset = "0xA89B64", VA = "0xA89B64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xA89B68", Offset = "0xA89B68", VA = "0xA89B68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xA89C44", Offset = "0xA89C44", VA = "0xA89C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B8")]
	[CompilerGenerated]
	private sealed class <QuitarTextoDentroDeUnRato>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject esto;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0xA89D44", Offset = "0xA89D44", VA = "0xA89D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0xA89D8C", Offset = "0xA89D8C", VA = "0xA89D8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xA88850", Offset = "0xA88850", VA = "0xA88850")]
		[DebuggerHidden]
		public <QuitarTextoDentroDeUnRato>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xA89C8C", Offset = "0xA89C8C", VA = "0xA89C8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xA89C90", Offset = "0xA89C90", VA = "0xA89C90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xA89D4C", Offset = "0xA89D4C", VA = "0xA89D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B9")]
	[CompilerGenerated]
	private sealed class <MainMenu>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0xA89EB0", Offset = "0xA89EB0", VA = "0xA89EB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xA89EF8", Offset = "0xA89EF8", VA = "0xA89EF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xA897E8", Offset = "0xA897E8", VA = "0xA897E8")]
		[DebuggerHidden]
		public <MainMenu>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xA89D94", Offset = "0xA89D94", VA = "0xA89D94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xA89D98", Offset = "0xA89D98", VA = "0xA89D98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xA89EB8", Offset = "0xA89EB8", VA = "0xA89EB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BA")]
	[CompilerGenerated]
	private sealed class <NewCode>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xA8A094", Offset = "0xA8A094", VA = "0xA8A094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0xA8A0DC", Offset = "0xA8A0DC", VA = "0xA8A0DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xA89810", Offset = "0xA89810", VA = "0xA89810")]
		[DebuggerHidden]
		public <NewCode>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xA89F00", Offset = "0xA89F00", VA = "0xA89F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xA89F04", Offset = "0xA89F04", VA = "0xA89F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xA8A09C", Offset = "0xA8A09C", VA = "0xA8A09C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BB")]
	[CompilerGenerated]
	private sealed class <ModoShooter>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0xA8A148", Offset = "0xA8A148", VA = "0xA8A148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0xA8A190", Offset = "0xA8A190", VA = "0xA8A190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xA89984", Offset = "0xA89984", VA = "0xA89984")]
		[DebuggerHidden]
		public <ModoShooter>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xA8A0E4", Offset = "0xA8A0E4", VA = "0xA8A0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xA8A0E8", Offset = "0xA8A0E8", VA = "0xA8A0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xA8A150", Offset = "0xA8A150", VA = "0xA8A150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BC")]
	[CompilerGenerated]
	private sealed class <ModoSimulator>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0xA8A304", Offset = "0xA8A304", VA = "0xA8A304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0xA8A34C", Offset = "0xA8A34C", VA = "0xA8A34C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xA899AC", Offset = "0xA899AC", VA = "0xA899AC")]
		[DebuggerHidden]
		public <ModoSimulator>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xA8A198", Offset = "0xA8A198", VA = "0xA8A198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xA8A19C", Offset = "0xA8A19C", VA = "0xA8A19C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xA8A30C", Offset = "0xA8A30C", VA = "0xA8A30C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BD")]
	[CompilerGenerated]
	private sealed class <ModoNostalgia>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0xA8A460", Offset = "0xA8A460", VA = "0xA8A460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0xA8A4A8", Offset = "0xA8A4A8", VA = "0xA8A4A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xA899D4", Offset = "0xA899D4", VA = "0xA899D4")]
		[DebuggerHidden]
		public <ModoNostalgia>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xA8A354", Offset = "0xA8A354", VA = "0xA8A354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xA8A358", Offset = "0xA8A358", VA = "0xA8A358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xA8A468", Offset = "0xA8A468", VA = "0xA8A468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BE")]
	[CompilerGenerated]
	private sealed class <ModoHistoria>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0xA8A518", Offset = "0xA8A518", VA = "0xA8A518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0xA8A560", Offset = "0xA8A560", VA = "0xA8A560", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xA899FC", Offset = "0xA899FC", VA = "0xA899FC")]
		[DebuggerHidden]
		public <ModoHistoria>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xA8A4B0", Offset = "0xA8A4B0", VA = "0xA8A4B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xA8A4B4", Offset = "0xA8A4B4", VA = "0xA8A4B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xA8A520", Offset = "0xA8A520", VA = "0xA8A520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BF")]
	[CompilerGenerated]
	private sealed class <ModoSettings>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0xA8A5D0", Offset = "0xA8A5D0", VA = "0xA8A5D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0xA8A618", Offset = "0xA8A618", VA = "0xA8A618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xA89A24", Offset = "0xA89A24", VA = "0xA89A24")]
		[DebuggerHidden]
		public <ModoSettings>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xA8A568", Offset = "0xA8A568", VA = "0xA8A568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xA8A56C", Offset = "0xA8A56C", VA = "0xA8A56C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xA8A5D8", Offset = "0xA8A5D8", VA = "0xA8A5D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C0")]
	[CompilerGenerated]
	private sealed class <ModoArcade>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xA8A78C", Offset = "0xA8A78C", VA = "0xA8A78C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xA8A7D4", Offset = "0xA8A7D4", VA = "0xA8A7D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xA89A4C", Offset = "0xA89A4C", VA = "0xA89A4C")]
		[DebuggerHidden]
		public <ModoArcade>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xA8A620", Offset = "0xA8A620", VA = "0xA8A620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xA8A624", Offset = "0xA8A624", VA = "0xA8A624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xA8A794", Offset = "0xA8A794", VA = "0xA8A794", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C1")]
	[CompilerGenerated]
	private sealed class <ModoMultijugador>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0xA8A958", Offset = "0xA8A958", VA = "0xA8A958", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0xA8A9A0", Offset = "0xA8A9A0", VA = "0xA8A9A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xA89A74", Offset = "0xA89A74", VA = "0xA89A74")]
		[DebuggerHidden]
		public <ModoMultijugador>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xA8A7DC", Offset = "0xA8A7DC", VA = "0xA8A7DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xA8A7E0", Offset = "0xA8A7E0", VA = "0xA8A7E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xA8A960", Offset = "0xA8A960", VA = "0xA8A960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C2")]
	[CompilerGenerated]
	private sealed class <Rejugar>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0xA8AD30", Offset = "0xA8AD30", VA = "0xA8AD30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0xA8AD78", Offset = "0xA8AD78", VA = "0xA8AD78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xA89A9C", Offset = "0xA89A9C", VA = "0xA89A9C")]
		[DebuggerHidden]
		public <Rejugar>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xA8A9A8", Offset = "0xA8A9A8", VA = "0xA8A9A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xA8A9AC", Offset = "0xA8A9AC", VA = "0xA8A9AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xA8AD38", Offset = "0xA8AD38", VA = "0xA8AD38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C3")]
	[CompilerGenerated]
	private sealed class <DebugChutes>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonGenerico <>4__this;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0xA8AE70", Offset = "0xA8AE70", VA = "0xA8AE70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0xA8AEB8", Offset = "0xA8AEB8", VA = "0xA8AEB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xA89AC4", Offset = "0xA89AC4", VA = "0xA89AC4")]
		[DebuggerHidden]
		public <DebugChutes>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xA8AD80", Offset = "0xA8AD80", VA = "0xA8AD80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xA8AD84", Offset = "0xA8AD84", VA = "0xA8AD84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xA8AE78", Offset = "0xA8AE78", VA = "0xA8AE78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject planoAMostrarSiMeTocan;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject textoAmostrarSiMeTocan;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine corrutinaPendiente;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objetoPendiente;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AccionBoton accionBoton;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool puedoCogerLaPelota;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject particulasAlCargarEscena;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds timeToLoadScene;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool puedoEjecutarLaCorutina;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool yaHayUnaCorutinaEnMarcha;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rigidBody;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform origin;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Matchmaking matchmaking;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xA87EE4", Offset = "0xA87EE4", VA = "0xA87EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xA87FAC", Offset = "0xA87FAC", VA = "0xA87FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xA88740", Offset = "0xA88740", VA = "0xA88740")]
	[IteratorStateMachine(typeof(<destruyePelotaDentroDeUnRato>d__16))]
	private IEnumerator destruyePelotaDentroDeUnRato(GameObject estaPelota)
	{
		return null;
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xA887DC", Offset = "0xA887DC", VA = "0xA887DC")]
	[IteratorStateMachine(typeof(<QuitarTextoDentroDeUnRato>d__17))]
	private IEnumerator QuitarTextoDentroDeUnRato(GameObject esto)
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xA88878", Offset = "0xA88878", VA = "0xA88878")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xA88FDC", Offset = "0xA88FDC", VA = "0xA88FDC")]
	public void transformarEnPelota()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xA890CC", Offset = "0xA890CC", VA = "0xA890CC")]
	public void BolaMenuDestruidaPorPie()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xA893DC", Offset = "0xA893DC", VA = "0xA893DC")]
	private void OnCollisionEnter(Collision item)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xA89524", Offset = "0xA89524", VA = "0xA89524")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xA89528", Offset = "0xA89528", VA = "0xA89528")]
	public void cargarMuseo()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xA895A4", Offset = "0xA895A4", VA = "0xA895A4")]
	public void settings()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xA8961C", Offset = "0xA8961C", VA = "0xA8961C")]
	public static void CargarMainMenu()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xA897C8", Offset = "0xA897C8", VA = "0xA897C8")]
	public void IrAMainMenu()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xA88258", Offset = "0xA88258", VA = "0xA88258")]
	[IteratorStateMachine(typeof(<MainMenu>d__27))]
	public IEnumerator MainMenu()
	{
		return null;
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xA8866C", Offset = "0xA8866C", VA = "0xA8866C")]
	[IteratorStateMachine(typeof(<NewCode>d__28))]
	public IEnumerator NewCode()
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xA89838", Offset = "0xA89838", VA = "0xA89838")]
	public static void CargarModoShooter()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xA886CC", Offset = "0xA886CC", VA = "0xA886CC")]
	[IteratorStateMachine(typeof(<ModoShooter>d__30))]
	public IEnumerator ModoShooter()
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xA882CC", Offset = "0xA882CC", VA = "0xA882CC")]
	[IteratorStateMachine(typeof(<ModoSimulator>d__31))]
	public IEnumerator ModoSimulator()
	{
		return null;
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xA88340", Offset = "0xA88340", VA = "0xA88340")]
	[IteratorStateMachine(typeof(<ModoNostalgia>d__32))]
	public IEnumerator ModoNostalgia()
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xA883B4", Offset = "0xA883B4", VA = "0xA883B4")]
	[IteratorStateMachine(typeof(<ModoHistoria>d__33))]
	public IEnumerator ModoHistoria()
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xA88584", Offset = "0xA88584", VA = "0xA88584")]
	[IteratorStateMachine(typeof(<ModoSettings>d__34))]
	public IEnumerator ModoSettings()
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xA88428", Offset = "0xA88428", VA = "0xA88428")]
	[IteratorStateMachine(typeof(<ModoArcade>d__35))]
	public IEnumerator ModoArcade()
	{
		return null;
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xA885F8", Offset = "0xA885F8", VA = "0xA885F8")]
	[IteratorStateMachine(typeof(<ModoMultijugador>d__36))]
	public IEnumerator ModoMultijugador()
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xA88510", Offset = "0xA88510", VA = "0xA88510")]
	[IteratorStateMachine(typeof(<Rejugar>d__37))]
	public IEnumerator Rejugar()
	{
		return null;
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xA8849C", Offset = "0xA8849C", VA = "0xA8849C")]
	[IteratorStateMachine(typeof(<DebugChutes>d__38))]
	public IEnumerator DebugChutes()
	{
		return null;
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xA89AEC", Offset = "0xA89AEC", VA = "0xA89AEC")]
	public BotonGenerico()
	{
	}
}
[Token(Token = "0x20001C4")]
public class botonPlayTrofeo : MonoBehaviour
{
	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool yaEstoyCargando;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int iNumNivel;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xA8AEC0", Offset = "0xA8AEC0", VA = "0xA8AEC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xA8AEC4", Offset = "0xA8AEC4", VA = "0xA8AEC4")]
	public void EjecutarBoton()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xA8B020", Offset = "0xA8B020", VA = "0xA8B020")]
	private void handlePush()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xA8B094", Offset = "0xA8B094", VA = "0xA8B094")]
	public botonPlayTrofeo()
	{
	}
}
[Token(Token = "0x20001C5")]
public class botonSettings : MonoBehaviour
{
	[Token(Token = "0x20001C6")]
	public enum BotonSettings
	{
		[Token(Token = "0x4000CA4")]
		Nulo,
		[Token(Token = "0x4000CA5")]
		Calidad50,
		[Token(Token = "0x4000CA6")]
		Calidad75,
		[Token(Token = "0x4000CA7")]
		Calidad100,
		[Token(Token = "0x4000CA8")]
		Idioma,
		[Token(Token = "0x4000CA9")]
		Mov0,
		[Token(Token = "0x4000CAA")]
		Mov20,
		[Token(Token = "0x4000CAB")]
		Mov40,
		[Token(Token = "0x4000CAC")]
		Mov60,
		[Token(Token = "0x4000CAD")]
		Mov80,
		[Token(Token = "0x4000CAE")]
		Mov100,
		[Token(Token = "0x4000CAF")]
		Mov120,
		[Token(Token = "0x4000CB0")]
		Altura,
		[Token(Token = "0x4000CB1")]
		Salir,
		[Token(Token = "0x4000CB2")]
		ok,
		[Token(Token = "0x4000CB3")]
		online,
		[Token(Token = "0x4000CB4")]
		shootPower,
		[Token(Token = "0x4000CB5")]
		comprar,
		[Token(Token = "0x4000CB6")]
		noComprar
	}

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BotonSettings tipoBoton;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xA8B09C", Offset = "0xA8B09C", VA = "0xA8B09C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xA8B0A0", Offset = "0xA8B0A0", VA = "0xA8B0A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xA8B0A4", Offset = "0xA8B0A4", VA = "0xA8B0A4")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xA8B1F4", Offset = "0xA8B1F4", VA = "0xA8B1F4")]
	public botonSettings()
	{
	}
}
[Token(Token = "0x20001C7")]
public class botonSettingsPadre : MonoBehaviour
{
	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public botonSettings.BotonSettings ultimoBotonSombreado;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xA8B1FC", Offset = "0xA8B1FC", VA = "0xA8B1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xA8B200", Offset = "0xA8B200", VA = "0xA8B200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xA8B204", Offset = "0xA8B204", VA = "0xA8B204")]
	public botonSettingsPadre()
	{
	}
}
[Token(Token = "0x20001C8")]
public class CambiarJugador : MonoBehaviour
{
	[Token(Token = "0x20001C9")]
	private enum Estado
	{
		[Token(Token = "0x4000CC1")]
		MeEnganchoAlPath,
		[Token(Token = "0x4000CC2")]
		VoyAlVestuario,
		[Token(Token = "0x4000CC3")]
		VoyAlPuntoDeDisparo,
		[Token(Token = "0x4000CC4")]
		FinalDelTunel,
		[Token(Token = "0x4000CC5")]
		EsperoEnElTunel,
		[Token(Token = "0x4000CC6")]
		RecolocarJugador
	}

	[Token(Token = "0x20001CA")]
	[CompilerGenerated]
	private sealed class <finalDelTunel>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CambiarJugador <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0xA8C6D8", Offset = "0xA8C6D8", VA = "0xA8C6D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0xA8C720", Offset = "0xA8C720", VA = "0xA8C720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xA8C5A0", Offset = "0xA8C5A0", VA = "0xA8C5A0")]
		[DebuggerHidden]
		public <finalDelTunel>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xA8C5C8", Offset = "0xA8C5C8", VA = "0xA8C5C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xA8C5CC", Offset = "0xA8C5CC", VA = "0xA8C5CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xA8C6E0", Offset = "0xA8C6E0", VA = "0xA8C6E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CB")]
	[CompilerGenerated]
	private sealed class <DestroyThis>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CambiarJugador <>4__this;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xA8C828", Offset = "0xA8C828", VA = "0xA8C828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xA8C870", Offset = "0xA8C870", VA = "0xA8C870", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xA8C728", Offset = "0xA8C728", VA = "0xA8C728")]
		[DebuggerHidden]
		public <DestroyThis>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xA8C750", Offset = "0xA8C750", VA = "0xA8C750", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xA8C754", Offset = "0xA8C754", VA = "0xA8C754", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xA8C830", Offset = "0xA8C830", VA = "0xA8C830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject numPuntos;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int posicion;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pelota;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject target;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Estado state;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> listaPuntos;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> listaPosiciones;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int puntoAlQueIr;

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xA8B20C", Offset = "0xA8B20C", VA = "0xA8B20C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xA8B554", Offset = "0xA8B554", VA = "0xA8B554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xA8B3EC", Offset = "0xA8B3EC", VA = "0xA8B3EC")]
	private int DevuelvePrimerPuntoDelRecorrido()
	{
		return default(int);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xA8B8B8", Offset = "0xA8B8B8", VA = "0xA8B8B8")]
	private void MueveteAlPath(int n)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xA8C2D4", Offset = "0xA8C2D4", VA = "0xA8C2D4")]
	[IteratorStateMachine(typeof(<finalDelTunel>d__13))]
	private IEnumerator finalDelTunel()
	{
		return null;
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xA8BAEC", Offset = "0xA8BAEC", VA = "0xA8BAEC")]
	private void MueveElTargetPorElPath(int n)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xA8BE20", Offset = "0xA8BE20", VA = "0xA8BE20")]
	private void MueveteAlPuntoDelRecorrido(int n)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xA8C1D0", Offset = "0xA8C1D0", VA = "0xA8C1D0")]
	private float CalcularDistanciaTarget(int n)
	{
		return default(float);
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xA8C348", Offset = "0xA8C348", VA = "0xA8C348")]
	private float CalcularDistancia(int n)
	{
		return default(float);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xA8C454", Offset = "0xA8C454", VA = "0xA8C454")]
	[IteratorStateMachine(typeof(<DestroyThis>d__18))]
	private IEnumerator DestroyThis()
	{
		return null;
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xA8C4C8", Offset = "0xA8C4C8", VA = "0xA8C4C8")]
	public CambiarJugador()
	{
	}
}
[Token(Token = "0x20001CC")]
public class CargaMuseoSegunProgreso : MonoBehaviour
{
	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject renderGuanteD;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject renderGuanteI;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject A2;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject A3;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject A4;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject A5;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject A6;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject S2;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject S3;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject S4;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject S5;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject S6;

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xA8C878", Offset = "0xA8C878", VA = "0xA8C878")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xA8CE04", Offset = "0xA8CE04", VA = "0xA8CE04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xA8CE08", Offset = "0xA8CE08", VA = "0xA8CE08")]
	public CargaMuseoSegunProgreso()
	{
	}
}
[Token(Token = "0x20001CD")]
public class cargarJuego : MonoBehaviour
{
	[Token(Token = "0x20001CE")]
	[CompilerGenerated]
	private sealed class <reintetarCapturarMandos>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cargarJuego <>4__this;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xA8D824", Offset = "0xA8D824", VA = "0xA8D824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xA8D86C", Offset = "0xA8D86C", VA = "0xA8D86C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xA8CE84", Offset = "0xA8CE84", VA = "0xA8CE84")]
		[DebuggerHidden]
		public <reintetarCapturarMandos>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xA8D60C", Offset = "0xA8D60C", VA = "0xA8D60C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xA8D610", Offset = "0xA8D610", VA = "0xA8D610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xA8D82C", Offset = "0xA8D82C", VA = "0xA8D82C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool yaTengoLasTablasCargadas;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int reintentosFallidos;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textoLog;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textoWarning;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject flechaDelSuelo;

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xA8CE10", Offset = "0xA8CE10", VA = "0xA8CE10")]
	[IteratorStateMachine(typeof(<reintetarCapturarMandos>d__5))]
	private IEnumerator reintetarCapturarMandos()
	{
		return null;
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xA8CEAC", Offset = "0xA8CEAC", VA = "0xA8CEAC")]
	public void CargaDeTablasSteam(string[] tablas)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xA8D0A4", Offset = "0xA8D0A4", VA = "0xA8D0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xA8D604", Offset = "0xA8D604", VA = "0xA8D604")]
	public cargarJuego()
	{
	}
}
[Token(Token = "0x20001CF")]
public class chivatoZonaMuseo : MonoBehaviour
{
	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string zona;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public zonasDeMuseoManager managerDePuertas;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool vZonaBase;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool va2;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool va3;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool va4;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool va5;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool va6;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool vs2;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool vs3;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool vs4;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool vs5;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool vs6;

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xA8D874", Offset = "0xA8D874", VA = "0xA8D874")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xA8D878", Offset = "0xA8D878", VA = "0xA8D878")]
	private void ponerValoresPorDefectoSegunProgreso()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xA8D9E4", Offset = "0xA8D9E4", VA = "0xA8D9E4")]
	private bool estoyEnZonaProhibida()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xA8DBE8", Offset = "0xA8DBE8", VA = "0xA8DBE8")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xA8DC34", Offset = "0xA8DC34", VA = "0xA8DC34")]
	public chivatoZonaMuseo()
	{
	}
}
[Token(Token = "0x20001D0")]
public class colisionTelematic : MonoBehaviour
{
	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerSteam miGuante;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 puntoContacto;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xA8DC3C", Offset = "0xA8DC3C", VA = "0xA8DC3C")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xA8E26C", Offset = "0xA8E26C", VA = "0xA8E26C")]
	private void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xA8E370", Offset = "0xA8E370", VA = "0xA8E370")]
	public colisionTelematic()
	{
	}
}
[Token(Token = "0x20001D1")]
public class ComprobarPlayArea : MonoBehaviour
{
	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xA8E378", Offset = "0xA8E378", VA = "0xA8E378")]
	public int CalculaAyudaMinimaParaPoderJugar()
	{
		return default(int);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xA8E380", Offset = "0xA8E380", VA = "0xA8E380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xA8E3D8", Offset = "0xA8E3D8", VA = "0xA8E3D8")]
	public ComprobarPlayArea()
	{
	}
}
[Token(Token = "0x20001D2")]
public class ConfigurarParaOVR : MonoBehaviour
{
	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject manoIzda;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject manoDcha;

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xA8E3E0", Offset = "0xA8E3E0", VA = "0xA8E3E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xA8E418", Offset = "0xA8E418", VA = "0xA8E418")]
	public ConfigurarParaOVR()
	{
	}
}
[Token(Token = "0x20001D3")]
public class ControladorNolo : MonoBehaviour
{
	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xA8E420", Offset = "0xA8E420", VA = "0xA8E420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xA8E424", Offset = "0xA8E424", VA = "0xA8E424")]
	public ControladorNolo()
	{
	}
}
[Token(Token = "0x20001D4")]
public class ControlGuanteEnMuseo : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	[CompilerGenerated]
	private sealed class <DejarVolverACargar>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControlGuanteEnMuseo <>4__this;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0xA8FA14", Offset = "0xA8FA14", VA = "0xA8FA14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0xA8FA5C", Offset = "0xA8FA5C", VA = "0xA8FA5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xA8EB88", Offset = "0xA8EB88", VA = "0xA8EB88")]
		[DebuggerHidden]
		public <DejarVolverACargar>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xA8F95C", Offset = "0xA8F95C", VA = "0xA8F95C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xA8F960", Offset = "0xA8F960", VA = "0xA8F960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xA8FA1C", Offset = "0xA8FA1C", VA = "0xA8FA1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D6")]
	[CompilerGenerated]
	private sealed class <CargarEscena>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scena1;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string scena2;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0xA8FC40", Offset = "0xA8FC40", VA = "0xA8FC40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0xA8FC88", Offset = "0xA8FC88", VA = "0xA8FC88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xA8F68C", Offset = "0xA8F68C", VA = "0xA8F68C")]
		[DebuggerHidden]
		public <CargarEscena>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xA8FA64", Offset = "0xA8FA64", VA = "0xA8FA64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xA8FA68", Offset = "0xA8FA68", VA = "0xA8FA68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xA8FC48", Offset = "0xA8FC48", VA = "0xA8FC48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public zonasDeMuseoManager managerDePuertas;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool yaEstoyCargando;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool der;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool primaryButton;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xA8E42C", Offset = "0xA8E42C", VA = "0xA8E42C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xA8E658", Offset = "0xA8E658", VA = "0xA8E658")]
	private void EstadoIdle()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xA8E7A4", Offset = "0xA8E7A4", VA = "0xA8E7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xA8E940", Offset = "0xA8E940", VA = "0xA8E940")]
	private float GetTrigger()
	{
		return default(float);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xA8E9DC", Offset = "0xA8E9DC", VA = "0xA8E9DC")]
	private float GetGrip()
	{
		return default(float);
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xA8EA78", Offset = "0xA8EA78", VA = "0xA8EA78")]
	private bool GetPrimaryButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xA8EB14", Offset = "0xA8EB14", VA = "0xA8EB14")]
	[IteratorStateMachine(typeof(<DejarVolverACargar>d__11))]
	private IEnumerator DejarVolverACargar()
	{
		return null;
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xA8EBB0", Offset = "0xA8EBB0", VA = "0xA8EBB0")]
	public void CargaDeTablaNoBasica(string nombreTabla)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xA8EBB4", Offset = "0xA8EBB4", VA = "0xA8EBB4")]
	public void EjecutarBoton(int iNumNivel)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xA8F430", Offset = "0xA8F430", VA = "0xA8F430")]
	[IteratorStateMachine(typeof(<CargarEscena>d__14))]
	private IEnumerator CargarEscena(string scena1, string scena2)
	{
		return null;
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xA8F6B4", Offset = "0xA8F6B4", VA = "0xA8F6B4")]
	public void PosiblePulsacionEnBoton(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xA8F820", Offset = "0xA8F820", VA = "0xA8F820")]
	private void PulsacionEnBotonMenu(object sender)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xA8F94C", Offset = "0xA8F94C", VA = "0xA8F94C")]
	public ControlGuanteEnMuseo()
	{
	}
}
[Token(Token = "0x20001D7")]
public class ControlGuanteEnSettings : MonoBehaviour
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public botonSettingsPadre botonSettingsPadre;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ponerSettingsEnTV ponerSettingsEnTV;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeCoolDown;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xA8FC90", Offset = "0xA8FC90", VA = "0xA8FC90")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xA8FC94", Offset = "0xA8FC94", VA = "0xA8FC94")]
	private void OnTriggerExit(Collider item)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xA8FC98", Offset = "0xA8FC98", VA = "0xA8FC98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xA8FE88", Offset = "0xA8FE88", VA = "0xA8FE88")]
	private void advertenciaDeTamanyoInvalido()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xA8FEA4", Offset = "0xA8FEA4", VA = "0xA8FEA4")]
	private void advertenciaDePuertos()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xA8FEC0", Offset = "0xA8FEC0", VA = "0xA8FEC0")]
	private void PosiblePulsacionEnBoton(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xA90328", Offset = "0xA90328", VA = "0xA90328")]
	private void Salir()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xA90500", Offset = "0xA90500", VA = "0xA90500")]
	public ControlGuanteEnSettings()
	{
	}
}
[Token(Token = "0x20001D8")]
public class ControllerSteam : MonoBehaviour
{
	[Token(Token = "0x20001D9")]
	[CompilerGenerated]
	private sealed class <dejarVolverACoger>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject pelota;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xA9393C", Offset = "0xA9393C", VA = "0xA9393C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0xA93984", Offset = "0xA93984", VA = "0xA93984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xA92B9C", Offset = "0xA92B9C", VA = "0xA92B9C")]
		[DebuggerHidden]
		public <dejarVolverACoger>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xA937D4", Offset = "0xA937D4", VA = "0xA937D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xA937D8", Offset = "0xA937D8", VA = "0xA937D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xA93944", Offset = "0xA93944", VA = "0xA93944", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DA")]
	[CompilerGenerated]
	private sealed class <DestruirPelotaPorTocarConManosSiendoLanzador>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xA93AD0", Offset = "0xA93AD0", VA = "0xA93AD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0xA93B18", Offset = "0xA93B18", VA = "0xA93B18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xA92C24", Offset = "0xA92C24", VA = "0xA92C24")]
		[DebuggerHidden]
		public <DestruirPelotaPorTocarConManosSiendoLanzador>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xA9398C", Offset = "0xA9398C", VA = "0xA9398C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xA93990", Offset = "0xA93990", VA = "0xA93990", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xA93AD8", Offset = "0xA93AD8", VA = "0xA93AD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject pelotaCercanaAlGuante;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pelotaAtrapadaPorEsteGuante;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> pelotasCercanasAlGuante;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool izquierda;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float valorGatilloAnterior;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int deviceIndex;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator animator;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float distanciaEntreGuantesLimite;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Rigidbody puntoAnclajeNormal;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody puntoAnclajeTennis;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody puntoAnclajePlaya;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int mandoVibrando;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FixedJoint joint;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float potenciaDeMiMano;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform handAnchor;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool oldPrimary;

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xA90508", Offset = "0xA90508", VA = "0xA90508")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xA9050C", Offset = "0xA9050C", VA = "0xA9050C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xA90664", Offset = "0xA90664", VA = "0xA90664")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xA90668", Offset = "0xA90668", VA = "0xA90668")]
	private void GetInput()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xA910BC", Offset = "0xA910BC", VA = "0xA910BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xA8E180", Offset = "0xA8E180", VA = "0xA8E180")]
	public Vector3 DameVelocidadMovimiento()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xA912A8", Offset = "0xA912A8", VA = "0xA912A8")]
	public void ponerColliderGuanteSegunDificultad(float dificultad)
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xA91148", Offset = "0xA91148", VA = "0xA91148")]
	private void volverAestadoIdle()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xA906AC", Offset = "0xA906AC", VA = "0xA906AC")]
	private void ControlesInGame()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xA91A60", Offset = "0xA91A60", VA = "0xA91A60")]
	private float GetTrigger(bool izq)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xA91AF8", Offset = "0xA91AF8", VA = "0xA91AF8")]
	private float GetGrip(bool izq)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xA92780", Offset = "0xA92780", VA = "0xA92780")]
	private Vector3 GetVelocidadMando(bool izq)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xA92890", Offset = "0xA92890", VA = "0xA92890")]
	private Vector3 GetVelocidadAngularMando(bool izq)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xA91930", Offset = "0xA91930", VA = "0xA91930")]
	private bool GetPrimaryButton(bool izqu)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xA919C8", Offset = "0xA919C8", VA = "0xA919C8")]
	private bool GetSecondaryButton(bool izqu)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xA9296C", Offset = "0xA9296C", VA = "0xA9296C")]
	private void IniciarOCancelarCalibracionPorPulsarBotonMenuEnModoShooter()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xA8E0D4", Offset = "0xA8E0D4", VA = "0xA8E0D4")]
	public void ActivarVibracion()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xA92B28", Offset = "0xA92B28", VA = "0xA92B28")]
	[IteratorStateMachine(typeof(<dejarVolverACoger>d__33))]
	private IEnumerator dejarVolverACoger(GameObject pelota)
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xA9139C", Offset = "0xA9139C", VA = "0xA9139C")]
	public bool SoltarBalonSiPuedo(bool modoForzadoInstant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xA91B90", Offset = "0xA91B90", VA = "0xA91B90")]
	private bool AtraparBalonSiPuedo(bool darPremioChachiSiHaceFalta)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xA92BC4", Offset = "0xA92BC4", VA = "0xA92BC4")]
	[IteratorStateMachine(typeof(<DestruirPelotaPorTocarConManosSiendoLanzador>d__36))]
	private IEnumerator DestruirPelotaPorTocarConManosSiendoLanzador()
	{
		return null;
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xA92C4C", Offset = "0xA92C4C", VA = "0xA92C4C")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xA934E0", Offset = "0xA934E0", VA = "0xA934E0")]
	private void OnTriggerExit(Collider item)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xA93734", Offset = "0xA93734", VA = "0xA93734")]
	public ControllerSteam()
	{
	}
}
[Token(Token = "0x20001DB")]
public class ControlMandoMuseo : MonoBehaviour
{
	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public zonasDeMuseoManager managerDePuertas;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bloqueOculus;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pantallaNegra;

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xA93B20", Offset = "0xA93B20", VA = "0xA93B20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xA94708", Offset = "0xA94708", VA = "0xA94708")]
	private void QuitarPantallaNegra()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xA9478C", Offset = "0xA9478C", VA = "0xA9478C")]
	private void DoTeleport(object sender)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xA9484C", Offset = "0xA9484C", VA = "0xA9484C")]
	public ControlMandoMuseo()
	{
	}
}
[Token(Token = "0x20001DC")]
public class copasMuseo : MonoBehaviour
{
	[Token(Token = "0x20001DD")]
	[CompilerGenerated]
	private sealed class <VolverADejarCelebracion>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public copasMuseo <>4__this;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0xA9543C", Offset = "0xA9543C", VA = "0xA9543C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0xA95484", Offset = "0xA95484", VA = "0xA95484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xA948C8", Offset = "0xA948C8", VA = "0xA948C8")]
		[DebuggerHidden]
		public <VolverADejarCelebracion>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xA95380", Offset = "0xA95380", VA = "0xA95380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xA95384", Offset = "0xA95384", VA = "0xA95384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xA95444", Offset = "0xA95444", VA = "0xA95444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DE")]
	[CompilerGenerated]
	private sealed class <efectoConfetiTimer>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float retardo;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject efectoPowerUpCogido;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 sitio;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xA95608", Offset = "0xA95608", VA = "0xA95608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xA95650", Offset = "0xA95650", VA = "0xA95650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xA94990", Offset = "0xA94990", VA = "0xA94990")]
		[DebuggerHidden]
		public <efectoConfetiTimer>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xA9548C", Offset = "0xA9548C", VA = "0xA9548C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xA95490", Offset = "0xA95490", VA = "0xA95490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xA95610", Offset = "0xA95610", VA = "0xA95610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject efectoConfetiRecord;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool puedoReproducirSonidos;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool puedoReproducirCelebracion;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject camaraVR;

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xA94854", Offset = "0xA94854", VA = "0xA94854")]
	[IteratorStateMachine(typeof(<VolverADejarCelebracion>d__4))]
	private IEnumerator VolverADejarCelebracion()
	{
		return null;
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xA948F0", Offset = "0xA948F0", VA = "0xA948F0")]
	[IteratorStateMachine(typeof(<efectoConfetiTimer>d__5))]
	private IEnumerator efectoConfetiTimer(GameObject efectoPowerUpCogido, Vector3 sitio, float retardo)
	{
		return null;
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xA949B8", Offset = "0xA949B8", VA = "0xA949B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xA94B20", Offset = "0xA94B20", VA = "0xA94B20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xA94FAC", Offset = "0xA94FAC", VA = "0xA94FAC")]
	private void OnCollisionEnter(Collision item)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xA95370", Offset = "0xA95370", VA = "0xA95370")]
	public copasMuseo()
	{
	}
}
[Token(Token = "0x20001DF")]
public class DesactivarGuanteSiEsNecesario : MonoBehaviour
{
	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xA95658", Offset = "0xA95658", VA = "0xA95658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xA9565C", Offset = "0xA9565C", VA = "0xA9565C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xA95660", Offset = "0xA95660", VA = "0xA95660")]
	public void ActivadoManualModeloGuante()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xA95684", Offset = "0xA95684", VA = "0xA95684")]
	public void DesactivadoManualModeloGuante()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xA956A8", Offset = "0xA956A8", VA = "0xA956A8")]
	public DesactivarGuanteSiEsNecesario()
	{
	}
}
[Token(Token = "0x20001E0")]
public class DianaArcade : MonoBehaviour
{
	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameManager.TipoPoderes tipoPoderDeEstaDiana;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool dianaSacada;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text textoDiana;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject iconoGuantes;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject iconoPelotaGrande;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject iconoModoGigante;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject iconoPelotaPequenya;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject iconoMuroVirtual;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject iconoVidaExtra;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject iconoMultiBallMatrix;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject powerup_arrows;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject efectoPowerUpCogido;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject efectoPowerUpMuroCogido;

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xA956B0", Offset = "0xA956B0", VA = "0xA956B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xA956B4", Offset = "0xA956B4", VA = "0xA956B4")]
	public void sorteoTipoDiana()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xA95B28", Offset = "0xA95B28", VA = "0xA95B28")]
	public void ocultarDiana()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xA95C68", Offset = "0xA95C68", VA = "0xA95C68")]
	public void ejecutarMiPowerUp()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xA95EC0", Offset = "0xA95EC0", VA = "0xA95EC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xA95EC4", Offset = "0xA95EC4", VA = "0xA95EC4")]
	public DianaArcade()
	{
	}
}
[Token(Token = "0x20001E1")]
public class EncendedorCamaraOVR : MonoBehaviour
{
	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool nostalgia;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform laser;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform posicionPlayer;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 posIni;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 rotIni;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xA95ECC", Offset = "0xA95ECC", VA = "0xA95ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xA95ED0", Offset = "0xA95ED0", VA = "0xA95ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xA95ED4", Offset = "0xA95ED4", VA = "0xA95ED4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xA95F78", Offset = "0xA95F78", VA = "0xA95F78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xA960F4", Offset = "0xA960F4", VA = "0xA960F4")]
	private void OnLevelFinishedLoading(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xA96304", Offset = "0xA96304", VA = "0xA96304")]
	public EncendedorCamaraOVR()
	{
	}
}
[Token(Token = "0x20001E2")]
public class EncenderColliders : MonoBehaviour
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] botones;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xA9630C", Offset = "0xA9630C", VA = "0xA9630C")]
	public string AjustarLongitud(string texto)
	{
		return null;
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xA96398", Offset = "0xA96398", VA = "0xA96398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xA96728", Offset = "0xA96728", VA = "0xA96728")]
	public void EncenderCollider()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xA9678C", Offset = "0xA9678C", VA = "0xA9678C")]
	public EncenderColliders()
	{
	}
}
[Token(Token = "0x20001E3")]
public class EventsPlayer : MonoBehaviour
{
	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pelota;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject target;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject newTarget;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xA96794", Offset = "0xA96794", VA = "0xA96794")]
	public void HideBall()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xA96814", Offset = "0xA96814", VA = "0xA96814")]
	public void RetargetPlayer()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xA9697C", Offset = "0xA9697C", VA = "0xA9697C")]
	public EventsPlayer()
	{
	}
}
[Token(Token = "0x20001E4")]
public class FadeEscena : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	private enum EstadoFade
	{
		[Token(Token = "0x4000D42")]
		idle,
		[Token(Token = "0x4000D43")]
		fadeIn,
		[Token(Token = "0x4000D44")]
		fadeOut
	}

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EstadoFade estadoFade;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duracionFade;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float delayInicial;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeInicioFade;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AnimationCurve curvaFade;

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xA96984", Offset = "0xA96984", VA = "0xA96984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xA96988", Offset = "0xA96988", VA = "0xA96988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xA96A58", Offset = "0xA96A58", VA = "0xA96A58")]
	[ContextMenu("FadeInBlack")]
	public void TestFadeInBlack()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xA96ABC", Offset = "0xA96ABC", VA = "0xA96ABC")]
	[ContextMenu("FadeOutBlack")]
	public void TestFadeOutBlack()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xA96A8C", Offset = "0xA96A8C", VA = "0xA96A8C")]
	public void FadeInBlack(float duracionFadeIn)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xA96ACC", Offset = "0xA96ACC", VA = "0xA96ACC")]
	public void FadeOutBlack(float duracionFadeOut, float delayInicial, AnimationCurve curvaFade)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xA96B48", Offset = "0xA96B48", VA = "0xA96B48")]
	public FadeEscena()
	{
	}
}
[Token(Token = "0x20001E6")]
public class fgEmoji : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[CompilerGenerated]
	private sealed class <destruyeEnUnSegundoYedio>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject objeto;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0xA970A4", Offset = "0xA970A4", VA = "0xA970A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0xA970EC", Offset = "0xA970EC", VA = "0xA970EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xA96BC4", Offset = "0xA96BC4", VA = "0xA96BC4")]
		[DebuggerHidden]
		public <destruyeEnUnSegundoYedio>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xA96FCC", Offset = "0xA96FCC", VA = "0xA96FCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xA96FD0", Offset = "0xA96FD0", VA = "0xA96FD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xA970AC", Offset = "0xA970AC", VA = "0xA970AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture[] texturas;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color colorActual;

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xA96B50", Offset = "0xA96B50", VA = "0xA96B50")]
	[IteratorStateMachine(typeof(<destruyeEnUnSegundoYedio>d__2))]
	private IEnumerator destruyeEnUnSegundoYedio(GameObject objeto)
	{
		return null;
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xA96BEC", Offset = "0xA96BEC", VA = "0xA96BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xA96C58", Offset = "0xA96C58", VA = "0xA96C58")]
	public void ponerEmoji(int iNumeroEmoji)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xA96D00", Offset = "0xA96D00", VA = "0xA96D00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xA96FBC", Offset = "0xA96FBC", VA = "0xA96FBC")]
	public fgEmoji()
	{
	}
}
[Token(Token = "0x20001E8")]
public class FlagController : MonoBehaviour
{
	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_minSpeed;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_maxSpeed;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_minScale;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_maxScale;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] m_materials;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator m_animator;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer m_meshRenderer;

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xA970F4", Offset = "0xA970F4", VA = "0xA970F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xA971E8", Offset = "0xA971E8", VA = "0xA971E8")]
	public FlagController()
	{
	}
}
[Token(Token = "0x20001E9")]
public class FlatShadows : MonoBehaviour
{
	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useThisCameraAsOrientation;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string transformObjectNameToCopyOrientation;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform transformToCopyOrientation;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform transformToFollowPositionXZ;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform secondTransformToFollowPositionXZ;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 planeNormalToProject;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float planeOffsetToProject;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distance;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool updateOrientationOnlyFirstFrame;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool firstPreRender;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 positionOffset;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Mesh mesh;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Plane groundPlane;

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xA971FC", Offset = "0xA971FC", VA = "0xA971FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xA97200", Offset = "0xA97200", VA = "0xA97200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xA97204", Offset = "0xA97204", VA = "0xA97204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xA97208", Offset = "0xA97208", VA = "0xA97208")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xA9720C", Offset = "0xA9720C", VA = "0xA9720C")]
	private void SetOrientation()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xA97210", Offset = "0xA97210", VA = "0xA97210")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xA97214", Offset = "0xA97214", VA = "0xA97214")]
	public FlatShadows()
	{
	}
}
[Token(Token = "0x20001EA")]
public class FlatShadowsPlayer : MonoBehaviour
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlatShadows[] shadows;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xA97238", Offset = "0xA97238", VA = "0xA97238")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xA973A0", Offset = "0xA973A0", VA = "0xA973A0")]
	public FlatShadowsPlayer()
	{
	}
}
[Token(Token = "0x20001EB")]
public class FollowPelotaRed : MonoBehaviour
{
	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xA973A8", Offset = "0xA973A8", VA = "0xA973A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xA97450", Offset = "0xA97450", VA = "0xA97450")]
	private void OnCollisionEnter(Collision item)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xA97550", Offset = "0xA97550", VA = "0xA97550")]
	public FollowPelotaRed()
	{
	}
}
[Token(Token = "0x20001EC")]
public class gestionarPuertaMuseo : MonoBehaviour
{
	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject puerta;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int nivelRequerido;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public InitGame.ModosDeJuego modoDeJuego;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool estaTotalmenteCerrada;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public zonasDeMuseoManager zonaManager;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 posicionInicial;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float valorDeseado;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool bPuertaBloqueada;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool bEstoyCerrando;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int muteoForzado;

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xA97558", Offset = "0xA97558", VA = "0xA97558")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xA97668", Offset = "0xA97668", VA = "0xA97668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xA978E4", Offset = "0xA978E4", VA = "0xA978E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xA97A1C", Offset = "0xA97A1C", VA = "0xA97A1C")]
	private void OnTriggerExit()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xA97B54", Offset = "0xA97B54", VA = "0xA97B54")]
	public gestionarPuertaMuseo()
	{
	}
}
[Token(Token = "0x20001ED")]
public class HairController : MonoBehaviour
{
	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool iniciarConPelo;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset playerLooksData;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject oldHair;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> hairNames;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<float> colorFloats;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color[] hairColors;

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xA97B70", Offset = "0xA97B70", VA = "0xA97B70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xA97F74", Offset = "0xA97F74", VA = "0xA97F74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xA97B80", Offset = "0xA97B80", VA = "0xA97B80")]
	public void CambiarPelo()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xA97F78", Offset = "0xA97F78", VA = "0xA97F78")]
	public void CambiarPelo(int id)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xA986D8", Offset = "0xA986D8", VA = "0xA986D8")]
	public void PonerCalvo()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xA985F0", Offset = "0xA985F0", VA = "0xA985F0")]
	private Color ComputeColorFromFloat(float colFloat, Color[] colorArray)
	{
		return default(Color);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xA98768", Offset = "0xA98768", VA = "0xA98768")]
	private string GetHairNameByID(int id)
	{
		return null;
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xA98518", Offset = "0xA98518", VA = "0xA98518")]
	private float GetHairColorByID(int id)
	{
		return default(float);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xA982D0", Offset = "0xA982D0", VA = "0xA982D0")]
	private void GetHairFromJsonLooks(TextAsset data)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xA9892C", Offset = "0xA9892C", VA = "0xA9892C")]
	public HairController()
	{
	}
}
[Token(Token = "0x20001EE")]
public class IgnorarTeleport : MonoBehaviour
{
	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xA98A8C", Offset = "0xA98A8C", VA = "0xA98A8C")]
	public IgnorarTeleport()
	{
	}
}
[Token(Token = "0x20001EF")]
public class InitGame : MonoBehaviour
{
	[Token(Token = "0x20001F0")]
	public enum TipoViveVsVive
	{
		[Token(Token = "0x4000DC2")]
		LAN,
		[Token(Token = "0x4000DC3")]
		online
	}

	[Token(Token = "0x20001F1")]
	public enum ModoCarga
	{
		[Token(Token = "0x4000DC5")]
		Normal,
		[Token(Token = "0x4000DC6")]
		SinHistoria,
		[Token(Token = "0x4000DC7")]
		SoloArcade,
		[Token(Token = "0x4000DC8")]
		SoloSimulador
	}

	[Token(Token = "0x20001F2")]
	public enum EsceneType
	{
		[Token(Token = "0x4000DCA")]
		MainMenu,
		[Token(Token = "0x4000DCB")]
		ModoSimulator,
		[Token(Token = "0x4000DCC")]
		ModoMuseo,
		[Token(Token = "0x4000DCD")]
		ModoArcade,
		[Token(Token = "0x4000DCE")]
		DebugChutes,
		[Token(Token = "0x4000DCF")]
		Settings,
		[Token(Token = "0x4000DD0")]
		ModoMultiplayer,
		[Token(Token = "0x4000DD1")]
		ModoShooter,
		[Token(Token = "0x4000DD2")]
		ModoNostalgia
	}

	[Token(Token = "0x20001F3")]
	public enum ModosDeJuego
	{
		[Token(Token = "0x4000DD4")]
		ModoSimulator,
		[Token(Token = "0x4000DD5")]
		ModoMuseo,
		[Token(Token = "0x4000DD6")]
		ModoArcade,
		[Token(Token = "0x4000DD7")]
		ModoDebugChutes,
		[Token(Token = "0x4000DD8")]
		Nada,
		[Token(Token = "0x4000DD9")]
		Settings,
		[Token(Token = "0x4000DDA")]
		ModoMultiplayer,
		[Token(Token = "0x4000DDB")]
		ModoShooter,
		[Token(Token = "0x4000DDC")]
		ModoNostalgia
	}

	[Token(Token = "0x20001F4")]
	public enum TipoMision
	{
		[Token(Token = "0x4000DDE")]
		SinMision,
		[Token(Token = "0x4000DDF")]
		misionSimulator,
		[Token(Token = "0x4000DE0")]
		misionArcade
	}

	[Token(Token = "0x20001F5")]
	public enum SubtipoShooter
	{
		[Token(Token = "0x4000DE2")]
		entrenamiento,
		[Token(Token = "0x4000DE3")]
		LAN,
		[Token(Token = "0x4000DE4")]
		ninguno
	}

	[Token(Token = "0x20001F6")]
	public class TournamentPlayer
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerLookId;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string playerName;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xA9AC64", Offset = "0xA9AC64", VA = "0xA9AC64")]
		public TournamentPlayer()
		{
		}
	}

	[Token(Token = "0x20001F7")]
	public class TournamentMatch
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int opponentClothesItemId;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int opponentGoalkeeperClothesItemId;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TournamentPlayer[] players;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xA9AC5C", Offset = "0xA9AC5C", VA = "0xA9AC5C")]
		public TournamentMatch()
		{
		}
	}

	[Token(Token = "0x20001F8")]
	public class OfflineTournament
	{
		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string literalName;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TournamentMatch[] matches;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xA9AC54", Offset = "0xA9AC54", VA = "0xA9AC54")]
		public OfflineTournament()
		{
		}
	}

	[Token(Token = "0x20001F9")]
	[CompilerGenerated]
	private sealed class <EncenderCamaraEnUnPlis>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitGame <>4__this;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <goCamaraOculus>5__2;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera <camaraOculus>5__3;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xA9B1A4", Offset = "0xA9B1A4", VA = "0xA9B1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xA9B1EC", Offset = "0xA9B1EC", VA = "0xA9B1EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xA994B4", Offset = "0xA994B4", VA = "0xA994B4")]
		[DebuggerHidden]
		public <EncenderCamaraEnUnPlis>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xA9ADCC", Offset = "0xA9ADCC", VA = "0xA9ADCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xA9ADD0", Offset = "0xA9ADD0", VA = "0xA9ADD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xA9B1AC", Offset = "0xA9B1AC", VA = "0xA9B1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FA")]
	[CompilerGenerated]
	private sealed class <ActivarCamaraConDelay>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitGame <>4__this;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xA9B2EC", Offset = "0xA9B2EC", VA = "0xA9B2EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xA9B334", Offset = "0xA9B334", VA = "0xA9B334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xA99550", Offset = "0xA99550", VA = "0xA99550")]
		[DebuggerHidden]
		public <ActivarCamaraConDelay>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xA9B1F4", Offset = "0xA9B1F4", VA = "0xA9B1F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xA9B1F8", Offset = "0xA9B1F8", VA = "0xA9B1F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xA9B2F4", Offset = "0xA9B2F4", VA = "0xA9B2F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	[CompilerGenerated]
	private sealed class <ReactivarCamaraDelayed>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitGame <>4__this;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0xA9B554", Offset = "0xA9B554", VA = "0xA9B554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xA9B59C", Offset = "0xA9B59C", VA = "0xA9B59C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xA995EC", Offset = "0xA995EC", VA = "0xA995EC")]
		[DebuggerHidden]
		public <ReactivarCamaraDelayed>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xA9B33C", Offset = "0xA9B33C", VA = "0xA9B33C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xA9B340", Offset = "0xA9B340", VA = "0xA9B340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xA9B55C", Offset = "0xA9B55C", VA = "0xA9B55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[CompilerGenerated]
	private sealed class <CargarEscenaSinCamaraCompartida2>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitGame <>4__this;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string nombreEscena;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xA9B758", Offset = "0xA9B758", VA = "0xA9B758", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xA9B7A0", Offset = "0xA9B7A0", VA = "0xA9B7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xA996A4", Offset = "0xA996A4", VA = "0xA996A4")]
		[DebuggerHidden]
		public <CargarEscenaSinCamaraCompartida2>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xA9B5A4", Offset = "0xA9B5A4", VA = "0xA9B5A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xA9B5A8", Offset = "0xA9B5A8", VA = "0xA9B5A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xA9B760", Offset = "0xA9B760", VA = "0xA9B760", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[CompilerGenerated]
	private sealed class <DestroySonidoAlFinalizar>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource objetoSonido;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float miDelay;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xA9B8E0", Offset = "0xA9B8E0", VA = "0xA9B8E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xA9B928", Offset = "0xA9B928", VA = "0xA9B928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xA998B0", Offset = "0xA998B0", VA = "0xA998B0")]
		[DebuggerHidden]
		public <DestroySonidoAlFinalizar>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xA9B7A8", Offset = "0xA9B7A8", VA = "0xA9B7A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xA9B7AC", Offset = "0xA9B7AC", VA = "0xA9B7AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xA9B8E8", Offset = "0xA9B8E8", VA = "0xA9B8E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[CompilerGenerated]
	private sealed class <CargarEscena>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitGame <>4__this;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera <camaraOculus>5__2;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xA9BDE8", Offset = "0xA9BDE8", VA = "0xA9BDE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xA9BE30", Offset = "0xA9BE30", VA = "0xA9BE30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xA9AC6C", Offset = "0xA9AC6C", VA = "0xA9AC6C")]
		[DebuggerHidden]
		public <CargarEscena>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xA9B930", Offset = "0xA9B930", VA = "0xA9B930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xA9B934", Offset = "0xA9B934", VA = "0xA9B934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xA9BDF0", Offset = "0xA9BDF0", VA = "0xA9BDF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InitGame instance;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string IPlocalForzada;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IPlocalForzadaSoyHost;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefabOculus;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject sonido3D;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ControlGuanteEnMuseo cGuanteMuseoDer;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ControlGuanteEnMuseo cGuanteMuseoIzq;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TipoViveVsVive tipoViveVsVive;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ModoCarga modoCarga;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int iDebugMaxNivelArcade;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int iDebugMaxNivelSimulacion;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool bDebugTodosNivelesAbiertos;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameManager.TipoPoderes bDebugForzarPowerup;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool bDebugGrabacionVideo;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string escenaStadium;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string escenaNostalgia;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture guanteUSA_L;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture guanteUSA_R;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public EsceneType tipoEscena;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public ModosDeJuego modoJuego;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public GameObject cameraVR;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextAsset datosFinalGoalie;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public OfflineTournament[] offlineTournaments;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public OfflineTournament datosTorneoActual;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool pelotaCogidaPorDobleGuante;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public NivelesSimulator.GoalieMissionSimulator misionSimulator;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public NivelesArcade.GoalieMissionArcade misionArcade;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TipoMision tipoMision;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int ayudaMinimaParaPoderJugar;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int nivelDondeTengoLaMano;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public ModosDeJuego nivelDondeTengoLaManoTipo;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool RenderizarMuseoBase;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool RenderizarMuseoA2;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	public bool RenderizarMuseoA3;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	public bool RenderizarMuseoA4;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool RenderizarMuseoA5;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	public bool RenderizarMuseoA6;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
	public bool RenderizarMuseoS2;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
	public bool RenderizarMuseoS3;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool RenderizarMuseoS4;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	public bool RenderizarMuseoS5;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	public bool RenderizarMuseoS6;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float rotInicial;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LandingSpot[] landingSpots;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public LayerMask nothingLayerMask;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public LayerMask everythingLayerMask;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public bool pieDerechoCalibrado;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[HideInInspector]
	public bool pieIzquierdoCalibrado;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public GameObject botaDerechaActual;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public GameObject botaIzquierdaActual;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SubtipoShooter subtipoShooter;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool modoShooterLAN;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject objCogido;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float timeObjCogido;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool estoyEnSalaCalibracion;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject modeloJuegoManoDcha;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject modeloJuegoManoIzda;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject sensorManoDcha;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject sensorManoIzda;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject sensorPieDcho;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject sensorPieIzdo;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject sensorTorso;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject helperCalibradoSensorManoDcha;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject helperCalibradoSensorManoIzda;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject helperCalibradoSensorPieDcho;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject helperCalibradoSensorPieIzdo;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject helperCalibradoSensorTorso;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public bool manoPieDerechoUsado;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	[HideInInspector]
	public bool manoPieIzquierdoUsado;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public RevisarOrientacionZonaDeJuego revisarOrientacion;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public bool puedoCalibrarJuego;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
	public bool partidaLan;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public MensajeMatchmaking datosMatchmaking;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject[] arraySensoresInteligentes;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int valorSettingsAyudaChute;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform hipDelIK;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[HideInInspector]
	public bool demoComprada;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[HideInInspector]
	public string precioJuego;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[HideInInspector]
	public bool ensenyarMensajePro;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[HideInInspector]
	public PXR_Manager pxrManager;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private List<string> tournamentNames;

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xA98A94", Offset = "0xA98A94", VA = "0xA98A94")]
	public void ApagarUnMomentitoSensoresParaSolucionarPosibleProblemaPieFantasmal()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xA98AF8", Offset = "0xA98AF8", VA = "0xA98AF8")]
	public void PonerZonaDeJuegoEnModoCalibrar()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xA98D08", Offset = "0xA98D08", VA = "0xA98D08")]
	public void PonerZonaDeJuegoEnModoJuegoClasico()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xA98F10", Offset = "0xA98F10", VA = "0xA98F10")]
	public void PonerZonaDeJuegoEnModoNostalgia()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xA990DC", Offset = "0xA990DC", VA = "0xA990DC")]
	public void PonerZonaDeJuegoEnModoJuego()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xA991CC", Offset = "0xA991CC", VA = "0xA991CC")]
	public void ReactivarPiesSiEsNecesario()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xA9934C", Offset = "0xA9934C", VA = "0xA9934C")]
	public bool TengoAlmenosUnPieCalibrado()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xA9936C", Offset = "0xA9936C", VA = "0xA9936C")]
	public void ApagarCamaraSiEsNecesario()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xA99440", Offset = "0xA99440", VA = "0xA99440")]
	[IteratorStateMachine(typeof(<EncenderCamaraEnUnPlis>d__94))]
	private IEnumerator EncenderCamaraEnUnPlis()
	{
		return null;
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xA962E4", Offset = "0xA962E4", VA = "0xA962E4")]
	public void EncenderCamara()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xA994DC", Offset = "0xA994DC", VA = "0xA994DC")]
	[IteratorStateMachine(typeof(<ActivarCamaraConDelay>d__96))]
	private IEnumerator ActivarCamaraConDelay()
	{
		return null;
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xA99578", Offset = "0xA99578", VA = "0xA99578")]
	[IteratorStateMachine(typeof(<ReactivarCamaraDelayed>d__97))]
	private IEnumerator ReactivarCamaraDelayed()
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xA99614", Offset = "0xA99614", VA = "0xA99614")]
	[IteratorStateMachine(typeof(<CargarEscenaSinCamaraCompartida2>d__98))]
	private IEnumerator CargarEscenaSinCamaraCompartida2(string nombreEscena)
	{
		return null;
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xA8F3F4", Offset = "0xA8F3F4", VA = "0xA8F3F4")]
	public void CargarEscenaSinCamaraCompartida(string nombreEscena)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xA8F664", Offset = "0xA8F664", VA = "0xA8F664")]
	public void ReactivarCamara()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xA996CC", Offset = "0xA996CC", VA = "0xA996CC")]
	public void buscarLandingSpots()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xA99744", Offset = "0xA99744", VA = "0xA99744")]
	public string sorteoDeEscenaEstadiumSinAsignar()
	{
		return null;
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xA997CC", Offset = "0xA997CC", VA = "0xA997CC")]
	public void sorteoDeEscenaEstadium()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xA8F42C", Offset = "0xA8F42C", VA = "0xA8F42C")]
	public void PonerCapasParaInGame(bool inGame)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xA95218", Offset = "0xA95218", VA = "0xA95218")]
	public void reproduceSonido3D(string nombreSonido, Vector3 donde, float volumen, float miDelay = 0f)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xA9982C", Offset = "0xA9982C", VA = "0xA9982C")]
	[IteratorStateMachine(typeof(<DestroySonidoAlFinalizar>d__106))]
	private IEnumerator DestroySonidoAlFinalizar(AudioSource objetoSonido, float miDelay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xA8F2D0", Offset = "0xA8F2D0", VA = "0xA8F2D0")]
	public void reproduceSonido(string nombreSonido, float volumen = 1f, float miDelay = 0f)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xA998D8", Offset = "0xA998D8", VA = "0xA998D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xA9A024", Offset = "0xA9A024", VA = "0xA9A024")]
	public void AjustarAlturaAsistida(int altura)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xA93F74", Offset = "0xA93F74", VA = "0xA93F74")]
	public void personalizarGuanteSegunEquipo(int nivel)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xA8F4C0", Offset = "0xA8F4C0", VA = "0xA8F4C0")]
	public void rotarSiTenemosFicheroDebug()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xA999DC", Offset = "0xA999DC", VA = "0xA999DC")]
	private void Inicializar()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xA9AAB4", Offset = "0xA9AAB4", VA = "0xA9AAB4")]
	private void BuscarEfectos()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xA9A074", Offset = "0xA9A074", VA = "0xA9A074")]
	private void InicializarDatosFinalGoalie(TextAsset data)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xA9AA40", Offset = "0xA9AA40", VA = "0xA9AA40")]
	[IteratorStateMachine(typeof(<CargarEscena>d__119))]
	private IEnumerator CargarEscena()
	{
		return null;
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xA9AC94", Offset = "0xA9AC94", VA = "0xA9AC94")]
	public InitGame()
	{
	}
}
[Token(Token = "0x20001FF")]
public class PintarPlayer : MonoBehaviour
{
	[Token(Token = "0x2000200")]
	[CompilerGenerated]
	private sealed class <offRelease>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PintarPlayer <>4__this;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xA9C698", Offset = "0xA9C698", VA = "0xA9C698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0xA9C6E0", Offset = "0xA9C6E0", VA = "0xA9C6E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xA9C53C", Offset = "0xA9C53C", VA = "0xA9C53C")]
		[DebuggerHidden]
		public <offRelease>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xA9C5DC", Offset = "0xA9C5DC", VA = "0xA9C5DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xA9C5E0", Offset = "0xA9C5E0", VA = "0xA9C5E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xA9C6A0", Offset = "0xA9C6A0", VA = "0xA9C6A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inicializado;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RenderTextureClothes;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RenderTextureBoots;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject RenderTextureSkin;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RenderTextureGloves;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer Shooter;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PintarPlayer instance;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds tm;

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xA9BE38", Offset = "0xA9BE38", VA = "0xA9BE38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xA9BE90", Offset = "0xA9BE90", VA = "0xA9BE90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xA9BE94", Offset = "0xA9BE94", VA = "0xA9BE94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xA9BE98", Offset = "0xA9BE98", VA = "0xA9BE98")]
	public void EstoyInicializado()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xA9BEA4", Offset = "0xA9BEA4", VA = "0xA9BEA4")]
	public void PintarMiPlayer(string id, Renderer Shoot)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xA9C028", Offset = "0xA9C028", VA = "0xA9C028")]
	public void Pintar(string id, Renderer Shoot)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xA9C1AC", Offset = "0xA9C1AC", VA = "0xA9C1AC")]
	public void PintarPortero(string id, Renderer Shoot)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xA9C3C0", Offset = "0xA9C3C0", VA = "0xA9C3C0")]
	public void ReleaseTextures()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xA9C4C8", Offset = "0xA9C4C8", VA = "0xA9C4C8")]
	[IteratorStateMachine(typeof(<offRelease>d__16))]
	private IEnumerator offRelease()
	{
		return null;
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xA9C564", Offset = "0xA9C564", VA = "0xA9C564")]
	public PintarPlayer()
	{
	}
}
[Token(Token = "0x2000201")]
public class LeaderboardMuseo : MonoBehaviour
{
	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tablaSteam;

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xA9C6E8", Offset = "0xA9C6E8", VA = "0xA9C6E8")]
	private int ExtraerGolesDeEsteNumero(int numero)
	{
		return default(int);
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xA9C734", Offset = "0xA9C734", VA = "0xA9C734")]
	public static int ExtraerPuntosShooterDeEsteNumero(int numero)
	{
		return default(int);
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xA9C778", Offset = "0xA9C778", VA = "0xA9C778")]
	public bool repintarInformacion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xA9DF00", Offset = "0xA9DF00", VA = "0xA9DF00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xA9DF04", Offset = "0xA9DF04", VA = "0xA9DF04")]
	public LeaderboardMuseo()
	{
	}
}
[Token(Token = "0x2000202")]
public class ChutesManager : MonoBehaviour
{
	[Token(Token = "0x2000203")]
	[CompilerGenerated]
	private sealed class <WaitForLoad>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForSeconds <timeToWait>5__2;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xAB84CC", Offset = "0xAB84CC", VA = "0xAB84CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0xAB8514", Offset = "0xAB8514", VA = "0xAB8514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xAB82F8", Offset = "0xAB82F8", VA = "0xAB82F8")]
		[DebuggerHidden]
		public <WaitForLoad>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xAB8320", Offset = "0xAB8320", VA = "0xAB8320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xAB8324", Offset = "0xAB8324", VA = "0xAB8324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xAB84D4", Offset = "0xAB84D4", VA = "0xAB84D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000204")]
	[CompilerGenerated]
	private sealed class <Shoot_FK>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChutesManager <>4__this;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 direction;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float initSpeed;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 newEffectForce;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xAB8688", Offset = "0xAB8688", VA = "0xAB8688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xAB86D0", Offset = "0xAB86D0", VA = "0xAB86D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xAB851C", Offset = "0xAB851C", VA = "0xAB851C")]
		[DebuggerHidden]
		public <Shoot_FK>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xAB8544", Offset = "0xAB8544", VA = "0xAB8544", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xAB8548", Offset = "0xAB8548", VA = "0xAB8548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xAB8690", Offset = "0xAB8690", VA = "0xAB8690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Debug")]
	public bool generarArchivoDeChutes;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 5f)]
	public int generarAPartirDeLaPosicion;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(1f, 20f)]
	public float velocidadDeMuestreo;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Parámetros")]
	[Range(0f, 10f)]
	public int numPosicion;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fuerza;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float altura;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float direccion;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float efecto;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float tiempoEntreChutes;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Variables")]
	public GameObject pelota;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject colliderCloth;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject objetivoAltura;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject objetivoPorteria;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject objetivoEfecto;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GameObject> listaPaths;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool aplicarFuerzasChute;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float multiplicadorFChute;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public GameObject pelotaInstancia;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 effectForce;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 v_DireccionChute;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 v_CorreccionChute;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<int> patronLanzadores;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int numLanzador;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float fuerzaCorreccion;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool flag;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float counter;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int numPelota;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int dPenalty;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int dDificultad;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool finDeGenerarArchivoChutes;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string file;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xA9DF0C", Offset = "0xA9DF0C", VA = "0xA9DF0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xA9E050", Offset = "0xA9E050", VA = "0xA9E050")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xA9EEA8", Offset = "0xA9EEA8", VA = "0xA9EEA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xA9DFC0", Offset = "0xA9DFC0", VA = "0xA9DFC0")]
	public void InicializarEscena()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xA9F194", Offset = "0xA9F194", VA = "0xA9F194")]
	[IteratorStateMachine(typeof(<WaitForLoad>d__35))]
	private IEnumerator WaitForLoad()
	{
		return null;
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xA9E09C", Offset = "0xA9E09C", VA = "0xA9E09C")]
	private void CrearChute()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xA9F1F4", Offset = "0xA9F1F4", VA = "0xA9F1F4")]
	private void Chute(GameObject pelota, float fuerza)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xA9F0D4", Offset = "0xA9F0D4", VA = "0xA9F0D4")]
	[IteratorStateMachine(typeof(<Shoot_FK>d__38))]
	private IEnumerator Shoot_FK(Vector3 direction, float initSpeed, Vector3 newEffectForce)
	{
		return null;
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xA9F414", Offset = "0xA9F414", VA = "0xA9F414")]
	public static void EscribirChuteEnArchivo(string str)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xA9F4A4", Offset = "0xA9F4A4", VA = "0xA9F4A4")]
	public ChutesManager()
	{
	}
}
[Token(Token = "0x2000205")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x2000206")]
	public enum TipoPoderes
	{
		[Token(Token = "0x4000F1E")]
		Ninguno,
		[Token(Token = "0x4000F1F")]
		GuanteGrande,
		[Token(Token = "0x4000F20")]
		PelotaGrande,
		[Token(Token = "0x4000F21")]
		PelotaPequenya,
		[Token(Token = "0x4000F22")]
		MuroVirtual,
		[Token(Token = "0x4000F23")]
		ModoGigante,
		[Token(Token = "0x4000F24")]
		TiempoLento,
		[Token(Token = "0x4000F25")]
		VidaExtra,
		[Token(Token = "0x4000F26")]
		MultiBallMatrix
	}

	[Token(Token = "0x2000207")]
	public enum EstadosPartidaSimulator
	{
		[Token(Token = "0x4000F28")]
		Precarga,
		[Token(Token = "0x4000F29")]
		Preparacion,
		[Token(Token = "0x4000F2A")]
		Espera,
		[Token(Token = "0x4000F2B")]
		Chute,
		[Token(Token = "0x4000F2C")]
		GameOver
	}

	[Token(Token = "0x2000208")]
	public enum EstadosPartidaArcade
	{
		[Token(Token = "0x4000F2E")]
		Precarga,
		[Token(Token = "0x4000F2F")]
		NuevoChute,
		[Token(Token = "0x4000F30")]
		EnJuegoNormal,
		[Token(Token = "0x4000F31")]
		GameOver
	}

	[Token(Token = "0x2000209")]
	public enum EstadosPartidaMultiplayer
	{
		[Token(Token = "0x4000F33")]
		Precarga,
		[Token(Token = "0x4000F34")]
		EsperandoJugador,
		[Token(Token = "0x4000F35")]
		EsperandoReplay,
		[Token(Token = "0x4000F36")]
		EsperandoChute,
		[Token(Token = "0x4000F37")]
		ChuteRecibido,
		[Token(Token = "0x4000F38")]
		Chutando,
		[Token(Token = "0x4000F39")]
		EsperaPostJugada,
		[Token(Token = "0x4000F3A")]
		GameOver
	}

	[Token(Token = "0x200020A")]
	public enum TiposTiroArcade
	{
		[Token(Token = "0x4000F3C")]
		TiroTrampa,
		[Token(Token = "0x4000F3D")]
		TiroNormal,
		[Token(Token = "0x4000F3E")]
		TiroSecuencial
	}

	[Token(Token = "0x200020B")]
	public enum TipoEscenario
	{
		[Token(Token = "0x4000F40")]
		Day,
		[Token(Token = "0x4000F41")]
		Night
	}

	[Token(Token = "0x200020C")]
	public enum EstadoPartidaShooter
	{
		[Token(Token = "0x4000F43")]
		esperandoChute,
		[Token(Token = "0x4000F44")]
		chuteEnCurso,
		[Token(Token = "0x4000F45")]
		finChute,
		[Token(Token = "0x4000F46")]
		gameover
	}

	[Token(Token = "0x200020D")]
	public enum TurnoJuego
	{
		[Token(Token = "0x4000F48")]
		desconocido,
		[Token(Token = "0x4000F49")]
		lanzador,
		[Token(Token = "0x4000F4A")]
		portero
	}

	[Token(Token = "0x200020E")]
	private enum ETipoChute
	{
		[Token(Token = "0x4000F4C")]
		lento,
		[Token(Token = "0x4000F4D")]
		rapido,
		[Token(Token = "0x4000F4E")]
		conEfecto
	}

	[Token(Token = "0x200020F")]
	private enum TipoRondaEntrenamiento
	{
		[Token(Token = "0x4000F50")]
		penalti,
		[Token(Token = "0x4000F51")]
		tiroLibre
	}

	[Token(Token = "0x2000210")]
	private enum ZonaFalta
	{
		[Token(Token = "0x4000F53")]
		central,
		[Token(Token = "0x4000F54")]
		lateralDcha,
		[Token(Token = "0x4000F55")]
		lateralIzda
	}

	[Token(Token = "0x2000211")]
	private enum SubZonaCentral
	{
		[Token(Token = "0x4000F57")]
		central5,
		[Token(Token = "0x4000F58")]
		central4,
		[Token(Token = "0x4000F59")]
		central3,
		[Token(Token = "0x4000F5A")]
		central2
	}

	[Token(Token = "0x2000212")]
	[CompilerGenerated]
	private sealed class <InicializarEscenaEnUnPlis>d__248 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xAB87B4", Offset = "0xAB87B4", VA = "0xAB87B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xAB87FC", Offset = "0xAB87FC", VA = "0xAB87FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xAB86D8", Offset = "0xAB86D8", VA = "0xAB86D8")]
		[DebuggerHidden]
		public <InicializarEscenaEnUnPlis>d__248(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xAB8700", Offset = "0xAB8700", VA = "0xAB8700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xAB8704", Offset = "0xAB8704", VA = "0xAB8704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xAB87BC", Offset = "0xAB87BC", VA = "0xAB87BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <CorutinaBurlaPorFalloDelayed>d__285 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float espera;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xAB8908", Offset = "0xAB8908", VA = "0xAB8908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xAB8950", Offset = "0xAB8950", VA = "0xAB8950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xAB8804", Offset = "0xAB8804", VA = "0xAB8804")]
		[DebuggerHidden]
		public <CorutinaBurlaPorFalloDelayed>d__285(int <>1__state)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xAB882C", Offset = "0xAB882C", VA = "0xAB882C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xAB8830", Offset = "0xAB8830", VA = "0xAB8830", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xAB8910", Offset = "0xAB8910", VA = "0xAB8910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000214")]
	[CompilerGenerated]
	private sealed class <CorutinaBurlaPorGloboDelayed>d__286 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float espera;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xAB8A5C", Offset = "0xAB8A5C", VA = "0xAB8A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xAB8AA4", Offset = "0xAB8AA4", VA = "0xAB8AA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xAB8958", Offset = "0xAB8958", VA = "0xAB8958")]
		[DebuggerHidden]
		public <CorutinaBurlaPorGloboDelayed>d__286(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xAB8980", Offset = "0xAB8980", VA = "0xAB8980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xAB8984", Offset = "0xAB8984", VA = "0xAB8984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xAB8A64", Offset = "0xAB8A64", VA = "0xAB8A64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000215")]
	[CompilerGenerated]
	private sealed class <CorutinaFinBruscoPartidaShooterLAN>d__297 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0xAB8B80", Offset = "0xAB8B80", VA = "0xAB8B80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0xAB8BC8", Offset = "0xAB8BC8", VA = "0xAB8BC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xAB8AAC", Offset = "0xAB8AAC", VA = "0xAB8AAC")]
		[DebuggerHidden]
		public <CorutinaFinBruscoPartidaShooterLAN>d__297(int <>1__state)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xAB8AD4", Offset = "0xAB8AD4", VA = "0xAB8AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xAB8AD8", Offset = "0xAB8AD8", VA = "0xAB8AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xAB8B88", Offset = "0xAB8B88", VA = "0xAB8B88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000216")]
	[CompilerGenerated]
	private sealed class <CorutinaRejugarShooter>d__300 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0xAB8E88", Offset = "0xAB8E88", VA = "0xAB8E88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0xAB8ED0", Offset = "0xAB8ED0", VA = "0xAB8ED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xAB8BD0", Offset = "0xAB8BD0", VA = "0xAB8BD0")]
		[DebuggerHidden]
		public <CorutinaRejugarShooter>d__300(int <>1__state)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xAB8BF8", Offset = "0xAB8BF8", VA = "0xAB8BF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xAB8BFC", Offset = "0xAB8BFC", VA = "0xAB8BFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xAB8E90", Offset = "0xAB8E90", VA = "0xAB8E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000217")]
	[CompilerGenerated]
	private sealed class <FalloTiroEntrenamientoPorTimeout>d__303 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xAB8FCC", Offset = "0xAB8FCC", VA = "0xAB8FCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0xAB9014", Offset = "0xAB9014", VA = "0xAB9014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xAB8ED8", Offset = "0xAB8ED8", VA = "0xAB8ED8")]
		[DebuggerHidden]
		public <FalloTiroEntrenamientoPorTimeout>d__303(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xAB8F00", Offset = "0xAB8F00", VA = "0xAB8F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xAB8F04", Offset = "0xAB8F04", VA = "0xAB8F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xAB8FD4", Offset = "0xAB8FD4", VA = "0xAB8FD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000218")]
	[CompilerGenerated]
	private sealed class <ejecutarTiroShooter>d__310 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pelota pelotaActual;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MensajeUnetChute datosChute;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameManager <>4__this;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0xAB9218", Offset = "0xAB9218", VA = "0xAB9218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xAB9260", Offset = "0xAB9260", VA = "0xAB9260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xAB901C", Offset = "0xAB901C", VA = "0xAB901C")]
		[DebuggerHidden]
		public <ejecutarTiroShooter>d__310(int <>1__state)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xAB9044", Offset = "0xAB9044", VA = "0xAB9044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xAB9048", Offset = "0xAB9048", VA = "0xAB9048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xAB9220", Offset = "0xAB9220", VA = "0xAB9220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <FinTurnoPortero>d__313 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xAB9438", Offset = "0xAB9438", VA = "0xAB9438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xAB9480", Offset = "0xAB9480", VA = "0xAB9480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xAB9268", Offset = "0xAB9268", VA = "0xAB9268")]
		[DebuggerHidden]
		public <FinTurnoPortero>d__313(int <>1__state)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xAB9290", Offset = "0xAB9290", VA = "0xAB9290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xAB9294", Offset = "0xAB9294", VA = "0xAB9294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xAB9440", Offset = "0xAB9440", VA = "0xAB9440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021A")]
	[CompilerGenerated]
	private sealed class <FinTurnoLanzador>d__314 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xAB9610", Offset = "0xAB9610", VA = "0xAB9610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xAB9658", Offset = "0xAB9658", VA = "0xAB9658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xAB9488", Offset = "0xAB9488", VA = "0xAB9488")]
		[DebuggerHidden]
		public <FinTurnoLanzador>d__314(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xAB94B0", Offset = "0xAB94B0", VA = "0xAB94B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xAB94B4", Offset = "0xAB94B4", VA = "0xAB94B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xAB9618", Offset = "0xAB9618", VA = "0xAB9618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021B")]
	[CompilerGenerated]
	private sealed class <FinRondaEntrenamiento>d__315 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool haSidoGol;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0xAB9FBC", Offset = "0xAB9FBC", VA = "0xAB9FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xABA004", Offset = "0xABA004", VA = "0xABA004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xAB9660", Offset = "0xAB9660", VA = "0xAB9660")]
		[DebuggerHidden]
		public <FinRondaEntrenamiento>d__315(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xAB9688", Offset = "0xAB9688", VA = "0xAB9688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xAB968C", Offset = "0xAB968C", VA = "0xAB968C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xAB9FC4", Offset = "0xAB9FC4", VA = "0xAB9FC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021C")]
	[CompilerGenerated]
	private sealed class <PintarMarcadorDelayed>d__316 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xABA0F0", Offset = "0xABA0F0", VA = "0xABA0F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xABA138", Offset = "0xABA138", VA = "0xABA138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xABA00C", Offset = "0xABA00C", VA = "0xABA00C")]
		[DebuggerHidden]
		public <PintarMarcadorDelayed>d__316(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xABA034", Offset = "0xABA034", VA = "0xABA034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xABA038", Offset = "0xABA038", VA = "0xABA038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xABA0F8", Offset = "0xABA0F8", VA = "0xABA0F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021D")]
	[CompilerGenerated]
	private sealed class <CorutinaInstanciarPelotaNuevaEnModoShooter>d__325 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 posicion;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0xABA230", Offset = "0xABA230", VA = "0xABA230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0xABA278", Offset = "0xABA278", VA = "0xABA278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xABA140", Offset = "0xABA140", VA = "0xABA140")]
		[DebuggerHidden]
		public <CorutinaInstanciarPelotaNuevaEnModoShooter>d__325(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xABA168", Offset = "0xABA168", VA = "0xABA168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xABA16C", Offset = "0xABA16C", VA = "0xABA16C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xABA238", Offset = "0xABA238", VA = "0xABA238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021E")]
	[CompilerGenerated]
	private sealed class <ReinicioPelotaLanzadorPorFaltaEnPartidaLAN>d__329 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0xABA36C", Offset = "0xABA36C", VA = "0xABA36C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xABA3B4", Offset = "0xABA3B4", VA = "0xABA3B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xABA280", Offset = "0xABA280", VA = "0xABA280")]
		[DebuggerHidden]
		public <ReinicioPelotaLanzadorPorFaltaEnPartidaLAN>d__329(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xABA2A8", Offset = "0xABA2A8", VA = "0xABA2A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xABA2AC", Offset = "0xABA2AC", VA = "0xABA2AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xABA374", Offset = "0xABA374", VA = "0xABA374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021F")]
	[CompilerGenerated]
	private sealed class <destruyePelotaDentroDeUnRato>d__341 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject estaPelota;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0xABA4BC", Offset = "0xABA4BC", VA = "0xABA4BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0xABA504", Offset = "0xABA504", VA = "0xABA504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xABA3BC", Offset = "0xABA3BC", VA = "0xABA3BC")]
		[DebuggerHidden]
		public <destruyePelotaDentroDeUnRato>d__341(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xABA3E4", Offset = "0xABA3E4", VA = "0xABA3E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xABA3E8", Offset = "0xABA3E8", VA = "0xABA3E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xABA4C4", Offset = "0xABA4C4", VA = "0xABA4C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000220")]
	[CompilerGenerated]
	private sealed class <refrescarOrientacionTelefono>d__344 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0xABA6E8", Offset = "0xABA6E8", VA = "0xABA6E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xABA730", Offset = "0xABA730", VA = "0xABA730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xABA50C", Offset = "0xABA50C", VA = "0xABA50C")]
		[DebuggerHidden]
		public <refrescarOrientacionTelefono>d__344(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xABA534", Offset = "0xABA534", VA = "0xABA534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xABA538", Offset = "0xABA538", VA = "0xABA538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xABA6F0", Offset = "0xABA6F0", VA = "0xABA6F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000221")]
	[CompilerGenerated]
	private sealed class <ponerEmoticono>d__345 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float espera;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int iEmoticono;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0xABA924", Offset = "0xABA924", VA = "0xABA924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xABA96C", Offset = "0xABA96C", VA = "0xABA96C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xABA738", Offset = "0xABA738", VA = "0xABA738")]
		[DebuggerHidden]
		public <ponerEmoticono>d__345(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xABA760", Offset = "0xABA760", VA = "0xABA760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xABA764", Offset = "0xABA764", VA = "0xABA764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xABA92C", Offset = "0xABA92C", VA = "0xABA92C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000222")]
	[CompilerGenerated]
	private sealed class <SiguienteChuteArcade>d__354 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0xABAD24", Offset = "0xABAD24", VA = "0xABAD24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xABAD6C", Offset = "0xABAD6C", VA = "0xABAD6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xABA974", Offset = "0xABA974", VA = "0xABA974")]
		[DebuggerHidden]
		public <SiguienteChuteArcade>d__354(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xABA99C", Offset = "0xABA99C", VA = "0xABA99C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xABA9A0", Offset = "0xABA9A0", VA = "0xABA9A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xABAD2C", Offset = "0xABAD2C", VA = "0xABAD2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000223")]
	[CompilerGenerated]
	private sealed class <finDePowerUpGuanteGrande>d__357 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xABAEC0", Offset = "0xABAEC0", VA = "0xABAEC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xABAF08", Offset = "0xABAF08", VA = "0xABAF08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xABAD74", Offset = "0xABAD74", VA = "0xABAD74")]
		[DebuggerHidden]
		public <finDePowerUpGuanteGrande>d__357(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xABAD9C", Offset = "0xABAD9C", VA = "0xABAD9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xABADA0", Offset = "0xABADA0", VA = "0xABADA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xABAEC8", Offset = "0xABAEC8", VA = "0xABAEC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000224")]
	[CompilerGenerated]
	private sealed class <finDePowerUpPelotaGrande>d__358 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0xABB060", Offset = "0xABB060", VA = "0xABB060", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0xABB0A8", Offset = "0xABB0A8", VA = "0xABB0A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xABAF10", Offset = "0xABAF10", VA = "0xABAF10")]
		[DebuggerHidden]
		public <finDePowerUpPelotaGrande>d__358(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xABAF38", Offset = "0xABAF38", VA = "0xABAF38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xABAF3C", Offset = "0xABAF3C", VA = "0xABAF3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xABB068", Offset = "0xABB068", VA = "0xABB068", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000225")]
	[CompilerGenerated]
	private sealed class <finDePowerUpPelotaPequenya>d__359 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0xABB1FC", Offset = "0xABB1FC", VA = "0xABB1FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xABB244", Offset = "0xABB244", VA = "0xABB244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xABB0B0", Offset = "0xABB0B0", VA = "0xABB0B0")]
		[DebuggerHidden]
		public <finDePowerUpPelotaPequenya>d__359(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xABB0D8", Offset = "0xABB0D8", VA = "0xABB0D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xABB0DC", Offset = "0xABB0DC", VA = "0xABB0DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xABB204", Offset = "0xABB204", VA = "0xABB204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000226")]
	[CompilerGenerated]
	private sealed class <finDePowerUpModoGigange>d__360 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xABB398", Offset = "0xABB398", VA = "0xABB398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xABB3E0", Offset = "0xABB3E0", VA = "0xABB3E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xABB24C", Offset = "0xABB24C", VA = "0xABB24C")]
		[DebuggerHidden]
		public <finDePowerUpModoGigange>d__360(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xABB274", Offset = "0xABB274", VA = "0xABB274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xABB278", Offset = "0xABB278", VA = "0xABB278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xABB3A0", Offset = "0xABB3A0", VA = "0xABB3A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000227")]
	[CompilerGenerated]
	private sealed class <finDePowerUpTiempoLento>d__361 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0xABB53C", Offset = "0xABB53C", VA = "0xABB53C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0xABB584", Offset = "0xABB584", VA = "0xABB584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xABB3E8", Offset = "0xABB3E8", VA = "0xABB3E8")]
		[DebuggerHidden]
		public <finDePowerUpTiempoLento>d__361(int <>1__state)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xABB410", Offset = "0xABB410", VA = "0xABB410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xABB414", Offset = "0xABB414", VA = "0xABB414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xABB544", Offset = "0xABB544", VA = "0xABB544", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[CompilerGenerated]
	private sealed class <finDelCambioProgresivoDePowerUp>d__362 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xABB658", Offset = "0xABB658", VA = "0xABB658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0xABB6A0", Offset = "0xABB6A0", VA = "0xABB6A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xABB58C", Offset = "0xABB58C", VA = "0xABB58C")]
		[DebuggerHidden]
		public <finDelCambioProgresivoDePowerUp>d__362(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xABB5B4", Offset = "0xABB5B4", VA = "0xABB5B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xABB5B8", Offset = "0xABB5B8", VA = "0xABB5B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xABB660", Offset = "0xABB660", VA = "0xABB660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[CompilerGenerated]
	private sealed class <primeraEjecucionMultiplayer>d__366 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0xABB8B8", Offset = "0xABB8B8", VA = "0xABB8B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0xABB900", Offset = "0xABB900", VA = "0xABB900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xABB6A8", Offset = "0xABB6A8", VA = "0xABB6A8")]
		[DebuggerHidden]
		public <primeraEjecucionMultiplayer>d__366(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xABB6D0", Offset = "0xABB6D0", VA = "0xABB6D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xABB6D4", Offset = "0xABB6D4", VA = "0xABB6D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xABB8C0", Offset = "0xABB8C0", VA = "0xABB8C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022A")]
	[CompilerGenerated]
	private sealed class <WaitForLoad>d__375 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0xABBB44", Offset = "0xABBB44", VA = "0xABBB44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0xABBB8C", Offset = "0xABBB8C", VA = "0xABBB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xABB908", Offset = "0xABB908", VA = "0xABB908")]
		[DebuggerHidden]
		public <WaitForLoad>d__375(int <>1__state)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xABB930", Offset = "0xABB930", VA = "0xABB930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xABB934", Offset = "0xABB934", VA = "0xABB934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xABBB4C", Offset = "0xABBB4C", VA = "0xABBB4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022B")]
	[CompilerGenerated]
	private sealed class <dejarVolverACoger>d__376 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject pelota;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xABBD24", Offset = "0xABBD24", VA = "0xABBD24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0xABBD6C", Offset = "0xABBD6C", VA = "0xABBD6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xABBB94", Offset = "0xABBB94", VA = "0xABBB94")]
		[DebuggerHidden]
		public <dejarVolverACoger>d__376(int <>1__state)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xABBBBC", Offset = "0xABBBBC", VA = "0xABBBBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xABBBC0", Offset = "0xABBBC0", VA = "0xABBBC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xABBD2C", Offset = "0xABBD2C", VA = "0xABBD2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022C")]
	[CompilerGenerated]
	private sealed class <ejecutarTiroMultiplayer>d__377 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pelota pelotaActual;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xABBF6C", Offset = "0xABBF6C", VA = "0xABBF6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xABBFB4", Offset = "0xABBFB4", VA = "0xABBFB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xABBD74", Offset = "0xABBD74", VA = "0xABBD74")]
		[DebuggerHidden]
		public <ejecutarTiroMultiplayer>d__377(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xABBD9C", Offset = "0xABBD9C", VA = "0xABBD9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xABBDA0", Offset = "0xABBDA0", VA = "0xABBDA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xABBF74", Offset = "0xABBF74", VA = "0xABBF74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022D")]
	[CompilerGenerated]
	private sealed class <efectoConfetiTimer>d__383 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float retardo;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject efectoPowerUpCogido;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 sitio;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool sonidoBoom;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xABC164", Offset = "0xABC164", VA = "0xABC164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xABC1AC", Offset = "0xABC1AC", VA = "0xABC1AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xABBFBC", Offset = "0xABBFBC", VA = "0xABBFBC")]
		[DebuggerHidden]
		public <efectoConfetiTimer>d__383(int <>1__state)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xABBFE4", Offset = "0xABBFE4", VA = "0xABBFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xABBFE8", Offset = "0xABBFE8", VA = "0xABBFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xABC16C", Offset = "0xABC16C", VA = "0xABC16C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022E")]
	[CompilerGenerated]
	private sealed class <EfectoConfetiRecordEnUnPlis>d__385 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xABC314", Offset = "0xABC314", VA = "0xABC314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xABC35C", Offset = "0xABC35C", VA = "0xABC35C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xABC1B4", Offset = "0xABC1B4", VA = "0xABC1B4")]
		[DebuggerHidden]
		public <EfectoConfetiRecordEnUnPlis>d__385(int <>1__state)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xABC1DC", Offset = "0xABC1DC", VA = "0xABC1DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xABC1E0", Offset = "0xABC1E0", VA = "0xABC1E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xABC31C", Offset = "0xABC31C", VA = "0xABC31C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022F")]
	[CompilerGenerated]
	private sealed class <ActivarPelotaEnUnPlis1>d__387 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject objeto;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xABC448", Offset = "0xABC448", VA = "0xABC448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0xABC490", Offset = "0xABC490", VA = "0xABC490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xABC364", Offset = "0xABC364", VA = "0xABC364")]
		[DebuggerHidden]
		public <ActivarPelotaEnUnPlis1>d__387(int <>1__state)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xABC38C", Offset = "0xABC38C", VA = "0xABC38C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xABC390", Offset = "0xABC390", VA = "0xABC390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xABC450", Offset = "0xABC450", VA = "0xABC450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000230")]
	[CompilerGenerated]
	private sealed class <activarAnimacionExtra>d__388 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float espera;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator objeto;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int animacion;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xABC59C", Offset = "0xABC59C", VA = "0xABC59C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0xABC5E4", Offset = "0xABC5E4", VA = "0xABC5E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xABC498", Offset = "0xABC498", VA = "0xABC498")]
		[DebuggerHidden]
		public <activarAnimacionExtra>d__388(int <>1__state)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xABC4C0", Offset = "0xABC4C0", VA = "0xABC4C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xABC4C4", Offset = "0xABC4C4", VA = "0xABC4C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xABC5A4", Offset = "0xABC5A4", VA = "0xABC5A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000231")]
	[CompilerGenerated]
	private sealed class <desactivarAnimacionExtra>d__389 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float espera;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator objeto;

		[Token(Token = "0x170001FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xABC6F8", Offset = "0xABC6F8", VA = "0xABC6F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xABC740", Offset = "0xABC740", VA = "0xABC740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xABC5EC", Offset = "0xABC5EC", VA = "0xABC5EC")]
		[DebuggerHidden]
		public <desactivarAnimacionExtra>d__389(int <>1__state)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xABC614", Offset = "0xABC614", VA = "0xABC614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xABC618", Offset = "0xABC618", VA = "0xABC618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xABC700", Offset = "0xABC700", VA = "0xABC700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000232")]
	[CompilerGenerated]
	private sealed class <CambiarEstadoAEspera>d__393 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000200")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xABC8F0", Offset = "0xABC8F0", VA = "0xABC8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xABC938", Offset = "0xABC938", VA = "0xABC938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xABC748", Offset = "0xABC748", VA = "0xABC748")]
		[DebuggerHidden]
		public <CambiarEstadoAEspera>d__393(int <>1__state)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xABC770", Offset = "0xABC770", VA = "0xABC770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xABC774", Offset = "0xABC774", VA = "0xABC774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xABC8F8", Offset = "0xABC8F8", VA = "0xABC8F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000233")]
	[CompilerGenerated]
	private sealed class <QuitarIsKinematic>d__396 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tiempoEsperaChute;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject pelota;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0xABCA4C", Offset = "0xABCA4C", VA = "0xABCA4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0xABCA94", Offset = "0xABCA94", VA = "0xABCA94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xABC940", Offset = "0xABC940", VA = "0xABC940")]
		[DebuggerHidden]
		public <QuitarIsKinematic>d__396(int <>1__state)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xABC968", Offset = "0xABC968", VA = "0xABC968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xABC96C", Offset = "0xABC96C", VA = "0xABC96C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xABCA54", Offset = "0xABCA54", VA = "0xABCA54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000234")]
	[CompilerGenerated]
	private sealed class <Chute>d__397 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject pelota;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float tiempoEsperaChute;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fuerza;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xABCEFC", Offset = "0xABCEFC", VA = "0xABCEFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xABCF44", Offset = "0xABCF44", VA = "0xABCF44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xABCA9C", Offset = "0xABCA9C", VA = "0xABCA9C")]
		[DebuggerHidden]
		public <Chute>d__397(int <>1__state)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xABCAC4", Offset = "0xABCAC4", VA = "0xABCAC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xABCAC8", Offset = "0xABCAC8", VA = "0xABCAC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xABCF04", Offset = "0xABCF04", VA = "0xABCF04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000235")]
	[CompilerGenerated]
	private sealed class <Shoot_FK>d__401 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0xABD148", Offset = "0xABD148", VA = "0xABD148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xABD190", Offset = "0xABD190", VA = "0xABD190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xABCF4C", Offset = "0xABCF4C", VA = "0xABCF4C")]
		[DebuggerHidden]
		public <Shoot_FK>d__401(int <>1__state)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xABCF74", Offset = "0xABCF74", VA = "0xABCF74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xABCF78", Offset = "0xABCF78", VA = "0xABCF78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xABD150", Offset = "0xABD150", VA = "0xABD150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000236")]
	[CompilerGenerated]
	private sealed class <siguienteBalonMultiplayer>d__404 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xABD320", Offset = "0xABD320", VA = "0xABD320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xABD368", Offset = "0xABD368", VA = "0xABD368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xABD198", Offset = "0xABD198", VA = "0xABD198")]
		[DebuggerHidden]
		public <siguienteBalonMultiplayer>d__404(int <>1__state)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xABD1C0", Offset = "0xABD1C0", VA = "0xABD1C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xABD1C4", Offset = "0xABD1C4", VA = "0xABD1C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xABD328", Offset = "0xABD328", VA = "0xABD328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000237")]
	[CompilerGenerated]
	private sealed class <DestroyIt>d__406 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToDestroy;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xABD498", Offset = "0xABD498", VA = "0xABD498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xABD4E0", Offset = "0xABD4E0", VA = "0xABD4E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xABD370", Offset = "0xABD370", VA = "0xABD370")]
		[DebuggerHidden]
		public <DestroyIt>d__406(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xABD398", Offset = "0xABD398", VA = "0xABD398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xABD39C", Offset = "0xABD39C", VA = "0xABD39C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xABD4A0", Offset = "0xABD4A0", VA = "0xABD4A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000238")]
	[CompilerGenerated]
	private sealed class <finalDelGameOverEnUnRato>d__411 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xABD8C8", Offset = "0xABD8C8", VA = "0xABD8C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xABD910", Offset = "0xABD910", VA = "0xABD910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xABD4E8", Offset = "0xABD4E8", VA = "0xABD4E8")]
		[DebuggerHidden]
		public <finalDelGameOverEnUnRato>d__411(int <>1__state)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xABD510", Offset = "0xABD510", VA = "0xABD510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xABD514", Offset = "0xABD514", VA = "0xABD514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xABD8D0", Offset = "0xABD8D0", VA = "0xABD8D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int fallosConIncrementoDeDificultadPerdonaPorRacha;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int NUM_LANZADORES;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sonido3D;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float dificultad;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numDianasSacadas;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool bDireccionDerechaPatroArcade;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] posicionReservada;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Object muroAnterior;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cambiandoEfectoMatrix;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool cambiandoEscalaGlobal;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int guanteGrandeActivo;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int pelotaGrandeActiva;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int tiempoLentoActivo;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int pelotaPequenyaActiva;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int ModoGiganteActivo;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int multiBallMatrixActivo;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject muroProtector;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int ultimoSorteoPoderDiana;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int iContadorDeEmergencia;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool acaboDeCancelarTiro;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool matrixPendienteDeAcabar;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject telefono;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject emoticono;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float milisegundosSinEnviar;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool UsarEfectosDeCamara;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool bHaTocadoPalo;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	public bool bHaTocadoPortero;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
	public bool yaEnvieBombaUnaVezEnEstaPartida;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool partidaMultiplayerAcabadaPorBomba;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool rejugarInvalidoPorQueNoTengoAdversario;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool empezandoRejugarModoSilencioForzado;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject efectoConfetiRecord;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool saliendoDeLaEscenaDeMultipayer;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int updatesSinRevisarRetosDePelotas;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int updatesSinRevisarRetosDeManos;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool esSeguroPrimeraEjecucion;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	[HideInInspector]
	public bool GameOverForzadoPorBoton;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public EstadosPartidaSimulator estadoPartidaSimulator;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public EstadosPartidaArcade estadoPartidaArcade;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public EstadosPartidaMultiplayer estadoPartidaMultiplayer;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public TiposTiroArcade tipoTiroArcade;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int tirosSecuencialesPendientes;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool tiroSecuencialPendienteDeEstablecer;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Range(1f, 10f)]
	[HideInInspector]
	public float timeScale;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public TipoEscenario tipoescenario;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material skyDay;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material skyNight;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject pelotaTrampa;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject pelota;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject pelotaPlaya;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject pelotaTennis;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject pelotaMatrix;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject pelotaNieve;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject colliderCloth;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Cloth redPorteria;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject objetivoAltura;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject objetivoPorteria;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject objetivoEfecto;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public List<GameObject> listaPaths;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public List<GameObject> listaLanzadores;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public List<GameObject> listaPelotasArcade;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject scoreboardPrefab;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject lanzador;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public GameObject pelotaInstancia;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject pelotaEnCurso;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject menuInGame;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[Header("Debug")]
	public bool debugPatronLanzadores;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float fuerza;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float altura;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float direccion;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float efecto;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Vector3 MultiPlayer_EfectoChute;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Vector3 MultiPlayer_DireccionChute;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float MultiPlayer_fuerzaChute;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public int MultiPlayer_tipoChute;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public int MultiPlayer_idChute;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public int MultiPlayer_PuntosFK;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public int MultiPlayer_PuntosFG;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool primeraVezQueLeoRotacion;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Vector3 rotacionTelefonoDeseada;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 rotacionTelefonoPlano;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 rotacionTelefonoInicioPartida;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool MultiPlayer_oponenteYaHaContesadoQueQuiereRejugar;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	public bool MultiPlayer_YoYaHaContesadoQueQuieroRejugar;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
	public bool MultiPlayer_oponenteDesconectado;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public string MultiPlayer_NickNameFK;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private GameObject MultiPlayer_pelotaFake;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject menuInGameModoMultiplayer;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject menuInGameModoMultiplayerReserva;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private List<int> patronLanzadores;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private int numLanzador;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private int ordenLanzador;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool flag;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private List<string> playerName;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool precargaInicializada;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x229")]
	private bool preparacionChuteInicializado;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22A")]
	private bool chuteInicializado;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22B")]
	private bool isFirstShoot;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private bool gameOverInicializado;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool yaPuedoChutar;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private int numPelota;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float distLeft;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float distRight;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject guanteIzquierdo;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject guanteDerecho;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject cabeza;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject botaDerecha;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject botaIzquierda;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject guanteIzquierdoGroup;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject guanteDerechoGroup;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public ControllerSteam guanteIzquierdoController;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public ControllerSteam guanteDerechoController;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private Pelota componentePelota;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameManager instance;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private Scoreboard scoreboard;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public int numVidas;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public int numVidasConLasQueAcabeLaPartida;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public int powerupVidasMostrados;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public RenderTexture[] shadowTextures;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Material[] shadowMaterials;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private SocketIOComponent socket;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private bool loggedIn;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C1")]
	private bool connected;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C2")]
	private bool tryLogin;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C3")]
	private bool yaHiceGameOver;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	[Header("Shooter")]
	public bool soyHost;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public string direccionIPRival;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private Vector3 posicionJugadorComoLanzador;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private Vector3 rotacionEulerJugadorComoLanzador;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private Vector3 posicionJugadorComoPortero;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	private Vector3 rotacionEulerJugadorComoPortero;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private Vector3 posicionJugadorEnEspera;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private Vector3 rotacionEulerJugadorEnEspera;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject porteriaPortero;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject porteriaLanzador;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Scoreboard scoreboardPortero;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Scoreboard scoreboardLanzador;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public Vector3 posicionSpawnPelotaParaPenalti;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	public Vector3 posicionSpawnPortero;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private int mMaxConnections;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	private byte mCanalGolChute;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private int mServerSocketGolChute;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private int mClientSocketGolChute;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private int mClientConnectionGolChute;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	private bool clienteGolChuteConectado;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private int puertoCanalGolChuteNuestro;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private int puertoCanalGolChuteDelRival;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private byte mCanalDummy;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	private int mServerSocketDummy;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private int mClientSocketDummy;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	private int mClientConnectionDummy;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private bool clienteDummyConectado;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	private int puertoCanalDummyNuestro;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private int puertoCanalDummyDelRival;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	private byte mCanalPelota;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private int mServerSocketPelota;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	private int mClientSocketPelota;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private int mClientConnectionPelota;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private bool clientePelotaConectado;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private int puertoCanalPelotaNuestro;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	private int puertoCanalPelotaDelRival;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public EstadoPartidaShooter estadoPartidaShooter;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	private int intentosDetectarRival;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private float tiempoUltimaIntentoDetectarRival;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	public TurnoJuego turnoJuego;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public GameObject prefabPelota;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public Transform dummyIKLanzador;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public Transform dummyIKPortero;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public LimbsDummy limbsDummyIKLanzador;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public LimbsDummy limbsDummyIKPortero;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public DummyLanzador dummyLanzador;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public DummyPortero dummyPortero;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public GameObject dummyPelota;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	[HideInInspector]
	public GameObject pelotaReal;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public Transform tCabeza;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public Transform tManoDcha;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public Transform tManoIzda;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public Transform tPieDcho;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public Transform tPieIzdo;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public Transform tTorso;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public int golesAnotados;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
	public int golesSufridos;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	private Dictionary<int, float> tiemposEnvio;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private int chutesRestantes;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public Transform helperCentroPorteria;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public PelotaPuntoTiempo estimadorPelota;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public PelotaPuntoTiempo estimadorPelotaChuteSinEfecto;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	private float coordXMaxPorteria;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
	private float coordYMaxPorteria;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public Transform indicadorPuntoFinalPelotica;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public bool hayBarreraEnEsteChute;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	private GameObject instanciaPortero;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public GameObject prefabPortero;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	private BarreraManager barrera;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	private TipoRondaEntrenamiento tipoRondaEntrenamientoActual;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
	private int intentosRestantesRondaEntrenamientoActual;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public int rondaEntrenamientoActual;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
	private int puntosEntrenamientoActuales;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public GameObject prefabExplosionPelota;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	private Vector3 posicionPelotaParaTiroLibreActual;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public GameObject grupoCollidersPorteriaDelanteroModoEntrenamiento;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	private Coroutine corutinaFalloTiroEntrenamientoPorTimeout;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	private SubZonaCentral subZonaCentralActual;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
	private ZonaFalta zonaFaltaActual;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	private ZonaFalta zonaFaltaLateralAnterior;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public GameObject prefabMenuShooter;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public GameObject gameOverShooter;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public GameObject prefabGameOverShooter;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public FadeEscena fadeEscena;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	private Transform posibleLluviaQueMoverEnModoShooter;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public int multiplicadorPuntosSiguienteGol;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public GameObject prefabDiana;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	[HideInInspector]
	public GameObject ultimaInstanciaDiana;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	private int ultimaCalidadChute;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
	private float scaleInicialScoreboardDelantero;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	private Quaternion rotacionInicialScoreboardDelantero;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	private Vector3 posicionInicialScoreboardDelantero;

	[Token(Token = "0x4000F10")]
	private const float kScaleCercanoScoreboardDelantero = 0.165f;

	[Token(Token = "0x4000F11")]
	private const float kYCercanoScoreboardDelantero = 2.27f;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53C")]
	public int rondaUltimoRandomDianaCalculado;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public Vector3 posicionActualDiana;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
	public int randomMultiplicadorActualDiana;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	private bool comunicacionInicializada;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	private string siguienteEscenaEstadioPartidaLAN;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public GameObject prefabBarrera;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public GameObject prefabBotaDcha;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public GameObject prefabBotaIzda;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	private bool configDummyIKRecibida;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x579")]
	private bool configDummyIKEnviada;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57C")]
	private float tiempoUltimoIntentoEnvioConfigDummyIK;

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xAA0620", Offset = "0xAA0620", VA = "0xAA0620")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xAA0680", Offset = "0xAA0680", VA = "0xAA0680")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xAA1614", Offset = "0xAA1614", VA = "0xAA1614")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xAA1A08", Offset = "0xAA1A08", VA = "0xAA1A08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xAA22DC", Offset = "0xAA22DC", VA = "0xAA22DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xAA2D74", Offset = "0xAA2D74", VA = "0xAA2D74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xAA3068", Offset = "0xAA3068", VA = "0xAA3068")]
	[IteratorStateMachine(typeof(<InicializarEscenaEnUnPlis>d__248))]
	private IEnumerator InicializarEscenaEnUnPlis()
	{
		return null;
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xAA1C78", Offset = "0xAA1C78", VA = "0xAA1C78")]
	private void UpdateModoPartidaSimulator()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xAA1EDC", Offset = "0xAA1EDC", VA = "0xAA1EDC")]
	private void UpdateModoArcade()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xAA1F8C", Offset = "0xAA1F8C", VA = "0xAA1F8C")]
	private void UpdateModoMultijuador()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xAA2004", Offset = "0xAA2004", VA = "0xAA2004")]
	private void UpdateModoShooter()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xAA2434", Offset = "0xAA2434", VA = "0xAA2434")]
	private void FixedUpdateModoPartidaSimulator()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xAA2660", Offset = "0xAA2660", VA = "0xAA2660")]
	private void FixedUpdateModoArcade()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xAA2B24", Offset = "0xAA2B24", VA = "0xAA2B24")]
	private void FixedUpdateModoMultijugador()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xAA8778", Offset = "0xAA8778", VA = "0xAA8778")]
	private void InicializarComunicacion()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xAA8D7C", Offset = "0xAA8D7C", VA = "0xAA8D7C")]
	private void EnviarDatosPorCanalGolChute(string datos)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xAA8ECC", Offset = "0xAA8ECC", VA = "0xAA8ECC")]
	private void EnviarDatosPorCanalDummy(string datos)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xAA901C", Offset = "0xAA901C", VA = "0xAA901C")]
	private void EnviarDatosPorCanalPelota(string datos)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xAA916C", Offset = "0xAA916C", VA = "0xAA916C")]
	private void ActualizarDummiesIKConMsgConfig(MensajeUnetConfigDummyIK datosDummy)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xAA9450", Offset = "0xAA9450", VA = "0xAA9450")]
	private void ProcesarMensajeGolChute(string msg)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xAA9BDC", Offset = "0xAA9BDC", VA = "0xAA9BDC")]
	private void ProcesarMensajeDummy(string msg)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xAAA930", Offset = "0xAAA930", VA = "0xAAA930")]
	private void ProcesarMensajePelota(string msg)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xAA6BB8", Offset = "0xAA6BB8", VA = "0xAA6BB8")]
	private void UpdateUnet()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xAA8CAC", Offset = "0xAA8CAC", VA = "0xAA8CAC")]
	private void LogNetworkError(byte error)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xAAAB70", Offset = "0xAAAB70", VA = "0xAAAB70")]
	private void OnObjects(string codigo)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xAAB308", Offset = "0xAAB308", VA = "0xAAB308")]
	private void Login()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xAAB364", Offset = "0xAAB364", VA = "0xAAB364")]
	private void ConnectMultiplayer()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xAAB7C0", Offset = "0xAAB7C0", VA = "0xAAB7C0")]
	private void OnConnect()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xAAB850", Offset = "0xAAB850", VA = "0xAAB850")]
	private void OnOpponentConnected()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xAABC5C", Offset = "0xAABC5C", VA = "0xAABC5C")]
	private void OnOpponentDisconnected()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xAABD3C", Offset = "0xAABD3C", VA = "0xAABD3C")]
	private void OnMessage(string codigo)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xAADA98", Offset = "0xAADA98", VA = "0xAADA98")]
	private void OnLoginOk(string codigo)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xAADB68", Offset = "0xAADB68", VA = "0xAADB68")]
	private void OnLoginFail()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xAA1618", Offset = "0xAA1618", VA = "0xAA1618")]
	private void Disconnect()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xAADBD0", Offset = "0xAADBD0", VA = "0xAADBD0")]
	private void OnDisConnect()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xAADC70", Offset = "0xAADC70", VA = "0xAADC70")]
	private string Float2String(float f)
	{
		return null;
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xAAB158", Offset = "0xAAB158", VA = "0xAAB158")]
	private string String2FloatString(string st)
	{
		return null;
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xAAB1C4", Offset = "0xAAB1C4", VA = "0xAAB1C4")]
	private float ParseFloat(string f)
	{
		return default(float);
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xAA58FC", Offset = "0xAA58FC", VA = "0xAA58FC")]
	private void SendPositionsMultiplayer()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xAADCE8", Offset = "0xAADCE8", VA = "0xAADCE8")]
	public void enviarResultadoMultiplayer(bool haSidoGol)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xAAE414", Offset = "0xAAE414", VA = "0xAAE414")]
	public void RecolocarPortero()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xAAE6E8", Offset = "0xAAE6E8", VA = "0xAAE6E8")]
	private Vector2 CoordenadasNormalizadasPorteria(Vector2 v_World)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xAAE720", Offset = "0xAAE720", VA = "0xAAE720")]
	public void ChuteIniciado(Vector3 direccionNormalizada, float fuerzaChute, Vector3 efectico)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xAAEC68", Offset = "0xAAEC68", VA = "0xAAEC68")]
	[IteratorStateMachine(typeof(<CorutinaBurlaPorFalloDelayed>d__285))]
	private IEnumerator CorutinaBurlaPorFalloDelayed(float espera)
	{
		return null;
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xAAECD8", Offset = "0xAAECD8", VA = "0xAAECD8")]
	[IteratorStateMachine(typeof(<CorutinaBurlaPorGloboDelayed>d__286))]
	private IEnumerator CorutinaBurlaPorGloboDelayed(float espera)
	{
		return null;
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xAAED48", Offset = "0xAAED48", VA = "0xAAED48")]
	private int CalcularCalidadChute(Vector2 puntoPasoPelotaNormalizado, float fuerzaChute, float fuerzaEfecto)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xAAEF64", Offset = "0xAAEF64", VA = "0xAAEF64")]
	private bool Melaparo(int calidadDisparo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xAAF088", Offset = "0xAAF088", VA = "0xAAF088")]
	private ETipoChute TipoChuteRapidoAMenosQueVayaAlCentro()
	{
		return default(ETipoChute);
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xAAF0F0", Offset = "0xAAF0F0", VA = "0xAAF0F0")]
	private ETipoChute DetectaTipoChute(float fuerza, float fuerzaEfecto)
	{
		return default(ETipoChute);
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xAAE974", Offset = "0xAAE974", VA = "0xAAE974")]
	private void CalcularSiEsGol(Vector2 puntoPasoPelotaNormalizado, Vector2 puntoPasoPelotaNormalizadoChuteSinEfecto, float fuerzaChute, float fuerzaEfecto)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xAAA814", Offset = "0xAAA814", VA = "0xAAA814")]
	private bool DatosPosicionRotacionSonNulos(Vector3 posicion, Quaternion rotacion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xAA2D78", Offset = "0xAA2D78", VA = "0xAA2D78")]
	private void DesconectarUnetSiHaceFalta()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xAAF1B8", Offset = "0xAAF1B8", VA = "0xAAF1B8")]
	private void ColocarSiguienteDiana()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xAAF300", Offset = "0xAAF300", VA = "0xAAF300")]
	public void IniciarCorutinaFalloPorTimeout()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xAAF330", Offset = "0xAAF330", VA = "0xAAF330")]
	public bool EstoyChutandoFaltaLateral()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xAAF344", Offset = "0xAAF344", VA = "0xAAF344")]
	[IteratorStateMachine(typeof(<CorutinaFinBruscoPartidaShooterLAN>d__297))]
	private IEnumerator CorutinaFinBruscoPartidaShooterLAN()
	{
		return null;
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xAAF3A4", Offset = "0xAAF3A4", VA = "0xAAF3A4")]
	public void FinBruscoPartidaShooterLAN()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xAAF3C4", Offset = "0xAAF3C4", VA = "0xAAF3C4")]
	public void FinPartidaShooterPorDobleClickEnMenu()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xAAF448", Offset = "0xAAF448", VA = "0xAAF448")]
	[IteratorStateMachine(typeof(<CorutinaRejugarShooter>d__300))]
	private IEnumerator CorutinaRejugarShooter()
	{
		return null;
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xAAF4BC", Offset = "0xAAF4BC", VA = "0xAAF4BC")]
	private void RejugarShooterInstant()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xAAF6E8", Offset = "0xAAF6E8", VA = "0xAAF6E8")]
	public void RejugarShooter()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xAAEBF4", Offset = "0xAAEBF4", VA = "0xAAEBF4")]
	[IteratorStateMachine(typeof(<FalloTiroEntrenamientoPorTimeout>d__303))]
	private IEnumerator FalloTiroEntrenamientoPorTimeout()
	{
		return null;
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xAA732C", Offset = "0xAA732C", VA = "0xAA732C")]
	private void EnviarConfigDummyIKSiEsNecesario()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xAA0B20", Offset = "0xAA0B20", VA = "0xAA0B20")]
	private void StartModoShooter()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xAAFCB0", Offset = "0xAAFCB0", VA = "0xAAFCB0")]
	private void IniciarTurnoPortero()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xAB0270", Offset = "0xAB0270", VA = "0xAB0270")]
	private void RecolocarLluviaSiEsNecesario()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xAAF8CC", Offset = "0xAAF8CC", VA = "0xAAF8CC")]
	private void IniciarTurnoLanzador()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xAA98D0", Offset = "0xAA98D0", VA = "0xAA98D0")]
	private void CrearPelotaChutadaParaPortero(MensajeUnetChute datosChute)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xAB037C", Offset = "0xAB037C", VA = "0xAB037C")]
	[IteratorStateMachine(typeof(<ejecutarTiroShooter>d__310))]
	private IEnumerator ejecutarTiroShooter(Pelota pelotaActual, MensajeUnetChute datosChute)
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xAB0420", Offset = "0xAB0420", VA = "0xAB0420")]
	public void CambiarEstadoAChuteEnCurso()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xAAAADC", Offset = "0xAAAADC", VA = "0xAAAADC")]
	public void DestruirPelotaLanzadorYActivarPelotaFake()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xAB042C", Offset = "0xAB042C", VA = "0xAB042C")]
	[IteratorStateMachine(typeof(<FinTurnoPortero>d__313))]
	private IEnumerator FinTurnoPortero()
	{
		return null;
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xAB04A0", Offset = "0xAB04A0", VA = "0xAB04A0")]
	[IteratorStateMachine(typeof(<FinTurnoLanzador>d__314))]
	private IEnumerator FinTurnoLanzador()
	{
		return null;
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xAB0514", Offset = "0xAB0514", VA = "0xAB0514")]
	[IteratorStateMachine(typeof(<FinRondaEntrenamiento>d__315))]
	private IEnumerator FinRondaEntrenamiento(bool haSidoGol)
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xAB059C", Offset = "0xAB059C", VA = "0xAB059C")]
	[IteratorStateMachine(typeof(<PintarMarcadorDelayed>d__316))]
	private IEnumerator PintarMarcadorDelayed()
	{
		return null;
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xAB0610", Offset = "0xAB0610", VA = "0xAB0610")]
	private Vector3 SorteoPosicionPelota()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xAAF2DC", Offset = "0xAAF2DC", VA = "0xAAF2DC")]
	private Diana.TipoDiana TipoDianaRondaActual()
	{
		return default(Diana.TipoDiana);
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xAB0850", Offset = "0xAB0850", VA = "0xAB0850")]
	private int IntentosInicialesRondaActual()
	{
		return default(int);
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xAAEFF0", Offset = "0xAAEFF0", VA = "0xAAEFF0")]
	private int CalidadPorteroParaEstaRonda()
	{
		return default(int);
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xAB0878", Offset = "0xAB0878", VA = "0xAB0878")]
	private int SorteoJugadoresBarrera()
	{
		return default(int);
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xAB08EC", Offset = "0xAB08EC", VA = "0xAB08EC")]
	private void ApagarEncenderExSombrasBarreraSiEsNecesario(int numeroJugadoresEnBarrera)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xAB0EA8", Offset = "0xAB0EA8", VA = "0xAB0EA8")]
	private void ColocarBarreraAleatoria()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xAB1088", Offset = "0xAB1088", VA = "0xAB1088")]
	public void InstanciarPelotaNuevaEnModoShooterConDelay(Vector3 posicion, float delay)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xAB10A8", Offset = "0xAB10A8", VA = "0xAB10A8")]
	[IteratorStateMachine(typeof(<CorutinaInstanciarPelotaNuevaEnModoShooter>d__325))]
	private IEnumerator CorutinaInstanciarPelotaNuevaEnModoShooter(Vector3 posicion, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xAAFFC8", Offset = "0xAAFFC8", VA = "0xAAFFC8")]
	public void InstanciarPelotaNuevaEnModoShooter(Vector3 posicion)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xAB13F0", Offset = "0xAB13F0", VA = "0xAB13F0")]
	private void CrearEfectoPelotaExplota(Vector3 posicion)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xAB153C", Offset = "0xAB153C", VA = "0xAB153C")]
	public void DestruirPelotaEntrenamientoShooterActual()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xAB1608", Offset = "0xAB1608", VA = "0xAB1608")]
	[IteratorStateMachine(typeof(<ReinicioPelotaLanzadorPorFaltaEnPartidaLAN>d__329))]
	private IEnumerator ReinicioPelotaLanzadorPorFaltaEnPartidaLAN()
	{
		return null;
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xAB167C", Offset = "0xAB167C", VA = "0xAB167C")]
	public void FaltaLanzadorPorTocarPelotaEnPartidaLAN()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xAA9690", Offset = "0xAA9690", VA = "0xAA9690")]
	public void ActualizarPartidaShooterSegunHayaSidoGol(bool haSidoGol)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xAAF708", Offset = "0xAAF708", VA = "0xAAF708")]
	public void EnviarSiEsPosibleDatosConfigDummyIK()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xAB169C", Offset = "0xAB169C", VA = "0xAB169C")]
	public void EnviarDatosChute(Vector3 vectorFuerza, Vector3 puntoFuerza, Vector3 vectorEfecto)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xAB17D0", Offset = "0xAB17D0", VA = "0xAB17D0")]
	private void EnviarDatosGolParada(bool haSidoGol)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xAA8550", Offset = "0xAA8550", VA = "0xAA8550")]
	private void EnviarDatosParaPelotaFake()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xAA7AEC", Offset = "0xAA7AEC", VA = "0xAA7AEC")]
	private void EnviarDatosParaDummyPortero()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xAA7374", Offset = "0xAA7374", VA = "0xAA7374")]
	private void EnviarDatosParaDummyLanzador()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xAB1960", Offset = "0xAB1960", VA = "0xAB1960")]
	private void GameOverShooterLAN()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xAA6570", Offset = "0xAA6570", VA = "0xAA6570")]
	private void GameOverShooterEntrenamiento()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xAAEEF4", Offset = "0xAAEEF4", VA = "0xAAEEF4")]
	public float ModificadorChuteConsiderandoSettings()
	{
		return default(float);
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xAB1CE4", Offset = "0xAB1CE4", VA = "0xAB1CE4")]
	[IteratorStateMachine(typeof(<destruyePelotaDentroDeUnRato>d__341))]
	private IEnumerator destruyePelotaDentroDeUnRato(GameObject estaPelota)
	{
		return null;
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xAB1D58", Offset = "0xAB1D58", VA = "0xAB1D58")]
	public void noQuieroPelota()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xAA12C8", Offset = "0xAA12C8", VA = "0xAA12C8")]
	private void variablesReset()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xAA15A0", Offset = "0xAA15A0", VA = "0xAA15A0")]
	[IteratorStateMachine(typeof(<refrescarOrientacionTelefono>d__344))]
	private IEnumerator refrescarOrientacionTelefono()
	{
		return null;
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xAAB274", Offset = "0xAAB274", VA = "0xAAB274")]
	[IteratorStateMachine(typeof(<ponerEmoticono>d__345))]
	private IEnumerator ponerEmoticono(int iEmoticono, float espera)
	{
		return null;
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xAAB8C8", Offset = "0xAAB8C8", VA = "0xAAB8C8")]
	private void updatePelotaFake()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xAB1E50", Offset = "0xAB1E50", VA = "0xAB1E50")]
	public void rejugarMultiplayer()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xAB1FC8", Offset = "0xAB1FC8", VA = "0xAB1FC8")]
	public void noQuieroJugarMasContigo()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xAACB58", Offset = "0xAACB58", VA = "0xAACB58")]
	public void empezarNuevoMultiplayer()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xAA38B0", Offset = "0xAA38B0", VA = "0xAA38B0")]
	public bool nivelSuperado()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xAB2094", Offset = "0xAB2094", VA = "0xAB2094")]
	public int getProgresoActual()
	{
		return default(int);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xAB256C", Offset = "0xAB256C", VA = "0xAB256C")]
	private bool bTengoEspacioParaTiroTriple()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xAB2590", Offset = "0xAB2590", VA = "0xAB2590")]
	private bool bTengoEspacioParaTiroDoble()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xAA533C", Offset = "0xAA533C", VA = "0xAA533C")]
	[IteratorStateMachine(typeof(<SiguienteChuteArcade>d__354))]
	private IEnumerator SiguienteChuteArcade()
	{
		return null;
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xAA53B0", Offset = "0xAA53B0", VA = "0xAA53B0")]
	private void EjecutarCambioProgresivoDePowerUp()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xAB25B4", Offset = "0xAB25B4", VA = "0xAB25B4")]
	public void forzarFinDelPowerUpTiempo()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xAB2660", Offset = "0xAB2660", VA = "0xAB2660")]
	[IteratorStateMachine(typeof(<finDePowerUpGuanteGrande>d__357))]
	private IEnumerator finDePowerUpGuanteGrande()
	{
		return null;
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xAB26D4", Offset = "0xAB26D4", VA = "0xAB26D4")]
	[IteratorStateMachine(typeof(<finDePowerUpPelotaGrande>d__358))]
	private IEnumerator finDePowerUpPelotaGrande()
	{
		return null;
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xAB2748", Offset = "0xAB2748", VA = "0xAB2748")]
	[IteratorStateMachine(typeof(<finDePowerUpPelotaPequenya>d__359))]
	private IEnumerator finDePowerUpPelotaPequenya()
	{
		return null;
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xAB27BC", Offset = "0xAB27BC", VA = "0xAB27BC")]
	[IteratorStateMachine(typeof(<finDePowerUpModoGigange>d__360))]
	private IEnumerator finDePowerUpModoGigange()
	{
		return null;
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xAB2830", Offset = "0xAB2830", VA = "0xAB2830")]
	[IteratorStateMachine(typeof(<finDePowerUpTiempoLento>d__361))]
	private IEnumerator finDePowerUpTiempoLento()
	{
		return null;
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xAB28A4", Offset = "0xAB28A4", VA = "0xAB28A4")]
	[IteratorStateMachine(typeof(<finDelCambioProgresivoDePowerUp>d__362))]
	private IEnumerator finDelCambioProgresivoDePowerUp()
	{
		return null;
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xAB2904", Offset = "0xAB2904", VA = "0xAB2904")]
	public void ejecutarPowerUp(TipoPoderes powerUpNuevo)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xAB2D9C", Offset = "0xAB2D9C", VA = "0xAB2D9C")]
	public void guantesPuedenTocarLaRed()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xAB3140", Offset = "0xAB3140", VA = "0xAB3140")]
	public void resituarAreaSegunCabezaYmareo()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xAB3330", Offset = "0xAB3330", VA = "0xAB3330")]
	[IteratorStateMachine(typeof(<primeraEjecucionMultiplayer>d__366))]
	private IEnumerator primeraEjecucionMultiplayer()
	{
		return null;
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xAA4368", Offset = "0xAA4368", VA = "0xAA4368")]
	public void InicializarEscena()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xAAD9A4", Offset = "0xAAD9A4", VA = "0xAAD9A4")]
	private void locutarInicioPartido()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xAB33A4", Offset = "0xAB33A4", VA = "0xAB33A4")]
	private void SetScenario()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xAB340C", Offset = "0xAB340C", VA = "0xAB340C")]
	private List<int> CrearPatronDeLanzamiento(bool bQuieroDesorden)
	{
		return null;
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xAB41F8", Offset = "0xAB41F8", VA = "0xAB41F8")]
	private void DebugPatron(List<int> patron)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xAB3CDC", Offset = "0xAB3CDC", VA = "0xAB3CDC")]
	private void PrepararLanzadoresArcade()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xAB3658", Offset = "0xAB3658", VA = "0xAB3658")]
	private void PrepararLanzadores()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xAB4490", Offset = "0xAB4490", VA = "0xAB4490")]
	public void PintarJugadorAleatorio(GameObject lanzador)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xAB4184", Offset = "0xAB4184", VA = "0xAB4184")]
	[IteratorStateMachine(typeof(<WaitForLoad>d__375))]
	private IEnumerator WaitForLoad()
	{
		return null;
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xAB4AC8", Offset = "0xAB4AC8", VA = "0xAB4AC8")]
	[IteratorStateMachine(typeof(<dejarVolverACoger>d__376))]
	private IEnumerator dejarVolverACoger(GameObject pelota)
	{
		return null;
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xAB4B3C", Offset = "0xAB4B3C", VA = "0xAB4B3C")]
	[IteratorStateMachine(typeof(<ejecutarTiroMultiplayer>d__377))]
	private IEnumerator ejecutarTiroMultiplayer(Pelota pelotaActual)
	{
		return null;
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xAB401C", Offset = "0xAB401C", VA = "0xAB401C")]
	private void guantesAfectanAlaRed()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xAB1148", Offset = "0xAB1148", VA = "0xAB1148")]
	public void pelotaAfectaAlaRed(SphereCollider pelotaNueva)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xAB4BCC", Offset = "0xAB4BCC", VA = "0xAB4BCC")]
	public void bombaEnMultiplayerTocada()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xAAD270", Offset = "0xAAD270", VA = "0xAAD270")]
	private void PrepararChuteMultijugador()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xAA4634", Offset = "0xAA4634", VA = "0xAA4634")]
	private void PrepararChuteArcade()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xAB4E00", Offset = "0xAB4E00", VA = "0xAB4E00")]
	[IteratorStateMachine(typeof(<efectoConfetiTimer>d__383))]
	private IEnumerator efectoConfetiTimer(GameObject efectoPowerUpCogido, Vector3 sitio, float retardo, bool sonidoBoom)
	{
		return null;
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xAB4EB4", Offset = "0xAB4EB4", VA = "0xAB4EB4")]
	private void zigZagConfeti(float retraso, bool invertido)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xAB52F8", Offset = "0xAB52F8", VA = "0xAB52F8")]
	[IteratorStateMachine(typeof(<EfectoConfetiRecordEnUnPlis>d__385))]
	private IEnumerator EfectoConfetiRecordEnUnPlis()
	{
		return null;
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xAB536C", Offset = "0xAB536C", VA = "0xAB536C")]
	public void EfectoConfetiRecord()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xAB538C", Offset = "0xAB538C", VA = "0xAB538C")]
	[IteratorStateMachine(typeof(<ActivarPelotaEnUnPlis1>d__387))]
	private IEnumerator ActivarPelotaEnUnPlis1(GameObject objeto)
	{
		return null;
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xAB4378", Offset = "0xAB4378", VA = "0xAB4378")]
	[IteratorStateMachine(typeof(<activarAnimacionExtra>d__388))]
	private IEnumerator activarAnimacionExtra(Animator objeto, float espera, int animacion)
	{
		return null;
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xAB440C", Offset = "0xAB440C", VA = "0xAB440C")]
	[IteratorStateMachine(typeof(<desactivarAnimacionExtra>d__389))]
	private IEnumerator desactivarAnimacionExtra(Animator objeto, float espera)
	{
		return null;
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xAA30DC", Offset = "0xAA30DC", VA = "0xAA30DC")]
	private void PrepararChuteModoSimulator()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xAB5474", Offset = "0xAB5474", VA = "0xAB5474")]
	private void siguienteLanzador()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xAB4CC0", Offset = "0xAB4CC0", VA = "0xAB4CC0")]
	private int DameOrdenDeLanzamiento()
	{
		return default(int);
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xAB5400", Offset = "0xAB5400", VA = "0xAB5400")]
	[IteratorStateMachine(typeof(<CambiarEstadoAEspera>d__393))]
	private IEnumerator CambiarEstadoAEspera()
	{
		return null;
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xAA3938", Offset = "0xAA3938", VA = "0xAA3938")]
	public void IniciarAnimacionJugador(GameObject pelota)
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xAB54C8", Offset = "0xAB54C8", VA = "0xAB54C8")]
	private float DevuelveIntervalo(int chute)
	{
		return default(float);
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xAB558C", Offset = "0xAB558C", VA = "0xAB558C")]
	[IteratorStateMachine(typeof(<QuitarIsKinematic>d__396))]
	private IEnumerator QuitarIsKinematic(GameObject pelota, float tiempoEsperaChute)
	{
		return null;
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xAB54E8", Offset = "0xAB54E8", VA = "0xAB54E8")]
	[IteratorStateMachine(typeof(<Chute>d__397))]
	private IEnumerator Chute(GameObject pelota, float tiempoEsperaChute, float fuerza)
	{
		return null;
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xAB5610", Offset = "0xAB5610", VA = "0xAB5610")]
	public void ActivarPelota(GameObject pelota)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xAB5680", Offset = "0xAB5680", VA = "0xAB5680")]
	public void RegresarCorriendo(GameObject jugador, GameObject target)
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xAB57D0", Offset = "0xAB57D0", VA = "0xAB57D0")]
	public void CambiarJugador(GameObject lanzador, int posicion)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xAA8704", Offset = "0xAA8704", VA = "0xAA8704")]
	[IteratorStateMachine(typeof(<Shoot_FK>d__401))]
	private IEnumerator Shoot_FK()
	{
		return null;
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xAB2D80", Offset = "0xAB2D80", VA = "0xAB2D80")]
	public void ponerPuntosMarcador(int value)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xAAC4F0", Offset = "0xAAC4F0", VA = "0xAAC4F0")]
	public void rejugarMultiplayer(bool quiereRejugar)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xAAE3A0", Offset = "0xAAE3A0", VA = "0xAAE3A0")]
	[IteratorStateMachine(typeof(<siguienteBalonMultiplayer>d__404))]
	private IEnumerator siguienteBalonMultiplayer()
	{
		return null;
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xAB588C", Offset = "0xAB588C", VA = "0xAB588C")]
	public void ResetearDificultad()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xAB5DFC", Offset = "0xAB5DFC", VA = "0xAB5DFC")]
	[IteratorStateMachine(typeof(<DestroyIt>d__406))]
	private IEnumerator DestroyIt(GameObject objetoAdestruir, float timeToDestroy)
	{
		return null;
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xAB5E80", Offset = "0xAB5E80", VA = "0xAB5E80")]
	public int getPuntosPorDificultad()
	{
		return default(int);
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xAADF40", Offset = "0xAADF40", VA = "0xAADF40")]
	public void comentarioLocutado(bool haSidoGol)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xAB5FC4", Offset = "0xAB5FC4", VA = "0xAB5FC4")]
	public void IncrementarDificultad()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xAB6904", Offset = "0xAB6904", VA = "0xAB6904")]
	public void PulsacionExtraEnBotonMenu()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xAB6BF0", Offset = "0xAB6BF0", VA = "0xAB6BF0")]
	[IteratorStateMachine(typeof(<finalDelGameOverEnUnRato>d__411))]
	private IEnumerator finalDelGameOverEnUnRato()
	{
		return null;
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xAA3BD4", Offset = "0xAA3BD4", VA = "0xAA3BD4")]
	public void GameOver()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xAB6C64", Offset = "0xAB6C64", VA = "0xAB6C64")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000239")]
public class LanguageManager
{
	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LanguageManager sharedinstance;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<string> idiomas;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, string> Idioma;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string idiomaActual;

	[Token(Token = "0x1700020E")]
	public static LanguageManager instance
	{
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xABD918", Offset = "0xABD918", VA = "0xABD918")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xABD9A4", Offset = "0xABD9A4", VA = "0xABD9A4")]
	public LanguageManager()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xABE214", Offset = "0xABE214", VA = "0xABE214")]
	private void CargarIdioma(string idiomaActual)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xABE8B8", Offset = "0xABE8B8", VA = "0xABE8B8")]
	public string DameTexto(string key)
	{
		return null;
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xABE9BC", Offset = "0xABE9BC", VA = "0xABE9BC")]
	public void CambiarIdioma()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xABE13C", Offset = "0xABE13C", VA = "0xABE13C")]
	private bool ComprobarSiExisteIdioma(string idioma)
	{
		return default(bool);
	}
}
[Token(Token = "0x200023A")]
public class VRDevicesManager
{
	[Token(Token = "0x200023B")]
	public enum VRHardware
	{
		[Token(Token = "0x4000FE8")]
		HTC,
		[Token(Token = "0x4000FE9")]
		OVR
	}

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRDevicesManager instance;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VRHardware miVR;

	[Token(Token = "0x1700020F")]
	public static VRDevicesManager SharedInstance
	{
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xABEA98", Offset = "0xABEA98", VA = "0xABEA98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xABEB30", Offset = "0xABEB30", VA = "0xABEB30")]
	public VRDevicesManager()
	{
	}
}
[Token(Token = "0x200023C")]
public class Mareo : MonoBehaviour
{
	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Transform miCabeza;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 posicionAnterior;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float kMultiplicador;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject botaDerecha;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject botaIzquierda;

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xABEB40", Offset = "0xABEB40", VA = "0xABEB40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xABEB44", Offset = "0xABEB44", VA = "0xABEB44")]
	public void BuscarCabeza()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xABEBE0", Offset = "0xABEBE0", VA = "0xABEBE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xABEF88", Offset = "0xABEF88", VA = "0xABEF88")]
	public Mareo()
	{
	}
}
[Token(Token = "0x200023D")]
public class GameState : MonoBehaviour
{
	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xABEF98", Offset = "0xABEF98", VA = "0xABEF98")]
	public static int GetGameVersionOfPreviousExecution()
	{
		return default(int);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xABEFE0", Offset = "0xABEFE0", VA = "0xABEFE0")]
	public static void SetItemsDataPacket(int index, string itemsData)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xABF0C0", Offset = "0xABF0C0", VA = "0xABF0C0")]
	public static void SetNumberOfItemsDataPackets(int number)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xABF114", Offset = "0xABF114", VA = "0xABF114")]
	public static void SetGameVersionOfCurrentExecution(int value)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xABF160", Offset = "0xABF160", VA = "0xABF160")]
	public static int GetNumberOfItemsDataPackets()
	{
		return default(int);
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xABF1A8", Offset = "0xABF1A8", VA = "0xABF1A8")]
	public static string GetItemsDataPacket(int index)
	{
		return null;
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xABF230", Offset = "0xABF230", VA = "0xABF230")]
	public GameState()
	{
	}
}
[Token(Token = "0x200023E")]
public class Item
{
	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sections;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string name;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int price;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string layerColors;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int powerOrAccuracy;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int effectOrReflexes;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int resistance;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string meshName;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string hash;

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xABF238", Offset = "0xABF238", VA = "0xABF238")]
	public void FillFromHashtable(Hashtable itemInfo)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xABF83C", Offset = "0xABF83C", VA = "0xABF83C")]
	private void FillFromBSONObject(BSONObject bsonItem)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xABFC14", Offset = "0xABFC14", VA = "0xABFC14")]
	public void CheckHash()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xABFC18", Offset = "0xABFC18", VA = "0xABFC18")]
	private string ComputeHash()
	{
		return null;
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xABF834", Offset = "0xABF834", VA = "0xABF834")]
	private void UpdateHash()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xABFC58", Offset = "0xABFC58", VA = "0xABFC58")]
	public Item()
	{
	}
}
[Token(Token = "0x200023F")]
public class ItemsManager : MonoBehaviour
{
	[Token(Token = "0x2000240")]
	[CompilerGenerated]
	private sealed class <Initialize>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemsManager <>4__this;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numOfItemsDataPackets>5__2;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <found>5__3;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0xAC09A8", Offset = "0xAC09A8", VA = "0xAC09A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0xAC09F0", Offset = "0xAC09F0", VA = "0xAC09F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xABFD98", Offset = "0xABFD98", VA = "0xABFD98")]
		[DebuggerHidden]
		public <Initialize>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xAC05CC", Offset = "0xAC05CC", VA = "0xAC05CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xAC05D0", Offset = "0xAC05D0", VA = "0xAC05D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xAC09B0", Offset = "0xAC09B0", VA = "0xAC09B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, List<Item>> itemsBySections;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, Item> itemsById;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool initialized;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject PintarPlayer;

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xABFD04", Offset = "0xABFD04", VA = "0xABFD04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xABFD24", Offset = "0xABFD24", VA = "0xABFD24")]
	[IteratorStateMachine(typeof(<Initialize>d__5))]
	private IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xABFDC0", Offset = "0xABFDC0", VA = "0xABFDC0")]
	private void FillItemsDataFromJSON(string itemsData)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xAC03A0", Offset = "0xAC03A0", VA = "0xAC03A0")]
	private List<Item> GetItemsBySection(int section)
	{
		return null;
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xAC0434", Offset = "0xAC0434", VA = "0xAC0434")]
	private Item GetRandomItemBySection(int section)
	{
		return null;
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xAC052C", Offset = "0xAC052C", VA = "0xAC052C")]
	public Item GetItemById(int id)
	{
		return null;
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xAC05BC", Offset = "0xAC05BC", VA = "0xAC05BC")]
	private bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xAC05C4", Offset = "0xAC05C4", VA = "0xAC05C4")]
	public ItemsManager()
	{
	}
}
[Token(Token = "0x2000241")]
public class JSONUtils : MonoBehaviour
{
	[Token(Token = "0x2000242")]
	public class Array
	{
		[Token(Token = "0x2000243")]
		public enum Tipo
		{
			[Token(Token = "0x400100D")]
			Hash,
			[Token(Token = "0x400100E")]
			String,
			[Token(Token = "0x400100F")]
			Number,
			[Token(Token = "0x4001010")]
			Word,
			[Token(Token = "0x4001011")]
			Array
		}

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tipo tipo;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hashtable hash;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string st;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double number;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Array> array;

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xAC2D5C", Offset = "0xAC2D5C", VA = "0xAC2D5C")]
		public void Set(Tipo tipo_, [Optional] Hashtable hash_, string st_ = "", double number_ = 0.0, [Optional] List<Array> array_)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xAC2D54", Offset = "0xAC2D54", VA = "0xAC2D54")]
		public Array()
		{
		}
	}

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int at;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ch;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> escapee;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string text;

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xAC09F8", Offset = "0xAC09F8", VA = "0xAC09F8")]
	private static void error(string m)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xAC0BC4", Offset = "0xAC0BC4", VA = "0xAC0BC4")]
	private static string next(string c)
	{
		return null;
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xAC0EAC", Offset = "0xAC0EAC", VA = "0xAC0EAC")]
	private static string next()
	{
		return null;
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xAC0EFC", Offset = "0xAC0EFC", VA = "0xAC0EFC")]
	private static void white()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xAC02C0", Offset = "0xAC02C0", VA = "0xAC02C0")]
	public static Hashtable ParseJSON(string source, bool b_ = false)
	{
		return null;
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xAC0FE0", Offset = "0xAC0FE0", VA = "0xAC0FE0")]
	private static Hashtable hashtable(bool b_ = false)
	{
		return null;
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xAC1C78", Offset = "0xAC1C78", VA = "0xAC1C78")]
	private static Hashtable hashtableB(bool b_ = false)
	{
		return null;
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xAC1248", Offset = "0xAC1248", VA = "0xAC1248")]
	private static string String(bool b = false)
	{
		return null;
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xAC1EE0", Offset = "0xAC1EE0", VA = "0xAC1EE0")]
	private static double number()
	{
		return default(double);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xAC2710", Offset = "0xAC2710", VA = "0xAC2710")]
	private static List<Array> array()
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xAC297C", Offset = "0xAC297C", VA = "0xAC297C")]
	private static string word()
	{
		return null;
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xAC268C", Offset = "0xAC268C", VA = "0xAC268C")]
	private static bool Contiene(string st, string[] con)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xAC1624", Offset = "0xAC1624", VA = "0xAC1624")]
	private static Array value(bool b_ = false)
	{
		return null;
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xAC2DB0", Offset = "0xAC2DB0", VA = "0xAC2DB0")]
	public JSONUtils()
	{
	}
}
[Token(Token = "0x2000244")]
public class JSONUtilsDos : MonoBehaviour
{
	[Token(Token = "0x2000245")]
	public class Array
	{
		[Token(Token = "0x2000246")]
		public enum Tipo
		{
			[Token(Token = "0x400101C")]
			Hash,
			[Token(Token = "0x400101D")]
			String,
			[Token(Token = "0x400101E")]
			Number,
			[Token(Token = "0x400101F")]
			Word,
			[Token(Token = "0x4001020")]
			Array
		}

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tipo tipo;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hashtable hash;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string st;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double number;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Array> array;

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xAC52BC", Offset = "0xAC52BC", VA = "0xAC52BC")]
		public void Set(Tipo tipo_, [Optional] Hashtable hash_, string st_ = "", double number_ = 0.0, [Optional] List<Array> array_)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xAC52B4", Offset = "0xAC52B4", VA = "0xAC52B4")]
		public Array()
		{
		}
	}

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int at;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ch;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> escapee;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string text;

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xAC2FBC", Offset = "0xAC2FBC", VA = "0xAC2FBC")]
	private static void error(string m)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xAC3188", Offset = "0xAC3188", VA = "0xAC3188")]
	private static string next(string c)
	{
		return null;
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xAC340C", Offset = "0xAC340C", VA = "0xAC340C")]
	private static string next()
	{
		return null;
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xAC345C", Offset = "0xAC345C", VA = "0xAC345C")]
	private static void white()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xAC3540", Offset = "0xAC3540", VA = "0xAC3540")]
	public static Hashtable ParseJSON(string source)
	{
		return null;
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xAC3610", Offset = "0xAC3610", VA = "0xAC3610")]
	private static Hashtable hashtable()
	{
		return null;
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xAC41EC", Offset = "0xAC41EC", VA = "0xAC41EC")]
	private static Hashtable hashtableB()
	{
		return null;
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xAC3868", Offset = "0xAC3868", VA = "0xAC3868")]
	private static string String()
	{
		return null;
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xAC4444", Offset = "0xAC4444", VA = "0xAC4444")]
	private static double number()
	{
		return default(double);
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xAC4C74", Offset = "0xAC4C74", VA = "0xAC4C74")]
	private static List<Array> array()
	{
		return null;
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xAC4EDC", Offset = "0xAC4EDC", VA = "0xAC4EDC")]
	private static string word()
	{
		return null;
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xAC4BF0", Offset = "0xAC4BF0", VA = "0xAC4BF0")]
	private static bool Contiene(string st, string[] con)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xAC3BA4", Offset = "0xAC3BA4", VA = "0xAC3BA4")]
	private static Array value()
	{
		return null;
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xAC5310", Offset = "0xAC5310", VA = "0xAC5310")]
	public JSONUtilsDos()
	{
	}
}
[Token(Token = "0x2000247")]
public class PlayerLooksManager : MonoBehaviour
{
	[Token(Token = "0x2000248")]
	public class PlayerLook
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float skinColor;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float hairColor;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyesColor;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float height;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float complexion;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int hairId;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int facialHairId;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int faceId;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int eyebrowsId;

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xAC5FB0", Offset = "0xAC5FB0", VA = "0xAC5FB0")]
		public PlayerLook()
		{
		}
	}

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerLook[] playerLooks;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> randomLooksToReturn;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initialized;

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xAC54F4", Offset = "0xAC54F4", VA = "0xAC54F4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xAC5588", Offset = "0xAC5588", VA = "0xAC5588")]
	private void FillDataFromJSON(string data)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xAC5FB8", Offset = "0xAC5FB8", VA = "0xAC5FB8")]
	public PlayerLook GetPlayerLookById(int id)
	{
		return null;
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xAC5FF8", Offset = "0xAC5FF8", VA = "0xAC5FF8")]
	public int GetRandomLookId()
	{
		return default(int);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xAC61E0", Offset = "0xAC61E0", VA = "0xAC61E0")]
	public PlayerLooksManager()
	{
	}
}
[Token(Token = "0x2000249")]
public class RenderCustomTexture : MonoBehaviour
{
	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera currentCamera;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer[] layers;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh[] nameTextLayers;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh[] numberTextLayers;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool printCurrentColors;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] skinLayerIndices;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] hairLayersIndices;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int eyesLayerIndex;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int guanteJuegoTextureSize;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int guanteJuegoTextureBits;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject stars1;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject stars2;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject stars3;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject stars4;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject stars5;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ItemsManager itemsManager;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<int> numerosUsados;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Renderer meshRenderer;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int clothesMaterialIndex;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int skinMaterialIndex;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int hairMaterialIndex;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int bootsMaterialIndex;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int glovesMaterialIndex;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int guanteDerechoMaterialIndex;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int guanteIzquierdoMaterialIndex;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color[] skinColors;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color[] hairColors;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color[] eyesColors;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private List<RenderTexture> listaDeTexturasTemporales;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PlayerLooksManager playerLooks;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int torneo;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int match;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int tirador;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int equipo;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int ropa;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int look;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string nombre;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int ropaPortero;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private RenderTexture clothesRenderTexture;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int clothesTextureSize;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int clothesTextureBits;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RenderTexture botasRenderTexture;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int botasTextureSize;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int botasTextureBits;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private RenderTexture pielRenderTexture;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int pielTextureSize;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int pielTextureBits;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private RenderTexture gloveRenderTexture;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int gloveTextureSize;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int gloveTextureBits;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private RenderTexture guanteDerechoRenderTexture;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private RenderTexture guanteIzquierdoRenderTexture;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int guanteMuseoTextureSize;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int guanteMuseoTextureBits;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool noCambiarObjSiYaExiste;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool esParaGuantesVitrinas;

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xAC61E8", Offset = "0xAC61E8", VA = "0xAC61E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xAC62AC", Offset = "0xAC62AC", VA = "0xAC62AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xAC676C", Offset = "0xAC676C", VA = "0xAC676C")]
	public void CrearGuanteDerechoMuseo(string churro)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xAC6DD0", Offset = "0xAC6DD0", VA = "0xAC6DD0")]
	public void CrearGuanteDerecho(string churro)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xAC6EF0", Offset = "0xAC6EF0", VA = "0xAC6EF0")]
	public void CrearGuanteIzquierdo(string churro)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xAC7010", Offset = "0xAC7010", VA = "0xAC7010")]
	public void ReleaseAllTemporaryRenderTextures()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xAC6890", Offset = "0xAC6890", VA = "0xAC6890")]
	public void SetLayerColors(string layerColorsStr, bool blendWithPreviousValues = false)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xAC6DA0", Offset = "0xAC6DA0", VA = "0xAC6DA0")]
	public void RenderInRenderTexture(RenderTexture renderTexture)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xAC70D0", Offset = "0xAC70D0", VA = "0xAC70D0")]
	public void AddRenderObject(Renderer obj)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xAC7168", Offset = "0xAC7168", VA = "0xAC7168")]
	public void inicializarChute(string datos)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xAC7330", Offset = "0xAC7330", VA = "0xAC7330")]
	public void CrearBotas()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xAC7470", Offset = "0xAC7470", VA = "0xAC7470")]
	public void CrearRopa()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xAC7A4C", Offset = "0xAC7A4C", VA = "0xAC7A4C")]
	public void CrearGloves()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xAC7B98", Offset = "0xAC7B98", VA = "0xAC7B98")]
	public void CrearRopaPortero()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xAC77F4", Offset = "0xAC77F4", VA = "0xAC77F4")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xAC785C", Offset = "0xAC785C", VA = "0xAC785C")]
	public void SetNumber(string numberStr)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xAC78C4", Offset = "0xAC78C4", VA = "0xAC78C4")]
	public void SetStarsEnabled(int value)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xAC7D14", Offset = "0xAC7D14", VA = "0xAC7D14")]
	public void CrearPiel()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xAC81AC", Offset = "0xAC81AC", VA = "0xAC81AC")]
	public void SetEyesColor(Color color)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xAC811C", Offset = "0xAC811C", VA = "0xAC811C")]
	public void SetSkinColor(Color color)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xAC81B8", Offset = "0xAC81B8", VA = "0xAC81B8")]
	public void SetLayerColor(int layerIndex, Color color)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xAC81C0", Offset = "0xAC81C0", VA = "0xAC81C0")]
	public void SetLayerColor(int layerIndex, Color color, bool maintainPreviousAlpha)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xAC8038", Offset = "0xAC8038", VA = "0xAC8038")]
	public Color ComputeColorFromFloat(float colorFloat, Color[] colorsArray)
	{
		return default(Color);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xAC832C", Offset = "0xAC832C", VA = "0xAC832C")]
	public RenderCustomTexture()
	{
	}
}
[Token(Token = "0x200024A")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objects;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] labels;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xAC83D0", Offset = "0xAC83D0", VA = "0xAC83D0")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xAC83D4", Offset = "0xAC83D4", VA = "0xAC83D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xAC83D8", Offset = "0xAC83D8", VA = "0xAC83D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xAC8498", Offset = "0xAC8498", VA = "0xAC8498")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xAC849C", Offset = "0xAC849C", VA = "0xAC849C")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xAC87EC", Offset = "0xAC87EC", VA = "0xAC87EC")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xAC8714", Offset = "0xAC8714", VA = "0xAC8714")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xAC88B4", Offset = "0xAC88B4", VA = "0xAC88B4")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xAC8494", Offset = "0xAC8494", VA = "0xAC8494")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xAC88B8", Offset = "0xAC88B8", VA = "0xAC88B8")]
	public SteamVR_ControllerManager()
	{
	}
}
[Token(Token = "0x200024B")]
public class VRTK_ControllerEvents_ListenerExample : MonoBehaviour
{
	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xAC8A04", Offset = "0xAC8A04", VA = "0xAC8A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xAC91C8", Offset = "0xAC91C8", VA = "0xAC91C8")]
	private void DebugLogger(uint index, string button, string action, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xAC96A0", Offset = "0xAC96A0", VA = "0xAC96A0")]
	private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xAC9728", Offset = "0xAC9728", VA = "0xAC9728")]
	private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xAC97B0", Offset = "0xAC97B0", VA = "0xAC97B0")]
	private void DoTriggerTouchStart(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xAC9838", Offset = "0xAC9838", VA = "0xAC9838")]
	private void DoTriggerTouchEnd(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xAC98C0", Offset = "0xAC98C0", VA = "0xAC98C0")]
	private void DoTriggerHairlineStart(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xAC9948", Offset = "0xAC9948", VA = "0xAC9948")]
	private void DoTriggerHairlineEnd(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xAC99D0", Offset = "0xAC99D0", VA = "0xAC99D0")]
	private void DoTriggerClicked(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xAC9A58", Offset = "0xAC9A58", VA = "0xAC9A58")]
	private void DoTriggerUnclicked(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xAC9AE0", Offset = "0xAC9AE0", VA = "0xAC9AE0")]
	private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xAC9B68", Offset = "0xAC9B68", VA = "0xAC9B68")]
	private void DoApplicationMenuPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xAC9BF0", Offset = "0xAC9BF0", VA = "0xAC9BF0")]
	private void DoApplicationMenuReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xAC9C78", Offset = "0xAC9C78", VA = "0xAC9C78")]
	private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xAC9D00", Offset = "0xAC9D00", VA = "0xAC9D00")]
	private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xAC9D88", Offset = "0xAC9D88", VA = "0xAC9D88")]
	private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xAC9E10", Offset = "0xAC9E10", VA = "0xAC9E10")]
	private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xAC9E98", Offset = "0xAC9E98", VA = "0xAC9E98")]
	private void DoTouchpadTouchStart(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xAC9F20", Offset = "0xAC9F20", VA = "0xAC9F20")]
	private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xAC9FA8", Offset = "0xAC9FA8", VA = "0xAC9FA8")]
	private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xACA030", Offset = "0xACA030", VA = "0xACA030")]
	public VRTK_ControllerEvents_ListenerExample()
	{
	}
}
[Token(Token = "0x200024C")]
public class museoTrofeo : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	[CompilerGenerated]
	private sealed class <ActivarSonidosCopa>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject copa;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xACAE40", Offset = "0xACAE40", VA = "0xACAE40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xACAE88", Offset = "0xACAE88", VA = "0xACAE88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xACA0AC", Offset = "0xACA0AC", VA = "0xACA0AC")]
		[DebuggerHidden]
		public <ActivarSonidosCopa>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xACAD5C", Offset = "0xACAD5C", VA = "0xACAD5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xACAD60", Offset = "0xACAD60", VA = "0xACAD60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xACAE48", Offset = "0xACAE48", VA = "0xACAE48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024E")]
	[CompilerGenerated]
	private sealed class <ActivarDetectorDeCercania>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public museoTrofeo <>4__this;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0xACAF4C", Offset = "0xACAF4C", VA = "0xACAF4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0xACAF94", Offset = "0xACAF94", VA = "0xACAF94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xACA148", Offset = "0xACA148", VA = "0xACA148")]
		[DebuggerHidden]
		public <ActivarDetectorDeCercania>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xACAE90", Offset = "0xACAE90", VA = "0xACAE90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xACAE94", Offset = "0xACAE94", VA = "0xACAE94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xACAF54", Offset = "0xACAF54", VA = "0xACAF54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024F")]
	[CompilerGenerated]
	private sealed class <StartContinuacion>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public museoTrofeo <>4__this;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0xACCA04", Offset = "0xACCA04", VA = "0xACCA04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xACCA4C", Offset = "0xACCA4C", VA = "0xACCA4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xACA364", Offset = "0xACA364", VA = "0xACA364")]
		[DebuggerHidden]
		public <StartContinuacion>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xACAF9C", Offset = "0xACAF9C", VA = "0xACAF9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xACAFA0", Offset = "0xACAFA0", VA = "0xACAFA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xACCA0C", Offset = "0xACCA0C", VA = "0xACCA0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000250")]
	[CompilerGenerated]
	private sealed class <ActivarCopa>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject copa;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public museoTrofeo <>4__this;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xACCBB8", Offset = "0xACCBB8", VA = "0xACCBB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0xACCC00", Offset = "0xACCC00", VA = "0xACCC00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xACA41C", Offset = "0xACA41C", VA = "0xACA41C")]
		[DebuggerHidden]
		public <ActivarCopa>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xACCA54", Offset = "0xACCA54", VA = "0xACCA54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xACCA58", Offset = "0xACCA58", VA = "0xACCA58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xACCBC0", Offset = "0xACCBC0", VA = "0xACCBC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numNivel;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public InitGame.ModosDeJuego tipoNivel;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool bNivelBloqueado;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject miCamara;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject miBoard;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bDetectorDeCercaniaActivado;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int ticksSinHacerComprobacionDeGuante;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture guanteUSA;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public zonasDeMuseoManager managerDeZonas;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject guanteSeleccionado;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer guante;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int guanteTextureSize;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int guanteTextureBits;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer[] listadDeRenders;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Canvas[] listadDeCanvas;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject botonPlayTrofeo;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject botonBloqueadoTrofeo;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMesh numReto;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text explicacionReto;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text txtGatillo;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text txtExplicacion1;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text txtGuantes;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text txtGigante;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text txtPlaya;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text txtVida;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text txtTenis;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text txtMuro;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text txtExplicacion2;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject cup_base_glove_selected;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject copa_arcade_oro;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject copa_arcade_plata;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject copa_arcade_bronce;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject copa_simulator_oro;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject copa_simulator_plata;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject copa_simulator_bronce;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject cup_base_glass_01;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject cup_base_glass_02;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject RenderTextureVRGloves_R;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int oldBoton;

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xACA038", Offset = "0xACA038", VA = "0xACA038")]
	[IteratorStateMachine(typeof(<ActivarSonidosCopa>d__38))]
	private IEnumerator ActivarSonidosCopa(GameObject copa)
	{
		return null;
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xACA0D4", Offset = "0xACA0D4", VA = "0xACA0D4")]
	[IteratorStateMachine(typeof(<ActivarDetectorDeCercania>d__39))]
	private IEnumerator ActivarDetectorDeCercania()
	{
		return null;
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xACA170", Offset = "0xACA170", VA = "0xACA170")]
	private void DeterminarEstadoBotones()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xACA2F0", Offset = "0xACA2F0", VA = "0xACA2F0")]
	[IteratorStateMachine(typeof(<StartContinuacion>d__41))]
	private IEnumerator StartContinuacion()
	{
		return null;
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xACA38C", Offset = "0xACA38C", VA = "0xACA38C")]
	[IteratorStateMachine(typeof(<ActivarCopa>d__42))]
	private IEnumerator ActivarCopa(GameObject copa)
	{
		return null;
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xACA444", Offset = "0xACA444", VA = "0xACA444")]
	private void ponerTraduccionBoard(GameObject miBoard, bool soloCaraA)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xACA75C", Offset = "0xACA75C", VA = "0xACA75C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xACA9EC", Offset = "0xACA9EC", VA = "0xACA9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xACAACC", Offset = "0xACAACC", VA = "0xACAACC")]
	public void manoProximaAEstePulsador(bool proxima)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xACAC1C", Offset = "0xACAC1C", VA = "0xACAC1C")]
	public void customizarGuante(int teamId)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xACAD40", Offset = "0xACAD40", VA = "0xACAD40")]
	public museoTrofeo()
	{
	}
}
[Token(Token = "0x2000251")]
public class NegroAtravesar : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera camaraOculus;

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xACCC08", Offset = "0xACCC08", VA = "0xACCC08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xACCD24", Offset = "0xACCD24", VA = "0xACCD24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xACCD28", Offset = "0xACCD28", VA = "0xACCD28")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xACCE0C", Offset = "0xACCE0C", VA = "0xACCE0C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xACCEF0", Offset = "0xACCEF0", VA = "0xACCEF0")]
	public NegroAtravesar()
	{
	}
}
[Token(Token = "0x2000252")]
public class NivelesArcade
{
	[Token(Token = "0x2000253")]
	public enum TipoMissionArcade
	{
		[Token(Token = "0x40010A0")]
		ObjNparadas,
		[Token(Token = "0x40010A1")]
		ObjNbloqueos,
		[Token(Token = "0x40010A2")]
		ObjNbloqueos1mano,
		[Token(Token = "0x40010A3")]
		ObjNbloqueosManoIzquierda,
		[Token(Token = "0x40010A4")]
		ObjNbloqueosManoDerecha,
		[Token(Token = "0x40010A5")]
		ObjNBloqueos2Manos,
		[Token(Token = "0x40010A6")]
		ObjNParadasCabeza,
		[Token(Token = "0x40010A7")]
		ObjNParadasUsandoBalon,
		[Token(Token = "0x40010A8")]
		ObjNParadasCon2ManosOcupadas,
		[Token(Token = "0x40010A9")]
		ObjNParadasConPunyoCerrado,
		[Token(Token = "0x40010AA")]
		ObjNpowerActivados,
		[Token(Token = "0x40010AB")]
		ObjNmurosActivados,
		[Token(Token = "0x40010AC")]
		ObjNGigantesActivados,
		[Token(Token = "0x40010AD")]
		ObjNtennisParadas,
		[Token(Token = "0x40010AE")]
		ObjNPlayasParadas,
		[Token(Token = "0x40010AF")]
		ObjNBombasEsquivadas,
		[Token(Token = "0x40010B0")]
		ObjNPelotasParadasConGuantesGrandes,
		[Token(Token = "0x40010B1")]
		ObjNPelotasParadasSiendoGigante,
		[Token(Token = "0x40010B2")]
		ObjNparadasEspecialTenis,
		[Token(Token = "0x40010B3")]
		ObjNparadasEspecialPlaya,
		[Token(Token = "0x40010B4")]
		ObjNparadasEspecialDobles,
		[Token(Token = "0x40010B5")]
		ObjNparadasEspecialTriples,
		[Token(Token = "0x40010B6")]
		ObjNparadasEspecialGigante,
		[Token(Token = "0x40010B7")]
		ObjNparadasEspecialPlayaTriple
	}

	[Token(Token = "0x2000254")]
	public struct GoalieMissionArcade
	{
		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoMissionArcade tipoMission;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int numObjetivo;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float dificultadInicial;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int numNivel;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string stadium;
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xACC4A8", Offset = "0xACC4A8", VA = "0xACC4A8")]
	public static string getExplicacion(GoalieMissionArcade nivel)
	{
		return null;
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xACCEF8", Offset = "0xACCEF8", VA = "0xACCEF8")]
	public static string climaDelNivel(int numNivel)
	{
		return null;
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xACBCF4", Offset = "0xACBCF4", VA = "0xACBCF4")]
	public static GoalieMissionArcade GetMissionArcade(int numNivel)
	{
		return default(GoalieMissionArcade);
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xACD124", Offset = "0xACD124", VA = "0xACD124")]
	public NivelesArcade()
	{
	}
}
[Token(Token = "0x2000255")]
public class NivelesSimulator
{
	[Token(Token = "0x2000256")]
	public enum TipoMissionSimulator
	{
		[Token(Token = "0x40010BE")]
		ObjNparadas,
		[Token(Token = "0x40010BF")]
		ObjNbloqueos,
		[Token(Token = "0x40010C0")]
		ObjNbloqueos1mano,
		[Token(Token = "0x40010C1")]
		ObjNbloqueosManoIzquierda,
		[Token(Token = "0x40010C2")]
		ObjNbloqueosManoDerecha,
		[Token(Token = "0x40010C3")]
		ObjNBloqueos2Manos,
		[Token(Token = "0x40010C4")]
		ObjNParadasCabeza,
		[Token(Token = "0x40010C5")]
		ObjNParadasUsandoBalon,
		[Token(Token = "0x40010C6")]
		ObjNParadasCon2ManosOcupadas,
		[Token(Token = "0x40010C7")]
		ObjNParadasConPunyoCerrado
	}

	[Token(Token = "0x2000257")]
	public struct GoalieMissionSimulator
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoMissionSimulator tipoMission;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int numObjetivo;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float dificultadInicial;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int torneo;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int partido;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int equipo;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numNivel;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stadium;
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x94D7C8", Offset = "0x94D7C8", VA = "0x94D7C8")]
	public static string DevuelveEquipoSegunID(int id)
	{
		return null;
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x94E710", Offset = "0x94E710", VA = "0x94E710")]
	public static string climaDelNivel(int numNivel)
	{
		return null;
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x94E93C", Offset = "0x94E93C", VA = "0x94E93C")]
	public static string getExplicacion(GoalieMissionSimulator nivel)
	{
		return null;
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x94EDF4", Offset = "0x94EDF4", VA = "0x94EDF4")]
	public static GoalieMissionSimulator GetMissionSimulator(int numNivel)
	{
		return default(GoalieMissionSimulator);
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x94F224", Offset = "0x94F224", VA = "0x94F224")]
	public NivelesSimulator()
	{
	}
}
[Token(Token = "0x2000258")]
public class OculusInput : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	public enum ContextoOculusInput
	{
		[Token(Token = "0x40010D8")]
		museo,
		[Token(Token = "0x40010D9")]
		settings,
		[Token(Token = "0x40010DA")]
		initgame
	}

	[Token(Token = "0x200025A")]
	[CompilerGenerated]
	private sealed class <Empezar>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusInput <>4__this;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera <camaraOculus>5__2;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <p>5__3;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x95077C", Offset = "0x95077C", VA = "0x95077C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x9507C4", Offset = "0x9507C4", VA = "0x9507C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x94FEE8", Offset = "0x94FEE8", VA = "0x94FEE8")]
		[DebuggerHidden]
		public <Empezar>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x9504C8", Offset = "0x9504C8", VA = "0x9504C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x9504CC", Offset = "0x9504CC", VA = "0x9504CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x950784", Offset = "0x950784", VA = "0x950784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025B")]
	[CompilerGenerated]
	private sealed class <Wait>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusInput <>4__this;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x950880", Offset = "0x950880", VA = "0x950880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x9508C8", Offset = "0x9508C8", VA = "0x9508C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x950214", Offset = "0x950214", VA = "0x950214")]
		[DebuggerHidden]
		public <Wait>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x9507CC", Offset = "0x9507CC", VA = "0x9507CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x9507D0", Offset = "0x9507D0", VA = "0x9507D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x950888", Offset = "0x950888", VA = "0x950888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform tIzquierdo;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform tDerecho;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 posicionInicial;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRTK_ControllerActions scriptCtlActionsIzdo;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRTK_ControllerActions scriptCtlActionsDcho;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ContextoOculusInput miContexto;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PXR_Manager pxrManager;

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x94F22C", Offset = "0x94F22C", VA = "0x94F22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x94F7B8", Offset = "0x94F7B8", VA = "0x94F7B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x94F8A4", Offset = "0x94F8A4", VA = "0x94F8A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x94FAEC", Offset = "0x94FAEC", VA = "0x94FAEC")]
	private void Recentrar(bool a)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x94FE58", Offset = "0x94FE58", VA = "0x94FE58")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x94F744", Offset = "0x94F744", VA = "0x94F744")]
	[IteratorStateMachine(typeof(<Empezar>d__12))]
	private IEnumerator Empezar()
	{
		return null;
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x94FF10", Offset = "0x94FF10", VA = "0x94FF10")]
	private void Recolocar(Transform tCabeza, Transform posIni)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x94FA78", Offset = "0x94FA78", VA = "0x94FA78")]
	[IteratorStateMachine(typeof(<Wait>d__15))]
	private IEnumerator Wait()
	{
		return null;
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x95023C", Offset = "0x95023C", VA = "0x95023C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x95038C", Offset = "0x95038C", VA = "0x95038C")]
	public Vector3 GetPos(bool derecha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x9502BC", Offset = "0x9502BC", VA = "0x9502BC")]
	public Quaternion GetRot(bool derecha)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x950468", Offset = "0x950468", VA = "0x950468")]
	public OculusInput()
	{
	}
}
[Token(Token = "0x200025C")]
public class PajaroLoco : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	[CompilerGenerated]
	private sealed class <VolverALaManada>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PajaroLoco <>4__this;

		[Token(Token = "0x1700021E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x950E54", Offset = "0x950E54", VA = "0x950E54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x950E9C", Offset = "0x950E9C", VA = "0x950E9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x950CC8", Offset = "0x950CC8", VA = "0x950CC8")]
		[DebuggerHidden]
		public <VolverALaManada>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x950D00", Offset = "0x950D00", VA = "0x950D00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x950D04", Offset = "0x950D04", VA = "0x950D04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x950E5C", Offset = "0x950E5C", VA = "0x950E5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool voyEnManada;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild scriptVolar;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation animacionDron;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CapsuleCollider collider;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x9508D0", Offset = "0x9508D0", VA = "0x9508D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x9508D4", Offset = "0x9508D4", VA = "0x9508D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x9508D8", Offset = "0x9508D8", VA = "0x9508D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x950BC0", Offset = "0x950BC0", VA = "0x950BC0")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x950B4C", Offset = "0x950B4C", VA = "0x950B4C")]
	[IteratorStateMachine(typeof(<VolverALaManada>d__8))]
	private IEnumerator VolverALaManada()
	{
		return null;
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x950CF0", Offset = "0x950CF0", VA = "0x950CF0")]
	public PajaroLoco()
	{
	}
}
[Token(Token = "0x200025E")]
public class ParametrosChute : MonoBehaviour
{
	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int numDisparo;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PressetsPenalties.ParametrosDelPenalty parametrosPenalty;

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x950EA4", Offset = "0x950EA4", VA = "0x950EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x950EAC", Offset = "0x950EAC", VA = "0x950EAC")]
	public void GeneraDatosChute(int posicion)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x951140", Offset = "0x951140", VA = "0x951140")]
	public void GeneraDatosChute(int posicion, int dificultad, int tipoPenalty)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x95121C", Offset = "0x95121C", VA = "0x95121C")]
	public ParametrosChute()
	{
	}
}
[Token(Token = "0x200025F")]
public class Pelota : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	public enum BallState
	{
		[Token(Token = "0x400110D")]
		Plantada,
		[Token(Token = "0x400110E")]
		Viva,
		[Token(Token = "0x400110F")]
		ALaEspera,
		[Token(Token = "0x4001110")]
		Gol,
		[Token(Token = "0x4001111")]
		Parada
	}

	[Token(Token = "0x2000261")]
	[CompilerGenerated]
	private sealed class <ComprobarSentido3>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pelota <>4__this;

		[Token(Token = "0x17000220")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x952F14", Offset = "0x952F14", VA = "0x952F14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x952F5C", Offset = "0x952F5C", VA = "0x952F5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x952D04", Offset = "0x952D04", VA = "0x952D04")]
		[DebuggerHidden]
		public <ComprobarSentido3>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x952E00", Offset = "0x952E00", VA = "0x952E00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x952E04", Offset = "0x952E04", VA = "0x952E04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x952F1C", Offset = "0x952F1C", VA = "0x952F1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[CompilerGenerated]
	private sealed class <ComprobarSentido2>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pelota <>4__this;

		[Token(Token = "0x17000222")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x9530A0", Offset = "0x9530A0", VA = "0x9530A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x9530E8", Offset = "0x9530E8", VA = "0x9530E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x952DA0", Offset = "0x952DA0", VA = "0x952DA0")]
		[DebuggerHidden]
		public <ComprobarSentido2>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x952F64", Offset = "0x952F64", VA = "0x952F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x952F68", Offset = "0x952F68", VA = "0x952F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x9530A8", Offset = "0x9530A8", VA = "0x9530A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000263")]
	[CompilerGenerated]
	private sealed class <ComprobarSentido1>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pelota <>4__this;

		[Token(Token = "0x17000224")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x95320C", Offset = "0x95320C", VA = "0x95320C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x953254", Offset = "0x953254", VA = "0x953254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x952DC8", Offset = "0x952DC8", VA = "0x952DC8")]
		[DebuggerHidden]
		public <ComprobarSentido1>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x9530F0", Offset = "0x9530F0", VA = "0x9530F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x9530F4", Offset = "0x9530F4", VA = "0x9530F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x953214", Offset = "0x953214", VA = "0x953214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010EC")]
	private const int ACIERTO = 0;

	[Token(Token = "0x40010ED")]
	private const int FALLO = 1;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pelotaTrampa;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool pelotaMatrix;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool pelotaPlaya;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool pelotaTenis;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool pelotaMatrixUltima;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BallTrailNormal;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject BallTrailMatrix;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ParticulasMatrix;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject player;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int puntosASumar;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int orden;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numeroDePath;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject trail;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject particulasBomba;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject particulasDesparecer;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool bHaTocadoElSueloAlgunaVez;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool bHemosDadoPremioPorCapturaCachi;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float zDeReferenciaParaVerSiHaSidoParada;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 v_DireccionChute;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 v_CorreccionChute;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float multiplicadorFChute;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public BallState ballState;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool flagPalo;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine corrutinaSentido1;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine corrutinaSentido2;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine corrutinaSentido3;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool corrutinaSentido1pendienteDeParar;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool corrutinaSentido2pendienteDeParar;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool corrutinaSentido3pendienteDeParar;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	public bool pieMeHaDadoUnToque;

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x951270", Offset = "0x951270", VA = "0x951270")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x9514CC", Offset = "0x9514CC", VA = "0x9514CC")]
	public void bombaExplota()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x951B08", Offset = "0x951B08", VA = "0x951B08")]
	public void desaparecerPelota()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x951DAC", Offset = "0x951DAC", VA = "0x951DAC")]
	public void corrutina3deSeguridad()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x951E64", Offset = "0x951E64", VA = "0x951E64")]
	private void OnCollisionEnter(Collision item)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x95276C", Offset = "0x95276C", VA = "0x95276C")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x952C6C", Offset = "0x952C6C", VA = "0x952C6C")]
	public void PelotaFuera()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x952CC8", Offset = "0x952CC8", VA = "0x952CC8")]
	public void PelotaParadaCachi()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x951810", Offset = "0x951810", VA = "0x951810")]
	private void ParoCorutinas()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x951874", Offset = "0x951874", VA = "0x951874")]
	public void DispararAnimacionCelebracion(int celebracion)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x952670", Offset = "0x952670", VA = "0x952670")]
	private void AplicarDrag()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x951DF0", Offset = "0x951DF0", VA = "0x951DF0")]
	[IteratorStateMachine(typeof(<ComprobarSentido3>d__44))]
	private IEnumerator ComprobarSentido3()
	{
		return null;
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x952D2C", Offset = "0x952D2C", VA = "0x952D2C")]
	[IteratorStateMachine(typeof(<ComprobarSentido2>d__45))]
	private IEnumerator ComprobarSentido2()
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x9526F8", Offset = "0x9526F8", VA = "0x9526F8")]
	[IteratorStateMachine(typeof(<ComprobarSentido1>d__46))]
	private IEnumerator ComprobarSentido1()
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x952DF0", Offset = "0x952DF0", VA = "0x952DF0")]
	public Pelota()
	{
	}
}
[Token(Token = "0x2000264")]
public class pelotaCapturable : MonoBehaviour
{
	[Token(Token = "0x2000265")]
	[CompilerGenerated]
	private sealed class <dejarOtraVezTocar>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public pelotaCapturable <>4__this;

		[Token(Token = "0x17000226")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x953BD4", Offset = "0x953BD4", VA = "0x953BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x953C1C", Offset = "0x953C1C", VA = "0x953C1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x9532D0", Offset = "0x9532D0", VA = "0x9532D0")]
		[DebuggerHidden]
		public <dejarOtraVezTocar>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x953B18", Offset = "0x953B18", VA = "0x953B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x953B1C", Offset = "0x953B1C", VA = "0x953B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x953BDC", Offset = "0x953BDC", VA = "0x953BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bPelotaAtadaAGuante;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool bPelotaRecienSoltada;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float escalaNormalDeEstaPelota;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> guantesTocandoEstaPelota;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pelotaYaCapturadaPorDobleGuanteAlgunaVez;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject mandoDondeEstaAtadaLaPelota;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bToquesLimitados;

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x95325C", Offset = "0x95325C", VA = "0x95325C")]
	[IteratorStateMachine(typeof(<dejarOtraVezTocar>d__7))]
	private IEnumerator dejarOtraVezTocar()
	{
		return null;
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x9532F8", Offset = "0x9532F8", VA = "0x9532F8")]
	public void guanteTocando(int numGuante, bool toca)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x952C24", Offset = "0x952C24", VA = "0x952C24")]
	public int iNumGuantesTocando()
	{
		return default(int);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x95341C", Offset = "0x95341C", VA = "0x95341C")]
	private void OnCollisionEnter(Collision item)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x953A88", Offset = "0x953A88", VA = "0x953A88")]
	public pelotaCapturable()
	{
	}
}
[Token(Token = "0x2000266")]
public class PelotaDebug : MonoBehaviour
{
	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToDestroy;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string str;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float counter;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool noHaEntrado;

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x953C24", Offset = "0x953C24", VA = "0x953C24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x953D44", Offset = "0x953D44", VA = "0x953D44")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x953DBC", Offset = "0x953DBC", VA = "0x953DBC")]
	public PelotaDebug()
	{
	}
}
[Token(Token = "0x2000267")]
public class PicoRecords : LogrosRecords
{
	[Token(Token = "0x2000268")]
	private enum TipoOperacion
	{
		[Token(Token = "0x4001137")]
		obtenerResultados,
		[Token(Token = "0x4001138")]
		subirRecord
	}

	[Token(Token = "0x2000269")]
	private struct Operacion
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoOperacion tipoOperacion;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string tablaSolicitada;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int numeroResultadosQueQuiero;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int record;
	}

	[Token(Token = "0x200026A")]
	private enum TipoDatos
	{
		[Token(Token = "0x400113E")]
		top,
		[Token(Token = "0x400113F")]
		alrededorMio
	}

	[Token(Token = "0x200026B")]
	[CompilerGenerated]
	private sealed class <EsperarAMirar>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PicoRecords <>4__this;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x955A8C", Offset = "0x955A8C", VA = "0x955A8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x955AD4", Offset = "0x955AD4", VA = "0x955AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x953F88", Offset = "0x953F88", VA = "0x953F88")]
		[DebuggerHidden]
		public <EsperarAMirar>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x955918", Offset = "0x955918", VA = "0x955918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x95591C", Offset = "0x95591C", VA = "0x95591C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x955A94", Offset = "0x955A94", VA = "0x955A94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026C")]
	[CompilerGenerated]
	private sealed class <SiguienteOperacionConPausa>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PicoRecords <>4__this;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x955B8C", Offset = "0x955B8C", VA = "0x955B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x955BD4", Offset = "0x955BD4", VA = "0x955BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x954738", Offset = "0x954738", VA = "0x954738")]
		[DebuggerHidden]
		public <SiguienteOperacionConPausa>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x955ADC", Offset = "0x955ADC", VA = "0x955ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x955AE0", Offset = "0x955AE0", VA = "0x955AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x955B94", Offset = "0x955B94", VA = "0x955B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TipoDatos tipoDatosActual;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool ejecutandoOperacion;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Operacion> operacionesPendientes;

	[Token(Token = "0x400112C")]
	private const int kFramesQueMeSalto = 30;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int framesQueLlevoSaltados;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int nResultadosQueQuiero;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string tablaSolicitada;

	[Token(Token = "0x4001130")]
	private const int kRangoResultados = 100;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Resultado> resultadoActual;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string m_myID;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string m_myPicoID;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Resultado> resultadosTop;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public IAPManager iapManager;

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x953DCC", Offset = "0x953DCC", VA = "0x953DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x953F14", Offset = "0x953F14", VA = "0x953F14")]
	[IteratorStateMachine(typeof(<EsperarAMirar>d__15))]
	private IEnumerator EsperarAMirar()
	{
		return null;
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x953FB0", Offset = "0x953FB0", VA = "0x953FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x954078", Offset = "0x954078", VA = "0x954078")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x954164", Offset = "0x954164", VA = "0x954164", Slot = "15")]
	public override string DameMiNombre()
	{
		return null;
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x9542D4", Offset = "0x9542D4", VA = "0x9542D4", Slot = "8")]
	public override void GuardarLogros()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x9542D8", Offset = "0x9542D8", VA = "0x9542D8", Slot = "11")]
	public override void InicializarTablas(List<InfoTabla> tablas)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x9542DC", Offset = "0x9542DC", VA = "0x9542DC", Slot = "10")]
	public override void InicializarTablas(string[] tablas)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x9542E0", Offset = "0x9542E0", VA = "0x9542E0", Slot = "9")]
	public override void InicializarLogros()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x9542E4", Offset = "0x9542E4", VA = "0x9542E4", Slot = "14")]
	public override void MarcarLogroCompletado(string idLogro)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x95435C", Offset = "0x95435C", VA = "0x95435C", Slot = "17")]
	public override void ComprobarYDarLogroPlatino()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x954360", Offset = "0x954360", VA = "0x954360", Slot = "12")]
	public override void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x95456C", Offset = "0x95456C", VA = "0x95456C", Slot = "13")]
	public override void SubirRecord(string tabla, int record)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x954734", Offset = "0x954734", VA = "0x954734", Slot = "16")]
	public override void MostrarTienda()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x954004", Offset = "0x954004", VA = "0x954004")]
	[IteratorStateMachine(typeof(<SiguienteOperacionConPausa>d__28))]
	private IEnumerator SiguienteOperacionConPausa()
	{
		return null;
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x954760", Offset = "0x954760", VA = "0x954760")]
	private void SiguienteOperacion()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x954CC0", Offset = "0x954CC0", VA = "0x954CC0")]
	private void SubirRecordCallback(Message<bool> msg)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x954D74", Offset = "0x954D74", VA = "0x954D74")]
	private void ResultadosCallback(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x955760", Offset = "0x955760", VA = "0x955760", Slot = "19")]
	public override void ComprarJuego()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x955824", Offset = "0x955824", VA = "0x955824")]
	public PicoRecords()
	{
	}
}
[Token(Token = "0x200026D")]
public class ponerSettingsEnTV : MonoBehaviour
{
	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x955BDC", Offset = "0x955BDC", VA = "0x955BDC")]
	public void advertenciaDePuertos()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x955F20", Offset = "0x955F20", VA = "0x955F20")]
	public void advertenciaDeTamanyoInvalido()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x956264", Offset = "0x956264", VA = "0x956264")]
	public void refrescarTV()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x957164", Offset = "0x957164", VA = "0x957164")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x957318", Offset = "0x957318", VA = "0x957318")]
	public void ApagarMensajePro()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x9573E4", Offset = "0x9573E4", VA = "0x9573E4")]
	public void Comprar()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x9573E8", Offset = "0x9573E8", VA = "0x9573E8")]
	public void NoComprar()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x9573EC", Offset = "0x9573EC", VA = "0x9573EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x9573F0", Offset = "0x9573F0", VA = "0x9573F0")]
	public ponerSettingsEnTV()
	{
	}
}
[Token(Token = "0x200026E")]
public class PressetsPenalties
{
	[Token(Token = "0x200026F")]
	public struct ParametrosDelPenalty
	{
		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fuerza;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float altura;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float direccion;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float efecto;
	}

	[Token(Token = "0x4001146")]
	public const int MUY_BAJA = 1;

	[Token(Token = "0x4001147")]
	public const int BAJA = 2;

	[Token(Token = "0x4001148")]
	public const int NORMAL = 3;

	[Token(Token = "0x4001149")]
	public const int ALTA = 4;

	[Token(Token = "0x400114A")]
	public const int MUY_ALTA = 5;

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x950F6C", Offset = "0x950F6C", VA = "0x950F6C")]
	public static ParametrosDelPenalty GetParametros(int posicion, float dificultad)
	{
		return default(ParametrosDelPenalty);
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x94D308", Offset = "0x94D308", VA = "0x94D308")]
	public static ParametrosDelPenalty GetParametrosFinales(int posicion, int dificultad, int tipoPenalty)
	{
		return default(ParametrosDelPenalty);
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x9573F8", Offset = "0x9573F8", VA = "0x9573F8")]
	public PressetsPenalties()
	{
	}
}
[Token(Token = "0x2000270")]
public class ProximidadGuanteMuseo : MonoBehaviour
{
	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int ticksSinReviarCartel;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int dejaEstosSegundosEncendidoElCartel;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int noDejarTocarNada;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject AvisoGuantes;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cup_base_glove;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject cup_base_glass_02;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject cup_base_glove_selected;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text explicacionReto;

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x957400", Offset = "0x957400", VA = "0x957400")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x957404", Offset = "0x957404", VA = "0x957404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x957470", Offset = "0x957470", VA = "0x957470")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x9576EC", Offset = "0x9576EC", VA = "0x9576EC")]
	private void OnTriggerExit(Collider item)
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x9576F0", Offset = "0x9576F0", VA = "0x9576F0")]
	public ProximidadGuanteMuseo()
	{
	}
}
[Token(Token = "0x2000271")]
public class ProximidadPulsadorMuseo : MonoBehaviour
{
	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BlinkBoton blink;

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x9576F8", Offset = "0x9576F8", VA = "0x9576F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x9576FC", Offset = "0x9576FC", VA = "0x9576FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x957700", Offset = "0x957700", VA = "0x957700")]
	private void OnTriggerEnter(Collider item)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x9577EC", Offset = "0x9577EC", VA = "0x9577EC")]
	private void OnTriggerExit(Collider item)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x9578AC", Offset = "0x9578AC", VA = "0x9578AC")]
	public ProximidadPulsadorMuseo()
	{
	}
}
[Token(Token = "0x2000272")]
public class RecolocarGuantes : MonoBehaviour
{
	[Token(Token = "0x4001158")]
	private const ushort PULSE = 3000;

	[Token(Token = "0x4001159")]
	private const float zPorteria = 0.46f;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject VRCamera;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform padre;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float posX;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float posY;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float posZ;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool flagVibracionPorPelotaPendiente;

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x9578B4", Offset = "0x9578B4", VA = "0x9578B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x95790C", Offset = "0x95790C", VA = "0x95790C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x95799C", Offset = "0x95799C", VA = "0x95799C")]
	private void ComprobarPosicionGuantes()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x9579A0", Offset = "0x9579A0", VA = "0x9579A0")]
	public RecolocarGuantes()
	{
	}
}
[Token(Token = "0x2000273")]
public class resetearTipoMision : MonoBehaviour
{
	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bolaAracdeOk;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bolaAracdeDisabled;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bolaHistoriaOk;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bolaHistoriaDisabled;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bolaMultiplayerOk;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bolaMultiplayerDisabled;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject podiumNostalgia;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject podiumMultiplayer;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject podiumPRO;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject podiumComercial;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject sentadorDePajaros;

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x9579A8", Offset = "0x9579A8", VA = "0x9579A8")]
	public string AjustarLongitud(string texto)
	{
		return null;
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x957AE0", Offset = "0x957AE0", VA = "0x957AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x9580DC", Offset = "0x9580DC", VA = "0x9580DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x9580E0", Offset = "0x9580E0", VA = "0x9580E0")]
	public resetearTipoMision()
	{
	}
}
[Token(Token = "0x2000274")]
public class romperMuro : MonoBehaviour
{
	[Token(Token = "0x2000275")]
	[CompilerGenerated]
	private sealed class <adiosTrozo>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public romperMuro <>4__this;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject trozo;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x958728", Offset = "0x958728", VA = "0x958728", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x958770", Offset = "0x958770", VA = "0x958770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x958180", Offset = "0x958180", VA = "0x958180")]
		[DebuggerHidden]
		public <adiosTrozo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x958540", Offset = "0x958540", VA = "0x958540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x958544", Offset = "0x958544", VA = "0x958544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x958730", Offset = "0x958730", VA = "0x958730", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject muroRoto;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool yaEstaRoto;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject humoMuro;

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x9580E8", Offset = "0x9580E8", VA = "0x9580E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x9580F0", Offset = "0x9580F0", VA = "0x9580F0")]
	[IteratorStateMachine(typeof(<adiosTrozo>d__4))]
	private IEnumerator adiosTrozo(GameObject trozo)
	{
		return null;
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x9581A8", Offset = "0x9581A8", VA = "0x9581A8")]
	private void OnCollisionEnter(Collision item)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x958538", Offset = "0x958538", VA = "0x958538")]
	public romperMuro()
	{
	}
}
[Token(Token = "0x2000276")]
public class rosacroma : MonoBehaviour
{
	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x958778", Offset = "0x958778", VA = "0x958778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x95877C", Offset = "0x95877C", VA = "0x95877C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x958780", Offset = "0x958780", VA = "0x958780")]
	public rosacroma()
	{
	}
}
[Token(Token = "0x2000277")]
public class Scoreboard : MonoBehaviour
{
	[Token(Token = "0x2000278")]
	public struct Accion
	{
		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string word;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;
	}

	[Token(Token = "0x2000279")]
	[CompilerGenerated]
	private sealed class <MostrarLeaderboardsShooterDentroDeUnRato>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scoreboard <>4__this;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string tabla;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x95EA7C", Offset = "0x95EA7C", VA = "0x95EA7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x95EAC4", Offset = "0x95EAC4", VA = "0x95EAC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x95E8CC", Offset = "0x95E8CC", VA = "0x95E8CC")]
		[DebuggerHidden]
		public <MostrarLeaderboardsShooterDentroDeUnRato>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x95E8F4", Offset = "0x95E8F4", VA = "0x95E8F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x95E8F8", Offset = "0x95E8F8", VA = "0x95E8F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x95EA84", Offset = "0x95EA84", VA = "0x95EA84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027A")]
	[CompilerGenerated]
	private sealed class <mostrarLeaderboardsDentroDeUnRato>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tabla;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scoreboard <>4__this;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LeaderboardMuseo <lMuseo>5__2;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <tiempo>5__3;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x95F040", Offset = "0x95F040", VA = "0x95F040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x95F088", Offset = "0x95F088", VA = "0x95F088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x95EACC", Offset = "0x95EACC", VA = "0x95EACC")]
		[DebuggerHidden]
		public <mostrarLeaderboardsDentroDeUnRato>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x95EAF4", Offset = "0x95EAF4", VA = "0x95EAF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x95EAF8", Offset = "0x95EAF8", VA = "0x95EAF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x95F048", Offset = "0x95F048", VA = "0x95F048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027B")]
	[CompilerGenerated]
	private sealed class <CountDown>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scoreboard <>4__this;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numeroCuentaAtras;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x95F3C8", Offset = "0x95F3C8", VA = "0x95F3C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x95F410", Offset = "0x95F410", VA = "0x95F410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x95F090", Offset = "0x95F090", VA = "0x95F090")]
		[DebuggerHidden]
		public <CountDown>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x95F0B8", Offset = "0x95F0B8", VA = "0x95F0B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x95F0BC", Offset = "0x95F0BC", VA = "0x95F0BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x95F3D0", Offset = "0x95F3D0", VA = "0x95F3D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject overlay;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objetosInGame;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objetosGameOver;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objetosGameOverFAIL;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objetosGameOverDONE;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject objetosMultiplayer;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objetosLeaderboards;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject objetosLeaderboardsShooter;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject objetosGameOverShooter;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image separadorShooter;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Textos InGame")]
	public Text nombrePlayer;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text scoreTotal;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text goals;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text subtotalHeader;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text scored;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text subtotal;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text action;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] vidas;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] copas;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] apagados;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] intentosEntrenamientoShooter;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Textos gameover - shooter")]
	public Text textoHeaderGameoverShooterScore;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text textoHeaderGameoverShooterRecordTop;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text textoHeaderGameoverShooterGoals;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text textoHeaderGameoverShooterRecordBot;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text textoValorGameoverShooterScore;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text textoValorGameoverShooterRecordTop;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text textoValorGameoverShooterGoals;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text textoValorGameoverShooterRecordBot;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Header("Textos InGame - punticos gol")]
	public Text textoHeaderScoredGol;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text textoHeaderScoredSkill;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text textoHeaderScoredRetries;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text textoHeaderScoredMultiplier;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text textoValorScoredGol;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text textoValorScoredSkill;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text textoValorScoredRetries;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text textovalorScoredMultiplier;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Header("Textos GameOver Normal")]
	public Text gameOver;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text scorePoints;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text scoreRecordPoints;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text savesPoints;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Text savesRecordPoints;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Textos GameOverFAIL")]
	public Text FailObjetivo;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Text FailScore;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text FailRecord;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Header("Textos GameOverDONE")]
	public Text DoneTipoCopa;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Text DoneScore;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Text DoneRecord;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject copa_simulador_oro;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject copa_simulador_plata;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject copa_simulador_bronce;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject copa_arcade_oro;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject copa_arcade_plata;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject copa_arcade_bronce;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[Header("Cámara")]
	public GameObject cameraPrimerPlano;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AnimationClip[] animacionesCamerasMarcador;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool conexionPerdida;

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x958788", Offset = "0x958788", VA = "0x958788")]
	public void PonerYActualizarObjetosGameOver(int totalPuntos, int totalRecord, int goles, int golesRecord)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x958A08", Offset = "0x958A08", VA = "0x958A08")]
	public void ponerPasswordMultiPlayer(string password)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x958E58", Offset = "0x958E58", VA = "0x958E58")]
	public void actualizarMarcadorMultiPlayer()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x95989C", Offset = "0x95989C", VA = "0x95989C")]
	public void InicializarMarcador()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x959B84", Offset = "0x959B84", VA = "0x959B84")]
	public void LimpiarMarcador()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x95AA44", Offset = "0x95AA44", VA = "0x95AA44")]
	public void ActivarCameraPrimerPlano(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x95ABCC", Offset = "0x95ABCC", VA = "0x95ABCC")]
	public void EscribirNombreJugador(string nombre)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x959D9C", Offset = "0x959D9C", VA = "0x959D9C")]
	public void ponerPuntosMarcador(int value)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x95AE30", Offset = "0x95AE30", VA = "0x95AE30")]
	[IteratorStateMachine(typeof(<MostrarLeaderboardsShooterDentroDeUnRato>d__66))]
	private IEnumerator MostrarLeaderboardsShooterDentroDeUnRato(string tabla)
	{
		return null;
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x95AEC0", Offset = "0x95AEC0", VA = "0x95AEC0")]
	[IteratorStateMachine(typeof(<mostrarLeaderboardsDentroDeUnRato>d__67))]
	private IEnumerator mostrarLeaderboardsDentroDeUnRato(string tabla, bool extraTiempo)
	{
		return null;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x95AF50", Offset = "0x95AF50", VA = "0x95AF50")]
	public void IniciarGameOverModoHistoria()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x95BDB0", Offset = "0x95BDB0", VA = "0x95BDB0")]
	public void RetirarGameOverMultiplayer()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x95C008", Offset = "0x95C008", VA = "0x95C008")]
	public void IniciarGameOverMultiplayer()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x95C31C", Offset = "0x95C31C", VA = "0x95C31C")]
	public void IniciarGameOverNoHistoria()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x95A794", Offset = "0x95A794", VA = "0x95A794")]
	[IteratorStateMachine(typeof(<CountDown>d__72))]
	private IEnumerator CountDown(int numeroCuentaAtras)
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x95A818", Offset = "0x95A818", VA = "0x95A818")]
	public void GestionarVidas(int vida)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x95ABF0", Offset = "0x95ABF0", VA = "0x95ABF0")]
	public Accion GetAction(int value)
	{
		return default(Accion);
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x95CB18", Offset = "0x95CB18", VA = "0x95CB18")]
	public void ResetearScoreTotalYGoles()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x95CC1C", Offset = "0x95CC1C", VA = "0x95CC1C")]
	public void PintameLeaderboardsShooterSiLosTienes()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x95CC74", Offset = "0x95CC74", VA = "0x95CC74")]
	public void ActualizarTirosRestantes(int tirosRestantes)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x95CCD8", Offset = "0x95CCD8", VA = "0x95CCD8")]
	public void actualizarMarcadorShooterEntrenamiento(int puntosGol, int puntosTotales, int goles, int puntosSkill, int puntosPorRetries, int multiplicador)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x95D118", Offset = "0x95D118", VA = "0x95D118")]
	public void actualizarMarcadorShooterLAN()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x95D8C4", Offset = "0x95D8C4", VA = "0x95D8C4")]
	public Scoreboard()
	{
	}
}
[Token(Token = "0x200027C")]
public class ActivadoInteligentePie : MonoBehaviour
{
	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sensor;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x95F418", Offset = "0x95F418", VA = "0x95F418")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x95F468", Offset = "0x95F468", VA = "0x95F468")]
	public ActivadoInteligentePie()
	{
	}
}
[Token(Token = "0x200027D")]
public class ActivarDesactivarBolaBotonPieSegunCalibrado : MonoBehaviour
{
	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bolaParaON;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bolaParaOFF;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ayuda;

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x95F470", Offset = "0x95F470", VA = "0x95F470")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x95F4C4", Offset = "0x95F4C4", VA = "0x95F4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x95F5B4", Offset = "0x95F5B4", VA = "0x95F5B4")]
	public ActivarDesactivarBolaBotonPieSegunCalibrado()
	{
	}
}
[Token(Token = "0x200027E")]
public class ballController : MonoBehaviour
{
	[Token(Token = "0x200027F")]
	public enum Bota
	{
		[Token(Token = "0x40011C7")]
		dcha,
		[Token(Token = "0x40011C8")]
		izda
	}

	[Token(Token = "0x2000280")]
	public enum ModoPie
	{
		[Token(Token = "0x40011CA")]
		desconocido,
		[Token(Token = "0x40011CB")]
		portero,
		[Token(Token = "0x40011CC")]
		lanzador
	}

	[Token(Token = "0x2000281")]
	[CompilerGenerated]
	private sealed class <reactivarCollider>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ballController <>4__this;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x9608A8", Offset = "0x9608A8", VA = "0x9608A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x9608F0", Offset = "0x9608F0", VA = "0x9608F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x95F644", Offset = "0x95F644", VA = "0x95F644")]
		[DebuggerHidden]
		public <reactivarCollider>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x9607E4", Offset = "0x9607E4", VA = "0x9607E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x9607E8", Offset = "0x9607E8", VA = "0x9607E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x9608B0", Offset = "0x9608B0", VA = "0x9608B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000282")]
	[CompilerGenerated]
	private sealed class <DestruirPelotaPorDobleToque>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x960A04", Offset = "0x960A04", VA = "0x960A04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x960A4C", Offset = "0x960A4C", VA = "0x960A4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x95F6CC", Offset = "0x95F6CC", VA = "0x95F6CC")]
		[DebuggerHidden]
		public <DestruirPelotaPorDobleToque>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x9608F8", Offset = "0x9608F8", VA = "0x9608F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x9608FC", Offset = "0x9608FC", VA = "0x9608FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x960A0C", Offset = "0x960A0C", VA = "0x960A0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider miCollider;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabPelota;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Bota tipoBota;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine corutinaRespawnPelotita;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ModoPie modoPie;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int mandoVibrando;

	[Token(Token = "0x40011C5")]
	private const int kPotenciaVibracion = 3998;

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x95F5BC", Offset = "0x95F5BC", VA = "0x95F5BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x95F5D0", Offset = "0x95F5D0", VA = "0x95F5D0")]
	[IteratorStateMachine(typeof(<reactivarCollider>d__10))]
	private IEnumerator reactivarCollider()
	{
		return null;
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x95F66C", Offset = "0x95F66C", VA = "0x95F66C")]
	[IteratorStateMachine(typeof(<DestruirPelotaPorDobleToque>d__11))]
	private IEnumerator DestruirPelotaPorDobleToque()
	{
		return null;
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x95F6F4", Offset = "0x95F6F4", VA = "0x95F6F4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x960798", Offset = "0x960798", VA = "0x960798")]
	public Vector3 DameVelocidadMovimiento()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x9607DC", Offset = "0x9607DC", VA = "0x9607DC")]
	public ballController()
	{
	}
}
[Token(Token = "0x2000283")]
public class ball_spawner : MonoBehaviour
{
	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x960A54", Offset = "0x960A54", VA = "0x960A54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x960AD4", Offset = "0x960AD4", VA = "0x960AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x960B98", Offset = "0x960B98", VA = "0x960B98")]
	public ball_spawner()
	{
	}
}
[Token(Token = "0x2000284")]
public class CalibrarManager : MonoBehaviour
{
	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CalibrarManager instance;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CalibrarPie calibrarPieIzdo;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CalibrarPie calibrarPieDcho;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform posicionRigEnCalibrado;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion rotacionZonaDeJuegoAntesCalibrar;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 posicionZonaDeJuegoAntesCalibrar;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool heEntradoEnCalibrar;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource musica;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CalibrarManager calibrarManager;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool heEnviadoClickFakeParaVinculoPortero;

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x960BA0", Offset = "0x960BA0", VA = "0x960BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x960CF4", Offset = "0x960CF4", VA = "0x960CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x960CF8", Offset = "0x960CF8", VA = "0x960CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x960CFC", Offset = "0x960CFC", VA = "0x960CFC")]
	public bool AlgunSensorCalibrado()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x960D38", Offset = "0x960D38", VA = "0x960D38")]
	public bool PuedoSalirDeCalibracionConFinCountdown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x960D74", Offset = "0x960D74", VA = "0x960D74")]
	public bool PuedoSalirDeCalibracionConBotonMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x960DA8", Offset = "0x960DA8", VA = "0x960DA8")]
	public Vector3 DamePosicionRigEnCalibrado()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x960DC4", Offset = "0x960DC4", VA = "0x960DC4")]
	public void PonerBotasEnModoParada()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x960E7C", Offset = "0x960E7C", VA = "0x960E7C")]
	public void PonerBotasEnModoChute()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x960F34", Offset = "0x960F34", VA = "0x960F34")]
	public void ActualizarUsoManoPies()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x960FE8", Offset = "0x960FE8", VA = "0x960FE8")]
	public void VolverDeCalibracion()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x9610C0", Offset = "0x9610C0", VA = "0x9610C0")]
	public void IniciarCalibracion()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x961340", Offset = "0x961340", VA = "0x961340")]
	public CalibrarManager()
	{
	}
}
[Token(Token = "0x2000285")]
public class CalibrarPie : MonoBehaviour
{
	[Token(Token = "0x2000286")]
	public enum EstadoCalibrar
	{
		[Token(Token = "0x40011EC")]
		deteccion,
		[Token(Token = "0x40011ED")]
		countdown,
		[Token(Token = "0x40011EE")]
		fin
	}

	[Token(Token = "0x2000287")]
	[CompilerGenerated]
	private sealed class <EsperarUnSegundo>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CalibrarPie <>4__this;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x961D58", Offset = "0x961D58", VA = "0x961D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x961DA0", Offset = "0x961DA0", VA = "0x961DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x96144C", Offset = "0x96144C", VA = "0x96144C")]
		[DebuggerHidden]
		public <EsperarUnSegundo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x961BE8", Offset = "0x961BE8", VA = "0x961BE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x961BEC", Offset = "0x961BEC", VA = "0x961BEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x961D60", Offset = "0x961D60", VA = "0x961D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000288")]
	[CompilerGenerated]
	private sealed class <CorutinaDobleClickParaVinculoPortero>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CalibrarPie <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x961F70", Offset = "0x961F70", VA = "0x961F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x961FB8", Offset = "0x961FB8", VA = "0x961FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x9614E8", Offset = "0x9614E8", VA = "0x9614E8")]
		[DebuggerHidden]
		public <CorutinaDobleClickParaVinculoPortero>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x961DA8", Offset = "0x961DA8", VA = "0x961DA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x961DAC", Offset = "0x961DAC", VA = "0x961DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x961F78", Offset = "0x961F78", VA = "0x961F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bota;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform sensorBota;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject helperSensorBota;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool pieDerecho;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform helperPosicionPie;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CalibrarManager calibrarManager;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EstadoCalibrar estado;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float tiempoInicioCalibrado;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int segundosEsperados;

	[Token(Token = "0x40011E6")]
	private const int kSegundosEsperaCalibrar = 3;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine corutinaEsperarUnSegundo;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public bool manoPieDchaUsadaDuranteCalibracion;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[HideInInspector]
	public bool manoPieIzdaUsadaDuranteCalibracion;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[HideInInspector]
	public bool pieCalibrado;

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x9613D8", Offset = "0x9613D8", VA = "0x9613D8")]
	[IteratorStateMachine(typeof(<EsperarUnSegundo>d__15))]
	private IEnumerator EsperarUnSegundo()
	{
		return null;
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x961474", Offset = "0x961474", VA = "0x961474")]
	[IteratorStateMachine(typeof(<CorutinaDobleClickParaVinculoPortero>d__16))]
	private IEnumerator CorutinaDobleClickParaVinculoPortero()
	{
		return null;
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x961510", Offset = "0x961510", VA = "0x961510")]
	private void ActualizarUsoDePieContrarioEnInitGameSiEsNecesario()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x9615CC", Offset = "0x9615CC", VA = "0x9615CC")]
	private void VincularBota()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x9617CC", Offset = "0x9617CC", VA = "0x9617CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x9619B8", Offset = "0x9619B8", VA = "0x9619B8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x961B78", Offset = "0x961B78", VA = "0x961B78")]
	private void DescalibrarPiePorHaberCalibradoPieVecinoYCancelarCalibracion()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x960DEC", Offset = "0x960DEC", VA = "0x960DEC")]
	public void PonerBotaEnModoParada()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x960EA4", Offset = "0x960EA4", VA = "0x960EA4")]
	public void PonerBotaEnModoChute()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x9616D0", Offset = "0x9616D0", VA = "0x9616D0")]
	private void ResetearBotaParaCalibrado()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x96130C", Offset = "0x96130C", VA = "0x96130C")]
	public void IniciarCalibracion()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x961BE0", Offset = "0x961BE0", VA = "0x961BE0")]
	public CalibrarPie()
	{
	}
}
[Token(Token = "0x2000289")]
public class Config
{
	[Token(Token = "0x200028A")]
	public enum PlataformaJuego
	{
		[Token(Token = "0x400122E")]
		SteamVR,
		[Token(Token = "0x400122F")]
		PS4,
		[Token(Token = "0x4001230")]
		Oculus,
		[Token(Token = "0x4001231")]
		Pico,
		[Token(Token = "0x4001232")]
		ninguna,
		[Token(Token = "0x4001233")]
		Viveport
	}

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlataformaJuego plataforma;

	[Token(Token = "0x40011F6")]
	public const bool recordsLogrosBloqueados = false;

	[Token(Token = "0x40011F7")]
	public const float kFactorRechute = 0.6f;

	[Token(Token = "0x40011F8")]
	public const float kVelocidadPieParaConsiderarChute = 0.2f;

	[Token(Token = "0x40011F9")]
	public const float kFuerzaChute = 6.2f;

	[Token(Token = "0x40011FA")]
	public const float kFuerzaChuteEnTirosLibres = 7.7f;

	[Token(Token = "0x40011FB")]
	public const float kFuerzaToques = 1f;

	[Token(Token = "0x40011FC")]
	public const float kVelocidadChuteMinimaParaAplicarEfecto = 2f;

	[Token(Token = "0x40011FD")]
	public const float kVelocidadSensorParaConsiderarChuteMasRapido = 5f;

	[Token(Token = "0x40011FE")]
	public const float kMaximaFuerzaChute = 31f;

	[Token(Token = "0x40011FF")]
	public const float kMaximaFuerzaChuteEnTirosLibres = 38.5f;

	[Token(Token = "0x4001200")]
	public const float kFactorEfecto = 1.4f;

	[Token(Token = "0x4001201")]
	public const float kFactorEfectoTirosLibres = 0.8f;

	[Token(Token = "0x4001202")]
	public const float kFactorEfectoTirosLibresLaterales = 0.88000005f;

	[Token(Token = "0x4001203")]
	public const float kPesoVectorTrayectoria = 0.5f;

	[Token(Token = "0x4001204")]
	public const float kPesoVectorFuerza = 0.5f;

	[Token(Token = "0x4001205")]
	public const float kEsperaRespawnPelotaEnEntrenamiento = 2f;

	[Token(Token = "0x4001206")]
	public const float kEsperaReactivacionColliderConChute = 0.4f;

	[Token(Token = "0x4001207")]
	public const float kVelocidadPieMinimaParaInfluirEnTrayectoria = 1f;

	[Token(Token = "0x4001208")]
	public const int kChutesPorRonda = 10;

	[Token(Token = "0x4001209")]
	public const float kFactorMagicoCorreccionPorteria = 2.3f;

	[Token(Token = "0x400120A")]
	public const float kEsperaDespuesGolEnLAN = 5f;

	[Token(Token = "0x400120B")]
	public const float kTiempoEntreEnviosDummy = 0.02f;

	[Token(Token = "0x400120C")]
	public const float kTiempoEntreEnviosPelota = 0.04f;

	[Token(Token = "0x400120D")]
	public const float kTiempoMaximoEsperaRivalPorDisconnect = 30f;

	[Token(Token = "0x400120E")]
	public const int kPuertoLAN1 = 8000;

	[Token(Token = "0x400120F")]
	public const int kPuertoLAN2 = 8001;

	[Token(Token = "0x4001210")]
	public const int kPuertoLAN3 = 8002;

	[Token(Token = "0x4001211")]
	public const int kPuertoLAN4 = 8003;

	[Token(Token = "0x4001212")]
	public const int kPuertoLAN5 = 8004;

	[Token(Token = "0x4001213")]
	public const int kPuertoLAN6 = 8005;

	[Token(Token = "0x4001214")]
	public const int kBufferSizeDatos = 1500;

	[Token(Token = "0x4001215")]
	public const float kEsperaParaEnvioBlendNormalsIK = 0.4f;

	[Token(Token = "0x4001216")]
	public const string kRedondeoDecimalesDatosDummy = "F4";

	[Token(Token = "0x4001217")]
	public const float kFuerzaChuteDebiluchoQuePorteroSiempreParara = 7.75f;

	[Token(Token = "0x4001218")]
	public const float kCalidadBasePortero = 15f;

	[Token(Token = "0x4001219")]
	public const float kMaximaCalidadPortero = 75f;

	[Token(Token = "0x400121A")]
	public const float kVariacionEnCalidadPortero = 15f;

	[Token(Token = "0x400121B")]
	public const float kValorDadosFalloCriticoPortero = 5f;

	[Token(Token = "0x400121C")]
	public const float kValorDadosAciertoCriticoPortero = 95f;

	[Token(Token = "0x400121D")]
	public const float kAlturaNormalizadaCentro = 0.8f;

	[Token(Token = "0x400121E")]
	public const float kAnchuraAbsolutaNormalizadaCentro = 0.33f;

	[Token(Token = "0x400121F")]
	public const float kFuerzaEfectoParaConsiderarChuteDelTipoConEfecto = 12f;

	[Token(Token = "0x4001220")]
	public const float kEsperaDespuesFalloEnEntrenamiento = 1f;

	[Token(Token = "0x4001221")]
	public const float kEsperaDespuesGolEnEntrenamiento = 2.5f;

	[Token(Token = "0x4001222")]
	public const float kDistanciaBarrera = 9.15f;

	[Token(Token = "0x4001223")]
	public const float kTiempoTimeoutChuteEntrenamiento = 4.5f;

	[Token(Token = "0x4001224")]
	public const int kIntentosPorRondaTramo1 = 3;

	[Token(Token = "0x4001225")]
	public const int kIntentosPorRondaTramo2 = 2;

	[Token(Token = "0x4001226")]
	public const int kIntentosPorRondaTramo3 = 1;

	[Token(Token = "0x4001227")]
	public const int kIntentosPorRondaTramoExtreme = 1;

	[Token(Token = "0x4001228")]
	public const int kRondasFinTramo1 = 6;

	[Token(Token = "0x4001229")]
	public const int kRondasFinTramo2 = 12;

	[Token(Token = "0x400122A")]
	public const int kRondasFinTramo3 = 18;

	[Token(Token = "0x400122B")]
	public const int kRondasEnExtremoParaPorteroConMaximaCalidad = 6;

	[Token(Token = "0x400122C")]
	public const string kTablaSteamRecordsShooter = "FGRecordsShooter";

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x961FC0", Offset = "0x961FC0", VA = "0x961FC0")]
	public Config()
	{
	}
}
[Token(Token = "0x200028B")]
public class CuerpoRompePelota : MonoBehaviour
{
	[Token(Token = "0x200028C")]
	[CompilerGenerated]
	private sealed class <DestruirPelotaPorTocarConManosSiendoLanzador>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x9622F4", Offset = "0x9622F4", VA = "0x9622F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x96233C", Offset = "0x96233C", VA = "0x96233C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x962074", Offset = "0x962074", VA = "0x962074")]
		[DebuggerHidden]
		public <DestruirPelotaPorTocarConManosSiendoLanzador>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x9621B0", Offset = "0x9621B0", VA = "0x9621B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x9621B4", Offset = "0x9621B4", VA = "0x9621B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x9622FC", Offset = "0x9622FC", VA = "0x9622FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x962014", Offset = "0x962014", VA = "0x962014")]
	[IteratorStateMachine(typeof(<DestruirPelotaPorTocarConManosSiendoLanzador>d__0))]
	private IEnumerator DestruirPelotaPorTocarConManosSiendoLanzador()
	{
		return null;
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x96209C", Offset = "0x96209C", VA = "0x96209C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x9621A8", Offset = "0x9621A8", VA = "0x9621A8")]
	public CuerpoRompePelota()
	{
	}
}
[Serializable]
[Token(Token = "0x200028D")]
public class MensajeMatchmaking
{
	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ip_publica_rival;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ip_privada_rival;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string result;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool soy_host;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string nick;

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x962344", Offset = "0x962344", VA = "0x962344")]
	public static MensajeMatchmaking CreateFromJSON(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x96238C", Offset = "0x96238C", VA = "0x96238C")]
	public string SaveToString()
	{
		return null;
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x962394", Offset = "0x962394", VA = "0x962394")]
	public MensajeMatchmaking()
	{
	}
}
[Serializable]
[Token(Token = "0x200028E")]
public class MensajeUnetBase
{
	[Token(Token = "0x200028F")]
	public enum TipoMensaje
	{
		[Token(Token = "0x400123D")]
		dummyLanzador,
		[Token(Token = "0x400123E")]
		chute,
		[Token(Token = "0x400123F")]
		dummyPortero,
		[Token(Token = "0x4001240")]
		golParada,
		[Token(Token = "0x4001241")]
		pelota,
		[Token(Token = "0x4001242")]
		configDummyIK
	}

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int tipoMensaje;

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x96239C", Offset = "0x96239C", VA = "0x96239C")]
	public static MensajeUnetBase CreateFromJSONBase(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x9623E4", Offset = "0x9623E4", VA = "0x9623E4")]
	public string SaveToString()
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x9623EC", Offset = "0x9623EC", VA = "0x9623EC")]
	public MensajeUnetBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000290")]
public class MensajeUnetChute : MensajeUnetBase
{
	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 puntoFuerza;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 vectorFuerza;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 vectorEfecto;

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x9623F4", Offset = "0x9623F4", VA = "0x9623F4")]
	public static MensajeUnetChute CreateFromJSON(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x96243C", Offset = "0x96243C", VA = "0x96243C")]
	public MensajeUnetChute()
	{
	}
}
[Serializable]
[Token(Token = "0x2000291")]
public class MensajeUnetConfigDummyIK : MensajeUnetBase
{
	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float alturaJugador;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 bendNormalPieDchoCuerpoIK;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 bendNormalPieIzdoCuerpoIK;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 bendNormalManoDchaCuerpoIK;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 bendNormalManoIzdaCuerpoIK;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x962444", Offset = "0x962444", VA = "0x962444")]
	public static MensajeUnetConfigDummyIK CreateFromJSON(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x96248C", Offset = "0x96248C", VA = "0x96248C")]
	public MensajeUnetConfigDummyIK()
	{
	}
}
[Serializable]
[Token(Token = "0x2000292")]
public class MensajeUnetDummyLanzador : MensajeUnetBase
{
	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 posicionCabeza;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion rotacionCabeza;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 posicionPieDcho;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion rotacionPieDcho;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 posicionPieIzdo;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion rotacionPieIzdo;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 posicionManoIzda;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Quaternion rotacionManoIzda;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 posicionManoDcha;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Quaternion rotacionManoDcha;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 posicionGuanteDcho;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Quaternion rotacionGuanteDcho;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 posicionGuanteIzdo;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Quaternion rotacionGuanteIzdo;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3 posicionBaseCuerpoIK;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Quaternion rotacionBaseCuerpoIK;

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x962494", Offset = "0x962494", VA = "0x962494")]
	public static MensajeUnetDummyLanzador CreateFromJSON(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x9624DC", Offset = "0x9624DC", VA = "0x9624DC")]
	public string SaveToStringRedondeado()
	{
		return null;
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x964770", Offset = "0x964770", VA = "0x964770")]
	public MensajeUnetDummyLanzador()
	{
	}
}
[Serializable]
[Token(Token = "0x2000293")]
public class MensajeUnetDummyPortero : MensajeUnetBase
{
	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 posicionCabeza;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion rotacionCabeza;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 posicionManoDcha;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion rotacionManoDcha;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 posicionManoIzda;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion rotacionManoIzda;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 posicionPieDcho;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Quaternion rotacionPieDcho;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 posicionPieIzdo;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Quaternion rotacionPieIzdo;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 posicionGuanteDcho;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Quaternion rotacionGuanteDcho;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 posicionGuanteIzdo;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Quaternion rotacionGuanteIzdo;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3 posicionBaseCuerpoIK;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Quaternion rotacionBaseCuerpoIK;

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x964778", Offset = "0x964778", VA = "0x964778")]
	public static MensajeUnetDummyPortero CreateFromJSON(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x9647C0", Offset = "0x9647C0", VA = "0x9647C0")]
	public string SaveToStringRedondeado()
	{
		return null;
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x966A54", Offset = "0x966A54", VA = "0x966A54")]
	public MensajeUnetDummyPortero()
	{
	}
}
[Serializable]
[Token(Token = "0x2000294")]
public class MensajeUnetGolParada : MensajeUnetBase
{
	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool haSidoGol;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string siguienteEstadio;

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x966A5C", Offset = "0x966A5C", VA = "0x966A5C")]
	public static MensajeUnetGolParada CreateFromJSON(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x966AA4", Offset = "0x966AA4", VA = "0x966AA4")]
	public MensajeUnetGolParada()
	{
	}
}
[Serializable]
[Token(Token = "0x2000295")]
public class MensajeUnetPelota : MensajeUnetBase
{
	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 posicionPelota;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion rotacionPelota;

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x966AFC", Offset = "0x966AFC", VA = "0x966AFC")]
	public static MensajeUnetPelota CreateFromJSON(string jsonString)
	{
		return null;
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x966B44", Offset = "0x966B44", VA = "0x966B44")]
	public MensajeUnetPelota()
	{
	}
}
[Token(Token = "0x2000296")]
public class Debugs
{
	[Token(Token = "0x400126F")]
	public const bool debug = true;

	[Token(Token = "0x4001270")]
	public const bool logs = true;

	[Token(Token = "0x4001271")]
	public const bool OmitirPirateoOculus = false;

	[Token(Token = "0x4001272")]
	public const bool kSkipMatchMaking = false;

	[Token(Token = "0x4001273")]
	public const bool kForzarCommandLineParametros = true;

	[Token(Token = "0x4001274")]
	public const bool kNoTurnarLanzadorPorteroEnModoShooter = false;

	[Token(Token = "0x4001275")]
	public const bool kVerPuntoResultadoChute = false;

	[Token(Token = "0x4001276")]
	public const bool kPorteroSiemprePara = false;

	[Token(Token = "0x4001277")]
	public const bool kPorteroSiempreFalla = false;

	[Token(Token = "0x4001278")]
	public const bool kSiemprePenaltis = false;

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x966B4C", Offset = "0x966B4C", VA = "0x966B4C")]
	public Debugs()
	{
	}
}
[Token(Token = "0x2000297")]
public class DummyIK : MonoBehaviour
{
	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform huesoCabeza;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cabezaDummyReferencia;

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x966B54", Offset = "0x966B54", VA = "0x966B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x966B9C", Offset = "0x966B9C", VA = "0x966B9C")]
	public DummyIK()
	{
	}
}
[Token(Token = "0x2000298")]
public class DummyLanzador : MonoBehaviour
{
	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tCabeza;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tPieDcho;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tPieIzdo;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tManoDcha;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tManoIzda;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tManoDchaGuante;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform tManoIzdaGuante;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject cabezaSiUsamosDummyIK;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cabezaGafasVR;

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x966BA4", Offset = "0x966BA4", VA = "0x966BA4")]
	public DummyLanzador()
	{
	}
}
[Token(Token = "0x2000299")]
public class DummyPortero : MonoBehaviour
{
	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tCabeza;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tpieDcho;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tpieIzdo;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tManoDcha;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tManoIzda;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tManoDchaGuante;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform tManoIzdaGuante;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject cabezaSiUsamosDummyIK;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cabezaGafasVR;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x966BAC", Offset = "0x966BAC", VA = "0x966BAC")]
	public DummyPortero()
	{
	}
}
[Token(Token = "0x200029A")]
public class EfectoEnPelotaPorChutePie : MonoBehaviour
{
	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pelota pelota;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rigidbodyPelota;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 vectorEfecto;

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x966BB4", Offset = "0x966BB4", VA = "0x966BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x966C44", Offset = "0x966C44", VA = "0x966C44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x966C48", Offset = "0x966C48", VA = "0x966C48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x966E74", Offset = "0x966E74", VA = "0x966E74")]
	public EfectoEnPelotaPorChutePie()
	{
	}
}
[Token(Token = "0x200029B")]
public class Matchmaking : MonoBehaviour
{
	[Token(Token = "0x200029C")]
	[CompilerGenerated]
	private sealed class <RequestPartida>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matchmaking <>4__this;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x96755C", Offset = "0x96755C", VA = "0x96755C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x9675A4", Offset = "0x9675A4", VA = "0x9675A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x966EF0", Offset = "0x966EF0", VA = "0x966EF0")]
		[DebuggerHidden]
		public <RequestPartida>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x9671EC", Offset = "0x9671EC", VA = "0x9671EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x9671F0", Offset = "0x9671F0", VA = "0x9671F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x967564", Offset = "0x967564", VA = "0x967564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029D")]
	[CompilerGenerated]
	private sealed class <UpdateTiempoEsperando>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matchmaking <>4__this;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x967654", Offset = "0x967654", VA = "0x967654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x96769C", Offset = "0x96769C", VA = "0x96769C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x9670A8", Offset = "0x9670A8", VA = "0x9670A8")]
		[DebuggerHidden]
		public <UpdateTiempoEsperando>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x9675AC", Offset = "0x9675AC", VA = "0x9675AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x9675B0", Offset = "0x9675B0", VA = "0x9675B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x96765C", Offset = "0x96765C", VA = "0x96765C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textoConnect;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh sombra1;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh sombra2;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh sombra3;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh sombra4;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject goTextoConnect;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int segundosEsperando;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine corutinaTemporizadorFake;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine corutinaRequests;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForSeconds tiempoEntreUpdatesTexto;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaitForSeconds tiempoEntreRequestsMatchmaking;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x966E7C", Offset = "0x966E7C", VA = "0x966E7C")]
	[IteratorStateMachine(typeof(<RequestPartida>d__11))]
	private IEnumerator RequestPartida()
	{
		return null;
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x966F18", Offset = "0x966F18", VA = "0x966F18")]
	private void NuevoTextoWaiting(int segundos)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x967034", Offset = "0x967034", VA = "0x967034")]
	[IteratorStateMachine(typeof(<UpdateTiempoEsperando>d__13))]
	private IEnumerator UpdateTiempoEsperando()
	{
		return null;
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x9670D0", Offset = "0x9670D0", VA = "0x9670D0")]
	public void EntrarEnPartida()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x967148", Offset = "0x967148", VA = "0x967148")]
	public Matchmaking()
	{
	}
}
[Token(Token = "0x200029E")]
public class QuitarElementosShooterParaOculus : MonoBehaviour
{
	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objetosQueDesactivarParaOculus;

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x9676A4", Offset = "0x9676A4", VA = "0x9676A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x9676A8", Offset = "0x9676A8", VA = "0x9676A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x9676AC", Offset = "0x9676AC", VA = "0x9676AC")]
	public QuitarElementosShooterParaOculus()
	{
	}
}
[Token(Token = "0x200029F")]
public class RevisarObjetosVR : MonoBehaviour
{
	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float tiempoUltimoRefresh;

	[Token(Token = "0x40012A4")]
	private const float kTiempoEntreChecks = 0.5f;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject manoDcha;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject manoIzda;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pieDcho;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pieIzdo;

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x9676B4", Offset = "0x9676B4", VA = "0x9676B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x9676B8", Offset = "0x9676B8", VA = "0x9676B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x967738", Offset = "0x967738", VA = "0x967738")]
	public RevisarObjetosVR()
	{
	}
}
[Token(Token = "0x20002A0")]
public class RevisarOrientacionZonaDeJuego : MonoBehaviour
{
	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Quaternion rotacionInicial;

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x967740", Offset = "0x967740", VA = "0x967740")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x9678E8", Offset = "0x9678E8", VA = "0x9678E8")]
	public void RevisarOrientacion(bool soyPortero)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x9678EC", Offset = "0x9678EC", VA = "0x9678EC")]
	public RevisarOrientacionZonaDeJuego()
	{
	}
}
[Token(Token = "0x20002A1")]
public class TestChuteAutomatico : MonoBehaviour
{
	[Token(Token = "0x20002A2")]
	[CompilerGenerated]
	private sealed class <ChuteDelayado>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestChuteAutomatico <>4__this;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x967C2C", Offset = "0x967C2C", VA = "0x967C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x967C74", Offset = "0x967C74", VA = "0x967C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x96798C", Offset = "0x96798C", VA = "0x96798C")]
		[DebuggerHidden]
		public <ChuteDelayado>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x9679C4", Offset = "0x9679C4", VA = "0x9679C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x9679C8", Offset = "0x9679C8", VA = "0x9679C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x967C34", Offset = "0x967C34", VA = "0x967C34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayChute;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fuerzaChute;

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x9678F4", Offset = "0x9678F4", VA = "0x9678F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x967988", Offset = "0x967988", VA = "0x967988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x967914", Offset = "0x967914", VA = "0x967914")]
	[IteratorStateMachine(typeof(<ChuteDelayado>d__4))]
	private IEnumerator ChuteDelayado()
	{
		return null;
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x9679B4", Offset = "0x9679B4", VA = "0x9679B4")]
	public TestChuteAutomatico()
	{
	}
}
[Token(Token = "0x20002A3")]
public class TestMiraPelota : MonoBehaviour
{
	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabPelota;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject pelotita;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform helperCentroPorteria;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BarreraManager barrera;

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x967C7C", Offset = "0x967C7C", VA = "0x967C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x968218", Offset = "0x968218", VA = "0x968218")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x96821C", Offset = "0x96821C", VA = "0x96821C")]
	[ContextMenu("Mira...")]
	public void MiraPelotita()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x968360", Offset = "0x968360", VA = "0x968360")]
	public TestMiraPelota()
	{
	}
}
[Token(Token = "0x20002A4")]
public class TestOrientar : MonoBehaviour
{
	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion rotacionInicial;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x968368", Offset = "0x968368", VA = "0x968368")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x96839C", Offset = "0x96839C", VA = "0x96839C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x968398", Offset = "0x968398", VA = "0x968398")]
	private void RevisarOrientacionZonaDeJuego(bool soyPortero)
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x9683A0", Offset = "0x9683A0", VA = "0x9683A0")]
	[ContextMenu("Test90")]
	public void Rotar90()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x96846C", Offset = "0x96846C", VA = "0x96846C")]
	[ContextMenu("TestDeshacer")]
	public void DeshacerRotar90()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x968498", Offset = "0x968498", VA = "0x968498")]
	public TestOrientar()
	{
	}
}
[Token(Token = "0x20002A5")]
public class FGVariables
{
	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FGVariables sharedinstance;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string ultimaTablaSteam;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<LogrosRecords.Resultado> FGultimaTablaRecibida;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LogrosRecords.Resultado> FGhistoriaSimulator;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LogrosRecords.Resultado> FGhistoriaArcade;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LogrosRecords.Resultado> FGListaResultadosShooter;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 manoIanterior;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 manoDanterior;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int ticksSinMaracas;

	[Token(Token = "0x40012BD")]
	public const float FGMultiplicadorFuerzaOculus = 2f;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int rachaModoHistoria;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int puntosPartidaActual;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int paradasPartidaActual;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int NbloqueosPartidaActual;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int Nbloqueos1manoPartidaActual;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int NbloqueosManoIzquierdaPartidaActual;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int NbloqueosManoDerechaPartidaActual;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int NBloqueos2ManosPartidaActual;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int NParadasCabezaPartidaActual;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int NParadasUsandoBalonPartidaActual;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int NParadasCon2ManosOcupadasPartidaActual;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int NParadasConPunyoCerradoPartidaActual;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int NpowerActivadosPartidaActual;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int NmurosActivadosPartidaActual;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int NGigantesActivadosPartidaActual;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int NtennisParadasPartidaActual;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int NPlayasParadasPartidaActual;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int NBombasEsquivadasPartidaActual;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int NPelotasParadasConGuantesGrandesPartidaActual;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int NPelotasParadasSiendoGigantePartidaActual;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int NPelotasDentroDeLaPorteria;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int NParadasEnArcadeSinActivarPowerUp;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int NParadasCabezaMatrixSeguidas;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int NParadasConManosAlejadas;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int NParadasHaciendoMaracas;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int NParadasConManosEncimaDeLaCabeza;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int NParadasTocandomeLaCabeza;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int NParadasTapandomeLaVision;

	[Token(Token = "0x17000244")]
	public static FGVariables instance
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x95ED2C", Offset = "0x95ED2C", VA = "0x95ED2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000245")]
	public float recordGolesShooterLocal
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x968A28", Offset = "0x968A28", VA = "0x968A28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x968A70", Offset = "0x968A70", VA = "0x968A70")]
		set
		{
		}
	}

	[Token(Token = "0x17000246")]
	public float recordPuntosModoSimulator
	{
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x968AC4", Offset = "0x968AC4", VA = "0x968AC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x968B0C", Offset = "0x968B0C", VA = "0x968B0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000247")]
	public float recordParadasModoSimulator
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x968BC0", Offset = "0x968BC0", VA = "0x968BC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x968C08", Offset = "0x968C08", VA = "0x968C08")]
		set
		{
		}
	}

	[Token(Token = "0x17000248")]
	public int recordPuntosModoShooter
	{
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x968C5C", Offset = "0x968C5C", VA = "0x968C5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x968CA4", Offset = "0x968CA4", VA = "0x968CA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000249")]
	public float recordPuntosModoArcade
	{
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x968D20", Offset = "0x968D20", VA = "0x968D20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x968D68", Offset = "0x968D68", VA = "0x968D68")]
		set
		{
		}
	}

	[Token(Token = "0x1700024A")]
	public float recordParadasModoArcade
	{
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x968E1C", Offset = "0x968E1C", VA = "0x968E1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x968E64", Offset = "0x968E64", VA = "0x968E64")]
		set
		{
		}
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x968500", Offset = "0x968500", VA = "0x968500")]
	public void perdiListaDeRecordsSteam(string tabla)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x96863C", Offset = "0x96863C", VA = "0x96863C")]
	private void enviarRecordSteam(string tabla, int valor)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x968848", Offset = "0x968848", VA = "0x968848")]
	public void RecalcularPuntuacionHistoriaArcade()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x968938", Offset = "0x968938", VA = "0x968938")]
	public void RecalcularPuntuacionHistoriaSimulator()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x9688CC", Offset = "0x9688CC", VA = "0x9688CC")]
	public int GetRecordNivelArcade(int numNivel)
	{
		return default(int);
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x968EB8", Offset = "0x968EB8", VA = "0x968EB8")]
	public void SetRecordNivelArcade(int numNivel, int valor)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x9689BC", Offset = "0x9689BC", VA = "0x9689BC")]
	public int GetRecordNivelSimulator(int numNivel)
	{
		return default(int);
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x968F3C", Offset = "0x968F3C", VA = "0x968F3C")]
	public void SetRecordNivelSimulator(int numNivel, int valor)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x968FC0", Offset = "0x968FC0", VA = "0x968FC0")]
	public int GetCopaNivelArcade(int numNivel)
	{
		return default(int);
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x96902C", Offset = "0x96902C", VA = "0x96902C")]
	public void SetCopaNivelArcade(int numNivel, int valor)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x9690A4", Offset = "0x9690A4", VA = "0x9690A4")]
	public void AjustarAntiAliasSegunCalidad()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x969124", Offset = "0x969124", VA = "0x969124")]
	public int GetAyudaChute()
	{
		return default(int);
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x96916C", Offset = "0x96916C", VA = "0x96916C")]
	public void SetAyudaChute(int valor)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x9691F0", Offset = "0x9691F0", VA = "0x9691F0")]
	public int GetPartidaLAN()
	{
		return default(int);
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x969238", Offset = "0x969238", VA = "0x969238")]
	public void SetPartidaLAN(int valor)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x9692C4", Offset = "0x9692C4", VA = "0x9692C4")]
	public int GetAlturaAsistida()
	{
		return default(int);
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x96930C", Offset = "0x96930C", VA = "0x96930C")]
	public void SetAlturaAsistida(int valor)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x9690DC", Offset = "0x9690DC", VA = "0x9690DC")]
	public int GetCalidadGrafica()
	{
		return default(int);
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x969394", Offset = "0x969394", VA = "0x969394")]
	public void SetCalidadGrafica(int valor)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x9693F4", Offset = "0x9693F4", VA = "0x9693F4")]
	public int GetAyudaDesplazamiento()
	{
		return default(int);
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x969474", Offset = "0x969474", VA = "0x969474")]
	public void SetAyudaDesplazamiento(int valor)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x9694C0", Offset = "0x9694C0", VA = "0x9694C0")]
	public int GetCopaNivelSimulator(int numNivel)
	{
		return default(int);
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x96952C", Offset = "0x96952C", VA = "0x96952C")]
	public void SetCopaNivelSimulator(int numNivel, int valor)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x9695A4", Offset = "0x9695A4", VA = "0x9695A4")]
	public bool GetLogroYaEnviado(int numLogro)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x969618", Offset = "0x969618", VA = "0x969618")]
	public void SetLogroYaEnviado(int numLogro)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x969684", Offset = "0x969684", VA = "0x969684")]
	public void enviarLogroConseguido(int logro)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x969888", Offset = "0x969888", VA = "0x969888")]
	public void revisarPosiblesPowerUps()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x96992C", Offset = "0x96992C", VA = "0x96992C")]
	public void revisarRetosPorPelotas()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x969C0C", Offset = "0x969C0C", VA = "0x969C0C")]
	public void revisarRetosPorManos(Vector3 manoI, Vector3 manoD, Vector3 cabeza)
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x969F10", Offset = "0x969F10", VA = "0x969F10")]
	public int maxNivelArcade()
	{
		return default(int);
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x969FFC", Offset = "0x969FFC", VA = "0x969FFC")]
	public int maxNivelSimulator()
	{
		return default(int);
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x96A0E8", Offset = "0x96A0E8", VA = "0x96A0E8")]
	public Vector3 GetLastPositionEnMuseo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x96A1A0", Offset = "0x96A1A0", VA = "0x96A1A0")]
	public void SetLastPositionEnMuseo(Vector3 posicion)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x96A254", Offset = "0x96A254", VA = "0x96A254")]
	public Vector3 GetLastPositionCabezaEnMuseo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x96A30C", Offset = "0x96A30C", VA = "0x96A30C")]
	public void SetLastPositionCabezaEnMuseo(Vector3 posicion)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x96A3C0", Offset = "0x96A3C0", VA = "0x96A3C0")]
	public string GetZonaActualEnMuseo()
	{
		return null;
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x96A41C", Offset = "0x96A41C", VA = "0x96A41C")]
	public void SetZonaActualEnMuseo(string zona)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x96A4CC", Offset = "0x96A4CC", VA = "0x96A4CC")]
	private void OnTablaEncontrada(object sender, string tabla)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x96A660", Offset = "0x96A660", VA = "0x96A660")]
	private void OnRecordSubido(object sender, int miScoreRecibido, string tabla)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x96A7F0", Offset = "0x96A7F0", VA = "0x96A7F0")]
	private void OnResultadosObtenidos(object sender, List<LogrosRecords.Resultado> resultados, bool dosListas, string tabla)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x96AD2C", Offset = "0x96AD2C", VA = "0x96AD2C")]
	public int GetPowerUpActivados()
	{
		return default(int);
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x96AD74", Offset = "0x96AD74", VA = "0x96AD74")]
	public void SetPowerUpActivados(int valor)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x9678A0", Offset = "0x9678A0", VA = "0x9678A0")]
	public int GetNivelConGuanteSeleccionado()
	{
		return default(int);
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x96ADC0", Offset = "0x96ADC0", VA = "0x96ADC0")]
	public void SetNivelConGuanteSeleccionado(int nivel)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x96AE0C", Offset = "0x96AE0C", VA = "0x96AE0C")]
	public string GetChurroFKDelTeam(int teamId)
	{
		return null;
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x9684A0", Offset = "0x9684A0", VA = "0x9684A0")]
	public FGVariables()
	{
	}
}
[Token(Token = "0x20002A6")]
public class SombraPelota : MonoBehaviour
{
	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x96CEF4", Offset = "0x96CEF4", VA = "0x96CEF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x96CFC8", Offset = "0x96CFC8", VA = "0x96CFC8")]
	public SombraPelota()
	{
	}
}
[Token(Token = "0x20002A7")]
public class TiradorArcade : MonoBehaviour
{
	[Token(Token = "0x20002A8")]
	public enum EstadosTiradorArcade
	{
		[Token(Token = "0x40012F1")]
		paradoSinDiana,
		[Token(Token = "0x40012F2")]
		chutando,
		[Token(Token = "0x40012F3")]
		descanso,
		[Token(Token = "0x40012F4")]
		paradoConDiana
	}

	[Token(Token = "0x20002A9")]
	[CompilerGenerated]
	private sealed class <MostrarDianaYaSiHaceFalta>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiradorArcade <>4__this;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <bTengoQueSacarDiana>5__2;

		[Token(Token = "0x1700024B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x96E39C", Offset = "0x96E39C", VA = "0x96E39C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x96E3E4", Offset = "0x96E3E4", VA = "0x96E3E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x96D1C4", Offset = "0x96D1C4", VA = "0x96D1C4")]
		[DebuggerHidden]
		public <MostrarDianaYaSiHaceFalta>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x96DFE4", Offset = "0x96DFE4", VA = "0x96DFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x96DFE8", Offset = "0x96DFE8", VA = "0x96DFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x96E3A4", Offset = "0x96E3A4", VA = "0x96E3A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AA")]
	[CompilerGenerated]
	private sealed class <colliderCapsuleActivo>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiradorArcade <>4__this;

		[Token(Token = "0x1700024D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x96E4BC", Offset = "0x96E4BC", VA = "0x96E4BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x96E504", Offset = "0x96E504", VA = "0x96E504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x96D260", Offset = "0x96D260", VA = "0x96D260")]
		[DebuggerHidden]
		public <colliderCapsuleActivo>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x96E3EC", Offset = "0x96E3EC", VA = "0x96E3EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x96E3F0", Offset = "0x96E3F0", VA = "0x96E3F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x96E4C4", Offset = "0x96E4C4", VA = "0x96E4C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AB")]
	[CompilerGenerated]
	private sealed class <LanzarPelotaYa>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiradorArcade <>4__this;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <esTrampa>5__2;

		[Token(Token = "0x1700024F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x96EA98", Offset = "0x96EA98", VA = "0x96EA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x96EAE0", Offset = "0x96EAE0", VA = "0x96EAE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x96D304", Offset = "0x96D304", VA = "0x96D304")]
		[DebuggerHidden]
		public <LanzarPelotaYa>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x96E50C", Offset = "0x96E50C", VA = "0x96E50C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x96E510", Offset = "0x96E510", VA = "0x96E510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x96EAA0", Offset = "0x96EAA0", VA = "0x96EAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EstadosTiradorArcade estado;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pelotaActual;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canyon;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem humoAparicion;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem explosion;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem mecha;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject colliderCapsule;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject puntacanyon;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject diana;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject dianaPlegable;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject luzDiana;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool tengoSacadaDiana;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool acaboDeOcultarUnaDianaAqui;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion rotacionCanyon;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion rotacionPuntaCanyon;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 posicionCanyon;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion AnguloDianaArriba;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion AnguloDianaPlegada;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion rotacionCanyonOriginal;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion rotacionPuntaCanyonOriginal;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 posicionCanyonOriginal;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool tiradorTrampa;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x96CFD0", Offset = "0x96CFD0", VA = "0x96CFD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x96D150", Offset = "0x96D150", VA = "0x96D150")]
	[IteratorStateMachine(typeof(<MostrarDianaYaSiHaceFalta>d__24))]
	private IEnumerator MostrarDianaYaSiHaceFalta()
	{
		return null;
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x96D1EC", Offset = "0x96D1EC", VA = "0x96D1EC")]
	[IteratorStateMachine(typeof(<colliderCapsuleActivo>d__25))]
	private IEnumerator colliderCapsuleActivo()
	{
		return null;
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x96D288", Offset = "0x96D288", VA = "0x96D288")]
	private bool tengoQueAnularLanzamiento()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x96D290", Offset = "0x96D290", VA = "0x96D290")]
	[IteratorStateMachine(typeof(<LanzarPelotaYa>d__27))]
	private IEnumerator LanzarPelotaYa()
	{
		return null;
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x96D32C", Offset = "0x96D32C", VA = "0x96D32C")]
	public void PreLanzamientoPelota()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x96D658", Offset = "0x96D658", VA = "0x96D658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x96DFDC", Offset = "0x96DFDC", VA = "0x96DFDC")]
	public TiradorArcade()
	{
	}
}
[Token(Token = "0x20002AC")]
[ExecuteInEditMode]
public class CreatePath : MonoBehaviour
{
	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numPositions;

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x96EAE8", Offset = "0x96EAE8", VA = "0x96EAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x96EB40", Offset = "0x96EB40", VA = "0x96EB40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x96EC10", Offset = "0x96EC10", VA = "0x96EC10")]
	public CreatePath()
	{
	}
}
[Token(Token = "0x20002AD")]
[AddComponentMenu("Utils/DebugGizmos")]
public class DebugGizmos : MonoBehaviour
{
	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x96EC18", Offset = "0x96EC18", VA = "0x96EC18")]
	public DebugGizmos()
	{
	}
}
[Token(Token = "0x20002AE")]
public class DestroyMe : MonoBehaviour
{
	[Token(Token = "0x20002AF")]
	[CompilerGenerated]
	private sealed class <DestroyGameobject>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestroyMe <>4__this;

		[Token(Token = "0x17000251")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x96EDE8", Offset = "0x96EDE8", VA = "0x96EDE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x96EE30", Offset = "0x96EE30", VA = "0x96EE30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x96ECB4", Offset = "0x96ECB4", VA = "0x96ECB4")]
		[DebuggerHidden]
		public <DestroyGameobject>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x96ECEC", Offset = "0x96ECEC", VA = "0x96ECEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x96ECF0", Offset = "0x96ECF0", VA = "0x96ECF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x96EDF0", Offset = "0x96EDF0", VA = "0x96EDF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToDestroy;

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x96EC20", Offset = "0x96EC20", VA = "0x96EC20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x96EC40", Offset = "0x96EC40", VA = "0x96EC40")]
	[IteratorStateMachine(typeof(<DestroyGameobject>d__2))]
	private IEnumerator DestroyGameobject()
	{
		return null;
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x96ECDC", Offset = "0x96ECDC", VA = "0x96ECDC")]
	public DestroyMe()
	{
	}
}
[Token(Token = "0x20002B0")]
public class HidePaths : MonoBehaviour
{
	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hidePaths;

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x96EE38", Offset = "0x96EE38", VA = "0x96EE38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x96EF0C", Offset = "0x96EF0C", VA = "0x96EF0C")]
	public HidePaths()
	{
	}
}
[Token(Token = "0x20002B1")]
public class RotateChildren : MonoBehaviour
{
	[Token(Token = "0x20002B2")]
	[CompilerGenerated]
	private sealed class <girarTodo>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotateChildren <>4__this;

		[Token(Token = "0x17000253")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x96F1D0", Offset = "0x96F1D0", VA = "0x96F1D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x96F218", Offset = "0x96F218", VA = "0x96F218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x96EFAC", Offset = "0x96EFAC", VA = "0x96EFAC")]
		[DebuggerHidden]
		public <girarTodo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x96F11C", Offset = "0x96F11C", VA = "0x96F11C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x96F120", Offset = "0x96F120", VA = "0x96F120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x96F1D8", Offset = "0x96F1D8", VA = "0x96F1D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 anglesValue;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool x;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool y;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool z;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRTextureUsage vTextInterface;

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x96EF14", Offset = "0x96EF14", VA = "0x96EF14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x96EFA8", Offset = "0x96EFA8", VA = "0x96EFA8")]
	public void VTextChanged()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x96EF34", Offset = "0x96EF34", VA = "0x96EF34")]
	[IteratorStateMachine(typeof(<girarTodo>d__7))]
	private IEnumerator girarTodo()
	{
		return null;
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x96EFD4", Offset = "0x96EFD4", VA = "0x96EFD4")]
	public void RotateNow()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x96F10C", Offset = "0x96F10C", VA = "0x96F10C")]
	public RotateChildren()
	{
	}
}
[Token(Token = "0x20002B3")]
public class Sonido3D : MonoBehaviour
{
	[Token(Token = "0x20002B4")]
	[CompilerGenerated]
	private sealed class <DestroyMe>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToDestroy;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sonido3D <>4__this;

		[Token(Token = "0x17000255")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x96F614", Offset = "0x96F614", VA = "0x96F614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x96F65C", Offset = "0x96F65C", VA = "0x96F65C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x96F4E4", Offset = "0x96F4E4", VA = "0x96F4E4")]
		[DebuggerHidden]
		public <DestroyMe>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x96F514", Offset = "0x96F514", VA = "0x96F514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x96F518", Offset = "0x96F518", VA = "0x96F518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x96F61C", Offset = "0x96F61C", VA = "0x96F61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x96F220", Offset = "0x96F220", VA = "0x96F220")]
	public void DispararSonido(AudioClip clip, float volumen = 1f)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x96F3A8", Offset = "0x96F3A8", VA = "0x96F3A8")]
	public void DispararSonido3D(string nombreSonido, float volumen = 1f, float miDelay = 0f)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x96F324", Offset = "0x96F324", VA = "0x96F324")]
	[IteratorStateMachine(typeof(<DestroyMe>d__2))]
	private IEnumerator DestroyMe(float timeToDestroy)
	{
		return null;
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x96F50C", Offset = "0x96F50C", VA = "0x96F50C")]
	public Sonido3D()
	{
	}
}
[Token(Token = "0x20002B5")]
public class VRDevicesHelper
{
	[Token(Token = "0x20002B6")]
	public enum VRHardware
	{
		[Token(Token = "0x4001324")]
		HTC,
		[Token(Token = "0x4001325")]
		OVR
	}

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRDevicesHelper instance;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VRHardware miVR;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected InputDevice deviceI;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected InputDevice deviceD;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float oldTriggerDownD;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float oldTriggerDownI;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float oldTriggerUpD;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float oldTriggerUpI;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float oldGripDownD;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float oldGripDownI;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float oldGripUpD;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float oldGripUpI;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool oldXADownD;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool oldXADownI;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool oldXAUpD;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool oldXAUpI;

	[Token(Token = "0x17000257")]
	public static VRDevicesHelper SharedInstance
	{
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x96F664", Offset = "0x96F664", VA = "0x96F664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x96F70C", Offset = "0x96F70C", VA = "0x96F70C")]
	protected void GetDevice()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x96F73C", Offset = "0x96F73C", VA = "0x96F73C")]
	public bool Oculus_TouchpadDown(bool izquierda)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x96F834", Offset = "0x96F834", VA = "0x96F834")]
	public bool Oculus_TouchpadUp(bool izquierda)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x96F92C", Offset = "0x96F92C", VA = "0x96F92C")]
	public bool Oculus_XADown(bool izquierda)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x96FA1C", Offset = "0x96FA1C", VA = "0x96FA1C")]
	public bool Oculus_XAUp(bool izquierda)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x96FB08", Offset = "0x96FB08", VA = "0x96FB08")]
	public Vector2 Oculus_Stick(bool izquierda)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x96FC60", Offset = "0x96FC60", VA = "0x96FC60")]
	public bool Oculus_GripUp(bool izquierda)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x96FD58", Offset = "0x96FD58", VA = "0x96FD58")]
	public bool Oculus_GripDown(bool izquierda)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x96FE50", Offset = "0x96FE50", VA = "0x96FE50")]
	public bool Oculus_MenuDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x96FE58", Offset = "0x96FE58", VA = "0x96FE58")]
	public bool Oculus_MenuUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x96FE60", Offset = "0x96FE60", VA = "0x96FE60")]
	public float Oculus_Gatillo(bool izquierda)
	{
		return default(float);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x96FF20", Offset = "0x96FF20", VA = "0x96FF20")]
	public void Oculus_Vibrar(bool izquierda)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x96FF38", Offset = "0x96FF38", VA = "0x96FF38")]
	public Vector3 Oculus_Velocidad(bool izquierda)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x97004C", Offset = "0x97004C", VA = "0x97004C")]
	public Vector3 Oculus_VelocidadAngular(bool izquierda)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x96F6FC", Offset = "0x96F6FC", VA = "0x96F6FC")]
	public VRDevicesHelper()
	{
	}
}
[Token(Token = "0x20002B7")]
public class SettearIK : MonoBehaviour
{
	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRIK vrIK;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cabeza;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject manoD;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject manoI;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minimo;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float max;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxScale;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minScale;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer skin;

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x970164", Offset = "0x970164", VA = "0x970164")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x970340", Offset = "0x970340", VA = "0x970340")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x970520", Offset = "0x970520", VA = "0x970520")]
	public SettearIK()
	{
	}
}
[Token(Token = "0x20002B8")]
public class SettingsManager : MonoBehaviour
{
	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pantallaNegra;

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x970534", Offset = "0x970534", VA = "0x970534")]
	private void Start()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x9707D4", Offset = "0x9707D4", VA = "0x9707D4")]
	private void QuitarPantallaNegra()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x970658", Offset = "0x970658", VA = "0x970658")]
	private void Recolocar(Transform tCabeza)
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x970858", Offset = "0x970858", VA = "0x970858")]
	public SettingsManager()
	{
	}
}
[Token(Token = "0x20002B9")]
public class JSONObject
{
	[Token(Token = "0x20002BA")]
	public enum Type
	{
		[Token(Token = "0x400133E")]
		NULL,
		[Token(Token = "0x400133F")]
		STRING,
		[Token(Token = "0x4001340")]
		NUMBER,
		[Token(Token = "0x4001341")]
		OBJECT,
		[Token(Token = "0x4001342")]
		ARRAY,
		[Token(Token = "0x4001343")]
		BOOL,
		[Token(Token = "0x4001344")]
		BAKED
	}

	[Token(Token = "0x20002BB")]
	public delegate void AddJSONConents(JSONObject self);

	[Token(Token = "0x20002BC")]
	public delegate void FieldNotFound(string name);

	[Token(Token = "0x20002BD")]
	public delegate void GetFieldResponse(JSONObject obj);

	[Token(Token = "0x20002BE")]
	[CompilerGenerated]
	private sealed class <BakeAsync>d__103 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONObject <>4__this;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator<string> <>7__wrap1;

		[Token(Token = "0x17000266")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x97583C", Offset = "0x97583C", VA = "0x97583C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x975884", Offset = "0x975884", VA = "0x975884", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x975420", Offset = "0x975420", VA = "0x975420")]
		[DebuggerHidden]
		public <BakeAsync>d__103(int <>1__state)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x975454", Offset = "0x975454", VA = "0x975454", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x975470", Offset = "0x975470", VA = "0x975470", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x97578C", Offset = "0x97578C", VA = "0x97578C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x975844", Offset = "0x975844", VA = "0x975844", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x97588C", Offset = "0x97588C", VA = "0x97588C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x975938", Offset = "0x975938", VA = "0x975938", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20002BF")]
	[CompilerGenerated]
	private sealed class <PrintAsync>d__107 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string <>2__current;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONObject <>4__this;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool pretty;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool <>3__pretty;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder <builder>5__2;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x17000268")]
		private string System.Collections.Generic.IEnumerator<System.String>.Current
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0x975E04", Offset = "0x975E04", VA = "0x975E04", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x975E4C", Offset = "0x975E4C", VA = "0x975E4C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x97593C", Offset = "0x97593C", VA = "0x97593C")]
		[DebuggerHidden]
		public <PrintAsync>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x975970", Offset = "0x975970", VA = "0x975970", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x97598C", Offset = "0x97598C", VA = "0x97598C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x975D48", Offset = "0x975D48", VA = "0x975D48")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x975E0C", Offset = "0x975E0C", VA = "0x975E0C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x975E54", Offset = "0x975E54", VA = "0x975E54", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x975F08", Offset = "0x975F08", VA = "0x975F08", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20002C0")]
	[CompilerGenerated]
	private sealed class <StringifyAsync>d__111 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int depth;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int <>3__depth;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JSONObject <>4__this;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder builder;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StringBuilder <>3__builder;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool pretty;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool <>3__pretty;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__2;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x9770F8", Offset = "0x9770F8", VA = "0x9770F8", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x977140", Offset = "0x977140", VA = "0x977140", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x975F0C", Offset = "0x975F0C", VA = "0x975F0C")]
		[DebuggerHidden]
		public <StringifyAsync>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x975F40", Offset = "0x975F40", VA = "0x975F40", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x975F78", Offset = "0x975F78", VA = "0x975F78", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x976F80", Offset = "0x976F80", VA = "0x976F80")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x97703C", Offset = "0x97703C", VA = "0x97703C")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x977100", Offset = "0x977100", VA = "0x977100", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x977148", Offset = "0x977148", VA = "0x977148", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x977214", Offset = "0x977214", VA = "0x977214", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4001330")]
	private const int MAX_DEPTH = 100;

	[Token(Token = "0x4001331")]
	private const string INFINITY = "\"INFINITY\"";

	[Token(Token = "0x4001332")]
	private const string NEGINFINITY = "\"NEGINFINITY\"";

	[Token(Token = "0x4001333")]
	private const string NaN = "\"NaN\"";

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly char[] WHITESPACE;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type type;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<JSONObject> list;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> keys;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string str;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float n;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool b;

	[Token(Token = "0x400133B")]
	private const float maxFrameTime = 0.008f;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Stopwatch printWatch;

	[Token(Token = "0x17000258")]
	public bool isContainer
	{
		[Token(Token = "0x6001003")]
		[Address(RVA = "0x970860", Offset = "0x970860", VA = "0x970860")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000259")]
	public int Count
	{
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x970874", Offset = "0x970874", VA = "0x970874")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700025A")]
	public float f
	{
		[Token(Token = "0x6001005")]
		[Address(RVA = "0x9708C0", Offset = "0x9708C0", VA = "0x9708C0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700025B")]
	public static JSONObject nullJO
	{
		[Token(Token = "0x6001006")]
		[Address(RVA = "0x9708C8", Offset = "0x9708C8", VA = "0x9708C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025C")]
	public static JSONObject obj
	{
		[Token(Token = "0x6001007")]
		[Address(RVA = "0x970A54", Offset = "0x970A54", VA = "0x970A54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025D")]
	public static JSONObject arr
	{
		[Token(Token = "0x6001008")]
		[Address(RVA = "0x970AA4", Offset = "0x970AA4", VA = "0x970AA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025E")]
	public bool IsNumber
	{
		[Token(Token = "0x6001024")]
		[Address(RVA = "0x972710", Offset = "0x972710", VA = "0x972710")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700025F")]
	public bool IsNull
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x972720", Offset = "0x972720", VA = "0x972720")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000260")]
	public bool IsString
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x972730", Offset = "0x972730", VA = "0x972730")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000261")]
	public bool IsBool
	{
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x972740", Offset = "0x972740", VA = "0x972740")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000262")]
	public bool IsArray
	{
		[Token(Token = "0x6001028")]
		[Address(RVA = "0x972750", Offset = "0x972750", VA = "0x972750")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000263")]
	public bool IsObject
	{
		[Token(Token = "0x6001029")]
		[Address(RVA = "0x972760", Offset = "0x972760", VA = "0x972760")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000264")]
	public JSONObject this[int index]
	{
		[Token(Token = "0x6001059")]
		[Address(RVA = "0x97400C", Offset = "0x97400C", VA = "0x97400C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600105A")]
		[Address(RVA = "0x97408C", Offset = "0x97408C", VA = "0x97408C")]
		set
		{
		}
	}

	[Token(Token = "0x17000265")]
	public JSONObject this[string index]
	{
		[Token(Token = "0x600105B")]
		[Address(RVA = "0x973340", Offset = "0x973340", VA = "0x973340")]
		get
		{
			return null;
		}
		[Token(Token = "0x600105C")]
		[Address(RVA = "0x974CF4", Offset = "0x974CF4", VA = "0x974CF4")]
		set
		{
		}
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x970AF4", Offset = "0x970AF4", VA = "0x970AF4")]
	public JSONObject(Type t)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x970C1C", Offset = "0x970C1C", VA = "0x970C1C")]
	public JSONObject(bool b)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x970C4C", Offset = "0x970C4C", VA = "0x970C4C")]
	public JSONObject(float f)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x970C7C", Offset = "0x970C7C", VA = "0x970C7C")]
	public JSONObject(Dictionary<string, string> dic)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x971058", Offset = "0x971058", VA = "0x971058")]
	public JSONObject(Dictionary<string, JSONObject> dic)
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x971388", Offset = "0x971388", VA = "0x971388")]
	public JSONObject(AddJSONConents content)
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x9713C4", Offset = "0x9713C4", VA = "0x9713C4")]
	public JSONObject(JSONObject[] objs)
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x971464", Offset = "0x971464", VA = "0x971464")]
	public static JSONObject StringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x9714B8", Offset = "0x9714B8", VA = "0x9714B8")]
	public void Absorb(JSONObject obj)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x971568", Offset = "0x971568", VA = "0x971568")]
	public static JSONObject Create()
	{
		return null;
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x970918", Offset = "0x970918", VA = "0x970918")]
	public static JSONObject Create(Type t)
	{
		return null;
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x9715CC", Offset = "0x9715CC", VA = "0x9715CC")]
	public static JSONObject Create(bool val)
	{
		return null;
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x971638", Offset = "0x971638", VA = "0x971638")]
	public static JSONObject Create(float val)
	{
		return null;
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x9716A8", Offset = "0x9716A8", VA = "0x9716A8")]
	public static JSONObject Create(int val)
	{
		return null;
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x970FE0", Offset = "0x970FE0", VA = "0x970FE0")]
	public static JSONObject CreateStringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x971714", Offset = "0x971714", VA = "0x971714")]
	public static JSONObject CreateBakedObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x97178C", Offset = "0x97178C", VA = "0x97178C")]
	public static JSONObject Create(string val)
	{
		return null;
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x971880", Offset = "0x971880", VA = "0x971880")]
	public static JSONObject Create(string val, int maxDepth)
	{
		return null;
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x9718EC", Offset = "0x9718EC", VA = "0x9718EC")]
	public static JSONObject Create(string val, int maxDepth, bool storeExcessLevels)
	{
		return null;
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x9717EC", Offset = "0x9717EC", VA = "0x9717EC")]
	public static JSONObject Create(string val, int maxDepth, bool storeExcessLevels, bool strict)
	{
		return null;
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x972284", Offset = "0x972284", VA = "0x972284")]
	public static JSONObject Create(AddJSONConents content)
	{
		return null;
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x9722FC", Offset = "0x9722FC", VA = "0x9722FC")]
	public static JSONObject Create(Dictionary<string, string> dic)
	{
		return null;
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x9715C4", Offset = "0x9715C4", VA = "0x9715C4")]
	public JSONObject()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x97267C", Offset = "0x97267C", VA = "0x97267C")]
	public JSONObject(string str)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x9726B4", Offset = "0x9726B4", VA = "0x9726B4")]
	public JSONObject(string str, int maxDepth, bool storeExcessLevels, bool strict)
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x972700", Offset = "0x972700", VA = "0x972700")]
	private void Parse(string str)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x97195C", Offset = "0x97195C", VA = "0x97195C")]
	private void Parse(string str, int maxDepth, bool storeExcessLevels, bool strict)
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x972770", Offset = "0x972770", VA = "0x972770")]
	public void Add(bool val)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x972944", Offset = "0x972944", VA = "0x972944")]
	public void Add(float val)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x9729B0", Offset = "0x9729B0", VA = "0x9729B0")]
	public void Add(int val)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x972A1C", Offset = "0x972A1C", VA = "0x972A1C")]
	public void Add(string str)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x972A88", Offset = "0x972A88", VA = "0x972A88")]
	public void Add(AddJSONConents content)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x9727DC", Offset = "0x9727DC", VA = "0x9727DC")]
	public void Add(JSONObject obj)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x972B00", Offset = "0x972B00", VA = "0x972B00")]
	public void AddField(string name, bool val)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x972E94", Offset = "0x972E94", VA = "0x972E94")]
	public void AddField(string name, float val)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x972F10", Offset = "0x972F10", VA = "0x972F10")]
	public void AddField(string name, int val)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x972F84", Offset = "0x972F84", VA = "0x972F84")]
	public void AddField(string name, AddJSONConents content)
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x972FF8", Offset = "0x972FF8", VA = "0x972FF8")]
	public void AddField(string name, string val)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x972B74", Offset = "0x972B74", VA = "0x972B74")]
	public void AddField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x97306C", Offset = "0x97306C", VA = "0x97306C")]
	public void SetField(string name, bool val)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x97319C", Offset = "0x97319C", VA = "0x97319C")]
	public void SetField(string name, float val)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x973218", Offset = "0x973218", VA = "0x973218")]
	public void SetField(string name, int val)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x9730E0", Offset = "0x9730E0", VA = "0x9730E0")]
	public void SetField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x973344", Offset = "0x973344", VA = "0x973344")]
	public void RemoveField(string name)
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x973420", Offset = "0x973420", VA = "0x973420")]
	public void GetField(ref bool field, string name)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x973428", Offset = "0x973428", VA = "0x973428")]
	public void GetField(ref bool field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x973500", Offset = "0x973500", VA = "0x973500")]
	public void GetField(ref float field, string name)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x973508", Offset = "0x973508", VA = "0x973508")]
	public void GetField(ref float field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x9735E0", Offset = "0x9735E0", VA = "0x9735E0")]
	public void GetField(ref int field, string name)
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x9735E8", Offset = "0x9735E8", VA = "0x9735E8")]
	public void GetField(ref int field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x9736D8", Offset = "0x9736D8", VA = "0x9736D8")]
	public void GetField(ref uint field, string name)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x9736E0", Offset = "0x9736E0", VA = "0x9736E0")]
	public void GetField(ref uint field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x9737C8", Offset = "0x9737C8", VA = "0x9737C8")]
	public void GetField(ref string field, string name)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x9737D0", Offset = "0x9737D0", VA = "0x9737D0")]
	public void GetField(ref string field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x9738B8", Offset = "0x9738B8", VA = "0x9738B8")]
	public void GetField(string name, GetFieldResponse response)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x9738C0", Offset = "0x9738C0", VA = "0x9738C0")]
	public void GetField(string name, GetFieldResponse response, FieldNotFound fail)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x9739A4", Offset = "0x9739A4", VA = "0x9739A4")]
	public JSONObject GetField(string name)
	{
		return null;
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x973A84", Offset = "0x973A84", VA = "0x973A84")]
	public bool HasFields(string[] names)
	{
		return default(bool);
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x97328C", Offset = "0x97328C", VA = "0x97328C")]
	public bool HasField(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x973B30", Offset = "0x973B30", VA = "0x973B30")]
	public void Clear()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x973BFC", Offset = "0x973BFC", VA = "0x973BFC")]
	public JSONObject Copy()
	{
		return null;
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x973C6C", Offset = "0x973C6C", VA = "0x973C6C")]
	public void Merge(JSONObject obj)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x973CD0", Offset = "0x973CD0", VA = "0x973CD0")]
	private static void MergeRecur(JSONObject left, JSONObject right)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x97411C", Offset = "0x97411C", VA = "0x97411C")]
	public void Bake()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x974158", Offset = "0x974158", VA = "0x974158")]
	[IteratorStateMachine(typeof(<BakeAsync>d__103))]
	public IEnumerable BakeAsync()
	{
		return null;
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x973C64", Offset = "0x973C64", VA = "0x973C64")]
	public string Print()
	{
		return null;
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x9741CC", Offset = "0x9741CC", VA = "0x9741CC")]
	public string Print(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x9749E0", Offset = "0x9749E0", VA = "0x9749E0")]
	public IEnumerable<string> PrintAsync()
	{
		return null;
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x9749E8", Offset = "0x9749E8", VA = "0x9749E8")]
	[IteratorStateMachine(typeof(<PrintAsync>d__107))]
	public IEnumerable<string> PrintAsync(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x974A70", Offset = "0x974A70", VA = "0x974A70")]
	private IEnumerable StringifyAsync(int depth, StringBuilder builder)
	{
		return null;
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x974A78", Offset = "0x974A78", VA = "0x974A78")]
	[IteratorStateMachine(typeof(<StringifyAsync>d__111))]
	private IEnumerable StringifyAsync(int depth, StringBuilder builder, bool pretty)
	{
		return null;
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x974B24", Offset = "0x974B24", VA = "0x974B24")]
	private void Stringify(int depth, StringBuilder builder)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x974254", Offset = "0x974254", VA = "0x974254")]
	private void Stringify(int depth, StringBuilder builder, bool pretty)
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x974B2C", Offset = "0x974B2C", VA = "0x974B2C")]
	public static implicit operator WWWForm(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x974CF8", Offset = "0x974CF8", VA = "0x974CF8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x974D00", Offset = "0x974D00", VA = "0x974D00")]
	public string ToString(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x974D08", Offset = "0x974D08", VA = "0x974D08")]
	public Dictionary<string, string> ToDictionary()
	{
		return null;
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x972AF4", Offset = "0x972AF4", VA = "0x972AF4")]
	public static implicit operator bool(JSONObject o)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002C1")]
public static class JSONTemplates
{
	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly HashSet<object> touched;

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x977218", Offset = "0x977218", VA = "0x977218")]
	public static JSONObject TOJSON(object obj)
	{
		return null;
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x977E94", Offset = "0x977E94", VA = "0x977E94")]
	public static Vector2 ToVector2(JSONObject obj)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x977FC0", Offset = "0x977FC0", VA = "0x977FC0")]
	public static JSONObject FromVector2(Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x978098", Offset = "0x978098", VA = "0x978098")]
	public static JSONObject FromVector3(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x9781B0", Offset = "0x9781B0", VA = "0x9781B0")]
	public static Vector3 ToVector3(JSONObject obj)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x978348", Offset = "0x978348", VA = "0x978348")]
	public static JSONObject FromVector4(Vector4 v)
	{
		return null;
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x978498", Offset = "0x978498", VA = "0x978498")]
	public static Vector4 ToVector4(JSONObject obj)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x9786A4", Offset = "0x9786A4", VA = "0x9786A4")]
	public static JSONObject FromMatrix4x4(Matrix4x4 m)
	{
		return null;
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x978A48", Offset = "0x978A48", VA = "0x978A48")]
	public static Matrix4x4 ToMatrix4x4(JSONObject obj)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x9791AC", Offset = "0x9791AC", VA = "0x9791AC")]
	public static JSONObject FromQuaternion(Quaternion q)
	{
		return null;
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x9792FC", Offset = "0x9792FC", VA = "0x9792FC")]
	public static Quaternion ToQuaternion(JSONObject obj)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x979508", Offset = "0x979508", VA = "0x979508")]
	public static JSONObject FromColor(Color c)
	{
		return null;
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x979658", Offset = "0x979658", VA = "0x979658")]
	public static Color ToColor(JSONObject obj)
	{
		return default(Color);
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x97984C", Offset = "0x97984C", VA = "0x97984C")]
	public static JSONObject FromLayerMask(LayerMask l)
	{
		return null;
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x9798E8", Offset = "0x9798E8", VA = "0x9798E8")]
	public static LayerMask ToLayerMask(JSONObject obj)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x979974", Offset = "0x979974", VA = "0x979974")]
	public static JSONObject FromRect(Rect r)
	{
		return null;
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x979B04", Offset = "0x979B04", VA = "0x979B04")]
	public static Rect ToRect(JSONObject obj)
	{
		return default(Rect);
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x979CF8", Offset = "0x979CF8", VA = "0x979CF8")]
	public static JSONObject FromRectOffset(RectOffset r)
	{
		return null;
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x979E80", Offset = "0x979E80", VA = "0x979E80")]
	public static RectOffset ToRectOffset(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x97A0E0", Offset = "0x97A0E0", VA = "0x97A0E0")]
	public static AnimationCurve ToAnimationCurve(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x97A4F8", Offset = "0x97A4F8", VA = "0x97A4F8")]
	public static JSONObject FromAnimationCurve(AnimationCurve a)
	{
		return null;
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x97A2FC", Offset = "0x97A2FC", VA = "0x97A2FC")]
	public static Keyframe ToKeyframe(JSONObject obj)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x97A748", Offset = "0x97A748", VA = "0x97A748")]
	public static JSONObject FromKeyframe(Keyframe k)
	{
		return null;
	}
}
[Token(Token = "0x20002C2")]
public class TestSocketIO : MonoBehaviour
{
	[Token(Token = "0x20002C3")]
	[CompilerGenerated]
	private sealed class <BeepBoop>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestSocketIO <>4__this;

		[Token(Token = "0x1700026C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x97B278", Offset = "0x97B278", VA = "0x97B278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x97B2C0", Offset = "0x97B2C0", VA = "0x97B2C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x97AC70", Offset = "0x97AC70", VA = "0x97AC70")]
		[DebuggerHidden]
		public <BeepBoop>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x97B08C", Offset = "0x97B08C", VA = "0x97B08C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x97B090", Offset = "0x97B090", VA = "0x97B090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x97B280", Offset = "0x97B280", VA = "0x97B280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SocketIOComponent socket;

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x97A9AC", Offset = "0x97A9AC", VA = "0x97A9AC")]
	public void Start()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x97ABFC", Offset = "0x97ABFC", VA = "0x97ABFC")]
	[IteratorStateMachine(typeof(<BeepBoop>d__2))]
	private IEnumerator BeepBoop()
	{
		return null;
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x97AC98", Offset = "0x97AC98", VA = "0x97AC98")]
	public void TestOpen(SocketIOEvent e)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x97AD6C", Offset = "0x97AD6C", VA = "0x97AD6C")]
	public void TestBoop(SocketIOEvent e)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x97AEDC", Offset = "0x97AEDC", VA = "0x97AEDC")]
	public void TestError(SocketIOEvent e)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x97AFB0", Offset = "0x97AFB0", VA = "0x97AFB0")]
	public void TestClose(SocketIOEvent e)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x97B084", Offset = "0x97B084", VA = "0x97B084")]
	public TestSocketIO()
	{
	}
}
[Token(Token = "0x20002C4")]
public class sphe : MonoBehaviour
{
	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gen;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer mesh;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int i;

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x97B2C8", Offset = "0x97B2C8", VA = "0x97B2C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x97B2D0", Offset = "0x97B2D0", VA = "0x97B2D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x97B2E0", Offset = "0x97B2E0", VA = "0x97B2E0")]
	private void SaveAsset()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x97B2E4", Offset = "0x97B2E4", VA = "0x97B2E4")]
	public sphe()
	{
	}
}
[Token(Token = "0x20002C5")]
public class TestDummyEnMainMenu : MonoBehaviour
{
	[Token(Token = "0x20002C6")]
	[CompilerGenerated]
	private sealed class <InicializarDummy>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestDummyEnMainMenu <>4__this;

		[Token(Token = "0x1700026E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x97BB64", Offset = "0x97BB64", VA = "0x97BB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x97BBAC", Offset = "0x97BBAC", VA = "0x97BBAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x97B66C", Offset = "0x97B66C", VA = "0x97B66C")]
		[DebuggerHidden]
		public <InicializarDummy>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x97BAB4", Offset = "0x97BAB4", VA = "0x97BAB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x97BAB8", Offset = "0x97BAB8", VA = "0x97BAB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x97BB6C", Offset = "0x97BB6C", VA = "0x97BB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform tCabeza;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tManoDcha;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tManoIzda;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tPieDcho;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tPieIzdo;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tTorso;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform sensorCabeza;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform sensorManoDcha;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform sensorManoIzda;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform sensorPieDcho;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform sensorPieIzdo;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform transformBaseDummy;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 offset;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LimbsDummy limbsDummy;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool dummyInicializado;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool corutinaInitLanzada;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject goCabeza;

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x97B2EC", Offset = "0x97B2EC", VA = "0x97B2EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x97B38C", Offset = "0x97B38C", VA = "0x97B38C")]
	private void InitDummy()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x97B5F8", Offset = "0x97B5F8", VA = "0x97B5F8")]
	[IteratorStateMachine(typeof(<InicializarDummy>d__19))]
	private IEnumerator InicializarDummy()
	{
		return null;
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x97B694", Offset = "0x97B694", VA = "0x97B694")]
	[ContextMenu("ARTURO")]
	public void AsignarCositas()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x97B698", Offset = "0x97B698", VA = "0x97B698")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x97BA44", Offset = "0x97BA44", VA = "0x97BA44")]
	public TestDummyEnMainMenu()
	{
	}
}
[Token(Token = "0x20002C7")]
public class traducePRO : MonoBehaviour
{
	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject settings;

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x97BBB4", Offset = "0x97BBB4", VA = "0x97BBB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x97C33C", Offset = "0x97C33C", VA = "0x97C33C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x97C41C", Offset = "0x97C41C", VA = "0x97C41C")]
	public traducePRO()
	{
	}
}
[Token(Token = "0x20002C8")]
public class UseControllerAsCamera : MonoBehaviour
{
	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool done;

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x97C424", Offset = "0x97C424", VA = "0x97C424")]
	public UseControllerAsCamera()
	{
	}
}
[Token(Token = "0x20002C9")]
public class VigilarGlitchBota : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	public enum TipoPelotaParaGlitch
	{
		[Token(Token = "0x4001380")]
		gameplay,
		[Token(Token = "0x4001381")]
		menu
	}

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rigidbodyPelota;

	[Token(Token = "0x400137D")]
	private const float kDistanciaDeteccionGlitchBota = 0.095f;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TipoPelotaParaGlitch tipoPelotaParaGlitch;

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x97C42C", Offset = "0x97C42C", VA = "0x97C42C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x97C484", Offset = "0x97C484", VA = "0x97C484")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x97C488", Offset = "0x97C488", VA = "0x97C488")]
	private void CheckGlitchPelotica()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x97C5D8", Offset = "0x97C5D8", VA = "0x97C5D8")]
	private bool MirarPie(Transform pie)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x97CB14", Offset = "0x97CB14", VA = "0x97CB14")]
	public VigilarGlitchBota()
	{
	}
}
[Token(Token = "0x20002CB")]
public class zonasDeMuseoManager : MonoBehaviour
{
	[Token(Token = "0x20002CC")]
	[CompilerGenerated]
	private sealed class <procesarPosibleCambioRetrasado>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public zonasDeMuseoManager <>4__this;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x97D660", Offset = "0x97D660", VA = "0x97D660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x97D6A8", Offset = "0x97D6A8", VA = "0x97D6A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x97D2B8", Offset = "0x97D2B8", VA = "0x97D2B8")]
		[DebuggerHidden]
		public <procesarPosibleCambioRetrasado>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x97D5A0", Offset = "0x97D5A0", VA = "0x97D5A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x97D5A4", Offset = "0x97D5A4", VA = "0x97D5A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x97D668", Offset = "0x97D668", VA = "0x97D668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string zonaActualEnMuseo;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sueloPuertaS03;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sueloPuertaS04;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject sueloPuertaS05;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject sueloPuertaS06;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sueloPuertaS0102;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sueloPuertaS0304;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sueloPuertaS0506;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject sueloPuertaA0506;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject sueloPuertaA0304;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject sueloPuertaA0102;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject sueloPuertaA03;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject sueloPuertaA04;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject sueloPuertaA05;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject sueloPuertaA06;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject sueloA2;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject sueloA3;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject sueloA4;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject sueloA5;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject sueloA6;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject sueloS2;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject sueloS3;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject sueloS4;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject sueloS5;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject sueloS6;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject A2;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject A3;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject A4;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject A5;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject A6;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject S2;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject S3;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject S4;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject S5;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject S6;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public gestionarPuertaMuseo puertaA01;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public gestionarPuertaMuseo puertaS01;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public gestionarPuertaMuseo puertaS04;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public gestionarPuertaMuseo puertaS05;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public gestionarPuertaMuseo puertaS06;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public gestionarPuertaMuseo puertaS03;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public gestionarPuertaMuseo puertaS0102;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public gestionarPuertaMuseo puertaS0304;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public gestionarPuertaMuseo puertaS0506;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public gestionarPuertaMuseo puertaA0506;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public gestionarPuertaMuseo puertaA0304;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public gestionarPuertaMuseo puertaA0102;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public gestionarPuertaMuseo puertaA04;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public gestionarPuertaMuseo puertaA05;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public gestionarPuertaMuseo puertaA06;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public gestionarPuertaMuseo puertaA03;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int iMaxNivelArcade;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int iMaxNivelSimulacion;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool vZonaBase;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	public bool va2;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
	public bool va3;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
	public bool va4;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public bool va5;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
	public bool va6;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BE")]
	public bool vs2;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BF")]
	public bool vs3;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool vs4;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	public bool vs5;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
	public bool vs6;

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x97CB1C", Offset = "0x97CB1C", VA = "0x97CB1C")]
	private void ponerValoresPorDefectoSegunProgreso()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x97CC84", Offset = "0x97CC84", VA = "0x97CC84")]
	private void Start()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x97CDE0", Offset = "0x97CDE0", VA = "0x97CDE0")]
	private void procesarPosibleCambioReal()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x97D244", Offset = "0x97D244", VA = "0x97D244")]
	[IteratorStateMachine(typeof(<procesarPosibleCambioRetrasado>d__67))]
	private IEnumerator procesarPosibleCambioRetrasado()
	{
		return null;
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x97CDB8", Offset = "0x97CDB8", VA = "0x97CDB8")]
	public void procesarPosibleCambio()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x97D2E0", Offset = "0x97D2E0", VA = "0x97D2E0")]
	private void RevisarEncendidoCollidersSueloParaTeleport()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x97D598", Offset = "0x97D598", VA = "0x97D598")]
	public zonasDeMuseoManager()
	{
	}
}
namespace WebSocketSharp
{
	[Token(Token = "0x20002CD")]
	public enum ByteOrder : byte
	{
		[Token(Token = "0x40013C6")]
		Little,
		[Token(Token = "0x40013C7")]
		Big
	}
	[Token(Token = "0x20002CE")]
	public class CloseEventArgs : EventArgs
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _clean;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private ushort _code;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _reason;

		[Token(Token = "0x17000272")]
		public ushort Code
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x97D868", Offset = "0x97D868", VA = "0x97D868")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000273")]
		public string Reason
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x97D870", Offset = "0x97D870", VA = "0x97D870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		public bool WasClean
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x97D878", Offset = "0x97D878", VA = "0x97D878")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x97D880", Offset = "0x97D880", VA = "0x97D880")]
			internal set
			{
			}
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x97D6B0", Offset = "0x97D6B0", VA = "0x97D6B0")]
		internal CloseEventArgs(PayloadData payload)
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public enum CloseStatusCode : ushort
	{
		[Token(Token = "0x40013CC")]
		Normal = 1000,
		[Token(Token = "0x40013CD")]
		Away = 1001,
		[Token(Token = "0x40013CE")]
		ProtocolError = 1002,
		[Token(Token = "0x40013CF")]
		IncorrectData = 1003,
		[Token(Token = "0x40013D0")]
		Undefined = 1004,
		[Token(Token = "0x40013D1")]
		NoStatusCode = 1005,
		[Token(Token = "0x40013D2")]
		Abnormal = 1006,
		[Token(Token = "0x40013D3")]
		InconsistentData = 1007,
		[Token(Token = "0x40013D4")]
		PolicyViolation = 1008,
		[Token(Token = "0x40013D5")]
		TooBig = 1009,
		[Token(Token = "0x40013D6")]
		IgnoreExtension = 1010,
		[Token(Token = "0x40013D7")]
		ServerError = 1011,
		[Token(Token = "0x40013D8")]
		TlsHandshakeFailure = 1015
	}
	[Token(Token = "0x20002D0")]
	public enum CompressionMethod : byte
	{
		[Token(Token = "0x40013DA")]
		None,
		[Token(Token = "0x40013DB")]
		Deflate
	}
	[Token(Token = "0x20002D1")]
	public class ErrorEventArgs : EventArgs
	{
		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _message;

		[Token(Token = "0x17000275")]
		public string Message
		{
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x97D900", Offset = "0x97D900", VA = "0x97D900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x97D88C", Offset = "0x97D88C", VA = "0x97D88C")]
		internal ErrorEventArgs(string message)
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public static class Ext
	{
		[Token(Token = "0x20002D6")]
		[CompilerGenerated]
		private sealed class <SplitHeaderValue>d__54 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string value;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string <>3__value;

			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private char[] separator;

			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public char[] <>3__separator;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <len>5__2;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <separators>5__3;

			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private StringBuilder <buffer>5__4;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool <quoted>5__5;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
			private bool <escaped>5__6;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <i>5__7;

			[Token(Token = "0x17000276")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x600114D")]
				[Address(RVA = "0x982640", Offset = "0x982640", VA = "0x982640", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000277")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600114F")]
				[Address(RVA = "0x982688", Offset = "0x982688", VA = "0x982688", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114A")]
			[Address(RVA = "0x980050", Offset = "0x980050", VA = "0x980050")]
			[DebuggerHidden]
			public <SplitHeaderValue>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x600114B")]
			[Address(RVA = "0x9823E8", Offset = "0x9823E8", VA = "0x9823E8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600114C")]
			[Address(RVA = "0x9823EC", Offset = "0x9823EC", VA = "0x9823EC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114E")]
			[Address(RVA = "0x982648", Offset = "0x982648", VA = "0x982648", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001150")]
			[Address(RVA = "0x982690", Offset = "0x982690", VA = "0x982690", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001151")]
			[Address(RVA = "0x98274C", Offset = "0x98274C", VA = "0x98274C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40013DD")]
		private const string _tspecials = "()<>@,;:\\\"/[]?={} \t";

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x97D908", Offset = "0x97D908", VA = "0x97D908")]
		private static byte[] compress(this byte[] value)
		{
			return null;
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x97DC4C", Offset = "0x97DC4C", VA = "0x97DC4C")]
		private static MemoryStream compress(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x97DAA8", Offset = "0x97DAA8", VA = "0x97DAA8")]
		private static byte[] compressToArray(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x97DE74", Offset = "0x97DE74", VA = "0x97DE74")]
		private static byte[] decompress(this byte[] value)
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x97E1B8", Offset = "0x97E1B8", VA = "0x97E1B8")]
		private static MemoryStream decompress(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x97E014", Offset = "0x97E014", VA = "0x97E014")]
		private static byte[] decompressToArray(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x97E4B8", Offset = "0x97E4B8", VA = "0x97E4B8")]
		private static byte[] readBytes(this Stream stream, byte[] buffer, int offset, int length)
		{
			return null;
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x97E5C0", Offset = "0x97E5C0", VA = "0x97E5C0")]
		private static bool readBytes(this Stream stream, byte[] buffer, int offset, int length, Stream dest)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x97E628", Offset = "0x97E628", VA = "0x97E628")]
		private static void times(this ulong n, Action act)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x97E668", Offset = "0x97E668", VA = "0x97E668")]
		internal static byte[] Append(this ushort code, string reason)
		{
			return null;
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x97E95C", Offset = "0x97E95C", VA = "0x97E95C")]
		internal static string CheckIfCanRead(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x97E9D8", Offset = "0x97E9D8", VA = "0x97E9D8")]
		internal static string CheckIfClosable(this WebSocketState state)
		{
			return null;
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x97EA4C", Offset = "0x97EA4C", VA = "0x97EA4C")]
		internal static string CheckIfConnectable(this WebSocketState state)
		{
			return null;
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x97EAA0", Offset = "0x97EAA0", VA = "0x97EAA0")]
		internal static string CheckIfOpen(this WebSocketState state)
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x97EB34", Offset = "0x97EB34", VA = "0x97EB34")]
		internal static string CheckIfValidCloseStatusCode(this ushort code)
		{
			return null;
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x97EB9C", Offset = "0x97EB9C", VA = "0x97EB9C")]
		internal static string CheckIfValidControlData(this byte[] data, string paramName)
		{
			return null;
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x97EC10", Offset = "0x97EC10", VA = "0x97EC10")]
		internal static string CheckIfValidProtocols(this string[] protocols)
		{
			return null;
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x97EE60", Offset = "0x97EE60", VA = "0x97EE60")]
		internal static string CheckIfValidSendData(this byte[] data)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x97EEAC", Offset = "0x97EEAC", VA = "0x97EEAC")]
		internal static string CheckIfValidSendData(this FileInfo file)
		{
			return null;
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x97EEF8", Offset = "0x97EEF8", VA = "0x97EEF8")]
		internal static string CheckIfValidSendData(this string data)
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x97EF44", Offset = "0x97EF44", VA = "0x97EF44")]
		internal static string CheckIfValidServicePath(this string servicePath)
		{
			return null;
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x97F048", Offset = "0x97F048", VA = "0x97F048")]
		internal static string CheckIfValidSessionID(this string id)
		{
			return null;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x97F0A0", Offset = "0x97F0A0", VA = "0x97F0A0")]
		internal static void Close(this HttpListenerResponse response, HttpStatusCode code)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x97F0DC", Offset = "0x97F0DC", VA = "0x97F0DC")]
		internal static void CloseWithAuthChallenge(this HttpListenerResponse response, string challenge)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x97F154", Offset = "0x97F154", VA = "0x97F154")]
		internal static byte[] Compress(this byte[] value, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x97F168", Offset = "0x97F168", VA = "0x97F168")]
		internal static Stream Compress(this Stream stream, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x97F17C", Offset = "0x97F17C", VA = "0x97F17C")]
		internal static byte[] CompressToArray(this Stream stream, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60010F7")]
		internal static bool Contains<T>(this IEnumerable<T> source, Func<T, bool> condition)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x97ED5C", Offset = "0x97ED5C", VA = "0x97ED5C")]
		internal static bool ContainsTwice(this string[] values)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F9")]
		internal static T[] Copy<T>(this T[] src, long length)
		{
			return null;
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x97F380", Offset = "0x97F380", VA = "0x97F380")]
		internal static void CopyTo(this Stream src, Stream dest)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x97E3B0", Offset = "0x97E3B0", VA = "0x97E3B0")]
		internal static void CopyTo(this Stream src, Stream dest, bool setDefaultPosition)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x97F388", Offset = "0x97F388", VA = "0x97F388")]
		internal static byte[] Decompress(this byte[] value, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x97F39C", Offset = "0x97F39C", VA = "0x97F39C")]
		internal static Stream Decompress(this Stream stream, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x97F3B0", Offset = "0x97F3B0", VA = "0x97F3B0")]
		internal static byte[] DecompressToArray(this Stream stream, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x97F3C4", Offset = "0x97F3C4", VA = "0x97F3C4")]
		internal static bool EqualsWith(this int value, char c, Action<int> action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x97F458", Offset = "0x97F458", VA = "0x97F458")]
		internal static string GetAbsolutePath(this Uri uri)
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x97F560", Offset = "0x97F560", VA = "0x97F560")]
		internal static string GetMessage(this CloseStatusCode code)
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x97F648", Offset = "0x97F648", VA = "0x97F648")]
		internal static string GetNameInternal(this string nameAndValue, string separator)
		{
			return null;
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x97F698", Offset = "0x97F698", VA = "0x97F698")]
		internal static string GetValueInternal(this string nameAndValue, string separator)
		{
			return null;
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x97F6F0", Offset = "0x97F6F0", VA = "0x97F6F0")]
		internal static TcpListenerWebSocketContext GetWebSocketContext(this TcpClient client, string protocol, bool secure, X509Certificate cert, Logger logger)
		{
			return null;
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x97F784", Offset = "0x97F784", VA = "0x97F784")]
		internal static bool IsCompressionExtension(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x97F7D8", Offset = "0x97F7D8", VA = "0x97F7D8")]
		internal static bool IsPortNumber(this int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x97F7EC", Offset = "0x97F7EC", VA = "0x97F7EC")]
		internal static bool IsReserved(this ushort code)
		{
			return default(bool);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x97F81C", Offset = "0x97F81C", VA = "0x97F81C")]
		internal static bool IsReserved(this CloseStatusCode code)
		{
			return default(bool);
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x97F84C", Offset = "0x97F84C", VA = "0x97F84C")]
		internal static bool IsText(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x97F968", Offset = "0x97F968", VA = "0x97F968")]
		internal static bool IsToken(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x97FA14", Offset = "0x97FA14", VA = "0x97FA14")]
		internal static string Quote(this string value)
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x97FAC4", Offset = "0x97FAC4", VA = "0x97FAC4")]
		internal static byte[] ReadBytes(this Stream stream, int length)
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x97FB2C", Offset = "0x97FB2C", VA = "0x97FB2C")]
		internal static byte[] ReadBytes(this Stream stream, long length, int bufferLength)
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x97FD94", Offset = "0x97FD94", VA = "0x97FD94")]
		internal static void ReadBytesAsync(this Stream stream, int length, Action<byte[]> completed, Action<Exception> error)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x97FF04", Offset = "0x97FF04", VA = "0x97FF04")]
		internal static string RemovePrefix(this string value, params string[] prefixes)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		internal static T[] Reverse<T>(this T[] array)
		{
			return null;
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x97FFB0", Offset = "0x97FFB0", VA = "0x97FFB0")]
		[IteratorStateMachine(typeof(<SplitHeaderValue>d__54))]
		internal static IEnumerable<string> SplitHeaderValue(this string value, params char[] separator)
		{
			return null;
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x97F190", Offset = "0x97F190", VA = "0x97F190")]
		internal static byte[] ToByteArray(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x97E8C0", Offset = "0x97E8C0", VA = "0x97E8C0")]
		internal static byte[] ToByteArrayInternally(this ushort value, ByteOrder order)
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x9800F0", Offset = "0x9800F0", VA = "0x9800F0")]
		internal static byte[] ToByteArrayInternally(this ulong value, ByteOrder order)
		{
			return null;
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x98018C", Offset = "0x98018C", VA = "0x98018C")]
		internal static CompressionMethod ToCompressionMethod(this string value)
		{
			return default(CompressionMethod);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x980500", Offset = "0x980500", VA = "0x980500")]
		internal static string ToExtensionString(this CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x9805C8", Offset = "0x9805C8", VA = "0x9805C8")]
		internal static IPAddress ToIPAddress(this string hostNameOrAddress)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		internal static List<TSource> ToList<TSource>(this IEnumerable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x97D7EC", Offset = "0x97D7EC", VA = "0x97D7EC")]
		internal static ushort ToUInt16(this byte[] src, ByteOrder srcOrder)
		{
			return default(ushort);
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x980730", Offset = "0x980730", VA = "0x980730")]
		internal static ulong ToUInt64(this byte[] src, ByteOrder srcOrder)
		{
			return default(ulong);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x9807AC", Offset = "0x9807AC", VA = "0x9807AC")]
		internal static string TrimEndSlash(this string value)
		{
			return null;
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x980818", Offset = "0x980818", VA = "0x980818")]
		internal static bool TryCreateWebSocketUri(this string uriString, out Uri result, out string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x980CF8", Offset = "0x980CF8", VA = "0x980CF8")]
		internal static string Unquote(this string value)
		{
			return null;
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x980DBC", Offset = "0x980DBC", VA = "0x980DBC")]
		internal static void WriteBytes(this Stream stream, byte[] value)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x980F50", Offset = "0x980F50", VA = "0x980F50")]
		public static bool Contains(this string value, params char[] chars)
		{
			return default(bool);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x980F94", Offset = "0x980F94", VA = "0x980F94")]
		public static bool Contains(this NameValueCollection collection, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x980FE0", Offset = "0x980FE0", VA = "0x980FE0")]
		public static bool Contains(this NameValueCollection collection, string name, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x9810AC", Offset = "0x9810AC", VA = "0x9810AC")]
		public static void Emit(this EventHandler eventHandler, object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6001123")]
		public static void Emit<TEventArgs>(this EventHandler<TEventArgs> eventHandler, object sender, TEventArgs e) where TEventArgs : EventArgs
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x9810C8", Offset = "0x9810C8", VA = "0x9810C8")]
		public static CookieCollection GetCookies(this NameValueCollection headers, bool response)
		{
			return null;
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x9811A4", Offset = "0x9811A4", VA = "0x9811A4")]
		public static string GetDescription(this HttpStatusCode code)
		{
			return null;
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x9816F8", Offset = "0x9816F8", VA = "0x9816F8")]
		public static string GetName(this string nameAndValue, string separator)
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x981724", Offset = "0x981724", VA = "0x981724")]
		public static KeyValuePair<string, string> GetNameAndValue(this string nameAndValue, string separator)
		{
			return default(KeyValuePair<string, string>);
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x9811A8", Offset = "0x9811A8", VA = "0x9811A8")]
		public static string GetStatusDescription(this int code)
		{
			return null;
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x9817C4", Offset = "0x9817C4", VA = "0x9817C4")]
		public static string GetValue(this string nameAndValue, string separator)
		{
			return null;
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x97EB88", Offset = "0x97EB88", VA = "0x97EB88")]
		public static bool IsCloseStatusCode(this ushort value)
		{
			return default(bool);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x9817F0", Offset = "0x9817F0", VA = "0x9817F0")]
		public static bool IsEnclosedIn(this string value, char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x980084", Offset = "0x980084", VA = "0x980084")]
		public static bool IsHostOrder(this ByteOrder order)
		{
			return default(bool);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x981864", Offset = "0x981864", VA = "0x981864")]
		public static bool IsLocal(this IPAddress address)
		{
			return default(bool);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x9819C0", Offset = "0x9819C0", VA = "0x9819C0")]
		public static bool IsNullOrEmpty(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x9819DC", Offset = "0x9819DC", VA = "0x9819DC")]
		public static bool IsPredefinedScheme(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x981C08", Offset = "0x981C08", VA = "0x981C08")]
		public static bool IsUpgradeTo(this HttpListenerRequest request, string protocol)
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x981D5C", Offset = "0x981D5C", VA = "0x981D5C")]
		public static bool MaybeUri(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001132")]
		public static T[] SubArray<T>(this T[] array, int startIndex, int length)
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x981DB8", Offset = "0x981DB8", VA = "0x981DB8")]
		public static void Times(this int n, Action act)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x981DD0", Offset = "0x981DD0", VA = "0x981DD0")]
		public static void Times(this long n, Action act)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x981DE4", Offset = "0x981DE4", VA = "0x981DE4")]
		public static void Times(this uint n, Action act)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x981DF8", Offset = "0x981DF8", VA = "0x981DF8")]
		public static void Times(this ulong n, Action act)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x981E08", Offset = "0x981E08", VA = "0x981E08")]
		public static void Times(this int n, Action<int> act)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x981E54", Offset = "0x981E54", VA = "0x981E54")]
		public static void Times(this long n, Action<long> act)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x981EA0", Offset = "0x981EA0", VA = "0x981EA0")]
		public static void Times(this uint n, Action<uint> act)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x981EE8", Offset = "0x981EE8", VA = "0x981EE8")]
		public static void Times(this ulong n, Action<ulong> act)
		{
		}

		[Token(Token = "0x600113B")]
		public static T To<T>(this byte[] src, ByteOrder srcOrder) where T : struct
		{
			return (T)null;
		}

		[Token(Token = "0x600113C")]
		public static byte[] ToByteArray<T>(this T value, ByteOrder order) where T : struct
		{
			return null;
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x98066C", Offset = "0x98066C", VA = "0x98066C")]
		public static byte[] ToHostOrder(this byte[] src, ByteOrder srcOrder)
		{
			return null;
		}

		[Token(Token = "0x600113E")]
		public static string ToString<T>(this T[] array, string separator)
		{
			return null;
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x980C64", Offset = "0x980C64", VA = "0x980C64")]
		public static Uri ToUri(this string uriString)
		{
			return null;
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x981F30", Offset = "0x981F30", VA = "0x981F30")]
		public static string UrlDecode(this string value)
		{
			return null;
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x981FA4", Offset = "0x981FA4", VA = "0x981FA4")]
		public static string UrlEncode(this string value)
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x982018", Offset = "0x982018", VA = "0x982018")]
		public static void WriteContent(this HttpListenerResponse response, byte[] content)
		{
		}
	}
	[Token(Token = "0x20002D8")]
	internal enum Fin : byte
	{
		[Token(Token = "0x40013F9")]
		More,
		[Token(Token = "0x40013FA")]
		Final
	}
	[Token(Token = "0x20002D9")]
	internal abstract class HandshakeBase
	{
		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NameValueCollection _headers;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private System.Version _version;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal byte[] EntityBodyData;

		[Token(Token = "0x40013FE")]
		protected const string CrLf = "\r\n";

		[Token(Token = "0x17000278")]
		public string EntityBody
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x982794", Offset = "0x982794", VA = "0x982794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		public NameValueCollection Headers
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x98290C", Offset = "0x98290C", VA = "0x98290C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public System.Version ProtocolVersion
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x982914", Offset = "0x982914", VA = "0x982914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x982750", Offset = "0x982750", VA = "0x982750")]
		protected HandshakeBase(System.Version version, NameValueCollection headers)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x982844", Offset = "0x982844", VA = "0x982844")]
		private static System.Text.Encoding getEncoding(string contentType)
		{
			return null;
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x98291C", Offset = "0x98291C", VA = "0x98291C")]
		public byte[] ToByteArray()
		{
			return null;
		}
	}
	[Token(Token = "0x20002DA")]
	internal class HandshakeRequest : HandshakeBase
	{
		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _method;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _uri;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _websocketRequest;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _websocketRequestWasSet;

		[Token(Token = "0x1700027B")]
		public AuthenticationResponse AuthResponse
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x982AF0", Offset = "0x982AF0", VA = "0x982AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public CookieCollection Cookies
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x982B6C", Offset = "0x982B6C", VA = "0x982B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		public string HttpMethod
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x982B78", Offset = "0x982B78", VA = "0x982B78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		public bool IsWebSocketRequest
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0x982B80", Offset = "0x982B80", VA = "0x982B80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027F")]
		public string RequestUri
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x982CB4", Offset = "0x982CB4", VA = "0x982CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x98296C", Offset = "0x98296C", VA = "0x98296C")]
		private HandshakeRequest(System.Version version, NameValueCollection headers)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x982970", Offset = "0x982970", VA = "0x982970")]
		internal HandshakeRequest(string pathAndQuery)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x982CBC", Offset = "0x982CBC", VA = "0x982CBC")]
		internal static HandshakeRequest Parse(string[] headerParts)
		{
			return null;
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x982F10", Offset = "0x982F10", VA = "0x982F10")]
		public void SetCookies(CookieCollection cookies)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x983328", Offset = "0x983328", VA = "0x983328", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002DB")]
	internal class HandshakeResponse : HandshakeBase
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _code;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _reason;

		[Token(Token = "0x17000280")]
		public AuthenticationChallenge AuthChallenge
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x983774", Offset = "0x983774", VA = "0x983774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		public CookieCollection Cookies
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x9837F0", Offset = "0x9837F0", VA = "0x9837F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		public bool IsUnauthorized
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x9837FC", Offset = "0x9837FC", VA = "0x9837FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000283")]
		public bool IsWebSocketResponse
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x983848", Offset = "0x983848", VA = "0x983848")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000284")]
		public string Reason
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x983958", Offset = "0x983958", VA = "0x983958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		public string StatusCode
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x983960", Offset = "0x983960", VA = "0x983960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x9835DC", Offset = "0x9835DC", VA = "0x9835DC")]
		private HandshakeResponse(System.Version version, NameValueCollection headers)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x9835E0", Offset = "0x9835E0", VA = "0x9835E0")]
		internal HandshakeResponse(HttpStatusCode code)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x983968", Offset = "0x983968", VA = "0x983968")]
		internal static HandshakeResponse CreateCloseResponse(HttpStatusCode code)
		{
			return null;
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x983A08", Offset = "0x983A08", VA = "0x983A08")]
		internal static HandshakeResponse Parse(string[] headerParts)
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x983C5C", Offset = "0x983C5C", VA = "0x983C5C")]
		public void SetCookies(CookieCollection cookies)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x983FA4", Offset = "0x983FA4", VA = "0x983FA4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002DC")]
	public class LogData
	{
		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StackFrame _caller;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DateTime _date;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LogLevel _level;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _message;

		[Token(Token = "0x17000286")]
		public StackFrame Caller
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0x98431C", Offset = "0x98431C", VA = "0x98431C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public DateTime Date
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x984324", Offset = "0x984324", VA = "0x984324")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x17000288")]
		public LogLevel Level
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0x98432C", Offset = "0x98432C", VA = "0x98432C")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x17000289")]
		public string Message
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0x984334", Offset = "0x984334", VA = "0x984334")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x984258", Offset = "0x984258", VA = "0x984258")]
		internal LogData(LogLevel level, StackFrame caller, string message)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x98433C", Offset = "0x98433C", VA = "0x98433C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002DD")]
	public class Logger
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _file;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel _level;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<LogData, string> _output;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object _sync;

		[Token(Token = "0x1700028A")]
		public string File
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x984794", Offset = "0x984794", VA = "0x984794")]
			get
			{
				return null;
			}
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x9847AC", Offset = "0x9847AC", VA = "0x9847AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public LogLevel Level
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x984918", Offset = "0x984918", VA = "0x984918")]
			get
			{
				return default(LogLevel);
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x984930", Offset = "0x984930", VA = "0x984930")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public Action<LogData, string> Output
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x984A6C", Offset = "0x984A6C", VA = "0x984A6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x984A74", Offset = "0x984A74", VA = "0x984A74")]
			set
			{
			}
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x984678", Offset = "0x984678", VA = "0x984678")]
		public Logger()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x984788", Offset = "0x984788", VA = "0x984788")]
		public Logger(LogLevel level)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x984688", Offset = "0x984688", VA = "0x984688")]
		public Logger(LogLevel level, string file, Action<LogData, string> output)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x984BCC", Offset = "0x984BCC", VA = "0x984BCC")]
		private static void defaultOutput(LogData data, string path)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x984F78", Offset = "0x984F78", VA = "0x984F78")]
		private void output(string message, LogLevel level)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x984C70", Offset = "0x984C70", VA = "0x984C70")]
		private static void writeToFile(string path, string value)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x985258", Offset = "0x985258", VA = "0x985258")]
		public void Debug(string message)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x98529C", Offset = "0x98529C", VA = "0x98529C")]
		public void Error(string message)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x9852E0", Offset = "0x9852E0", VA = "0x9852E0")]
		public void Fatal(string message)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x9852E8", Offset = "0x9852E8", VA = "0x9852E8")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x98532C", Offset = "0x98532C", VA = "0x98532C")]
		public void Trace(string message)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x9848D4", Offset = "0x9848D4", VA = "0x9848D4")]
		public void Warn(string message)
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public enum LogLevel
	{
		[Token(Token = "0x400140E")]
		Trace,
		[Token(Token = "0x400140F")]
		Debug,
		[Token(Token = "0x4001410")]
		Info,
		[Token(Token = "0x4001411")]
		Warn,
		[Token(Token = "0x4001412")]
		Error,
		[Token(Token = "0x4001413")]
		Fatal
	}
	[Token(Token = "0x20002DF")]
	internal enum Mask : byte
	{
		[Token(Token = "0x4001415")]
		Unmask,
		[Token(Token = "0x4001416")]
		Mask
	}
	[Token(Token = "0x20002E0")]
	public class MessageEventArgs : EventArgs
	{
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _data;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Opcode _opcode;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] _rawData;

		[Token(Token = "0x1700028D")]
		public string Data
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x9855D0", Offset = "0x9855D0", VA = "0x9855D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		public byte[] RawData
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x9855D8", Offset = "0x9855D8", VA = "0x9855D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		public Opcode Type
		{
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x9855E0", Offset = "0x9855E0", VA = "0x9855E0")]
			get
			{
				return default(Opcode);
			}
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x985370", Offset = "0x985370", VA = "0x985370")]
		internal MessageEventArgs(Opcode opcode, byte[] data)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x98552C", Offset = "0x98552C", VA = "0x98552C")]
		internal MessageEventArgs(Opcode opcode, PayloadData payload)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x985458", Offset = "0x985458", VA = "0x985458")]
		private static string convertToString(Opcode opcode, byte[] data)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E1")]
	public enum Opcode : byte
	{
		[Token(Token = "0x400141B")]
		Cont = 0,
		[Token(Token = "0x400141C")]
		Text = 1,
		[Token(Token = "0x400141D")]
		Binary = 2,
		[Token(Token = "0x400141E")]
		Close = 8,
		[Token(Token = "0x400141F")]
		Ping = 9,
		[Token(Token = "0x4001420")]
		Pong = 10
	}
	[Token(Token = "0x20002E2")]
	internal class PayloadData : IEnumerable<byte>, IEnumerable
	{
		[Token(Token = "0x20002E3")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__20 : IEnumerator<byte>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private byte <>2__current;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PayloadData <>4__this;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private byte[] <>7__wrap1;

			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>7__wrap2;

			[Token(Token = "0x17000295")]
			private byte System.Collections.Generic.IEnumerator<System.Byte>.Current
			{
				[Token(Token = "0x60011A1")]
				[Address(RVA = "0x985D64", Offset = "0x985D64", VA = "0x985D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(byte);
				}
			}

			[Token(Token = "0x17000296")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A3")]
				[Address(RVA = "0x985DAC", Offset = "0x985DAC", VA = "0x985DAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600119E")]
			[Address(RVA = "0x985A7C", Offset = "0x985A7C", VA = "0x985A7C")]
			[DebuggerHidden]
			public <GetEnumerator>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0x985C28", Offset = "0x985C28", VA = "0x985C28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x985C2C", Offset = "0x985C2C", VA = "0x985C2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x985D6C", Offset = "0x985D6C", VA = "0x985D6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _applicationData;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] _extensionData;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _masked;

		[Token(Token = "0x4001424")]
		public const ulong MaxLength = 9223372036854775807uL;

		[Token(Token = "0x17000290")]
		internal bool ContainsReservedCloseStatusCode
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x985880", Offset = "0x985880", VA = "0x985880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000291")]
		public byte[] ApplicationData
		{
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x985924", Offset = "0x985924", VA = "0x985924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		public byte[] ExtensionData
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x98592C", Offset = "0x98592C", VA = "0x98592C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		public bool IsMasked
		{
			[Token(Token = "0x6001196")]
			[Address(RVA = "0x985934", Offset = "0x985934", VA = "0x985934")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000294")]
		public ulong Length
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x98593C", Offset = "0x98593C", VA = "0x98593C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x9855E8", Offset = "0x9855E8", VA = "0x9855E8")]
		public PayloadData()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x98571C", Offset = "0x98571C", VA = "0x98571C")]
		public PayloadData(byte[] applicationData)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x985784", Offset = "0x985784", VA = "0x985784")]
		public PayloadData(string applicationData)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x985814", Offset = "0x985814", VA = "0x985814")]
		public PayloadData(byte[] applicationData, bool masked)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x985658", Offset = "0x985658", VA = "0x985658")]
		public PayloadData(byte[] extensionData, byte[] applicationData, bool masked)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x985968", Offset = "0x985968", VA = "0x985968")]
		private static void mask(byte[] src, byte[] key)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x985A08", Offset = "0x985A08", VA = "0x985A08", Slot = "4")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__20))]
		public IEnumerator<byte> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x985AA4", Offset = "0x985AA4", VA = "0x985AA4")]
		public void Mask(byte[] maskingKey)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x985B08", Offset = "0x985B08", VA = "0x985B08")]
		public byte[] ToByteArray()
		{
			return null;
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x985BBC", Offset = "0x985BBC", VA = "0x985BBC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x985C24", Offset = "0x985C24", VA = "0x985C24", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E4")]
	internal enum Rsv : byte
	{
		[Token(Token = "0x400142B")]
		Off,
		[Token(Token = "0x400142C")]
		On
	}
	[Token(Token = "0x20002E5")]
	public class WebSocket : IDisposable
	{
		[Token(Token = "0x20002E7")]
		[CompilerGenerated]
		private sealed class <get_Cookies>d__46 : IEnumerable<Cookie>, IEnumerable, IEnumerator<Cookie>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Cookie <>2__current;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WebSocket <>4__this;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>7__wrap1;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <>7__wrap2;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator <>7__wrap3;

			[Token(Token = "0x170002A6")]
			private Cookie System.Collections.Generic.IEnumerator<WebSocketSharp.Net.Cookie>.Current
			{
				[Token(Token = "0x6001224")]
				[Address(RVA = "0x98F3FC", Offset = "0x98F3FC", VA = "0x98F3FC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001226")]
				[Address(RVA = "0x98F444", Offset = "0x98F444", VA = "0x98F444", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600121F")]
			[Address(RVA = "0x98EDF0", Offset = "0x98EDF0", VA = "0x98EDF0")]
			[DebuggerHidden]
			public <get_Cookies>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001220")]
			[Address(RVA = "0x98EE24", Offset = "0x98EE24", VA = "0x98EE24", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001221")]
			[Address(RVA = "0x98EEFC", Offset = "0x98EEFC", VA = "0x98EEFC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001222")]
			[Address(RVA = "0x98F3DC", Offset = "0x98F3DC", VA = "0x98F3DC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001223")]
			[Address(RVA = "0x98F320", Offset = "0x98F320", VA = "0x98F320")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001225")]
			[Address(RVA = "0x98F404", Offset = "0x98F404", VA = "0x98F404", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001227")]
			[Address(RVA = "0x98F44C", Offset = "0x98F44C", VA = "0x98F44C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Cookie> System.Collections.Generic.IEnumerable<WebSocketSharp.Net.Cookie>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001228")]
			[Address(RVA = "0x98F4F8", Offset = "0x98F4F8", VA = "0x98F4F8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400142D")]
		private const string _guid = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";

		[Token(Token = "0x400142E")]
		private const string _version = "13";

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AuthenticationChallenge _authChallenge;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _base64Key;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RemoteCertificateValidationCallback _certValidationCallback;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _client;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action _closeContext;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CompressionMethod _compression;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WebSocketContext _context;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CookieCollection _cookies;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WebSocketSharp.Net.NetworkCredential _credentials;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _extensions;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AutoResetEvent _exitReceiving;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object _forConn;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private object _forEvent;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private object _forMessageEventQueue;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private object _forSend;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Func<WebSocketContext, string> _handshakeRequestChecker;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Logger _logger;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Queue<MessageEventArgs> _messageEventQueue;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private uint _nonceCount;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string _origin;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _preAuth;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string _protocol;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string[] _protocols;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WebSocketState _readyState;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AutoResetEvent _receivePong;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _secure;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WebSocketStream _stream;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private TcpClient _tcpClient;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Uri _uri;

		[Token(Token = "0x400144C")]
		internal const int FragmentLength = 1016;

		[Token(Token = "0x17000297")]
		internal CookieCollection CookieCollection
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x9864FC", Offset = "0x9864FC", VA = "0x9864FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		internal Func<WebSocketContext, string> CustomHandshakeRequestChecker
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x986504", Offset = "0x986504", VA = "0x986504")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x9865E8", Offset = "0x9865E8", VA = "0x9865E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		internal bool IsConnected
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x9865F0", Offset = "0x9865F0", VA = "0x9865F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029A")]
		public CompressionMethod Compression
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x986630", Offset = "0x986630", VA = "0x986630")]
			get
			{
				return default(CompressionMethod);
			}
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x986638", Offset = "0x986638", VA = "0x986638")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public IEnumerable<Cookie> Cookies
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x9869A0", Offset = "0x9869A0", VA = "0x9869A0")]
			[IteratorStateMachine(typeof(<get_Cookies>d__46))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		public WebSocketSharp.Net.NetworkCredential Credentials
		{
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x986A14", Offset = "0x986A14", VA = "0x986A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		public string Extensions
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x986A1C", Offset = "0x986A1C", VA = "0x986A1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		public bool IsAlive
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x986A70", Offset = "0x986A70", VA = "0x986A70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029F")]
		public bool IsSecure
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x986B0C", Offset = "0x986B0C", VA = "0x986B0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A0")]
		public Logger Log
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x986B14", Offset = "0x986B14", VA = "0x986B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x986B2C", Offset = "0x986B2C", VA = "0x986B2C")]
			internal set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public string Origin
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x986B58", Offset = "0x986B58", VA = "0x986B58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x986B60", Offset = "0x986B60", VA = "0x986B60")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public string Protocol
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x986D7C", Offset = "0x986D7C", VA = "0x986D7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x986DD0", Offset = "0x986DD0", VA = "0x986DD0")]
			internal set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public WebSocketState ReadyState
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x986DD8", Offset = "0x986DD8", VA = "0x986DD8")]
			get
			{
				return default(WebSocketState);
			}
		}

		[Token(Token = "0x170002A4")]
		public RemoteCertificateValidationCallback ServerCertificateValidationCallback
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x986DF0", Offset = "0x986DF0", VA = "0x986DF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x986DF8", Offset = "0x986DF8", VA = "0x986DF8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public Uri Url
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x986F44", Offset = "0x986F44", VA = "0x986F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000004")]
		public event EventHandler<CloseEventArgs> OnClose
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x986F7C", Offset = "0x986F7C", VA = "0x986F7C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x98702C", Offset = "0x98702C", VA = "0x98702C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event EventHandler<ErrorEventArgs> OnError
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x9870DC", Offset = "0x9870DC", VA = "0x9870DC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x987190", Offset = "0x987190", VA = "0x987190")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event EventHandler<MessageEventArgs> OnMessage
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x987244", Offset = "0x987244", VA = "0x987244")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x9872F8", Offset = "0x9872F8", VA = "0x9872F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event EventHandler OnOpen
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x9873AC", Offset = "0x9873AC", VA = "0x9873AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x98744C", Offset = "0x98744C", VA = "0x98744C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x985E08", Offset = "0x985E08", VA = "0x985E08")]
		internal WebSocket(HttpListenerWebSocketContext context, string protocol, Logger logger)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x986108", Offset = "0x986108", VA = "0x986108")]
		internal WebSocket(TcpListenerWebSocketContext context, string protocol, Logger logger)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x98621C", Offset = "0x98621C", VA = "0x98621C")]
		public WebSocket(string url, params string[] protocols)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x9874EC", Offset = "0x9874EC", VA = "0x9874EC")]
		private bool acceptCloseFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x987954", Offset = "0x987954", VA = "0x987954")]
		private bool acceptDataFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x987B28", Offset = "0x987B28", VA = "0x987B28")]
		private void acceptException(Exception exception, string message)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x987D84", Offset = "0x987D84", VA = "0x987D84")]
		private bool acceptFragmentedFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x987DD0", Offset = "0x987DD0", VA = "0x987DD0")]
		private bool acceptFragments(WebSocketFrame first)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x988190", Offset = "0x988190", VA = "0x988190")]
		private bool acceptFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x9884D0", Offset = "0x9884D0", VA = "0x9884D0")]
		private bool acceptHandshake()
		{
			return default(bool);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x98841C", Offset = "0x98841C", VA = "0x98841C")]
		private bool acceptPingFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x9883AC", Offset = "0x9883AC", VA = "0x9883AC")]
		private bool acceptPongFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x9888A8", Offset = "0x9888A8", VA = "0x9888A8")]
		private void acceptSecWebSocketExtensionsHeader(string value)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x9882C4", Offset = "0x9882C4", VA = "0x9882C4")]
		private bool acceptUnsupportedFrame(WebSocketFrame frame, CloseStatusCode code, string reason)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x986774", Offset = "0x986774", VA = "0x986774")]
		private string checkIfAvailable(string operation, bool availableAsServer, bool availableAsConnected)
		{
			return null;
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x9890C4", Offset = "0x9890C4", VA = "0x9890C4")]
		private string checkIfCanConnect()
		{
			return null;
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x9886E8", Offset = "0x9886E8", VA = "0x9886E8")]
		private string checkIfValidHandshakeRequest(WebSocketContext context)
		{
			return null;
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x9891F0", Offset = "0x9891F0", VA = "0x9891F0")]
		private string checkIfValidHandshakeResponse(HandshakeResponse response)
		{
			return null;
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x987CC0", Offset = "0x987CC0", VA = "0x987CC0")]
		private void close(CloseStatusCode code, string reason, bool wait)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x987538", Offset = "0x987538", VA = "0x987538")]
		private void close(PayloadData payload, bool send, bool wait)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x9898B0", Offset = "0x9898B0", VA = "0x9898B0")]
		private void closeAsync(PayloadData payload, bool send, bool wait)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x9899F0", Offset = "0x9899F0", VA = "0x9899F0")]
		private void closeClientResources()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x9896F0", Offset = "0x9896F0", VA = "0x9896F0")]
		private bool closeHandshake(byte[] frame, int timeout, Action release)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x989A54", Offset = "0x989A54", VA = "0x989A54")]
		private void closeServerResources()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x988054", Offset = "0x988054", VA = "0x988054")]
		private bool concatenateFragmentsInto(Stream dest)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x989AC0", Offset = "0x989AC0", VA = "0x989AC0")]
		private bool connect()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x989DCC", Offset = "0x989DCC", VA = "0x989DCC")]
		private string createExtensionsRequest()
		{
			return null;
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x989E78", Offset = "0x989E78", VA = "0x989E78")]
		private HandshakeRequest createHandshakeRequest()
		{
			return null;
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x988DAC", Offset = "0x988DAC", VA = "0x988DAC")]
		private HandshakeResponse createHandshakeResponse()
		{
			return null;
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x98A2BC", Offset = "0x98A2BC", VA = "0x98A2BC")]
		private HandshakeResponse createHandshakeResponse(HttpStatusCode code)
		{
			return null;
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x98A340", Offset = "0x98A340", VA = "0x98A340")]
		private MessageEventArgs dequeueFromMessageEventQueue()
		{
			return null;
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x989CD4", Offset = "0x989CD4", VA = "0x989CD4")]
		private bool doHandshake()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x987A2C", Offset = "0x987A2C", VA = "0x987A2C")]
		private void enqueueToMessageEventQueue(MessageEventArgs e)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x98683C", Offset = "0x98683C", VA = "0x98683C")]
		private void error(string message)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x985F28", Offset = "0x985F28", VA = "0x985F28")]
		private void init()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x98A6F4", Offset = "0x98A6F4", VA = "0x98A6F4")]
		private void open()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x98AB08", Offset = "0x98AB08", VA = "0x98AB08")]
		private HandshakeResponse receiveHandshakeResponse()
		{
			return null;
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x98ABA4", Offset = "0x98ABA4", VA = "0x98ABA4")]
		private bool send(byte[] frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x98ACEC", Offset = "0x98ACEC", VA = "0x98ACEC")]
		private void send(HandshakeRequest request)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x988EC0", Offset = "0x988EC0", VA = "0x988EC0")]
		private bool send(HandshakeResponse response)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x988F60", Offset = "0x988F60", VA = "0x988F60")]
		private bool send(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x98AD78", Offset = "0x98AD78", VA = "0x98AD78")]
		private bool send(Opcode opcode, byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x98AFCC", Offset = "0x98AFCC", VA = "0x98AFCC")]
		private bool send(Opcode opcode, Stream stream)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x98B56C", Offset = "0x98B56C", VA = "0x98B56C")]
		private void sendAsync(Opcode opcode, byte[] data, Action<bool> completed)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x98B6C8", Offset = "0x98B6C8", VA = "0x98B6C8")]
		private void sendAsync(Opcode opcode, Stream stream, Action<bool> completed)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x98B2B4", Offset = "0x98B2B4", VA = "0x98B2B4")]
		private bool sendFragmented(Opcode opcode, Stream stream, Mask mask, bool compressed)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x98A538", Offset = "0x98A538", VA = "0x98A538")]
		private HandshakeResponse sendHandshakeRequest()
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x98B824", Offset = "0x98B824", VA = "0x98B824")]
		private HandshakeResponse sendHandshakeRequest(HandshakeRequest request)
		{
			return null;
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x98A464", Offset = "0x98A464", VA = "0x98A464")]
		private void setClientStream()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x98A96C", Offset = "0x98A96C", VA = "0x98A96C")]
		private void startReceiving()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x9893FC", Offset = "0x9893FC", VA = "0x9893FC")]
		private bool validateSecWebSocketAcceptHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x98955C", Offset = "0x98955C", VA = "0x98955C")]
		private bool validateSecWebSocketExtensionsHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x989164", Offset = "0x989164", VA = "0x989164")]
		private bool validateSecWebSocketKeyHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x98942C", Offset = "0x98942C", VA = "0x98942C")]
		private bool validateSecWebSocketProtocolHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x989190", Offset = "0x989190", VA = "0x989190")]
		private bool validateSecWebSocketVersionClientHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x989690", Offset = "0x989690", VA = "0x989690")]
		private bool validateSecWebSocketVersionServerHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x98B83C", Offset = "0x98B83C", VA = "0x98B83C")]
		internal void Close(HandshakeResponse response)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x987CA4", Offset = "0x987CA4", VA = "0x987CA4")]
		internal void Close(HttpStatusCode code)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x98B884", Offset = "0x98B884", VA = "0x98B884")]
		internal void Close(CloseEventArgs e, byte[] frame, int timeout)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x98BB4C", Offset = "0x98BB4C", VA = "0x98BB4C")]
		internal void ConnectAsServer()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x98643C", Offset = "0x98643C", VA = "0x98643C")]
		internal static string CreateBase64Key()
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x98A184", Offset = "0x98A184", VA = "0x98A184")]
		internal static string CreateResponseKey(string base64Key)
		{
			return null;
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x98BC18", Offset = "0x98BC18", VA = "0x98BC18")]
		internal bool Ping(byte[] frame, int timeout)
		{
			return default(bool);
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x98BD4C", Offset = "0x98BD4C", VA = "0x98BD4C")]
		internal void Send(Opcode opcode, byte[] data, Dictionary<CompressionMethod, byte[]> cache)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x98C0C4", Offset = "0x98C0C4", VA = "0x98C0C4")]
		internal void Send(Opcode opcode, Stream stream, Dictionary<CompressionMethod, Stream> cache)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x98C36C", Offset = "0x98C36C", VA = "0x98C36C")]
		public void Close()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x98C428", Offset = "0x98C428", VA = "0x98C428")]
		public void Close(ushort code)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x98C610", Offset = "0x98C610", VA = "0x98C610")]
		public void Close(CloseStatusCode code)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x98C430", Offset = "0x98C430", VA = "0x98C430")]
		public void Close(ushort code, string reason)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x98C618", Offset = "0x98C618", VA = "0x98C618")]
		public void Close(CloseStatusCode code, string reason)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x98C7B8", Offset = "0x98C7B8", VA = "0x98C7B8")]
		public void CloseAsync()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x98C874", Offset = "0x98C874", VA = "0x98C874")]
		public void CloseAsync(ushort code)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x98CA5C", Offset = "0x98CA5C", VA = "0x98CA5C")]
		public void CloseAsync(CloseStatusCode code)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x98C87C", Offset = "0x98C87C", VA = "0x98C87C")]
		public void CloseAsync(ushort code, string reason)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x98CA64", Offset = "0x98CA64", VA = "0x98CA64")]
		public void CloseAsync(CloseStatusCode code, string reason)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x98CC04", Offset = "0x98CC04", VA = "0x98CC04")]
		public void Connect()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x98CC74", Offset = "0x98CC74", VA = "0x98CC74")]
		public void ConnectAsync()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x986A74", Offset = "0x986A74", VA = "0x986A74")]
		public bool Ping()
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x98CDE4", Offset = "0x98CDE4", VA = "0x98CDE4")]
		public bool Ping(string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x98CF2C", Offset = "0x98CF2C", VA = "0x98CF2C")]
		public void Send(byte[] data)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x98D088", Offset = "0x98D088", VA = "0x98D088")]
		public void Send(FileInfo file)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x98D13C", Offset = "0x98D13C", VA = "0x98D13C")]
		public void Send(string data)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x98D270", Offset = "0x98D270", VA = "0x98D270")]
		public void SendAsync(byte[] data, Action<bool> completed)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x98D3E8", Offset = "0x98D3E8", VA = "0x98D3E8")]
		public void SendAsync(FileInfo file, Action<bool> completed)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x98D4B0", Offset = "0x98D4B0", VA = "0x98D4B0")]
		public void SendAsync(string data, Action<bool> completed)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x98D600", Offset = "0x98D600", VA = "0x98D600")]
		public void SendAsync(Stream stream, int length, Action<bool> completed)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x98D7D8", Offset = "0x98D7D8", VA = "0x98D7D8")]
		public void SetCookie(Cookie cookie)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x98DA10", Offset = "0x98DA10", VA = "0x98DA10")]
		public void SetCredentials(string username, string password, bool preAuth)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x98DD10", Offset = "0x98DD10", VA = "0x98DD10", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class WebSocketException : Exception
	{
		[Token(Token = "0x170002A8")]
		public CloseStatusCode Code
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x98FFF0", Offset = "0x98FFF0", VA = "0x98FFF0")]
			[CompilerGenerated]
			get
			{
				return default(CloseStatusCode);
			}
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x98FFF8", Offset = "0x98FFF8", VA = "0x98FFF8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x98FF1C", Offset = "0x98FF1C", VA = "0x98FF1C")]
		internal WebSocketException()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x98FFBC", Offset = "0x98FFBC", VA = "0x98FFBC")]
		internal WebSocketException(string message)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x98FFCC", Offset = "0x98FFCC", VA = "0x98FFCC")]
		internal WebSocketException(CloseStatusCode code)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x98FFD8", Offset = "0x98FFD8", VA = "0x98FFD8")]
		internal WebSocketException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x98FFE8", Offset = "0x98FFE8", VA = "0x98FFE8")]
		internal WebSocketException(CloseStatusCode code, string message)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x98FF2C", Offset = "0x98FF2C", VA = "0x98FF2C")]
		internal WebSocketException(CloseStatusCode code, string message, Exception innerException)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	internal class WebSocketFrame : IEnumerable<byte>, IEnumerable
	{
		[Token(Token = "0x20002F3")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__78 : IEnumerator<byte>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private byte <>2__current;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WebSocketFrame <>4__this;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private byte[] <>7__wrap1;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>7__wrap2;

			[Token(Token = "0x170002C1")]
			private byte System.Collections.Generic.IEnumerator<System.Byte>.Current
			{
				[Token(Token = "0x6001281")]
				[Address(RVA = "0x99272C", Offset = "0x99272C", VA = "0x99272C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(byte);
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001283")]
				[Address(RVA = "0x992774", Offset = "0x992774", VA = "0x992774", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600127E")]
			[Address(RVA = "0x991CD8", Offset = "0x991CD8", VA = "0x991CD8")]
			[DebuggerHidden]
			public <GetEnumerator>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x600127F")]
			[Address(RVA = "0x99266C", Offset = "0x99266C", VA = "0x99266C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001280")]
			[Address(RVA = "0x992670", Offset = "0x992670", VA = "0x992670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001282")]
			[Address(RVA = "0x992734", Offset = "0x992734", VA = "0x992734", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _extPayloadLength;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Fin _fin;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private Mask _mask;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] _maskingKey;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Opcode _opcode;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PayloadData _payloadData;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte _payloadLength;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private Rsv _rsv1;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private Rsv _rsv2;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		private Rsv _rsv3;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly byte[] EmptyUnmaskPingData;

		[Token(Token = "0x170002A9")]
		public byte[] ExtendedPayloadLength
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0x990688", Offset = "0x990688", VA = "0x990688")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		public Fin Fin
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x990690", Offset = "0x990690", VA = "0x990690")]
			get
			{
				return default(Fin);
			}
		}

		[Token(Token = "0x170002AB")]
		public bool IsBinary
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x990698", Offset = "0x990698", VA = "0x990698")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AC")]
		public bool IsClose
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x9906A8", Offset = "0x9906A8", VA = "0x9906A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AD")]
		public bool IsCompressed
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x9906B8", Offset = "0x9906B8", VA = "0x9906B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AE")]
		public bool IsContinuation
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x9906C8", Offset = "0x9906C8", VA = "0x9906C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AF")]
		public bool IsControl
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x9906D8", Offset = "0x9906D8", VA = "0x9906D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B0")]
		public bool IsData
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x98FBC0", Offset = "0x98FBC0", VA = "0x98FBC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B1")]
		public bool IsFinal
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x9906FC", Offset = "0x9906FC", VA = "0x9906FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B2")]
		public bool IsFragmented
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x99070C", Offset = "0x99070C", VA = "0x99070C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B3")]
		public bool IsMasked
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x99072C", Offset = "0x99072C", VA = "0x99072C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B4")]
		public bool IsPerMessageCompressed
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x99073C", Offset = "0x99073C", VA = "0x99073C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B5")]
		public bool IsPing
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x990764", Offset = "0x990764", VA = "0x990764")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B6")]
		public bool IsPong
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x990774", Offset = "0x990774", VA = "0x990774")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B7")]
		public bool IsText
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x990784", Offset = "0x990784", VA = "0x990784")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B8")]
		public ulong Length
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x990794", Offset = "0x990794", VA = "0x990794")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002B9")]
		public Mask Mask
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x9907E0", Offset = "0x9907E0", VA = "0x9907E0")]
			get
			{
				return default(Mask);
			}
		}

		[Token(Token = "0x170002BA")]
		public byte[] MaskingKey
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x9907E8", Offset = "0x9907E8", VA = "0x9907E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public Opcode Opcode
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x9907F0", Offset = "0x9907F0", VA = "0x9907F0")]
			get
			{
				return default(Opcode);
			}
		}

		[Token(Token = "0x170002BC")]
		public PayloadData PayloadData
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x9907F8", Offset = "0x9907F8", VA = "0x9907F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		public byte PayloadLength
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x990800", Offset = "0x990800", VA = "0x990800")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170002BE")]
		public Rsv Rsv1
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x990808", Offset = "0x990808", VA = "0x990808")]
			get
			{
				return default(Rsv);
			}
		}

		[Token(Token = "0x170002BF")]
		public Rsv Rsv2
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x990810", Offset = "0x990810", VA = "0x990810")]
			get
			{
				return default(Rsv);
			}
		}

		[Token(Token = "0x170002C0")]
		public Rsv Rsv3
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x990818", Offset = "0x990818", VA = "0x990818")]
			get
			{
				return default(Rsv);
			}
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x990000", Offset = "0x990000", VA = "0x990000")]
		static WebSocketFrame()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x9903F4", Offset = "0x9903F4", VA = "0x9903F4")]
		private WebSocketFrame()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x9903FC", Offset = "0x9903FC", VA = "0x9903FC")]
		public WebSocketFrame(Opcode opcode, PayloadData payload)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x9905BC", Offset = "0x9905BC", VA = "0x9905BC")]
		public WebSocketFrame(Opcode opcode, Mask mask, PayloadData payload)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x9905D4", Offset = "0x9905D4", VA = "0x9905D4")]
		public WebSocketFrame(Fin fin, Opcode opcode, Mask mask, PayloadData payload)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x990414", Offset = "0x990414", VA = "0x990414")]
		public WebSocketFrame(Fin fin, Opcode opcode, Mask mask, PayloadData payload, bool compressed)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x9905F0", Offset = "0x9905F0", VA = "0x9905F0")]
		private static byte[] createMaskingKey()
		{
			return null;
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x990820", Offset = "0x990820", VA = "0x990820")]
		private static string dump(WebSocketFrame frame)
		{
			return null;
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x990E48", Offset = "0x990E48", VA = "0x990E48")]
		private static bool isControl(Opcode opcode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x9905DC", Offset = "0x9905DC", VA = "0x9905DC")]
		private static bool isData(Opcode opcode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x990E70", Offset = "0x990E70", VA = "0x990E70")]
		private static WebSocketFrame parse(byte[] header, Stream stream, bool unmask)
		{
			return null;
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x991324", Offset = "0x991324", VA = "0x991324")]
		private static string print(WebSocketFrame frame)
		{
			return null;
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x99188C", Offset = "0x99188C", VA = "0x99188C")]
		internal static WebSocketFrame CreateCloseFrame(Mask mask, PayloadData payload)
		{
			return null;
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x991908", Offset = "0x991908", VA = "0x991908")]
		internal static WebSocketFrame CreatePongFrame(Mask mask, PayloadData payload)
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x991984", Offset = "0x991984", VA = "0x991984")]
		public static WebSocketFrame CreateCloseFrame(Mask mask, byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x991A30", Offset = "0x991A30", VA = "0x991A30")]
		public static WebSocketFrame CreateCloseFrame(Mask mask, CloseStatusCode code, string reason)
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x991AF8", Offset = "0x991AF8", VA = "0x991AF8")]
		public static WebSocketFrame CreateFrame(Fin fin, Opcode opcode, Mask mask, byte[] data, bool compressed)
		{
			return null;
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x990060", Offset = "0x990060", VA = "0x990060")]
		public static WebSocketFrame CreatePingFrame(Mask mask)
		{
			return null;
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x991BB8", Offset = "0x991BB8", VA = "0x991BB8")]
		public static WebSocketFrame CreatePingFrame(Mask mask, byte[] data)
		{
			return null;
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x991C64", Offset = "0x991C64", VA = "0x991C64", Slot = "4")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__78))]
		public IEnumerator<byte> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x991D00", Offset = "0x991D00", VA = "0x991D00")]
		public static WebSocketFrame Parse(byte[] src)
		{
			return null;
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x991F1C", Offset = "0x991F1C", VA = "0x991F1C")]
		public static WebSocketFrame Parse(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x991D58", Offset = "0x991D58", VA = "0x991D58")]
		public static WebSocketFrame Parse(byte[] src, bool unmask)
		{
			return null;
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x991F74", Offset = "0x991F74", VA = "0x991F74")]
		public static WebSocketFrame Parse(Stream stream, bool unmask)
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x992044", Offset = "0x992044", VA = "0x992044")]
		public static void ParseAsync(Stream stream, Action<WebSocketFrame> completed)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x9921B4", Offset = "0x9921B4", VA = "0x9921B4")]
		public static void ParseAsync(Stream stream, Action<WebSocketFrame> completed, Action<Exception> error)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x9920B0", Offset = "0x9920B0", VA = "0x9920B0")]
		public static void ParseAsync(Stream stream, bool unmask, Action<WebSocketFrame> completed, Action<Exception> error)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x99222C", Offset = "0x99222C", VA = "0x99222C")]
		public void Print(bool dumped)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x9922CC", Offset = "0x9922CC", VA = "0x9922CC")]
		public string PrintToString(bool dumped)
		{
			return null;
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x9900FC", Offset = "0x9900FC", VA = "0x9900FC")]
		public byte[] ToByteArray()
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x992340", Offset = "0x992340", VA = "0x992340", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x9923A8", Offset = "0x9923A8", VA = "0x9923A8", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F5")]
	public enum WebSocketState : ushort
	{
		[Token(Token = "0x4001485")]
		Connecting,
		[Token(Token = "0x4001486")]
		Open,
		[Token(Token = "0x4001487")]
		Closing,
		[Token(Token = "0x4001488")]
		Closed
	}
	[Token(Token = "0x20002F6")]
	internal class WebSocketStream : IDisposable
	{
		[Token(Token = "0x4001489")]
		private const int _handshakeHeadersLimitLen = 8192;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object _forWrite;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stream _innerStream;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _secure;

		[Token(Token = "0x170002C3")]
		public bool DataAvailable
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x992978", Offset = "0x992978", VA = "0x992978")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C4")]
		public bool IsSecure
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x992A80", Offset = "0x992A80", VA = "0x992A80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x9928CC", Offset = "0x9928CC", VA = "0x9928CC")]
		internal WebSocketStream(Stream innerStream, bool secure)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x992968", Offset = "0x992968", VA = "0x992968")]
		public WebSocketStream(NetworkStream innerStream)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x992970", Offset = "0x992970", VA = "0x992970")]
		public WebSocketStream(WebSocketSharp.Net.Security.SslStream innerStream)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x992A88", Offset = "0x992A88", VA = "0x992A88")]
		private static byte[] readHandshakeEntityBody(Stream stream, string length)
		{
			return null;
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x992BA8", Offset = "0x992BA8", VA = "0x992BA8")]
		private static string[] readHandshakeHeaders(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		internal T ReadHandshake<T>(Func<string[], T> parser, int millisecondsTimeout) where T : HandshakeBase
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x992F34", Offset = "0x992F34", VA = "0x992F34")]
		internal bool Write(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x9930B4", Offset = "0x9930B4", VA = "0x9930B4")]
		public void Close()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x9930D8", Offset = "0x9930D8", VA = "0x9930D8")]
		public static WebSocketStream CreateClientStream(TcpClient client, bool secure, string host, RemoteCertificateValidationCallback validationCallback)
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x993288", Offset = "0x993288", VA = "0x993288")]
		public static WebSocketStream CreateServerStream(TcpClient client, bool secure, X509Certificate cert)
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x99337C", Offset = "0x99337C", VA = "0x99337C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x993398", Offset = "0x993398", VA = "0x993398")]
		public WebSocketFrame ReadFrame()
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x98F8AC", Offset = "0x98F8AC", VA = "0x98F8AC")]
		public void ReadFrameAsync(Action<WebSocketFrame> completed, Action<Exception> error)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x9933F4", Offset = "0x9933F4", VA = "0x9933F4")]
		public HandshakeRequest ReadHandshakeRequest()
		{
			return null;
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x993494", Offset = "0x993494", VA = "0x993494")]
		public HandshakeResponse ReadHandshakeResponse()
		{
			return null;
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x993534", Offset = "0x993534", VA = "0x993534")]
		public bool WriteFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x99355C", Offset = "0x99355C", VA = "0x99355C")]
		public bool WriteHandshake(HandshakeBase handshake)
		{
			return default(bool);
		}
	}
}
namespace WebSocketSharp.Net
{
	[Token(Token = "0x20002FA")]
	internal abstract class AuthenticationBase
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AuthenticationSchemes _scheme;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal NameValueCollection Parameters;

		[Token(Token = "0x170002C5")]
		public string Algorithm
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x9936F0", Offset = "0x9936F0", VA = "0x9936F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public string Nonce
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x993744", Offset = "0x993744", VA = "0x993744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		public string Opaque
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x993798", Offset = "0x993798", VA = "0x993798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		public string Qop
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x9937EC", Offset = "0x9937EC", VA = "0x9937EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		public string Realm
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x993840", Offset = "0x993840", VA = "0x993840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		public AuthenticationSchemes Scheme
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x993894", Offset = "0x993894", VA = "0x993894")]
			get
			{
				return default(AuthenticationSchemes);
			}
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x9936B8", Offset = "0x9936B8", VA = "0x9936B8")]
		protected AuthenticationBase(AuthenticationSchemes scheme, NameValueCollection parameters)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x99389C", Offset = "0x99389C", VA = "0x99389C")]
		internal static string CreateNonceValue()
		{
			return null;
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x9939F8", Offset = "0x9939F8", VA = "0x9939F8")]
		internal static NameValueCollection ParseParameters(string value)
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		internal abstract string ToBasicString();

		[Token(Token = "0x60012AA")]
		internal abstract string ToDigestString();

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x993E84", Offset = "0x993E84", VA = "0x993E84", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FB")]
	internal class AuthenticationChallenge : AuthenticationBase
	{
		[Token(Token = "0x170002CB")]
		public string Domain
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x9940C0", Offset = "0x9940C0", VA = "0x9940C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		public string Stale
		{
			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x994114", Offset = "0x994114", VA = "0x994114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x993F08", Offset = "0x993F08", VA = "0x993F08")]
		private AuthenticationChallenge(AuthenticationSchemes scheme, NameValueCollection parameters)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x993F40", Offset = "0x993F40", VA = "0x993F40")]
		internal AuthenticationChallenge(AuthenticationSchemes scheme, string realm)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x994168", Offset = "0x994168", VA = "0x994168")]
		internal static AuthenticationChallenge CreateBasicChallenge(string realm)
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x9941CC", Offset = "0x9941CC", VA = "0x9941CC")]
		internal static AuthenticationChallenge CreateDigestChallenge(string realm)
		{
			return null;
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x994230", Offset = "0x994230", VA = "0x994230")]
		internal static AuthenticationChallenge Parse(string value)
		{
			return null;
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x9943D0", Offset = "0x9943D0", VA = "0x9943D0", Slot = "4")]
		internal override string ToBasicString()
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x99444C", Offset = "0x99444C", VA = "0x99444C", Slot = "5")]
		internal override string ToDigestString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FC")]
	internal class AuthenticationResponse : AuthenticationBase
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint _nonceCount;

		[Token(Token = "0x170002CD")]
		internal uint NonceCount
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x994BE0", Offset = "0x994BE0", VA = "0x994BE0")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170002CE")]
		public string Cnonce
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x994BF0", Offset = "0x994BF0", VA = "0x994BF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CF")]
		public string Nc
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x994C44", Offset = "0x994C44", VA = "0x994C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public string Password
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x994C98", Offset = "0x994C98", VA = "0x994C98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public string Response
		{
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x994CEC", Offset = "0x994CEC", VA = "0x994CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public string Uri
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x994D40", Offset = "0x994D40", VA = "0x994D40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public string UserName
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x994D94", Offset = "0x994D94", VA = "0x994D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x9946FC", Offset = "0x9946FC", VA = "0x9946FC")]
		private AuthenticationResponse(AuthenticationSchemes scheme, NameValueCollection parameters)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x994734", Offset = "0x994734", VA = "0x994734")]
		internal AuthenticationResponse(NetworkCredential credentials)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x9948F0", Offset = "0x9948F0", VA = "0x9948F0")]
		internal AuthenticationResponse(AuthenticationChallenge challenge, NetworkCredential credentials, uint nonceCount)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x9947B0", Offset = "0x9947B0", VA = "0x9947B0")]
		internal AuthenticationResponse(AuthenticationSchemes scheme, NameValueCollection parameters, NetworkCredential credentials, uint nonceCount)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x994DE8", Offset = "0x994DE8", VA = "0x994DE8")]
		private static string createA1(string username, string password, string realm)
		{
			return null;
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x994E4C", Offset = "0x994E4C", VA = "0x994E4C")]
		private static string createA1(string username, string password, string realm, string nonce, string cnonce)
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x995014", Offset = "0x995014", VA = "0x995014")]
		private static string createA2(string method, string uri)
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x995070", Offset = "0x995070", VA = "0x995070")]
		private static string createA2(string method, string uri, string entity)
		{
			return null;
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x994ED8", Offset = "0x994ED8", VA = "0x994ED8")]
		private static string hash(string value)
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x994918", Offset = "0x994918", VA = "0x994918")]
		private void initAsDigest()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x9950E0", Offset = "0x9950E0", VA = "0x9950E0")]
		internal static string CreateRequestDigest(NameValueCollection parameters)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x99557C", Offset = "0x99557C", VA = "0x99557C")]
		internal static AuthenticationResponse Parse(string value)
		{
			return null;
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x9957E8", Offset = "0x9957E8", VA = "0x9957E8")]
		internal static NameValueCollection ParseBasicCredentials(string value)
		{
			return null;
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x9959A4", Offset = "0x9959A4", VA = "0x9959A4", Slot = "4")]
		internal override string ToBasicString()
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x995AD8", Offset = "0x995AD8", VA = "0x995AD8", Slot = "5")]
		internal override string ToDigestString()
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x995EEC", Offset = "0x995EEC", VA = "0x995EEC")]
		public IIdentity ToIdentity()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FE")]
	[Flags]
	public enum AuthenticationSchemes
	{
		[Token(Token = "0x4001499")]
		None = 0,
		[Token(Token = "0x400149A")]
		Digest = 1,
		[Token(Token = "0x400149B")]
		Basic = 8,
		[Token(Token = "0x400149C")]
		Anonymous = 0x8000
	}
	[Token(Token = "0x20002FF")]
	internal class Chunk
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _data;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _offset;

		[Token(Token = "0x170002D4")]
		public int ReadLeft
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x996210", Offset = "0x996210", VA = "0x996210")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x9961E0", Offset = "0x9961E0", VA = "0x9961E0")]
		public Chunk(byte[] data)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x996234", Offset = "0x996234", VA = "0x996234")]
		public int Read(byte[] buffer, int offset, int size)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000300")]
	internal class ChunkedRequestStream : RequestStream
	{
		[Token(Token = "0x400149F")]
		private const int _bufferSize = 8192;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HttpListenerContext _context;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ChunkStream _decoder;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _disposed;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _noMoreData;

		[Token(Token = "0x170002D5")]
		public ChunkStream Decoder
		{
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x9964A4", Offset = "0x9964A4", VA = "0x9964A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x9964AC", Offset = "0x9964AC", VA = "0x9964AC")]
			set
			{
			}
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x9962A0", Offset = "0x9962A0", VA = "0x9962A0")]
		public ChunkedRequestStream(HttpListenerContext context, Stream stream, byte[] buffer, int offset, int length)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x9964B4", Offset = "0x9964B4", VA = "0x9964B4")]
		private void onRead(IAsyncResult asyncResult)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x996B44", Offset = "0x996B44", VA = "0x996B44", Slot = "17")]
		public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x996E7C", Offset = "0x996E7C", VA = "0x996E7C", Slot = "14")]
		public override void Close()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x996E98", Offset = "0x996E98", VA = "0x996E98", Slot = "18")]
		public override int EndRead(IAsyncResult asyncResult)
		{
			return default(int);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x997090", Offset = "0x997090", VA = "0x997090", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000301")]
	internal class ChunkStream
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _chunkRead;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _chunkSize;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Chunk> _chunks;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _gotit;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WebHeaderCollection _headers;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder _saved;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _sawCR;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private InputChunkState _state;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _trailerState;

		[Token(Token = "0x170002D6")]
		internal WebHeaderCollection Headers
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x997118", Offset = "0x997118", VA = "0x997118")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public int ChunkLeft
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x9968C0", Offset = "0x9968C0", VA = "0x9968C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D8")]
		public bool WantMore
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x996898", Offset = "0x996898", VA = "0x996898")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x9970CC", Offset = "0x9970CC", VA = "0x9970CC")]
		public ChunkStream(byte[] buffer, int offset, int size, WebHeaderCollection headers)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x9963B8", Offset = "0x9963B8", VA = "0x9963B8")]
		public ChunkStream(WebHeaderCollection headers)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x997120", Offset = "0x997120", VA = "0x997120")]
		private InputChunkState readCRLF(byte[] buffer, ref int offset, int size)
		{
			return default(InputChunkState);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x997278", Offset = "0x997278", VA = "0x997278")]
		private int readFromChunks(byte[] buffer, int offset, int size)
		{
			return default(int);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x9973A0", Offset = "0x9973A0", VA = "0x9973A0")]
		private InputChunkState readTrailer(byte[] buffer, ref int offset, int size)
		{
			return default(InputChunkState);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x9976B8", Offset = "0x9976B8", VA = "0x9976B8")]
		private static string removeChunkExtension(string input)
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x9976FC", Offset = "0x9976FC", VA = "0x9976FC")]
		private InputChunkState setChunkSize(byte[] buffer, ref int offset, int size)
		{
			return default(InputChunkState);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x997220", Offset = "0x997220", VA = "0x997220")]
		private static void throwProtocolViolation(string message)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x997A10", Offset = "0x997A10", VA = "0x997A10")]
		private void write(byte[] buffer, ref int offset, int size)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x997B4C", Offset = "0x997B4C", VA = "0x997B4C")]
		private InputChunkState writeBody(byte[] buffer, ref int offset, int size)
		{
			return default(InputChunkState);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x996894", Offset = "0x996894", VA = "0x996894")]
		public int Read(byte[] buffer, int offset, int size)
		{
			return default(int);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x997CE0", Offset = "0x997CE0", VA = "0x997CE0")]
		public void ResetBuffer()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x99687C", Offset = "0x99687C", VA = "0x99687C")]
		public void Write(byte[] buffer, int offset, int size)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x997D58", Offset = "0x997D58", VA = "0x997D58")]
		public void WriteAndReadBack(byte[] buffer, int offset, int size, ref int read)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000302")]
	public sealed class Cookie
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static char[] _reservedCharsForName;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static char[] _reservedCharsForValue;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _comment;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Uri _commentUri;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _discard;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _domain;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime _expires;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _httpOnly;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _name;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _path;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _port;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] _ports;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _secure;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DateTime _timestamp;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _value;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _version;

		[Token(Token = "0x170002D9")]
		internal bool ExactDomain
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x998284", Offset = "0x998284", VA = "0x998284")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x99828C", Offset = "0x99828C", VA = "0x99828C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		internal int MaxAge
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x998298", Offset = "0x998298", VA = "0x998298")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002DB")]
		internal int[] Ports
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0x9983E4", Offset = "0x9983E4", VA = "0x9983E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public string Comment
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x9983EC", Offset = "0x9983EC", VA = "0x9983EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x9983F4", Offset = "0x9983F4", VA = "0x9983F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public Uri CommentUri
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x998464", Offset = "0x998464", VA = "0x998464")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x99846C", Offset = "0x99846C", VA = "0x99846C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public bool Discard
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x998474", Offset = "0x998474", VA = "0x998474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x99847C", Offset = "0x99847C", VA = "0x99847C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public string Domain
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x998488", Offset = "0x998488", VA = "0x998488")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x9981D8", Offset = "0x9981D8", VA = "0x9981D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public bool Expired
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x998490", Offset = "0x998490", VA = "0x998490")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x998538", Offset = "0x998538", VA = "0x998538")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public DateTime Expires
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x9985C4", Offset = "0x9985C4", VA = "0x9985C4")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x9985CC", Offset = "0x9985CC", VA = "0x9985CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public bool HttpOnly
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x9985D4", Offset = "0x9985D4", VA = "0x9985D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x9985DC", Offset = "0x9985DC", VA = "0x9985DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public string Name
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x9985E8", Offset = "0x9985E8", VA = "0x9985E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x997F5C", Offset = "0x997F5C", VA = "0x997F5C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public string Path
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x998714", Offset = "0x998714", VA = "0x998714")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x998130", Offset = "0x998130", VA = "0x998130")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public string Port
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x99871C", Offset = "0x99871C", VA = "0x99871C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x998724", Offset = "0x998724", VA = "0x998724")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public bool Secure
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x998A80", Offset = "0x998A80", VA = "0x998A80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x998A88", Offset = "0x998A88", VA = "0x998A88")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public DateTime TimeStamp
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x998A94", Offset = "0x998A94", VA = "0x998A94")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x170002E8")]
		public string Value
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x998A9C", Offset = "0x998A9C", VA = "0x998A9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600130B")]
			[Address(RVA = "0x99801C", Offset = "0x99801C", VA = "0x99801C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public int Version
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x998BA4", Offset = "0x998BA4", VA = "0x998BA4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600130D")]
			[Address(RVA = "0x998BAC", Offset = "0x998BAC", VA = "0x998BAC")]
			set
			{
			}
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x997DCC", Offset = "0x997DCC", VA = "0x997DCC")]
		public Cookie()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x997F24", Offset = "0x997F24", VA = "0x997F24")]
		public Cookie(string name, string value)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x998108", Offset = "0x998108", VA = "0x998108")]
		public Cookie(string name, string value, string path)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x9981A0", Offset = "0x9981A0", VA = "0x9981A0")]
		public Cookie(string name, string value, string path, string domain)
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x9985F0", Offset = "0x9985F0", VA = "0x9985F0")]
		private static bool canSetName(string name, out string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x998AA4", Offset = "0x998AA4", VA = "0x998AA4")]
		private static bool canSetValue(string value, out string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x998C2C", Offset = "0x998C2C", VA = "0x998C2C")]
		private static int hash(int i, int j, int k, int l, int m)
		{
			return default(int);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x998C60", Offset = "0x998C60", VA = "0x998C60")]
		private string toResponseStringVersion0()
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x998EC4", Offset = "0x998EC4", VA = "0x998EC4")]
		private string toResponseStringVersion1()
		{
			return null;
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x9988D0", Offset = "0x9988D0", VA = "0x9988D0")]
		private static bool tryCreatePorts(string value, out int[] result, out string parseError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x999244", Offset = "0x999244", VA = "0x999244")]
		internal string ToRequestString(Uri uri)
		{
			return null;
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x999550", Offset = "0x999550", VA = "0x999550")]
		internal string ToResponseString()
		{
			return null;
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x9995DC", Offset = "0x9995DC", VA = "0x9995DC", Slot = "0")]
		public override bool Equals(object comparand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x9996C8", Offset = "0x9996C8", VA = "0x9996C8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x999864", Offset = "0x999864", VA = "0x999864", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000303")]
	public class CookieCollection : ICollection, IEnumerable
	{
		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Cookie> _list;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object _sync;

		[Token(Token = "0x170002EA")]
		internal IList<Cookie> List
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0x9999E0", Offset = "0x9999E0", VA = "0x9999E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		internal IEnumerable<Cookie> Sorted
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x9999E8", Offset = "0x9999E8", VA = "0x9999E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		public int Count
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0x999AE8", Offset = "0x999AE8", VA = "0x999AE8", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002ED")]
		public bool IsReadOnly
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x999B30", Offset = "0x999B30", VA = "0x999B30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EE")]
		public bool IsSynchronized
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0x999B38", Offset = "0x999B38", VA = "0x999B38", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EF")]
		public Cookie this[int index]
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x999B40", Offset = "0x999B40", VA = "0x999B40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		public Cookie this[string name]
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x999C00", Offset = "0x999C00", VA = "0x999C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F1")]
		public object SyncRoot
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0x98F1C4", Offset = "0x98F1C4", VA = "0x98F1C4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x999958", Offset = "0x999958", VA = "0x999958")]
		public CookieCollection()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x999F88", Offset = "0x999F88", VA = "0x999F88")]
		private static int compareCookieWithinSort(Cookie x, Cookie y)
		{
			return default(int);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x999FDC", Offset = "0x999FDC", VA = "0x999FDC")]
		private static int compareCookieWithinSorted(Cookie x, Cookie y)
		{
			return default(int);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x99A048", Offset = "0x99A048", VA = "0x99A048")]
		private static CookieCollection parseRequest(string value)
		{
			return null;
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x99A61C", Offset = "0x99A61C", VA = "0x99A61C")]
		private static CookieCollection parseResponse(string value)
		{
			return null;
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x99AE90", Offset = "0x99AE90", VA = "0x99AE90")]
		private int searchCookie(Cookie cookie)
		{
			return default(int);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x99A3E8", Offset = "0x99A3E8", VA = "0x99A3E8")]
		private static string[] splitCookieHeaderValue(string value)
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x99AFAC", Offset = "0x99AFAC", VA = "0x99AFAC")]
		internal static CookieCollection Parse(string value, bool response)
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x99AFB8", Offset = "0x99AFB8", VA = "0x99AFB8")]
		internal void SetOrRemove(Cookie cookie)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x99B100", Offset = "0x99B100", VA = "0x99B100")]
		internal void SetOrRemove(CookieCollection cookies)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x99B3B8", Offset = "0x99B3B8", VA = "0x99B3B8")]
		internal void Sort()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x99A4D8", Offset = "0x99A4D8", VA = "0x99A4D8")]
		public void Add(Cookie cookie)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x99B47C", Offset = "0x99B47C", VA = "0x99B47C")]
		public void Add(CookieCollection cookies)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x99B77C", Offset = "0x99B77C", VA = "0x99B77C", Slot = "4")]
		public void CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x99BA64", Offset = "0x99BA64", VA = "0x99BA64")]
		public void CopyTo(Cookie[] array, int index)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x98F290", Offset = "0x98F290", VA = "0x98F290", Slot = "8")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000304")]
	public class CookieException : FormatException, ISerializable
	{
		[Token(Token = "0x6001332")]
		[Address(RVA = "0x99870C", Offset = "0x99870C", VA = "0x99870C")]
		internal CookieException(string message)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x99BBC4", Offset = "0x99BBC4", VA = "0x99BBC4")]
		internal CookieException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x99BBCC", Offset = "0x99BBCC", VA = "0x99BBCC")]
		protected CookieException(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x99BBD4", Offset = "0x99BBD4", VA = "0x99BBD4")]
		public CookieException()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x99BBDC", Offset = "0x99BBDC", VA = "0x99BBDC", Slot = "10")]
		public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x99BBE4", Offset = "0x99BBE4", VA = "0x99BBE4", Slot = "4")]
		private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}
	}
	[Token(Token = "0x2000305")]
	internal sealed class EndPointListener
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string _defaultCertFolderPath;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ListenerPrefix> _all;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private X509Certificate2 _cert;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint _endpoint;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<ListenerPrefix, HttpListener> _prefixes;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _secure;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Socket _socket;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ListenerPrefix> _unhandled;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<HttpConnection, HttpConnection> _unregistered;

		[Token(Token = "0x170002F2")]
		public X509Certificate2 Certificate
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x99C178", Offset = "0x99C178", VA = "0x99C178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F3")]
		public bool IsSecure
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x99C180", Offset = "0x99C180", VA = "0x99C180")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x99BBEC", Offset = "0x99BBEC", VA = "0x99BBEC")]
		public EndPointListener(IPAddress address, int port, bool secure, string certFolderPath, X509Certificate2 defaultCert)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x99C188", Offset = "0x99C188", VA = "0x99C188")]
		private static void addSpecial(List<ListenerPrefix> prefixes, ListenerPrefix prefix)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x99C3D4", Offset = "0x99C3D4", VA = "0x99C3D4")]
		private void checkIfRemove()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x99C738", Offset = "0x99C738", VA = "0x99C738")]
		private static RSACryptoServiceProvider createRSAFromFile(string filename)
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x99BF0C", Offset = "0x99BF0C", VA = "0x99BF0C")]
		private static X509Certificate2 getCertificate(int port, string certFolderPath, X509Certificate2 defaultCert)
		{
			return null;
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x99C978", Offset = "0x99C978", VA = "0x99C978")]
		private static HttpListener matchFromList(string host, string path, List<ListenerPrefix> list, out ListenerPrefix prefix)
		{
			return null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x99CB54", Offset = "0x99CB54", VA = "0x99CB54")]
		private static void onAccept(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x99D464", Offset = "0x99D464", VA = "0x99D464")]
		private static bool removeSpecial(List<ListenerPrefix> prefixes, ListenerPrefix prefix)
		{
			return default(bool);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x99D548", Offset = "0x99D548", VA = "0x99D548")]
		private HttpListener searchListener(Uri uri, out ListenerPrefix prefix)
		{
			return null;
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x99D9C0", Offset = "0x99D9C0", VA = "0x99D9C0")]
		internal static bool CertificateExists(int port, string certFolderPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x99DB3C", Offset = "0x99DB3C", VA = "0x99DB3C")]
		internal void RemoveConnection(HttpConnection connection)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x99DCB8", Offset = "0x99DCB8", VA = "0x99DCB8")]
		public void AddPrefix(ListenerPrefix prefix, HttpListener listener)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x99E02C", Offset = "0x99E02C", VA = "0x99E02C")]
		public bool BindContext(HttpListenerContext context)
		{
			return default(bool);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x99E090", Offset = "0x99E090", VA = "0x99E090")]
		public void Close()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x99E3F8", Offset = "0x99E3F8", VA = "0x99E3F8")]
		public void RemovePrefix(ListenerPrefix prefix, HttpListener listener)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x99E690", Offset = "0x99E690", VA = "0x99E690")]
		public void UnbindContext(HttpListenerContext context)
		{
		}
	}
	[Token(Token = "0x2000306")]
	internal sealed class EndPointManager
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<IPAddress, Dictionary<int, EndPointListener>> _ipToEndpoints;

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x99E9E4", Offset = "0x99E9E4", VA = "0x99E9E4")]
		private EndPointManager()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x99E9EC", Offset = "0x99E9EC", VA = "0x99E9EC")]
		private static void addPrefix(string uriPrefix, HttpListener httpListener)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x99EB74", Offset = "0x99EB74", VA = "0x99EB74")]
		private static EndPointListener getEndPointListener(IPAddress address, int port, HttpListener httpListener, bool secure)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x99EE04", Offset = "0x99EE04", VA = "0x99EE04")]
		private static void removePrefix(string uriPrefix, HttpListener httpListener)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x99EF4C", Offset = "0x99EF4C", VA = "0x99EF4C")]
		public static void AddListener(HttpListener httpListener)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x99F678", Offset = "0x99F678", VA = "0x99F678")]
		public static void AddPrefix(string uriPrefix, HttpListener httpListener)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x99C4A0", Offset = "0x99C4A0", VA = "0x99C4A0")]
		public static void RemoveEndPoint(EndPointListener epListener, IPEndPoint endpoint)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x99F80C", Offset = "0x99F80C", VA = "0x99F80C")]
		public static void RemoveListener(HttpListener httpListener)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x99FC08", Offset = "0x99FC08", VA = "0x99FC08")]
		public static void RemovePrefix(string uriPrefix, HttpListener httpListener)
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class HttpBasicIdentity : GenericIdentity
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _password;

		[Token(Token = "0x170002F4")]
		public virtual string Password
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x99FE34", Offset = "0x99FE34", VA = "0x99FE34", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x996090", Offset = "0x996090", VA = "0x996090")]
		internal HttpBasicIdentity(string username, string password)
		{
		}
	}
	[Token(Token = "0x2000308")]
	internal sealed class HttpConnection
	{
		[Token(Token = "0x40014CB")]
		private const int _bufferSize = 8192;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _buffer;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _chunked;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HttpListenerContext _context;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _contextWasBound;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder _currentLine;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputState _inputState;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RequestStream _inputStream;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HttpListener _lastListener;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineState _lineState;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EndPointListener _listener;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ResponseStream _outputStream;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _position;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ListenerPrefix _prefix;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MemoryStream _requestBuffer;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _reuses;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _secure;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Socket _socket;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Stream _stream;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private object _sync;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int _timeout;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Timer _timer;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WebSocketStream _websocketStream;

		[Token(Token = "0x170002F5")]
		public bool IsClosed
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x99FF20", Offset = "0x99FF20", VA = "0x99FF20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F6")]
		public bool IsSecure
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0x99FF30", Offset = "0x99FF30", VA = "0x99FF30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F7")]
		public IPEndPoint LocalEndPoint
		{
			[Token(Token = "0x600135A")]
			[Address(RVA = "0x99FF38", Offset = "0x99FF38", VA = "0x99FF38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		public ListenerPrefix Prefix
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0x99FFC0", Offset = "0x99FFC0", VA = "0x99FFC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600135C")]
			[Address(RVA = "0x99FFC8", Offset = "0x99FFC8", VA = "0x99FFC8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public IPEndPoint RemoteEndPoint
		{
			[Token(Token = "0x600135D")]
			[Address(RVA = "0x99FFD0", Offset = "0x99FFD0", VA = "0x99FFD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		public int Reuses
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0x9A0058", Offset = "0x9A0058", VA = "0x9A0058")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FB")]
		public Stream Stream
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x9A0060", Offset = "0x9A0060", VA = "0x9A0060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x99CF14", Offset = "0x99CF14", VA = "0x99CF14")]
		public HttpConnection(Socket socket, EndPointListener listener)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x9A0068", Offset = "0x9A0068", VA = "0x9A0068")]
		private void close()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x9A02F4", Offset = "0x9A02F4", VA = "0x9A02F4")]
		private void closeSocket()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x9A0244", Offset = "0x9A0244", VA = "0x9A0244")]
		private void disposeRequestBuffer()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x9A0278", Offset = "0x9A0278", VA = "0x9A0278")]
		private void disposeStream()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x9A0178", Offset = "0x9A0178", VA = "0x9A0178")]
		private void disposeTimer()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x99FE3C", Offset = "0x99FE3C", VA = "0x99FE3C")]
		private void init()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x9A04F4", Offset = "0x9A04F4", VA = "0x9A04F4")]
		private static void onRead(IAsyncResult asyncResult)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x9A16FC", Offset = "0x9A16FC", VA = "0x9A16FC")]
		private static void onTimeout(object state)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x9A0A60", Offset = "0x9A0A60", VA = "0x9A0A60")]
		private bool processInput(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x9A1E14", Offset = "0x9A1E14", VA = "0x9A1E14")]
		private string readLine(byte[] buffer, int offset, int length, ref int used)
		{
			return null;
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x9A03F0", Offset = "0x9A03F0", VA = "0x9A03F0")]
		private void removeConnection()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x9A03B4", Offset = "0x9A03B4", VA = "0x9A03B4")]
		private void unbind()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x99D2C0", Offset = "0x99D2C0", VA = "0x99D2C0")]
		internal void Close(bool force)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x99D10C", Offset = "0x99D10C", VA = "0x99D10C")]
		public void BeginReadRequest()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x9A2708", Offset = "0x9A2708", VA = "0x9A2708")]
		public void Close()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x9A2710", Offset = "0x9A2710", VA = "0x9A2710")]
		public RequestStream GetRequestStream(bool chunked, long contentlength)
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x9A2114", Offset = "0x9A2114", VA = "0x9A2114")]
		public ResponseStream GetResponseStream()
		{
			return null;
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x9A29A8", Offset = "0x9A29A8", VA = "0x9A29A8")]
		public WebSocketStream GetWebSocketStream()
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x9A0A40", Offset = "0x9A0A40", VA = "0x9A0A40")]
		public void SendError()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x9968CC", Offset = "0x9968CC", VA = "0x9968CC")]
		public void SendError(string message, int status)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class HttpDigestIdentity : GenericIdentity
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NameValueCollection _parameters;

		[Token(Token = "0x170002FC")]
		public string Algorithm
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x9A2E34", Offset = "0x9A2E34", VA = "0x9A2E34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		public string Cnonce
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x9A2E88", Offset = "0x9A2E88", VA = "0x9A2E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public string Nc
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x9A2EDC", Offset = "0x9A2EDC", VA = "0x9A2EDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		public string Nonce
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x9A2F30", Offset = "0x9A2F30", VA = "0x9A2F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public string Opaque
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x9A2F84", Offset = "0x9A2F84", VA = "0x9A2F84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public string Qop
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x9A2FD8", Offset = "0x9A2FD8", VA = "0x9A2FD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		public string Realm
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x9A302C", Offset = "0x9A302C", VA = "0x9A302C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public string Response
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x9A3080", Offset = "0x9A3080", VA = "0x9A3080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public string Uri
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x9A30D4", Offset = "0x9A30D4", VA = "0x9A30D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x996000", Offset = "0x996000", VA = "0x996000")]
		internal HttpDigestIdentity(NameValueCollection parameters)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x9A3128", Offset = "0x9A3128", VA = "0x9A3128")]
		internal bool IsValid(string password, string realm, string method, string entity)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030A")]
	internal class HttpHeaderInfo
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HttpHeaderType _type;

		[Token(Token = "0x17000305")]
		internal bool IsMultiValueInRequest
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x9A32A4", Offset = "0x9A32A4", VA = "0x9A32A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000306")]
		internal bool IsMultiValueInResponse
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x9A32B0", Offset = "0x9A32B0", VA = "0x9A32B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000307")]
		public bool IsRequest
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x9A32BC", Offset = "0x9A32BC", VA = "0x9A32BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000308")]
		public bool IsResponse
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x9A32C8", Offset = "0x9A32C8", VA = "0x9A32C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000309")]
		public string Name
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x9A32D4", Offset = "0x9A32D4", VA = "0x9A32D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x9A32DC", Offset = "0x9A32DC", VA = "0x9A32DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public HttpHeaderType Type
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x9A32E4", Offset = "0x9A32E4", VA = "0x9A32E4")]
			get
			{
				return default(HttpHeaderType);
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x9A32EC", Offset = "0x9A32EC", VA = "0x9A32EC")]
			set
			{
			}
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x9A329C", Offset = "0x9A329C", VA = "0x9A329C")]
		public HttpHeaderInfo()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x9A32F4", Offset = "0x9A32F4", VA = "0x9A32F4")]
		public bool IsMultiValue(bool response)
		{
			return default(bool);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x9A3324", Offset = "0x9A3324", VA = "0x9A3324")]
		public bool IsRestricted(bool response)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030B")]
	[Flags]
	internal enum HttpHeaderType
	{
		[Token(Token = "0x40014E6")]
		Unspecified = 0,
		[Token(Token = "0x40014E7")]
		Request = 1,
		[Token(Token = "0x40014E8")]
		Response = 2,
		[Token(Token = "0x40014E9")]
		Restricted = 4,
		[Token(Token = "0x40014EA")]
		MultiValue = 8,
		[Token(Token = "0x40014EB")]
		MultiValueInRequest = 0x10,
		[Token(Token = "0x40014EC")]
		MultiValueInResponse = 0x20
	}
	[Token(Token = "0x200030C")]
	public sealed class HttpListener : IDisposable
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AuthenticationSchemes _authSchemes;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<HttpListenerRequest, AuthenticationSchemes> _authSchemeSelector;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _certFolderPath;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<HttpConnection, HttpConnection> _connections;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<HttpListenerContext> _contextQueue;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Func<IIdentity, NetworkCredential> _credentialsFinder;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private X509Certificate2 _defaultCert;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _disposed;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _ignoreWriteExceptions;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool _listening;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HttpListenerPrefixCollection _prefixes;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _realm;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<HttpListenerContext, HttpListenerContext> _registry;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<ListenerAsyncResult> _waitQueue;

		[Token(Token = "0x1700030B")]
		internal bool IsDisposed
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x9A353C", Offset = "0x9A353C", VA = "0x9A353C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030C")]
		public AuthenticationSchemes AuthenticationSchemes
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x9A3544", Offset = "0x9A3544", VA = "0x9A3544")]
			get
			{
				return default(AuthenticationSchemes);
			}
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x9A35DC", Offset = "0x9A35DC", VA = "0x9A35DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public Func<HttpListenerRequest, AuthenticationSchemes> AuthenticationSchemeSelector
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x9A3600", Offset = "0x9A3600", VA = "0x9A3600")]
			get
			{
				return null;
			}
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x9A3618", Offset = "0x9A3618", VA = "0x9A3618")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public string CertificateFolderPath
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x99EDD4", Offset = "0x99EDD4", VA = "0x99EDD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001391")]
			[Address(RVA = "0x9A3644", Offset = "0x9A3644", VA = "0x9A3644")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public X509Certificate2 DefaultCertificate
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x99EDEC", Offset = "0x99EDEC", VA = "0x99EDEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x9A3670", Offset = "0x9A3670", VA = "0x9A3670")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public bool IgnoreWriteExceptions
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x9A2990", Offset = "0x9A2990", VA = "0x9A2990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x9A369C", Offset = "0x9A369C", VA = "0x9A369C")]
			set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public bool IsListening
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x9A36C0", Offset = "0x9A36C0", VA = "0x9A36C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000312")]
		public static bool IsSupported
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x9A36C8", Offset = "0x9A36C8", VA = "0x9A36C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		public HttpListenerPrefixCollection Prefixes
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x99F5D0", Offset = "0x99F5D0", VA = "0x99F5D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000314")]
		public string Realm
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x9A36D0", Offset = "0x9A36D0", VA = "0x9A36D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x9A3740", Offset = "0x9A3740", VA = "0x9A3740")]
			set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public bool UnsafeConnectionNtlmAuthentication
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x9A376C", Offset = "0x9A376C", VA = "0x9A376C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x9A37AC", Offset = "0x9A37AC", VA = "0x9A37AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public Func<IIdentity, NetworkCredential> UserCredentialsFinder
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0x9A37EC", Offset = "0x9A37EC", VA = "0x9A37EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x9A38F0", Offset = "0x9A38F0", VA = "0x9A38F0")]
			set
			{
			}
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x9A3348", Offset = "0x9A3348", VA = "0x9A3348")]
		public HttpListener()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x9A391C", Offset = "0x9A391C", VA = "0x9A391C")]
		private void cleanup(bool force)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x9A3F94", Offset = "0x9A3F94", VA = "0x9A3F94")]
		private void cleanupConnections()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x9A3CD8", Offset = "0x9A3CD8", VA = "0x9A3CD8")]
		private void cleanupContextRegistry()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x9A4240", Offset = "0x9A4240", VA = "0x9A4240")]
		private void cleanupWaitQueue()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x9A45A4", Offset = "0x9A45A4", VA = "0x9A45A4")]
		private void close(bool force)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x9A4610", Offset = "0x9A4610", VA = "0x9A4610")]
		private HttpListenerContext getContextFromQueue()
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x9A3A8C", Offset = "0x9A3A8C", VA = "0x9A3A8C")]
		private void sendServiceUnavailable()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x9A1094", Offset = "0x9A1094", VA = "0x9A1094")]
		internal void AddConnection(HttpConnection connection)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x9A46CC", Offset = "0x9A46CC", VA = "0x9A46CC")]
		internal ListenerAsyncResult BeginGetContext(ListenerAsyncResult asyncResult)
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x9A355C", Offset = "0x9A355C", VA = "0x9A355C")]
		internal void CheckDisposed()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x9A1210", Offset = "0x9A1210", VA = "0x9A1210")]
		internal void RegisterContext(HttpListenerContext context)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x9A1F98", Offset = "0x9A1F98", VA = "0x9A1F98")]
		internal void RemoveConnection(HttpConnection connection)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x9A4B18", Offset = "0x9A4B18", VA = "0x9A4B18")]
		internal AuthenticationSchemes SelectAuthenticationScheme(HttpListenerContext context)
		{
			return default(AuthenticationSchemes);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x99E6A4", Offset = "0x99E6A4", VA = "0x99E6A4")]
		internal void UnregisterContext(HttpListenerContext context)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x9A4B78", Offset = "0x9A4B78", VA = "0x9A4B78")]
		public void Abort()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x9A4BA8", Offset = "0x9A4BA8", VA = "0x9A4BA8")]
		public IAsyncResult BeginGetContext(AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x9A4C24", Offset = "0x9A4C24", VA = "0x9A4C24")]
		public void Close()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x9A4C4C", Offset = "0x9A4C4C", VA = "0x9A4C4C")]
		public HttpListenerContext EndGetContext(IAsyncResult asyncResult)
		{
			return null;
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x9A526C", Offset = "0x9A526C", VA = "0x9A526C")]
		public HttpListenerContext GetContext()
		{
			return null;
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x9A52F0", Offset = "0x9A52F0", VA = "0x9A52F0")]
		public void Start()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x9A5360", Offset = "0x9A5360", VA = "0x9A5360")]
		public void Stop()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x9A53DC", Offset = "0x9A53DC", VA = "0x9A53DC", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public sealed class HttpListenerContext
	{
		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HttpConnection _connection;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _error;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _errorStatus;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HttpListenerRequest _request;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HttpListenerResponse _response;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPrincipal _user;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal HttpListener Listener;

		[Token(Token = "0x17000317")]
		internal HttpConnection Connection
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x9A5638", Offset = "0x9A5638", VA = "0x9A5638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		internal string ErrorMessage
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x9A5640", Offset = "0x9A5640", VA = "0x9A5640")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x9A5648", Offset = "0x9A5648", VA = "0x9A5648")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		internal int ErrorStatus
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x9A5650", Offset = "0x9A5650", VA = "0x9A5650")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x9A5658", Offset = "0x9A5658", VA = "0x9A5658")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		internal bool HasError
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x9A0C44", Offset = "0x9A0C44", VA = "0x9A0C44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031B")]
		public HttpListenerRequest Request
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x9A5660", Offset = "0x9A5660", VA = "0x9A5660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public HttpListenerResponse Response
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x9A5668", Offset = "0x9A5668", VA = "0x9A5668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		public IPrincipal User
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x9A5670", Offset = "0x9A5670", VA = "0x9A5670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x9A041C", Offset = "0x9A041C", VA = "0x9A041C")]
		internal HttpListenerContext(HttpConnection connection)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x9A4FC8", Offset = "0x9A4FC8", VA = "0x9A4FC8")]
		internal void SetUser(AuthenticationSchemes scheme, string realm, Func<IIdentity, NetworkCredential> credentialsFinder)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x9A5678", Offset = "0x9A5678", VA = "0x9A5678")]
		public HttpListenerWebSocketContext AcceptWebSocket(string protocol, Logger logger)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200030F")]
	public class HttpListenerException : Win32Exception
	{
		[Token(Token = "0x1700031E")]
		public override int ErrorCode
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x9A57DC", Offset = "0x9A57DC", VA = "0x9A57DC", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x9A57C4", Offset = "0x9A57C4", VA = "0x9A57C4")]
		protected HttpListenerException(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x9A57CC", Offset = "0x9A57CC", VA = "0x9A57CC")]
		public HttpListenerException()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x9A57D4", Offset = "0x9A57D4", VA = "0x9A57D4")]
		public HttpListenerException(int errorCode)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x997088", Offset = "0x997088", VA = "0x997088")]
		public HttpListenerException(int errorCode, string message)
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class HttpListenerPrefixCollection : ICollection<string>, IEnumerable<string>, IEnumerable
	{
		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HttpListener _listener;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> _prefixes;

		[Token(Token = "0x1700031F")]
		public int Count
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x9A4AD0", Offset = "0x9A4AD0", VA = "0x9A4AD0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000320")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x9A586C", Offset = "0x9A586C", VA = "0x9A586C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000321")]
		public bool IsSynchronized
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x9A5874", Offset = "0x9A5874", VA = "0x9A5874")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x9A57E4", Offset = "0x9A57E4", VA = "0x9A57E4")]
		private HttpListenerPrefixCollection()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x9A3510", Offset = "0x9A3510", VA = "0x9A3510")]
		internal HttpListenerPrefixCollection(HttpListener listener)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x9A587C", Offset = "0x9A587C", VA = "0x9A587C", Slot = "6")]
		public void Add(string uriPrefix)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x9A59B8", Offset = "0x9A59B8", VA = "0x9A59B8", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x9A5A70", Offset = "0x9A5A70", VA = "0x9A5A70", Slot = "8")]
		public bool Contains(string uriPrefix)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x9A5B24", Offset = "0x9A5B24", VA = "0x9A5B24")]
		public void CopyTo(Array array, int offset)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x9A5BE8", Offset = "0x9A5BE8", VA = "0x9A5BE8", Slot = "9")]
		public void CopyTo(string[] array, int offset)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x99F5E8", Offset = "0x99F5E8", VA = "0x99F5E8", Slot = "11")]
		public IEnumerator<string> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x9A5C5C", Offset = "0x9A5C5C", VA = "0x9A5C5C", Slot = "10")]
		public bool Remove(string uriPrefix)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x9A5D64", Offset = "0x9A5D64", VA = "0x9A5D64", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000311")]
	public sealed class HttpListenerRequest
	{
		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] _100continue;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string[] _acceptTypes;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _chunked;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private System.Text.Encoding _contentEncoding;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long _contentLength;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _contentLengthWasSet;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HttpListenerContext _context;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CookieCollection _cookies;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WebHeaderCollection _headers;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Guid _identifier;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Stream _inputStream;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _keepAlive;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _keepAliveWasSet;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _method;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NameValueCollection _queryString;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Uri _referer;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _uri;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Uri _url;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string[] _userLanguages;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private System.Version _version;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _websocketRequest;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool _websocketRequestWasSet;

		[Token(Token = "0x17000322")]
		public string[] AcceptTypes
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x9A5DF4", Offset = "0x9A5DF4", VA = "0x9A5DF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		public int ClientCertificateError
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x9A5DFC", Offset = "0x9A5DFC", VA = "0x9A5DFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000324")]
		public System.Text.Encoding ContentEncoding
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x9A5E04", Offset = "0x9A5E04", VA = "0x9A5E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		public long ContentLength64
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0x9A5E44", Offset = "0x9A5E44", VA = "0x9A5E44")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000326")]
		public string ContentType
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x9A5E4C", Offset = "0x9A5E4C", VA = "0x9A5E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public CookieCollection Cookies
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x9A5EA0", Offset = "0x9A5EA0", VA = "0x9A5EA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		public bool HasEntityBody
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x9A5EEC", Offset = "0x9A5EEC", VA = "0x9A5EEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000329")]
		public NameValueCollection Headers
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x9A5F10", Offset = "0x9A5F10", VA = "0x9A5F10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		public string HttpMethod
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x9A5F18", Offset = "0x9A5F18", VA = "0x9A5F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		public Stream InputStream
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x9A5F20", Offset = "0x9A5F20", VA = "0x9A5F20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public bool IsAuthenticated
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x9A5FD4", Offset = "0x9A5FD4", VA = "0x9A5FD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032D")]
		public bool IsLocal
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x9A6104", Offset = "0x9A6104", VA = "0x9A6104")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032E")]
		public bool IsSecureConnection
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x9A6144", Offset = "0x9A6144", VA = "0x9A6144")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032F")]
		public bool IsWebSocketRequest
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x9A6168", Offset = "0x9A6168", VA = "0x9A6168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000330")]
		public bool KeepAlive
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x9A22B8", Offset = "0x9A22B8", VA = "0x9A22B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000331")]
		public IPEndPoint LocalEndPoint
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x9A6298", Offset = "0x9A6298", VA = "0x9A6298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public System.Version ProtocolVersion
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x9A62B8", Offset = "0x9A62B8", VA = "0x9A62B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public NameValueCollection QueryString
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x9A62C0", Offset = "0x9A62C0", VA = "0x9A62C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		public string RawUrl
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x9A636C", Offset = "0x9A636C", VA = "0x9A636C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		public IPEndPoint RemoteEndPoint
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x9A6124", Offset = "0x9A6124", VA = "0x9A6124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public Guid RequestTraceIdentifier
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x9A6388", Offset = "0x9A6388", VA = "0x9A6388")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x17000337")]
		public Uri Url
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x9A6394", Offset = "0x9A6394", VA = "0x9A6394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		public Uri UrlReferrer
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x9A639C", Offset = "0x9A639C", VA = "0x9A639C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		public string UserAgent
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x9A63A4", Offset = "0x9A63A4", VA = "0x9A63A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public string UserHostAddress
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x9A63F8", Offset = "0x9A63F8", VA = "0x9A63F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public string UserHostName
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x9A6418", Offset = "0x9A6418", VA = "0x9A6418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public string[] UserLanguages
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x9A646C", Offset = "0x9A646C", VA = "0x9A646C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x9A548C", Offset = "0x9A548C", VA = "0x9A548C")]
		internal HttpListenerRequest(HttpListenerContext context)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x9A6474", Offset = "0x9A6474", VA = "0x9A6474")]
		private static bool tryCreateVersion(string version, out System.Version result)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x9A1964", Offset = "0x9A1964", VA = "0x9A1964")]
		internal void AddHeader(string header)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x9A0C54", Offset = "0x9A0C54", VA = "0x9A0C54")]
		internal void FinishInitialization()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x9A2468", Offset = "0x9A2468", VA = "0x9A2468")]
		internal bool FlushInput()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x9A175C", Offset = "0x9A175C", VA = "0x9A175C")]
		internal void SetRequestLine(string requestLine)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x9A657C", Offset = "0x9A657C", VA = "0x9A657C")]
		public IAsyncResult BeginGetClientCertificate(AsyncCallback requestCallback, object state)
		{
			return null;
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x9A65BC", Offset = "0x9A65BC", VA = "0x9A65BC")]
		public X509Certificate2 EndGetClientCertificate(IAsyncResult asyncResult)
		{
			return null;
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x9A65FC", Offset = "0x9A65FC", VA = "0x9A65FC")]
		public X509Certificate2 GetClientCertificate()
		{
			return null;
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x9A663C", Offset = "0x9A663C", VA = "0x9A663C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000312")]
	public sealed class HttpListenerResponse : IDisposable
	{
		[Token(Token = "0x2000313")]
		[CompilerGenerated]
		private sealed class <findCookie>d__63 : IEnumerable<Cookie>, IEnumerable, IEnumerator<Cookie>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Cookie <>2__current;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Cookie cookie;

			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Cookie <>3__cookie;

			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public HttpListenerResponse <>4__this;

			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <name>5__2;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <domain>5__3;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <path>5__4;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator <>7__wrap4;

			[Token(Token = "0x1700034C")]
			private Cookie System.Collections.Generic.IEnumerator<WebSocketSharp.Net.Cookie>.Current
			{
				[Token(Token = "0x600142B")]
				[Address(RVA = "0x9A8120", Offset = "0x9A8120", VA = "0x9A8120", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600142D")]
				[Address(RVA = "0x9A8168", Offset = "0x9A8168", VA = "0x9A8168", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001427")]
			[Address(RVA = "0x9A7CA8", Offset = "0x9A7CA8", VA = "0x9A7CA8")]
			[DebuggerHidden]
			public <findCookie>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001428")]
			[Address(RVA = "0x9A7CDC", Offset = "0x9A7CDC", VA = "0x9A7CDC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001429")]
			[Address(RVA = "0x9A7CF8", Offset = "0x9A7CF8", VA = "0x9A7CF8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600142A")]
			[Address(RVA = "0x9A8064", Offset = "0x9A8064", VA = "0x9A8064")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0x9A8128", Offset = "0x9A8128", VA = "0x9A8128", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x9A8170", Offset = "0x9A8170", VA = "0x9A8170", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Cookie> System.Collections.Generic.IEnumerable<WebSocketSharp.Net.Cookie>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0x9A822C", Offset = "0x9A822C", VA = "0x9A822C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _chunked;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private System.Text.Encoding _contentEncoding;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long _contentLength;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _contentLengthSet;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _contentType;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HttpListenerContext _context;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CookieCollection _cookies;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _disposed;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _forceCloseChunked;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WebHeaderCollection _headers;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _headersSent;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _keepAlive;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _location;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ResponseStream _outputStream;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _statusCode;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _statusDescription;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private System.Version _version;

		[Token(Token = "0x1700033D")]
		internal bool CloseConnection
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x9A23F4", Offset = "0x9A23F4", VA = "0x9A23F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033E")]
		internal bool ForceCloseChunked
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x9A6780", Offset = "0x9A6780", VA = "0x9A6780")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033F")]
		internal bool HeadersSent
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x9A6788", Offset = "0x9A6788", VA = "0x9A6788")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000340")]
		public System.Text.Encoding ContentEncoding
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x9A2C64", Offset = "0x9A2C64", VA = "0x9A2C64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x9A6810", Offset = "0x9A6810", VA = "0x9A6810")]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public long ContentLength64
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x9A6910", Offset = "0x9A6910", VA = "0x9A6910")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x9A6928", Offset = "0x9A6928", VA = "0x9A6928")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public string ContentType
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x9A69B8", Offset = "0x9A69B8", VA = "0x9A69B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x9A2B94", Offset = "0x9A2B94", VA = "0x9A2B94")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public CookieCollection Cookies
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x9A69D0", Offset = "0x9A69D0", VA = "0x9A69D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x9A6A4C", Offset = "0x9A6A4C", VA = "0x9A6A4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public WebHeaderCollection Headers
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x9A6A78", Offset = "0x9A6A78", VA = "0x9A6A78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x9A6A90", Offset = "0x9A6A90", VA = "0x9A6A90")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public bool KeepAlive
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x9A6B0C", Offset = "0x9A6B0C", VA = "0x9A6B0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600140B")]
			[Address(RVA = "0x9A6B24", Offset = "0x9A6B24", VA = "0x9A6B24")]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public Stream OutputStream
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x9A6B48", Offset = "0x9A6B48", VA = "0x9A6B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public System.Version ProtocolVersion
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0x9A6BA0", Offset = "0x9A6BA0", VA = "0x9A6BA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x9A6BB8", Offset = "0x9A6BB8", VA = "0x9A6BB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public string RedirectLocation
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x9A6CB0", Offset = "0x9A6CB0", VA = "0x9A6CB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x9A6CC8", Offset = "0x9A6CC8", VA = "0x9A6CC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public bool SendChunked
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x9A6D64", Offset = "0x9A6D64", VA = "0x9A6D64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x9A296C", Offset = "0x9A296C", VA = "0x9A296C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public int StatusCode
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x9A6D6C", Offset = "0x9A6D6C", VA = "0x9A6D6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x9A2B00", Offset = "0x9A2B00", VA = "0x9A2B00")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public string StatusDescription
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0x9A6D84", Offset = "0x9A6D84", VA = "0x9A6D84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x9A6D9C", Offset = "0x9A6D9C", VA = "0x9A6D9C")]
			set
			{
			}
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x9A5538", Offset = "0x9A5538", VA = "0x9A5538")]
		internal HttpListenerResponse(HttpListenerContext context)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x9A6DEC", Offset = "0x9A6DEC", VA = "0x9A6DEC")]
		private bool canAddOrUpdate(Cookie cookie)
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x9A6790", Offset = "0x9A6790", VA = "0x9A6790")]
		private void checkDisposed()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x9A683C", Offset = "0x9A683C", VA = "0x9A683C")]
		private void checkDisposedOrHeadersSent()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x9A704C", Offset = "0x9A704C", VA = "0x9A704C")]
		private void close(bool force)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x9A6FBC", Offset = "0x9A6FBC", VA = "0x9A6FBC")]
		[IteratorStateMachine(typeof(<findCookie>d__63))]
		private IEnumerable<Cookie> findCookie(Cookie cookie)
		{
			return null;
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x9A7078", Offset = "0x9A7078", VA = "0x9A7078")]
		internal void SendHeaders(bool closing, MemoryStream stream)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x9A7A2C", Offset = "0x9A7A2C", VA = "0x9A7A2C")]
		public void Abort()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x9A7A40", Offset = "0x9A7A40", VA = "0x9A7A40")]
		public void AddHeader(string name, string value)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x9A7A84", Offset = "0x9A7A84", VA = "0x9A7A84")]
		public void AppendCookie(Cookie cookie)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x9A7AB8", Offset = "0x9A7AB8", VA = "0x9A7AB8")]
		public void AppendHeader(string name, string value)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x9A46B8", Offset = "0x9A46B8", VA = "0x9A46B8")]
		public void Close()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x9A2C7C", Offset = "0x9A2C7C", VA = "0x9A2C7C")]
		public void Close(byte[] responseEntity, bool willBlock)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x9A7AFC", Offset = "0x9A7AFC", VA = "0x9A7AFC")]
		public void CopyFrom(HttpListenerResponse templateResponse)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x9A7B84", Offset = "0x9A7B84", VA = "0x9A7B84")]
		public void Redirect(string url)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x9A7BB4", Offset = "0x9A7BB4", VA = "0x9A7BB4")]
		public void SetCookie(Cookie cookie)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x9A7C94", Offset = "0x9A7C94", VA = "0x9A7C94", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public enum HttpStatusCode
	{
		[Token(Token = "0x400153A")]
		Continue = 100,
		[Token(Token = "0x400153B")]
		SwitchingProtocols = 101,
		[Token(Token = "0x400153C")]
		OK = 200,
		[Token(Token = "0x400153D")]
		Created = 201,
		[Token(Token = "0x400153E")]
		Accepted = 202,
		[Token(Token = "0x400153F")]
		NonAuthoritativeInformation = 203,
		[Token(Token = "0x4001540")]
		NoContent = 204,
		[Token(Token = "0x4001541")]
		ResetContent = 205,
		[Token(Token = "0x4001542")]
		PartialContent = 206,
		[Token(Token = "0x4001543")]
		MultipleChoices = 300,
		[Token(Token = "0x4001544")]
		Ambiguous = 300,
		[Token(Token = "0x4001545")]
		MovedPermanently = 301,
		[Token(Token = "0x4001546")]
		Moved = 301,
		[Token(Token = "0x4001547")]
		Found = 302,
		[Token(Token = "0x4001548")]
		Redirect = 302,
		[Token(Token = "0x4001549")]
		SeeOther = 303,
		[Token(Token = "0x400154A")]
		RedirectMethod = 303,
		[Token(Token = "0x400154B")]
		NotModified = 304,
		[Token(Token = "0x400154C")]
		UseProxy = 305,
		[Token(Token = "0x400154D")]
		Unused = 306,
		[Token(Token = "0x400154E")]
		TemporaryRedirect = 307,
		[Token(Token = "0x400154F")]
		RedirectKeepVerb = 307,
		[Token(Token = "0x4001550")]
		BadRequest = 400,
		[Token(Token = "0x4001551")]
		Unauthorized = 401,
		[Token(Token = "0x4001552")]
		PaymentRequired = 402,
		[Token(Token = "0x4001553")]
		Forbidden = 403,
		[Token(Token = "0x4001554")]
		NotFound = 404,
		[Token(Token = "0x4001555")]
		MethodNotAllowed = 405,
		[Token(Token = "0x4001556")]
		NotAcceptable = 406,
		[Token(Token = "0x4001557")]
		ProxyAuthenticationRequired = 407,
		[Token(Token = "0x4001558")]
		RequestTimeout = 408,
		[Token(Token = "0x4001559")]
		Conflict = 409,
		[Token(Token = "0x400155A")]
		Gone = 410,
		[Token(Token = "0x400155B")]
		LengthRequired = 411,
		[Token(Token = "0x400155C")]
		PreconditionFailed = 412,
		[Token(Token = "0x400155D")]
		RequestEntityTooLarge = 413,
		[Token(Token = "0x400155E")]
		RequestUriTooLong = 414,
		[Token(Token = "0x400155F")]
		UnsupportedMediaType = 415,
		[Token(Token = "0x4001560")]
		RequestedRangeNotSatisfiable = 416,
		[Token(Token = "0x4001561")]
		ExpectationFailed = 417,
		[Token(Token = "0x4001562")]
		InternalServerError = 500,
		[Token(Token = "0x4001563")]
		NotImplemented = 501,
		[Token(Token = "0x4001564")]
		BadGateway = 502,
		[Token(Token = "0x4001565")]
		ServiceUnavailable = 503,
		[Token(Token = "0x4001566")]
		GatewayTimeout = 504,
		[Token(Token = "0x4001567")]
		HttpVersionNotSupported = 505
	}
	[Token(Token = "0x2000316")]
	internal class HttpStreamAsyncResult : IAsyncResult
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AsyncCallback _callback;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _completed;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object _state;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object _sync;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ManualResetEvent _waitHandle;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal byte[] Buffer;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal int Count;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal Exception Error;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int Offset;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal int SyncRead;

		[Token(Token = "0x1700034E")]
		public object AsyncState
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x9A8318", Offset = "0x9A8318", VA = "0x9A8318", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public WaitHandle AsyncWaitHandle
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x9A8320", Offset = "0x9A8320", VA = "0x9A8320", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public bool CompletedSynchronously
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x9A8454", Offset = "0x9A8454", VA = "0x9A8454", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000351")]
		public bool IsCompleted
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x9A8468", Offset = "0x9A8468", VA = "0x9A8468", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x9A8274", Offset = "0x9A8274", VA = "0x9A8274")]
		public HttpStreamAsyncResult(AsyncCallback callback, object state)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x9A8530", Offset = "0x9A8530", VA = "0x9A8530")]
		public void Complete()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x9A869C", Offset = "0x9A869C", VA = "0x9A869C")]
		public void Complete(Exception exception)
		{
		}
	}
	[Token(Token = "0x2000317")]
	internal sealed class HttpUtility
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, char> _entities;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static char[] _hexChars;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static object _sync;

		[Token(Token = "0x17000352")]
		private static Dictionary<string, char> Entities
		{
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x9A86D4", Offset = "0x9A86D4", VA = "0x9A86D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x9ABC18", Offset = "0x9ABC18", VA = "0x9ABC18")]
		private static int getChar(byte[] bytes, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x9ABD6C", Offset = "0x9ABD6C", VA = "0x9ABD6C")]
		private static int getChar(string s, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x9ABE80", Offset = "0x9ABE80", VA = "0x9ABE80")]
		private static char[] getChars(MemoryStream buffer, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x9ABD1C", Offset = "0x9ABD1C", VA = "0x9ABD1C")]
		private static int getInt(byte b)
		{
			return default(int);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x9A882C", Offset = "0x9A882C", VA = "0x9A882C")]
		private static void initEntities()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x9ABEE8", Offset = "0x9ABEE8", VA = "0x9ABEE8")]
		private static bool notEncoded(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x9ABF2C", Offset = "0x9ABF2C", VA = "0x9ABF2C")]
		private static void urlEncodeChar(char c, Stream result, bool isUnicode)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x9AC214", Offset = "0x9AC214", VA = "0x9AC214")]
		private static void urlPathEncodeChar(char c, Stream result)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x9AC3C0", Offset = "0x9AC3C0", VA = "0x9AC3C0")]
		private static void writeCharBytes(IList buffer, char c, System.Text.Encoding encoding)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x9AC5BC", Offset = "0x9AC5BC", VA = "0x9AC5BC")]
		internal static Uri CreateRequestUrl(string requestUri, string host, bool websocketRequest, bool secure)
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x9AC8F0", Offset = "0x9AC8F0", VA = "0x9AC8F0")]
		internal static NameValueCollection ParseQueryStringInternally(string query, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x9ACE58", Offset = "0x9ACE58", VA = "0x9ACE58")]
		internal static string UrlDecodeInternally(byte[] bytes, int offset, int count, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x9AD344", Offset = "0x9AD344", VA = "0x9AD344")]
		internal static byte[] UrlDecodeToBytesInternally(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x9AD5DC", Offset = "0x9AD5DC", VA = "0x9AD5DC")]
		internal static byte[] UrlEncodeToBytesInternally(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x9AD830", Offset = "0x9AD830", VA = "0x9AD830")]
		internal static byte[] UrlEncodeUnicodeToBytesInternally(string s)
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x9ADA68", Offset = "0x9ADA68", VA = "0x9ADA68")]
		public static string HtmlAttributeEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x9ADC48", Offset = "0x9ADC48", VA = "0x9ADC48")]
		public static void HtmlAttributeEncode(string s, TextWriter output)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x9ADD08", Offset = "0x9ADD08", VA = "0x9ADD08")]
		public static string HtmlDecode(string s)
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x9AE2A0", Offset = "0x9AE2A0", VA = "0x9AE2A0")]
		public static void HtmlDecode(string s, TextWriter output)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x9AE360", Offset = "0x9AE360", VA = "0x9AE360")]
		public static string HtmlEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x9AE5EC", Offset = "0x9AE5EC", VA = "0x9AE5EC")]
		public static void HtmlEncode(string s, TextWriter output)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x9AE6AC", Offset = "0x9AE6AC", VA = "0x9AE6AC")]
		public static NameValueCollection ParseQueryString(string query)
		{
			return null;
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x9AE764", Offset = "0x9AE764", VA = "0x9AE764")]
		public static NameValueCollection ParseQueryString(string query, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x9AE838", Offset = "0x9AE838", VA = "0x9AE838")]
		public static string UrlDecode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x9ACB78", Offset = "0x9ACB78", VA = "0x9ACB78")]
		public static string UrlDecode(string s, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x9AE8A0", Offset = "0x9AE8A0", VA = "0x9AE8A0")]
		public static string UrlDecode(byte[] bytes, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x9AE960", Offset = "0x9AE960", VA = "0x9AE960")]
		public static string UrlDecode(byte[] bytes, int offset, int count, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x9AEAB4", Offset = "0x9AEAB4", VA = "0x9AEAB4")]
		public static byte[] UrlDecodeToBytes(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x9AEB30", Offset = "0x9AEB30", VA = "0x9AEB30")]
		public static byte[] UrlDecodeToBytes(string s)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x9AEB98", Offset = "0x9AEB98", VA = "0x9AEB98")]
		public static byte[] UrlDecodeToBytes(string s, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x9AEC74", Offset = "0x9AEC74", VA = "0x9AEC74")]
		public static byte[] UrlDecodeToBytes(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x9AEDB8", Offset = "0x9AEDB8", VA = "0x9AEDB8")]
		public static string UrlEncode(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x9AEE84", Offset = "0x9AEE84", VA = "0x9AEE84")]
		public static string UrlEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x9AEEEC", Offset = "0x9AEEEC", VA = "0x9AEEEC")]
		public static string UrlEncode(string s, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x9AF0D8", Offset = "0x9AF0D8", VA = "0x9AF0D8")]
		public static string UrlEncode(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x9AF2EC", Offset = "0x9AF2EC", VA = "0x9AF2EC")]
		public static byte[] UrlEncodeToBytes(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x9AF368", Offset = "0x9AF368", VA = "0x9AF368")]
		public static byte[] UrlEncodeToBytes(string s)
		{
			return null;
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x9AF3D0", Offset = "0x9AF3D0", VA = "0x9AF3D0")]
		public static byte[] UrlEncodeToBytes(string s, System.Text.Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x9AF1A8", Offset = "0x9AF1A8", VA = "0x9AF1A8")]
		public static byte[] UrlEncodeToBytes(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x9AF4AC", Offset = "0x9AF4AC", VA = "0x9AF4AC")]
		public static string UrlEncodeUnicode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x9AF550", Offset = "0x9AF550", VA = "0x9AF550")]
		public static byte[] UrlEncodeUnicodeToBytes(string s)
		{
			return null;
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x9AF5E8", Offset = "0x9AF5E8", VA = "0x9AF5E8")]
		public static string UrlPathEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x9AF84C", Offset = "0x9AF84C", VA = "0x9AF84C")]
		public HttpUtility()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class HttpVersion
	{
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly System.Version Version10;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly System.Version Version11;

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x9AF90C", Offset = "0x9AF90C", VA = "0x9AF90C")]
		public HttpVersion()
		{
		}
	}
	[Token(Token = "0x2000319")]
	internal enum InputChunkState
	{
		[Token(Token = "0x4001578")]
		None,
		[Token(Token = "0x4001579")]
		Body,
		[Token(Token = "0x400157A")]
		BodyFinished,
		[Token(Token = "0x400157B")]
		Trailer
	}
	[Token(Token = "0x200031A")]
	internal enum InputState
	{
		[Token(Token = "0x400157D")]
		RequestLine,
		[Token(Token = "0x400157E")]
		Headers
	}
	[Token(Token = "0x200031B")]
	internal enum LineState
	{
		[Token(Token = "0x4001580")]
		None,
		[Token(Token = "0x4001581")]
		CR,
		[Token(Token = "0x4001582")]
		LF
	}
	[Token(Token = "0x200031C")]
	internal class ListenerAsyncResult : IAsyncResult
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AsyncCallback _callback;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _completed;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HttpListenerContext _context;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Exception _exception;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ManualResetEvent _waitHandle;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object _state;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private object _sync;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _syncCompleted;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		internal bool EndCalled;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		internal bool InGet;

		[Token(Token = "0x17000353")]
		public object AsyncState
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0x9AFA78", Offset = "0x9AFA78", VA = "0x9AFA78", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		public WaitHandle AsyncWaitHandle
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0x9AFA80", Offset = "0x9AFA80", VA = "0x9AFA80", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public bool CompletedSynchronously
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0x9AFBB4", Offset = "0x9AFBB4", VA = "0x9AFBB4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000356")]
		public bool IsCompleted
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0x9AFBBC", Offset = "0x9AFBBC", VA = "0x9AFBBC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x9AF9D4", Offset = "0x9AF9D4", VA = "0x9AF9D4")]
		public ListenerAsyncResult(AsyncCallback callback, object state)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x9AFC84", Offset = "0x9AFC84", VA = "0x9AFC84")]
		private static void invokeCallback(object state)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x9AFD9C", Offset = "0x9AFD9C", VA = "0x9AFD9C")]
		internal void Complete(Exception exception)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x9AFFAC", Offset = "0x9AFFAC", VA = "0x9AFFAC")]
		internal void Complete(HttpListenerContext context)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x9AFFB4", Offset = "0x9AFFB4", VA = "0x9AFFB4")]
		internal void Complete(HttpListenerContext context, bool syncCompleted)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x9B0288", Offset = "0x9B0288", VA = "0x9B0288")]
		internal HttpListenerContext GetContext()
		{
			return null;
		}
	}
	[Token(Token = "0x200031D")]
	internal sealed class ListenerPrefix
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPAddress[] _addresses;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _host;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _original;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _path;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ushort _port;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _secure;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HttpListener Listener;

		[Token(Token = "0x17000357")]
		public IPAddress[] Addresses
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x9B04D8", Offset = "0x9B04D8", VA = "0x9B04D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001475")]
			[Address(RVA = "0x9B04E0", Offset = "0x9B04E0", VA = "0x9B04E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public string Host
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0x9B04E8", Offset = "0x9B04E8", VA = "0x9B04E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public string Path
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0x9B04F0", Offset = "0x9B04F0", VA = "0x9B04F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public int Port
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0x9B04F8", Offset = "0x9B04F8", VA = "0x9B04F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035B")]
		public bool Secure
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x9B0500", Offset = "0x9B0500", VA = "0x9B0500")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x9B02B8", Offset = "0x9B02B8", VA = "0x9B02B8")]
		public ListenerPrefix(string uriPrefix)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x9B02F4", Offset = "0x9B02F4", VA = "0x9B02F4")]
		private void parse(string uriPrefix)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x9B0508", Offset = "0x9B0508", VA = "0x9B0508")]
		public static void CheckUriPrefix(string uriPrefix)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x9B0798", Offset = "0x9B0798", VA = "0x9B0798", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x9B0818", Offset = "0x9B0818", VA = "0x9B0818", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x9B0838", Offset = "0x9B0838", VA = "0x9B0838", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200031E")]
	public class NetworkCredential
	{
		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _domain;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _password;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] _roles;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _username;

		[Token(Token = "0x1700035C")]
		public string Domain
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x9B0990", Offset = "0x9B0990", VA = "0x9B0990")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x9B09E4", Offset = "0x9B09E4", VA = "0x9B09E4")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public string Password
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x9B09EC", Offset = "0x9B09EC", VA = "0x9B09EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x9B0A40", Offset = "0x9B0A40", VA = "0x9B0A40")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public string[] Roles
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x9B0A48", Offset = "0x9B0A48", VA = "0x9B0A48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x9B0A50", Offset = "0x9B0A50", VA = "0x9B0A50")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public string UserName
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x9B0A58", Offset = "0x9B0A58", VA = "0x9B0A58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x9B0A60", Offset = "0x9B0A60", VA = "0x9B0A60")]
			internal set
			{
			}
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x9B0840", Offset = "0x9B0840", VA = "0x9B0840")]
		public NetworkCredential(string username, string password)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x9B08B0", Offset = "0x9B08B0", VA = "0x9B08B0")]
		public NetworkCredential(string username, string password, string domain, params string[] roles)
		{
		}
	}
	[Token(Token = "0x200031F")]
	internal sealed class QueryStringCollection : NameValueCollection
	{
		[Token(Token = "0x6001489")]
		[Address(RVA = "0x9B0A68", Offset = "0x9B0A68", VA = "0x9B0A68", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x9ACB70", Offset = "0x9ACB70", VA = "0x9ACB70")]
		public QueryStringCollection()
		{
		}
	}
	[Token(Token = "0x2000320")]
	internal class ReadBufferState
	{
		[Token(Token = "0x17000360")]
		public HttpStreamAsyncResult AsyncResult
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x9B0C48", Offset = "0x9B0C48", VA = "0x9B0C48")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600148D")]
			[Address(RVA = "0x9B0C50", Offset = "0x9B0C50", VA = "0x9B0C50")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public byte[] Buffer
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x9B0C58", Offset = "0x9B0C58", VA = "0x9B0C58")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0x9B0C60", Offset = "0x9B0C60", VA = "0x9B0C60")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public int Count
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0x9B0C68", Offset = "0x9B0C68", VA = "0x9B0C68")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x9B0C70", Offset = "0x9B0C70", VA = "0x9B0C70")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public int InitialCount
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x9B0C78", Offset = "0x9B0C78", VA = "0x9B0C78")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x9B0C80", Offset = "0x9B0C80", VA = "0x9B0C80")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public int Offset
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x9B0C88", Offset = "0x9B0C88", VA = "0x9B0C88")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x9B0C90", Offset = "0x9B0C90", VA = "0x9B0C90")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x9B0BEC", Offset = "0x9B0BEC", VA = "0x9B0BEC")]
		public ReadBufferState(byte[] buffer, int offset, int count, HttpStreamAsyncResult asyncResult)
		{
		}
	}
	[Token(Token = "0x2000321")]
	internal class RequestStream : Stream
	{
		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] _buffer;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _disposed;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _length;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _offset;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private long _remainingBody;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stream _stream;

		[Token(Token = "0x17000365")]
		public override bool CanRead
		{
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x9B0D50", Offset = "0x9B0D50", VA = "0x9B0D50", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000366")]
		public override bool CanSeek
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x9B0D58", Offset = "0x9B0D58", VA = "0x9B0D58", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000367")]
		public override bool CanWrite
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x9B0D60", Offset = "0x9B0D60", VA = "0x9B0D60", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000368")]
		public override long Length
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x9B0D68", Offset = "0x9B0D68", VA = "0x9B0D68", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000369")]
		public override long Position
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x9B0DA8", Offset = "0x9B0DA8", VA = "0x9B0DA8", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x9B0DE8", Offset = "0x9B0DE8", VA = "0x9B0DE8", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x9B0C98", Offset = "0x9B0C98", VA = "0x9B0C98")]
		internal RequestStream(Stream stream, byte[] buffer, int offset, int length)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x9B0CA0", Offset = "0x9B0CA0", VA = "0x9B0CA0")]
		internal RequestStream(Stream stream, byte[] buffer, int offset, int length, long contentlength)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x9B0E28", Offset = "0x9B0E28", VA = "0x9B0E28")]
		private int fillFromBuffer(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x9B1014", Offset = "0x9B1014", VA = "0x9B1014", Slot = "17")]
		public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x9B11A0", Offset = "0x9B11A0", VA = "0x9B11A0", Slot = "21")]
		public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x9B11E0", Offset = "0x9B11E0", VA = "0x9B11E0", Slot = "14")]
		public override void Close()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x9B11EC", Offset = "0x9B11EC", VA = "0x9B11EC", Slot = "18")]
		public override int EndRead(IAsyncResult asyncResult)
		{
			return default(int);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x9B1384", Offset = "0x9B1384", VA = "0x9B1384", Slot = "22")]
		public override void EndWrite(IAsyncResult asyncResult)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x9B13C4", Offset = "0x9B13C4", VA = "0x9B13C4", Slot = "16")]
		public override void Flush()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x9B13C8", Offset = "0x9B13C8", VA = "0x9B13C8", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x9B14C8", Offset = "0x9B14C8", VA = "0x9B14C8", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x9B1508", Offset = "0x9B1508", VA = "0x9B1508", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x9B1548", Offset = "0x9B1548", VA = "0x9B1548", Slot = "30")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}
	}
	[Token(Token = "0x2000322")]
	internal class ResponseStream : Stream
	{
		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] _crlf;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _disposed;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _ignoreErrors;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HttpListenerResponse _response;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stream _stream;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _trailerSent;

		[Token(Token = "0x1700036A")]
		public override bool CanRead
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x9B1624", Offset = "0x9B1624", VA = "0x9B1624", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036B")]
		public override bool CanSeek
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x9B162C", Offset = "0x9B162C", VA = "0x9B162C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036C")]
		public override bool CanWrite
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0x9B1634", Offset = "0x9B1634", VA = "0x9B1634", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036D")]
		public override long Length
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x9B163C", Offset = "0x9B163C", VA = "0x9B163C", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700036E")]
		public override long Position
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x9B167C", Offset = "0x9B167C", VA = "0x9B167C", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x9B16BC", Offset = "0x9B16BC", VA = "0x9B16BC", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x9B1588", Offset = "0x9B1588", VA = "0x9B1588")]
		internal ResponseStream(Stream stream, HttpListenerResponse response, bool ignoreErrors)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x9B16FC", Offset = "0x9B16FC", VA = "0x9B16FC")]
		private static byte[] getChunkSizeBytes(int size, bool final)
		{
			return null;
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x9B17F0", Offset = "0x9B17F0", VA = "0x9B17F0")]
		private MemoryStream getHeaders(bool closing)
		{
			return null;
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x9B1884", Offset = "0x9B1884", VA = "0x9B1884")]
		internal void WriteInternally(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x9B1940", Offset = "0x9B1940", VA = "0x9B1940", Slot = "17")]
		public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x9B1980", Offset = "0x9B1980", VA = "0x9B1980", Slot = "21")]
		public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x9B1D68", Offset = "0x9B1D68", VA = "0x9B1D68", Slot = "14")]
		public override void Close()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x9B2070", Offset = "0x9B2070", VA = "0x9B2070", Slot = "18")]
		public override int EndRead(IAsyncResult asyncResult)
		{
			return default(int);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x9B20B0", Offset = "0x9B20B0", VA = "0x9B20B0", Slot = "22")]
		public override void EndWrite(IAsyncResult asyncResult)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x9B223C", Offset = "0x9B223C", VA = "0x9B223C", Slot = "16")]
		public override void Flush()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x9B2240", Offset = "0x9B2240", VA = "0x9B2240", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x9B2280", Offset = "0x9B2280", VA = "0x9B2280", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x9B22C0", Offset = "0x9B22C0", VA = "0x9B22C0", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x9B2300", Offset = "0x9B2300", VA = "0x9B2300", Slot = "30")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000323")]
	[ComVisible(true)]
	public class WebHeaderCollection : NameValueCollection, ISerializable
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, HttpHeaderInfo> _headers;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _internallyCreated;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private HttpHeaderType _state;

		[Token(Token = "0x1700036F")]
		public override string[] AllKeys
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x9B43CC", Offset = "0x9B43CC", VA = "0x9B43CC", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public override int Count
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x9B43D4", Offset = "0x9B43D4", VA = "0x9B43D4", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000371")]
		public string this[HttpRequestHeader header]
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x9B43DC", Offset = "0x9B43DC", VA = "0x9B43DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x9B44F4", Offset = "0x9B44F4", VA = "0x9B44F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public string this[HttpResponseHeader header]
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x9B45C4", Offset = "0x9B45C4", VA = "0x9B45C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x9B46DC", Offset = "0x9B46DC", VA = "0x9B46DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public override KeysCollection Keys
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x9B47AC", Offset = "0x9B47AC", VA = "0x9B47AC", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x9B2884", Offset = "0x9B2884", VA = "0x9B2884")]
		static WebHeaderCollection()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x9B40F8", Offset = "0x9B40F8", VA = "0x9B40F8")]
		internal WebHeaderCollection(bool internallyCreated)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x9B4124", Offset = "0x9B4124", VA = "0x9B4124")]
		protected WebHeaderCollection(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x9B43AC", Offset = "0x9B43AC", VA = "0x9B43AC")]
		public WebHeaderCollection()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x9B47B4", Offset = "0x9B47B4", VA = "0x9B47B4")]
		private void add(string name, string value, bool ignoreRestricted)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x9B4ABC", Offset = "0x9B4ABC", VA = "0x9B4ABC")]
		private void addWithoutCheckingName(string name, string value)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x9B4BF0", Offset = "0x9B4BF0", VA = "0x9B4BF0")]
		private void addWithoutCheckingNameAndRestricted(string name, string value)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x9B4DC8", Offset = "0x9B4DC8", VA = "0x9B4DC8")]
		private static int checkColonSeparated(string header)
		{
			return default(int);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x9B4E58", Offset = "0x9B4E58", VA = "0x9B4E58")]
		private static HttpHeaderType checkHeaderType(string name)
		{
			return default(HttpHeaderType);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x9B48A4", Offset = "0x9B48A4", VA = "0x9B48A4")]
		private static string checkName(string name)
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x9B5108", Offset = "0x9B5108", VA = "0x9B5108")]
		private void checkRestricted(string name)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x9B5240", Offset = "0x9B5240", VA = "0x9B5240")]
		private void checkState(bool response)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x9B4C68", Offset = "0x9B4C68", VA = "0x9B4C68")]
		private static string checkValue(string value)
		{
			return null;
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x9B52E4", Offset = "0x9B52E4", VA = "0x9B52E4")]
		private static string convert(string key)
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x9B49D0", Offset = "0x9B49D0", VA = "0x9B49D0")]
		private void doWithCheckingState(Action<string, string> action, string name, string value, bool setState)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x9B53AC", Offset = "0x9B53AC", VA = "0x9B53AC")]
		private void doWithCheckingState(Action<string, string> action, string name, string value, bool response, bool setState)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x9B4B54", Offset = "0x9B4B54", VA = "0x9B4B54")]
		private void doWithoutCheckingName(Action<string, string> action, string name, string value)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x9B4F0C", Offset = "0x9B4F0C", VA = "0x9B4F0C")]
		private static HttpHeaderInfo getHeaderInfo(string name)
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x9B51C0", Offset = "0x9B51C0", VA = "0x9B51C0")]
		private static bool isRestricted(string name, bool response)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x9B542C", Offset = "0x9B542C", VA = "0x9B542C")]
		private void removeWithoutCheckingName(string name, string unuse)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x9B5458", Offset = "0x9B5458", VA = "0x9B5458")]
		private void setWithoutCheckingName(string name, string value)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x9B4454", Offset = "0x9B4454", VA = "0x9B4454")]
		internal static string Convert(HttpRequestHeader header)
		{
			return null;
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x9B463C", Offset = "0x9B463C", VA = "0x9B463C")]
		internal static string Convert(HttpResponseHeader header)
		{
			return null;
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x9B50E8", Offset = "0x9B50E8", VA = "0x9B50E8")]
		internal static bool IsHeaderName(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x9B52DC", Offset = "0x9B52DC", VA = "0x9B52DC")]
		internal static bool IsHeaderValue(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x9B54F0", Offset = "0x9B54F0", VA = "0x9B54F0")]
		internal static bool IsMultiValue(string headerName, bool response)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x9B5574", Offset = "0x9B5574", VA = "0x9B5574")]
		internal void RemoveInternally(string name)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x9B557C", Offset = "0x9B557C", VA = "0x9B557C")]
		internal void SetInternally(string header, bool response)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x9B5628", Offset = "0x9B5628", VA = "0x9B5628")]
		internal void SetInternally(string name, string value, bool response)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x9B56E4", Offset = "0x9B56E4", VA = "0x9B56E4")]
		internal string ToStringMultiValue(bool response)
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x9B5854", Offset = "0x9B5854", VA = "0x9B5854")]
		protected void AddWithoutValidate(string headerName, string headerValue)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x9B585C", Offset = "0x9B585C", VA = "0x9B585C")]
		public void Add(string header)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x9B44F8", Offset = "0x9B44F8", VA = "0x9B44F8")]
		public void Add(HttpRequestHeader header, string value)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x9B46E0", Offset = "0x9B46E0", VA = "0x9B46E0")]
		public void Add(HttpResponseHeader header, string value)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x9B5960", Offset = "0x9B5960", VA = "0x9B5960", Slot = "17")]
		public override void Add(string name, string value)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x9B5968", Offset = "0x9B5968", VA = "0x9B5968", Slot = "16")]
		public override void Clear()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x9B5984", Offset = "0x9B5984", VA = "0x9B5984", Slot = "22")]
		public override string Get(int index)
		{
			return null;
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x9B598C", Offset = "0x9B598C", VA = "0x9B598C", Slot = "18")]
		public override string Get(string name)
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x9B5994", Offset = "0x9B5994", VA = "0x9B5994", Slot = "13")]
		public override IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x9B599C", Offset = "0x9B599C", VA = "0x9B599C", Slot = "24")]
		public override string GetKey(int index)
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x9B59A4", Offset = "0x9B59A4", VA = "0x9B59A4", Slot = "23")]
		public override string[] GetValues(int index)
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x9B59C8", Offset = "0x9B59C8", VA = "0x9B59C8", Slot = "19")]
		public override string[] GetValues(string header)
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x9B59EC", Offset = "0x9B59EC", VA = "0x9B59EC", Slot = "11")]
		public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x9B5BC4", Offset = "0x9B5BC4", VA = "0x9B5BC4")]
		public static bool IsRestricted(string headerName)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x9B5C20", Offset = "0x9B5C20", VA = "0x9B5C20")]
		public static bool IsRestricted(string headerName, bool response)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x9B5C88", Offset = "0x9B5C88", VA = "0x9B5C88", Slot = "12")]
		public override void OnDeserialization(object sender)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x9B5C8C", Offset = "0x9B5C8C", VA = "0x9B5C8C")]
		public void Remove(HttpRequestHeader header)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x9B5D54", Offset = "0x9B5D54", VA = "0x9B5D54")]
		public void Remove(HttpResponseHeader header)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x9B5E1C", Offset = "0x9B5E1C", VA = "0x9B5E1C", Slot = "21")]
		public override void Remove(string name)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x9B5EE0", Offset = "0x9B5EE0", VA = "0x9B5EE0")]
		public void Set(HttpRequestHeader header, string value)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x9B5FAC", Offset = "0x9B5FAC", VA = "0x9B5FAC")]
		public void Set(HttpResponseHeader header, string value)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x9B6078", Offset = "0x9B6078", VA = "0x9B6078", Slot = "20")]
		public override void Set(string name, string value)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x9B6140", Offset = "0x9B6140", VA = "0x9B6140")]
		public byte[] ToByteArray()
		{
			return null;
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x9B6190", Offset = "0x9B6190", VA = "0x9B6190", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x9B62F0", Offset = "0x9B62F0", VA = "0x9B62F0", Slot = "9")]
		private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}
	}
}
namespace WebSocketSharp.Net.WebSockets
{
	[Token(Token = "0x2000327")]
	public class HttpListenerWebSocketContext : WebSocketContext
	{
		[Token(Token = "0x2000328")]
		[CompilerGenerated]
		private sealed class <get_SecWebSocketProtocols>d__28 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HttpListenerWebSocketContext <>4__this;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string[] <>7__wrap1;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x17000386")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x600151C")]
				[Address(RVA = "0x9B6C38", Offset = "0x9B6C38", VA = "0x9B6C38", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000387")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600151E")]
				[Address(RVA = "0x9B6C80", Offset = "0x9B6C80", VA = "0x9B6C80", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001519")]
			[Address(RVA = "0x9B6990", Offset = "0x9B6990", VA = "0x9B6990")]
			[DebuggerHidden]
			public <get_SecWebSocketProtocols>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x600151A")]
			[Address(RVA = "0x9B6B04", Offset = "0x9B6B04", VA = "0x9B6B04", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600151B")]
			[Address(RVA = "0x9B6B08", Offset = "0x9B6B08", VA = "0x9B6B08", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600151D")]
			[Address(RVA = "0x9B6C40", Offset = "0x9B6C40", VA = "0x9B6C40", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600151F")]
			[Address(RVA = "0x9B6C88", Offset = "0x9B6C88", VA = "0x9B6C88", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001520")]
			[Address(RVA = "0x9B6D34", Offset = "0x9B6D34", VA = "0x9B6D34", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HttpListenerContext _context;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WebSocket _websocket;

		[Token(Token = "0x17000374")]
		internal WebSocketStream Stream
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x9B669C", Offset = "0x9B669C", VA = "0x9B669C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public override CookieCollection CookieCollection
		{
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x9B66C0", Offset = "0x9B66C0", VA = "0x9B66C0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		public override NameValueCollection Headers
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x9B66E4", Offset = "0x9B66E4", VA = "0x9B66E4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public override string Host
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x9B6708", Offset = "0x9B6708", VA = "0x9B6708", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000378")]
		public override bool IsAuthenticated
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x9B676C", Offset = "0x9B676C", VA = "0x9B676C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000379")]
		public override bool IsLocal
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x9B6790", Offset = "0x9B6790", VA = "0x9B6790", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037A")]
		public override bool IsSecureConnection
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x9B67B4", Offset = "0x9B67B4", VA = "0x9B67B4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037B")]
		public override bool IsWebSocketRequest
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x9B67D8", Offset = "0x9B67D8", VA = "0x9B67D8", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037C")]
		public override string Origin
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x9B67FC", Offset = "0x9B67FC", VA = "0x9B67FC", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public override NameValueCollection QueryString
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x9B6860", Offset = "0x9B6860", VA = "0x9B6860", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		public override Uri RequestUri
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x9B6884", Offset = "0x9B6884", VA = "0x9B6884", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037F")]
		public override string SecWebSocketKey
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x9B68A8", Offset = "0x9B68A8", VA = "0x9B68A8", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		public override IEnumerable<string> SecWebSocketProtocols
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x9B690C", Offset = "0x9B690C", VA = "0x9B690C", Slot = "15")]
			[IteratorStateMachine(typeof(<get_SecWebSocketProtocols>d__28))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000381")]
		public override string SecWebSocketVersion
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x9B69C4", Offset = "0x9B69C4", VA = "0x9B69C4", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		public override IPEndPoint ServerEndPoint
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x9B6A28", Offset = "0x9B6A28", VA = "0x9B6A28", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		public override IPrincipal User
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x9B6A4C", Offset = "0x9B6A4C", VA = "0x9B6A4C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public override IPEndPoint UserEndPoint
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x9B6A68", Offset = "0x9B6A68", VA = "0x9B6A68", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public override WebSocket WebSocket
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0x9B6A8C", Offset = "0x9B6A8C", VA = "0x9B6A8C", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x9B65E8", Offset = "0x9B65E8", VA = "0x9B65E8")]
		internal HttpListenerWebSocketContext(HttpListenerContext context, string protocol, Logger logger)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x9B6A94", Offset = "0x9B6A94", VA = "0x9B6A94")]
		internal void Close()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x9B6ABC", Offset = "0x9B6ABC", VA = "0x9B6ABC")]
		internal void Close(HttpStatusCode code)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x9B6ADC", Offset = "0x9B6ADC", VA = "0x9B6ADC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000329")]
	public class TcpListenerWebSocketContext : WebSocketContext
	{
		[Token(Token = "0x200032A")]
		[CompilerGenerated]
		private sealed class <get_SecWebSocketProtocols>d__35 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TcpListenerWebSocketContext <>4__this;

			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string[] <>7__wrap1;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x1700039A")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x600153C")]
				[Address(RVA = "0x9B7B44", Offset = "0x9B7B44", VA = "0x9B7B44", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600153E")]
				[Address(RVA = "0x9B7B8C", Offset = "0x9B7B8C", VA = "0x9B7B8C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001539")]
			[Address(RVA = "0x9B73C0", Offset = "0x9B73C0", VA = "0x9B73C0")]
			[DebuggerHidden]
			public <get_SecWebSocketProtocols>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600153A")]
			[Address(RVA = "0x9B7A18", Offset = "0x9B7A18", VA = "0x9B7A18", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600153B")]
			[Address(RVA = "0x9B7A1C", Offset = "0x9B7A1C", VA = "0x9B7A1C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600153D")]
			[Address(RVA = "0x9B7B4C", Offset = "0x9B7B4C", VA = "0x9B7B4C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600153F")]
			[Address(RVA = "0x9B7B94", Offset = "0x9B7B94", VA = "0x9B7B94", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001540")]
			[Address(RVA = "0x9B7C40", Offset = "0x9B7C40", VA = "0x9B7C40", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TcpClient _client;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CookieCollection _cookies;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NameValueCollection _queryString;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandshakeRequest _request;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _secure;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WebSocketStream _stream;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Uri _uri;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IPrincipal _user;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WebSocket _websocket;

		[Token(Token = "0x17000388")]
		internal WebSocketStream Stream
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x9B6F50", Offset = "0x9B6F50", VA = "0x9B6F50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000389")]
		public override CookieCollection CookieCollection
		{
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x9B6F58", Offset = "0x9B6F58", VA = "0x9B6F58", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038A")]
		public override NameValueCollection Headers
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x9B6FA4", Offset = "0x9B6FA4", VA = "0x9B6FA4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		public override string Host
		{
			[Token(Token = "0x6001525")]
			[Address(RVA = "0x9B6FC0", Offset = "0x9B6FC0", VA = "0x9B6FC0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		public override bool IsAuthenticated
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x9B701C", Offset = "0x9B701C", VA = "0x9B701C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038D")]
		public override bool IsLocal
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x9B7144", Offset = "0x9B7144", VA = "0x9B7144", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038E")]
		public override bool IsSecureConnection
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x9B7170", Offset = "0x9B7170", VA = "0x9B7170", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038F")]
		public override bool IsWebSocketRequest
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x9B7178", Offset = "0x9B7178", VA = "0x9B7178", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000390")]
		public override string Origin
		{
			[Token(Token = "0x600152A")]
			[Address(RVA = "0x9B7194", Offset = "0x9B7194", VA = "0x9B7194", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		public override NameValueCollection QueryString
		{
			[Token(Token = "0x600152B")]
			[Address(RVA = "0x9B71F0", Offset = "0x9B71F0", VA = "0x9B71F0", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		public override Uri RequestUri
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0x9B72D8", Offset = "0x9B72D8", VA = "0x9B72D8", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		public override string SecWebSocketKey
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x9B72E0", Offset = "0x9B72E0", VA = "0x9B72E0", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		public override IEnumerable<string> SecWebSocketProtocols
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x9B733C", Offset = "0x9B733C", VA = "0x9B733C", Slot = "15")]
			[IteratorStateMachine(typeof(<get_SecWebSocketProtocols>d__35))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		public override string SecWebSocketVersion
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x9B73F4", Offset = "0x9B73F4", VA = "0x9B73F4", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public override IPEndPoint ServerEndPoint
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x9B7450", Offset = "0x9B7450", VA = "0x9B7450", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public override IPrincipal User
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x9B74E0", Offset = "0x9B74E0", VA = "0x9B74E0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		public override IPEndPoint UserEndPoint
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x9B74E8", Offset = "0x9B74E8", VA = "0x9B74E8", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public override WebSocket WebSocket
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x9B7578", Offset = "0x9B7578", VA = "0x9B7578", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x9B6D38", Offset = "0x9B6D38", VA = "0x9B6D38")]
		internal TcpListenerWebSocketContext(TcpClient client, string protocol, bool secure, X509Certificate cert, Logger logger)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x9B7580", Offset = "0x9B7580", VA = "0x9B7580")]
		internal void Close()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x9B75B0", Offset = "0x9B75B0", VA = "0x9B75B0")]
		internal void Close(HttpStatusCode code)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x9B75E0", Offset = "0x9B75E0", VA = "0x9B75E0")]
		internal void SendAuthChallenge(string challenge)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x9B7710", Offset = "0x9B7710", VA = "0x9B7710")]
		internal void SetUser(AuthenticationSchemes scheme, string realm, Func<IIdentity, NetworkCredential> credentialsFinder)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x9B79F8", Offset = "0x9B79F8", VA = "0x9B79F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200032B")]
	public abstract class WebSocketContext
	{
		[Token(Token = "0x1700039C")]
		public abstract CookieCollection CookieCollection
		{
			[Token(Token = "0x6001542")]
			get;
		}

		[Token(Token = "0x1700039D")]
		public abstract NameValueCollection Headers
		{
			[Token(Token = "0x6001543")]
			get;
		}

		[Token(Token = "0x1700039E")]
		public abstract string Host
		{
			[Token(Token = "0x6001544")]
			get;
		}

		[Token(Token = "0x1700039F")]
		public abstract bool IsAuthenticated
		{
			[Token(Token = "0x6001545")]
			get;
		}

		[Token(Token = "0x170003A0")]
		public abstract bool IsLocal
		{
			[Token(Token = "0x6001546")]
			get;
		}

		[Token(Token = "0x170003A1")]
		public abstract bool IsSecureConnection
		{
			[Token(Token = "0x6001547")]
			get;
		}

		[Token(Token = "0x170003A2")]
		public abstract bool IsWebSocketRequest
		{
			[Token(Token = "0x6001548")]
			get;
		}

		[Token(Token = "0x170003A3")]
		public abstract string Origin
		{
			[Token(Token = "0x6001549")]
			get;
		}

		[Token(Token = "0x170003A4")]
		public abstract NameValueCollection QueryString
		{
			[Token(Token = "0x600154A")]
			get;
		}

		[Token(Token = "0x170003A5")]
		public abstract Uri RequestUri
		{
			[Token(Token = "0x600154B")]
			get;
		}

		[Token(Token = "0x170003A6")]
		public abstract string SecWebSocketKey
		{
			[Token(Token = "0x600154C")]
			get;
		}

		[Token(Token = "0x170003A7")]
		public abstract IEnumerable<string> SecWebSocketProtocols
		{
			[Token(Token = "0x600154D")]
			get;
		}

		[Token(Token = "0x170003A8")]
		public abstract string SecWebSocketVersion
		{
			[Token(Token = "0x600154E")]
			get;
		}

		[Token(Token = "0x170003A9")]
		public abstract IPEndPoint ServerEndPoint
		{
			[Token(Token = "0x600154F")]
			get;
		}

		[Token(Token = "0x170003AA")]
		public abstract IPrincipal User
		{
			[Token(Token = "0x6001550")]
			get;
		}

		[Token(Token = "0x170003AB")]
		public abstract IPEndPoint UserEndPoint
		{
			[Token(Token = "0x6001551")]
			get;
		}

		[Token(Token = "0x170003AC")]
		public abstract WebSocket WebSocket
		{
			[Token(Token = "0x6001552")]
			get;
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x9B6694", Offset = "0x9B6694", VA = "0x9B6694")]
		protected WebSocketContext()
		{
		}
	}
}
namespace WebSocketSharp.Net.Security
{
	[Token(Token = "0x200032C")]
	internal class SslStream : System.Net.Security.SslStream
	{
		[Token(Token = "0x170003AD")]
		public bool DataAvailable
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x9B7C70", Offset = "0x9B7C70", VA = "0x9B7C70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x9B7C44", Offset = "0x9B7C44", VA = "0x9B7C44")]
		public SslStream(NetworkStream innerStream)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x9B7C4C", Offset = "0x9B7C4C", VA = "0x9B7C4C")]
		public SslStream(NetworkStream innerStream, bool leaveInnerStreamOpen)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x9B7C58", Offset = "0x9B7C58", VA = "0x9B7C58")]
		public SslStream(NetworkStream innerStream, bool leaveInnerStreamOpen, RemoteCertificateValidationCallback userCertificateValidationCallback)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x9B7C64", Offset = "0x9B7C64", VA = "0x9B7C64")]
		public SslStream(NetworkStream innerStream, bool leaveInnerStreamOpen, RemoteCertificateValidationCallback userCertificateValidationCallback, LocalCertificateSelectionCallback userCertificateSelectionCallback)
		{
		}
	}
}
namespace SocketIO
{
	[Token(Token = "0x200032D")]
	public class Ack
	{
		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int packetId;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime time;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<JSONObject> action;

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x9B7D1C", Offset = "0x9B7D1C", VA = "0x9B7D1C")]
		public Ack(int packetId, Action<JSONObject> action)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x9B7DA4", Offset = "0x9B7DA4", VA = "0x9B7DA4")]
		public void Invoke(JSONObject ev)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x9B7DC8", Offset = "0x9B7DC8", VA = "0x9B7DC8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200032E")]
	public class Decoder
	{
		[Token(Token = "0x600155B")]
		[Address(RVA = "0x9B7E88", Offset = "0x9B7E88", VA = "0x9B7E88")]
		public Packet Decode(MessageEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x9B847C", Offset = "0x9B847C", VA = "0x9B847C")]
		public Decoder()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class Encoder
	{
		[Token(Token = "0x600155D")]
		[Address(RVA = "0x9B8484", Offset = "0x9B8484", VA = "0x9B8484")]
		public string Encode(Packet packet)
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x9B87E4", Offset = "0x9B87E4", VA = "0x9B87E4")]
		public Encoder()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public enum EnginePacketType
	{
		[Token(Token = "0x40015CF")]
		UNKNOWN = -1,
		[Token(Token = "0x40015D0")]
		OPEN,
		[Token(Token = "0x40015D1")]
		CLOSE,
		[Token(Token = "0x40015D2")]
		PING,
		[Token(Token = "0x40015D3")]
		PONG,
		[Token(Token = "0x40015D4")]
		MESSAGE,
		[Token(Token = "0x40015D5")]
		UPGRADE,
		[Token(Token = "0x40015D6")]
		NOOP
	}
	[Token(Token = "0x2000331")]
	public class Packet
	{
		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnginePacketType enginePacketType;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SocketPacketType socketPacketType;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int attachments;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nsp;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JSONObject json;

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x9B83B0", Offset = "0x9B83B0", VA = "0x9B83B0")]
		public Packet()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x9B885C", Offset = "0x9B885C", VA = "0x9B885C")]
		public Packet(EnginePacketType enginePacketType)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x9B87EC", Offset = "0x9B87EC", VA = "0x9B87EC")]
		public Packet(EnginePacketType enginePacketType, SocketPacketType socketPacketType, int attachments, string nsp, int id, JSONObject json)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x9B88C4", Offset = "0x9B88C4", VA = "0x9B88C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000332")]
	public class Parser
	{
		[Token(Token = "0x6001563")]
		[Address(RVA = "0x9B8B38", Offset = "0x9B8B38", VA = "0x9B8B38")]
		public SocketIOEvent Parse(JSONObject json)
		{
			return null;
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x9B8EDC", Offset = "0x9B8EDC", VA = "0x9B8EDC")]
		public Parser()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class SocketIOComponent : MonoBehaviour
	{
		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string url;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoConnect;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int reconnectDelay;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ackExpirationTime;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float pingInterval;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pingTimeout;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool connected;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool thPinging;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool thPong;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool wsConnected;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Thread socketThread;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread pingThread;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WebSocket ws;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Encoder encoder;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Decoder decoder;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Parser parser;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, List<Action<SocketIOEvent>>> handlers;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Ack> ackList;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int packetId;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private object eventQueueLock;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Queue<SocketIOEvent> eventQueue;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object ackQueueLock;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Queue<Packet> ackQueue;

		[Token(Token = "0x170003AE")]
		public WebSocket socket
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x9B8EE4", Offset = "0x9B8EE4", VA = "0x9B8EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		public string sid
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x9B8EEC", Offset = "0x9B8EEC", VA = "0x9B8EEC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x9B8EF4", Offset = "0x9B8EF4", VA = "0x9B8EF4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public bool IsConnected
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x9B8EFC", Offset = "0x9B8EFC", VA = "0x9B8EFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x9B8F14", Offset = "0x9B8F14", VA = "0x9B8F14")]
		public void Awake()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x9B93EC", Offset = "0x9B93EC", VA = "0x9B93EC")]
		public void Start()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x9B9554", Offset = "0x9B9554", VA = "0x9B9554")]
		public void Update()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x9B9CA8", Offset = "0x9B9CA8", VA = "0x9B9CA8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x9B9CDC", Offset = "0x9B9CDC", VA = "0x9B9CDC")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x9B93FC", Offset = "0x9B93FC", VA = "0x9B93FC")]
		public void Connect()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x9B9CF8", Offset = "0x9B9CF8", VA = "0x9B9CF8")]
		public void Close()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x9B9E10", Offset = "0x9B9E10", VA = "0x9B9E10")]
		public void On(string ev, Action<SocketIOEvent> callback)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x9B9F90", Offset = "0x9B9F90", VA = "0x9B9F90")]
		public void Off(string ev, Action<SocketIOEvent> callback)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x9BA0BC", Offset = "0x9BA0BC", VA = "0x9BA0BC")]
		public void Emit(string ev)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x9BA1F0", Offset = "0x9BA1F0", VA = "0x9BA1F0")]
		public void Emit(string ev, Action<JSONObject> action)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x9BA330", Offset = "0x9BA330", VA = "0x9BA330")]
		public void Emit(string ev, JSONObject data)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x9BA3A0", Offset = "0x9BA3A0", VA = "0x9BA3A0")]
		public void Emit(string ev, JSONObject data, Action<JSONObject> action)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x9BA4E8", Offset = "0x9BA4E8", VA = "0x9BA4E8")]
		private void RunSocketThread(object obj)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x9BA5B0", Offset = "0x9BA5B0", VA = "0x9BA5B0")]
		private void RunPingThread(object obj)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x9BA124", Offset = "0x9BA124", VA = "0x9BA124")]
		private void EmitMessage(int id, string raw)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x9B9D14", Offset = "0x9B9D14", VA = "0x9B9D14")]
		private void EmitClose()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x9BA87C", Offset = "0x9BA87C", VA = "0x9BA87C")]
		private void EmitPacket(Packet packet)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x9BA928", Offset = "0x9BA928", VA = "0x9BA928")]
		private void OnOpen(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x9BA970", Offset = "0x9BA970", VA = "0x9BA970")]
		private void OnMessage(object sender, MessageEventArgs e)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x9BAA4C", Offset = "0x9BAA4C", VA = "0x9BAA4C")]
		private void HandleOpen(Packet packet)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x9BAADC", Offset = "0x9BAADC", VA = "0x9BAADC")]
		private void HandlePing()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x9BAB40", Offset = "0x9BAB40", VA = "0x9BAB40")]
		private void HandlePong()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x9BAB64", Offset = "0x9BAB64", VA = "0x9BAB64")]
		private void HandleMessage(Packet packet)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x9BADC4", Offset = "0x9BADC4", VA = "0x9BADC4")]
		private void OnError(object sender, ErrorEventArgs e)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x9BAE0C", Offset = "0x9BAE0C", VA = "0x9BAE0C")]
		private void OnClose(object sender, CloseEventArgs e)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x9B9C34", Offset = "0x9B9C34", VA = "0x9B9C34")]
		private void EmitEvent(string type)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x9B98D0", Offset = "0x9B98D0", VA = "0x9B98D0")]
		private void EmitEvent(SocketIOEvent ev)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x9B9B1C", Offset = "0x9B9B1C", VA = "0x9B9B1C")]
		private void InvokeAck(Packet packet)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x9BAE54", Offset = "0x9BAE54", VA = "0x9BAE54")]
		public SocketIOComponent()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class SocketIOEvent
	{
		[Token(Token = "0x170003B1")]
		public string name
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x9BAED0", Offset = "0x9BAED0", VA = "0x9BAED0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x9BAED8", Offset = "0x9BAED8", VA = "0x9BAED8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		public JSONObject data
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x9BAEE0", Offset = "0x9BAEE0", VA = "0x9BAEE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x9BAEE8", Offset = "0x9BAEE8", VA = "0x9BAEE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x9B8E90", Offset = "0x9B8E90", VA = "0x9B8E90")]
		public SocketIOEvent(string name)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x9B8E98", Offset = "0x9B8E98", VA = "0x9B8E98")]
		public SocketIOEvent(string name, JSONObject data)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x9BAEF0", Offset = "0x9BAEF0", VA = "0x9BAEF0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000335")]
	public class SocketIOException : Exception
	{
		[Token(Token = "0x600158E")]
		[Address(RVA = "0x9BAF3C", Offset = "0x9BAF3C", VA = "0x9BAF3C")]
		public SocketIOException()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x9B8E28", Offset = "0x9B8E28", VA = "0x9B8E28")]
		public SocketIOException(string message)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x9B840C", Offset = "0x9B840C", VA = "0x9B840C")]
		public SocketIOException(string message, Exception innerException)
		{
		}
	}
	[Token(Token = "0x2000336")]
	public enum SocketPacketType
	{
		[Token(Token = "0x40015F8")]
		UNKNOWN = -1,
		[Token(Token = "0x40015F9")]
		CONNECT,
		[Token(Token = "0x40015FA")]
		DISCONNECT,
		[Token(Token = "0x40015FB")]
		EVENT,
		[Token(Token = "0x40015FC")]
		ACK,
		[Token(Token = "0x40015FD")]
		ERROR,
		[Token(Token = "0x40015FE")]
		BINARY_EVENT,
		[Token(Token = "0x40015FF")]
		BINARY_ACK,
		[Token(Token = "0x4001600")]
		CONTROL
	}
}
namespace VRTK
{
	[Token(Token = "0x2000337")]
	public static class Bezier
	{
		[Token(Token = "0x6001591")]
		[Address(RVA = "0x9BAF94", Offset = "0x9BAF94", VA = "0x9BAF94")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x9BB008", Offset = "0x9BB008", VA = "0x9BB008")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x9BB064", Offset = "0x9BB064", VA = "0x9BB064")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x9BB110", Offset = "0x9BB110", VA = "0x9BB110")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000338")]
	public class CurveGenerator : MonoBehaviour
	{
		[Token(Token = "0x2000339")]
		private enum BezierControlPointMode
		{
			[Token(Token = "0x4001609")]
			Free,
			[Token(Token = "0x400160A")]
			Aligned,
			[Token(Token = "0x400160B")]
			Mirrored
		}

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] points;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] items;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BezierControlPointMode[] modes;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool loop;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int frequency;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool customTracer;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool rescalePointerTracer;

		[Token(Token = "0x170003B3")]
		private bool Loop
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x9BB988", Offset = "0x9BB988", VA = "0x9BB988")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x9BB990", Offset = "0x9BB990", VA = "0x9BB990")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		private int ControlPointCount
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x9BBC38", Offset = "0x9BBC38", VA = "0x9BBC38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B5")]
		private int CurveCount
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x9BBF64", Offset = "0x9BBF64", VA = "0x9BBF64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x9BB1C0", Offset = "0x9BB1C0", VA = "0x9BB1C0")]
		public void Create(int setFrequency, float radius, GameObject tracer, bool rescaleTracer = false)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x9BB520", Offset = "0x9BB520", VA = "0x9BB520")]
		public void SetPoints(Vector3[] controlPoints, Material material)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x9BB960", Offset = "0x9BB960", VA = "0x9BB960")]
		public void TogglePoints(bool state)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x9BB434", Offset = "0x9BB434", VA = "0x9BB434")]
		private GameObject CreateSphere()
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x9BBC54", Offset = "0x9BBC54", VA = "0x9BBC54")]
		private Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x9BB9F8", Offset = "0x9BB9F8", VA = "0x9BB9F8")]
		private void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x9BBC90", Offset = "0x9BBC90", VA = "0x9BBC90")]
		private void EnforceMode(int index)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x9BBF9C", Offset = "0x9BBF9C", VA = "0x9BBF9C")]
		private Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x9BB5A4", Offset = "0x9BB5A4", VA = "0x9BB5A4")]
		private void SetObjects(Material material)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x9BC10C", Offset = "0x9BC10C", VA = "0x9BC10C")]
		private void setMeshMaterial(GameObject item, Material material)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x9BC230", Offset = "0x9BC230", VA = "0x9BC230")]
		private void setSkinnedMeshMaterial(GameObject item, Material material)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x9BC354", Offset = "0x9BC354", VA = "0x9BC354")]
		public CurveGenerator()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public delegate void TeleportEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x200033B")]
	public class VRTK_BasicTeleport : MonoBehaviour
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 32f)]
		public float distanceBlinkDelay;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool headsetPositionCompensation;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ignoreTargetWithTagOrClass;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The max distance the nav mesh edge can be from the teleport destination to be considered valid.\n[0 = ignore nav mesh limits]")]
		public float navMeshLimitDistance;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform eyeCamera;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool adjustYForTerrain;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		protected bool enableTeleport;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float blinkPause;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float fadeInTime;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float maxBlinkTransitionSpeed;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float maxBlinkDistance;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SteamVR_ControllerManager controllerManager;

		[Token(Token = "0x14000008")]
		public event TeleportEventHandler Teleporting
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x9BC54C", Offset = "0x9BC54C", VA = "0x9BC54C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x9BC5E8", Offset = "0x9BC5E8", VA = "0x9BC5E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event TeleportEventHandler Teleported
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x9BC684", Offset = "0x9BC684", VA = "0x9BC684")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x9BC720", Offset = "0x9BC720", VA = "0x9BC720")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x9BC7BC", Offset = "0x9BC7BC", VA = "0x9BC7BC")]
		public void InitDestinationSetListener(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x9BC93C", Offset = "0x9BC93C", VA = "0x9BC93C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x9BC9CC", Offset = "0x9BC9CC", VA = "0x9BC9CC")]
		public void SetPlayerObject(GameObject obj, VRTK_PlayerObject.ObjectTypes objType)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x9BCA88", Offset = "0x9BCA88", VA = "0x9BCA88", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x9BCDFC", Offset = "0x9BCDFC", VA = "0x9BCDFC", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x9BCE1C", Offset = "0x9BCE1C", VA = "0x9BCE1C")]
		protected void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x9BCE68", Offset = "0x9BCE68", VA = "0x9BCE68")]
		protected void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x9BCEB4", Offset = "0x9BCEB4", VA = "0x9BCEB4", Slot = "7")]
		protected virtual void Blink(float transitionSpeed)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x9BCF14", Offset = "0x9BCF14", VA = "0x9BCF14", Slot = "8")]
		protected virtual bool ValidLocation(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x9BD108", Offset = "0x9BD108", VA = "0x9BD108", Slot = "9")]
		protected virtual void DoTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x9BD448", Offset = "0x9BD448", VA = "0x9BD448", Slot = "10")]
		protected virtual void SetNewPosition(Vector3 position, Transform target)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x9BD5A0", Offset = "0x9BD5A0", VA = "0x9BD5A0", Slot = "11")]
		protected virtual Vector3 GetNewPosition(Vector3 tipPosition, Transform target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x9BD4B4", Offset = "0x9BD4B4", VA = "0x9BD4B4")]
		protected Vector3 CheckTerrainCollision(Vector3 position, Transform target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x9BD338", Offset = "0x9BD338", VA = "0x9BD338")]
		private void CalculateBlinkDelay(float blinkSpeed, Vector3 newPosition)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x9BD66C", Offset = "0x9BD66C", VA = "0x9BD66C")]
		private void ReleaseBlink()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x9BCAB0", Offset = "0x9BCAB0", VA = "0x9BCAB0")]
		private void InitDestinationMarkerListeners(bool state)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x9BCC70", Offset = "0x9BCC70", VA = "0x9BCC70")]
		private void InitHeadsetCollisionListener(bool state)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x9BD674", Offset = "0x9BD674", VA = "0x9BD674")]
		private void DisableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x9BD67C", Offset = "0x9BD67C", VA = "0x9BD67C")]
		private void EnableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x9BD688", Offset = "0x9BD688", VA = "0x9BD688")]
		public VRTK_BasicTeleport()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class VRTK_BezierPointer : VRTK_WorldPointer
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float pointerLength;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int pointerDensity;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool showPointerCursor;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float pointerCursorRadius;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float beamCurveOffset;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject customPointerTracer;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject customPointerCursor;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Tooltip("Optional object that appears\nwhen the teleport is allowed")]
		public GameObject validTeleportLocationObject;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Tooltip("Adapt tracer instances to the curve length")]
		public bool rescalePointerTracer;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GameObject projectedBeamContainer;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject projectedBeamForward;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GameObject projectedBeamJoint;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GameObject projectedBeamDown;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private GameObject pointerCursor;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GameObject curvedBeamContainer;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private CurveGenerator curvedBeam;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject validTeleportLocationInstance;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Material customPointerMaterial;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Material beamTraceMaterial;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x9BD6B4", Offset = "0x9BD6B4", VA = "0x9BD6B4", Slot = "15")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x9BDA80", Offset = "0x9BDA80", VA = "0x9BDA80", Slot = "16")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x9BDC3C", Offset = "0x9BDC3C", VA = "0x9BDC3C", Slot = "17")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x9BE58C", Offset = "0x9BE58C", VA = "0x9BE58C", Slot = "18")]
		protected override void InitPointer()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x9BEC40", Offset = "0x9BEC40", VA = "0x9BEC40")]
		public new void SetPlayerObject(GameObject obj, VRTK_PlayerObject.ObjectTypes objType)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x9BECFC", Offset = "0x9BECFC", VA = "0x9BECFC", Slot = "27")]
		protected override void SetPointerMaterial()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x9BEF40", Offset = "0x9BEF40", VA = "0x9BEF40", Slot = "26")]
		protected override void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x9BF06C", Offset = "0x9BF06C", VA = "0x9BF06C", Slot = "21")]
		protected override void DisablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x9BEB30", Offset = "0x9BEB30", VA = "0x9BEB30")]
		private GameObject CreateCursor()
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x9BF0C0", Offset = "0x9BF0C0", VA = "0x9BF0C0")]
		private void TogglePointerCursor(bool state)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x9BD6FC", Offset = "0x9BD6FC", VA = "0x9BD6FC")]
		private void InitProjectedBeams()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x9BF140", Offset = "0x9BF140", VA = "0x9BF140")]
		private float GetForwardBeamLength()
		{
			return default(float);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x9BDD8C", Offset = "0x9BDD8C", VA = "0x9BDD8C")]
		private void ProjectForwardBeam()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x9BDEC4", Offset = "0x9BDEC4", VA = "0x9BDEC4")]
		private void ProjectDownBeam()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x9BE404", Offset = "0x9BE404", VA = "0x9BE404")]
		private void SetPointerCursor()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x9BE29C", Offset = "0x9BE29C", VA = "0x9BE29C")]
		private void DisplayCurvedBeam()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x9BF2F8", Offset = "0x9BF2F8", VA = "0x9BF2F8")]
		public VRTK_BezierPointer()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class VRTK_ControllerActions : MonoBehaviour
	{
		[Token(Token = "0x200033E")]
		[CompilerGenerated]
		private sealed class <HapticPulse>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float pulseInterval;

			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float duration;

			[Token(Token = "0x170003B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015E8")]
				[Address(RVA = "0x9C17F4", Offset = "0x9C17F4", VA = "0x9C17F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015EA")]
				[Address(RVA = "0x9C183C", Offset = "0x9C183C", VA = "0x9C183C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x9C16B8", Offset = "0x9C16B8", VA = "0x9C16B8")]
			[DebuggerHidden]
			public <HapticPulse>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60015E6")]
			[Address(RVA = "0x9C1720", Offset = "0x9C1720", VA = "0x9C1720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x9C1724", Offset = "0x9C1724", VA = "0x9C1724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015E9")]
			[Address(RVA = "0x9C17FC", Offset = "0x9C17FC", VA = "0x9C17FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033F")]
		[CompilerGenerated]
		private sealed class <CycleColor>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material material;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endColor;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170003B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015EE")]
				[Address(RVA = "0x9C191C", Offset = "0x9C191C", VA = "0x9C191C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015F0")]
				[Address(RVA = "0x9C1964", Offset = "0x9C1964", VA = "0x9C1964", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015EB")]
			[Address(RVA = "0x9C16E0", Offset = "0x9C16E0", VA = "0x9C16E0")]
			[DebuggerHidden]
			public <CycleColor>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60015EC")]
			[Address(RVA = "0x9C1844", Offset = "0x9C1844", VA = "0x9C1844", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015ED")]
			[Address(RVA = "0x9C1848", Offset = "0x9C1848", VA = "0x9C1848", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015EF")]
			[Address(RVA = "0x9C1924", Offset = "0x9C1924", VA = "0x9C1924", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool controllerVisible;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private ushort hapticPulseStrength;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private ushort maxHapticVibration;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<GameObject, Material> storedMaterials;

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x9C0344", Offset = "0x9C0344", VA = "0x9C0344")]
		public bool IsControllerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x9C034C", Offset = "0x9C034C", VA = "0x9C034C")]
		public void ToggleControllerModel(bool state, GameObject grabbedChildObject)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x9C05CC", Offset = "0x9C05CC", VA = "0x9C05CC")]
		public void SetControllerOpacity(float alpha)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x9C0924", Offset = "0x9C0924", VA = "0x9C0924")]
		public void HighlightControllerElement(GameObject element, Color? highlight, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x9C0CF0", Offset = "0x9C0CF0", VA = "0x9C0CF0")]
		public void UnhighlightControllerElement(GameObject element)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x9C0EA4", Offset = "0x9C0EA4", VA = "0x9C0EA4")]
		public void ToggleHighlightControllerElement(bool state, GameObject element, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x9C1000", Offset = "0x9C1000", VA = "0x9C1000")]
		public void ToggleHighlightTrigger(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x9C1174", Offset = "0x9C1174", VA = "0x9C1174")]
		public void ToggleHighlightGrip(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x9C1248", Offset = "0x9C1248", VA = "0x9C1248")]
		public void ToggleHighlightTouchpad(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x9C12D4", Offset = "0x9C12D4", VA = "0x9C12D4")]
		public void ToggleHighlightApplicationMenu(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x9C1360", Offset = "0x9C1360", VA = "0x9C1360")]
		public void ToggleHighlightController(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x9C14C4", Offset = "0x9C14C4", VA = "0x9C14C4")]
		public void TriggerHapticPulse(ushort strength)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x9C1504", Offset = "0x9C1504", VA = "0x9C1504")]
		public void TriggerHapticPulse(ushort strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x9C15F0", Offset = "0x9C15F0", VA = "0x9C15F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x9C16B4", Offset = "0x9C16B4", VA = "0x9C16B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x9C157C", Offset = "0x9C157C", VA = "0x9C157C")]
		[IteratorStateMachine(typeof(<HapticPulse>d__19))]
		private IEnumerator HapticPulse(float duration, int hapticPulseStrength, float pulseInterval)
		{
			return null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x9C0C18", Offset = "0x9C0C18", VA = "0x9C0C18")]
		[IteratorStateMachine(typeof(<CycleColor>d__20))]
		private IEnumerator CycleColor(Material material, Color startColor, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x9C108C", Offset = "0x9C108C", VA = "0x9C108C")]
		private void ToggleHighlightAlias(bool state, string transformPath, Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x9C1708", Offset = "0x9C1708", VA = "0x9C1708")]
		public VRTK_ControllerActions()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public struct ControllerInteractionEventArgs
	{
		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float touchpadAngle;
	}
	[Token(Token = "0x2000341")]
	public delegate void ControllerInteractionEventHandler(object sender, ControllerInteractionEventArgs e);
	[Token(Token = "0x2000342")]
	public class VRTK_ControllerEvents : MonoBehaviour
	{
		[Token(Token = "0x2000343")]
		public enum ButtonAlias
		{
			[Token(Token = "0x4001680")]
			Trigger_Hairline,
			[Token(Token = "0x4001681")]
			Trigger_Touch,
			[Token(Token = "0x4001682")]
			Trigger_Press,
			[Token(Token = "0x4001683")]
			Trigger_Click,
			[Token(Token = "0x4001684")]
			Grip,
			[Token(Token = "0x4001685")]
			Touchpad_Touch,
			[Token(Token = "0x4001686")]
			Touchpad_Press,
			[Token(Token = "0x4001687")]
			Application_Menu,
			[Token(Token = "0x4001688")]
			Undefined
		}

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonAlias pointerToggleButton;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ButtonAlias pointerSetButton;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonAlias grabToggleButton;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ButtonAlias useToggleButton;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ButtonAlias uiClickButton;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ButtonAlias menuToggleButton;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int axisFidelity;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool triggerPressed;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool triggerTouched;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool triggerHairlinePressed;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[HideInInspector]
		public bool triggerClicked;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool triggerAxisChanged;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool applicationMenuPressed;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[HideInInspector]
		public bool touchpadPressed;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[HideInInspector]
		public bool touchpadTouched;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool touchpadAxisChanged;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool gripPressed;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[HideInInspector]
		public bool pointerPressed;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[HideInInspector]
		public bool grabPressed;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool usePressed;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool uiClickPressed;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool menuPressed;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector2 touchpadAxis;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector2 triggerAxis;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float hairTriggerDelta;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 controllerVelocity;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 controllerAngularVelocity;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool izquierda;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float ultimoValorGatilloParaPress;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float ultimoValorGatilloParaTouch;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool ultimoValorTouchpadPulsado;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public uint index;

		[Token(Token = "0x1400000A")]
		public event ControllerInteractionEventHandler TriggerPressed
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x9C1B5C", Offset = "0x9C1B5C", VA = "0x9C1B5C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0x9C1BF8", Offset = "0x9C1BF8", VA = "0x9C1BF8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event ControllerInteractionEventHandler TriggerReleased
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x9C1C94", Offset = "0x9C1C94", VA = "0x9C1C94")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0x9C1D30", Offset = "0x9C1D30", VA = "0x9C1D30")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event ControllerInteractionEventHandler TriggerTouchStart
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x9C1DCC", Offset = "0x9C1DCC", VA = "0x9C1DCC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x9C1E68", Offset = "0x9C1E68", VA = "0x9C1E68")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event ControllerInteractionEventHandler TriggerTouchEnd
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0x9C1F04", Offset = "0x9C1F04", VA = "0x9C1F04")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0x9C1FA0", Offset = "0x9C1FA0", VA = "0x9C1FA0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event ControllerInteractionEventHandler TriggerHairlineStart
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x9C203C", Offset = "0x9C203C", VA = "0x9C203C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x9C20D8", Offset = "0x9C20D8", VA = "0x9C20D8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event ControllerInteractionEventHandler TriggerHairlineEnd
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x9C2174", Offset = "0x9C2174", VA = "0x9C2174")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001600")]
			[Address(RVA = "0x9C2210", Offset = "0x9C2210", VA = "0x9C2210")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event ControllerInteractionEventHandler TriggerClicked
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0x9C22AC", Offset = "0x9C22AC", VA = "0x9C22AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x9C2348", Offset = "0x9C2348", VA = "0x9C2348")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event ControllerInteractionEventHandler TriggerUnclicked
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0x9C23E4", Offset = "0x9C23E4", VA = "0x9C23E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001604")]
			[Address(RVA = "0x9C2480", Offset = "0x9C2480", VA = "0x9C2480")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event ControllerInteractionEventHandler TriggerAxisChanged
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0x9C251C", Offset = "0x9C251C", VA = "0x9C251C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001606")]
			[Address(RVA = "0x9C25B8", Offset = "0x9C25B8", VA = "0x9C25B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event ControllerInteractionEventHandler ApplicationMenuPressed
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0x9C2654", Offset = "0x9C2654", VA = "0x9C2654")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001608")]
			[Address(RVA = "0x9C26F0", Offset = "0x9C26F0", VA = "0x9C26F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event ControllerInteractionEventHandler ApplicationMenuReleased
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x9C278C", Offset = "0x9C278C", VA = "0x9C278C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600160A")]
			[Address(RVA = "0x9C2828", Offset = "0x9C2828", VA = "0x9C2828")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event ControllerInteractionEventHandler GripPressed
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x9C28C4", Offset = "0x9C28C4", VA = "0x9C28C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x9C2960", Offset = "0x9C2960", VA = "0x9C2960")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event ControllerInteractionEventHandler GripReleased
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x9C29FC", Offset = "0x9C29FC", VA = "0x9C29FC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600160E")]
			[Address(RVA = "0x9C2A98", Offset = "0x9C2A98", VA = "0x9C2A98")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event ControllerInteractionEventHandler TouchpadPressed
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0x9C2B34", Offset = "0x9C2B34", VA = "0x9C2B34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x9C2BD0", Offset = "0x9C2BD0", VA = "0x9C2BD0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event ControllerInteractionEventHandler TouchpadReleased
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x9C2C6C", Offset = "0x9C2C6C", VA = "0x9C2C6C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001612")]
			[Address(RVA = "0x9C2D08", Offset = "0x9C2D08", VA = "0x9C2D08")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event ControllerInteractionEventHandler TouchpadTouchStart
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x9C2DA4", Offset = "0x9C2DA4", VA = "0x9C2DA4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001614")]
			[Address(RVA = "0x9C2E40", Offset = "0x9C2E40", VA = "0x9C2E40")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event ControllerInteractionEventHandler TouchpadTouchEnd
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0x9C2EDC", Offset = "0x9C2EDC", VA = "0x9C2EDC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001616")]
			[Address(RVA = "0x9C2F78", Offset = "0x9C2F78", VA = "0x9C2F78")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event ControllerInteractionEventHandler TouchpadAxisChanged
		{
			[Token(Token = "0x6001617")]
			[Address(RVA = "0x9C3014", Offset = "0x9C3014", VA = "0x9C3014")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001618")]
			[Address(RVA = "0x9C30B0", Offset = "0x9C30B0", VA = "0x9C30B0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event ControllerInteractionEventHandler AliasPointerOn
		{
			[Token(Token = "0x6001619")]
			[Address(RVA = "0x9C314C", Offset = "0x9C314C", VA = "0x9C314C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600161A")]
			[Address(RVA = "0x9C31E8", Offset = "0x9C31E8", VA = "0x9C31E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event ControllerInteractionEventHandler AliasPointerOff
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x9C3284", Offset = "0x9C3284", VA = "0x9C3284")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600161C")]
			[Address(RVA = "0x9C3320", Offset = "0x9C3320", VA = "0x9C3320")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event ControllerInteractionEventHandler AliasPointerSet
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x9C33BC", Offset = "0x9C33BC", VA = "0x9C33BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x9C3458", Offset = "0x9C3458", VA = "0x9C3458")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event ControllerInteractionEventHandler AliasGrabOn
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0x9C34F4", Offset = "0x9C34F4", VA = "0x9C34F4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001620")]
			[Address(RVA = "0x9C3590", Offset = "0x9C3590", VA = "0x9C3590")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event ControllerInteractionEventHandler AliasGrabOff
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x9C362C", Offset = "0x9C362C", VA = "0x9C362C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001622")]
			[Address(RVA = "0x9C36C8", Offset = "0x9C36C8", VA = "0x9C36C8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event ControllerInteractionEventHandler AliasUseOn
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0x9C3764", Offset = "0x9C3764", VA = "0x9C3764")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001624")]
			[Address(RVA = "0x9C3804", Offset = "0x9C3804", VA = "0x9C3804")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event ControllerInteractionEventHandler AliasUseOff
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0x9C38A4", Offset = "0x9C38A4", VA = "0x9C38A4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x9C3944", Offset = "0x9C3944", VA = "0x9C3944")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event ControllerInteractionEventHandler AliasMenuOn
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x9C39E4", Offset = "0x9C39E4", VA = "0x9C39E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0x9C3A84", Offset = "0x9C3A84", VA = "0x9C3A84")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event ControllerInteractionEventHandler AliasMenuOff
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0x9C3B24", Offset = "0x9C3B24", VA = "0x9C3B24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600162A")]
			[Address(RVA = "0x9C3BC4", Offset = "0x9C3BC4", VA = "0x9C3BC4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event ControllerInteractionEventHandler AliasUIClickOn
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0x9C3C64", Offset = "0x9C3C64", VA = "0x9C3C64")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600162C")]
			[Address(RVA = "0x9C3D04", Offset = "0x9C3D04", VA = "0x9C3D04")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event ControllerInteractionEventHandler AliasUIClickOff
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0x9C3DA4", Offset = "0x9C3DA4", VA = "0x9C3DA4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600162E")]
			[Address(RVA = "0x9C3E44", Offset = "0x9C3E44", VA = "0x9C3E44")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x9C3EE4", Offset = "0x9C3EE4", VA = "0x9C3EE4", Slot = "4")]
		public virtual void OnTriggerPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x9C3F34", Offset = "0x9C3F34", VA = "0x9C3F34", Slot = "5")]
		public virtual void OnTriggerReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x9C3F84", Offset = "0x9C3F84", VA = "0x9C3F84", Slot = "6")]
		public virtual void OnTriggerTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x9C3FD4", Offset = "0x9C3FD4", VA = "0x9C3FD4", Slot = "7")]
		public virtual void OnTriggerTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x9C4024", Offset = "0x9C4024", VA = "0x9C4024", Slot = "8")]
		public virtual void OnTriggerHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x9C4074", Offset = "0x9C4074", VA = "0x9C4074", Slot = "9")]
		public virtual void OnTriggerHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x9C40C4", Offset = "0x9C40C4", VA = "0x9C40C4", Slot = "10")]
		public virtual void OnTriggerClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x9C4114", Offset = "0x9C4114", VA = "0x9C4114", Slot = "11")]
		public virtual void OnTriggerUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x9C4164", Offset = "0x9C4164", VA = "0x9C4164", Slot = "12")]
		public virtual void OnTriggerAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x9C41B4", Offset = "0x9C41B4", VA = "0x9C41B4", Slot = "13")]
		public virtual void OnApplicationMenuPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x9C4204", Offset = "0x9C4204", VA = "0x9C4204", Slot = "14")]
		public virtual void OnApplicationMenuReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x9C4254", Offset = "0x9C4254", VA = "0x9C4254", Slot = "15")]
		public virtual void OnGripPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x9C42A4", Offset = "0x9C42A4", VA = "0x9C42A4", Slot = "16")]
		public virtual void OnGripReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x9C42F4", Offset = "0x9C42F4", VA = "0x9C42F4", Slot = "17")]
		public virtual void OnTouchpadPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x9C4344", Offset = "0x9C4344", VA = "0x9C4344", Slot = "18")]
		public virtual void OnTouchpadReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x9C4394", Offset = "0x9C4394", VA = "0x9C4394", Slot = "19")]
		public virtual void OnTouchpadTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x9C43E4", Offset = "0x9C43E4", VA = "0x9C43E4", Slot = "20")]
		public virtual void OnTouchpadTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x9C4434", Offset = "0x9C4434", VA = "0x9C4434", Slot = "21")]
		public virtual void OnTouchpadAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x9C4484", Offset = "0x9C4484", VA = "0x9C4484", Slot = "22")]
		public virtual void OnAliasPointerOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x9C44D4", Offset = "0x9C44D4", VA = "0x9C44D4", Slot = "23")]
		public virtual void OnAliasPointerOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x9C4524", Offset = "0x9C4524", VA = "0x9C4524", Slot = "24")]
		public virtual void OnAliasPointerSet(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x9C4574", Offset = "0x9C4574", VA = "0x9C4574", Slot = "25")]
		public virtual void OnAliasGrabOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x9C45C4", Offset = "0x9C45C4", VA = "0x9C45C4", Slot = "26")]
		public virtual void OnAliasGrabOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x9C4614", Offset = "0x9C4614", VA = "0x9C4614", Slot = "27")]
		public virtual void OnAliasUseOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x9C4664", Offset = "0x9C4664", VA = "0x9C4664", Slot = "28")]
		public virtual void OnAliasUseOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x9C46B4", Offset = "0x9C46B4", VA = "0x9C46B4", Slot = "29")]
		public virtual void OnAliasUIClickOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x9C4704", Offset = "0x9C4704", VA = "0x9C4704", Slot = "30")]
		public virtual void OnAliasUIClickOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x9C4754", Offset = "0x9C4754", VA = "0x9C4754", Slot = "31")]
		public virtual void OnAliasMenuOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x9C47A4", Offset = "0x9C47A4", VA = "0x9C47A4", Slot = "32")]
		public virtual void OnAliasMenuOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x9C47F4", Offset = "0x9C47F4", VA = "0x9C47F4")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x9C4808", Offset = "0x9C4808", VA = "0x9C4808")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x9C4818", Offset = "0x9C4818", VA = "0x9C4818")]
		public Vector2 GetTouchpadAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x9C4824", Offset = "0x9C4824", VA = "0x9C4824")]
		public float GetTouchpadAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x9C48B0", Offset = "0x9C48B0", VA = "0x9C48B0")]
		public float GetTriggerAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x9C48B8", Offset = "0x9C48B8", VA = "0x9C48B8")]
		public float GetHairTriggerDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x9C48C0", Offset = "0x9C48C0", VA = "0x9C48C0")]
		public bool AnyButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x9C4908", Offset = "0x9C4908", VA = "0x9C4908")]
		private ControllerInteractionEventArgs SetButtonEvent(ref bool buttonBool, bool value, float buttonPressure)
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x9C4968", Offset = "0x9C4968", VA = "0x9C4968")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x9C49DC", Offset = "0x9C49DC", VA = "0x9C49DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x9C4868", Offset = "0x9C4868", VA = "0x9C4868")]
		private float CalculateTouchpadAxisAngle(Vector2 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x9C49E0", Offset = "0x9C49E0", VA = "0x9C49E0")]
		private void EmitAlias(ButtonAlias type, bool touchDown, float buttonPressure, ref bool buttonBool)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x9C4DDC", Offset = "0x9C4DDC", VA = "0x9C4DDC")]
		private bool Vector2ShallowEquals(Vector2 vectorA, Vector2 vectorB)
		{
			return default(bool);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x9C4F40", Offset = "0x9C4F40", VA = "0x9C4F40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x9C4F94", Offset = "0x9C4F94", VA = "0x9C4F94")]
		private void DisableEvents()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x9C52A0", Offset = "0x9C52A0", VA = "0x9C52A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x9C4804", Offset = "0x9C4804", VA = "0x9C4804")]
		private void SetVelocity()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x9C5974", Offset = "0x9C5974", VA = "0x9C5974")]
		public VRTK_ControllerEvents()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public struct DestinationMarkerEventArgs
	{
		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform target;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 destinationPosition;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool enableTeleport;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint controllerIndex;
	}
	[Token(Token = "0x2000345")]
	public delegate void DestinationMarkerEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x2000346")]
	public abstract class VRTK_DestinationMarker : MonoBehaviour
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableTeleport;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string invalidTargetWithTagOrClass;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float navMeshCheckDistance;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x14000027")]
		public event DestinationMarkerEventHandler DestinationMarkerEnter
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0x9C5C3C", Offset = "0x9C5C3C", VA = "0x9C5C3C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x9C5CD8", Offset = "0x9C5CD8", VA = "0x9C5CD8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event DestinationMarkerEventHandler DestinationMarkerExit
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x9C5D74", Offset = "0x9C5D74", VA = "0x9C5D74")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x9C5E10", Offset = "0x9C5E10", VA = "0x9C5E10")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event DestinationMarkerEventHandler DestinationMarkerSet
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x9C5EAC", Offset = "0x9C5EAC", VA = "0x9C5EAC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x9C5F48", Offset = "0x9C5F48", VA = "0x9C5F48")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x9C5FE4", Offset = "0x9C5FE4", VA = "0x9C5FE4", Slot = "4")]
		public virtual void OnDestinationMarkerEnter(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x9C6034", Offset = "0x9C6034", VA = "0x9C6034", Slot = "5")]
		public virtual void OnDestinationMarkerExit(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x9C6084", Offset = "0x9C6084", VA = "0x9C6084", Slot = "6")]
		public virtual void OnDestinationMarkerSet(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x9C60D4", Offset = "0x9C60D4", VA = "0x9C60D4", Slot = "7")]
		public virtual void SetInvalidTarget(string name)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x9C60DC", Offset = "0x9C60DC", VA = "0x9C60DC", Slot = "8")]
		public virtual void SetNavMeshCheckDistance(float distance)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x9C60E4", Offset = "0x9C60E4", VA = "0x9C60E4", Slot = "9")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x9C60F0", Offset = "0x9C60F0", VA = "0x9C60F0")]
		protected DestinationMarkerEventArgs SetDestinationMarkerEvent(float distance, Transform target, Vector3 position, uint controllerIndex)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x9C6174", Offset = "0x9C6174", VA = "0x9C6174")]
		protected VRTK_DestinationMarker()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public struct HeadsetCollisionEventArgs
	{
		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x2000348")]
	public delegate void HeadsetCollisionEventHandler(object sender, HeadsetCollisionEventArgs e);
	[Token(Token = "0x2000349")]
	public class VRTK_HeadsetCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color fadeColor;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string ignoreTargetWithTagOrClass;

		[Token(Token = "0x1400002A")]
		public event HeadsetCollisionEventHandler HeadsetCollisionDetect
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x9C634C", Offset = "0x9C634C", VA = "0x9C634C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x9C63E8", Offset = "0x9C63E8", VA = "0x9C63E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event HeadsetCollisionEventHandler HeadsetCollisionEnded
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x9C6484", Offset = "0x9C6484", VA = "0x9C6484")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001677")]
			[Address(RVA = "0x9C6520", Offset = "0x9C6520", VA = "0x9C6520")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x9C65BC", Offset = "0x9C65BC", VA = "0x9C65BC", Slot = "4")]
		public virtual void OnHeadsetCollisionDetect(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x9C65E8", Offset = "0x9C65E8", VA = "0x9C65E8", Slot = "5")]
		public virtual void OnHeadsetCollisionEnded(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x9C6614", Offset = "0x9C6614", VA = "0x9C6614")]
		private HeadsetCollisionEventArgs SetHeadsetCollisionEvent(Collider collider, Transform currentTransform)
		{
			return default(HeadsetCollisionEventArgs);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x9C665C", Offset = "0x9C665C", VA = "0x9C665C")]
		private void Start()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x9C674C", Offset = "0x9C674C", VA = "0x9C674C")]
		public void SetPlayerObject(GameObject obj, VRTK_PlayerObject.ObjectTypes objType)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x9C6808", Offset = "0x9C6808", VA = "0x9C6808")]
		private bool ValidTarget(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x9C68E0", Offset = "0x9C68E0", VA = "0x9C68E0")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x9C69FC", Offset = "0x9C69FC", VA = "0x9C69FC")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x9C6AEC", Offset = "0x9C6AEC", VA = "0x9C6AEC")]
		public VRTK_HeadsetCollisionFade()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public struct InteractableObjectEventArgs
	{
		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;
	}
	[Token(Token = "0x200034B")]
	public delegate void InteractableObjectEventHandler(object sender, InteractableObjectEventArgs e);
	[Token(Token = "0x200034C")]
	public class VRTK_InteractableObject : MonoBehaviour
	{
		[Token(Token = "0x200034D")]
		public enum GrabAttachType
		{
			[Token(Token = "0x40016CF")]
			Fixed_Joint,
			[Token(Token = "0x40016D0")]
			Spring_Joint,
			[Token(Token = "0x40016D1")]
			Track_Object,
			[Token(Token = "0x40016D2")]
			Rotator_Track,
			[Token(Token = "0x40016D3")]
			Child_Of_Controller,
			[Token(Token = "0x40016D4")]
			Climbable
		}

		[Token(Token = "0x200034E")]
		public enum AllowedController
		{
			[Token(Token = "0x40016D6")]
			Both,
			[Token(Token = "0x40016D7")]
			Left_Only,
			[Token(Token = "0x40016D8")]
			Right_Only
		}

		[Token(Token = "0x200034F")]
		public enum ControllerHideMode
		{
			[Token(Token = "0x40016DA")]
			Default,
			[Token(Token = "0x40016DB")]
			OverrideHide,
			[Token(Token = "0x40016DC")]
			OverrideDontHide
		}

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Touch Interactions", order = 1)]
		public bool highlightOnTouch;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color touchHighlightColor;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 rumbleOnTouch;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public AllowedController allowedTouchControllers;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ControllerHideMode hideControllerOnTouch;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Grab Interactions", order = 2)]
		public bool isGrabbable;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool isDroppable;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool isSwappable;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool holdButtonToGrab;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 rumbleOnGrab;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AllowedController allowedGrabControllers;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool precisionSnap;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightSnapHandle;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftSnapHandle;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ControllerHideMode hideControllerOnGrab;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Header("Grab Mechanics", order = 3)]
		public GrabAttachType grabAttachMechanic;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float detachThreshold;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float springJointStrength;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float springJointDamper;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float throwMultiplier;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float onGrabCollisionDelay;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Header("Use Interactions", order = 4)]
		public bool isUsable;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public bool useOnlyIfGrabbed;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		public bool holdButtonToUse;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		public bool pointerActivatesUseAction;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2 rumbleOnUse;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AllowedController allowedUseControllers;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public ControllerHideMode hideControllerOnUse;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Rigidbody rb;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected GameObject touchingObject;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected GameObject grabbingObject;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected GameObject usingObject;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int usingState;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Dictionary<string, Color[]> originalObjectColours;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform grabbedSnapHandle;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform trackPoint;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool customTrackPoint;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Transform originalControllerAttachPoint;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform previousParent;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool previousKinematicState;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool previousIsGrabbable;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		private bool forcedDropped;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		public bool noRomperJoint;

		[Token(Token = "0x170003BA")]
		public int UsingState
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x9C835C", Offset = "0x9C835C", VA = "0x9C835C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x9C8364", Offset = "0x9C8364", VA = "0x9C8364")]
			set
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event InteractableObjectEventHandler InteractableObjectTouched
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0x9C6CCC", Offset = "0x9C6CCC", VA = "0x9C6CCC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001686")]
			[Address(RVA = "0x9C6D68", Offset = "0x9C6D68", VA = "0x9C6D68")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event InteractableObjectEventHandler InteractableObjectUntouched
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x9C6E04", Offset = "0x9C6E04", VA = "0x9C6E04")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001688")]
			[Address(RVA = "0x9C6EA0", Offset = "0x9C6EA0", VA = "0x9C6EA0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event InteractableObjectEventHandler InteractableObjectGrabbed
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0x9C6F3C", Offset = "0x9C6F3C", VA = "0x9C6F3C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600168A")]
			[Address(RVA = "0x9C6FD8", Offset = "0x9C6FD8", VA = "0x9C6FD8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event InteractableObjectEventHandler InteractableObjectUngrabbed
		{
			[Token(Token = "0x600168B")]
			[Address(RVA = "0x9C7074", Offset = "0x9C7074", VA = "0x9C7074")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x9C7110", Offset = "0x9C7110", VA = "0x9C7110")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event InteractableObjectEventHandler InteractableObjectUsed
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0x9C71AC", Offset = "0x9C71AC", VA = "0x9C71AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600168E")]
			[Address(RVA = "0x9C7248", Offset = "0x9C7248", VA = "0x9C7248")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event InteractableObjectEventHandler InteractableObjectUnused
		{
			[Token(Token = "0x600168F")]
			[Address(RVA = "0x9C72E4", Offset = "0x9C72E4", VA = "0x9C72E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x9C7380", Offset = "0x9C7380", VA = "0x9C7380")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x9C741C", Offset = "0x9C741C", VA = "0x9C741C")]
		public bool CheckHideMode(bool defaultMode, ControllerHideMode overrideMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x9C743C", Offset = "0x9C743C", VA = "0x9C743C", Slot = "4")]
		public virtual void OnInteractableObjectTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x9C7464", Offset = "0x9C7464", VA = "0x9C7464", Slot = "5")]
		public virtual void OnInteractableObjectUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x9C748C", Offset = "0x9C748C", VA = "0x9C748C", Slot = "6")]
		public virtual void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x9C74B4", Offset = "0x9C74B4", VA = "0x9C74B4", Slot = "7")]
		public virtual void OnInteractableObjectUngrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x9C74DC", Offset = "0x9C74DC", VA = "0x9C74DC", Slot = "8")]
		public virtual void OnInteractableObjectUsed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x9C7504", Offset = "0x9C7504", VA = "0x9C7504", Slot = "9")]
		public virtual void OnInteractableObjectUnused(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x9C752C", Offset = "0x9C752C", VA = "0x9C752C")]
		public InteractableObjectEventArgs SetInteractableObjectEvent(GameObject interactingObject)
		{
			return default(InteractableObjectEventArgs);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x9C7548", Offset = "0x9C7548", VA = "0x9C7548")]
		public bool IsTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x9C75A8", Offset = "0x9C75A8", VA = "0x9C75A8")]
		public bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x9C7608", Offset = "0x9C7608", VA = "0x9C7608")]
		public bool IsUsing()
		{
			return default(bool);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x9C7668", Offset = "0x9C7668", VA = "0x9C7668", Slot = "10")]
		public virtual void StartTouching(GameObject currentTouchingObject)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x9C76B4", Offset = "0x9C76B4", VA = "0x9C76B4", Slot = "11")]
		public virtual void StopTouching(GameObject previousTouchingObject)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x9C7700", Offset = "0x9C7700", VA = "0x9C7700", Slot = "12")]
		public virtual void Grabbed(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x9C7CA4", Offset = "0x9C7CA4", VA = "0x9C7CA4", Slot = "13")]
		public virtual void Ungrabbed(GameObject previousGrabbingObject)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x9C76FC", Offset = "0x9C76FC", VA = "0x9C76FC")]
		private void StopUsingOnControllerChange(GameObject previousController)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x9C7D18", Offset = "0x9C7D18", VA = "0x9C7D18", Slot = "14")]
		public virtual void StartUsing(GameObject currentUsingObject)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x9C7D64", Offset = "0x9C7D64", VA = "0x9C7D64", Slot = "15")]
		public virtual void StopUsing(GameObject previousUsingObject)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x9C7DAC", Offset = "0x9C7DAC", VA = "0x9C7DAC", Slot = "16")]
		public virtual void ToggleHighlight(bool toggle)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x9C7DD0", Offset = "0x9C7DD0", VA = "0x9C7DD0", Slot = "17")]
		public virtual void ToggleHighlight(bool toggle, Color globalHighlightColor)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x9C836C", Offset = "0x9C836C", VA = "0x9C836C")]
		public void PauseCollisions()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x9C84BC", Offset = "0x9C84BC", VA = "0x9C84BC")]
		public bool AttachIsTrackObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x9C84D0", Offset = "0x9C84D0", VA = "0x9C84D0")]
		public bool AttachIsClimbObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x9C84E0", Offset = "0x9C84E0", VA = "0x9C84E0")]
		public bool AttachIsStaticObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x9C84F0", Offset = "0x9C84F0", VA = "0x9C84F0")]
		public void ZeroVelocity()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x9C8634", Offset = "0x9C8634", VA = "0x9C8634")]
		public void SaveCurrentState()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x9C8704", Offset = "0x9C8704", VA = "0x9C8704")]
		public void ToggleKinematic(bool state)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x9C8798", Offset = "0x9C8798", VA = "0x9C8798")]
		public GameObject GetGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x9C87A0", Offset = "0x9C87A0", VA = "0x9C87A0")]
		public bool IsValidInteractableController(GameObject actualController, AllowedController controllerCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x9C87A8", Offset = "0x9C87A8", VA = "0x9C87A8")]
		public void ForceStopInteracting()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x9C8AC4", Offset = "0x9C8AC4", VA = "0x9C8AC4")]
		public void SetGrabbedSnapHandle(Transform handle)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x9C8ACC", Offset = "0x9C8ACC", VA = "0x9C8ACC")]
		public void RegisterTeleporters()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x9C8BE4", Offset = "0x9C8BE4", VA = "0x9C8BE4", Slot = "18")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x9C8CF8", Offset = "0x9C8CF8", VA = "0x9C8CF8", Slot = "19")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x9C8F64", Offset = "0x9C8F64", VA = "0x9C8F64", Slot = "20")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x9C9104", Offset = "0x9C9104", VA = "0x9C9104", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x9C96A4", Offset = "0x9C96A4", VA = "0x9C96A4", Slot = "22")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x9C96D8", Offset = "0x9C96D8", VA = "0x9C96D8", Slot = "23")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x9C97F4", Offset = "0x9C97F4", VA = "0x9C97F4", Slot = "24")]
		protected virtual void OnJointBreak(float force)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x9C9804", Offset = "0x9C9804", VA = "0x9C9804", Slot = "25")]
		protected virtual void LoadPreviousState()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x9C7788", Offset = "0x9C7788", VA = "0x9C7788")]
		private void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x9C98CC", Offset = "0x9C98CC", VA = "0x9C98CC")]
		private void UnpauseCollisions()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x9C99E8", Offset = "0x9C99E8", VA = "0x9C99E8")]
		private Renderer[] GetRendererArray()
		{
			return null;
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x9C8D18", Offset = "0x9C8D18", VA = "0x9C8D18")]
		private Dictionary<string, Color[]> StoreOriginalColors()
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x9C7F30", Offset = "0x9C7F30", VA = "0x9C7F30")]
		private Dictionary<string, Color[]> BuildHighlightColorArray(Color color)
		{
			return null;
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x9C8188", Offset = "0x9C8188", VA = "0x9C8188")]
		private void ChangeColor(Dictionary<string, Color[]> colors)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x9C8FB4", Offset = "0x9C8FB4", VA = "0x9C8FB4")]
		private void CheckBreakDistance()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x9C793C", Offset = "0x9C793C", VA = "0x9C793C")]
		private void SetTrackPoint(GameObject point)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x9C7824", Offset = "0x9C7824", VA = "0x9C7824")]
		private void RemoveTrackPoint()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x9C919C", Offset = "0x9C919C", VA = "0x9C919C")]
		private void FixedUpdateRotatorTrack()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x9C923C", Offset = "0x9C923C", VA = "0x9C923C")]
		private void FixedUpdateTrackObject()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x9C9A74", Offset = "0x9C9A74", VA = "0x9C9A74")]
		private void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x9C9B34", Offset = "0x9C9B34", VA = "0x9C9B34")]
		public VRTK_InteractableObject()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[RequireComponent(typeof(VRTK_ControllerEvents))]
	[RequireComponent(typeof(VRTK_InteractTouch))]
	public class VRTK_InteractGrab : MonoBehaviour
	{
		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody controllerAttachPoint;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hideControllerOnGrab;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float hideControllerDelay;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float grabPrecognition;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float throwMultiplier;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool createRigidBodyWhenNotTouching;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Joint controllerAttachJoint;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject grabbedObject;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool updatedHideControllerOnGrab;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VRTK_InteractTouch interactTouch;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRTK_ControllerActions controllerActions;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int grabEnabledState;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float grabPrecognitionTimer;

		[Token(Token = "0x14000032")]
		public event ObjectInteractEventHandler ControllerGrabInteractableObject
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x9C9BCC", Offset = "0x9C9BCC", VA = "0x9C9BCC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x9C9C68", Offset = "0x9C9C68", VA = "0x9C9C68")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event ObjectInteractEventHandler ControllerUngrabInteractableObject
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x9C9D04", Offset = "0x9C9D04", VA = "0x9C9D04")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x9C9DA0", Offset = "0x9C9DA0", VA = "0x9C9DA0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x9C9E3C", Offset = "0x9C9E3C", VA = "0x9C9E3C", Slot = "4")]
		public virtual void OnControllerGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x9C9E68", Offset = "0x9C9E68", VA = "0x9C9E68", Slot = "5")]
		public virtual void OnControllerUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x9C89C4", Offset = "0x9C89C4", VA = "0x9C89C4")]
		public void ForceRelease()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x9C9F14", Offset = "0x9C9F14", VA = "0x9C9F14")]
		public void AttemptGrab()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x9CA0F0", Offset = "0x9CA0F0", VA = "0x9CA0F0")]
		public GameObject GetGrabbedObject()
		{
			return null;
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x9CA0F8", Offset = "0x9CA0F8", VA = "0x9CA0F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x9CA254", Offset = "0x9CA254", VA = "0x9CA254")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x9CA588", Offset = "0x9CA588", VA = "0x9CA588")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x9CA3FC", Offset = "0x9CA3FC", VA = "0x9CA3FC")]
		private void SetControllerAttachPoint()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x9CA694", Offset = "0x9CA694", VA = "0x9CA694")]
		private bool IsObjectGrabbable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x9CA838", Offset = "0x9CA838", VA = "0x9CA838")]
		private bool IsObjectHoldOnGrab(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x9CA90C", Offset = "0x9CA90C", VA = "0x9CA90C")]
		private Transform GetSnapHandle(VRTK_InteractableObject objectScript)
		{
			return null;
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x9CAA24", Offset = "0x9CAA24", VA = "0x9CAA24")]
		private void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x9CAB6C", Offset = "0x9CAB6C", VA = "0x9CAB6C")]
		private void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x9CACC4", Offset = "0x9CACC4", VA = "0x9CACC4")]
		private void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x9CAE2C", Offset = "0x9CAE2C", VA = "0x9CAE2C")]
		private Rigidbody ReleaseGrabbedObjectFromController(bool withThrow)
		{
			return null;
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x9CAEBC", Offset = "0x9CAEBC", VA = "0x9CAEBC")]
		private Rigidbody ReleaseAttachedObjectFromController(bool withThrow)
		{
			return null;
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x9CAF84", Offset = "0x9CAF84", VA = "0x9CAF84")]
		private Rigidbody ReleaseParentedObjectFromController()
		{
			return null;
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x9CAFD4", Offset = "0x9CAFD4", VA = "0x9CAFD4")]
		private void ThrowReleasedObject(Rigidbody rb, uint controllerIndex, float objectThrowMultiplier)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x9CAFD8", Offset = "0x9CAFD8", VA = "0x9CAFD8")]
		private bool GrabInteractedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x9CB290", Offset = "0x9CB290", VA = "0x9CB290")]
		private bool GrabTrackedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x9CB390", Offset = "0x9CB390", VA = "0x9CB390")]
		private bool GrabClimbObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x9CB0C8", Offset = "0x9CB0C8", VA = "0x9CB0C8")]
		private void InitGrabbedObject()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x9CB474", Offset = "0x9CB474", VA = "0x9CB474")]
		private void HideController()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x9CB4FC", Offset = "0x9CB4FC", VA = "0x9CB4FC")]
		private void UngrabInteractedObject(uint controllerIndex, bool withThrow)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x9C9E94", Offset = "0x9C9E94", VA = "0x9C9E94")]
		private void UngrabTrackedObject()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x9CB7C0", Offset = "0x9CB7C0", VA = "0x9CB7C0")]
		private void UngrabClimbObject()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x9CB5B0", Offset = "0x9CB5B0", VA = "0x9CB5B0")]
		private void InitUngrabbedObject()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x9C9F0C", Offset = "0x9C9F0C", VA = "0x9C9F0C")]
		private void ReleaseObject(uint controllerIndex, bool withThrow)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x9CB838", Offset = "0x9CB838", VA = "0x9CB838")]
		private GameObject GetGrabbableObject()
		{
			return null;
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x9CB8C8", Offset = "0x9CB8C8", VA = "0x9CB8C8")]
		private void IncrementGrabState()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x9C9F18", Offset = "0x9C9F18", VA = "0x9C9F18")]
		private void AttemptGrabObject()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x9CB8FC", Offset = "0x9CB8FC", VA = "0x9CB8FC")]
		private bool CanRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x9CB9A0", Offset = "0x9CB9A0", VA = "0x9CB9A0")]
		private void AttemptReleaseObject(uint controllerIndex)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x9CBA80", Offset = "0x9CBA80", VA = "0x9CBA80")]
		private void DoGrabObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x9CBA84", Offset = "0x9CBA84", VA = "0x9CBA84")]
		private void DoReleaseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x9CBA8C", Offset = "0x9CBA8C", VA = "0x9CBA8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x9CBDA0", Offset = "0x9CBDA0", VA = "0x9CBDA0")]
		public VRTK_InteractGrab()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public struct ObjectInteractEventArgs
	{
		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject target;
	}
	[Token(Token = "0x2000352")]
	public delegate void ObjectInteractEventHandler(object sender, ObjectInteractEventArgs e);
	[Token(Token = "0x2000353")]
	[RequireComponent(typeof(VRTK_ControllerActions))]
	public class VRTK_InteractTouch : MonoBehaviour
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hideControllerOnTouch;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float hideControllerDelay;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color globalTouchHighlightColor;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject customRigidbodyObject;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject touchedObject;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject lastTouchedObject;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool updatedHideControllerOnTouch;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VRTK_ControllerActions controllerActions;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject controllerCollisionDetector;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool triggerRumble;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool destroyColliderOnDisable;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody touchRigidBody;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityEngine.Object defaultColliderPrefab;

		[Token(Token = "0x14000034")]
		public event ObjectInteractEventHandler ControllerTouchInteractableObject
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x9CBF78", Offset = "0x9CBF78", VA = "0x9CBF78")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x9CC014", Offset = "0x9CC014", VA = "0x9CC014")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event ObjectInteractEventHandler ControllerUntouchInteractableObject
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x9CC0B0", Offset = "0x9CC0B0", VA = "0x9CC0B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x9CC14C", Offset = "0x9CC14C", VA = "0x9CC14C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x9CC1E8", Offset = "0x9CC1E8", VA = "0x9CC1E8", Slot = "4")]
		public virtual void OnControllerTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x9CC214", Offset = "0x9CC214", VA = "0x9CC214", Slot = "5")]
		public virtual void OnControllerUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x9CB44C", Offset = "0x9CB44C", VA = "0x9CB44C")]
		public ObjectInteractEventArgs SetControllerInteractEvent(GameObject target)
		{
			return default(ObjectInteractEventArgs);
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x9CC240", Offset = "0x9CC240", VA = "0x9CC240")]
		public void ForceTouch(GameObject obj)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x9CC680", Offset = "0x9CC680", VA = "0x9CC680")]
		public GameObject GetTouchedObject()
		{
			return null;
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x9CA718", Offset = "0x9CA718", VA = "0x9CA718")]
		public bool IsObjectInteractable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x9CBC14", Offset = "0x9CBC14", VA = "0x9CBC14")]
		public void ToggleControllerRigidBody(bool state)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x9CBBEC", Offset = "0x9CBBEC", VA = "0x9CBBEC")]
		public bool IsRigidBodyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x9C8948", Offset = "0x9C8948", VA = "0x9C8948")]
		public void ForceStopTouching()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x9CC824", Offset = "0x9CC824", VA = "0x9CC824")]
		public Collider[] ControllerColliders()
		{
			return null;
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x9CC8B8", Offset = "0x9CC8B8", VA = "0x9CC8B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x9CC964", Offset = "0x9CC964", VA = "0x9CC964")]
		public void SetPlayerObject(GameObject obj, VRTK_PlayerObject.ObjectTypes objType)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x9CCA20", Offset = "0x9CCA20", VA = "0x9CCA20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x9CCE5C", Offset = "0x9CCE5C", VA = "0x9CCE5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x9CCEE4", Offset = "0x9CCEE4", VA = "0x9CCEE4")]
		private GameObject GetColliderInteractableObject(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x9CCFC4", Offset = "0x9CCFC4", VA = "0x9CCFC4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x9CC358", Offset = "0x9CC358", VA = "0x9CC358")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x9CD0A0", Offset = "0x9CD0A0", VA = "0x9CD0A0")]
		private void ResetTriggerRumble()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x9CD0A8", Offset = "0x9CD0A8", VA = "0x9CD0A8")]
		private bool IsColliderChildOfTouchedObject(GameObject collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x9CD1C0", Offset = "0x9CD1C0", VA = "0x9CD1C0")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x9CC688", Offset = "0x9CC688", VA = "0x9CC688")]
		private void StopTouching(GameObject obj)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x9CCE74", Offset = "0x9CCE74", VA = "0x9CCE74")]
		private void DestroyTouchCollider()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x9CD2B8", Offset = "0x9CD2B8", VA = "0x9CD2B8")]
		private bool CustomRigidBodyIsChild()
		{
			return default(bool);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x9CCA3C", Offset = "0x9CCA3C", VA = "0x9CCA3C")]
		private void CreateTouchCollider()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x9CCD1C", Offset = "0x9CCD1C", VA = "0x9CCD1C")]
		private void CreateTouchRigidBody()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x9CD3B4", Offset = "0x9CD3B4", VA = "0x9CD3B4")]
		private void HideController()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x9CD43C", Offset = "0x9CD43C", VA = "0x9CD43C")]
		public VRTK_InteractTouch()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class VRTK_PlayerObject : MonoBehaviour
	{
		[Token(Token = "0x2000355")]
		public enum ObjectTypes
		{
			[Token(Token = "0x4001700")]
			CameraRig,
			[Token(Token = "0x4001701")]
			Headset,
			[Token(Token = "0x4001702")]
			Controller,
			[Token(Token = "0x4001703")]
			Pointer
		}

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectTypes objectType;

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x9CD448", Offset = "0x9CD448", VA = "0x9CD448")]
		public VRTK_PlayerObject()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public struct PlayerPresenceEventArgs
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fallDistance;
	}
	[Token(Token = "0x2000357")]
	public delegate void PlayerPresenceEventHandler(object sender, PlayerPresenceEventArgs e);
	[Token(Token = "0x2000358")]
	public class VRTK_PlayerPresence : MonoBehaviour
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float headsetYOffset;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ignoreGrabbedCollisions;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool resetPositionOnCollision;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool fallingPhysicsOnly;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform headset;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rb;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoxCollider bc;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 lastGoodPosition;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool lastGoodPositionSet;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float highestHeadsetY;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float crouchMargin;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastPlayAreaY;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float fallStartHeight;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SteamVR_ControllerManager controllerManager;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isFalling;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool customRigidBody;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool customCollider;

		[Token(Token = "0x14000036")]
		public event PlayerPresenceEventHandler PresenceFallStarted
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x9CD618", Offset = "0x9CD618", VA = "0x9CD618")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x9CD6B4", Offset = "0x9CD6B4", VA = "0x9CD6B4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event PlayerPresenceEventHandler PresenceFallEnded
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x9CD750", Offset = "0x9CD750", VA = "0x9CD750")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x9CD7EC", Offset = "0x9CD7EC", VA = "0x9CD7EC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x9CD888", Offset = "0x9CD888", VA = "0x9CD888")]
		public void SetFallingPhysicsOnlyParams(bool falling)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x9CD8A4", Offset = "0x9CD8A4", VA = "0x9CD8A4")]
		public bool IsFalling()
		{
			return default(bool);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x9CD8C4", Offset = "0x9CD8C4", VA = "0x9CD8C4")]
		public Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x9CD8CC", Offset = "0x9CD8CC", VA = "0x9CD8CC")]
		public void StartPhysicsFall(Vector3 velocity)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x9CD9FC", Offset = "0x9CD9FC", VA = "0x9CD9FC")]
		public void StopPhysicsFall()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x9CD9DC", Offset = "0x9CD9DC", VA = "0x9CD9DC")]
		private void OnPresenceFallStarted(PlayerPresenceEventArgs e)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x9CDA70", Offset = "0x9CDA70", VA = "0x9CDA70")]
		private void OnPresenceFallEnded(PlayerPresenceEventArgs e)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x9CD9D8", Offset = "0x9CD9D8", VA = "0x9CD9D8")]
		private PlayerPresenceEventArgs SetPlayerPhysicsEvent(float fallDistance)
		{
			return default(PlayerPresenceEventArgs);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x9CDA90", Offset = "0x9CDA90", VA = "0x9CDA90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x9CDB28", Offset = "0x9CDB28", VA = "0x9CDB28")]
		public void SetPlayerObject(GameObject obj, VRTK_PlayerObject.ObjectTypes objType)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x9CDBE4", Offset = "0x9CDBE4", VA = "0x9CDBE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x9CE170", Offset = "0x9CE170", VA = "0x9CE170")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x9CDE98", Offset = "0x9CDE98", VA = "0x9CDE98")]
		private void InitHeadsetListeners(bool state)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x9CE258", Offset = "0x9CE258", VA = "0x9CE258")]
		private void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x9CE3BC", Offset = "0x9CE3BC", VA = "0x9CE3BC")]
		private void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x9CE4F4", Offset = "0x9CE4F4", VA = "0x9CE4F4")]
		private void OnHeadsetCollision(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x9CDC38", Offset = "0x9CDC38", VA = "0x9CDC38")]
		private void CreateCollider()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x9CE1C0", Offset = "0x9CE1C0", VA = "0x9CE1C0")]
		private void DestroyCollider()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x9CE53C", Offset = "0x9CE53C", VA = "0x9CE53C")]
		private void TogglePhysics(bool state)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x9CD89C", Offset = "0x9CD89C", VA = "0x9CD89C")]
		private void EnablePhysics()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x9CD894", Offset = "0x9CD894", VA = "0x9CD894")]
		private void DisablePhysics()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x9CE608", Offset = "0x9CE608", VA = "0x9CE608")]
		private void UpdateCollider()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x9CE7AC", Offset = "0x9CE7AC", VA = "0x9CE7AC")]
		private void SetHeadsetY()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x9CE8D8", Offset = "0x9CE8D8", VA = "0x9CE8D8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x9CE8F0", Offset = "0x9CE8F0", VA = "0x9CE8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x9CDFC0", Offset = "0x9CDFC0", VA = "0x9CDFC0")]
		private void InitControllerListeners(GameObject controller, bool state)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x9CEA14", Offset = "0x9CEA14", VA = "0x9CEA14")]
		public VRTK_PlayerPresence()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class VRTK_SimplePointer : VRTK_WorldPointer
	{
		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float pointerThickness;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float pointerLength;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool showPointerTip;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject customPointerCursor;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GameObject pointerHolder;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject pointer;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GameObject pointerTip;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 pointerTipScale;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Material customPointerMaterial;

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x9CEA38", Offset = "0x9CEA38", VA = "0x9CEA38", Slot = "15")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x9CEC70", Offset = "0x9CEC70", VA = "0x9CEC70", Slot = "16")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x9CEECC", Offset = "0x9CEECC", VA = "0x9CEECC", Slot = "17")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x9CF3D0", Offset = "0x9CF3D0", VA = "0x9CF3D0", Slot = "18")]
		protected override void InitPointer()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x9CFA90", Offset = "0x9CFA90", VA = "0x9CFA90", Slot = "27")]
		protected override void SetPointerMaterial()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x9CFCAC", Offset = "0x9CFCAC", VA = "0x9CFCAC", Slot = "26")]
		protected override void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x9CF278", Offset = "0x9CF278", VA = "0x9CF278")]
		private void SetPointerTransform(float setLength, float setThicknes)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x9CF080", Offset = "0x9CF080", VA = "0x9CF080")]
		private float GetPointerBeamLength(bool hasRayHit, RaycastHit collidedWith)
		{
			return default(float);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x9D04AC", Offset = "0x9D04AC", VA = "0x9D04AC")]
		public VRTK_SimplePointer()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class VRTK_UIGraphicRaycaster : GraphicRaycaster
	{
		[Token(Token = "0x200035B")]
		private struct VRGraphic
		{
			[Token(Token = "0x4001728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x4001729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distance;

			[Token(Token = "0x400172A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 position;

			[Token(Token = "0x400172B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 pointerPosition;
		}

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject raycastSource;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas m_Canvas;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 lastKnownPosition;

		[Token(Token = "0x4001725")]
		private const float UI_CONTROL_OFFSET = 0.5f;

		[NonSerialized]
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<VRGraphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<VRGraphic> s_SortedGraphics;

		[Token(Token = "0x170003BB")]
		private Canvas canvas
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x9D06BC", Offset = "0x9D06BC", VA = "0x9D06BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x9D0574", Offset = "0x9D0574", VA = "0x9D0574", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x9D0E00", Offset = "0x9D0E00", VA = "0x9D0E00")]
		private void SetNearestRaycast(ref PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x9D11F8", Offset = "0x9D11F8", VA = "0x9D11F8")]
		private float GetHitDistance(Ray ray)
		{
			return default(float);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x9D0774", Offset = "0x9D0774", VA = "0x9D0774")]
		private void Raycast(Canvas canvas, Camera eventCamera, Ray ray, List<VRGraphic> results)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x9D1558", Offset = "0x9D1558", VA = "0x9D1558")]
		public VRTK_UIGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public abstract class VRTK_WorldPointer : VRTK_DestinationMarker
	{
		[Token(Token = "0x200035E")]
		public enum pointerVisibilityStates
		{
			[Token(Token = "0x4001749")]
			On_When_Active,
			[Token(Token = "0x400174A")]
			Always_On,
			[Token(Token = "0x400174B")]
			Always_Off
		}

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material pointerMaterial;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color pointerHitColor;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color pointerMissColor;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool showPlayAreaCursor;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector2 playAreaCursorDimensions;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool handlePlayAreaCursorCollisions;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string ignoreTargetWithTagOrClass;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public pointerVisibilityStates pointerVisibility;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool holdButtonToActivate;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float activateDelay;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected Vector3 destinationPosition;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float pointerContactDistance;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform pointerContactTarget;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected uint controllerIndex;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected bool playAreaCursorCollided;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject playAreaCursor;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject[] playAreaCursorBoundaries;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private BoxCollider playAreaCursorCollider;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform headset;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform playArea;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool isActive;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool destinationSetActive;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float activateDelayTimer;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int beamEnabledState;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private VRTK_InteractableObject interactableObject;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x9D1804", Offset = "0x9D1804", VA = "0x9D1804", Slot = "10")]
		public virtual void setPlayAreaCursorCollision(bool state)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x9D1818", Offset = "0x9D1818", VA = "0x9D1818", Slot = "11")]
		public virtual bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x9D1820", Offset = "0x9D1820", VA = "0x9D1820", Slot = "12")]
		public virtual bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x9D1844", Offset = "0x9D1844", VA = "0x9D1844", Slot = "13")]
		public virtual void ToggleBeam(bool state)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x9D1848", Offset = "0x9D1848", VA = "0x9D1848", Slot = "14")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x9CF9D0", Offset = "0x9CF9D0", VA = "0x9CF9D0")]
		public void SetPlayerObject(GameObject obj, VRTK_PlayerObject.ObjectTypes objType)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x9CEA5C", Offset = "0x9CEA5C", VA = "0x9CEA5C", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x9CED08", Offset = "0x9CED08", VA = "0x9CED08", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x9CEFF4", Offset = "0x9CEFF4", VA = "0x9CEFF4", Slot = "17")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x9CFA8C", Offset = "0x9CFA8C", VA = "0x9CFA8C", Slot = "18")]
		protected virtual void InitPointer()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x9CFEFC", Offset = "0x9CFEFC", VA = "0x9CFEFC", Slot = "19")]
		protected virtual void SetPlayAreaCursorTransform(Vector3 destination)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x9D1AE0", Offset = "0x9D1AE0", VA = "0x9D1AE0", Slot = "20")]
		protected virtual void EnablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x9D1C74", Offset = "0x9D1C74", VA = "0x9D1C74", Slot = "21")]
		protected virtual void DisablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x9D1CE4", Offset = "0x9D1CE4", VA = "0x9D1CE4", Slot = "22")]
		protected virtual void SetPointerDestination(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x9D02C4", Offset = "0x9D02C4", VA = "0x9D02C4", Slot = "23")]
		protected virtual void PointerIn()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x9D00CC", Offset = "0x9D00CC", VA = "0x9D00CC", Slot = "24")]
		protected virtual void PointerOut()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x9D1CF4", Offset = "0x9D1CF4", VA = "0x9D1CF4", Slot = "25")]
		protected virtual void PointerSet()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x9CFDDC", Offset = "0x9CFDDC", VA = "0x9CFDDC", Slot = "26")]
		protected virtual void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x9CFB80", Offset = "0x9CFB80", VA = "0x9CFB80", Slot = "27")]
		protected virtual void SetPointerMaterial()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x9D022C", Offset = "0x9D022C", VA = "0x9D022C")]
		protected void UpdatePointerMaterial(Color color)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x9D1F20", Offset = "0x9D1F20", VA = "0x9D1F20", Slot = "28")]
		protected virtual bool ValidDestination(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x9D1BEC", Offset = "0x9D1BEC", VA = "0x9D1BEC")]
		private void TurnOnBeam(uint index)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x9D1C7C", Offset = "0x9D1C7C", VA = "0x9D1C7C")]
		private void TurnOffBeam(uint index)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x9D19A8", Offset = "0x9D19A8", VA = "0x9D19A8")]
		protected void DisableBeam()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x9D2084", Offset = "0x9D2084", VA = "0x9D2084")]
		private void DrawPlayAreaCursorBoundary(int index, float left, float right, float top, float bottom, float thickness, Vector3 localPosition)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x9D1ADC", Offset = "0x9D1ADC", VA = "0x9D1ADC")]
		private void InitPlayAreaCursor()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x9D2304", Offset = "0x9D2304", VA = "0x9D2304")]
		private void CreateCursorCollider(GameObject cursor)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x9D19D4", Offset = "0x9D19D4", VA = "0x9D19D4")]
		private void UpdateCollider()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x9D04F8", Offset = "0x9D04F8", VA = "0x9D04F8")]
		protected VRTK_WorldPointer()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class VRTK_PlayAreaCollider : MonoBehaviour
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject parent;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string ignoreTargetWithTagOrClass;

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x9D23B8", Offset = "0x9D23B8", VA = "0x9D23B8")]
		public void SetParent(GameObject setParent)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x9D23C0", Offset = "0x9D23C0", VA = "0x9D23C0")]
		public void SetIgnoreTarget(string ignore)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x9D23C8", Offset = "0x9D23C8", VA = "0x9D23C8")]
		private bool ValidTarget(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x9D24CC", Offset = "0x9D24CC", VA = "0x9D24CC")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x9D2574", Offset = "0x9D2574", VA = "0x9D2574")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x9D25F8", Offset = "0x9D25F8", VA = "0x9D25F8")]
		public VRTK_PlayAreaCollider()
		{
		}
	}
}
namespace PA.ParticleField.Samples
{
	[Token(Token = "0x2000360")]
	public class PACloudController : MonoBehaviour
	{
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform followTarget;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PAParticleField[] cloudFields;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 area;

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x9D2600", Offset = "0x9D2600", VA = "0x9D2600")]
		private void Start()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x9D2818", Offset = "0x9D2818", VA = "0x9D2818")]
		private void Update()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x9D281C", Offset = "0x9D281C", VA = "0x9D281C")]
		private void UpdateCloudPositions()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x9D2B38", Offset = "0x9D2B38", VA = "0x9D2B38")]
		public PACloudController()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class PAWaterController : MonoBehaviour
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yPosition;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x9D2B40", Offset = "0x9D2B40", VA = "0x9D2B40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x9D2B6C", Offset = "0x9D2B6C", VA = "0x9D2B6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x9D2BCC", Offset = "0x9D2BCC", VA = "0x9D2BCC")]
		public PAWaterController()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x4001753")]
		private const float RANGE = 0.4f;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody r;

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x9D2BD4", Offset = "0x9D2BD4", VA = "0x9D2BD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x9D2D7C", Offset = "0x9D2D7C", VA = "0x9D2D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x9D2E58", Offset = "0x9D2E58", VA = "0x9D2E58")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class SmoothCamera : MonoBehaviour
	{
		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float height;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float damping;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool smoothRotation;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool followBehind;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationDamping;

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x9D2E60", Offset = "0x9D2E60", VA = "0x9D2E60")]
		private void Start()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x9D2F78", Offset = "0x9D2F78", VA = "0x9D2F78")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x9D31D8", Offset = "0x9D31D8", VA = "0x9D31D8")]
		public SmoothCamera()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class Stardust : MonoBehaviour
	{
		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxMagnitude;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lerpiness;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PAParticleField field;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastDifference;

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x9D3200", Offset = "0x9D3200", VA = "0x9D3200")]
		private void Start()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x9D32C0", Offset = "0x9D32C0", VA = "0x9D32C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x9D3500", Offset = "0x9D3500", VA = "0x9D3500")]
		public Stardust()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class StarFieldSpaceship : MonoBehaviour
	{
		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float turnspeed;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rollSpeed;

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x9D3514", Offset = "0x9D3514", VA = "0x9D3514")]
		private void Start()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x9D3518", Offset = "0x9D3518", VA = "0x9D3518")]
		private void Update()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x9D375C", Offset = "0x9D375C", VA = "0x9D375C")]
		public StarFieldSpaceship()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000366")]
	[RequireComponent(typeof(Canvas))]
	[ExecuteAlways]
	[DisallowMultipleComponent]
	[AddComponentMenu("Layout/Canvas Scaler", 101)]
	public class CanvasScaler : UIBehaviour
	{
		[Token(Token = "0x2000367")]
		public enum ScaleMode
		{
			[Token(Token = "0x4001774")]
			ConstantPixelSize,
			[Token(Token = "0x4001775")]
			ScaleWithScreenSize,
			[Token(Token = "0x4001776")]
			ConstantPhysicalSize
		}

		[Token(Token = "0x2000368")]
		public enum ScreenMatchMode
		{
			[Token(Token = "0x4001778")]
			MatchWidthOrHeight,
			[Token(Token = "0x4001779")]
			Expand,
			[Token(Token = "0x400177A")]
			Shrink
		}

		[Token(Token = "0x2000369")]
		public enum Unit
		{
			[Token(Token = "0x400177C")]
			Centimeters,
			[Token(Token = "0x400177D")]
			Millimeters,
			[Token(Token = "0x400177E")]
			Inches,
			[Token(Token = "0x400177F")]
			Points,
			[Token(Token = "0x4001780")]
			Picas
		}

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Determines how UI elements in the Canvas are scaled.")]
		[SerializeField]
		private ScaleMode m_UiScaleMode;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[Tooltip("If a sprite has this 'Pixels Per Unit' setting, then one pixel in the sprite will cover one unit in the UI.")]
		protected float m_ReferencePixelsPerUnit;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Scales all UI elements in the Canvas by this factor.")]
		[SerializeField]
		protected float m_ScaleFactor;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("The resolution the UI layout is designed for. If the screen resolution is larger, the UI will be scaled up, and if it's smaller, the UI will be scaled down. This is done in accordance with the Screen Match Mode.")]
		[SerializeField]
		protected Vector2 m_ReferenceResolution;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("A mode used to scale the canvas area if the aspect ratio of the current resolution doesn't fit the reference resolution.")]
		[SerializeField]
		protected ScreenMatchMode m_ScreenMatchMode;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Determines if the scaling is using the width or height as reference, or a mix in between.")]
		[Range(0f, 1f)]
		[SerializeField]
		protected float m_MatchWidthOrHeight;

		[Token(Token = "0x400176A")]
		private const float kLogBase = 2f;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("The physical unit to specify positions and sizes in.")]
		[SerializeField]
		protected Unit m_PhysicalUnit;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The DPI to assume if the screen DPI is not known.")]
		[SerializeField]
		protected float m_FallbackScreenDPI;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[Tooltip("The pixels per inch to use for sprites that have a 'Pixels Per Unit' setting that matches the 'Reference Pixels Per Unit' setting.")]
		protected float m_DefaultSpriteDPI;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("The amount of pixels per unit to use for dynamically created bitmaps in the UI, such as Text.")]
		[SerializeField]
		protected float m_DynamicPixelsPerUnit;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas m_Canvas;

		[NonSerialized]
		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_PrevScaleFactor;

		[NonSerialized]
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_PrevReferencePixelsPerUnit;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected bool m_PresetInfoIsWorld;

		[Token(Token = "0x170003BC")]
		public ScaleMode uiScaleMode
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x9D377C", Offset = "0x9D377C", VA = "0x9D377C")]
			get
			{
				return default(ScaleMode);
			}
			[Token(Token = "0x6001783")]
			[Address(RVA = "0x9D3784", Offset = "0x9D3784", VA = "0x9D3784")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public float referencePixelsPerUnit
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0x9D378C", Offset = "0x9D378C", VA = "0x9D378C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001785")]
			[Address(RVA = "0x9D3794", Offset = "0x9D3794", VA = "0x9D3794")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public float scaleFactor
		{
			[Token(Token = "0x6001786")]
			[Address(RVA = "0x9D379C", Offset = "0x9D379C", VA = "0x9D379C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001787")]
			[Address(RVA = "0x9D37A4", Offset = "0x9D37A4", VA = "0x9D37A4")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public Vector2 referenceResolution
		{
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x9D37B8", Offset = "0x9D37B8", VA = "0x9D37B8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001789")]
			[Address(RVA = "0x9D37C0", Offset = "0x9D37C0", VA = "0x9D37C0")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public ScreenMatchMode screenMatchMode
		{
			[Token(Token = "0x600178A")]
			[Address(RVA = "0x9D3824", Offset = "0x9D3824", VA = "0x9D3824")]
			get
			{
				return default(ScreenMatchMode);
			}
			[Token(Token = "0x600178B")]
			[Address(RVA = "0x9D382C", Offset = "0x9D382C", VA = "0x9D382C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public float matchWidthOrHeight
		{
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x9D3834", Offset = "0x9D3834", VA = "0x9D3834")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x9D383C", Offset = "0x9D383C", VA = "0x9D383C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public Unit physicalUnit
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x9D3844", Offset = "0x9D3844", VA = "0x9D3844")]
			get
			{
				return default(Unit);
			}
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x9D384C", Offset = "0x9D384C", VA = "0x9D384C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public float fallbackScreenDPI
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x9D3854", Offset = "0x9D3854", VA = "0x9D3854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001791")]
			[Address(RVA = "0x9D385C", Offset = "0x9D385C", VA = "0x9D385C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public float defaultSpriteDPI
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0x9D3864", Offset = "0x9D3864", VA = "0x9D3864")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001793")]
			[Address(RVA = "0x9D386C", Offset = "0x9D386C", VA = "0x9D386C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public float dynamicPixelsPerUnit
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x9D387C", Offset = "0x9D387C", VA = "0x9D387C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x9D3884", Offset = "0x9D3884", VA = "0x9D3884")]
			set
			{
			}
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x9D388C", Offset = "0x9D388C", VA = "0x9D388C")]
		protected CanvasScaler()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x9D38D4", Offset = "0x9D38D4", VA = "0x9D38D4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x9D39AC", Offset = "0x9D39AC", VA = "0x9D39AC")]
		private void Canvas_preWillRenderCanvases()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x9D39BC", Offset = "0x9D39BC", VA = "0x9D39BC", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x9D3AE4", Offset = "0x9D3AE4", VA = "0x9D3AE4", Slot = "17")]
		protected virtual void Handle()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x9D3BE0", Offset = "0x9D3BE0", VA = "0x9D3BE0", Slot = "18")]
		protected virtual void HandleWorldCanvas()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x9D3C00", Offset = "0x9D3C00", VA = "0x9D3C00", Slot = "19")]
		protected virtual void HandleConstantPixelSize()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x9D3C20", Offset = "0x9D3C20", VA = "0x9D3C20", Slot = "20")]
		protected virtual void HandleScaleWithScreenSize()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x9D3E54", Offset = "0x9D3E54", VA = "0x9D3E54", Slot = "21")]
		protected virtual void HandleConstantPhysicalSize()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x9D3A64", Offset = "0x9D3A64", VA = "0x9D3A64")]
		protected void SetScaleFactor(float scaleFactor)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x9D3AA4", Offset = "0x9D3AA4", VA = "0x9D3AA4")]
		protected void SetReferencePixelsPerUnit(float referencePixelsPerUnit)
		{
		}
	}
	[Token(Token = "0x200036A")]
	[RequireComponent(typeof(Canvas))]
	[AddComponentMenu("Event/Graphic Raycaster")]
	public class GraphicRaycaster : BaseRaycaster
	{
		[Token(Token = "0x200036B")]
		public enum BlockingObjects
		{
			[Token(Token = "0x4001789")]
			None,
			[Token(Token = "0x400178A")]
			TwoD,
			[Token(Token = "0x400178B")]
			ThreeD,
			[Token(Token = "0x400178C")]
			All
		}

		[Token(Token = "0x4001781")]
		protected const int kNoEventMaskSet = -1;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[FormerlySerializedAs("ignoreReversedGraphics")]
		private bool m_IgnoreReversedGraphics;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[FormerlySerializedAs("blockingObjects")]
		[SerializeField]
		private BlockingObjects m_BlockingObjects;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected LayerMask m_BlockingMask;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas m_Canvas;

		[NonSerialized]
		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x170003C6")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x9D3EC0", Offset = "0x9D3EC0", VA = "0x9D3EC0", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C7")]
		public override int renderOrderPriority
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x9D3FB0", Offset = "0x9D3FB0", VA = "0x9D3FB0", Slot = "21")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C8")]
		public bool ignoreReversedGraphics
		{
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0x9D4004", Offset = "0x9D4004", VA = "0x9D4004")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0x9D400C", Offset = "0x9D400C", VA = "0x9D400C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public BlockingObjects blockingObjects
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x9D4018", Offset = "0x9D4018", VA = "0x9D4018")]
			get
			{
				return default(BlockingObjects);
			}
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x9D4020", Offset = "0x9D4020", VA = "0x9D4020")]
			set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public LayerMask blockingMask
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x9D4028", Offset = "0x9D4028", VA = "0x9D4028")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x9D4030", Offset = "0x9D4030", VA = "0x9D4030")]
			set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		private Canvas canvas
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x9D3F08", Offset = "0x9D3F08", VA = "0x9D3F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		public override Camera eventCamera
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x9D5114", Offset = "0x9D5114", VA = "0x9D5114", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x9D1600", Offset = "0x9D1600", VA = "0x9D1600")]
		protected GraphicRaycaster()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x9D4038", Offset = "0x9D4038", VA = "0x9D4038", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x9D4B7C", Offset = "0x9D4B7C", VA = "0x9D4B7C")]
		private static void Raycast(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}
	}
}
namespace DigitalRuby.LightningBolt
{
	[Token(Token = "0x200036D")]
	public enum LightningBoltAnimationMode
	{
		[Token(Token = "0x4001790")]
		None,
		[Token(Token = "0x4001791")]
		Random,
		[Token(Token = "0x4001792")]
		Loop,
		[Token(Token = "0x4001793")]
		PingPong
	}
	[Token(Token = "0x200036E")]
	[RequireComponent(typeof(LineRenderer))]
	public class LightningBoltScript : MonoBehaviour
	{
		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The game object where the lightning will emit from. If null, StartPosition is used.")]
		public GameObject StartObject;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The start position where the lightning will emit from. This is in world space if StartObject is null, otherwise this is offset from StartObject position.")]
		public Vector3 StartPosition;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The game object where the lightning will end at. If null, EndPosition is used.")]
		public GameObject EndObject;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The end position where the lightning will end at. This is in world space if EndObject is null, otherwise this is offset from EndObject position.")]
		public Vector3 EndPosition;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 8f)]
		[Tooltip("How manu generations? Higher numbers create more line segments.")]
		public int Generations;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0.01f, 1f)]
		[Tooltip("How long each bolt should last before creating a new bolt. In ManualMode, the bolt will simply disappear after this amount of seconds.")]
		public float Duration;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0f, 1f)]
		[Tooltip("How chaotic should the lightning be? (0-1)")]
		public float ChaosFactor;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("In manual mode, the trigger method must be called to create a bolt")]
		public bool ManualMode;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The number of rows in the texture. Used for animation.")]
		[Range(1f, 64f)]
		public int Rows;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(1f, 64f)]
		[Tooltip("The number of columns in the texture. Used for animation.")]
		public int Columns;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The animation mode for the lightning")]
		public LightningBoltAnimationMode AnimationMode;

		[NonSerialized]
		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public System.Random RandomGenerator;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<Vector3, Vector3>> segments;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int startIndex;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 size;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] offsets;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int animationOffsetIndex;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int animationPingPongDirection;

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x9D5340", Offset = "0x9D5340", VA = "0x9D5340")]
		private void GetPerpendicularVector(ref Vector3 directionNormalized, out Vector3 side)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x9D552C", Offset = "0x9D552C", VA = "0x9D552C")]
		private void GenerateLightningBolt(Vector3 start, Vector3 end, int generation, int totalGenerations, float offsetAmount)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x9D59D8", Offset = "0x9D59D8", VA = "0x9D59D8")]
		public void RandomVector(ref Vector3 start, ref Vector3 end, float offsetAmount, out Vector3 result)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x9D5D14", Offset = "0x9D5D14", VA = "0x9D5D14")]
		private void SelectOffsetFromAnimationMode()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x9D5E6C", Offset = "0x9D5E6C", VA = "0x9D5E6C")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x9D5FD8", Offset = "0x9D5FD8", VA = "0x9D5FD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x9D6188", Offset = "0x9D6188", VA = "0x9D6188")]
		private void Update()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x9D61F4", Offset = "0x9D61F4", VA = "0x9D61F4")]
		public void Trigger()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x9D6054", Offset = "0x9D6054", VA = "0x9D6054")]
		public void UpdateFromMaterialChange()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x9D6348", Offset = "0x9D6348", VA = "0x9D6348")]
		public LightningBoltScript()
		{
		}
	}
}
namespace DigitalRuby.RainMaker
{
	[Token(Token = "0x200036F")]
	public class BaseRainScript : MonoBehaviour
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Camera the rain should hover over, defaults to main camera")]
		public Camera Camera;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Light rain looping clip")]
		public AudioClip RainSoundLight;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Medium rain looping clip")]
		public AudioClip RainSoundMedium;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Heavy rain looping clip")]
		public AudioClip RainSoundHeavy;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		[Tooltip("Intensity of rain (0-1)")]
		public float RainIntensity;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Rain particle system")]
		public ParticleSystem RainFallParticleSystem;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Particles system for when rain hits something")]
		public ParticleSystem RainExplosionParticleSystem;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Particle system to use for rain mist")]
		public ParticleSystem RainMistParticleSystem;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(0f, 1f)]
		[Tooltip("The threshold for intensity (0 - 1) at which mist starts to appear")]
		public float RainMistThreshold;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Wind looping clip")]
		public AudioClip WindSound;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Wind sound volume modifier, use this to lower your sound if it's too loud.")]
		public float WindSoundVolumeModifier;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Wind zone that will affect and follow the rain")]
		public WindZone WindZone;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("X = minimum wind speed. Y = maximum wind speed. Z = sound multiplier. Wind speed is divided by Z to get sound multiplier value. Set Z to lower than Y to increase wind sound volume, or higher to decrease wind sound volume.")]
		public Vector3 WindSpeedRange;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Tooltip("How often the wind speed and direction changes (minimum and maximum change interval in seconds)")]
		public Vector2 WindChangeInterval;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Tooltip("Whether wind should be enabled.")]
		public bool EnableWind;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected LoopingAudioSource audioSourceRainLight;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected LoopingAudioSource audioSourceRainMedium;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected LoopingAudioSource audioSourceRainHeavy;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected LoopingAudioSource audioSourceRainCurrent;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected LoopingAudioSource audioSourceWind;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Material rainMaterial;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Material rainExplosionMaterial;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Material rainMistMaterial;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float lastRainIntensityValue;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float nextWindTime;

		[Token(Token = "0x170003CD")]
		protected virtual bool UseRainMistSoftParticles
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x9D72AC", Offset = "0x9D72AC", VA = "0x9D72AC", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x9D6440", Offset = "0x9D6440", VA = "0x9D6440")]
		private void UpdateWind()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x9D6870", Offset = "0x9D6870", VA = "0x9D6870")]
		private void CheckForRainChange()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x9D6C78", Offset = "0x9D6C78", VA = "0x9D6C78", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x9D71C0", Offset = "0x9D71C0", VA = "0x9D71C0", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x9D7200", Offset = "0x9D7200", VA = "0x9D7200", Slot = "6")]
		protected virtual float RainFallEmissionRate()
		{
			return default(float);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x9D7254", Offset = "0x9D7254", VA = "0x9D7254", Slot = "7")]
		protected virtual float MistEmissionRate()
		{
			return default(float);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x9D72B4", Offset = "0x9D72B4", VA = "0x9D72B4")]
		public BaseRainScript()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class LoopingAudioSource
	{
		[Token(Token = "0x170003CE")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x9D72F8", Offset = "0x9D72F8", VA = "0x9D72F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x9D7300", Offset = "0x9D7300", VA = "0x9D7300")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		public float TargetVolume
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x9D7308", Offset = "0x9D7308", VA = "0x9D7308")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x9D7310", Offset = "0x9D7310", VA = "0x9D7310")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x9D70F0", Offset = "0x9D70F0", VA = "0x9D70F0")]
		public LoopingAudioSource(MonoBehaviour script, AudioClip clip)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x9D675C", Offset = "0x9D675C", VA = "0x9D675C")]
		public void Play(float targetVolume)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x9D67B8", Offset = "0x9D67B8", VA = "0x9D67B8")]
		public void Stop()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x9D67C0", Offset = "0x9D67C0", VA = "0x9D67C0")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class RainCollision : MonoBehaviour
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color32 color;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem RainExplosion;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem RainParticleSystem;

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x9D7318", Offset = "0x9D7318", VA = "0x9D7318")]
		private void Start()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x9D731C", Offset = "0x9D731C", VA = "0x9D731C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x9D7320", Offset = "0x9D7320", VA = "0x9D7320")]
		private void Emit(ParticleSystem p, ref Vector3 pos)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x9D74EC", Offset = "0x9D74EC", VA = "0x9D74EC")]
		private void OnParticleCollision(GameObject obj)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x9D7638", Offset = "0x9D7638", VA = "0x9D7638")]
		public RainCollision()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class RainScript : BaseRainScript
	{
		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Tooltip("The height above the camera that the rain will start falling from")]
		public float RainHeight;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Tooltip("How far the rain particle system is ahead of the player")]
		public float RainForwardOffset;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Tooltip("The top y value of the mist particles")]
		public float RainMistHeight;

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x9D770C", Offset = "0x9D770C", VA = "0x9D770C")]
		private void UpdateRain()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x9D78FC", Offset = "0x9D78FC", VA = "0x9D78FC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x9D7900", Offset = "0x9D7900", VA = "0x9D7900", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x9D7918", Offset = "0x9D7918", VA = "0x9D7918")]
		public RainScript()
		{
		}
	}
}
namespace VRStandardAssets.Menu
{
	[Token(Token = "0x2000373")]
	public class MenuAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000374")]
		[CompilerGenerated]
		private sealed class <PlayTextures>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuAnimator <>4__this;

			[Token(Token = "0x170003D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017E0")]
				[Address(RVA = "0x9D7FA8", Offset = "0x9D7FA8", VA = "0x9D7FA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017E2")]
				[Address(RVA = "0x9D7FF0", Offset = "0x9D7FF0", VA = "0x9D7FF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x9D7EAC", Offset = "0x9D7EAC", VA = "0x9D7EAC")]
			[DebuggerHidden]
			public <PlayTextures>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x9D7EE4", Offset = "0x9D7EE4", VA = "0x9D7EE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x9D7EE8", Offset = "0x9D7EE8", VA = "0x9D7EE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x9D7FB0", Offset = "0x9D7FB0", VA = "0x9D7FB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_FrameRate;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer m_ScreenMesh;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRInteractiveItem m_VRInteractiveItem;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture[] m_AnimTextures;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds m_FrameRateWait;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_CurrentTextureIndex;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_Playing;

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x9D7970", Offset = "0x9D7970", VA = "0x9D7970")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x9D79E8", Offset = "0x9D79E8", VA = "0x9D79E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x9D7BF8", Offset = "0x9D7BF8", VA = "0x9D7BF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x9D7E08", Offset = "0x9D7E08", VA = "0x9D7E08")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x9D7EA4", Offset = "0x9D7EA4", VA = "0x9D7EA4")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x9D7E30", Offset = "0x9D7E30", VA = "0x9D7E30")]
		[IteratorStateMachine(typeof(<PlayTextures>d__12))]
		private IEnumerator PlayTextures()
		{
			return null;
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x9D7ED4", Offset = "0x9D7ED4", VA = "0x9D7ED4")]
		public MenuAnimator()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class MenuButton : MonoBehaviour
	{
		[Token(Token = "0x2000376")]
		[CompilerGenerated]
		private sealed class <ActivateButton>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuButton <>4__this;

			[Token(Token = "0x170003D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EF")]
				[Address(RVA = "0x9D880C", Offset = "0x9D880C", VA = "0x9D880C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F1")]
				[Address(RVA = "0x9D8854", Offset = "0x9D8854", VA = "0x9D8854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x9D864C", Offset = "0x9D864C", VA = "0x9D864C")]
			[DebuggerHidden]
			public <ActivateButton>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x9D867C", Offset = "0x9D867C", VA = "0x9D867C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x9D8680", Offset = "0x9D8680", VA = "0x9D8680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x9D8814", Offset = "0x9D8814", VA = "0x9D8814", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_SceneToLoad;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_CameraFade;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_GazeOver;

		[Token(Token = "0x14000038")]
		public event Action<MenuButton> OnButtonSelected
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x9D7FF8", Offset = "0x9D7FF8", VA = "0x9D7FF8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x9D80A8", Offset = "0x9D80A8", VA = "0x9D80A8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x9D8158", Offset = "0x9D8158", VA = "0x9D8158")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x9D8314", Offset = "0x9D8314", VA = "0x9D8314")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x9D84D0", Offset = "0x9D84D0", VA = "0x9D84D0")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x9D853C", Offset = "0x9D853C", VA = "0x9D853C")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x9D85A8", Offset = "0x9D85A8", VA = "0x9D85A8")]
		private void HandleSelectionComplete()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x9D85D8", Offset = "0x9D85D8", VA = "0x9D85D8")]
		[IteratorStateMachine(typeof(<ActivateButton>d__13))]
		private IEnumerator ActivateButton()
		{
			return null;
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x9D8674", Offset = "0x9D8674", VA = "0x9D8674")]
		public MenuButton()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class MenuItemPopout : MonoBehaviour
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Transform;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRInteractiveItem m_Item;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_PopSpeed;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_PopDistance;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPosition;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_PoppedPosition;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_TargetPosition;

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x9D885C", Offset = "0x9D885C", VA = "0x9D885C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x9D88E8", Offset = "0x9D88E8", VA = "0x9D88E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x9D8A84", Offset = "0x9D8A84", VA = "0x9D8A84")]
		public MenuItemPopout()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class MenuSelectorMover : MonoBehaviour
	{
		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_PopSpeed;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_PopDistance;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_MoveSpeed;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_ParentTransform;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_ChildTransform;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem[] m_Items;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_TargetRotation;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_StartPosition;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_PoppedPosition;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_TargetPosition;

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x9D8A98", Offset = "0x9D8A98", VA = "0x9D8A98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x9D8B50", Offset = "0x9D8B50", VA = "0x9D8B50")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x9D8DA4", Offset = "0x9D8DA4", VA = "0x9D8DA4")]
		public MenuSelectorMover()
		{
		}
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x2000379")]
	public class GUIArrows : MonoBehaviour
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ShowAngle;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_DesiredDirection;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_ArrowRenderers;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_CurrentAlpha;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_TargetAlpha;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_FadeSpeed;

		[Token(Token = "0x40017F6")]
		private const string k_MaterialPropertyName = "_Alpha";

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x9D8DC0", Offset = "0x9D8DC0", VA = "0x9D8DC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x9D8DD4", Offset = "0x9D8DD4", VA = "0x9D8DD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x9D91C0", Offset = "0x9D91C0", VA = "0x9D91C0")]
		public void Hide()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x9D91E4", Offset = "0x9D91E4", VA = "0x9D91E4")]
		public void Show()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x9D9208", Offset = "0x9D9208", VA = "0x9D9208")]
		public GUIArrows()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class InputWarnings : MonoBehaviour
	{
		[Token(Token = "0x200037B")]
		[CompilerGenerated]
		private sealed class <SingleClickCheckDelay>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400180A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400180B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400180C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputWarnings <>4__this;

			[Token(Token = "0x170003D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600180E")]
				[Address(RVA = "0x9D9FA4", Offset = "0x9D9FA4", VA = "0x9D9FA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001810")]
				[Address(RVA = "0x9D9FEC", Offset = "0x9D9FEC", VA = "0x9D9FEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600180B")]
			[Address(RVA = "0x9D9CBC", Offset = "0x9D9CBC", VA = "0x9D9CBC")]
			[DebuggerHidden]
			public <SingleClickCheckDelay>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600180C")]
			[Address(RVA = "0x9D9EB4", Offset = "0x9D9EB4", VA = "0x9D9EB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600180D")]
			[Address(RVA = "0x9D9EB8", Offset = "0x9D9EB8", VA = "0x9D9EB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600180F")]
			[Address(RVA = "0x9D9FAC", Offset = "0x9D9FAC", VA = "0x9D9FAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037C")]
		[CompilerGenerated]
		private sealed class <DisplayWarning>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400180D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400180E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputWarnings <>4__this;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string message;

			[Token(Token = "0x170003D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001814")]
				[Address(RVA = "0x9DA1E4", Offset = "0x9DA1E4", VA = "0x9DA1E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001816")]
				[Address(RVA = "0x9DA22C", Offset = "0x9DA22C", VA = "0x9DA22C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001811")]
			[Address(RVA = "0x9D9CE4", Offset = "0x9D9CE4", VA = "0x9D9CE4")]
			[DebuggerHidden]
			public <DisplayWarning>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001812")]
			[Address(RVA = "0x9D9FF4", Offset = "0x9D9FF4", VA = "0x9D9FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001813")]
			[Address(RVA = "0x9D9FF8", Offset = "0x9D9FF8", VA = "0x9D9FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001815")]
			[Address(RVA = "0x9DA1EC", Offset = "0x9DA1EC", VA = "0x9DA1EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_WarningDisplayTime;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_ShowDoubleTapWarnings;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_DoubleTapWarningMessage;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_ShowSingleTapWarnings;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_SingleTapWarningMessage;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_WarningText;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_BackgroundImage;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_TextTransform;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_WarningCoroutine;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_SingleClickDelayCoroutine;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_DisplayingWarning;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private VRInput.SwipeDirection m_CurrentSwipe;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_DownTime;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_WarningPosition;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_ScaleMultiplier;

		[Token(Token = "0x4001809")]
		private const float k_ClickIsHoldTime = 0.5f;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x9D921C", Offset = "0x9D921C", VA = "0x9D921C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x9D92D0", Offset = "0x9D92D0", VA = "0x9D92D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x9D96D0", Offset = "0x9D96D0", VA = "0x9D96D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x9D9AD0", Offset = "0x9D9AD0", VA = "0x9D9AD0")]
		private void HandleDoubleClick()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x9D9BBC", Offset = "0x9D9BBC", VA = "0x9D9BBC")]
		private void HandleClick()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x9D9C98", Offset = "0x9D9C98", VA = "0x9D9C98")]
		private void HandleSwipe(VRInput.SwipeDirection swipe)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x9D9CA0", Offset = "0x9D9CA0", VA = "0x9D9CA0")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x9D9C24", Offset = "0x9D9C24", VA = "0x9D9C24")]
		[IteratorStateMachine(typeof(<SingleClickCheckDelay>d__26))]
		private IEnumerator SingleClickCheckDelay()
		{
			return null;
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x9D9B2C", Offset = "0x9D9B2C", VA = "0x9D9B2C")]
		[IteratorStateMachine(typeof(<DisplayWarning>d__27))]
		private IEnumerator DisplayWarning(string message)
		{
			return null;
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x9D9D0C", Offset = "0x9D9D0C", VA = "0x9D9D0C")]
		public void TurnOnDoubleTapWarnings()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x9D9DA0", Offset = "0x9D9DA0", VA = "0x9D9DA0")]
		public void TurnOffDoubleTapWarnings()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x9D9DA8", Offset = "0x9D9DA8", VA = "0x9D9DA8")]
		public void TurnOnSingleTapWarnings()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x9D9E3C", Offset = "0x9D9E3C", VA = "0x9D9E3C")]
		public void TurnOffSingleTapWarnings()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x9D9E44", Offset = "0x9D9E44", VA = "0x9D9E44")]
		public InputWarnings()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_Prefabs;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_NumberInPool;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> m_Pool;

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x9DA234", Offset = "0x9DA234", VA = "0x9DA234")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x9DA274", Offset = "0x9DA274", VA = "0x9DA274")]
		private void AddToPool()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x9DA3E4", Offset = "0x9DA3E4", VA = "0x9DA3E4")]
		public GameObject GetGameObjectFromPool()
		{
			return null;
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x9DA4C4", Offset = "0x9DA4C4", VA = "0x9DA4C4")]
		public void ReturnGameObjectToPool(GameObject go)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x9DA5B8", Offset = "0x9DA5B8", VA = "0x9DA5B8")]
		public ObjectPool()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class PlatformDependentText : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200037F")]
		public class PlatformTextPair
		{
			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RuntimePlatform m_Platform;

			[Token(Token = "0x4001817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Multiline]
			public string m_Text;

			[Token(Token = "0x600181F")]
			[Address(RVA = "0x9DA9F4", Offset = "0x9DA9F4", VA = "0x9DA9F4")]
			public PlatformTextPair(RuntimePlatform platform)
			{
			}
		}

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_TextComponent;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlatformTextPair[] m_PlatformTextPairs;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x9DA640", Offset = "0x9DA640", VA = "0x9DA640")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x9DA770", Offset = "0x9DA770", VA = "0x9DA770")]
		private void Awake()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x9DA81C", Offset = "0x9DA81C", VA = "0x9DA81C")]
		public PlatformDependentText()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class Reticle : MonoBehaviour
	{
		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_DefaultDistance;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_UseNormal;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_ReticleTransform;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_OriginalScale;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x170003D8")]
		public bool UseNormal
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0x9DAA1C", Offset = "0x9DAA1C", VA = "0x9DAA1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x9DAA24", Offset = "0x9DAA24", VA = "0x9DAA24")]
			set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		public Transform ReticleTransform
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x9DAA30", Offset = "0x9DAA30", VA = "0x9DAA30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x9DAA38", Offset = "0x9DAA38", VA = "0x9DAA38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x9DAA7C", Offset = "0x9DAA7C", VA = "0x9DAA7C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x9DAA9C", Offset = "0x9DAA9C", VA = "0x9DAA9C")]
		public void Show()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x9DAABC", Offset = "0x9DAABC", VA = "0x9DAABC")]
		public void SetPosition()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x9DAB80", Offset = "0x9DAB80", VA = "0x9DAB80")]
		public void SetPosition(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x9DACAC", Offset = "0x9DACAC", VA = "0x9DACAC")]
		public Reticle()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class ReturnToMainMenu : MonoBehaviour
	{
		[Token(Token = "0x2000382")]
		[CompilerGenerated]
		private sealed class <FadeToMenu>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReturnToMainMenu <>4__this;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001831")]
				[Address(RVA = "0x9DB0F4", Offset = "0x9DB0F4", VA = "0x9DB0F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001833")]
				[Address(RVA = "0x9DB13C", Offset = "0x9DB13C", VA = "0x9DB13C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600182E")]
			[Address(RVA = "0x9DAF98", Offset = "0x9DAF98", VA = "0x9DAF98")]
			[DebuggerHidden]
			public <FadeToMenu>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600182F")]
			[Address(RVA = "0x9DB018", Offset = "0x9DB018", VA = "0x9DB018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001830")]
			[Address(RVA = "0x9DB01C", Offset = "0x9DB01C", VA = "0x9DB01C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0x9DB0FC", Offset = "0x9DB0FC", VA = "0x9DB0FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_MenuSceneName;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_VRCameraFade;

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x9DACBC", Offset = "0x9DACBC", VA = "0x9DACBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x9DADE0", Offset = "0x9DADE0", VA = "0x9DADE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x9DAF04", Offset = "0x9DAF04", VA = "0x9DAF04")]
		private void HandleCancel()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x9DAF24", Offset = "0x9DAF24", VA = "0x9DAF24")]
		[IteratorStateMachine(typeof(<FadeToMenu>d__6))]
		private IEnumerator FadeToMenu()
		{
			return null;
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x9DAFC0", Offset = "0x9DAFC0", VA = "0x9DAFC0")]
		public ReturnToMainMenu()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class SelectionRadial : MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		[CompilerGenerated]
		private sealed class <FillSelectionRadial>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400182D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400182E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400182F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170003DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001844")]
				[Address(RVA = "0x9DB744", Offset = "0x9DB744", VA = "0x9DB744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001846")]
				[Address(RVA = "0x9DB78C", Offset = "0x9DB78C", VA = "0x9DB78C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001841")]
			[Address(RVA = "0x9DB4E4", Offset = "0x9DB4E4", VA = "0x9DB4E4")]
			[DebuggerHidden]
			public <FillSelectionRadial>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001842")]
			[Address(RVA = "0x9DB648", Offset = "0x9DB648", VA = "0x9DB648", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001843")]
			[Address(RVA = "0x9DB64C", Offset = "0x9DB64C", VA = "0x9DB64C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001845")]
			[Address(RVA = "0x9DB74C", Offset = "0x9DB74C", VA = "0x9DB74C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000385")]
		[CompilerGenerated]
		private sealed class <WaitForSelectionRadialToFill>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x170003DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600184A")]
				[Address(RVA = "0x9DB820", Offset = "0x9DB820", VA = "0x9DB820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600184C")]
				[Address(RVA = "0x9DB868", Offset = "0x9DB868", VA = "0x9DB868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001847")]
			[Address(RVA = "0x9DB580", Offset = "0x9DB580", VA = "0x9DB580")]
			[DebuggerHidden]
			public <WaitForSelectionRadialToFill>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001848")]
			[Address(RVA = "0x9DB794", Offset = "0x9DB794", VA = "0x9DB794", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001849")]
			[Address(RVA = "0x9DB798", Offset = "0x9DB798", VA = "0x9DB798", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600184B")]
			[Address(RVA = "0x9DB828", Offset = "0x9DB828", VA = "0x9DB828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_SelectionDuration;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_HideOnStart;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_Selection;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_SelectionFillRoutine;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_IsSelectionRadialActive;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_RadialFilled;

		[Token(Token = "0x170003DC")]
		public float SelectionDuration
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x9DB144", Offset = "0x9DB144", VA = "0x9DB144")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000039")]
		public event Action OnSelectionComplete
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x9D8278", Offset = "0x9D8278", VA = "0x9D8278")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x9D8434", Offset = "0x9D8434", VA = "0x9D8434")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x9DB14C", Offset = "0x9DB14C", VA = "0x9DB14C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x9DB2C0", Offset = "0x9DB2C0", VA = "0x9DB2C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x9DB434", Offset = "0x9DB434", VA = "0x9DB434")]
		private void Start()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x9D84F8", Offset = "0x9D84F8", VA = "0x9D84F8")]
		public void Show()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x9D8560", Offset = "0x9D8560", VA = "0x9D8560")]
		public void Hide()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x9DB470", Offset = "0x9DB470", VA = "0x9DB470")]
		[IteratorStateMachine(typeof(<FillSelectionRadial>d__17))]
		private IEnumerator FillSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x9DB50C", Offset = "0x9DB50C", VA = "0x9DB50C")]
		[IteratorStateMachine(typeof(<WaitForSelectionRadialToFill>d__18))]
		public IEnumerator WaitForSelectionRadialToFill()
		{
			return null;
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x9DB5A8", Offset = "0x9DB5A8", VA = "0x9DB5A8")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x9DB5E8", Offset = "0x9DB5E8", VA = "0x9DB5E8")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x9DB630", Offset = "0x9DB630", VA = "0x9DB630")]
		public SelectionRadial()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class SelectionSlider : MonoBehaviour
	{
		[Token(Token = "0x2000387")]
		[CompilerGenerated]
		private sealed class <WaitForBarToFill>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x170003E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600185D")]
				[Address(RVA = "0x9DC160", Offset = "0x9DC160", VA = "0x9DC160", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600185F")]
				[Address(RVA = "0x9DC1A8", Offset = "0x9DC1A8", VA = "0x9DC1A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0x9DBD78", Offset = "0x9DBD78", VA = "0x9DBD78")]
			[DebuggerHidden]
			public <WaitForBarToFill>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0x9DC024", Offset = "0x9DC024", VA = "0x9DC024", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185C")]
			[Address(RVA = "0x9DC028", Offset = "0x9DC028", VA = "0x9DC028", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0x9DC168", Offset = "0x9DC168", VA = "0x9DC168", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000388")]
		[CompilerGenerated]
		private sealed class <FillBar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400184D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x400184E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fillTime>5__2;

			[Token(Token = "0x170003E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001863")]
				[Address(RVA = "0x9DC33C", Offset = "0x9DC33C", VA = "0x9DC33C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001865")]
				[Address(RVA = "0x9DC384", Offset = "0x9DC384", VA = "0x9DC384", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001860")]
			[Address(RVA = "0x9DBE14", Offset = "0x9DBE14", VA = "0x9DBE14")]
			[DebuggerHidden]
			public <FillBar>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001861")]
			[Address(RVA = "0x9DC1B0", Offset = "0x9DC1B0", VA = "0x9DC1B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001862")]
			[Address(RVA = "0x9DC1B4", Offset = "0x9DC1B4", VA = "0x9DC1B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001864")]
			[Address(RVA = "0x9DC344", Offset = "0x9DC344", VA = "0x9DC344", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Duration;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_Audio;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip m_OnOverClip;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_OnFilledClip;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_BarCanvas;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UIFader m_UIFader;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Collider m_Collider;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_DisableOnBarFill;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[SerializeField]
		private bool m_DisappearOnBarFill;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool m_BarFilled;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		private bool m_GazeOver;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_Timer;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine m_FillBarRoutine;

		[Token(Token = "0x4001847")]
		private const string k_SliderMaterialPropertyName = "_SliderValue";

		[Token(Token = "0x1400003A")]
		public event Action OnBarFilled
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0x9DB870", Offset = "0x9DB870", VA = "0x9DB870")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600184E")]
			[Address(RVA = "0x9DB90C", Offset = "0x9DB90C", VA = "0x9DB90C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x9DB9A8", Offset = "0x9DB9A8", VA = "0x9DB9A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x9DBB10", Offset = "0x9DBB10", VA = "0x9DBB10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x9DBC78", Offset = "0x9DBC78", VA = "0x9DBC78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x9DBD04", Offset = "0x9DBD04", VA = "0x9DBD04")]
		[IteratorStateMachine(typeof(<WaitForBarToFill>d__25))]
		public IEnumerator WaitForBarToFill()
		{
			return null;
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x9DBDA0", Offset = "0x9DBDA0", VA = "0x9DBDA0")]
		[IteratorStateMachine(typeof(<FillBar>d__26))]
		private IEnumerator FillBar()
		{
			return null;
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x9DBE3C", Offset = "0x9DBE3C", VA = "0x9DBE3C")]
		private void SetSliderValue(float sliderValue)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x9DBF34", Offset = "0x9DBF34", VA = "0x9DBF34")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x9DBF74", Offset = "0x9DBF74", VA = "0x9DBF74")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x9DBFA4", Offset = "0x9DBFA4", VA = "0x9DBFA4")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x9DBFE0", Offset = "0x9DBFE0", VA = "0x9DBFE0")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x9DC014", Offset = "0x9DC014", VA = "0x9DC014")]
		public SelectionSlider()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class UIFader : MonoBehaviour
	{
		[Token(Token = "0x200038A")]
		[CompilerGenerated]
		private sealed class <WaitForFadeIn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600187A")]
				[Address(RVA = "0x9DCC80", Offset = "0x9DCC80", VA = "0x9DCC80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600187C")]
				[Address(RVA = "0x9DCCC8", Offset = "0x9DCCC8", VA = "0x9DCCC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001877")]
			[Address(RVA = "0x9DC684", Offset = "0x9DC684", VA = "0x9DC684")]
			[DebuggerHidden]
			public <WaitForFadeIn>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001878")]
			[Address(RVA = "0x9DCBE0", Offset = "0x9DCBE0", VA = "0x9DCBE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001879")]
			[Address(RVA = "0x9DCBE4", Offset = "0x9DCBE4", VA = "0x9DCBE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600187B")]
			[Address(RVA = "0x9DCC88", Offset = "0x9DCC88", VA = "0x9DCC88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038B")]
		[CompilerGenerated]
		private sealed class <InteruptAndFadeIn>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400185A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001880")]
				[Address(RVA = "0x9DCD5C", Offset = "0x9DCD5C", VA = "0x9DCD5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001882")]
				[Address(RVA = "0x9DCDA4", Offset = "0x9DCDA4", VA = "0x9DCDA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600187D")]
			[Address(RVA = "0x9DC720", Offset = "0x9DC720", VA = "0x9DC720")]
			[DebuggerHidden]
			public <InteruptAndFadeIn>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600187E")]
			[Address(RVA = "0x9DCCD0", Offset = "0x9DCCD0", VA = "0x9DCCD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600187F")]
			[Address(RVA = "0x9DCCD4", Offset = "0x9DCCD4", VA = "0x9DCCD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001881")]
			[Address(RVA = "0x9DCD64", Offset = "0x9DCD64", VA = "0x9DCD64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038C")]
		[CompilerGenerated]
		private sealed class <CheckAndFadeIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400185B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400185C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400185D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001886")]
				[Address(RVA = "0x9DCE3C", Offset = "0x9DCE3C", VA = "0x9DCE3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001888")]
				[Address(RVA = "0x9DCE84", Offset = "0x9DCE84", VA = "0x9DCE84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001883")]
			[Address(RVA = "0x9DC7BC", Offset = "0x9DC7BC", VA = "0x9DC7BC")]
			[DebuggerHidden]
			public <CheckAndFadeIn>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001884")]
			[Address(RVA = "0x9DCDAC", Offset = "0x9DCDAC", VA = "0x9DCDAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001885")]
			[Address(RVA = "0x9DCDB0", Offset = "0x9DCDB0", VA = "0x9DCDB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001887")]
			[Address(RVA = "0x9DCE44", Offset = "0x9DCE44", VA = "0x9DCE44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038D")]
		[CompilerGenerated]
		private sealed class <FadeIn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400185E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400185F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lowestAlpha>5__2;

			[Token(Token = "0x170003EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600188C")]
				[Address(RVA = "0x9DD040", Offset = "0x9DD040", VA = "0x9DD040", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600188E")]
				[Address(RVA = "0x9DD088", Offset = "0x9DD088", VA = "0x9DD088", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001889")]
			[Address(RVA = "0x9DC858", Offset = "0x9DC858", VA = "0x9DC858")]
			[DebuggerHidden]
			public <FadeIn>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600188A")]
			[Address(RVA = "0x9DCE8C", Offset = "0x9DCE8C", VA = "0x9DCE8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600188B")]
			[Address(RVA = "0x9DCE90", Offset = "0x9DCE90", VA = "0x9DCE90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600188D")]
			[Address(RVA = "0x9DD048", Offset = "0x9DD048", VA = "0x9DD048", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038E")]
		[CompilerGenerated]
		private sealed class <WaitForFadeOut>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001892")]
				[Address(RVA = "0x9DD130", Offset = "0x9DD130", VA = "0x9DD130", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001894")]
				[Address(RVA = "0x9DD178", Offset = "0x9DD178", VA = "0x9DD178", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0x9DC8F4", Offset = "0x9DC8F4", VA = "0x9DC8F4")]
			[DebuggerHidden]
			public <WaitForFadeOut>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001890")]
			[Address(RVA = "0x9DD090", Offset = "0x9DD090", VA = "0x9DD090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001891")]
			[Address(RVA = "0x9DD094", Offset = "0x9DD094", VA = "0x9DD094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001893")]
			[Address(RVA = "0x9DD138", Offset = "0x9DD138", VA = "0x9DD138", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038F")]
		[CompilerGenerated]
		private sealed class <InteruptAndFadeOut>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001898")]
				[Address(RVA = "0x9DD20C", Offset = "0x9DD20C", VA = "0x9DD20C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600189A")]
				[Address(RVA = "0x9DD254", Offset = "0x9DD254", VA = "0x9DD254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001895")]
			[Address(RVA = "0x9DC990", Offset = "0x9DC990", VA = "0x9DC990")]
			[DebuggerHidden]
			public <InteruptAndFadeOut>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001896")]
			[Address(RVA = "0x9DD180", Offset = "0x9DD180", VA = "0x9DD180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001897")]
			[Address(RVA = "0x9DD184", Offset = "0x9DD184", VA = "0x9DD184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001899")]
			[Address(RVA = "0x9DD214", Offset = "0x9DD214", VA = "0x9DD214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000390")]
		[CompilerGenerated]
		private sealed class <CheckAndFadeOut>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400186A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600189E")]
				[Address(RVA = "0x9DD2EC", Offset = "0x9DD2EC", VA = "0x9DD2EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A0")]
				[Address(RVA = "0x9DD334", Offset = "0x9DD334", VA = "0x9DD334", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600189B")]
			[Address(RVA = "0x9DCA2C", Offset = "0x9DCA2C", VA = "0x9DCA2C")]
			[DebuggerHidden]
			public <CheckAndFadeOut>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600189C")]
			[Address(RVA = "0x9DD25C", Offset = "0x9DD25C", VA = "0x9DD25C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600189D")]
			[Address(RVA = "0x9DD260", Offset = "0x9DD260", VA = "0x9DD260", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600189F")]
			[Address(RVA = "0x9DD2F4", Offset = "0x9DD2F4", VA = "0x9DD2F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000391")]
		[CompilerGenerated]
		private sealed class <FadeOut>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400186B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400186C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400186D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x400186E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <highestAlpha>5__2;

			[Token(Token = "0x170003F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018A4")]
				[Address(RVA = "0x9DD4E0", Offset = "0x9DD4E0", VA = "0x9DD4E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A6")]
				[Address(RVA = "0x9DD528", Offset = "0x9DD528", VA = "0x9DD528", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x9DCAC8", Offset = "0x9DCAC8", VA = "0x9DCAC8")]
			[DebuggerHidden]
			public <FadeOut>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x9DD33C", Offset = "0x9DD33C", VA = "0x9DD33C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x9DD340", Offset = "0x9DD340", VA = "0x9DD340", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x9DD4E8", Offset = "0x9DD4E8", VA = "0x9DD4E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_FadeSpeed;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup[] m_GroupsToFade;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Fading;

		[Token(Token = "0x170003E5")]
		public bool Visible
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0x9DC5FC", Offset = "0x9DC5FC", VA = "0x9DC5FC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600186B")]
			[Address(RVA = "0x9DC604", Offset = "0x9DC604", VA = "0x9DC604")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action OnFadeInComplete
		{
			[Token(Token = "0x6001866")]
			[Address(RVA = "0x9DC38C", Offset = "0x9DC38C", VA = "0x9DC38C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x9DC428", Offset = "0x9DC428", VA = "0x9DC428")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action OnFadeOutComplete
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x9DC4C4", Offset = "0x9DC4C4", VA = "0x9DC4C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x9DC560", Offset = "0x9DC560", VA = "0x9DC560")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x9DC610", Offset = "0x9DC610", VA = "0x9DC610")]
		[IteratorStateMachine(typeof(<WaitForFadeIn>d__13))]
		public IEnumerator WaitForFadeIn()
		{
			return null;
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x9DC6AC", Offset = "0x9DC6AC", VA = "0x9DC6AC")]
		[IteratorStateMachine(typeof(<InteruptAndFadeIn>d__14))]
		public IEnumerator InteruptAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x9DC748", Offset = "0x9DC748", VA = "0x9DC748")]
		[IteratorStateMachine(typeof(<CheckAndFadeIn>d__15))]
		public IEnumerator CheckAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x9DC7E4", Offset = "0x9DC7E4", VA = "0x9DC7E4")]
		[IteratorStateMachine(typeof(<FadeIn>d__16))]
		public IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x9DC880", Offset = "0x9DC880", VA = "0x9DC880")]
		[IteratorStateMachine(typeof(<WaitForFadeOut>d__17))]
		public IEnumerator WaitForFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x9DC91C", Offset = "0x9DC91C", VA = "0x9DC91C")]
		[IteratorStateMachine(typeof(<InteruptAndFadeOut>d__18))]
		public IEnumerator InteruptAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x9DC9B8", Offset = "0x9DC9B8", VA = "0x9DC9B8")]
		[IteratorStateMachine(typeof(<CheckAndFadeOut>d__19))]
		public IEnumerator CheckAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x9DCA54", Offset = "0x9DCA54", VA = "0x9DCA54")]
		[IteratorStateMachine(typeof(<FadeOut>d__20))]
		public IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x9DCAF0", Offset = "0x9DCAF0", VA = "0x9DCAF0")]
		public void SetVisible()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x9DCB68", Offset = "0x9DCB68", VA = "0x9DCB68")]
		public void SetInvisible()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x9DCBD0", Offset = "0x9DCBD0", VA = "0x9DCBD0")]
		public UIFader()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class UIMovement : MonoBehaviour
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_LookatCamera;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_UIElement;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_RotateWithCamera;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_FollowSpeed;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_DistanceFromCamera;

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x9DD530", Offset = "0x9DD530", VA = "0x9DD530")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x9DD5FC", Offset = "0x9DD5FC", VA = "0x9DD5FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x9DD8C8", Offset = "0x9DD8C8", VA = "0x9DD8C8")]
		public UIMovement()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class UITint : MonoBehaviour
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_Tint;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_TintPercent;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] m_ImagesToTint;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x9DD8E0", Offset = "0x9DD8E0", VA = "0x9DD8E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x9DD9B8", Offset = "0x9DD9B8", VA = "0x9DD9B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x9DDA90", Offset = "0x9DDA90", VA = "0x9DDA90")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x9DDB3C", Offset = "0x9DDB3C", VA = "0x9DDB3C")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x9DDBE8", Offset = "0x9DDBE8", VA = "0x9DDBE8")]
		public UITint()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class VRCameraFade : MonoBehaviour
	{
		[Token(Token = "0x2000395")]
		[CompilerGenerated]
		private sealed class <BeginFadeOut>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x170003F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C2")]
				[Address(RVA = "0x9DE458", Offset = "0x9DE458", VA = "0x9DE458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C4")]
				[Address(RVA = "0x9DE4A0", Offset = "0x9DE4A0", VA = "0x9DE4A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BF")]
			[Address(RVA = "0x9DE0B4", Offset = "0x9DE0B4", VA = "0x9DE0B4")]
			[DebuggerHidden]
			public <BeginFadeOut>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x9DE350", Offset = "0x9DE350", VA = "0x9DE350", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C1")]
			[Address(RVA = "0x9DE354", Offset = "0x9DE354", VA = "0x9DE354", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x9DE460", Offset = "0x9DE460", VA = "0x9DE460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000396")]
		[CompilerGenerated]
		private sealed class <BeginFadeOut>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400188A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x400188B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x400188C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x170003F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C8")]
				[Address(RVA = "0x9DE5B0", Offset = "0x9DE5B0", VA = "0x9DE5B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018CA")]
				[Address(RVA = "0x9DE5F8", Offset = "0x9DE5F8", VA = "0x9DE5F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x9DE174", Offset = "0x9DE174", VA = "0x9DE174")]
			[DebuggerHidden]
			public <BeginFadeOut>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x9DE4A8", Offset = "0x9DE4A8", VA = "0x9DE4A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x9DE4AC", Offset = "0x9DE4AC", VA = "0x9DE4AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C9")]
			[Address(RVA = "0x9DE5B8", Offset = "0x9DE5B8", VA = "0x9DE5B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000397")]
		[CompilerGenerated]
		private sealed class <BeginFadeIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400188D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400188E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400188F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x170003FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018CE")]
				[Address(RVA = "0x9DE708", Offset = "0x9DE708", VA = "0x9DE708", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D0")]
				[Address(RVA = "0x9DE750", Offset = "0x9DE750", VA = "0x9DE750", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018CB")]
			[Address(RVA = "0x9DE224", Offset = "0x9DE224", VA = "0x9DE224")]
			[DebuggerHidden]
			public <BeginFadeIn>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60018CC")]
			[Address(RVA = "0x9DE600", Offset = "0x9DE600", VA = "0x9DE600", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018CD")]
			[Address(RVA = "0x9DE604", Offset = "0x9DE604", VA = "0x9DE604", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018CF")]
			[Address(RVA = "0x9DE710", Offset = "0x9DE710", VA = "0x9DE710", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000398")]
		[CompilerGenerated]
		private sealed class <BeginFadeIn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4001895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x170003FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D4")]
				[Address(RVA = "0x9DE860", Offset = "0x9DE860", VA = "0x9DE860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D6")]
				[Address(RVA = "0x9DE8A8", Offset = "0x9DE8A8", VA = "0x9DE8A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D1")]
			[Address(RVA = "0x9DE2E4", Offset = "0x9DE2E4", VA = "0x9DE2E4")]
			[DebuggerHidden]
			public <BeginFadeIn>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60018D2")]
			[Address(RVA = "0x9DE758", Offset = "0x9DE758", VA = "0x9DE758", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x9DE75C", Offset = "0x9DE75C", VA = "0x9DE75C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x9DE868", Offset = "0x9DE868", VA = "0x9DE868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000399")]
		[CompilerGenerated]
		private sealed class <BeginFade>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startCol;

			[Token(Token = "0x400189A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endCol;

			[Token(Token = "0x400189B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x400189C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <timer>5__2;

			[Token(Token = "0x170003FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018DA")]
				[Address(RVA = "0x9DE9C0", Offset = "0x9DE9C0", VA = "0x9DE9C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000400")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DC")]
				[Address(RVA = "0x9DEA08", Offset = "0x9DEA08", VA = "0x9DEA08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x9DE30C", Offset = "0x9DE30C", VA = "0x9DE30C")]
			[DebuggerHidden]
			public <BeginFade>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x9DE8B0", Offset = "0x9DE8B0", VA = "0x9DE8B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x9DE8B4", Offset = "0x9DE8B4", VA = "0x9DE8B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x9DE9C8", Offset = "0x9DE9C8", VA = "0x9DE9C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_FadeImage;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixerSnapshot m_DefaultSnapshot;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioMixerSnapshot m_FadedSnapshot;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_FadeColor;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_FadeInOnSceneLoad;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool m_FadeInOnStart;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool m_IsFading;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_FadeStartTime;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_FadeOutColor;

		[Token(Token = "0x170003F6")]
		public bool IsFading
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x9DDD30", Offset = "0x9DDD30", VA = "0x9DDD30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action OnFadeComplete
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0x9DDBF8", Offset = "0x9DDBF8", VA = "0x9DDBF8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x9DDC94", Offset = "0x9DDC94", VA = "0x9DDC94")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x9DDD38", Offset = "0x9DDD38", VA = "0x9DDD38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x9DDD6C", Offset = "0x9DDD6C", VA = "0x9DDD6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x9DDDC8", Offset = "0x9DDDC8", VA = "0x9DDDC8")]
		private void OnLevelWasLoaded()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x9DDE18", Offset = "0x9DDE18", VA = "0x9DDE18")]
		public void FadeOut(bool fadeAudio)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x9DDE24", Offset = "0x9DDE24", VA = "0x9DDE24")]
		public void FadeOut(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x9DDDBC", Offset = "0x9DDDBC", VA = "0x9DDDBC")]
		public void FadeIn(bool fadeAudio)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x9DDFD8", Offset = "0x9DDFD8", VA = "0x9DDFD8")]
		public void FadeIn(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x9D8784", Offset = "0x9D8784", VA = "0x9D8784")]
		[IteratorStateMachine(typeof(<BeginFadeOut>d__22))]
		public IEnumerator BeginFadeOut(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x9DE0DC", Offset = "0x9DE0DC", VA = "0x9DE0DC")]
		[IteratorStateMachine(typeof(<BeginFadeOut>d__23))]
		public IEnumerator BeginFadeOut(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x9DE19C", Offset = "0x9DE19C", VA = "0x9DE19C")]
		[IteratorStateMachine(typeof(<BeginFadeIn>d__24))]
		public IEnumerator BeginFadeIn(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x9DE24C", Offset = "0x9DE24C", VA = "0x9DE24C")]
		[IteratorStateMachine(typeof(<BeginFadeIn>d__25))]
		public IEnumerator BeginFadeIn(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x9DDF00", Offset = "0x9DDF00", VA = "0x9DDF00")]
		[IteratorStateMachine(typeof(<BeginFade>d__26))]
		private IEnumerator BeginFade(Color startCol, Color endCol, float duration)
		{
			return null;
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x9DE334", Offset = "0x9DE334", VA = "0x9DE334")]
		public VRCameraFade()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class VRCameraUI : MonoBehaviour
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas m_Canvas;

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x9DEA10", Offset = "0x9DEA10", VA = "0x9DEA10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x9DEA50", Offset = "0x9DEA50", VA = "0x9DEA50")]
		public VRCameraUI()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class VRDeviceManager : MonoBehaviour
	{
		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_RenderScale;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRDeviceManager s_Instance;

		[Token(Token = "0x17000401")]
		public static VRDeviceManager Instance
		{
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x9DEA58", Offset = "0x9DEA58", VA = "0x9DEA58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x9DEB50", Offset = "0x9DEB50", VA = "0x9DEB50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x9DEC78", Offset = "0x9DEC78", VA = "0x9DEC78")]
		private void SetupVR()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x9DEC84", Offset = "0x9DEC84", VA = "0x9DEC84")]
		public VRDeviceManager()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask m_ExclusionLayers;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInput m_VrInput;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_ShowDebugRay;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_DebugRayLength;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_DebugRayDuration;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_RayLength;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRInteractiveItem m_CurrentInteractible;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRInteractiveItem m_LastInteractible;

		[Token(Token = "0x17000402")]
		public VRInteractiveItem CurrentInteractible
		{
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0x9DEDF8", Offset = "0x9DEDF8", VA = "0x9DEDF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action<RaycastHit> OnRaycasthit
		{
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0x9DEC98", Offset = "0x9DEC98", VA = "0x9DEC98")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018E4")]
			[Address(RVA = "0x9DED48", Offset = "0x9DED48", VA = "0x9DED48")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x9DEE00", Offset = "0x9DEE00", VA = "0x9DEE00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x9DEF68", Offset = "0x9DEF68", VA = "0x9DEF68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x9DF0D0", Offset = "0x9DF0D0", VA = "0x9DF0D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x9DF0D4", Offset = "0x9DF0D4", VA = "0x9DF0D4")]
		private void EyeRaycast()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x9DF47C", Offset = "0x9DF47C", VA = "0x9DF47C")]
		private void DeactiveLastInteractible()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x9DF544", Offset = "0x9DF544", VA = "0x9DF544")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x9DF5F4", Offset = "0x9DF5F4", VA = "0x9DF5F4")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x9DF6A4", Offset = "0x9DF6A4", VA = "0x9DF6A4")]
		private void HandleClick()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x9DF754", Offset = "0x9DF754", VA = "0x9DF754")]
		private void HandleDoubleClick()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x9DF804", Offset = "0x9DF804", VA = "0x9DF804")]
		public VREyeRaycaster()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class VRFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_DeltaTime;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_Text;

		[Token(Token = "0x40018AD")]
		private const float k_SmoothingCoef = 0.1f;

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x9DF820", Offset = "0x9DF820", VA = "0x9DF820")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x9DF878", Offset = "0x9DF878", VA = "0x9DF878")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x9DF9C8", Offset = "0x9DF9C8", VA = "0x9DF9C8")]
		public VRFPSCounter()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class VRInput : MonoBehaviour
	{
		[Token(Token = "0x200039F")]
		public enum SwipeDirection
		{
			[Token(Token = "0x40018BC")]
			NONE,
			[Token(Token = "0x40018BD")]
			UP,
			[Token(Token = "0x40018BE")]
			DOWN,
			[Token(Token = "0x40018BF")]
			LEFT,
			[Token(Token = "0x40018C0")]
			RIGHT
		}

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_DoubleClickTime;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_SwipeWidth;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 m_MouseDownPosition;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 m_MouseUpPosition;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_LastMouseUpTime;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_LastHorizontalValue;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_LastVerticalValue;

		[Token(Token = "0x17000403")]
		public float DoubleClickTime
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x9DF9D0", Offset = "0x9DF9D0", VA = "0x9DF9D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action<SwipeDirection> OnSwipe
		{
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x9D9584", Offset = "0x9D9584", VA = "0x9D9584")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x9D9984", Offset = "0x9D9984", VA = "0x9D9984")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event Action OnClick
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x9D94E8", Offset = "0x9D94E8", VA = "0x9D94E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x9D98E8", Offset = "0x9D98E8", VA = "0x9D98E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action OnDown
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x9D9634", Offset = "0x9D9634", VA = "0x9D9634")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x9D9A34", Offset = "0x9D9A34", VA = "0x9D9A34")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action OnUp
		{
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x9DB224", Offset = "0x9DB224", VA = "0x9DB224")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x9DB398", Offset = "0x9DB398", VA = "0x9DB398")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event Action OnDoubleClick
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x9D944C", Offset = "0x9D944C", VA = "0x9D944C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x9D984C", Offset = "0x9D984C", VA = "0x9D984C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action OnCancel
		{
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x9DAD44", Offset = "0x9DAD44", VA = "0x9DAD44")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x9DAE68", Offset = "0x9DAE68", VA = "0x9DAE68")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x9DF9D8", Offset = "0x9DF9D8", VA = "0x9DF9D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x9DF9DC", Offset = "0x9DF9DC", VA = "0x9DF9DC")]
		private void CheckInput()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x9DFB7C", Offset = "0x9DFB7C", VA = "0x9DFB7C")]
		private SwipeDirection DetectSwipe()
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x9DFCB4", Offset = "0x9DFCB4", VA = "0x9DFCB4")]
		private SwipeDirection DetectKeyboardEmulatedSwipe()
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x9DFDC0", Offset = "0x9DFDC0", VA = "0x9DFDC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x9DFE18", Offset = "0x9DFE18", VA = "0x9DFE18")]
		public VRInput()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class VRInteractiveItem : MonoBehaviour
	{
		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_IsOver;

		[Token(Token = "0x17000404")]
		public bool IsOver
		{
			[Token(Token = "0x6001912")]
			[Address(RVA = "0x9E0310", Offset = "0x9E0310", VA = "0x9E0310")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000045")]
		public event Action OnOver
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0x9D7AC0", Offset = "0x9D7AC0", VA = "0x9D7AC0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001907")]
			[Address(RVA = "0x9D7CD0", Offset = "0x9D7CD0", VA = "0x9D7CD0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event Action OnOut
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0x9D7B5C", Offset = "0x9D7B5C", VA = "0x9D7B5C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001909")]
			[Address(RVA = "0x9D7D6C", Offset = "0x9D7D6C", VA = "0x9D7D6C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event Action OnClick
		{
			[Token(Token = "0x600190A")]
			[Address(RVA = "0x9DFE30", Offset = "0x9DFE30", VA = "0x9DFE30")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600190B")]
			[Address(RVA = "0x9DFECC", Offset = "0x9DFECC", VA = "0x9DFECC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action OnDoubleClick
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0x9DFF68", Offset = "0x9DFF68", VA = "0x9DFF68")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600190D")]
			[Address(RVA = "0x9E0004", Offset = "0x9E0004", VA = "0x9E0004")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event Action OnUp
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0x9E00A0", Offset = "0x9E00A0", VA = "0x9E00A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600190F")]
			[Address(RVA = "0x9E013C", Offset = "0x9E013C", VA = "0x9E013C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action OnDown
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0x9E01D8", Offset = "0x9E01D8", VA = "0x9E01D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001911")]
			[Address(RVA = "0x9E0274", Offset = "0x9E0274", VA = "0x9E0274")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x9DF458", Offset = "0x9DF458", VA = "0x9DF458")]
		public void Over()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x9DF524", Offset = "0x9DF524", VA = "0x9DF524")]
		public void Out()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x9DF738", Offset = "0x9DF738", VA = "0x9DF738")]
		public void Click()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x9DF7E8", Offset = "0x9DF7E8", VA = "0x9DF7E8")]
		public void DoubleClick()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x9DF5D8", Offset = "0x9DF5D8", VA = "0x9DF5D8")]
		public void Up()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x9DF688", Offset = "0x9DF688", VA = "0x9DF688")]
		public void Down()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x9E0318", Offset = "0x9E0318", VA = "0x9E0318")]
		public VRInteractiveItem()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class VRTrackingReset : MonoBehaviour
	{
		[Token(Token = "0x600191A")]
		[Address(RVA = "0x9E0320", Offset = "0x9E0320", VA = "0x9E0320")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x9E0328", Offset = "0x9E0328", VA = "0x9E0328")]
		public VRTrackingReset()
		{
		}
	}
}
namespace AssemblyCSharp
{
	[Token(Token = "0x20003A2")]
	public class EmptyClass
	{
		[Token(Token = "0x600191C")]
		[Address(RVA = "0x9E0330", Offset = "0x9E0330", VA = "0x9E0330")]
		public EmptyClass()
		{
		}
	}
}
namespace EntroPi
{
	[Token(Token = "0x20003A3")]
	[AddComponentMenu("EntroPi/Cloud Shadows/Cloud Layer")]
	public class CloudLayer : MonoBehaviour
	{
		[Token(Token = "0x20003A4")]
		public enum BlendMode
		{
			[Token(Token = "0x40018D3")]
			Subtract,
			[Token(Token = "0x40018D4")]
			MultiplyInverse,
			[Token(Token = "0x40018D5")]
			ColorBurn,
			[Token(Token = "0x40018D6")]
			VividLight,
			[Token(Token = "0x40018D7")]
			PinLight
		}

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Cloud texture used by this layer.")]
		[Header("Texture Settings", order = 0)]
		private Texture2D m_Texture;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Texture tiling. Values will be rounded to nearest int value.")]
		[SerializeField]
		private Vector2 m_Tiling;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("Initial texture offset.")]
		private Vector2 m_Offset;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Tooltip("Mode used for blending this layer.")]
		[Header("Blend Settings", order = 1)]
		private BlendMode m_BlendMode;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		[Tooltip("Opacity of this layer.")]
		[SerializeField]
		private float m_Opacity;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Tooltip("Cloud coverage. (0 = no clouds, 1 = overcast)")]
		[Header("Cloud Settings", order = 2)]
		[Range(0f, 1f)]
		private float m_Coverage;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0.1f, 1f)]
		[SerializeField]
		[Tooltip("The softness of the clouds outline.")]
		private float m_Softness;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Tooltip("The velocity of the clouds in world space.")]
		private Vector2 m_Velocity;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 90f)]
		[SerializeField]
		[Tooltip("The angle from the horizon at which the cloud shadows fade out completely.")]
		[Header("Advanced Settings", order = 2)]
		private float m_HorizonAngleThreshold;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[Tooltip("The angle from the horizon over which the cloud shadows fade out.")]
		[Range(0f, 90f)]
		private float m_HorizonAngleFade;

		[Token(Token = "0x17000405")]
		public Texture2D Texture
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0x9E0338", Offset = "0x9E0338", VA = "0x9E0338")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x9E0340", Offset = "0x9E0340", VA = "0x9E0340")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public Vector4 TextureTransform
		{
			[Token(Token = "0x600191F")]
			[Address(RVA = "0x9E0348", Offset = "0x9E0348", VA = "0x9E0348")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x17000407")]
		public Vector2 TextureTiling
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0x9E0354", Offset = "0x9E0354", VA = "0x9E0354")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001921")]
			[Address(RVA = "0x9E035C", Offset = "0x9E035C", VA = "0x9E035C")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public Vector2 TextureOffset
		{
			[Token(Token = "0x6001922")]
			[Address(RVA = "0x9E0364", Offset = "0x9E0364", VA = "0x9E0364")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x9E036C", Offset = "0x9E036C", VA = "0x9E036C")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public BlendMode TextureBlendMode
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x9E0374", Offset = "0x9E0374", VA = "0x9E0374")]
			get
			{
				return default(BlendMode);
			}
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x9E037C", Offset = "0x9E037C", VA = "0x9E037C")]
			set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public float Opacity
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0x9E0384", Offset = "0x9E0384", VA = "0x9E0384")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x9E038C", Offset = "0x9E038C", VA = "0x9E038C")]
			set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public float Coverage
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0x9E0394", Offset = "0x9E0394", VA = "0x9E0394")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001929")]
			[Address(RVA = "0x9E039C", Offset = "0x9E039C", VA = "0x9E039C")]
			set
			{
			}
		}

		[Token(Token = "0x1700040C")]
		public float Softness
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x9E03A4", Offset = "0x9E03A4", VA = "0x9E03A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x9E03AC", Offset = "0x9E03AC", VA = "0x9E03AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public Vector2 Velocity
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x9E03B4", Offset = "0x9E03B4", VA = "0x9E03B4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x9E03BC", Offset = "0x9E03BC", VA = "0x9E03BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public float HorizonAngleThreshold
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0x9E03C4", Offset = "0x9E03C4", VA = "0x9E03C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x9E03CC", Offset = "0x9E03CC", VA = "0x9E03CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public float HorizonAngleFade
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x9E03D4", Offset = "0x9E03D4", VA = "0x9E03D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x9E03DC", Offset = "0x9E03DC", VA = "0x9E03DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x9E03E4", Offset = "0x9E03E4", VA = "0x9E03E4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x9E0518", Offset = "0x9E0518", VA = "0x9E0518")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x9E05B4", Offset = "0x9E05B4", VA = "0x9E05B4")]
		public CloudLayer()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	[AddComponentMenu("EntroPi/Cloud Shadows/Cloud Shadows")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Light))]
	public class CloudShadows : MonoBehaviour
	{
		[Token(Token = "0x40018D8")]
		private const string CloudShadowShaderPath = "Shaders/CloudShadows";

		[Token(Token = "0x40018D9")]
		private const string BlendOpacityShaderPath = "Shaders/BlendOpacity";

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The global opacity of the effect.")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_GlobalOpacity;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[Tooltip("Size in world units that the cloud layer textures will be projected on.")]
		private float m_WorldSize;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Resolution of texture used to render layers into.")]
		[SerializeField]
		private int m_RenderTextureResolution;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Prefab containing Cloud Layer components. Assigning this will ignore all Cloud Layer components added to this GameObject.")]
		[SerializeField]
		private GameObject m_CloudLayerPrefab;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CloudLayer[] m_Layers;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Light m_Light;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_CloudShadowMaterial;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_BlendOpacityMaterial;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture m_RenderTexture1;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture m_RenderTexture2;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_LayerTextureID;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_LayerTextureTransformID;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_LayerParamsID;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_LayerOpacityID;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_OpacityID;

		[Token(Token = "0x17000410")]
		public float GlobalOpacity
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0x9E0660", Offset = "0x9E0660", VA = "0x9E0660")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001936")]
			[Address(RVA = "0x9E0668", Offset = "0x9E0668", VA = "0x9E0668")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public float WorldSize
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0x9E0670", Offset = "0x9E0670", VA = "0x9E0670")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x9E0678", Offset = "0x9E0678", VA = "0x9E0678")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public int RenderTextureResolution
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0x9E0688", Offset = "0x9E0688", VA = "0x9E0688")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x9E0690", Offset = "0x9E0690", VA = "0x9E0690")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public GameObject CloudLayerPrefab
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0x9E0750", Offset = "0x9E0750", VA = "0x9E0750")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x9E0758", Offset = "0x9E0758", VA = "0x9E0758")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public CloudLayer[] Layers
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x9E0834", Offset = "0x9E0834", VA = "0x9E0834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		public RenderTexture RenderTexture
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x9E083C", Offset = "0x9E083C", VA = "0x9E083C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x9E0844", Offset = "0x9E0844", VA = "0x9E0844")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x9E09BC", Offset = "0x9E09BC", VA = "0x9E09BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x9E0A64", Offset = "0x9E0A64", VA = "0x9E0A64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x9E0B2C", Offset = "0x9E0B2C", VA = "0x9E0B2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x9E0E44", Offset = "0x9E0E44", VA = "0x9E0E44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x9E0698", Offset = "0x9E0698", VA = "0x9E0698")]
		private void UpdateRenderTextureResolution()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x9E0774", Offset = "0x9E0774", VA = "0x9E0774")]
		private void UpdateCloudLayers()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x9E0E48", Offset = "0x9E0E48", VA = "0x9E0E48")]
		private void RenderCloudShadows()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x9E12BC", Offset = "0x9E12BC", VA = "0x9E12BC")]
		private Vector4 ExtractCloudLayerParameters(CloudLayer layer)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x9E136C", Offset = "0x9E136C", VA = "0x9E136C")]
		private static float CalculateCloudLayerOpacity(CloudLayer layer, float angleToHorizon)
		{
			return default(float);
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x9E0E0C", Offset = "0x9E0E0C", VA = "0x9E0E0C")]
		private void UpdateLightProperties()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x9E0A68", Offset = "0x9E0A68", VA = "0x9E0A68")]
		private void DisableEffect()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x9E13DC", Offset = "0x9E13DC", VA = "0x9E13DC")]
		public CloudShadows()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class Debug
	{
		[Token(Token = "0x600194C")]
		[Address(RVA = "0x9E05AC", Offset = "0x9E05AC", VA = "0x9E05AC")]
		public static bool Verify(bool condition, string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x9E13F8", Offset = "0x9E13F8", VA = "0x9E13F8")]
		public static bool Verify(bool condition)
		{
			return default(bool);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x9E1400", Offset = "0x9E1400", VA = "0x9E1400")]
		public Debug()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class ResourceUtil
	{
		[Token(Token = "0x600194F")]
		[Address(RVA = "0x9E0D7C", Offset = "0x9E0D7C", VA = "0x9E0D7C")]
		public static Material CreateMaterial(string shaderResource)
		{
			return null;
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x9E1408", Offset = "0x9E1408", VA = "0x9E1408")]
		public static Shader LoadShader(string shaderResource)
		{
			return null;
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x9E14BC", Offset = "0x9E14BC", VA = "0x9E14BC")]
		public static bool CheckShader(Shader shader)
		{
			return default(bool);
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x9E1540", Offset = "0x9E1540", VA = "0x9E1540")]
		public ResourceUtil()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class RenderTextureUtil
	{
		[Token(Token = "0x6001953")]
		[Address(RVA = "0x9E0CD4", Offset = "0x9E0CD4", VA = "0x9E0CD4")]
		public static RenderTexture CreateRenderTexture(int resolution, int depth = 0, TextureWrapMode wrapMode = TextureWrapMode.Repeat, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x9E11F4", Offset = "0x9E11F4", VA = "0x9E11F4")]
		public static void RecreateRenderTexture(ref RenderTexture renderTexture, int resolution)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x9E1244", Offset = "0x9E1244", VA = "0x9E1244")]
		public static void ClearRenderTexture(RenderTexture renderTexture, Color clearColor)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x9E13A8", Offset = "0x9E13A8", VA = "0x9E13A8")]
		public static void SwapRenderTextures(ref RenderTexture renderTexture1, ref RenderTexture renderTexture2)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x9E1548", Offset = "0x9E1548", VA = "0x9E1548")]
		public RenderTextureUtil()
		{
		}
	}
}
namespace LibTessDotNet
{
	[Token(Token = "0x20003A9")]
	internal class Dict<TValue> where TValue : class
	{
		[Token(Token = "0x20003AA")]
		public class Node
		{
			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal TValue _key;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Node _prev;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Node _next;

			[Token(Token = "0x17000416")]
			public TValue Key
			{
				[Token(Token = "0x600195E")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000417")]
			public Node Prev
			{
				[Token(Token = "0x600195F")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000418")]
			public Node Next
			{
				[Token(Token = "0x6001960")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001961")]
			public Node()
			{
			}
		}

		[Token(Token = "0x20003AB")]
		public delegate bool LessOrEqual(TValue lhs, TValue rhs);

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LessOrEqual _leq;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Node _head;

		[Token(Token = "0x6001958")]
		public Dict(LessOrEqual leq)
		{
		}

		[Token(Token = "0x6001959")]
		public Node Insert(TValue key)
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		public Node InsertBefore(Node node, TValue key)
		{
			return null;
		}

		[Token(Token = "0x600195B")]
		public Node Find(TValue key)
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		public Node Min()
		{
			return null;
		}

		[Token(Token = "0x600195D")]
		public void Remove(Node node)
		{
		}
	}
	[Token(Token = "0x20003AC")]
	internal static class Geom
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0x9E1550", Offset = "0x9E1550", VA = "0x9E1550")]
		public static bool IsWindingInside(WindingRule rule, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x9E15FC", Offset = "0x9E15FC", VA = "0x9E15FC")]
		public static bool VertCCW(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(bool);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x9E164C", Offset = "0x9E164C", VA = "0x9E164C")]
		public static bool VertEq(MeshUtils.Vertex lhs, MeshUtils.Vertex rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x9E168C", Offset = "0x9E168C", VA = "0x9E168C")]
		public static bool VertLeq(MeshUtils.Vertex lhs, MeshUtils.Vertex rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x9E16D8", Offset = "0x9E16D8", VA = "0x9E16D8")]
		public static float EdgeEval(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(float);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x9E1748", Offset = "0x9E1748", VA = "0x9E1748")]
		public static float EdgeSign(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(float);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x9E17A8", Offset = "0x9E17A8", VA = "0x9E17A8")]
		public static bool TransLeq(MeshUtils.Vertex lhs, MeshUtils.Vertex rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x9E17F4", Offset = "0x9E17F4", VA = "0x9E17F4")]
		public static float TransEval(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(float);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x9E1864", Offset = "0x9E1864", VA = "0x9E1864")]
		public static float TransSign(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(float);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x9E18C4", Offset = "0x9E18C4", VA = "0x9E18C4")]
		public static bool EdgeGoesLeft(MeshUtils.Edge e)
		{
			return default(bool);
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x9E1908", Offset = "0x9E1908", VA = "0x9E1908")]
		public static bool EdgeGoesRight(MeshUtils.Edge e)
		{
			return default(bool);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x9E192C", Offset = "0x9E192C", VA = "0x9E192C")]
		public static float VertL1dist(MeshUtils.Vertex u, MeshUtils.Vertex v)
		{
			return default(float);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x9E19B0", Offset = "0x9E19B0", VA = "0x9E19B0")]
		public static void AddWinding(MeshUtils.Edge eDst, MeshUtils.Edge eSrc)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x9E19F8", Offset = "0x9E19F8", VA = "0x9E19F8")]
		public static float Interpolate(float a, float x, float b, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x9E1A54", Offset = "0x9E1A54", VA = "0x9E1A54")]
		private static void Swap(ref MeshUtils.Vertex a, ref MeshUtils.Vertex b)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x9E1A88", Offset = "0x9E1A88", VA = "0x9E1A88")]
		public static void EdgeIntersect(MeshUtils.Vertex o1, MeshUtils.Vertex d1, MeshUtils.Vertex o2, MeshUtils.Vertex d2, MeshUtils.Vertex v)
		{
		}
	}
	[Token(Token = "0x20003AD")]
	internal class Mesh : Pooled<Mesh>
	{
		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MeshUtils.Vertex _vHead;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal MeshUtils.Face _fHead;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal MeshUtils.Edge _eHead;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal MeshUtils.Edge _eHeadSym;

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x9E1F00", Offset = "0x9E1F00", VA = "0x9E1F00", Slot = "4")]
		public void Init(IPool pool)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x9E228C", Offset = "0x9E228C", VA = "0x9E228C", Slot = "5")]
		public void Reset(IPool pool)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x9E24B4", Offset = "0x9E24B4", VA = "0x9E24B4")]
		public MeshUtils.Edge MakeEdge(IPool pool)
		{
			return null;
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x9E28DC", Offset = "0x9E28DC", VA = "0x9E28DC")]
		public void Splice(IPool pool, MeshUtils.Edge eOrg, MeshUtils.Edge eDst)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x9E2C2C", Offset = "0x9E2C2C", VA = "0x9E2C2C")]
		public void Delete(IPool pool, MeshUtils.Edge eDel)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x9E2EBC", Offset = "0x9E2EBC", VA = "0x9E2EBC")]
		public MeshUtils.Edge AddEdgeVertex(IPool pool, MeshUtils.Edge eOrg)
		{
			return null;
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x9E2F60", Offset = "0x9E2F60", VA = "0x9E2F60")]
		public MeshUtils.Edge SplitEdge(IPool pool, MeshUtils.Edge eOrg)
		{
			return null;
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x9E305C", Offset = "0x9E305C", VA = "0x9E305C")]
		public MeshUtils.Edge Connect(IPool pool, MeshUtils.Edge eOrg, MeshUtils.Edge eDst)
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x9E3168", Offset = "0x9E3168", VA = "0x9E3168")]
		public void ZapFace(IPool pool, MeshUtils.Face fZap)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x9E3314", Offset = "0x9E3314", VA = "0x9E3314")]
		public void MergeConvexFaces(IPool pool, int maxVertsPerFace)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x9E34E8", Offset = "0x9E34E8", VA = "0x9E34E8")]
		[Conditional("DEBUG")]
		public void Check()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x9E3580", Offset = "0x9E3580", VA = "0x9E3580")]
		public Mesh()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public interface ITypePool
	{
		[Token(Token = "0x6001982")]
		object Get();

		[Token(Token = "0x6001983")]
		void Return(object obj);
	}
	[Token(Token = "0x20003AF")]
	public class DefaultTypePool<T> : ITypePool where T : class, Pooled<T>, new()
	{
		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> _pool;

		[Token(Token = "0x6001984")]
		public object Get()
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		public void Return(object obj)
		{
		}

		[Token(Token = "0x6001986")]
		public DefaultTypePool()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public abstract class IPool
	{
		[Token(Token = "0x6001987")]
		[Address(RVA = "0x9E3588", Offset = "0x9E3588", VA = "0x9E3588")]
		public IPool()
		{
		}

		[Token(Token = "0x6001988")]
		public abstract void Register<T>(ITypePool typePool) where T : class, Pooled<T>, new();

		[Token(Token = "0x6001989")]
		public abstract T Get<T>() where T : class, Pooled<T>, new();

		[Token(Token = "0x600198A")]
		public abstract void Return<T>(T obj) where T : class, Pooled<T>, new();
	}
	[Token(Token = "0x20003B1")]
	public class NullPool : IPool
	{
		[Token(Token = "0x600198B")]
		public override T Get<T>()
		{
			return null;
		}

		[Token(Token = "0x600198C")]
		public override void Register<T>(ITypePool typePool)
		{
		}

		[Token(Token = "0x600198D")]
		public override void Return<T>(T obj)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x9E37D4", Offset = "0x9E37D4", VA = "0x9E37D4")]
		public NullPool()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class DefaultPool : IPool
	{
		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<Type, ITypePool> _register;

		[Token(Token = "0x600198F")]
		public override void Register<T>(ITypePool typePool)
		{
		}

		[Token(Token = "0x6001990")]
		public override T Get<T>()
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		public override void Return<T>(T obj)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x9E37D8", Offset = "0x9E37D8", VA = "0x9E37D8")]
		public DefaultPool()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public interface Pooled<T> where T : class, Pooled<T>, new()
	{
		[Token(Token = "0x6001993")]
		void Init(IPool pool);

		[Token(Token = "0x6001994")]
		void Reset(IPool pool);
	}
	[Token(Token = "0x20003B4")]
	internal static class MeshUtils
	{
		[Token(Token = "0x20003B5")]
		internal class Vertex : Pooled<Vertex>
		{
			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vertex _prev;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vertex _next;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Edge _anEdge;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector3 _coords;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal float _s;

			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float _t;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal PQHandle _pqHandle;

			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal int _n;

			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal object _data;

			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal bool _isReset;

			[Token(Token = "0x600199D")]
			[Address(RVA = "0x9E3870", Offset = "0x9E3870", VA = "0x9E3870", Slot = "4")]
			public void Init(IPool pool)
			{
			}

			[Token(Token = "0x600199E")]
			[Address(RVA = "0x9E3878", Offset = "0x9E3878", VA = "0x9E3878", Slot = "5")]
			public void Reset(IPool pool)
			{
			}

			[Token(Token = "0x600199F")]
			[Address(RVA = "0x9E391C", Offset = "0x9E391C", VA = "0x9E391C")]
			public Vertex()
			{
			}
		}

		[Token(Token = "0x20003B6")]
		internal class Face : Pooled<Face>
		{
			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Face _prev;

			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Face _next;

			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Edge _anEdge;

			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Face _trail;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal int _n;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal bool _marked;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			internal bool _inside;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
			internal bool _isReset;

			[Token(Token = "0x17000419")]
			internal int VertsCount
			{
				[Token(Token = "0x60019A0")]
				[Address(RVA = "0x9E3498", Offset = "0x9E3498", VA = "0x9E3498")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x9E3924", Offset = "0x9E3924", VA = "0x9E3924", Slot = "4")]
			public void Init(IPool pool)
			{
			}

			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x9E392C", Offset = "0x9E392C", VA = "0x9E392C", Slot = "5")]
			public void Reset(IPool pool)
			{
			}

			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x9E3988", Offset = "0x9E3988", VA = "0x9E3988")]
			public Face()
			{
			}
		}

		[Token(Token = "0x20003B7")]
		internal struct EdgePair
		{
			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Edge _e;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Edge _eSym;

			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x9E2184", Offset = "0x9E2184", VA = "0x9E2184")]
			public static EdgePair Create(IPool pool)
			{
				return default(EdgePair);
			}

			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x9E3990", Offset = "0x9E3990", VA = "0x9E3990")]
			public void Reset(IPool pool)
			{
			}
		}

		[Token(Token = "0x20003B8")]
		internal class Edge : Pooled<Edge>
		{
			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal EdgePair _pair;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Edge _next;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Edge _Sym;

			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal Edge _Onext;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Edge _Lnext;

			[Token(Token = "0x400190D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal Vertex _Org;

			[Token(Token = "0x400190E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal Face _Lface;

			[Token(Token = "0x400190F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Tess.ActiveRegion _activeRegion;

			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal int _winding;

			[Token(Token = "0x4001911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal bool _isReset;

			[Token(Token = "0x1700041A")]
			internal Face _Rface
			{
				[Token(Token = "0x60019A6")]
				[Address(RVA = "0x9E2D78", Offset = "0x9E2D78", VA = "0x9E2D78")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019A7")]
				[Address(RVA = "0x9E3040", Offset = "0x9E3040", VA = "0x9E3040")]
				set
				{
				}
			}

			[Token(Token = "0x1700041B")]
			internal Vertex _Dst
			{
				[Token(Token = "0x60019A8")]
				[Address(RVA = "0x9E18EC", Offset = "0x9E18EC", VA = "0x9E18EC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019A9")]
				[Address(RVA = "0x9E3024", Offset = "0x9E3024", VA = "0x9E3024")]
				set
				{
				}
			}

			[Token(Token = "0x1700041C")]
			internal Edge _Oprev
			{
				[Token(Token = "0x60019AA")]
				[Address(RVA = "0x9E2D94", Offset = "0x9E2D94", VA = "0x9E2D94")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019AB")]
				[Address(RVA = "0x9E39B8", Offset = "0x9E39B8", VA = "0x9E39B8")]
				set
				{
				}
			}

			[Token(Token = "0x1700041D")]
			internal Edge _Lprev
			{
				[Token(Token = "0x60019AC")]
				[Address(RVA = "0x9E34CC", Offset = "0x9E34CC", VA = "0x9E34CC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019AD")]
				[Address(RVA = "0x9E39D4", Offset = "0x9E39D4", VA = "0x9E39D4")]
				set
				{
				}
			}

			[Token(Token = "0x1700041E")]
			internal Edge _Dprev
			{
				[Token(Token = "0x60019AE")]
				[Address(RVA = "0x9E39F0", Offset = "0x9E39F0", VA = "0x9E39F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019AF")]
				[Address(RVA = "0x9E3A0C", Offset = "0x9E3A0C", VA = "0x9E3A0C")]
				set
				{
				}
			}

			[Token(Token = "0x1700041F")]
			internal Edge _Rprev
			{
				[Token(Token = "0x60019B0")]
				[Address(RVA = "0x9E3A28", Offset = "0x9E3A28", VA = "0x9E3A28")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019B1")]
				[Address(RVA = "0x9E3A44", Offset = "0x9E3A44", VA = "0x9E3A44")]
				set
				{
				}
			}

			[Token(Token = "0x17000420")]
			internal Edge _Dnext
			{
				[Token(Token = "0x60019B2")]
				[Address(RVA = "0x9E3A60", Offset = "0x9E3A60", VA = "0x9E3A60")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019B3")]
				[Address(RVA = "0x9E3A84", Offset = "0x9E3A84", VA = "0x9E3A84")]
				set
				{
				}
			}

			[Token(Token = "0x17000421")]
			internal Edge _Rnext
			{
				[Token(Token = "0x60019B4")]
				[Address(RVA = "0x9E3AA8", Offset = "0x9E3AA8", VA = "0x9E3AA8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60019B5")]
				[Address(RVA = "0x9E3ACC", Offset = "0x9E3ACC", VA = "0x9E3ACC")]
				set
				{
				}
			}

			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x9E37DC", Offset = "0x9E37DC", VA = "0x9E37DC")]
			internal static void EnsureFirst(ref Edge e)
			{
			}

			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x9E3AF0", Offset = "0x9E3AF0", VA = "0x9E3AF0", Slot = "4")]
			public void Init(IPool pool)
			{
			}

			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x9E3AF8", Offset = "0x9E3AF8", VA = "0x9E3AF8", Slot = "5")]
			public void Reset(IPool pool)
			{
			}

			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x9E3BA0", Offset = "0x9E3BA0", VA = "0x9E3BA0")]
			public Edge()
			{
			}
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x9E2BA8", Offset = "0x9E2BA8", VA = "0x9E2BA8")]
		public static void Splice(Edge a, Edge b)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x9E2694", Offset = "0x9E2694", VA = "0x9E2694")]
		public static void MakeVertex(IPool pool, Edge eOrig, Vertex vNext)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x9E27A8", Offset = "0x9E27A8", VA = "0x9E27A8")]
		public static void MakeFace(IPool pool, Edge eOrig, Face fNext)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x9E2520", Offset = "0x9E2520", VA = "0x9E2520")]
		public static Edge MakeEdge(IPool pool, Edge eNext)
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x9E2DB0", Offset = "0x9E2DB0", VA = "0x9E2DB0")]
		public static void KillEdge(IPool pool, Edge eDel)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x9E29C8", Offset = "0x9E29C8", VA = "0x9E29C8")]
		public static void KillVertex(IPool pool, Vertex vDel, Vertex newOrg)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x9E2AB8", Offset = "0x9E2AB8", VA = "0x9E2AB8")]
		public static void KillFace(IPool pool, Face fDel, Face newLFace)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x9E3810", Offset = "0x9E3810", VA = "0x9E3810")]
		public static float FaceArea(Face f)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003B9")]
	internal struct PQHandle
	{
		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Invalid;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int _handle;
	}
	[Token(Token = "0x20003BA")]
	internal class PriorityHeap<TValue> where TValue : class
	{
		[Token(Token = "0x20003BB")]
		public delegate bool LessOrEqual(TValue lhs, TValue rhs);

		[Token(Token = "0x20003BC")]
		protected class HandleElem
		{
			[Token(Token = "0x400191B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal TValue _key;

			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int _node;

			[Token(Token = "0x60019C8")]
			public HandleElem()
			{
			}
		}

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LessOrEqual _leq;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] _nodes;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HandleElem[] _handles;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _size;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _max;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _freeList;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _initialized;

		[Token(Token = "0x17000422")]
		public bool Empty
		{
			[Token(Token = "0x60019BB")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019BC")]
		public PriorityHeap(int initialSize, LessOrEqual leq)
		{
		}

		[Token(Token = "0x60019BD")]
		private void FloatDown(int curr)
		{
		}

		[Token(Token = "0x60019BE")]
		private void FloatUp(int curr)
		{
		}

		[Token(Token = "0x60019BF")]
		public void Init()
		{
		}

		[Token(Token = "0x60019C0")]
		public PQHandle Insert(TValue value)
		{
			return default(PQHandle);
		}

		[Token(Token = "0x60019C1")]
		public TValue ExtractMin()
		{
			return null;
		}

		[Token(Token = "0x60019C2")]
		public TValue Minimum()
		{
			return null;
		}

		[Token(Token = "0x60019C3")]
		public void Remove(PQHandle handle)
		{
		}
	}
	[Token(Token = "0x20003BD")]
	internal class PriorityQueue<TValue> where TValue : class
	{
		[Token(Token = "0x20003BE")]
		private class StackItem
		{
			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int p;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int r;

			[Token(Token = "0x60019D1")]
			public StackItem()
			{
			}
		}

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PriorityHeap<TValue>.LessOrEqual _leq;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PriorityHeap<TValue> _heap;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TValue[] _keys;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] _order;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _size;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _max;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _initialized;

		[Token(Token = "0x17000423")]
		public bool Empty
		{
			[Token(Token = "0x60019C9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019CA")]
		public PriorityQueue(int initialSize, PriorityHeap<TValue>.LessOrEqual leq)
		{
		}

		[Token(Token = "0x60019CB")]
		private static void Swap(ref int a, ref int b)
		{
		}

		[Token(Token = "0x60019CC")]
		public void Init()
		{
		}

		[Token(Token = "0x60019CD")]
		public PQHandle Insert(TValue value)
		{
			return default(PQHandle);
		}

		[Token(Token = "0x60019CE")]
		public TValue ExtractMin()
		{
			return null;
		}

		[Token(Token = "0x60019CF")]
		public TValue Minimum()
		{
			return null;
		}

		[Token(Token = "0x60019D0")]
		public void Remove(PQHandle handle)
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class Tess
	{
		[Token(Token = "0x20003C0")]
		internal class ActiveRegion : Pooled<ActiveRegion>
		{
			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal MeshUtils.Edge _eUp;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Dict<ActiveRegion>.Node _nodeUp;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int _windingNumber;

			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal bool _inside;

			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			internal bool _sentinel;

			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			internal bool _dirty;

			[Token(Token = "0x4001944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			internal bool _fixUpperEdge;

			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x9E8014", Offset = "0x9E8014", VA = "0x9E8014", Slot = "4")]
			public void Init(IPool pool)
			{
			}

			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x9E8018", Offset = "0x9E8018", VA = "0x9E8018", Slot = "5")]
			public void Reset(IPool pool)
			{
			}

			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x9E8048", Offset = "0x9E8048", VA = "0x9E8048")]
			public ActiveRegion()
			{
			}
		}

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPool _pool;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _normal;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _sUnit;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _tUnit;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _bminX;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _bminY;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _bmaxX;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _bmaxY;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private WindingRule _windingRule;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dict<ActiveRegion> _dict;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PriorityQueue<MeshUtils.Vertex> _pq;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshUtils.Vertex _event;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CombineCallback _combineCallback;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _vertices;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _vertexCount;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] _elements;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _elementCount;

		[Token(Token = "0x4001938")]
		public const int Undef = -1;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float SUnitX;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float SUnitY;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float SentinelCoord;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool NoEmptyPolygons;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[Obsolete]
		public bool UsePooling;

		[Token(Token = "0x17000424")]
		public Vector3 Normal
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x9E6268", Offset = "0x9E6268", VA = "0x9E6268")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000425")]
		public Vector3[] Vertices
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x9E6274", Offset = "0x9E6274", VA = "0x9E6274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000426")]
		public int VertexCount
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x9E627C", Offset = "0x9E627C", VA = "0x9E627C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000427")]
		public int[] Elements
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x9E6284", Offset = "0x9E6284", VA = "0x9E6284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000428")]
		public int ElementCount
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x9E628C", Offset = "0x9E628C", VA = "0x9E628C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x9E3BF4", Offset = "0x9E3BF4", VA = "0x9E3BF4")]
		private ActiveRegion RegionBelow(ActiveRegion reg)
		{
			return null;
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x9E3C1C", Offset = "0x9E3C1C", VA = "0x9E3C1C")]
		private ActiveRegion RegionAbove(ActiveRegion reg)
		{
			return null;
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x9E3C44", Offset = "0x9E3C44", VA = "0x9E3C44")]
		private bool EdgeLeq(ActiveRegion reg1, ActiveRegion reg2)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x9E3D40", Offset = "0x9E3D40", VA = "0x9E3D40")]
		private void DeleteRegion(ActiveRegion reg)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x9E3E04", Offset = "0x9E3E04", VA = "0x9E3E04")]
		private void FixUpperEdge(ActiveRegion reg, MeshUtils.Edge newEdge)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x9E3E64", Offset = "0x9E3E64", VA = "0x9E3E64")]
		private ActiveRegion TopLeftRegion(ActiveRegion reg)
		{
			return null;
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x9E3F24", Offset = "0x9E3F24", VA = "0x9E3F24")]
		private ActiveRegion TopRightRegion(ActiveRegion reg)
		{
			return null;
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x9E3F78", Offset = "0x9E3F78", VA = "0x9E3F78")]
		private ActiveRegion AddRegionBelow(ActiveRegion regAbove, MeshUtils.Edge eNewUp)
		{
			return null;
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x9E407C", Offset = "0x9E407C", VA = "0x9E407C")]
		private void ComputeWinding(ActiveRegion reg)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x9E40D0", Offset = "0x9E40D0", VA = "0x9E40D0")]
		private void FinishRegion(ActiveRegion reg)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x9E411C", Offset = "0x9E411C", VA = "0x9E411C")]
		private MeshUtils.Edge FinishLeftRegions(ActiveRegion regFirst, ActiveRegion regLast)
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x9E4244", Offset = "0x9E4244", VA = "0x9E4244")]
		private void AddRightEdges(ActiveRegion regUp, MeshUtils.Edge eFirst, MeshUtils.Edge eLast, MeshUtils.Edge eTopLeft, bool cleanUp)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x9E47FC", Offset = "0x9E47FC", VA = "0x9E47FC")]
		private void SpliceMergeVertices(MeshUtils.Edge e1, MeshUtils.Edge e2)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x9E4820", Offset = "0x9E4820", VA = "0x9E4820")]
		private void VertexWeights(MeshUtils.Vertex isect, MeshUtils.Vertex org, MeshUtils.Vertex dst, out float w0, out float w1)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x9E4910", Offset = "0x9E4910", VA = "0x9E4910")]
		private void GetIntersectData(MeshUtils.Vertex isect, MeshUtils.Vertex orgUp, MeshUtils.Vertex dstUp, MeshUtils.Vertex orgLo, MeshUtils.Vertex dstLo)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x9E440C", Offset = "0x9E440C", VA = "0x9E440C")]
		private bool CheckForRightSplice(ActiveRegion regUp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x9E4BC4", Offset = "0x9E4BC4", VA = "0x9E4BC4")]
		private bool CheckForLeftSplice(ActiveRegion regUp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x9E4D38", Offset = "0x9E4D38", VA = "0x9E4D38")]
		private bool CheckForIntersect(ActiveRegion regUp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x9E45C0", Offset = "0x9E45C0", VA = "0x9E45C0")]
		private void WalkDirtyRegions(ActiveRegion regUp)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x9E5454", Offset = "0x9E5454", VA = "0x9E5454")]
		private void ConnectRightVertex(ActiveRegion regUp, MeshUtils.Edge eBottomLeft)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x9E565C", Offset = "0x9E565C", VA = "0x9E565C")]
		private void ConnectLeftDegenerate(ActiveRegion regUp, MeshUtils.Vertex vEvent)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x9E582C", Offset = "0x9E582C", VA = "0x9E582C")]
		private void ConnectLeftVertex(MeshUtils.Vertex vEvent)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x9E5760", Offset = "0x9E5760", VA = "0x9E5760")]
		private void SweepEvent(MeshUtils.Vertex vEvent)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x9E5AA8", Offset = "0x9E5AA8", VA = "0x9E5AA8")]
		private void AddSentinel(float smin, float smax, float t)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x9E5BF8", Offset = "0x9E5BF8", VA = "0x9E5BF8")]
		private void InitEdgeDict()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x9E5CE8", Offset = "0x9E5CE8", VA = "0x9E5CE8")]
		private void DoneEdgeDict()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x9E5D70", Offset = "0x9E5D70", VA = "0x9E5D70")]
		private void RemoveDegenerateEdges()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x9E5EB0", Offset = "0x9E5EB0", VA = "0x9E5EB0")]
		private void InitPriorityQ()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x9E60B0", Offset = "0x9E60B0", VA = "0x9E60B0")]
		private void DonePriorityQ()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x9E60BC", Offset = "0x9E60BC", VA = "0x9E60BC")]
		private void RemoveDegenerateFaces()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x9E614C", Offset = "0x9E614C", VA = "0x9E614C")]
		protected void ComputeInterior()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x9E6294", Offset = "0x9E6294", VA = "0x9E6294")]
		public Tess()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x9E62F4", Offset = "0x9E62F4", VA = "0x9E62F4")]
		public Tess(IPool pool)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x9E642C", Offset = "0x9E642C", VA = "0x9E642C")]
		private void ComputeNormal(ref Vector3 norm)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x9E6B40", Offset = "0x9E6B40", VA = "0x9E6B40")]
		private int LongAxis(ref Vector3 v)
		{
			return default(int);
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x9E6C00", Offset = "0x9E6C00", VA = "0x9E6C00")]
		private void CheckOrientation()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x9E6CC4", Offset = "0x9E6CC4", VA = "0x9E6CC4")]
		private void ProjectPolygon()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x9E6FA8", Offset = "0x9E6FA8", VA = "0x9E6FA8")]
		private void TessellateMonoRegion(MeshUtils.Face face)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x9E7194", Offset = "0x9E7194", VA = "0x9E7194")]
		private void TessellateInterior()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x9E71F4", Offset = "0x9E71F4", VA = "0x9E71F4")]
		private void DiscardExterior()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x9E7254", Offset = "0x9E7254", VA = "0x9E7254")]
		private void SetWindingNumber(int value, bool keepOnlyBoundary)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x9E7304", Offset = "0x9E7304", VA = "0x9E7304")]
		private int GetNeighbourFace(MeshUtils.Edge edge)
		{
			return default(int);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x9E733C", Offset = "0x9E733C", VA = "0x9E733C")]
		private void OutputPolymesh(ElementType elementType, int polySize)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x9E773C", Offset = "0x9E773C", VA = "0x9E773C")]
		private void OutputContours()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x9E792C", Offset = "0x9E792C", VA = "0x9E792C")]
		private float SignedArea(IList<Vector3> vertices)
		{
			return default(float);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x9E7B48", Offset = "0x9E7B48", VA = "0x9E7B48")]
		public bool IsClockwise(IList<Vector3> vertices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x9E7B60", Offset = "0x9E7B60", VA = "0x9E7B60")]
		public void AddContour(Vector3[] vertices, ContourOrientation forceOrientation = ContourOrientation.Original)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x9E7E4C", Offset = "0x9E7E4C", VA = "0x9E7E4C")]
		public void AddContour(IList<Vector3> vertices, ContourOrientation forceOrientation = ContourOrientation.Original)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x9E7B64", Offset = "0x9E7B64", VA = "0x9E7B64")]
		private void AddContourInternal(IList<Vector3> vertices, ContourOrientation forceOrientation)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x9E7E50", Offset = "0x9E7E50", VA = "0x9E7E50")]
		public void Tessellate(WindingRule windingRule = WindingRule.EvenOdd, ElementType elementType = ElementType.Polygons, int polySize = 3, [Optional] CombineCallback combineCallback, [Optional] Vector3 normal)
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public enum WindingRule
	{
		[Token(Token = "0x4001946")]
		EvenOdd,
		[Token(Token = "0x4001947")]
		NonZero,
		[Token(Token = "0x4001948")]
		Positive,
		[Token(Token = "0x4001949")]
		Negative,
		[Token(Token = "0x400194A")]
		AbsGeqTwo
	}
	[Token(Token = "0x20003C2")]
	public enum ElementType
	{
		[Token(Token = "0x400194C")]
		Polygons,
		[Token(Token = "0x400194D")]
		ConnectedPolygons,
		[Token(Token = "0x400194E")]
		BoundaryContours
	}
	[Token(Token = "0x20003C3")]
	public enum ContourOrientation
	{
		[Token(Token = "0x4001950")]
		Original,
		[Token(Token = "0x4001951")]
		Clockwise,
		[Token(Token = "0x4001952")]
		CounterClockwise
	}
	[Token(Token = "0x20003C4")]
	public delegate object CombineCallback(Vector3 position, object[] data, float[] weights);
}
namespace Better.StreamingAssets
{
	[Token(Token = "0x20003C5")]
	public static class PathUtil
	{
		[Token(Token = "0x20003C6")]
		private enum NormalizeState
		{
			[Token(Token = "0x4001954")]
			PrevSlash,
			[Token(Token = "0x4001955")]
			PrevDot,
			[Token(Token = "0x4001956")]
			PrevDoubleDot,
			[Token(Token = "0x4001957")]
			NothingSpecial
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x9E81BC", Offset = "0x9E81BC", VA = "0x9E81BC")]
		public static bool IsDirectorySeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x9E81D8", Offset = "0x9E81D8", VA = "0x9E81D8")]
		public static string FixTrailingDirectorySeparators(string path)
		{
			return null;
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x9E82F0", Offset = "0x9E82F0", VA = "0x9E82F0")]
		public static string CombineSlash(string a, string b)
		{
			return null;
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x9E844C", Offset = "0x9E844C", VA = "0x9E844C")]
		public static string NormalizeRelativePath(string relative, bool forceTrailingSlash = false)
		{
			return null;
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x9E8868", Offset = "0x9E8868", VA = "0x9E8868")]
		public static bool IsValidCharacter(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x9E88CC", Offset = "0x9E88CC", VA = "0x9E88CC")]
		public static Regex WildcardToRegex(string pattern)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C7")]
	internal class SubReadOnlyStream : Stream
	{
		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly long m_offset;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool m_leaveOpen;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long? m_length;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stream m_actualStream;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private long m_position;

		[Token(Token = "0x17000429")]
		public override long Length
		{
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0x9E8BF8", Offset = "0x9E8BF8", VA = "0x9E8BF8", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700042A")]
		public override long Position
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0x9E8D48", Offset = "0x9E8D48", VA = "0x9E8D48", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x9E8D68", Offset = "0x9E8D68", VA = "0x9E8D68", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x1700042B")]
		public override bool CanRead
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x9E8DAC", Offset = "0x9E8DAC", VA = "0x9E8DAC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042C")]
		public override bool CanSeek
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x9E8DCC", Offset = "0x9E8DCC", VA = "0x9E8DCC", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042D")]
		public override bool CanWrite
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x9E8DEC", Offset = "0x9E8DEC", VA = "0x9E8DEC", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x9E8A10", Offset = "0x9E8A10", VA = "0x9E8A10")]
		public SubReadOnlyStream(Stream actualStream, bool leaveOpen = false)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x9E8AE4", Offset = "0x9E8AE4", VA = "0x9E8AE4")]
		public SubReadOnlyStream(Stream actualStream, long offset, long length, bool leaveOpen = false)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x9E8DF4", Offset = "0x9E8DF4", VA = "0x9E8DF4", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x9E8F5C", Offset = "0x9E8F5C", VA = "0x9E8F5C", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x9E9020", Offset = "0x9E9020", VA = "0x9E9020", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x9E9060", Offset = "0x9E9060", VA = "0x9E9060", Slot = "30")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x9E90A0", Offset = "0x9E90A0", VA = "0x9E90A0", Slot = "16")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x9E90E0", Offset = "0x9E90E0", VA = "0x9E90E0", Slot = "15")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x9E8CB8", Offset = "0x9E8CB8", VA = "0x9E8CB8")]
		private void ThrowIfDisposed()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x9E8F04", Offset = "0x9E8F04", VA = "0x9E8F04")]
		private void ThrowIfCantRead()
		{
		}
	}
}
namespace Better.StreamingAssets.ZipArchive
{
	[Token(Token = "0x20003C8")]
	internal struct ZipGenericExtraField
	{
		[Token(Token = "0x400195D")]
		private const int SizeOfHeader = 4;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort _tag;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private ushort _size;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private byte[] _data;

		[Token(Token = "0x1700042E")]
		public ushort Tag
		{
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x9E9138", Offset = "0x9E9138", VA = "0x9E9138")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x1700042F")]
		public ushort Size
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x9E9140", Offset = "0x9E9140", VA = "0x9E9140")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000430")]
		public byte[] Data
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x9E9148", Offset = "0x9E9148", VA = "0x9E9148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x9E9150", Offset = "0x9E9150", VA = "0x9E9150")]
		public static bool TryReadBlock(BinaryReader reader, long endExtraField, out ZipGenericExtraField field)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003C9")]
	internal struct Zip64ExtraField
	{
		[Token(Token = "0x4001961")]
		public const int OffsetToFirstField = 4;

		[Token(Token = "0x4001962")]
		private const ushort TagConstant = 1;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort _size;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private long? _uncompressedSize;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long? _compressedSize;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long? _localHeaderOffset;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int? _startDiskNumber;

		[Token(Token = "0x17000431")]
		public long? UncompressedSize
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x9E9234", Offset = "0x9E9234", VA = "0x9E9234")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x9E9240", Offset = "0x9E9240", VA = "0x9E9240")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public long? CompressedSize
		{
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x9E92D4", Offset = "0x9E92D4", VA = "0x9E92D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x9E92E0", Offset = "0x9E92E0", VA = "0x9E92E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000433")]
		public long? LocalHeaderOffset
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x9E92E8", Offset = "0x9E92E8", VA = "0x9E92E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x9E92F4", Offset = "0x9E92F4", VA = "0x9E92F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public int? StartDiskNumber
		{
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x9E92FC", Offset = "0x9E92FC", VA = "0x9E92FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x9E9248", Offset = "0x9E9248", VA = "0x9E9248")]
		private void UpdateSize()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x9E9304", Offset = "0x9E9304", VA = "0x9E9304")]
		public static Zip64ExtraField GetJustZip64Block(Stream extraFieldStream, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber)
		{
			return default(Zip64ExtraField);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x9E9598", Offset = "0x9E9598", VA = "0x9E9598")]
		private static bool TryGetZip64BlockFromGenericExtraField(ZipGenericExtraField extraField, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber, out Zip64ExtraField zip64Block)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CA")]
	internal struct Zip64EndOfCentralDirectoryLocator
	{
		[Token(Token = "0x4001968")]
		public const uint SignatureConstant = 117853008u;

		[Token(Token = "0x4001969")]
		public const int SizeOfBlockWithoutSignature = 16;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint NumberOfDiskWithZip64EOCD;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong OffsetOfZip64EOCD;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint TotalNumberOfDisks;

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x9E9C0C", Offset = "0x9E9C0C", VA = "0x9E9C0C")]
		public static bool TryReadBlock(BinaryReader reader, out Zip64EndOfCentralDirectoryLocator zip64EOCDLocator)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CB")]
	internal struct Zip64EndOfCentralDirectoryRecord
	{
		[Token(Token = "0x400196D")]
		private const uint SignatureConstant = 101075792u;

		[Token(Token = "0x400196E")]
		private const ulong NormalSize = 44uL;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong SizeOfThisRecord;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort VersionMadeBy;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public ushort VersionNeededToExtract;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint NumberOfThisDisk;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint NumberOfDiskWithStartOfCD;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong NumberOfEntriesOnThisDisk;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong NumberOfEntriesTotal;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong SizeOfCentralDirectory;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ulong OffsetOfCentralDirectory;

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x9E9CAC", Offset = "0x9E9CAC", VA = "0x9E9CAC")]
		public static bool TryReadBlock(BinaryReader reader, out Zip64EndOfCentralDirectoryRecord zip64EOCDRecord)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CC")]
	internal struct ZipLocalFileHeader
	{
		[Token(Token = "0x4001978")]
		public const uint DataDescriptorSignature = 134695760u;

		[Token(Token = "0x4001979")]
		public const uint SignatureConstant = 67324752u;

		[Token(Token = "0x400197A")]
		public const int OffsetToCrcFromHeaderStart = 14;

		[Token(Token = "0x400197B")]
		public const int OffsetToBitFlagFromHeaderStart = 6;

		[Token(Token = "0x400197C")]
		public const int SizeOfLocalHeader = 30;

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x9E9DE4", Offset = "0x9E9DE4", VA = "0x9E9DE4")]
		public static bool TrySkipBlock(BinaryReader reader)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CD")]
	internal struct ZipCentralDirectoryFileHeader
	{
		[Token(Token = "0x400197D")]
		public const uint SignatureConstant = 33639248u;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte VersionMadeByCompatibility;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte VersionMadeBySpecification;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort VersionNeededToExtract;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort GeneralPurposeBitFlag;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort CompressionMethod;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint LastModified;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint Crc32;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long CompressedSize;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long UncompressedSize;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ushort FilenameLength;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public ushort ExtraFieldLength;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ushort FileCommentLength;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DiskNumberStart;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ushort InternalFileAttributes;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint ExternalFileAttributes;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long RelativeOffsetOfLocalHeader;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte[] Filename;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte[] FileComment;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<ZipGenericExtraField> ExtraFields;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x9E9F6C", Offset = "0x9E9F6C", VA = "0x9E9F6C")]
		public static bool TryReadBlock(BinaryReader reader, out ZipCentralDirectoryFileHeader header)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CE")]
	internal struct ZipEndOfCentralDirectoryBlock
	{
		[Token(Token = "0x4001991")]
		public const uint SignatureConstant = 101010256u;

		[Token(Token = "0x4001992")]
		public const int SizeOfBlockWithoutSignature = 18;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint Signature;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort NumberOfThisDisk;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort NumberOfTheDiskWithTheStartOfTheCentralDirectory;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort NumberOfEntriesInTheCentralDirectoryOnThisDisk;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public ushort NumberOfEntriesInTheCentralDirectory;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint SizeOfCentralDirectory;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] ArchiveComment;

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x9EA658", Offset = "0x9EA658", VA = "0x9EA658")]
		public static bool TryReadBlock(BinaryReader reader, out ZipEndOfCentralDirectoryBlock eocdBlock)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CF")]
	internal static class ZipHelper
	{
		[Token(Token = "0x400199B")]
		internal const uint Mask32Bit = uint.MaxValue;

		[Token(Token = "0x400199C")]
		internal const ushort Mask16Bit = ushort.MaxValue;

		[Token(Token = "0x400199D")]
		private const int BackwardsSeekingBufferSize = 32;

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x9EA780", Offset = "0x9EA780", VA = "0x9EA780")]
		internal static void ReadBytes(Stream stream, byte[] buffer, int bytesToRead)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x9EA82C", Offset = "0x9EA82C", VA = "0x9EA82C")]
		internal static bool SeekBackwardsToSignature(Stream stream, uint signatureToFind)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x9EA56C", Offset = "0x9EA56C", VA = "0x9EA56C")]
		internal static void AdvanceToPosition(this Stream stream, long position)
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x9EA928", Offset = "0x9EA928", VA = "0x9EA928")]
		private static bool SeekBackwardsAndRead(Stream stream, byte[] buffer, out int bufferPointer)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003D0")]
	public class ZipArchiveException : Exception
	{
		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x9E9BA4", Offset = "0x9E9BA4", VA = "0x9E9BA4")]
		public ZipArchiveException(string msg)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x9EAA40", Offset = "0x9EAA40", VA = "0x9EAA40")]
		public ZipArchiveException(string msg, Exception inner)
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public static class ZipArchiveUtils
	{
		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x9EAAB0", Offset = "0x9EAAB0", VA = "0x9EAAB0")]
		public static void ReadEndOfCentralDirectory(Stream stream, BinaryReader reader, out long expectedNumberOfEntries, out long centralDirectoryStart)
		{
		}
	}
}
namespace System
{
	[Token(Token = "0x20003D2")]
	public static class ObjectExtensions
	{
		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly MethodInfo CloneMethod;

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x9EB018", Offset = "0x9EB018", VA = "0x9EB018")]
		public static bool IsPrimitive(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x9EB0DC", Offset = "0x9EB0DC", VA = "0x9EB0DC")]
		public static object Copy(this object originalObject)
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x9EB1F4", Offset = "0x9EB1F4", VA = "0x9EB1F4")]
		private static object InternalCopy(object originalObject, IDictionary<object, object> visited)
		{
			return null;
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x9EB868", Offset = "0x9EB868", VA = "0x9EB868")]
		private static void RecursiveCopyBaseTypePrivateFields(object originalObject, IDictionary<object, object> visited, object cloneObject, Type typeToReflect)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x9EB6EC", Offset = "0x9EB6EC", VA = "0x9EB6EC")]
		private static void CopyFields(object originalObject, IDictionary<object, object> visited, object cloneObject, Type typeToReflect, BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy, [Optional] Func<FieldInfo, bool> filter)
		{
		}

		[Token(Token = "0x6001A45")]
		public static T Copy<T>(this T original)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20003D5")]
	public class ReferenceEqualityComparer : EqualityComparer<object>
	{
		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x9EBC6C", Offset = "0x9EBC6C", VA = "0x9EBC6C", Slot = "8")]
		public override bool Equals(object x, object y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x9EBC78", Offset = "0x9EBC78", VA = "0x9EBC78", Slot = "9")]
		public override int GetHashCode(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x9EB1AC", Offset = "0x9EB1AC", VA = "0x9EB1AC")]
		public ReferenceEqualityComparer()
		{
		}
	}
}
namespace System.ArrayExtensions
{
	[Token(Token = "0x20003D6")]
	public static class ArrayExtensions
	{
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x9EB650", Offset = "0x9EB650", VA = "0x9EB650")]
		public static void ForEach(this Array array, Action<Array, int[]> action)
		{
		}
	}
	[Token(Token = "0x20003D7")]
	internal class ArrayTraverse
	{
		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] Position;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] maxLengths;

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x9EBC98", Offset = "0x9EBC98", VA = "0x9EBC98")]
		public ArrayTraverse(Array array)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x9EBDBC", Offset = "0x9EBDBC", VA = "0x9EBDBC")]
		public bool Step()
		{
			return default(bool);
		}
	}
}
namespace Virtence.Common.Utilities
{
	[Token(Token = "0x20003D8")]
	[Preserve]
	public class StaticCoroutine : MonoBehaviour
	{
		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StaticCoroutine _instance;

		[Token(Token = "0x17000435")]
		public static StaticCoroutine Instance
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x9EBE64", Offset = "0x9EBE64", VA = "0x9EBE64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x9EC05C", Offset = "0x9EC05C", VA = "0x9EC05C")]
		private StaticCoroutine()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x9EC064", Offset = "0x9EC064", VA = "0x9EC064")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x9EC06C", Offset = "0x9EC06C", VA = "0x9EC06C")]
		private void OnApplicationQuit()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[Preserve]
	public class WebRequestUtilities
	{
		[Token(Token = "0x20003DA")]
		[CompilerGenerated]
		private sealed class <SendRequest>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<UnityWebRequest> startedCallback;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<UnityWebRequest> progressCallback;

			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<bool, UnityWebRequest> finishedCallback;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool disposeAfterFinishedEvent;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A5D")]
				[Address(RVA = "0x9EC518", Offset = "0x9EC518", VA = "0x9EC518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A5F")]
				[Address(RVA = "0x9EC560", Offset = "0x9EC560", VA = "0x9EC560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0x9EC1A4", Offset = "0x9EC1A4", VA = "0x9EC1A4")]
			[DebuggerHidden]
			public <SendRequest>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x9EC3DC", Offset = "0x9EC3DC", VA = "0x9EC3DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x9EC3E0", Offset = "0x9EC3E0", VA = "0x9EC3E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0x9EC520", Offset = "0x9EC520", VA = "0x9EC520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x9EC0D8", Offset = "0x9EC0D8", VA = "0x9EC0D8")]
		[IteratorStateMachine(typeof(<SendRequest>d__0))]
		public static IEnumerator SendRequest(UnityWebRequest request, Action<UnityWebRequest> startedCallback, Action<UnityWebRequest> progressCallback, Action<bool, UnityWebRequest> finishedCallback, bool disposeAfterFinishedEvent = true)
		{
			return null;
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x9EC1CC", Offset = "0x9EC1CC", VA = "0x9EC1CC")]
		public static void PrintDownloadProgress(UnityWebRequest request)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x9EC2D0", Offset = "0x9EC2D0", VA = "0x9EC2D0")]
		public static void PrintUploadProgress(UnityWebRequest request)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x9EC3D4", Offset = "0x9EC3D4", VA = "0x9EC3D4")]
		public WebRequestUtilities()
		{
		}
	}
}
namespace Virtence.VText
{
	[Token(Token = "0x20003DB")]
	public enum GlyphParts
	{
		[Token(Token = "0x40019AE")]
		FrontFace,
		[Token(Token = "0x40019AF")]
		Bevel,
		[Token(Token = "0x40019B0")]
		Side
	}
	[Token(Token = "0x20003DC")]
	public interface IVFont
	{
		[Token(Token = "0x17000438")]
		short Ascender
		{
			[Token(Token = "0x6001A60")]
			get;
		}

		[Token(Token = "0x17000439")]
		short Descender
		{
			[Token(Token = "0x6001A61")]
			get;
		}

		[Token(Token = "0x1700043A")]
		float ScaleToPixelOffset
		{
			[Token(Token = "0x6001A62")]
			get;
		}

		[Token(Token = "0x1700043B")]
		Dictionary<char, MeshAttributes> GlyphMeshAttributesHash
		{
			[Token(Token = "0x6001A63")]
			get;
			[Token(Token = "0x6001A64")]
			set;
		}

		[Token(Token = "0x6001A65")]
		float GetAdvance(char c);

		[Token(Token = "0x6001A66")]
		int GetKernDistance(char left, char right);

		[Token(Token = "0x6001A67")]
		int CalculateRecommendedLineSpacing();

		[Token(Token = "0x6001A68")]
		Glyph GetGlyph(char c);
	}
	[Token(Token = "0x20003DD")]
	internal class VFont : IVFont
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Virtence.OpenTypeCS.Font _font;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float _scaleToPixelOffset;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<char, MeshAttributes> _glyphHash;

		[Token(Token = "0x1700043C")]
		public Virtence.OpenTypeCS.Font Font
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x9EC568", Offset = "0x9EC568", VA = "0x9EC568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		public short Ascender
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x9EC570", Offset = "0x9EC570", VA = "0x9EC570", Slot = "4")]
			get
			{
				return default(short);
			}
		}

		[Token(Token = "0x1700043E")]
		public short Descender
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x9EC588", Offset = "0x9EC588", VA = "0x9EC588", Slot = "5")]
			get
			{
				return default(short);
			}
		}

		[Token(Token = "0x1700043F")]
		public float ScaleToPixelOffset
		{
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0x9EC5A0", Offset = "0x9EC5A0", VA = "0x9EC5A0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000440")]
		private Dictionary<char, MeshAttributes> Virtence.VText.IVFont.GlyphMeshAttributesHash
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0x9EC5A8", Offset = "0x9EC5A8", VA = "0x9EC5A8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x9EC634", Offset = "0x9EC634", VA = "0x9EC634", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x9EC63C", Offset = "0x9EC63C", VA = "0x9EC63C")]
		public VFont(Virtence.OpenTypeCS.Font font)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x9EC698", Offset = "0x9EC698", VA = "0x9EC698", Slot = "9")]
		public float GetAdvance(char c)
		{
			return default(float);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x9EC6CC", Offset = "0x9EC6CC", VA = "0x9EC6CC", Slot = "11")]
		public int CalculateRecommendedLineSpacing()
		{
			return default(int);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x9EC6EC", Offset = "0x9EC6EC", VA = "0x9EC6EC", Slot = "10")]
		public int GetKernDistance(char leftChar, char rightChar)
		{
			return default(int);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x9EC700", Offset = "0x9EC700", VA = "0x9EC700", Slot = "12")]
		public Glyph GetGlyph(char c)
		{
			return null;
		}
	}
	[Token(Token = "0x20003DE")]
	public enum Align
	{
		[Token(Token = "0x40019B5")]
		Base,
		[Token(Token = "0x40019B6")]
		Start,
		[Token(Token = "0x40019B7")]
		Center,
		[Token(Token = "0x40019B8")]
		End,
		[Token(Token = "0x40019B9")]
		Justified
	}
	[Token(Token = "0x20003DF")]
	internal class VTextLayouter
	{
		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Transform _root;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly VTextLayoutParameter _layout;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly float _depth;

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x9EC714", Offset = "0x9EC714", VA = "0x9EC714")]
		public VTextLayouter(Transform root, VTextLayoutParameter layout, float depth = 0f)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x9EC76C", Offset = "0x9EC76C", VA = "0x9EC76C")]
		public void Layout(string text, List<Transform> glyphs, IVFont font, bool layoutOnly = false)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x9EDCD4", Offset = "0x9EDCD4", VA = "0x9EDCD4")]
		private Vector2 CalculateLineSize(string line, IVFont font)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20003E0")]
	internal class BevelBuilder : BevelBuilderStrategy
	{
		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BevelStyle _style;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BevelBuilderStrategy _strategy;

		[Token(Token = "0x17000441")]
		public BevelStyle Style
		{
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0x9EE194", Offset = "0x9EE194", VA = "0x9EE194")]
			get
			{
				return default(BevelStyle);
			}
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x9EE19C", Offset = "0x9EE19C", VA = "0x9EE19C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x9EE3D4", Offset = "0x9EE3D4", VA = "0x9EE3D4")]
		internal BevelBuilder(VTextMeshParameter meshParameter)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x9EE45C", Offset = "0x9EE45C", VA = "0x9EE45C", Slot = "4")]
		internal override void AddBevelFrontFacesToMesh(ref MeshAttributes meshAttribs)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x9EE47C", Offset = "0x9EE47C", VA = "0x9EE47C", Slot = "5")]
		internal override void AddBevelBackfacesToMesh(ref MeshAttributes meshAttribs)
		{
		}
	}
	[Token(Token = "0x20003E1")]
	internal class BevelBuilderChiseled : BevelBuilderStrategy
	{
		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x9EE31C", Offset = "0x9EE31C", VA = "0x9EE31C")]
		internal BevelBuilderChiseled(VTextMeshParameter meshParameter)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x9EE49C", Offset = "0x9EE49C", VA = "0x9EE49C", Slot = "5")]
		internal override void AddBevelBackfacesToMesh(ref MeshAttributes meshAttribs)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x9EF078", Offset = "0x9EF078", VA = "0x9EF078", Slot = "4")]
		internal override void AddBevelFrontFacesToMesh(ref MeshAttributes meshAttribs)
		{
		}
	}
	[Token(Token = "0x20003E2")]
	internal class BevelBuilderFlat : BevelBuilderStrategy
	{
		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x9EE320", Offset = "0x9EE320", VA = "0x9EE320")]
		internal BevelBuilderFlat(VTextMeshParameter meshParameter)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x9EFBD4", Offset = "0x9EFBD4", VA = "0x9EFBD4", Slot = "5")]
		internal override void AddBevelBackfacesToMesh(ref MeshAttributes meshAttribs)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x9F0898", Offset = "0x9F0898", VA = "0x9F0898", Slot = "4")]
		internal override void AddBevelFrontFacesToMesh(ref MeshAttributes meshAttribs)
		{
		}
	}
	[Token(Token = "0x20003E3")]
	internal class BevelBuilderProfile : BevelBuilderStrategy
	{
		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _bevelFraction;

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x9EE324", Offset = "0x9EE324", VA = "0x9EE324")]
		internal BevelBuilderProfile(VTextMeshParameter meshParameter)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x9F14D4", Offset = "0x9F14D4", VA = "0x9F14D4", Slot = "5")]
		internal override void AddBevelBackfacesToMesh(ref MeshAttributes meshAttribs)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x9F23E8", Offset = "0x9F23E8", VA = "0x9F23E8", Slot = "4")]
		internal override void AddBevelFrontFacesToMesh(ref MeshAttributes meshAttribs)
		{
		}
	}
	[Token(Token = "0x20003E4")]
	internal class BevelBuilderRound : BevelBuilderStrategy
	{
		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x9EE3CC", Offset = "0x9EE3CC", VA = "0x9EE3CC")]
		internal BevelBuilderRound(VTextMeshParameter meshParameter)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x9F32BC", Offset = "0x9F32BC", VA = "0x9F32BC", Slot = "5")]
		internal override void AddBevelBackfacesToMesh(ref MeshAttributes meshAttribs)
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x9F3EA0", Offset = "0x9F3EA0", VA = "0x9F3EA0", Slot = "4")]
		internal override void AddBevelFrontFacesToMesh(ref MeshAttributes meshAttribs)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	internal class BevelBuilderStep : BevelBuilderStrategy
	{
		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x9EE3D0", Offset = "0x9EE3D0", VA = "0x9EE3D0")]
		internal BevelBuilderStep(VTextMeshParameter meshParameter)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x9F49D8", Offset = "0x9F49D8", VA = "0x9F49D8", Slot = "5")]
		internal override void AddBevelBackfacesToMesh(ref MeshAttributes meshAttribs)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x9F5CAC", Offset = "0x9F5CAC", VA = "0x9F5CAC", Slot = "4")]
		internal override void AddBevelFrontFacesToMesh(ref MeshAttributes meshAttribs)
		{
		}
	}
	[Token(Token = "0x20003E6")]
	internal abstract class BevelBuilderStrategy
	{
		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly float ROOT_TWO_TIMES_BEVEL;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VTextMeshParameter _meshParameter;

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x9EE404", Offset = "0x9EE404", VA = "0x9EE404")]
		internal BevelBuilderStrategy(VTextMeshParameter meshParameter)
		{
		}

		[Token(Token = "0x6001A8C")]
		internal abstract void AddBevelFrontFacesToMesh(ref MeshAttributes meshAttribs);

		[Token(Token = "0x6001A8D")]
		internal abstract void AddBevelBackfacesToMesh(ref MeshAttributes meshAttribs);
	}
	[Token(Token = "0x20003E7")]
	public enum BevelStyle
	{
		[Token(Token = "0x40019C3")]
		Round,
		[Token(Token = "0x40019C4")]
		Flat,
		[Token(Token = "0x40019C5")]
		Chiseled,
		[Token(Token = "0x40019C6")]
		Step,
		[Token(Token = "0x40019C7")]
		Profile
	}
	[Token(Token = "0x20003E8")]
	internal struct Contour
	{
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3[] verts;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 Normal;

		[Token(Token = "0x17000442")]
		public int Count
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x9F7160", Offset = "0x9F7160", VA = "0x9F7160")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000443")]
		public Vector3[] Vertices
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x9F717C", Offset = "0x9F717C", VA = "0x9F717C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000444")]
		public List<Vector3> VertexList
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x9F7184", Offset = "0x9F7184", VA = "0x9F7184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x9F71CC", Offset = "0x9F71CC", VA = "0x9F71CC")]
		public Contour(Vector3[] vertexPositions, Vector3 normal)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x9F7208", Offset = "0x9F7208", VA = "0x9F7208")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x9F7228", Offset = "0x9F7228", VA = "0x9F7228")]
		private void Clamp(ref int index)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x9F7278", Offset = "0x9F7278", VA = "0x9F7278")]
		public Vector3 GetPrev(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x9F72D0", Offset = "0x9F72D0", VA = "0x9F72D0")]
		public Vector3 GetCurr(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x9F7324", Offset = "0x9F7324", VA = "0x9F7324")]
		public Vector3 GetNext(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x9F737C", Offset = "0x9F737C", VA = "0x9F737C")]
		public Vector3 GetPrevFaceNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x9F74B4", Offset = "0x9F74B4", VA = "0x9F74B4")]
		public Vector3 GetNextFaceNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x9F75EC", Offset = "0x9F75EC", VA = "0x9F75EC")]
		public Vector3 GetAverageFaceNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x9F76FC", Offset = "0x9F76FC", VA = "0x9F76FC")]
		public Vector3 GetPrevFaceBevelVertexDirection(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x9F7714", Offset = "0x9F7714", VA = "0x9F7714")]
		public Vector3 GetAverageFaceBevelVertexDirection(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x9F772C", Offset = "0x9F772C", VA = "0x9F772C")]
		public Vector3 GetNextFaceBevelVertexDirection(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x9F7744", Offset = "0x9F7744", VA = "0x9F7744")]
		public Vector3 GetCornerBevelVertexDirection(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x9F77A0", Offset = "0x9F77A0", VA = "0x9F77A0")]
		public Vector3 GetIntersectingFaceBevelVertexDirection(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x9F78EC", Offset = "0x9F78EC", VA = "0x9F78EC")]
		public float GetSignedAngle(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x9F7A94", Offset = "0x9F7A94", VA = "0x9F7A94", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003E9")]
	internal struct ContourVertexAttributes
	{
		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Vector3 VertexPosition;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Vector3 BevelVertexDirection;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vector3 Normal;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float VDistanceContour;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal float VDistanceBevel;

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x9F7BF0", Offset = "0x9F7BF0", VA = "0x9F7BF0")]
		internal ContourVertexAttributes(Vector3 vertexPosition, Vector3 bevelVertexPosition, Vector3 normal, float vDistContour, float vDistBevel)
		{
		}
	}
	[Token(Token = "0x20003EA")]
	internal struct CubicBezierCurve
	{
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Vector3> _bezierControlPoints;

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x9F7C1C", Offset = "0x9F7C1C", VA = "0x9F7C1C")]
		public CubicBezierCurve(List<Vector3> ControlPoints)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x9F7C24", Offset = "0x9F7C24", VA = "0x9F7C24")]
		internal List<Vector3> Flatten(double tolerance)
		{
			return null;
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x9F839C", Offset = "0x9F839C", VA = "0x9F839C")]
		private Vector3 DeCasteljau(int iFirst, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x9F7E94", Offset = "0x9F7E94", VA = "0x9F7E94")]
		private void FlattenSegment(int iFirst, double tolerance, List<Vector3> points)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x9F7E3C", Offset = "0x9F7E3C", VA = "0x9F7E3C")]
		private Vector3 GetBezierPoint(int index)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003EB")]
	public class MeshAttributes
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal List<Vector3> Verticies;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal List<int[]> Indicies;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<Vector3> Normals;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal List<Vector2> UVs;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal List<List<ContourVertexAttributes>> VertexAttributes;

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x9F84F4", Offset = "0x9F84F4", VA = "0x9F84F4")]
		public MeshAttributes()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x9F8740", Offset = "0x9F8740", VA = "0x9F8740")]
		public MeshAttributes(MeshAttributes other)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x9F8CA8", Offset = "0x9F8CA8", VA = "0x9F8CA8")]
		public MeshAttributes(UnityEngine.Mesh mesh)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x9F8E38", Offset = "0x9F8E38", VA = "0x9F8E38")]
		public MeshAttributes(List<Vector3> verticies, List<int[]> indicies, List<Vector3> normals, List<Vector2> uvs)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x9F8EAC", Offset = "0x9F8EAC", VA = "0x9F8EAC")]
		internal UnityEngine.Mesh ToMesh(float scale = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x9F9248", Offset = "0x9F9248", VA = "0x9F9248", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003EC")]
	[Preserve]
	internal class VTextGlyphBuilder
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private VTextMeshParameter _meshParameter;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IVFont _font;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPathBuilder _pathBuilder;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<char, MeshAttributes> _glyphMeshes;

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x9F95D0", Offset = "0x9F95D0", VA = "0x9F95D0")]
		internal VTextGlyphBuilder(VTextMeshParameter meshParameter, IVFont font)
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x9F96FC", Offset = "0x9F96FC", VA = "0x9F96FC")]
		public IEnumerable<MeshFilter> AddGlyphMeshFilters(List<Transform> transforms, float size)
		{
			return null;
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x9F9BB0", Offset = "0x9F9BB0", VA = "0x9F9BB0")]
		private void ApplyFrontface(ref MeshAttributes meshAttribs, char selectedChar)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x9F9FAC", Offset = "0x9F9FAC", VA = "0x9F9FAC")]
		private void ApplyBackface(ref MeshAttributes meshAttribs)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x9FA41C", Offset = "0x9FA41C", VA = "0x9FA41C")]
		private void ApplySides(ref MeshAttributes meshAttribs)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x9FA538", Offset = "0x9FA538", VA = "0x9FA538")]
		protected void CalculateVertexAttributes(ref MeshAttributes meshAttribs, List<Contour> contours)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x9FB1AC", Offset = "0x9FB1AC", VA = "0x9FB1AC")]
		protected List<ContourVertexAttributes> CalculateVertexAttributes(Contour contour)
		{
			return null;
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x9FA7A4", Offset = "0x9FA7A4", VA = "0x9FA7A4")]
		protected void AddSidesToMesh(ref MeshAttributes meshAttribs)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EE")]
	public class VTextAdditionalComponents
	{
		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject _additionalComponentsObject;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _modified;

		[Token(Token = "0x17000445")]
		public GameObject AdditionalComponentsObject
		{
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0x9FBE3C", Offset = "0x9FBE3C", VA = "0x9FBE3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x9FBE44", Offset = "0x9FBE44", VA = "0x9FBE44")]
			set
			{
			}
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x9FBED0", Offset = "0x9FBED0", VA = "0x9FBED0")]
		public bool CheckClearModified()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x9FBEEC", Offset = "0x9FBEEC", VA = "0x9FBEEC")]
		public VTextAdditionalComponents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EF")]
	public class VTextLayoutParameter
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _isHorizontal;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Align _major;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Align _minor;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _size;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _spacing;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _glyphSpacing;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve _curveXZ;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve _curveXY;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _orientXZ;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool _orientXY;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[SerializeField]
		private bool _isCircular;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float _startRadius;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _endRadius;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _circleRadius;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _animateRadius;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve _curveRadius;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool _modified;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		private bool _rebuild;

		[Token(Token = "0x17000446")]
		public bool IsHorizontal
		{
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0x9FC734", Offset = "0x9FC734", VA = "0x9FC734")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x9FC73C", Offset = "0x9FC73C", VA = "0x9FC73C")]
			set
			{
			}
		}

		[Token(Token = "0x17000447")]
		public Align Major
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x9FC7F8", Offset = "0x9FC7F8", VA = "0x9FC7F8")]
			get
			{
				return default(Align);
			}
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x9FC800", Offset = "0x9FC800", VA = "0x9FC800")]
			set
			{
			}
		}

		[Token(Token = "0x17000448")]
		public Align Minor
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x9FC8C4", Offset = "0x9FC8C4", VA = "0x9FC8C4")]
			get
			{
				return default(Align);
			}
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x9FC8CC", Offset = "0x9FC8CC", VA = "0x9FC8CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public float Size
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x9FC984", Offset = "0x9FC984", VA = "0x9FC984")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x9FC98C", Offset = "0x9FC98C", VA = "0x9FC98C")]
			set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public float Spacing
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x9FCA44", Offset = "0x9FCA44", VA = "0x9FCA44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0x9FCA4C", Offset = "0x9FCA4C", VA = "0x9FCA4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700044B")]
		public float GlyphSpacing
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0x9FCB04", Offset = "0x9FCB04", VA = "0x9FCB04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0x9FCB0C", Offset = "0x9FCB0C", VA = "0x9FCB0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700044C")]
		public AnimationCurve CurveXZ
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0x9FCBC4", Offset = "0x9FCBC4", VA = "0x9FCBC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x9FCBCC", Offset = "0x9FCBCC", VA = "0x9FCBCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public AnimationCurve CurveXY
		{
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x9FCBDC", Offset = "0x9FCBDC", VA = "0x9FCBDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0x9FCBE4", Offset = "0x9FCBE4", VA = "0x9FCBE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700044E")]
		public bool OrientationXZ
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x9FCBF4", Offset = "0x9FCBF4", VA = "0x9FCBF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x9FCBFC", Offset = "0x9FCBFC", VA = "0x9FCBFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700044F")]
		public bool OrientationXY
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0x9FCC1C", Offset = "0x9FCC1C", VA = "0x9FCC1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0x9FCC24", Offset = "0x9FCC24", VA = "0x9FCC24")]
			set
			{
			}
		}

		[Token(Token = "0x17000450")]
		public bool OrientationCircular
		{
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0x9FCC44", Offset = "0x9FCC44", VA = "0x9FCC44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0x9FCC4C", Offset = "0x9FCC4C", VA = "0x9FCC4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public float StartRadius
		{
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0x9FCC6C", Offset = "0x9FCC6C", VA = "0x9FCC6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0x9FCC74", Offset = "0x9FCC74", VA = "0x9FCC74")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public float EndRadius
		{
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0x9FCC90", Offset = "0x9FCC90", VA = "0x9FCC90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0x9FCC98", Offset = "0x9FCC98", VA = "0x9FCC98")]
			set
			{
			}
		}

		[Token(Token = "0x17000453")]
		public float CircleRadius
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0x9FCCB4", Offset = "0x9FCCB4", VA = "0x9FCCB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0x9FCCBC", Offset = "0x9FCCBC", VA = "0x9FCCBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000454")]
		public bool AnimateRadius
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0x9FCCD8", Offset = "0x9FCCD8", VA = "0x9FCCD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0x9FCCE0", Offset = "0x9FCCE0", VA = "0x9FCCE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000455")]
		public AnimationCurve CurveRadius
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0x9FCD00", Offset = "0x9FCD00", VA = "0x9FCD00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0x9FCD08", Offset = "0x9FCD08", VA = "0x9FCD08")]
			set
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event EventHandler<GenericEventArgs<bool>> IsHorizontalLayoutChanged
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x9FBEF4", Offset = "0x9FBEF4", VA = "0x9FBEF4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x9FBFA4", Offset = "0x9FBFA4", VA = "0x9FBFA4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event EventHandler<GenericEventArgs<float>> SizeChanged
		{
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x9FC054", Offset = "0x9FC054", VA = "0x9FC054")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0x9FC104", Offset = "0x9FC104", VA = "0x9FC104")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event EventHandler<GenericEventArgs<Align>> MajorChanged
		{
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0x9FC1B4", Offset = "0x9FC1B4", VA = "0x9FC1B4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x9FC264", Offset = "0x9FC264", VA = "0x9FC264")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event EventHandler<GenericEventArgs<Align>> MinorChanged
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x9FC314", Offset = "0x9FC314", VA = "0x9FC314")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x9FC3C4", Offset = "0x9FC3C4", VA = "0x9FC3C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event EventHandler<GenericEventArgs<float>> LineSpacingChanged
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x9FC474", Offset = "0x9FC474", VA = "0x9FC474")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x9FC524", Offset = "0x9FC524", VA = "0x9FC524")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event EventHandler<GenericEventArgs<float>> GlyphSpacingChanged
		{
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0x9FC5D4", Offset = "0x9FC5D4", VA = "0x9FC5D4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x9FC684", Offset = "0x9FC684", VA = "0x9FC684")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x9FCD30", Offset = "0x9FCD30", VA = "0x9FCD30")]
		public VTextLayoutParameter()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x9FD054", Offset = "0x9FD054", VA = "0x9FD054")]
		public bool CheckClearModified()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x9FD070", Offset = "0x9FD070", VA = "0x9FD070")]
		public bool CheckClearRebuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x9FD08C", Offset = "0x9FD08C", VA = "0x9FD08C")]
		public void ForceUpdate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F0")]
	public class VTextMeshParameter
	{
		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _depth;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _bevel;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BevelStyle _bevelStyle;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve _bevelProfile;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _useFaceUVs;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _generateTangents;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool _hasBackface;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float _crease;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float _resolution;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string _fontName;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _text;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _modified;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _rebuild;

		[Token(Token = "0x17000456")]
		public float Depth
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x9FDE58", Offset = "0x9FDE58", VA = "0x9FDE58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0x9FDE60", Offset = "0x9FDE60", VA = "0x9FDE60")]
			set
			{
			}
		}

		[Token(Token = "0x17000457")]
		public float Bevel
		{
			[Token(Token = "0x6001B02")]
			[Address(RVA = "0x9FDF20", Offset = "0x9FDF20", VA = "0x9FDF20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0x9FDF28", Offset = "0x9FDF28", VA = "0x9FDF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public BevelStyle BevelStyle
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x9FDFE8", Offset = "0x9FDFE8", VA = "0x9FDFE8")]
			get
			{
				return default(BevelStyle);
			}
			[Token(Token = "0x6001B05")]
			[Address(RVA = "0x9FDFF0", Offset = "0x9FDFF0", VA = "0x9FDFF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public AnimationCurve BevelProfile
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0x9FE0A8", Offset = "0x9FE0A8", VA = "0x9FE0A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0x9FE0B0", Offset = "0x9FE0B0", VA = "0x9FE0B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public bool UseFaceUVs
		{
			[Token(Token = "0x6001B08")]
			[Address(RVA = "0x9FE178", Offset = "0x9FE178", VA = "0x9FE178")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B09")]
			[Address(RVA = "0x9FE180", Offset = "0x9FE180", VA = "0x9FE180")]
			set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public float Resolution
		{
			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0x9FE23C", Offset = "0x9FE23C", VA = "0x9FE23C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0x9FE244", Offset = "0x9FE244", VA = "0x9FE244")]
			set
			{
			}
		}

		[Token(Token = "0x1700045C")]
		public bool HasBackface
		{
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x9FE2FC", Offset = "0x9FE2FC", VA = "0x9FE2FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0x9FE304", Offset = "0x9FE304", VA = "0x9FE304")]
			set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public bool GenerateTangents
		{
			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0x9FE3C0", Offset = "0x9FE3C0", VA = "0x9FE3C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0x9FE3C8", Offset = "0x9FE3C8", VA = "0x9FE3C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700045E")]
		public string FontName
		{
			[Token(Token = "0x6001B10")]
			[Address(RVA = "0x9FE484", Offset = "0x9FE484", VA = "0x9FE484")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B11")]
			[Address(RVA = "0x9FE48C", Offset = "0x9FE48C", VA = "0x9FE48C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045F")]
		public string Text
		{
			[Token(Token = "0x6001B12")]
			[Address(RVA = "0x9FE568", Offset = "0x9FE568", VA = "0x9FE568")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0x9FE570", Offset = "0x9FE570", VA = "0x9FE570")]
			set
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event EventHandler<GenericEventArgs<float>> DepthChanged
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x9FD098", Offset = "0x9FD098", VA = "0x9FD098")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x9FD148", Offset = "0x9FD148", VA = "0x9FD148")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event EventHandler<GenericEventArgs<float>> BevelChanged
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x9FD1F8", Offset = "0x9FD1F8", VA = "0x9FD1F8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0x9FD2A8", Offset = "0x9FD2A8", VA = "0x9FD2A8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event EventHandler<GenericEventArgs<bool>> UseFaceUVsChanged
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x9FD358", Offset = "0x9FD358", VA = "0x9FD358")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0x9FD408", Offset = "0x9FD408", VA = "0x9FD408")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event EventHandler<GenericEventArgs<BevelStyle>> BevelStyleChanged
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x9FD4B8", Offset = "0x9FD4B8", VA = "0x9FD4B8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x9FD568", Offset = "0x9FD568", VA = "0x9FD568")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event EventHandler<GenericEventArgs<AnimationCurve>> BevelProfileChanged
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x9FD618", Offset = "0x9FD618", VA = "0x9FD618")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x9FD6C8", Offset = "0x9FD6C8", VA = "0x9FD6C8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event EventHandler<GenericEventArgs<bool>> GenerateTangentsChanged
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x9FD778", Offset = "0x9FD778", VA = "0x9FD778")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x9FD828", Offset = "0x9FD828", VA = "0x9FD828")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event EventHandler<GenericEventArgs<bool>> HasBackfaceChanged
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x9FD8D8", Offset = "0x9FD8D8", VA = "0x9FD8D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0x9FD988", Offset = "0x9FD988", VA = "0x9FD988")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event EventHandler<GenericEventArgs<float>> CreaseChanged
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x9FDA38", Offset = "0x9FDA38", VA = "0x9FDA38")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0x9FDAE8", Offset = "0x9FDAE8", VA = "0x9FDAE8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event EventHandler<GenericEventArgs<float>> ResolutionChanged
		{
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0x9FDB98", Offset = "0x9FDB98", VA = "0x9FDB98")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0x9FDC48", Offset = "0x9FDC48", VA = "0x9FDC48")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event EventHandler<GenericEventArgs<string>> FontNameChanged
		{
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x9FDCF8", Offset = "0x9FDCF8", VA = "0x9FDCF8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0x9FDDA8", Offset = "0x9FDDA8", VA = "0x9FDDA8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x9FE5C0", Offset = "0x9FE5C0", VA = "0x9FE5C0")]
		public bool CheckClearModified()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x9FE5DC", Offset = "0x9FE5DC", VA = "0x9FE5DC")]
		public bool CheckClearRebuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x9FE5F8", Offset = "0x9FE5F8", VA = "0x9FE5F8")]
		public VTextMeshParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F1")]
	public class VTextPhysicsParameter
	{
		[Token(Token = "0x20003F2")]
		public enum ColliderType
		{
			[Token(Token = "0x4001A18")]
			None,
			[Token(Token = "0x4001A19")]
			Box,
			[Token(Token = "0x4001A1A")]
			Mesh
		}

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		private bool _modified;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private ColliderType _colliderType;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PhysicMaterial _colliderMaterial;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _colliderIsTrigger;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _colliderIsConvex;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool _createRigidBody;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _rigidbodyMass;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _rigidbodyDrag;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _rigidbodyAngularDrag;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _rigidbodyUseGravity;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool _rigidbodyIsKinematic;

		[Token(Token = "0x17000460")]
		public ColliderType Collider
		{
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x9FE698", Offset = "0x9FE698", VA = "0x9FE698")]
			get
			{
				return default(ColliderType);
			}
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x9FE6A0", Offset = "0x9FE6A0", VA = "0x9FE6A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public bool ColliderIsTrigger
		{
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x9FE6BC", Offset = "0x9FE6BC", VA = "0x9FE6BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x9FE6C4", Offset = "0x9FE6C4", VA = "0x9FE6C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000462")]
		public bool ColliderIsConvex
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x9FE6E4", Offset = "0x9FE6E4", VA = "0x9FE6E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0x9FE6EC", Offset = "0x9FE6EC", VA = "0x9FE6EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000463")]
		public PhysicMaterial ColliderMaterial
		{
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0x9FE70C", Offset = "0x9FE70C", VA = "0x9FE70C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0x9FE714", Offset = "0x9FE714", VA = "0x9FE714")]
			set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public bool CreateRigidBody
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x9FE7A0", Offset = "0x9FE7A0", VA = "0x9FE7A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x9FE7A8", Offset = "0x9FE7A8", VA = "0x9FE7A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000465")]
		public float RigidbodyMass
		{
			[Token(Token = "0x6001B21")]
			[Address(RVA = "0x9FE7C8", Offset = "0x9FE7C8", VA = "0x9FE7C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0x9FE7D0", Offset = "0x9FE7D0", VA = "0x9FE7D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000466")]
		public float RigidbodyDrag
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x9FE7EC", Offset = "0x9FE7EC", VA = "0x9FE7EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0x9FE7F4", Offset = "0x9FE7F4", VA = "0x9FE7F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000467")]
		public float RigidbodyAngularDrag
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0x9FE810", Offset = "0x9FE810", VA = "0x9FE810")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0x9FE818", Offset = "0x9FE818", VA = "0x9FE818")]
			set
			{
			}
		}

		[Token(Token = "0x17000468")]
		public bool RigidbodyUseGravity
		{
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0x9FE834", Offset = "0x9FE834", VA = "0x9FE834")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B28")]
			[Address(RVA = "0x9FE83C", Offset = "0x9FE83C", VA = "0x9FE83C")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		public bool RigidbodyIsKinematic
		{
			[Token(Token = "0x6001B29")]
			[Address(RVA = "0x9FE85C", Offset = "0x9FE85C", VA = "0x9FE85C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0x9FE864", Offset = "0x9FE864", VA = "0x9FE864")]
			set
			{
			}
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x9FE884", Offset = "0x9FE884", VA = "0x9FE884")]
		public bool CheckClearModified()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x9FE8A0", Offset = "0x9FE8A0", VA = "0x9FE8A0")]
		public VTextPhysicsParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F3")]
	public class VTextRenderParameter
	{
		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material[] _materials;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ShadowCastingMode _shadowCastMode;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _receiveShadows;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LightProbeUsage _lightProbeUsage;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool _applyLayerSettings;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool _modified;

		[Token(Token = "0x1700046A")]
		public Material[] Materials
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0x9FEE3C", Offset = "0x9FEE3C", VA = "0x9FEE3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x9FF080", Offset = "0x9FF080", VA = "0x9FF080")]
			set
			{
			}
		}

		[Token(Token = "0x1700046B")]
		public ShadowCastingMode ShadowCastMode
		{
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0x9FF148", Offset = "0x9FF148", VA = "0x9FF148")]
			get
			{
				return default(ShadowCastingMode);
			}
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0x9FF150", Offset = "0x9FF150", VA = "0x9FF150")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public bool ReceiveShadows
		{
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0x9FF1FC", Offset = "0x9FF1FC", VA = "0x9FF1FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0x9FF204", Offset = "0x9FF204", VA = "0x9FF204")]
			set
			{
			}
		}

		[Token(Token = "0x1700046D")]
		public LightProbeUsage LightProbeUsage
		{
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0x9FF2B4", Offset = "0x9FF2B4", VA = "0x9FF2B4")]
			get
			{
				return default(LightProbeUsage);
			}
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x9FF2BC", Offset = "0x9FF2BC", VA = "0x9FF2BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public bool ApplyLayerSettings
		{
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0x9FF368", Offset = "0x9FF368", VA = "0x9FF368")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0x9FF370", Offset = "0x9FF370", VA = "0x9FF370")]
			set
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event EventHandler<GenericEventArgs<ShadowCastingMode>> ShadowCastingModeChanged
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x9FE8BC", Offset = "0x9FE8BC", VA = "0x9FE8BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0x9FE96C", Offset = "0x9FE96C", VA = "0x9FE96C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event EventHandler<GenericEventArgs<bool>> ReceiveShadowsChanged
		{
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0x9FEA1C", Offset = "0x9FEA1C", VA = "0x9FEA1C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0x9FEACC", Offset = "0x9FEACC", VA = "0x9FEACC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event EventHandler<GenericEventArgs<LightProbeUsage>> LightProbeUsageChanged
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0x9FEB7C", Offset = "0x9FEB7C", VA = "0x9FEB7C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0x9FEC2C", Offset = "0x9FEC2C", VA = "0x9FEC2C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event EventHandler<GenericEventArgs<bool>> ApplyLayerSettingsChanged
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x9FECDC", Offset = "0x9FECDC", VA = "0x9FECDC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0x9FED8C", Offset = "0x9FED8C", VA = "0x9FED8C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x9FF420", Offset = "0x9FF420", VA = "0x9FF420")]
		public bool CheckClearModified()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x9FF43C", Offset = "0x9FF43C", VA = "0x9FF43C")]
		public VTextRenderParameter()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	internal class VTextRenderer
	{
		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private VTextRenderParameter _renderParams;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VTextMeshParameter _meshParams;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<MeshRenderer> _renderers;

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x9FF458", Offset = "0x9FF458", VA = "0x9FF458")]
		public VTextRenderer(VTextRenderParameter renderParams, VTextMeshParameter meshParams)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x9FF510", Offset = "0x9FF510", VA = "0x9FF510")]
		public VTextRenderer(VTextRenderParameter renderParams, VTextMeshParameter meshParams, List<MeshRenderer> renderers)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x9FF570", Offset = "0x9FF570", VA = "0x9FF570")]
		internal List<MeshRenderer> AddRenderer(List<Transform> glyphs)
		{
			return null;
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x9FFCE4", Offset = "0x9FFCE4", VA = "0x9FFCE4")]
		internal void UpdateRenderer(List<MeshRenderer> glyphs)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x9FF800", Offset = "0x9FF800", VA = "0x9FF800")]
		private void Refresh()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[ExecuteInEditMode]
	public sealed class VText : MonoBehaviour
	{
		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public VTextLayoutParameter LayoutParameter;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public VTextMeshParameter MeshParameter;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public VTextRenderParameter RenderParameter;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public VTextPhysicsParameter PhysicsParameter;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public VTextAdditionalComponents AdditionalComponents;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VTextBuilder _builder;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MonoBehaviour> m_changeListener;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Type> _componentsToKeep;

		[Token(Token = "0x1700046F")]
		private VTextBuilder _textBuilder
		{
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0xA00550", Offset = "0xA00550", VA = "0xA00550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005F")]
		public event EventHandler TextRenderingFinished
		{
			[Token(Token = "0x6001B46")]
			[Address(RVA = "0x9FFD00", Offset = "0x9FFD00", VA = "0x9FFD00")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B47")]
			[Address(RVA = "0x9FFD9C", Offset = "0x9FFD9C", VA = "0x9FFD9C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event EventHandler<GenericEventArgs<string>> FontLoadingFailed
		{
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x9FFE38", Offset = "0x9FFE38", VA = "0x9FFE38")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B49")]
			[Address(RVA = "0x9FFEE8", Offset = "0x9FFEE8", VA = "0x9FFEE8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x9FFF98", Offset = "0x9FFF98", VA = "0x9FFF98")]
		public VText()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xA00608", Offset = "0xA00608", VA = "0xA00608")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xA00734", Offset = "0xA00734", VA = "0xA00734")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xA00738", Offset = "0xA00738", VA = "0xA00738")]
		public void CheckUpdate()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xA00874", Offset = "0xA00874", VA = "0xA00874")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xA006A8", Offset = "0xA006A8", VA = "0xA006A8")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xA007E8", Offset = "0xA007E8", VA = "0xA007E8")]
		public void Modify()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xA00884", Offset = "0xA00884", VA = "0xA00884")]
		private void CreateRigidbody(Transform t)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xA009F8", Offset = "0xA009F8", VA = "0xA009F8")]
		private void CreateCollider(Transform t)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xA00B64", Offset = "0xA00B64", VA = "0xA00B64")]
		private void RemoveCollider(Transform t)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xA00C54", Offset = "0xA00C54", VA = "0xA00C54")]
		public void UpdatePhysics()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xA00D2C", Offset = "0xA00D2C", VA = "0xA00D2C")]
		public void RegisterListener(MonoBehaviour go)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xA00E34", Offset = "0xA00E34", VA = "0xA00E34")]
		public void UnRegisterListener(MonoBehaviour go)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xA00EC4", Offset = "0xA00EC4", VA = "0xA00EC4")]
		public void UpdateAdditionalComponents()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xA0121C", Offset = "0xA0121C", VA = "0xA0121C")]
		public Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xA01354", Offset = "0xA01354", VA = "0xA01354")]
		private void OnFontLoadingFailed(object sender, GenericEventArgs<string> e)
		{
		}
	}
	[Token(Token = "0x20003F8")]
	internal class VTextBuilder
	{
		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _root;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Transform> _children;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerable<MeshFilter> _meshFilter;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> _renderers;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VTextMeshParameter _meshParameter;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VTextRenderParameter _renderingParameter;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VTextLayoutParameter _layout;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VTextGlyphBuilder _glyphBuilder;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IVFont _lastFont;

		[Token(Token = "0x14000061")]
		public event EventHandler<GenericEventArgs<string>> FontLoadingFailed
		{
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xA017E8", Offset = "0xA017E8", VA = "0xA017E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xA01898", Offset = "0xA01898", VA = "0xA01898")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xA01948", Offset = "0xA01948", VA = "0xA01948")]
		internal VTextBuilder(Transform root, VTextMeshParameter meshParameter, VTextRenderParameter renderingParameter, VTextLayoutParameter layout)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xA01AF0", Offset = "0xA01AF0", VA = "0xA01AF0")]
		internal void SetDefaultFont()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xA01D10", Offset = "0xA01D10", VA = "0xA01D10")]
		internal void Rebuild(Action<bool> finished)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xA01FEC", Offset = "0xA01FEC", VA = "0xA01FEC")]
		internal void Modify(Action<bool> finished)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xA020D4", Offset = "0xA020D4", VA = "0xA020D4")]
		private void ClearChildren()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class VTextFontHash
	{
		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Hashtable _fonts;

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xA02A40", Offset = "0xA02A40", VA = "0xA02A40")]
		public static void RefreshFontHash()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xA02D18", Offset = "0xA02D18", VA = "0xA02D18")]
		public static List<string> GetAvailableFonts()
		{
			return null;
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xA01DF8", Offset = "0xA01DF8", VA = "0xA01DF8")]
		public static void FetchFont(string fontName, Action<IVFont> resultHandler)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xA02FD0", Offset = "0xA02FD0", VA = "0xA02FD0")]
		private static void TryAddingFont(string fontName, Action<bool> resultHandler)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xA03234", Offset = "0xA03234", VA = "0xA03234")]
		public VTextFontHash()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class ReparentGlyphs : MonoBehaviour
	{
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("determines if the parent should have the glyphs position or not")]
		public bool ParentIsPivot;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("if the parent should have a fixed local position (ParentIsPivot == false) this will be the position of the parent")]
		public Vector3 PositionIfParentIsNotPivot;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xA03494", Offset = "0xA03494", VA = "0xA03494")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xA03498", Offset = "0xA03498", VA = "0xA03498")]
		public void ReparentGlyph()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xA0367C", Offset = "0xA0367C", VA = "0xA0367C")]
		public ReparentGlyphs()
		{
		}
	}
}
namespace Virtence.VText.Demo
{
	[Token(Token = "0x20003FF")]
	public class ColorChangeScript : MonoBehaviour
	{
		[Token(Token = "0x2000400")]
		[CompilerGenerated]
		private sealed class <ChangeColor>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorChangeScript <>4__this;

			[Token(Token = "0x17000470")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B7E")]
				[Address(RVA = "0xA03B00", Offset = "0xA03B00", VA = "0xA03B00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000471")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B80")]
				[Address(RVA = "0xA03B48", Offset = "0xA03B48", VA = "0xA03B48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xA03824", Offset = "0xA03824", VA = "0xA03824")]
			[DebuggerHidden]
			public <ChangeColor>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0xA0385C", Offset = "0xA0385C", VA = "0xA0385C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xA03860", Offset = "0xA03860", VA = "0xA03860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0xA03B08", Offset = "0xA03B08", VA = "0xA03B08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the duration of showing a random color before choosing the next one")]
		public float ColorDuration;

		[Token(Token = "0x4001A4A")]
		private const string COLOR_CHANGE_COROUTINE = "ChangeColor";

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xA036DC", Offset = "0xA036DC", VA = "0xA036DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xA037B0", Offset = "0xA037B0", VA = "0xA037B0")]
		[IteratorStateMachine(typeof(<ChangeColor>d__4))]
		private IEnumerator ChangeColor()
		{
			return null;
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xA0384C", Offset = "0xA0384C", VA = "0xA0384C")]
		public ColorChangeScript()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class HighlightGlyph : MonoBehaviour
	{
		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the color of the glyph if the mouse is over")]
		public Color HighlightColor;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer _renderer;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _defaultColor;

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xA03B50", Offset = "0xA03B50", VA = "0xA03B50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xA03C1C", Offset = "0xA03C1C", VA = "0xA03C1C")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xA03C50", Offset = "0xA03C50", VA = "0xA03C50")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xA03C84", Offset = "0xA03C84", VA = "0xA03C84")]
		public HighlightGlyph()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class RotateGlyphs : MonoBehaviour
	{
		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the speed of the rotation")]
		public float RotationSpeed;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Clockwise;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _transform;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer _renderer;

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xA03C98", Offset = "0xA03C98", VA = "0xA03C98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xA03D0C", Offset = "0xA03D0C", VA = "0xA03D0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xA03E74", Offset = "0xA03E74", VA = "0xA03E74")]
		public RotateGlyphs()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class ChangeMaterialByCode : MonoBehaviour
	{
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the main vtext component")]
		public VText VTextParent;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("the materials which should be set at startup")]
		public Material[] textMaterials;

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xA03E84", Offset = "0xA03E84", VA = "0xA03E84")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xA03F20", Offset = "0xA03F20", VA = "0xA03F20")]
		private void ChangeMaterial()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xA03FD0", Offset = "0xA03FD0", VA = "0xA03FD0")]
		private void OnTextRenderingFinished(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xA04074", Offset = "0xA04074", VA = "0xA04074")]
		public ChangeMaterialByCode()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class AudioVisualizer : MonoBehaviour
	{
		[Token(Token = "0x2000405")]
		[CompilerGenerated]
		private sealed class <Animate>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioVisualizer <>4__this;

			[Token(Token = "0x4001A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000472")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B94")]
				[Address(RVA = "0xA045DC", Offset = "0xA045DC", VA = "0xA045DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000473")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B96")]
				[Address(RVA = "0xA04624", Offset = "0xA04624", VA = "0xA04624", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xA042C0", Offset = "0xA042C0", VA = "0xA042C0")]
			[DebuggerHidden]
			public <Animate>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xA04358", Offset = "0xA04358", VA = "0xA04358", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xA0435C", Offset = "0xA0435C", VA = "0xA0435C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xA045E4", Offset = "0xA045E4", VA = "0xA045E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the text which should work as an equalizer")]
		public VText DancingText;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("the scale of the sample to get a better amplitude")]
		public float Amplitude;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("the lerp duration to get from one y-position to the one provided by the audio source")]
		public float LerpDuration;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("the max amplitude to visualize for each letter")]
		public float MaxAmplitude;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("minimum strenght of amplitude to react")]
		public float AmplitudeToReact;

		[Token(Token = "0x4001A5D")]
		private const string EQUALIZER_ANIMATION = "Animate";

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource _audioSource;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] _samples;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _loaded;

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xA04080", Offset = "0xA04080", VA = "0xA04080")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xA04210", Offset = "0xA04210", VA = "0xA04210")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xA0424C", Offset = "0xA0424C", VA = "0xA0424C")]
		[IteratorStateMachine(typeof(<Animate>d__11))]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xA042E8", Offset = "0xA042E8", VA = "0xA042E8")]
		public AudioVisualizer()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class MenuBehaviour : MonoBehaviour
	{
		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xA0462C", Offset = "0xA0462C", VA = "0xA0462C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xA04630", Offset = "0xA04630", VA = "0xA04630")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xA046F4", Offset = "0xA046F4", VA = "0xA046F4")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xA04768", Offset = "0xA04768", VA = "0xA04768")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xA04814", Offset = "0xA04814", VA = "0xA04814")]
		public MenuBehaviour()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class MenuController : MonoBehaviour
	{
		[Token(Token = "0x2000408")]
		[CompilerGenerated]
		private sealed class <delayedAction>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityAction action;

			[Token(Token = "0x17000474")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BAA")]
				[Address(RVA = "0xA05D6C", Offset = "0xA05D6C", VA = "0xA05D6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000475")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BAC")]
				[Address(RVA = "0xA05DB4", Offset = "0xA05DB4", VA = "0xA05DB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xA0509C", Offset = "0xA0509C", VA = "0xA0509C")]
			[DebuggerHidden]
			public <delayedAction>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xA05C84", Offset = "0xA05C84", VA = "0xA05C84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0xA05C88", Offset = "0xA05C88", VA = "0xA05C88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0xA05D74", Offset = "0xA05D74", VA = "0xA05D74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MenuID;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] MenuContent;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineOffset;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ActiveEntry_ChangeFontSize;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FontsizeDeactivated;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float FontsizeActivated;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ActiveEntry_ChangeGlyphSpacing;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float GlyphSpacingDeactivated;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float GlyphSpacingActivated;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool ActiveEntry_ChangeMaterial;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material FaceMaterialDeactivated;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material BevelMaterialDeactivated;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material SideMaterialDeactivated;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material FaceMaterialActivated;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material BevelMaterialActivated;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material SideMaterialActivated;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject MenuItemPrefab;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int SelectedMenuItem;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GameObject> MenuEntries;

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xA0481C", Offset = "0xA0481C", VA = "0xA0481C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xA04820", Offset = "0xA04820", VA = "0xA04820")]
		private void CreateMenu()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xA04BF8", Offset = "0xA04BF8", VA = "0xA04BF8")]
		private void MenuController_TextRenderingFinished(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xA05028", Offset = "0xA05028", VA = "0xA05028")]
		[IteratorStateMachine(typeof(<delayedAction>d__22))]
		private IEnumerator delayedAction(UnityAction action)
		{
			return null;
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xA046DC", Offset = "0xA046DC", VA = "0xA046DC")]
		public void SetSelectedMenuItem(int id)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xA050C4", Offset = "0xA050C4", VA = "0xA050C4")]
		private void UpdateMenu()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xA05A60", Offset = "0xA05A60", VA = "0xA05A60")]
		public void ActivateMenuItemate()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xA0516C", Offset = "0xA0516C", VA = "0xA0516C")]
		private void MenuHandlingChangeFontSize()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xA05388", Offset = "0xA05388", VA = "0xA05388")]
		private void MenuHandlingChangeGlyphSpacing()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xA055A4", Offset = "0xA055A4", VA = "0xA055A4")]
		private void MenuHandlingChangeMaterial()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xA05BC8", Offset = "0xA05BC8", VA = "0xA05BC8")]
		public MenuController()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class MenuLineHandler : MonoBehaviour
	{
		[Token(Token = "0x200040A")]
		[CompilerGenerated]
		private sealed class <ChangeMenu>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuLineHandler <>4__this;

			[Token(Token = "0x17000478")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BBB")]
				[Address(RVA = "0xA06514", Offset = "0xA06514", VA = "0xA06514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000479")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BBD")]
				[Address(RVA = "0xA0655C", Offset = "0xA0655C", VA = "0xA0655C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xA06264", Offset = "0xA06264", VA = "0xA06264")]
			[DebuggerHidden]
			public <ChangeMenu>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xA062D4", Offset = "0xA062D4", VA = "0xA062D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xA062D8", Offset = "0xA062D8", VA = "0xA062D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0xA0651C", Offset = "0xA0651C", VA = "0xA0651C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the animation duration for the particles")]
		public float ParticleAnimationDuration;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ParticleOffset;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] Particles;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _id;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _fontSize;

		[Token(Token = "0x17000476")]
		public int ID
		{
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0xA05DBC", Offset = "0xA05DBC", VA = "0xA05DBC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0xA05DC4", Offset = "0xA05DC4", VA = "0xA05DC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000477")]
		public float FontSize
		{
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0xA05DCC", Offset = "0xA05DCC", VA = "0xA05DCC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xA05DD4", Offset = "0xA05DD4", VA = "0xA05DD4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xA05E38", Offset = "0xA05E38", VA = "0xA05E38")]
		public Bounds GetBounds(MeshRenderer[] renderers)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xA04D3C", Offset = "0xA04D3C", VA = "0xA04D3C")]
		public void InitializeItem()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xA060D0", Offset = "0xA060D0", VA = "0xA060D0")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xA0617C", Offset = "0xA0617C", VA = "0xA0617C")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xA061F0", Offset = "0xA061F0", VA = "0xA061F0")]
		[IteratorStateMachine(typeof(<ChangeMenu>d__15))]
		private IEnumerator ChangeMenu()
		{
			return null;
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xA0628C", Offset = "0xA0628C", VA = "0xA0628C")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xA062C4", Offset = "0xA062C4", VA = "0xA062C4")]
		public MenuLineHandler()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class MenuLogic : MonoBehaviour
	{
		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Menus;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip SelectionSound;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _activeMenu;

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xA06510", Offset = "0xA06510", VA = "0xA06510")]
		public void HandleMenus(int IDMenu, int IDItem)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xA0649C", Offset = "0xA0649C", VA = "0xA0649C")]
		public void PlaySelectionSound()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xA06564", Offset = "0xA06564", VA = "0xA06564")]
		private void ControlVisibility(int IDMenu, int IDItem)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xA06610", Offset = "0xA06610", VA = "0xA06610")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xA0661C", Offset = "0xA0661C", VA = "0xA0661C")]
		public MenuLogic()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the prefab of the ball")]
		public GameObject BallPrefab;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The offset of the ball from the camera center into the shooting direction when it is spawned")]
		public float BallSpawnOffset;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("The speed of the ball")]
		public float BallSpeed;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The lifetime of the ball until it is destroyed")]
		public float BallLifeTime;

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xA06624", Offset = "0xA06624", VA = "0xA06624")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xA06628", Offset = "0xA06628", VA = "0xA06628")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xA06880", Offset = "0xA06880", VA = "0xA06880")]
		public Player()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class SceneManager : MonoBehaviour
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The vtexts which should be resetted")]
		public List<VText> VTexts;

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xA0689C", Offset = "0xA0689C", VA = "0xA0689C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xA068A0", Offset = "0xA068A0", VA = "0xA068A0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xA06A38", Offset = "0xA06A38", VA = "0xA06A38")]
		public SceneManager()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class SunController : MonoBehaviour
	{
		[Token(Token = "0x200040F")]
		[CompilerGenerated]
		private sealed class <ChangeColor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SunController <>4__this;

			[Token(Token = "0x1700047A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD0")]
				[Address(RVA = "0xA06E24", Offset = "0xA06E24", VA = "0xA06E24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD2")]
				[Address(RVA = "0xA06E6C", Offset = "0xA06E6C", VA = "0xA06E6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0xA06C24", Offset = "0xA06C24", VA = "0xA06C24")]
			[DebuggerHidden]
			public <ChangeColor>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xA06C5C", Offset = "0xA06C5C", VA = "0xA06C5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xA06C60", Offset = "0xA06C60", VA = "0xA06C60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xA06E2C", Offset = "0xA06E2C", VA = "0xA06E2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the VText interface for the shout")]
		public GameObject Shout;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("the color of the object if it is hit")]
		public Color HitColor;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("how long (in seconds) the hit color stays until it switches back to its normal color")]
		public float HitDuration;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("The duration after the shoult disappears")]
		public float ShoutDuration;

		[Token(Token = "0x4001A8F")]
		private const string CHANGE_COLOR_COROUTINE = "ChangeColor";

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color _defaultColor;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer _renderer;

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xA06A40", Offset = "0xA06A40", VA = "0xA06A40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xA06B54", Offset = "0xA06B54", VA = "0xA06B54")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xA06BB0", Offset = "0xA06BB0", VA = "0xA06BB0")]
		[IteratorStateMachine(typeof(<ChangeColor>d__9))]
		private IEnumerator ChangeColor()
		{
			return null;
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xA06C4C", Offset = "0xA06C4C", VA = "0xA06C4C")]
		public SunController()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class SceneSelectionButtonController : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("the label of the scene")]
		public Text NameLabel;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _sceneIndex;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _name;

		[Token(Token = "0x1700047C")]
		public int SceneIndex
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xA06FD4", Offset = "0xA06FD4", VA = "0xA06FD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xA06FDC", Offset = "0xA06FDC", VA = "0xA06FDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700047D")]
		public string Name
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xA06FE4", Offset = "0xA06FE4", VA = "0xA06FE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xA06FEC", Offset = "0xA06FEC", VA = "0xA06FEC")]
			set
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event EventHandler<GenericEventArgs<int>> ButtonClicked
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xA06E74", Offset = "0xA06E74", VA = "0xA06E74")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0xA06F24", Offset = "0xA06F24", VA = "0xA06F24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xA070A0", Offset = "0xA070A0", VA = "0xA070A0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xA070A4", Offset = "0xA070A4", VA = "0xA070A4", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xA07140", Offset = "0xA07140", VA = "0xA07140")]
		public SceneSelectionButtonController()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class SceneSelectionController : MonoBehaviour
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the transform of the scrollview which shows the scene selection buttons")]
		public Transform ContentPanel;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("the button prefab which allows us to select a new scene")]
		public GameObject SceneSelectionButtonPrefab;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("the main menu UI")]
		public CanvasGroup MainMenuUI;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("the interface which is visible if a scene is loaded (esp. the back button)")]
		public CanvasGroup InOtherScenesUI;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _loadedSceneIndex;

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xA07150", Offset = "0xA07150", VA = "0xA07150")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xA071CC", Offset = "0xA071CC", VA = "0xA071CC")]
		private void SetupSceneLoadingButtons()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xA07430", Offset = "0xA07430", VA = "0xA07430")]
		private string GetSceneNameByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xA07494", Offset = "0xA07494", VA = "0xA07494")]
		private void LoadScene(int index)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xA07534", Offset = "0xA07534", VA = "0xA07534")]
		public void ShowMainMenu()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xA0716C", Offset = "0xA0716C", VA = "0xA0716C")]
		public void ShowMainMenu(bool show)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xA0753C", Offset = "0xA0753C", VA = "0xA0753C")]
		private void OnSceneLoadingButtonClick(object sender, GenericEventArgs<int> e)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xA07640", Offset = "0xA07640", VA = "0xA07640")]
		public SceneSelectionController()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class AnimGlyphs : MonoBehaviour
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Amplitude;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FrequencyFactor;

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xA076A0", Offset = "0xA076A0", VA = "0xA076A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xA077AC", Offset = "0xA077AC", VA = "0xA077AC")]
		public AnimGlyphs()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class TimeTexter : MonoBehaviour
	{
		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VText _vtext;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string timeString;

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xA077C0", Offset = "0xA077C0", VA = "0xA077C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xA07818", Offset = "0xA07818", VA = "0xA07818")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xA078BC", Offset = "0xA078BC", VA = "0xA078BC")]
		public TimeTexter()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class UIController : MonoBehaviour
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The wrapper for the VTextInterface")]
		public VtextHandler VTextController;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Common")]
		[Tooltip("The label which shows the current font name")]
		public Text FontNameLabel;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The slider which shows the bevel value")]
		public Slider SizeSlider;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The slider which shows the bevel value")]
		public Slider DepthSlider;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The slider which shows the bevel value")]
		public Slider BevelSlider;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Justify")]
		[Tooltip("The toggle button for align the text to the left")]
		public Toggle MajorModeLeftToggle;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("The toggle button for align the text to the center")]
		public Toggle MajorModeCenterToggle;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The toggle button for align the text to the right")]
		public Toggle MajorModeRightToggle;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The toggle button for align the text in block style")]
		public Toggle MajorModeBlockToggle;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Lightprobes")]
		[Tooltip("The toggle button for using lightprobes")]
		public Toggle UseLightProbesToggle;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _currentFontIndex;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xA07A0C", Offset = "0xA07A0C", VA = "0xA07A0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xA07F54", Offset = "0xA07F54", VA = "0xA07F54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xA07F58", Offset = "0xA07F58", VA = "0xA07F58")]
		public void SelectNextFont()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xA0800C", Offset = "0xA0800C", VA = "0xA0800C")]
		public void SelectPreviousFont()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xA08018", Offset = "0xA08018", VA = "0xA08018")]
		public void SetSize(float value)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xA080F0", Offset = "0xA080F0", VA = "0xA080F0")]
		public void SetDepth(float value)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xA081C8", Offset = "0xA081C8", VA = "0xA081C8")]
		public void SetBevel(float value)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xA082A0", Offset = "0xA082A0", VA = "0xA082A0")]
		public void SetMajorLayoutLeft(bool enabled)
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xA08308", Offset = "0xA08308", VA = "0xA08308")]
		public void SetMajorLayoutCenter(bool enabled)
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xA08330", Offset = "0xA08330", VA = "0xA08330")]
		public void SetMajorLayoutRight(bool enabled)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xA08358", Offset = "0xA08358", VA = "0xA08358")]
		public void SetMajorLayoutBlock(bool enabled)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xA07F64", Offset = "0xA07F64", VA = "0xA07F64")]
		private void SetFontByIndex(int index)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xA083A4", Offset = "0xA083A4", VA = "0xA083A4")]
		public void EnableLightProbes(bool enable)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xA08470", Offset = "0xA08470", VA = "0xA08470")]
		private void OnFontNameChanged(object sender, GenericEventArgs<string> e)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xA08594", Offset = "0xA08594", VA = "0xA08594")]
		private void OnSizeChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xA085F0", Offset = "0xA085F0", VA = "0xA085F0")]
		private void OnDepthChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xA08688", Offset = "0xA08688", VA = "0xA08688")]
		private void OnBevelChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xA086E4", Offset = "0xA086E4", VA = "0xA086E4")]
		private void OnMajorLayoutChanged(object sender, GenericEventArgs<Align> e)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xA08788", Offset = "0xA08788", VA = "0xA08788")]
		public UIController()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class VtextHandler : MonoBehaviour
	{
		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VText[] vti_time;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VText vti_textOptions;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VText vti_textured;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _minSize;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _maxSize;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _minDepth;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _maxDepth;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _minBevel;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _maxBevel;

		[Token(Token = "0x14000063")]
		public event EventHandler<GenericEventArgs<string>> FontNameChanged
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xA07BE4", Offset = "0xA07BE4", VA = "0xA07BE4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xA08790", Offset = "0xA08790", VA = "0xA08790")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event EventHandler<GenericEventArgs<float>> SizeValueChanged
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xA07C94", Offset = "0xA07C94", VA = "0xA07C94")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0xA08840", Offset = "0xA08840", VA = "0xA08840")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event EventHandler<GenericEventArgs<float>> DepthValueChanged
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0xA07D44", Offset = "0xA07D44", VA = "0xA07D44")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0xA088F0", Offset = "0xA088F0", VA = "0xA088F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event EventHandler<GenericEventArgs<float>> BevelValueChanged
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0xA07DF4", Offset = "0xA07DF4", VA = "0xA07DF4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xA089A0", Offset = "0xA089A0", VA = "0xA089A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event EventHandler<GenericEventArgs<Align>> MajorValueChanged
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xA07EA4", Offset = "0xA07EA4", VA = "0xA07EA4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xA08A50", Offset = "0xA08A50", VA = "0xA08A50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event EventHandler<GenericEventArgs<LightProbeUsage>> LightProbeUsageChanged
		{
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xA08B00", Offset = "0xA08B00", VA = "0xA08B00")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xA08BB0", Offset = "0xA08BB0", VA = "0xA08BB0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xA08C60", Offset = "0xA08C60", VA = "0xA08C60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xA083C0", Offset = "0xA083C0", VA = "0xA083C0")]
		public void SetLightProbes(LightProbeUsage lp)
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xA08380", Offset = "0xA08380", VA = "0xA08380")]
		public void SetFont(string fontName)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xA08044", Offset = "0xA08044", VA = "0xA08044")]
		public void SetSize(float sizeValue)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xA0811C", Offset = "0xA0811C", VA = "0xA0811C")]
		public void SetDepth(float depthValue)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xA081F4", Offset = "0xA081F4", VA = "0xA081F4")]
		public void SetBevel(float bevelValue)
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xA082C8", Offset = "0xA082C8", VA = "0xA082C8")]
		public void SetAlignment(Align alignment)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xA09150", Offset = "0xA09150", VA = "0xA09150")]
		private void TransformTxt(Align alignment)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xA09304", Offset = "0xA09304", VA = "0xA09304")]
		private void OnSizeChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xA093DC", Offset = "0xA093DC", VA = "0xA093DC")]
		private void OnDepthChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xA094B4", Offset = "0xA094B4", VA = "0xA094B4")]
		private void OnBevelChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xA0958C", Offset = "0xA0958C", VA = "0xA0958C")]
		private void OnMajorLayoutChanged(object sender, GenericEventArgs<Align> e)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xA095AC", Offset = "0xA095AC", VA = "0xA095AC")]
		private void OnLightProbeUsageChanged(object sender, GenericEventArgs<LightProbeUsage> e)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xA095CC", Offset = "0xA095CC", VA = "0xA095CC")]
		private void OnFontNameChanged(object sender, GenericEventArgs<string> e)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xA095EC", Offset = "0xA095EC", VA = "0xA095EC")]
		public VtextHandler()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class UIController_UV : MonoBehaviour
	{
		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The wrapper for the VTextInterface")]
		public VtextHandler_UV VTextController;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Common")]
		[Tooltip("The label which shows the current font name")]
		public Text FontNameLabel;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The slider which shows the bevel value")]
		public Slider DepthSlider;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The slider which shows the bevel value")]
		public Slider BevelSlider;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _currentFontIndex;

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xA09614", Offset = "0xA09614", VA = "0xA09614")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xA09860", Offset = "0xA09860", VA = "0xA09860")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xA09864", Offset = "0xA09864", VA = "0xA09864")]
		public void SelectNextFont()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xA09918", Offset = "0xA09918", VA = "0xA09918")]
		public void SelectPreviousFont()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xA09924", Offset = "0xA09924", VA = "0xA09924")]
		public void SetSize(float value)
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xA099FC", Offset = "0xA099FC", VA = "0xA099FC")]
		public void SetDepth(float value)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xA09AD4", Offset = "0xA09AD4", VA = "0xA09AD4")]
		public void SetBevel(float value)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xA09BAC", Offset = "0xA09BAC", VA = "0xA09BAC")]
		public void SetUseFaceUVs(bool value)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xA09870", Offset = "0xA09870", VA = "0xA09870")]
		private void SetFontByIndex(int index)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xA09C8C", Offset = "0xA09C8C", VA = "0xA09C8C")]
		private void OnFontNameChanged(object sender, GenericEventArgs<string> e)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xA09DB0", Offset = "0xA09DB0", VA = "0xA09DB0")]
		private void OnBevelChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xA09E0C", Offset = "0xA09E0C", VA = "0xA09E0C")]
		public UIController_UV()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class VtextHandler_UV : MonoBehaviour
	{
		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VText vti_textOptions;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _minSize;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _maxSize;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _minDepth;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxDepth;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _minBevel;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _maxBevel;

		[Token(Token = "0x14000069")]
		public event EventHandler<GenericEventArgs<string>> FontNameChanged
		{
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0xA09700", Offset = "0xA09700", VA = "0xA09700")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xA09E14", Offset = "0xA09E14", VA = "0xA09E14")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event EventHandler<GenericEventArgs<float>> SizeValueChanged
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xA09EC4", Offset = "0xA09EC4", VA = "0xA09EC4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xA09F74", Offset = "0xA09F74", VA = "0xA09F74")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event EventHandler<GenericEventArgs<float>> DepthValueChanged
		{
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xA0A024", Offset = "0xA0A024", VA = "0xA0A024")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0xA0A0D4", Offset = "0xA0A0D4", VA = "0xA0A0D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event EventHandler<GenericEventArgs<float>> BevelValueChanged
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xA097B0", Offset = "0xA097B0", VA = "0xA097B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0xA0A184", Offset = "0xA0A184", VA = "0xA0A184")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event EventHandler<GenericEventArgs<bool>> UseFaceUVValueChanged
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xA0A234", Offset = "0xA0A234", VA = "0xA0A234")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0xA0A2E4", Offset = "0xA0A2E4", VA = "0xA0A2E4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xA0A394", Offset = "0xA0A394", VA = "0xA0A394")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xA09C68", Offset = "0xA09C68", VA = "0xA09C68")]
		public void SetFont(string fontName)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xA09950", Offset = "0xA09950", VA = "0xA09950")]
		public void SetSize(float sizeValue)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xA09A28", Offset = "0xA09A28", VA = "0xA09A28")]
		public void SetDepth(float depthValue)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xA09B00", Offset = "0xA09B00", VA = "0xA09B00")]
		public void SetBevel(float bevelValue)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xA09BC8", Offset = "0xA09BC8", VA = "0xA09BC8")]
		public void SetUseFaceUVs(bool value)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xA0A740", Offset = "0xA0A740", VA = "0xA0A740")]
		private void OnSizeChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xA0A818", Offset = "0xA0A818", VA = "0xA0A818")]
		private void OnDepthChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xA0A8F0", Offset = "0xA0A8F0", VA = "0xA0A8F0")]
		private void OnBevelChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xA0A9C8", Offset = "0xA0A9C8", VA = "0xA0A9C8")]
		private void OnFontNameChanged(object sender, GenericEventArgs<string> e)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xA0A9E8", Offset = "0xA0A9E8", VA = "0xA0A9E8")]
		private void OnUseFaceUVsChanged(object sender, GenericEventArgs<bool> e)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xA0AA08", Offset = "0xA0AA08", VA = "0xA0AA08")]
		public VtextHandler_UV()
		{
		}
	}
}
namespace Virtence.VText.LEGACY
{
	[Serializable]
	[Token(Token = "0x2000419")]
	public class VTextParameter
	{
		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_depth;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_bevel;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_needTangents;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_backface;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_crease;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_quality;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_fontname;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShadowCastingMode m_shadowCastMode;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_receiveShadows;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool m_useLightProbes;

		[Token(Token = "0x1700047E")]
		public float Depth
		{
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xA0AA30", Offset = "0xA0AA30", VA = "0xA0AA30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xA0AA38", Offset = "0xA0AA38", VA = "0xA0AA38")]
			set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public float Crease
		{
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xA0AB54", Offset = "0xA0AB54", VA = "0xA0AB54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xA0AB5C", Offset = "0xA0AB5C", VA = "0xA0AB5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000480")]
		public float Bevel
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xA0AB88", Offset = "0xA0AB88", VA = "0xA0AB88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C41")]
			[Address(RVA = "0xA0AACC", Offset = "0xA0AACC", VA = "0xA0AACC")]
			set
			{
			}
		}

		[Token(Token = "0x17000481")]
		public int Quality
		{
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xA0AB90", Offset = "0xA0AB90", VA = "0xA0AB90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xA0AB98", Offset = "0xA0AB98", VA = "0xA0AB98")]
			set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public bool Backface
		{
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xA0ABAC", Offset = "0xA0ABAC", VA = "0xA0ABAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0xA0ABB4", Offset = "0xA0ABB4", VA = "0xA0ABB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000483")]
		public bool GenerateTangents
		{
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xA0ABCC", Offset = "0xA0ABCC", VA = "0xA0ABCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xA0ABD4", Offset = "0xA0ABD4", VA = "0xA0ABD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000484")]
		public string Fontname
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xA0ABEC", Offset = "0xA0ABEC", VA = "0xA0ABEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0xA0ABF4", Offset = "0xA0ABF4", VA = "0xA0ABF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public ShadowCastingMode ShadowCastMode
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xA0AC38", Offset = "0xA0AC38", VA = "0xA0AC38")]
			get
			{
				return default(ShadowCastingMode);
			}
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xA0AC40", Offset = "0xA0AC40", VA = "0xA0AC40")]
			set
			{
			}
		}

		[Token(Token = "0x17000486")]
		public bool ReceiveShadows
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xA0AC48", Offset = "0xA0AC48", VA = "0xA0AC48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xA0AC50", Offset = "0xA0AC50", VA = "0xA0AC50")]
			set
			{
			}
		}

		[Token(Token = "0x17000487")]
		public bool UseLightProbes
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xA0AC5C", Offset = "0xA0AC5C", VA = "0xA0AC5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xA0AC64", Offset = "0xA0AC64", VA = "0xA0AC64")]
			set
			{
			}
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xA0AC70", Offset = "0xA0AC70", VA = "0xA0AC70")]
		public VTextParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public class VTextLayout
	{
		[Token(Token = "0x200041B")]
		public enum align
		{
			[Token(Token = "0x4001AEA")]
			Base,
			[Token(Token = "0x4001AEB")]
			Start,
			[Token(Token = "0x4001AEC")]
			Center,
			[Token(Token = "0x4001AED")]
			End,
			[Token(Token = "0x4001AEE")]
			Block
		}

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool m_horizontal;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private align m_major;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private align m_minor;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_size;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_spacing;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_glyphSpacing;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve m_curveXZ;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve m_curveXY;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_orientXZ;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_orientXY;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		private bool m_isCircular;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_startRadius;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_endRadius;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_circleRadius;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_animateRadius;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve m_curveRadius;

		[Token(Token = "0x17000488")]
		public bool Horizontal
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xA0ACE8", Offset = "0xA0ACE8", VA = "0xA0ACE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xA0ACF0", Offset = "0xA0ACF0", VA = "0xA0ACF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000489")]
		public align Major
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xA0AD08", Offset = "0xA0AD08", VA = "0xA0AD08")]
			get
			{
				return default(align);
			}
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xA0AD10", Offset = "0xA0AD10", VA = "0xA0AD10")]
			set
			{
			}
		}

		[Token(Token = "0x1700048A")]
		public align Minor
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xA0AD24", Offset = "0xA0AD24", VA = "0xA0AD24")]
			get
			{
				return default(align);
			}
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xA0AD2C", Offset = "0xA0AD2C", VA = "0xA0AD2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700048B")]
		public float Size
		{
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xA0AD40", Offset = "0xA0AD40", VA = "0xA0AD40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xA0AD48", Offset = "0xA0AD48", VA = "0xA0AD48")]
			set
			{
			}
		}

		[Token(Token = "0x1700048C")]
		public float Spacing
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xA0AD5C", Offset = "0xA0AD5C", VA = "0xA0AD5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xA0AD64", Offset = "0xA0AD64", VA = "0xA0AD64")]
			set
			{
			}
		}

		[Token(Token = "0x1700048D")]
		public float GlyphSpacing
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xA0AD78", Offset = "0xA0AD78", VA = "0xA0AD78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xA0AD80", Offset = "0xA0AD80", VA = "0xA0AD80")]
			set
			{
			}
		}

		[Token(Token = "0x1700048E")]
		public AnimationCurve CurveXZ
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xA0AD94", Offset = "0xA0AD94", VA = "0xA0AD94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xA0AD9C", Offset = "0xA0AD9C", VA = "0xA0AD9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700048F")]
		public AnimationCurve CurveXY
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xA0ADA4", Offset = "0xA0ADA4", VA = "0xA0ADA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xA0ADAC", Offset = "0xA0ADAC", VA = "0xA0ADAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000490")]
		public bool OrientationXZ
		{
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xA0ADB4", Offset = "0xA0ADB4", VA = "0xA0ADB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xA0ADBC", Offset = "0xA0ADBC", VA = "0xA0ADBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000491")]
		public bool OrientationXY
		{
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xA0ADD4", Offset = "0xA0ADD4", VA = "0xA0ADD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xA0ADDC", Offset = "0xA0ADDC", VA = "0xA0ADDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000492")]
		public bool OrientationCircular
		{
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xA0ADF4", Offset = "0xA0ADF4", VA = "0xA0ADF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xA0ADFC", Offset = "0xA0ADFC", VA = "0xA0ADFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000493")]
		public float StartRadius
		{
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xA0AE14", Offset = "0xA0AE14", VA = "0xA0AE14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xA0AE1C", Offset = "0xA0AE1C", VA = "0xA0AE1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000494")]
		public float EndRadius
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xA0AE24", Offset = "0xA0AE24", VA = "0xA0AE24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0xA0AE2C", Offset = "0xA0AE2C", VA = "0xA0AE2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000495")]
		public float CircleRadius
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xA0AE34", Offset = "0xA0AE34", VA = "0xA0AE34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xA0AE3C", Offset = "0xA0AE3C", VA = "0xA0AE3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000496")]
		public bool AnimateRadius
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xA0AE44", Offset = "0xA0AE44", VA = "0xA0AE44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xA0AE4C", Offset = "0xA0AE4C", VA = "0xA0AE4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000497")]
		public AnimationCurve CurveRadius
		{
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xA0AE58", Offset = "0xA0AE58", VA = "0xA0AE58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xA0AE60", Offset = "0xA0AE60", VA = "0xA0AE60")]
			set
			{
			}
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xA0AE78", Offset = "0xA0AE78", VA = "0xA0AE78")]
		public VTextLayout()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public class VTextPhysics
	{
		[Token(Token = "0x200041D")]
		public enum ColliderType
		{
			[Token(Token = "0x4001AFA")]
			None,
			[Token(Token = "0x4001AFB")]
			Box,
			[Token(Token = "0x4001AFC")]
			Mesh
		}

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ColliderType _colliderType;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PhysicMaterial _colliderMaterial;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _colliderIsTrigger;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _colliderIsConvex;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool _createRigidBody;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _rigidbodyMass;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _rigidbodyDrag;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _rigidbodyAngularDrag;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _rigidbodyUseGravity;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool _rigidbodyIsKinematic;

		[Token(Token = "0x17000498")]
		public ColliderType Collider
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xA0B194", Offset = "0xA0B194", VA = "0xA0B194")]
			get
			{
				return default(ColliderType);
			}
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xA0B19C", Offset = "0xA0B19C", VA = "0xA0B19C")]
			set
			{
			}
		}

		[Token(Token = "0x17000499")]
		public bool ColliderIsTrigger
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xA0B1A4", Offset = "0xA0B1A4", VA = "0xA0B1A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xA0B1AC", Offset = "0xA0B1AC", VA = "0xA0B1AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700049A")]
		public bool ColliderIsConvex
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xA0B1B8", Offset = "0xA0B1B8", VA = "0xA0B1B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xA0B1C0", Offset = "0xA0B1C0", VA = "0xA0B1C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700049B")]
		public PhysicMaterial ColliderMaterial
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xA0B1CC", Offset = "0xA0B1CC", VA = "0xA0B1CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xA0B1D4", Offset = "0xA0B1D4", VA = "0xA0B1D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700049C")]
		public bool CreateRigidBody
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xA0B1DC", Offset = "0xA0B1DC", VA = "0xA0B1DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xA0B1E4", Offset = "0xA0B1E4", VA = "0xA0B1E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700049D")]
		public float RigidbodyMass
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0xA0B1F0", Offset = "0xA0B1F0", VA = "0xA0B1F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xA0B1F8", Offset = "0xA0B1F8", VA = "0xA0B1F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700049E")]
		public float RigidbodyDrag
		{
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0xA0B200", Offset = "0xA0B200", VA = "0xA0B200")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xA0B208", Offset = "0xA0B208", VA = "0xA0B208")]
			set
			{
			}
		}

		[Token(Token = "0x1700049F")]
		public float RigidbodyAngularDrag
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xA0B210", Offset = "0xA0B210", VA = "0xA0B210")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xA0B218", Offset = "0xA0B218", VA = "0xA0B218")]
			set
			{
			}
		}

		[Token(Token = "0x170004A0")]
		public bool RigidbodyUseGravity
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xA0B220", Offset = "0xA0B220", VA = "0xA0B220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xA0B228", Offset = "0xA0B228", VA = "0xA0B228")]
			set
			{
			}
		}

		[Token(Token = "0x170004A1")]
		public bool RigidbodyIsKinematic
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xA0B234", Offset = "0xA0B234", VA = "0xA0B234")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0xA0B23C", Offset = "0xA0B23C", VA = "0xA0B23C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xA0B248", Offset = "0xA0B248", VA = "0xA0B248")]
		public VTextPhysics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041E")]
	public class VTextAdditionalComponents
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject _additionalComponentsObject;

		[Token(Token = "0x170004A2")]
		public GameObject AdditionalComponentsObject
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xA0B264", Offset = "0xA0B264", VA = "0xA0B264")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0xA0B26C", Offset = "0xA0B26C", VA = "0xA0B26C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xA0B274", Offset = "0xA0B274", VA = "0xA0B274")]
		public VTextAdditionalComponents()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[ExecuteInEditMode]
	public class VTextInterface : MonoBehaviour
	{
		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public VTextParameter parameter;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public VTextLayout layout;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public VTextPhysics Physics;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public VTextAdditionalComponents AdditionalComponents;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string RenderText;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material[] materials;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Material[] usedMaterials;

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xA0B27C", Offset = "0xA0B27C", VA = "0xA0B27C")]
		public VTextInterface()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xA0B428", Offset = "0xA0B428", VA = "0xA0B428", Slot = "1")]
		~VTextInterface()
		{
		}
	}
}
namespace Virtence.VText.Legacy
{
	[Token(Token = "0x2000420")]
	public class AudioVisualizerOld : MonoBehaviour
	{
		[Token(Token = "0x2000421")]
		[CompilerGenerated]
		private sealed class <Animate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioVisualizerOld <>4__this;

			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170004A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C93")]
				[Address(RVA = "0xA0B968", Offset = "0xA0B968", VA = "0xA0B968", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C95")]
				[Address(RVA = "0xA0B9B0", Offset = "0xA0B9B0", VA = "0xA0B9B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C90")]
			[Address(RVA = "0xA0B654", Offset = "0xA0B654", VA = "0xA0B654")]
			[DebuggerHidden]
			public <Animate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xA0B6EC", Offset = "0xA0B6EC", VA = "0xA0B6EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xA0B6F0", Offset = "0xA0B6F0", VA = "0xA0B6F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xA0B970", Offset = "0xA0B970", VA = "0xA0B970", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("the text which should work as an equalizer")]
		public VTextInterface DancingText;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("the scale of the sample to get a better amplitude")]
		public float Amplitude;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("the lerp duration to get from one y-position to the one provided by the audio source")]
		public float LerpDuration;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("the max amplitude to visualize for each letter")]
		public float MaxAmplitude;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("minimum strenght of amplitude to react")]
		public float AmplitudeToReact;

		[Token(Token = "0x4001B0A")]
		private const string EQUALIZER_ANIMATION = "Animate";

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource _audioSource;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] _samples;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xA0B430", Offset = "0xA0B430", VA = "0xA0B430")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xA0B5B4", Offset = "0xA0B5B4", VA = "0xA0B5B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xA0B5E0", Offset = "0xA0B5E0", VA = "0xA0B5E0")]
		[IteratorStateMachine(typeof(<Animate>d__10))]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xA0B67C", Offset = "0xA0B67C", VA = "0xA0B67C")]
		public AudioVisualizerOld()
		{
		}
	}
}
namespace Virtence.VText.Tesselation
{
	[Token(Token = "0x2000422")]
	internal class GlyphContourTesselator
	{
		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly List<Contour> Contours;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3> _verts;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double _resolution;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tess _tess;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tess _outLine;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _doCreateContours;

		[Token(Token = "0x170004A5")]
		public List<Vector3> Verticies
		{
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xA0B9B8", Offset = "0xA0B9B8", VA = "0xA0B9B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		public int[] Indices
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xA0BA68", Offset = "0xA0BA68", VA = "0xA0BA68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A7")]
		public List<Vector3> Normals
		{
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xA0BAD8", Offset = "0xA0BAD8", VA = "0xA0BAD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xA0BC2C", Offset = "0xA0BC2C", VA = "0xA0BC2C")]
		public GlyphContourTesselator(double resolution = 1.0, bool doCreateContours = true)
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xA0BDB8", Offset = "0xA0BDB8", VA = "0xA0BDB8")]
		public void CloseContour()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xA0BFC8", Offset = "0xA0BFC8", VA = "0xA0BFC8")]
		public void Curve3(float x1, float y1, float x2, float y2)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xA0C0D4", Offset = "0xA0C0D4", VA = "0xA0C0D4")]
		public void Curve4(float x1, float y1, float x2, float y2, float x3, float y3)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xA0C448", Offset = "0xA0C448", VA = "0xA0C448")]
		public void LineTo(float x1, float y1)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xA0C580", Offset = "0xA0C580", VA = "0xA0C580")]
		public void MoveTo(float x0, float y0)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xA0C650", Offset = "0xA0C650", VA = "0xA0C650")]
		public void BeginRead(int contourCount)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xA0C6A0", Offset = "0xA0C6A0", VA = "0xA0C6A0")]
		public void EndRead()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public enum ContourOrientation
	{
		[Token(Token = "0x4001B18")]
		Original,
		[Token(Token = "0x4001B19")]
		Clockwise,
		[Token(Token = "0x4001B1A")]
		CounterClockwise
	}
	[Token(Token = "0x2000424")]
	internal interface ITesselator
	{
		[Token(Token = "0x170004A8")]
		List<Contour> Contours
		{
			[Token(Token = "0x6001CA1")]
			get;
		}

		[Token(Token = "0x6001CA2")]
		void Cleanup();

		[Token(Token = "0x6001CA3")]
		void AddContour(Contour contour);

		[Token(Token = "0x6001CA4")]
		void Tesselate();
	}
	[Token(Token = "0x2000425")]
	internal interface IPathBuilder
	{
		[Token(Token = "0x6001CA5")]
		void CreateContoursFromGlyph(Glyph glyph);

		[Token(Token = "0x6001CA6")]
		void ApplyTesselator(ref GlyphContourTesselator tesselator, Glyph glyph);
	}
	[Token(Token = "0x2000426")]
	internal class OpenCSPathBuilder : PathBuilderBase
	{
		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xA0C95C", Offset = "0xA0C95C", VA = "0xA0C95C")]
		public OpenCSPathBuilder(IVFont font)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xA0CA04", Offset = "0xA0CA04", VA = "0xA0CA04", Slot = "6")]
		public override void CreateContoursFromGlyph(Glyph glyph)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xA0CA08", Offset = "0xA0CA08", VA = "0xA0CA08", Slot = "7")]
		public override void ApplyTesselator(ref GlyphContourTesselator tesselator, Glyph glyph)
		{
		}
	}
	[Token(Token = "0x2000427")]
	internal class PathBuilderBase : IPathBuilder
	{
		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IVFont _font;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<Contour> _contours;

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xA0C960", Offset = "0xA0C960", VA = "0xA0C960")]
		public PathBuilderBase(IVFont font)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xA0CDBC", Offset = "0xA0CDBC", VA = "0xA0CDBC", Slot = "6")]
		public virtual void CreateContoursFromGlyph(Glyph glyph)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xA0CDB8", Offset = "0xA0CDB8", VA = "0xA0CDB8", Slot = "7")]
		public virtual void ApplyTesselator(ref GlyphContourTesselator tesselator, Glyph glyph)
		{
		}
	}
	[Token(Token = "0x2000428")]
	internal class TesselatorBase : ITesselator
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Contour> _contours;

		[Token(Token = "0x170004A9")]
		public List<Contour> Contours
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xA0CE38", Offset = "0xA0CE38", VA = "0xA0CE38", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xA0CE40", Offset = "0xA0CE40", VA = "0xA0CE40", Slot = "5")]
		public void Cleanup()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xA0CEAC", Offset = "0xA0CEAC", VA = "0xA0CEAC", Slot = "6")]
		public void AddContour(Contour contour)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xA0D01C", Offset = "0xA0D01C", VA = "0xA0D01C", Slot = "8")]
		public virtual void Tesselate()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xA0D2D4", Offset = "0xA0D2D4", VA = "0xA0D2D4")]
		public TesselatorBase()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public enum WindingRules
	{
		[Token(Token = "0x4001B1F")]
		EvenOdd,
		[Token(Token = "0x4001B20")]
		NonZero,
		[Token(Token = "0x4001B21")]
		Positive,
		[Token(Token = "0x4001B22")]
		Negative,
		[Token(Token = "0x4001B23")]
		AbsGeqTwo
	}
}
namespace Virtence.VText.Tesselation.Poly2Tri
{
	[Token(Token = "0x200042A")]
	public class DelaunayTriangle
	{
		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FixedArray3<TriangulationPoint> Points;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FixedArray3<DelaunayTriangle> Neighbors;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FixedBitArray3 mEdgeIsConstrained;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public FixedBitArray3 EdgeIsDelaunay;

		[Token(Token = "0x170004AA")]
		public FixedBitArray3 EdgeIsConstrained
		{
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xA0D2DC", Offset = "0xA0D2DC", VA = "0xA0D2DC")]
			get
			{
				return default(FixedBitArray3);
			}
		}

		[Token(Token = "0x170004AB")]
		public bool IsInterior
		{
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xA0D2EC", Offset = "0xA0D2EC", VA = "0xA0D2EC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xA0D2F4", Offset = "0xA0D2F4", VA = "0xA0D2F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xA0D300", Offset = "0xA0D300", VA = "0xA0D300")]
		public DelaunayTriangle(TriangulationPoint p1, TriangulationPoint p2, TriangulationPoint p3)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xA0D3A4", Offset = "0xA0D3A4", VA = "0xA0D3A4")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xA0D454", Offset = "0xA0D454", VA = "0xA0D454")]
		public int IndexCWFrom(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xA0D488", Offset = "0xA0D488", VA = "0xA0D488")]
		public int IndexCCWFrom(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xA0D4BC", Offset = "0xA0D4BC", VA = "0xA0D4BC")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xA0D514", Offset = "0xA0D514", VA = "0xA0D514")]
		private void MarkNeighbor(TriangulationPoint p1, TriangulationPoint p2, DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xA0D6C4", Offset = "0xA0D6C4", VA = "0xA0D6C4")]
		public void MarkNeighbor(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xA0D870", Offset = "0xA0D870", VA = "0xA0D870")]
		public void ClearNeighbors()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xA0D8EC", Offset = "0xA0D8EC", VA = "0xA0D8EC")]
		public void ClearNeighbor(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xA0D9C4", Offset = "0xA0D9C4", VA = "0xA0D9C4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xA0DA94", Offset = "0xA0DA94", VA = "0xA0DA94")]
		public TriangulationPoint OppositePoint(DelaunayTriangle t, TriangulationPoint p)
		{
			return null;
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xA0DB48", Offset = "0xA0DB48", VA = "0xA0DB48")]
		public DelaunayTriangle NeighborCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xA0DBE8", Offset = "0xA0DBE8", VA = "0xA0DBE8")]
		public DelaunayTriangle NeighborCCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xA0DC88", Offset = "0xA0DC88", VA = "0xA0DC88")]
		public DelaunayTriangle NeighborAcrossFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xA0DD08", Offset = "0xA0DD08", VA = "0xA0DD08")]
		public TriangulationPoint PointCCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xA0DAC0", Offset = "0xA0DAC0", VA = "0xA0DAC0")]
		public TriangulationPoint PointCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xA0DD90", Offset = "0xA0DD90", VA = "0xA0DD90")]
		private void RotateCW()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xA0DE5C", Offset = "0xA0DE5C", VA = "0xA0DE5C")]
		public void Legalize(TriangulationPoint oPoint, TriangulationPoint nPoint)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xA0DEF4", Offset = "0xA0DEF4", VA = "0xA0DEF4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xA0E150", Offset = "0xA0E150", VA = "0xA0E150")]
		public void MarkNeighborEdges()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xA0E2D0", Offset = "0xA0E2D0", VA = "0xA0E2D0")]
		public void MarkEdge(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xA0E3E4", Offset = "0xA0E3E4", VA = "0xA0E3E4")]
		public void MarkEdge(List<DelaunayTriangle> tList)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xA0E618", Offset = "0xA0E618", VA = "0xA0E618")]
		public void MarkConstrainedEdge(int index)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xA0E628", Offset = "0xA0E628", VA = "0xA0E628")]
		public void MarkConstrainedEdge(DTSweepConstraint edge)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xA0E29C", Offset = "0xA0E29C", VA = "0xA0E29C")]
		public void MarkConstrainedEdge(TriangulationPoint p, TriangulationPoint q)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xA0E674", Offset = "0xA0E674", VA = "0xA0E674")]
		public double Area()
		{
			return default(double);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xA0E794", Offset = "0xA0E794", VA = "0xA0E794")]
		public TriangulationPoint Centroid()
		{
			return null;
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xA0D5DC", Offset = "0xA0D5DC", VA = "0xA0D5DC")]
		public int EdgeIndex(TriangulationPoint p1, TriangulationPoint p2)
		{
			return default(int);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xA0E918", Offset = "0xA0E918", VA = "0xA0E918")]
		public bool GetConstrainedEdgeCCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xA0E96C", Offset = "0xA0E96C", VA = "0xA0E96C")]
		public bool GetConstrainedEdgeCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xA0E9C0", Offset = "0xA0E9C0", VA = "0xA0E9C0")]
		public bool GetConstrainedEdgeAcross(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xA0E9F4", Offset = "0xA0E9F4", VA = "0xA0E9F4")]
		protected void SetConstrainedEdge(int idx, bool ce)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xA0EA04", Offset = "0xA0EA04", VA = "0xA0EA04")]
		public void SetConstrainedEdgeCCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xA0EA54", Offset = "0xA0EA54", VA = "0xA0EA54")]
		public void SetConstrainedEdgeCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xA0EAA4", Offset = "0xA0EAA4", VA = "0xA0EAA4")]
		public void SetConstrainedEdgeAcross(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xA0EAD8", Offset = "0xA0EAD8", VA = "0xA0EAD8")]
		public bool GetDelaunayEdgeCCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xA0EB18", Offset = "0xA0EB18", VA = "0xA0EB18")]
		public bool GetDelaunayEdgeCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xA0EB58", Offset = "0xA0EB58", VA = "0xA0EB58")]
		public bool GetDelaunayEdgeAcross(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xA0EB78", Offset = "0xA0EB78", VA = "0xA0EB78")]
		public void SetDelaunayEdgeCCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xA0EBC8", Offset = "0xA0EBC8", VA = "0xA0EBC8")]
		public void SetDelaunayEdgeCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xA0EC18", Offset = "0xA0EC18", VA = "0xA0EC18")]
		public void SetDelaunayEdgeAcross(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xA0EC48", Offset = "0xA0EC48", VA = "0xA0EC48")]
		public bool GetEdge(int idx, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xA0ED70", Offset = "0xA0ED70", VA = "0xA0ED70")]
		public bool GetEdgeCCW(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xA0EDBC", Offset = "0xA0EDBC", VA = "0xA0EDBC")]
		public bool GetEdgeCW(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xA0EE08", Offset = "0xA0EE08", VA = "0xA0EE08")]
		public bool GetEdgeAcross(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200042B")]
	public class AdvancingFront
	{
		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode Head;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode Tail;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AdvancingFrontNode Search;

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xA0EE34", Offset = "0xA0EE34", VA = "0xA0EE34")]
		public AdvancingFront(AdvancingFrontNode head, AdvancingFrontNode tail)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xA0EE88", Offset = "0xA0EE88", VA = "0xA0EE88")]
		public void AddNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xA0EE8C", Offset = "0xA0EE8C", VA = "0xA0EE8C")]
		public void RemoveNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xA0EE90", Offset = "0xA0EE90", VA = "0xA0EE90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xA0EF88", Offset = "0xA0EF88", VA = "0xA0EF88")]
		private AdvancingFrontNode FindSearchNode(double x)
		{
			return null;
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xA0EF90", Offset = "0xA0EF90", VA = "0xA0EF90")]
		public AdvancingFrontNode LocateNode(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xA0EFC0", Offset = "0xA0EFC0", VA = "0xA0EFC0")]
		private AdvancingFrontNode LocateNode(double x)
		{
			return null;
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xA0F030", Offset = "0xA0F030", VA = "0xA0F030")]
		public AdvancingFrontNode LocatePoint(TriangulationPoint point)
		{
			return null;
		}
	}
	[Token(Token = "0x200042C")]
	public class AdvancingFrontNode
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode Next;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode Prev;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double Value;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangulationPoint Point;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DelaunayTriangle Triangle;

		[Token(Token = "0x170004AC")]
		public bool HasNext
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xA0F1BC", Offset = "0xA0F1BC", VA = "0xA0F1BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AD")]
		public bool HasPrev
		{
			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0xA0F1CC", Offset = "0xA0F1CC", VA = "0xA0F1CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xA0F16C", Offset = "0xA0F16C", VA = "0xA0F16C")]
		public AdvancingFrontNode(TriangulationPoint point)
		{
		}
	}
	[Token(Token = "0x200042D")]
	public static class DTSweep
	{
		[Token(Token = "0x4001B31")]
		private const double PI_div2 = Math.PI / 2.0;

		[Token(Token = "0x4001B32")]
		private const double PI_3div4 = Math.PI * 3.0 / 4.0;

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xA0F1DC", Offset = "0xA0F1DC", VA = "0xA0F1DC")]
		public static void Triangulate(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xA0F4E0", Offset = "0xA0F4E0", VA = "0xA0F4E0")]
		private static void Sweep(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xA0F720", Offset = "0xA0F720", VA = "0xA0F720")]
		private static void FixupConstrainedEdges(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xA0FA5C", Offset = "0xA0FA5C", VA = "0xA0FA5C")]
		private static void FinalizationConvexHull(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xA10258", Offset = "0xA10258", VA = "0xA10258")]
		private static void TurnAdvancingFrontConvex(DTSweepContext tcx, AdvancingFrontNode b, AdvancingFrontNode c)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xA0F9A8", Offset = "0xA0F9A8", VA = "0xA0F9A8")]
		private static void FinalizationPolygon(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xA10BD0", Offset = "0xA10BD0", VA = "0xA10BD0")]
		private static void FinalizationConstraints(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xA0FE7C", Offset = "0xA0FE7C", VA = "0xA0FE7C")]
		private static AdvancingFrontNode PointEvent(DTSweepContext tcx, TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xA10C94", Offset = "0xA10C94", VA = "0xA10C94")]
		private static AdvancingFrontNode NewFrontTriangle(DTSweepContext tcx, TriangulationPoint point, AdvancingFrontNode node)
		{
			return null;
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xA10018", Offset = "0xA10018", VA = "0xA10018")]
		private static void EdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xA11360", Offset = "0xA11360", VA = "0xA11360")]
		private static void FillEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xA11834", Offset = "0xA11834", VA = "0xA11834")]
		private static void FillRightConcaveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xA11904", Offset = "0xA11904", VA = "0xA11904")]
		private static void FillRightConvexEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xA119DC", Offset = "0xA119DC", VA = "0xA119DC")]
		private static void FillRightBelowEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xA11618", Offset = "0xA11618", VA = "0xA11618")]
		private static void FillRightAboveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xA11AD8", Offset = "0xA11AD8", VA = "0xA11AD8")]
		private static void FillLeftConvexEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xA11BA8", Offset = "0xA11BA8", VA = "0xA11BA8")]
		private static void FillLeftConcaveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xA11C70", Offset = "0xA11C70", VA = "0xA11C70")]
		private static void FillLeftBelowEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xA11728", Offset = "0xA11728", VA = "0xA11728")]
		private static void FillLeftAboveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xA1129C", Offset = "0xA1129C", VA = "0xA1129C")]
		private static bool IsEdgeSideOfTriangle(DelaunayTriangle triangle, TriangulationPoint ep, TriangulationPoint eq)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xA1138C", Offset = "0xA1138C", VA = "0xA1138C")]
		private static void EdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle triangle, TriangulationPoint point)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xA11DC8", Offset = "0xA11DC8", VA = "0xA11DC8")]
		private static void FlipEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle t, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xA12224", Offset = "0xA12224", VA = "0xA12224")]
		private static bool NextFlipPoint(TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle ot, TriangulationPoint op, out TriangulationPoint newP)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xA12170", Offset = "0xA12170", VA = "0xA12170")]
		private static DelaunayTriangle NextFlipTriangle(DTSweepContext tcx, Orientation o, DelaunayTriangle t, DelaunayTriangle ot, TriangulationPoint p, TriangulationPoint op)
		{
			return null;
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xA1231C", Offset = "0xA1231C", VA = "0xA1231C")]
		private static void FlipScanEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle flipTriangle, DelaunayTriangle t, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xA10E90", Offset = "0xA10E90", VA = "0xA10E90")]
		private static void FillAdvancingFront(DTSweepContext tcx, AdvancingFrontNode n)
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xA126F4", Offset = "0xA126F4", VA = "0xA126F4")]
		private static void FillBasin(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xA12978", Offset = "0xA12978", VA = "0xA12978")]
		private static void FillBasinReq(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xA12AA4", Offset = "0xA12AA4", VA = "0xA12AA4")]
		private static bool IsShallow(DTSweepContext tcx, AdvancingFrontNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xA124C0", Offset = "0xA124C0", VA = "0xA124C0")]
		private static double HoleAngle(AdvancingFrontNode node)
		{
			return default(double);
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xA12600", Offset = "0xA12600", VA = "0xA12600")]
		private static double BasinAngle(AdvancingFrontNode node)
		{
			return default(double);
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xA10A38", Offset = "0xA10A38", VA = "0xA10A38")]
		private static void Fill(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xA10F88", Offset = "0xA10F88", VA = "0xA10F88")]
		private static bool Legalize(DTSweepContext tcx, DelaunayTriangle t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xA10360", Offset = "0xA10360", VA = "0xA10360")]
		private static void RotateTrianglePair(DelaunayTriangle t, TriangulationPoint p, DelaunayTriangle ot, TriangulationPoint op)
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class DTSweepBasin
	{
		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode leftNode;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode bottomNode;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancingFrontNode rightNode;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double width;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool leftHighest;

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xA12B54", Offset = "0xA12B54", VA = "0xA12B54")]
		public DTSweepBasin()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class DTSweepConstraint : TriangulationConstraint
	{
		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xA12B5C", Offset = "0xA12B5C", VA = "0xA12B5C")]
		public DTSweepConstraint(TriangulationPoint p1, TriangulationPoint p2)
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class DTSweepContext : TriangulationContext
	{
		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float ALPHA;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AdvancingFront Front;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DTSweepBasin Basin;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DTSweepEdgeEvent EdgeEvent;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DTSweepPointComparator _comparator;

		[Token(Token = "0x170004AE")]
		public TriangulationPoint Head
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xA12B90", Offset = "0xA12B90", VA = "0xA12B90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xA12B98", Offset = "0xA12B98", VA = "0xA12B98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		public TriangulationPoint Tail
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xA12BA0", Offset = "0xA12BA0", VA = "0xA12BA0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xA12BA8", Offset = "0xA12BA8", VA = "0xA12BA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		public override TriangulationAlgorithm Algorithm
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xA12BB0", Offset = "0xA12BB0", VA = "0xA12BB0", Slot = "4")]
			get
			{
				return default(TriangulationAlgorithm);
			}
		}

		[Token(Token = "0x170004B1")]
		public override bool IsDebugEnabled
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xA12CD0", Offset = "0xA12CD0", VA = "0xA12CD0", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xA12CD8", Offset = "0xA12CD8", VA = "0xA12CD8", Slot = "9")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xA12BB8", Offset = "0xA12BB8", VA = "0xA12BB8")]
		public DTSweepContext()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xA10978", Offset = "0xA10978", VA = "0xA10978")]
		public void RemoveFromList(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xA10BCC", Offset = "0xA10BCC", VA = "0xA10BCC")]
		public void MeshClean(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xA12D74", Offset = "0xA12D74", VA = "0xA12D74")]
		private void MeshCleanReq(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xA12EB8", Offset = "0xA12EB8", VA = "0xA12EB8", Slot = "7")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xA10E78", Offset = "0xA10E78", VA = "0xA10E78")]
		public void AddNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xA12B3C", Offset = "0xA12B3C", VA = "0xA12B3C")]
		public void RemoveNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xA10C7C", Offset = "0xA10C7C", VA = "0xA10C7C")]
		public AdvancingFrontNode LocateNode(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xA0F234", Offset = "0xA0F234", VA = "0xA0F234")]
		public void CreateAdvancingFront()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xA10894", Offset = "0xA10894", VA = "0xA10894")]
		public void MapTriangleToNodes(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xA12F34", Offset = "0xA12F34", VA = "0xA12F34", Slot = "5")]
		public override void PrepareTriangulation(ITriangulatable t)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xA0FD8C", Offset = "0xA0FD8C", VA = "0xA0FD8C")]
		public void FinalizeTriangulation()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xA132AC", Offset = "0xA132AC", VA = "0xA132AC", Slot = "6")]
		public override TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b)
		{
			return null;
		}
	}
	[Token(Token = "0x2000431")]
	public class DTSweepDebugContext : TriangulationDebugContext
	{
		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DelaunayTriangle _primaryTriangle;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DelaunayTriangle _secondaryTriangle;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangulationPoint _activePoint;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AdvancingFrontNode _activeNode;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DTSweepConstraint _activeConstraint;

		[Token(Token = "0x170004B2")]
		public DelaunayTriangle PrimaryTriangle
		{
			[Token(Token = "0x6001D25")]
			[Address(RVA = "0xA1331C", Offset = "0xA1331C", VA = "0xA1331C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0xA11234", Offset = "0xA11234", VA = "0xA11234")]
			set
			{
			}
		}

		[Token(Token = "0x170004B3")]
		public DelaunayTriangle SecondaryTriangle
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xA13324", Offset = "0xA13324", VA = "0xA13324")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xA12108", Offset = "0xA12108", VA = "0xA12108")]
			set
			{
			}
		}

		[Token(Token = "0x170004B4")]
		public TriangulationPoint ActivePoint
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xA1332C", Offset = "0xA1332C", VA = "0xA1332C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xA13334", Offset = "0xA13334", VA = "0xA13334")]
			set
			{
			}
		}

		[Token(Token = "0x170004B5")]
		public AdvancingFrontNode ActiveNode
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xA1339C", Offset = "0xA1339C", VA = "0xA1339C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0xA109D0", Offset = "0xA109D0", VA = "0xA109D0")]
			set
			{
			}
		}

		[Token(Token = "0x170004B6")]
		public DTSweepConstraint ActiveConstraint
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xA133A4", Offset = "0xA133A4", VA = "0xA133A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0xA0FFB0", Offset = "0xA0FFB0", VA = "0xA0FFB0")]
			set
			{
			}
		}

		[Token(Token = "0x170004B7")]
		public bool IsDebugContext
		{
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0xA133AC", Offset = "0xA133AC", VA = "0xA133AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xA12D6C", Offset = "0xA12D6C", VA = "0xA12D6C")]
		public DTSweepDebugContext(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xA133B4", Offset = "0xA133B4", VA = "0xA133B4", Slot = "4")]
		public override void Clear()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class DTSweepEdgeEvent
	{
		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DTSweepConstraint ConstrainedEdge;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Right;

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xA12CC0", Offset = "0xA12CC0", VA = "0xA12CC0")]
		public DTSweepEdgeEvent()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class DTSweepPointComparator : IComparer<TriangulationPoint>
	{
		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xA133F8", Offset = "0xA133F8", VA = "0xA133F8", Slot = "4")]
		public int Compare(TriangulationPoint p1, TriangulationPoint p2)
		{
			return default(int);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xA12CC8", Offset = "0xA12CC8", VA = "0xA12CC8")]
		public DTSweepPointComparator()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class PointOnEdgeException : NotImplementedException
	{
		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly TriangulationPoint A;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly TriangulationPoint B;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public readonly TriangulationPoint C;

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xA11D68", Offset = "0xA11D68", VA = "0xA11D68")]
		public PointOnEdgeException(string message, TriangulationPoint a, TriangulationPoint b, TriangulationPoint c)
		{
		}
	}
	[Token(Token = "0x2000435")]
	public interface ITriangulatable
	{
		[Token(Token = "0x170004B8")]
		IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6001D36")]
			get;
		}

		[Token(Token = "0x170004B9")]
		TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6001D37")]
			get;
		}

		[Token(Token = "0x170004BA")]
		string FileName
		{
			[Token(Token = "0x6001D38")]
			get;
			[Token(Token = "0x6001D39")]
			set;
		}

		[Token(Token = "0x170004BB")]
		bool DisplayFlipX
		{
			[Token(Token = "0x6001D3A")]
			get;
			[Token(Token = "0x6001D3B")]
			set;
		}

		[Token(Token = "0x170004BC")]
		bool DisplayFlipY
		{
			[Token(Token = "0x6001D3C")]
			get;
			[Token(Token = "0x6001D3D")]
			set;
		}

		[Token(Token = "0x170004BD")]
		float DisplayRotate
		{
			[Token(Token = "0x6001D3E")]
			get;
			[Token(Token = "0x6001D3F")]
			set;
		}

		[Token(Token = "0x170004BE")]
		double Precision
		{
			[Token(Token = "0x6001D40")]
			get;
			[Token(Token = "0x6001D41")]
			set;
		}

		[Token(Token = "0x170004BF")]
		double MinX
		{
			[Token(Token = "0x6001D42")]
			get;
		}

		[Token(Token = "0x170004C0")]
		double MaxX
		{
			[Token(Token = "0x6001D43")]
			get;
		}

		[Token(Token = "0x170004C1")]
		double MinY
		{
			[Token(Token = "0x6001D44")]
			get;
		}

		[Token(Token = "0x170004C2")]
		double MaxY
		{
			[Token(Token = "0x6001D45")]
			get;
		}

		[Token(Token = "0x170004C3")]
		Rect2D Bounds
		{
			[Token(Token = "0x6001D46")]
			get;
		}

		[Token(Token = "0x6001D47")]
		void Prepare(TriangulationContext tcx);

		[Token(Token = "0x6001D48")]
		void AddTriangle(DelaunayTriangle t);

		[Token(Token = "0x6001D49")]
		void AddTriangles(IEnumerable<DelaunayTriangle> list);

		[Token(Token = "0x6001D4A")]
		void ClearTriangles();
	}
	[Token(Token = "0x2000436")]
	public enum Orientation
	{
		[Token(Token = "0x4001B4A")]
		CW,
		[Token(Token = "0x4001B4B")]
		CCW,
		[Token(Token = "0x4001B4C")]
		Collinear
	}
	[Token(Token = "0x2000437")]
	public class Contour : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Contour> mHoles;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ITriangulatable mParent;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mName;

		[Token(Token = "0x170004C4")]
		public new TriangulationPoint this[int index]
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xA134E8", Offset = "0xA134E8", VA = "0xA134E8", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0xA13590", Offset = "0xA13590", VA = "0xA13590", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x170004C5")]
		public string Name
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xA135F8", Offset = "0xA135F8", VA = "0xA135F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xA13600", Offset = "0xA13600", VA = "0xA13600")]
			set
			{
			}
		}

		[Token(Token = "0x170004C6")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xA13608", Offset = "0xA13608", VA = "0xA13608", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xA13658", Offset = "0xA13658", VA = "0xA13658")]
			private set
			{
			}
		}

		[Token(Token = "0x170004C7")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xA1365C", Offset = "0xA1365C", VA = "0xA1365C", Slot = "28")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x170004C8")]
		public string FileName
		{
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xA13700", Offset = "0xA13700", VA = "0xA13700", Slot = "29")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xA137A4", Offset = "0xA137A4", VA = "0xA137A4", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170004C9")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xA137A8", Offset = "0xA137A8", VA = "0xA137A8", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xA1384C", Offset = "0xA1384C", VA = "0xA1384C", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xA13850", Offset = "0xA13850", VA = "0xA13850", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xA138F4", Offset = "0xA138F4", VA = "0xA138F4", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170004CB")]
		public float DisplayRotate
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xA138F8", Offset = "0xA138F8", VA = "0xA138F8", Slot = "35")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xA1399C", Offset = "0xA1399C", VA = "0xA1399C", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public double Precision
		{
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xA139A0", Offset = "0xA139A0", VA = "0xA139A0", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xA13A44", Offset = "0xA13A44", VA = "0xA13A44", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170004CD")]
		public double MinX
		{
			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0xA13A48", Offset = "0xA13A48", VA = "0xA13A48", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004CE")]
		public double MaxX
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0xA13A64", Offset = "0xA13A64", VA = "0xA13A64", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004CF")]
		public double MinY
		{
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xA13A80", Offset = "0xA13A80", VA = "0xA13A80", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004D0")]
		public double MaxY
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0xA13A9C", Offset = "0xA13A9C", VA = "0xA13A9C", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004D1")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xA13AB8", Offset = "0xA13AB8", VA = "0xA13AB8", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xA13AC0", Offset = "0xA13AC0", VA = "0xA13AC0")]
		public Contour(ITriangulatable parent)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xA13BAC", Offset = "0xA13BAC", VA = "0xA13BAC")]
		public Contour(ITriangulatable parent, IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xA13F58", Offset = "0xA13F58", VA = "0xA13F58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xA13FB8", Offset = "0xA13FB8", VA = "0xA13FB8", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Virtence.VText.Tesselation.Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xA14020", Offset = "0xA14020", VA = "0xA14020", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xA14078", Offset = "0xA14078", VA = "0xA14078", Slot = "56")]
		public void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xA14090", Offset = "0xA14090", VA = "0xA14090", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xA14250", Offset = "0xA14250", VA = "0xA14250", Slot = "22")]
		public override void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xA13CB8", Offset = "0xA13CB8", VA = "0xA13CB8")]
		public void AddRange(IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xA14724", Offset = "0xA14724", VA = "0xA14724", Slot = "52")]
		public void Insert(int idx, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xA14744", Offset = "0xA14744", VA = "0xA14744", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xA14754", Offset = "0xA14754", VA = "0xA14754", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xA147AC", Offset = "0xA147AC", VA = "0xA147AC", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xA14970", Offset = "0xA14970", VA = "0xA14970")]
		protected void AddHole(Contour c)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xA14A34", Offset = "0xA14A34", VA = "0xA14A34")]
		public int GetNumHoles(bool parentIsHole)
		{
			return default(int);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xA14BA0", Offset = "0xA14BA0", VA = "0xA14BA0")]
		public int GetNumHoles()
		{
			return default(int);
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xA14BE8", Offset = "0xA14BE8", VA = "0xA14BE8")]
		public Contour GetHole(int idx)
		{
			return null;
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xA14C6C", Offset = "0xA14C6C", VA = "0xA14C6C")]
		public void GetActualHoles(bool parentIsHole, ref List<Contour> holes)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xA14E44", Offset = "0xA14E44", VA = "0xA14E44")]
		public List<Contour>.Enumerator GetHoleEnumerator()
		{
			return default(List<Contour>.Enumerator);
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xA14EB8", Offset = "0xA14EB8", VA = "0xA14EB8")]
		public void InitializeHoles(ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xA15018", Offset = "0xA15018", VA = "0xA15018")]
		public static void InitializeHoles(List<Contour> holes, ITriangulatable parent, ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xA15D8C", Offset = "0xA15D8C", VA = "0xA15D8C", Slot = "44")]
		public void Prepare(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xA15DDC", Offset = "0xA15DDC", VA = "0xA15DDC", Slot = "45")]
		public void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xA15E2C", Offset = "0xA15E2C", VA = "0xA15E2C", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xA15E7C", Offset = "0xA15E7C", VA = "0xA15E7C", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xA15ECC", Offset = "0xA15ECC", VA = "0xA15ECC")]
		public Point2D FindPointInContour()
		{
			return null;
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xA15FE8", Offset = "0xA15FE8", VA = "0xA15FE8")]
		public bool IsPointInsideContour(Point2D p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000438")]
	public class Polygon : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<uint, TriangulationPoint> mPointMap;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<DelaunayTriangle> mTriangles;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double mPrecision;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<Polygon> mHoles;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<TriangulationPoint> mSteinerPoints;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected PolygonPoint _last;

		[Token(Token = "0x170004D2")]
		public IList<TriangulationPoint> Points
		{
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xA2A654", Offset = "0xA2A654", VA = "0xA2A654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D3")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xA2A658", Offset = "0xA2A658", VA = "0xA2A658", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xA2A660", Offset = "0xA2A660", VA = "0xA2A660", Slot = "28")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x170004D5")]
		public string FileName
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xA2A668", Offset = "0xA2A668", VA = "0xA2A668", Slot = "29")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xA2A670", Offset = "0xA2A670", VA = "0xA2A670", Slot = "30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004D6")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xA2A678", Offset = "0xA2A678", VA = "0xA2A678", Slot = "31")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0xA2A680", Offset = "0xA2A680", VA = "0xA2A680", Slot = "32")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004D7")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xA2A68C", Offset = "0xA2A68C", VA = "0xA2A68C", Slot = "33")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0xA2A694", Offset = "0xA2A694", VA = "0xA2A694", Slot = "34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004D8")]
		public float DisplayRotate
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xA2A6A0", Offset = "0xA2A6A0", VA = "0xA2A6A0", Slot = "35")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xA2A6A8", Offset = "0xA2A6A8", VA = "0xA2A6A8", Slot = "36")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004D9")]
		public double Precision
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xA2A6B0", Offset = "0xA2A6B0", VA = "0xA2A6B0", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xA2A6B8", Offset = "0xA2A6B8", VA = "0xA2A6B8", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170004DA")]
		public double MinX
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xA2A6C0", Offset = "0xA2A6C0", VA = "0xA2A6C0", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004DB")]
		public double MaxX
		{
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xA2A6DC", Offset = "0xA2A6DC", VA = "0xA2A6DC", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004DC")]
		public double MinY
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0xA2A6F8", Offset = "0xA2A6F8", VA = "0xA2A6F8", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004DD")]
		public double MaxY
		{
			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0xA2A714", Offset = "0xA2A714", VA = "0xA2A714", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004DE")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xA2A730", Offset = "0xA2A730", VA = "0xA2A730", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DF")]
		public new TriangulationPoint this[int index]
		{
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xA2A738", Offset = "0xA2A738", VA = "0xA2A738", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xA2A7E0", Offset = "0xA2A7E0", VA = "0xA2A7E0", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x170004E0")]
		public IList<Polygon> Holes
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xA2A848", Offset = "0xA2A848", VA = "0xA2A848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xA2A850", Offset = "0xA2A850", VA = "0xA2A850")]
		public Polygon(IList<PolygonPoint> points)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xA2ADDC", Offset = "0xA2ADDC", VA = "0xA2ADDC")]
		public Polygon(IEnumerable<PolygonPoint> points)
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xA2AE64", Offset = "0xA2AE64", VA = "0xA2AE64")]
		public Polygon(params PolygonPoint[] points)
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xA2AE68", Offset = "0xA2AE68", VA = "0xA2AE68", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Virtence.VText.Tesselation.Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xA2AF1C", Offset = "0xA2AF1C", VA = "0xA2AF1C", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xA2AF74", Offset = "0xA2AF74", VA = "0xA2AF74", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xA2AF8C", Offset = "0xA2AF8C", VA = "0xA2AF8C", Slot = "56")]
		public void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xA2AFA4", Offset = "0xA2AFA4", VA = "0xA2AFA4")]
		public void Add(PolygonPoint p)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xA2AFBC", Offset = "0xA2AFBC", VA = "0xA2AFBC", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xA2AB38", Offset = "0xA2AB38", VA = "0xA2AB38")]
		public void AddRange(IList<PolygonPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xA2B3D4", Offset = "0xA2B3D4", VA = "0xA2B3D4")]
		public void AddRange(IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xA2B678", Offset = "0xA2B678", VA = "0xA2B678", Slot = "52")]
		public void Insert(int idx, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xA2B698", Offset = "0xA2B698", VA = "0xA2B698", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xA2B71C", Offset = "0xA2B71C", VA = "0xA2B71C")]
		public void RemovePoint(PolygonPoint p)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xA2BA40", Offset = "0xA2BA40", VA = "0xA2BA40", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xA2BA98", Offset = "0xA2BA98", VA = "0xA2BA98", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xA2BC58", Offset = "0xA2BC58", VA = "0xA2BC58")]
		public void AddSteinerPoint(TriangulationPoint point)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xA2BD60", Offset = "0xA2BD60", VA = "0xA2BD60")]
		public void AddSteinerPoints(List<TriangulationPoint> points)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xA2BE10", Offset = "0xA2BE10", VA = "0xA2BE10")]
		public void ClearSteinerPoints()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xA2BE7C", Offset = "0xA2BE7C", VA = "0xA2BE7C")]
		public void AddHole(Polygon poly)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xA2BF84", Offset = "0xA2BF84", VA = "0xA2BF84", Slot = "45")]
		public void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xA2C034", Offset = "0xA2C034", VA = "0xA2C034", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xA2C08C", Offset = "0xA2C08C", VA = "0xA2C08C", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xA2C0F8", Offset = "0xA2C0F8", VA = "0xA2C0F8")]
		public bool IsPointInside(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xA2C47C", Offset = "0xA2C47C", VA = "0xA2C47C", Slot = "44")]
		public void Prepare(TriangulationContext tcx)
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class PolygonPoint : TriangulationPoint
	{
		[Token(Token = "0x170004E1")]
		public PolygonPoint Next
		{
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0xA2C91C", Offset = "0xA2C91C", VA = "0xA2C91C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0xA2C924", Offset = "0xA2C924", VA = "0xA2C924")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004E2")]
		public PolygonPoint Previous
		{
			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0xA2C92C", Offset = "0xA2C92C", VA = "0xA2C92C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0xA2C934", Offset = "0xA2C934", VA = "0xA2C934")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xA2C838", Offset = "0xA2C838", VA = "0xA2C838")]
		public PolygonPoint(double x, double y)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xA2C93C", Offset = "0xA2C93C", VA = "0xA2C93C")]
		public static Point2D ToBasePoint(PolygonPoint p)
		{
			return null;
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xA2C940", Offset = "0xA2C940", VA = "0xA2C940")]
		public static TriangulationPoint ToTriangulationPoint(PolygonPoint p)
		{
			return null;
		}
	}
	[Token(Token = "0x200043A")]
	public class PolygonSet
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Polygon> _polygons;

		[Token(Token = "0x170004E3")]
		public IEnumerable<Polygon> Polygons
		{
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xA2CB98", Offset = "0xA2CB98", VA = "0xA2CB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xA2C944", Offset = "0xA2C944", VA = "0xA2C944")]
		public PolygonSet()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xA2C9CC", Offset = "0xA2C9CC", VA = "0xA2C9CC")]
		public PolygonSet(Polygon poly)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xA2CAE8", Offset = "0xA2CAE8", VA = "0xA2CAE8")]
		public void Add(Polygon p)
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class PolygonUtil
	{
		[Token(Token = "0x200043C")]
		public enum PolyUnionError
		{
			[Token(Token = "0x4001B5E")]
			None,
			[Token(Token = "0x4001B5F")]
			NoIntersections,
			[Token(Token = "0x4001B60")]
			Poly1InsidePoly2,
			[Token(Token = "0x4001B61")]
			InfiniteLoop
		}

		[Token(Token = "0x200043D")]
		[Flags]
		public enum PolyOperation : uint
		{
			[Token(Token = "0x4001B63")]
			None = 0u,
			[Token(Token = "0x4001B64")]
			Union = 1u,
			[Token(Token = "0x4001B65")]
			Intersect = 2u,
			[Token(Token = "0x4001B66")]
			Subtract = 4u
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xA2CBA0", Offset = "0xA2CBA0", VA = "0xA2CBA0")]
		public static Point2DList.WindingOrderType CalculateWindingOrder(IList<Point2D> l)
		{
			return default(Point2DList.WindingOrderType);
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xA2CEE0", Offset = "0xA2CEE0", VA = "0xA2CEE0")]
		public static bool PolygonsAreSame2D(IList<Point2D> poly1, IList<Point2D> poly2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xA2C0FC", Offset = "0xA2C0FC", VA = "0xA2C0FC")]
		public static bool PointInPolygon2D(IList<Point2D> polygon, Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xA2D3E4", Offset = "0xA2D3E4", VA = "0xA2D3E4")]
		public static bool PolygonsIntersect2D(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xA2D948", Offset = "0xA2D948", VA = "0xA2D948")]
		public bool PolygonContainsPolygon(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xA2D964", Offset = "0xA2D964", VA = "0xA2D964")]
		public static bool PolygonContainsPolygon(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2, bool runIntersectionTest)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xA2DC04", Offset = "0xA2DC04", VA = "0xA2DC04")]
		public static void ClipPolygonToEdge2D(Point2D edgeBegin, Point2D edgeEnd, IList<Point2D> poly, out List<Point2D> outPoly)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xA2EC04", Offset = "0xA2EC04", VA = "0xA2EC04")]
		public static void ClipPolygonToPolygon(IList<Point2D> poly, IList<Point2D> clipPoly, out List<Point2D> outPoly)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xA2EF5C", Offset = "0xA2EF5C", VA = "0xA2EF5C")]
		public static PolyUnionError PolygonUnion(Point2DList polygon1, Point2DList polygon2, out Point2DList union)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xA2F84C", Offset = "0xA2F84C", VA = "0xA2F84C")]
		protected static void PolygonUnionInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xA30120", Offset = "0xA30120", VA = "0xA30120")]
		public static PolyUnionError PolygonIntersect(Point2DList polygon1, Point2DList polygon2, out Point2DList intersectOut)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xA301C0", Offset = "0xA301C0", VA = "0xA301C0")]
		protected static void PolygonIntersectInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xA307B0", Offset = "0xA307B0", VA = "0xA307B0")]
		public static PolyUnionError PolygonSubtract(Point2DList polygon1, Point2DList polygon2, out Point2DList subtract)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xA30850", Offset = "0xA30850", VA = "0xA30850")]
		public static void PolygonSubtractInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xA30E90", Offset = "0xA30E90", VA = "0xA30E90")]
		public static PolyUnionError PolygonOperation(PolyOperation operations, Point2DList polygon1, Point2DList polygon2, out Dictionary<uint, Point2DList> results)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xA30F2C", Offset = "0xA30F2C", VA = "0xA30F2C")]
		public static PolyUnionError PolygonOperation(PolygonOperationContext ctx)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xA30F84", Offset = "0xA30F84", VA = "0xA30F84")]
		public static List<Point2DList> SplitComplexPolygon(Point2DList verts, double epsilon)
		{
			return null;
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xA32550", Offset = "0xA32550", VA = "0xA32550")]
		private static List<Point2DList> SplitComplexPolygonCleanup(IList<Point2D> orig)
		{
			return null;
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xA32D24", Offset = "0xA32D24", VA = "0xA32D24")]
		public PolygonUtil()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class EdgeIntersectInfo
	{
		[Token(Token = "0x170004E4")]
		public Edge EdgeOne
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xA32D8C", Offset = "0xA32D8C", VA = "0xA32D8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xA32D94", Offset = "0xA32D94", VA = "0xA32D94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004E5")]
		public Edge EdgeTwo
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xA32D9C", Offset = "0xA32D9C", VA = "0xA32D9C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xA32DA4", Offset = "0xA32DA4", VA = "0xA32DA4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004E6")]
		public Point2D IntersectionPoint
		{
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0xA32DAC", Offset = "0xA32DAC", VA = "0xA32DAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0xA32DB4", Offset = "0xA32DB4", VA = "0xA32DB4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xA32D2C", Offset = "0xA32D2C", VA = "0xA32D2C")]
		public EdgeIntersectInfo(Edge edgeOne, Edge edgeTwo, Point2D intersectionPoint)
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class SplitComplexPolygonNode
	{
		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SplitComplexPolygonNode> mConnected;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Point2D mPosition;

		[Token(Token = "0x170004E7")]
		public int NumConnected
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xA32354", Offset = "0xA32354", VA = "0xA32354")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004E8")]
		public Point2D Position
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0xA32DBC", Offset = "0xA32DBC", VA = "0xA32DBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0xA32DC4", Offset = "0xA32DC4", VA = "0xA32DC4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E9")]
		public SplitComplexPolygonNode this[int index]
		{
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xA31DD8", Offset = "0xA31DD8", VA = "0xA31DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xA32DCC", Offset = "0xA32DCC", VA = "0xA32DCC")]
		public SplitComplexPolygonNode()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xA31C3C", Offset = "0xA31C3C", VA = "0xA31C3C")]
		public SplitComplexPolygonNode(Point2D pos)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xA32E54", Offset = "0xA32E54", VA = "0xA32E54", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xA32F04", Offset = "0xA32F04", VA = "0xA32F04")]
		public bool Equals(SplitComplexPolygonNode pn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xA32F30", Offset = "0xA32F30", VA = "0xA32F30", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xA31E30", Offset = "0xA31E30", VA = "0xA31E30")]
		public static bool operator ==(SplitComplexPolygonNode lhs, SplitComplexPolygonNode rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xA32414", Offset = "0xA32414", VA = "0xA32414")]
		public static bool operator !=(SplitComplexPolygonNode lhs, SplitComplexPolygonNode rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xA32F38", Offset = "0xA32F38", VA = "0xA32F38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xA33094", Offset = "0xA33094", VA = "0xA33094")]
		private bool IsRighter(double sinA, double cosA, double sinB, double cosB)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xA330D4", Offset = "0xA330D4", VA = "0xA330D4")]
		private int remainder(int x, int modulus)
		{
			return default(int);
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xA31CE0", Offset = "0xA31CE0", VA = "0xA31CE0")]
		public void AddConnection(SplitComplexPolygonNode toMe)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xA322FC", Offset = "0xA322FC", VA = "0xA322FC")]
		public void RemoveConnection(SplitComplexPolygonNode fromMe)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xA330EC", Offset = "0xA330EC", VA = "0xA330EC")]
		private void RemoveConnectionByIndex(int index)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xA3245C", Offset = "0xA3245C", VA = "0xA3245C")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xA3316C", Offset = "0xA3316C", VA = "0xA3316C")]
		private bool IsConnectedTo(SplitComplexPolygonNode me)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xA32890", Offset = "0xA32890", VA = "0xA32890")]
		public SplitComplexPolygonNode GetRightestConnection(SplitComplexPolygonNode incoming)
		{
			return null;
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xA324CC", Offset = "0xA324CC", VA = "0xA324CC")]
		public SplitComplexPolygonNode GetRightestConnection(Point2D incomingDir)
		{
			return null;
		}
	}
	[Token(Token = "0x2000440")]
	public class PolygonOperationContext
	{
		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PolygonUtil.PolyOperation mOperations;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Point2DList mOriginalPolygon1;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Point2DList mOriginalPolygon2;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Point2DList mPoly1;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Point2DList mPoly2;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<EdgeIntersectInfo> mIntersections;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int mStartingIndex;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PolygonUtil.PolyUnionError mError;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> mPoly1VectorAngles;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<int> mPoly2VectorAngles;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<uint, Point2DList> mOutput;

		[Token(Token = "0x170004EA")]
		public Point2DList Union
		{
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0xA2FCC4", Offset = "0xA2FCC4", VA = "0xA2FCC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EB")]
		public Point2DList Intersect
		{
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0xA30698", Offset = "0xA30698", VA = "0xA30698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EC")]
		public Point2DList Subtract
		{
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0xA30DB4", Offset = "0xA30DB4", VA = "0xA30DB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xA2EFFC", Offset = "0xA2EFFC", VA = "0xA2EFFC")]
		public PolygonOperationContext()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xA333BC", Offset = "0xA333BC", VA = "0xA333BC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xA2F084", Offset = "0xA2F084", VA = "0xA2F084")]
		public bool Init(PolygonUtil.PolyOperation operations, Point2DList polygon1, Point2DList polygon2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xA33750", Offset = "0xA33750", VA = "0xA33750")]
		private bool VerticesIntersect(Point2DList polygon1, Point2DList polygon2, out List<EdgeIntersectInfo> intersections)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xA30014", Offset = "0xA30014", VA = "0xA30014")]
		public bool PointInPolygonAngle(Point2D point, Point2DList polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xA33ADC", Offset = "0xA33ADC", VA = "0xA33ADC")]
		public double VectorAngle(Point2D p1, Point2D p2)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000441")]
	public class ConstrainedPointSet : PointSet
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<uint, TriangulationConstraint> mConstraintMap;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Contour> mHoles;

		[Token(Token = "0x170004ED")]
		public override TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xA33BF8", Offset = "0xA33BF8", VA = "0xA33BF8", Slot = "61")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xA33C00", Offset = "0xA33C00", VA = "0xA33C00")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xA341F8", Offset = "0xA341F8", VA = "0xA341F8")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds, List<TriangulationConstraint> constraints)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xA34514", Offset = "0xA34514", VA = "0xA34514")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds, int[] indices)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xA33F34", Offset = "0xA33F34", VA = "0xA33F34")]
		protected void AddBoundaryConstraints()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xA34B8C", Offset = "0xA34B8C", VA = "0xA34B8C", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xA34D78", Offset = "0xA34D78", VA = "0xA34D78", Slot = "62")]
		public override void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xA34D84", Offset = "0xA34D84", VA = "0xA34D84", Slot = "63")]
		public override bool AddRange(List<TriangulationPoint> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xA34ED4", Offset = "0xA34ED4", VA = "0xA34ED4")]
		public bool AddHole(List<TriangulationPoint> points, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xA342F4", Offset = "0xA342F4", VA = "0xA342F4")]
		public bool AddConstraints(List<TriangulationConstraint> constraints)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xA349D4", Offset = "0xA349D4", VA = "0xA349D4")]
		public bool AddConstraint(TriangulationConstraint tc)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xA36244", Offset = "0xA36244", VA = "0xA36244")]
		public bool TryGetConstraint(uint constraintCode, out TriangulationConstraint tc)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xA362AC", Offset = "0xA362AC", VA = "0xA362AC")]
		public int GetNumConstraints()
		{
			return default(int);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xA362FC", Offset = "0xA362FC", VA = "0xA362FC")]
		public Dictionary<uint, TriangulationConstraint>.Enumerator GetConstraintEnumerator()
		{
			return default(Dictionary<uint, TriangulationConstraint>.Enumerator);
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xA36374", Offset = "0xA36374", VA = "0xA36374")]
		public int GetNumHoles()
		{
			return default(int);
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xA364D0", Offset = "0xA364D0", VA = "0xA364D0")]
		public Contour GetHole(int idx)
		{
			return null;
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xA36554", Offset = "0xA36554", VA = "0xA36554")]
		public int GetActualHoles(out List<Contour> holes)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xA3671C", Offset = "0xA3671C", VA = "0xA3671C")]
		protected void InitializeHoles()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xA36880", Offset = "0xA36880", VA = "0xA36880", Slot = "65")]
		public override bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xA3689C", Offset = "0xA3689C", VA = "0xA3689C", Slot = "66")]
		public override void Prepare(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xA36B60", Offset = "0xA36B60", VA = "0xA36B60", Slot = "64")]
		public override void AddTriangle(DelaunayTriangle t)
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class PointSet : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<uint, TriangulationPoint> mPointMap;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected double mPrecision;

		[Token(Token = "0x170004EE")]
		public IList<TriangulationPoint> Points
		{
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xA36C0C", Offset = "0xA36C0C", VA = "0xA36C0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xA36C10", Offset = "0xA36C10", VA = "0xA36C10")]
			private set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0xA36C14", Offset = "0xA36C14", VA = "0xA36C14", Slot = "27")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xA36C1C", Offset = "0xA36C1C", VA = "0xA36C1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004F0")]
		public string FileName
		{
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xA36C24", Offset = "0xA36C24", VA = "0xA36C24", Slot = "29")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xA36C2C", Offset = "0xA36C2C", VA = "0xA36C2C", Slot = "30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F1")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xA36C34", Offset = "0xA36C34", VA = "0xA36C34", Slot = "31")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xA36C3C", Offset = "0xA36C3C", VA = "0xA36C3C", Slot = "32")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F2")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xA36C48", Offset = "0xA36C48", VA = "0xA36C48", Slot = "33")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xA36C50", Offset = "0xA36C50", VA = "0xA36C50", Slot = "34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F3")]
		public float DisplayRotate
		{
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xA36C5C", Offset = "0xA36C5C", VA = "0xA36C5C", Slot = "35")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xA36C64", Offset = "0xA36C64", VA = "0xA36C64", Slot = "36")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F4")]
		public double Precision
		{
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xA36C6C", Offset = "0xA36C6C", VA = "0xA36C6C", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xA36C74", Offset = "0xA36C74", VA = "0xA36C74", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170004F5")]
		public double MinX
		{
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xA348AC", Offset = "0xA348AC", VA = "0xA348AC", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004F6")]
		public double MaxX
		{
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xA3499C", Offset = "0xA3499C", VA = "0xA3499C", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004F7")]
		public double MinY
		{
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xA348C8", Offset = "0xA348C8", VA = "0xA348C8", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004F8")]
		public double MaxY
		{
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xA349B8", Offset = "0xA349B8", VA = "0xA349B8", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004F9")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xA36C7C", Offset = "0xA36C7C", VA = "0xA36C7C", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		public virtual TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0xA36C84", Offset = "0xA36C84", VA = "0xA36C84", Slot = "61")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x170004FB")]
		public new TriangulationPoint this[int index]
		{
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xA36C8C", Offset = "0xA36C8C", VA = "0xA36C8C", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xA36D34", Offset = "0xA36D34", VA = "0xA36D34", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xA33CEC", Offset = "0xA33CEC", VA = "0xA33CEC")]
		public PointSet(List<TriangulationPoint> bounds)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xA36D9C", Offset = "0xA36D9C", VA = "0xA36D9C", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Virtence.VText.Tesselation.Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xA36E18", Offset = "0xA36E18", VA = "0xA36E18", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xA36E70", Offset = "0xA36E70", VA = "0xA36E70", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xA36EF8", Offset = "0xA36EF8", VA = "0xA36EF8", Slot = "62")]
		public virtual void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xA36F04", Offset = "0xA36F04", VA = "0xA36F04", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool constrainToBounds)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xA34C14", Offset = "0xA34C14", VA = "0xA34C14")]
		protected bool Add(TriangulationPoint p, int idx, bool constrainToBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xA36F9C", Offset = "0xA36F9C", VA = "0xA36F9C", Slot = "22")]
		public override void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xA3712C", Offset = "0xA3712C", VA = "0xA3712C", Slot = "63")]
		public virtual bool AddRange(List<TriangulationPoint> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xA348E4", Offset = "0xA348E4", VA = "0xA348E4")]
		public bool TryGetPoint(double x, double y, out TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xA37350", Offset = "0xA37350", VA = "0xA37350", Slot = "52")]
		public void Insert(int idx, TriangulationPoint item)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xA373B8", Offset = "0xA373B8", VA = "0xA373B8", Slot = "24")]
		public override bool Remove(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xA37410", Offset = "0xA37410", VA = "0xA37410", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xA37468", Offset = "0xA37468", VA = "0xA37468", Slot = "25")]
		public override void RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xA374E0", Offset = "0xA374E0", VA = "0xA374E0", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xA37538", Offset = "0xA37538", VA = "0xA37538", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xA376F8", Offset = "0xA376F8", VA = "0xA376F8")]
		protected bool ConstrainPointToBounds(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xA35690", Offset = "0xA35690", VA = "0xA35690")]
		protected bool ConstrainPointToBounds(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xA378B8", Offset = "0xA378B8", VA = "0xA378B8", Slot = "64")]
		public virtual void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xA37964", Offset = "0xA37964", VA = "0xA37964", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xA37C48", Offset = "0xA37C48", VA = "0xA37C48", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xA36894", Offset = "0xA36894", VA = "0xA36894", Slot = "65")]
		public virtual bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xA369B0", Offset = "0xA369B0", VA = "0xA369B0", Slot = "66")]
		public virtual void Prepare(TriangulationContext tcx)
		{
		}
	}
	[Token(Token = "0x2000443")]
	public enum TriangulationAlgorithm
	{
		[Token(Token = "0x4001B81")]
		DTSweep
	}
	[Token(Token = "0x2000444")]
	public class Edge
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Point2D mP;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Point2D mQ;

		[Token(Token = "0x170004FC")]
		public Point2D EdgeStart
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xA37CEC", Offset = "0xA37CEC", VA = "0xA37CEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xA37CF4", Offset = "0xA37CF4", VA = "0xA37CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170004FD")]
		public Point2D EdgeEnd
		{
			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xA37CFC", Offset = "0xA37CFC", VA = "0xA37CFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xA37D04", Offset = "0xA37D04", VA = "0xA37D04")]
			set
			{
			}
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xA37D0C", Offset = "0xA37D0C", VA = "0xA37D0C")]
		public Edge()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xA33A98", Offset = "0xA33A98", VA = "0xA33A98")]
		public Edge(Point2D edgeStart, Point2D edgeEnd)
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class TriangulationConstraint : Edge
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint mContraintCode;

		[Token(Token = "0x170004FE")]
		public TriangulationPoint P
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xA360AC", Offset = "0xA360AC", VA = "0xA360AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xA361DC", Offset = "0xA361DC", VA = "0xA361DC")]
			set
			{
			}
		}

		[Token(Token = "0x170004FF")]
		public TriangulationPoint Q
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xA36128", Offset = "0xA36128", VA = "0xA36128")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xA36210", Offset = "0xA36210", VA = "0xA36210")]
			set
			{
			}
		}

		[Token(Token = "0x17000500")]
		public uint ConstraintCode
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xA37D40", Offset = "0xA37D40", VA = "0xA37D40")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xA34778", Offset = "0xA34778", VA = "0xA34778")]
		public TriangulationConstraint(TriangulationPoint p1, TriangulationPoint p2)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xA37D48", Offset = "0xA37D48", VA = "0xA37D48", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xA361A4", Offset = "0xA361A4", VA = "0xA361A4")]
		public void CalculateContraintCode()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xA35FB4", Offset = "0xA35FB4", VA = "0xA35FB4")]
		public static uint CalculateContraintCode(TriangulationPoint p, TriangulationPoint q)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000446")]
	public abstract class TriangulationContext
	{
		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<DelaunayTriangle> Triangles;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<TriangulationPoint> Points;

		[Token(Token = "0x17000501")]
		public TriangulationDebugContext DebugContext
		{
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xA38074", Offset = "0xA38074", VA = "0xA38074")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xA3807C", Offset = "0xA3807C", VA = "0xA3807C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000502")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xA38084", Offset = "0xA38084", VA = "0xA38084")]
			[CompilerGenerated]
			get
			{
				return default(TriangulationMode);
			}
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xA3808C", Offset = "0xA3808C", VA = "0xA3808C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000503")]
		public ITriangulatable Triangulatable
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xA38094", Offset = "0xA38094", VA = "0xA38094")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xA3809C", Offset = "0xA3809C", VA = "0xA3809C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000504")]
		public int StepCount
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xA380A4", Offset = "0xA380A4", VA = "0xA380A4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xA380AC", Offset = "0xA380AC", VA = "0xA380AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000505")]
		public abstract TriangulationAlgorithm Algorithm
		{
			[Token(Token = "0x6001E47")]
			get;
		}

		[Token(Token = "0x17000506")]
		public virtual bool IsDebugEnabled
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xA38260", Offset = "0xA38260", VA = "0xA38260", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xA38268", Offset = "0xA38268", VA = "0xA38268", Slot = "9")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000507")]
		public DTSweepDebugContext DTDebugContext
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xA38274", Offset = "0xA38274", VA = "0xA38274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xA380B4", Offset = "0xA380B4", VA = "0xA380B4")]
		public void Done()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xA380C4", Offset = "0xA380C4", VA = "0xA380C4", Slot = "5")]
		public virtual void PrepareTriangulation(ITriangulatable t)
		{
		}

		[Token(Token = "0x6001E49")]
		public abstract TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b);

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xA381DC", Offset = "0xA381DC", VA = "0xA381DC")]
		public void Update(string message)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xA381E0", Offset = "0xA381E0", VA = "0xA381E0", Slot = "7")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xA382F0", Offset = "0xA382F0", VA = "0xA382F0")]
		protected TriangulationContext()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public abstract class TriangulationDebugContext
	{
		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected TriangulationContext _tcx;

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xA383CC", Offset = "0xA383CC", VA = "0xA383CC")]
		public TriangulationDebugContext(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6001E51")]
		public abstract void Clear();
	}
	[Token(Token = "0x2000448")]
	public enum TriangulationMode
	{
		[Token(Token = "0x4001B8E")]
		Unconstrained,
		[Token(Token = "0x4001B8F")]
		Constrained,
		[Token(Token = "0x4001B90")]
		Polygon
	}
	[Token(Token = "0x2000449")]
	public class TriangulationPoint : Point2D
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly double kVertexCodeDefaultPrecision;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected uint mVertexCode;

		[Token(Token = "0x17000508")]
		public override double X
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xA383FC", Offset = "0xA383FC", VA = "0xA383FC", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xA38404", Offset = "0xA38404", VA = "0xA38404", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public override double Y
		{
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xA38490", Offset = "0xA38490", VA = "0xA38490", Slot = "7")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xA38498", Offset = "0xA38498", VA = "0xA38498", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700050A")]
		public uint VertexCode
		{
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xA38524", Offset = "0xA38524", VA = "0xA38524")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700050B")]
		public List<DTSweepConstraint> Edges
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xA3852C", Offset = "0xA3852C", VA = "0xA3852C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xA38534", Offset = "0xA38534", VA = "0xA38534")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700050C")]
		public bool HasEdges
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xA3853C", Offset = "0xA3853C", VA = "0xA3853C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xA2C8A4", Offset = "0xA2C8A4", VA = "0xA2C8A4")]
		public TriangulationPoint(double x, double y)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xA3854C", Offset = "0xA3854C", VA = "0xA3854C")]
		public TriangulationPoint(double x, double y, double precision)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xA385DC", Offset = "0xA385DC", VA = "0xA385DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xA388A4", Offset = "0xA388A4", VA = "0xA388A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xA388AC", Offset = "0xA388AC", VA = "0xA388AC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xA389DC", Offset = "0xA389DC", VA = "0xA389DC", Slot = "9")]
		public override void Set(double x, double y)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xA3727C", Offset = "0xA3727C", VA = "0xA3727C")]
		public static uint CreateVertexCode(double x, double y, double precision)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xA38AF0", Offset = "0xA38AF0", VA = "0xA38AF0")]
		public void AddEdge(DTSweepConstraint e)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xA38BF8", Offset = "0xA38BF8", VA = "0xA38BF8")]
		public bool HasEdge(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xA38C14", Offset = "0xA38C14", VA = "0xA38C14")]
		public bool GetEdge(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xA38EA8", Offset = "0xA38EA8", VA = "0xA38EA8")]
		public static Point2D ToPoint2D(TriangulationPoint p)
		{
			return null;
		}
	}
	[Token(Token = "0x200044A")]
	public class TriangulationPointEnumerator : IEnumerator<TriangulationPoint>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IList<Point2D> mPoints;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int position;

		[Token(Token = "0x1700050D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xA38FC0", Offset = "0xA38FC0", VA = "0xA38FC0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050E")]
		public TriangulationPoint Current
		{
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xA38FC4", Offset = "0xA38FC4", VA = "0xA38FC4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xA2AEE4", Offset = "0xA2AEE4", VA = "0xA2AEE4")]
		public TriangulationPointEnumerator(IList<Point2D> points)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xA38EF8", Offset = "0xA38EF8", VA = "0xA38EF8", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xA38FB0", Offset = "0xA38FB0", VA = "0xA38FB0", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xA38FBC", Offset = "0xA38FBC", VA = "0xA38FBC", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class TriangulationPointList : Point2DList
	{
		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xA39140", Offset = "0xA39140", VA = "0xA39140")]
		public TriangulationPointList()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class PointGenerator
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RNG;

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xA39194", Offset = "0xA39194", VA = "0xA39194")]
		public static List<TriangulationPoint> UniformDistribution(int n, double scale)
		{
			return null;
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xA39350", Offset = "0xA39350", VA = "0xA39350")]
		public static List<TriangulationPoint> UniformGrid(int n, double scale)
		{
			return null;
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xA394DC", Offset = "0xA394DC", VA = "0xA394DC")]
		public PointGenerator()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class PolygonGenerator
	{
		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RNG;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static double PI_2;

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xA39568", Offset = "0xA39568", VA = "0xA39568")]
		public static Polygon RandomCircleSweep(double scale, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xA39854", Offset = "0xA39854", VA = "0xA39854")]
		public static Polygon RandomCircleSweep2(double scale, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xA39AAC", Offset = "0xA39AAC", VA = "0xA39AAC")]
		public PolygonGenerator()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class TriangulationUtil
	{
		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xA39B58", Offset = "0xA39B58", VA = "0xA39B58")]
		public static bool SmartIncircle(Point2D pa, Point2D pb, Point2D pc, Point2D pd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xA39CD8", Offset = "0xA39CD8", VA = "0xA39CD8")]
		public static bool InScanArea(Point2D pa, Point2D pb, Point2D pc, Point2D pd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xA2E7A0", Offset = "0xA2E7A0", VA = "0xA2E7A0")]
		public static Orientation Orient2d(Point2D pa, Point2D pb, Point2D pc)
		{
			return default(Orientation);
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xA39E08", Offset = "0xA39E08", VA = "0xA39E08")]
		public static bool PointInBoundingBox(double xmin, double xmax, double ymin, double ymax, Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xA39EA4", Offset = "0xA39EA4", VA = "0xA39EA4")]
		public static bool PointOnLineSegment2D(Point2D lineStart, Point2D lineEnd, Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xA39F7C", Offset = "0xA39F7C", VA = "0xA39F7C")]
		public static bool PointOnLineSegment2D(double x1, double y1, double x2, double y2, double x, double y, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xA3A13C", Offset = "0xA3A13C", VA = "0xA3A13C")]
		public static bool RectsIntersect(Rect2D r1, Rect2D r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xA31E84", Offset = "0xA31E84", VA = "0xA31E84")]
		public static bool LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, bool firstIsSegment, bool secondIsSegment, bool coincidentEndPointCollisions, ref Point2D pIntersectionPt, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xA2D91C", Offset = "0xA2D91C", VA = "0xA2D91C")]
		public static bool LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, ref Point2D pIntersectionPt, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xA3A19C", Offset = "0xA3A19C", VA = "0xA3A19C")]
		public static double LI2DDotProduct(Point2D v0, Point2D v1)
		{
			return default(double);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xA2E930", Offset = "0xA2E930", VA = "0xA2E930")]
		public static bool RaysIntersect2D(Point2D ptRayOrigin0, Point2D ptRayVector0, Point2D ptRayOrigin1, Point2D ptRayVector1, ref Point2D ptIntersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xA3A228", Offset = "0xA3A228", VA = "0xA3A228")]
		public TriangulationUtil()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public struct FixedArray3<T> : IEnumerable<T>, IEnumerable where T : class
	{
		[Token(Token = "0x2000450")]
		[CompilerGenerated]
		private sealed class <Enumerate>d__10 : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FixedArray3<T> <>4__this;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FixedArray3<T> <>3__<>4__this;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x17000510")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001E8D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000511")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E8A")]
			[DebuggerHidden]
			public <Enumerate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E8E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E90")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E91")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _0;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _1;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _2;

		[Token(Token = "0x1700050F")]
		public T this[int index]
		{
			[Token(Token = "0x6001E81")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E82")]
			set
			{
			}
		}

		[Token(Token = "0x6001E83")]
		public bool Contains(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E84")]
		public int IndexOf(T value)
		{
			return default(int);
		}

		[Token(Token = "0x6001E85")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001E86")]
		public void Clear(T value)
		{
		}

		[Token(Token = "0x6001E87")]
		[IteratorStateMachine(typeof(FixedArray3<>.<Enumerate>d__10))]
		private IEnumerable<T> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x6001E88")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E89")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000451")]
	public struct FixedBitArray3 : IEnumerable<bool>, IEnumerable
	{
		[Token(Token = "0x2000452")]
		[CompilerGenerated]
		private sealed class <Enumerate>d__10 : IEnumerable<bool>, IEnumerable, IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool <>2__current;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public FixedBitArray3 <>4__this;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
			public FixedBitArray3 <>3__<>4__this;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <i>5__2;

			[Token(Token = "0x17000513")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x6001E9E")]
				[Address(RVA = "0xA3A5D4", Offset = "0xA3A5D4", VA = "0xA3A5D4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000514")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA0")]
				[Address(RVA = "0xA3A61C", Offset = "0xA3A61C", VA = "0xA3A61C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xA3A480", Offset = "0xA3A480", VA = "0xA3A480")]
			[DebuggerHidden]
			public <Enumerate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xA3A560", Offset = "0xA3A560", VA = "0xA3A560", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xA3A564", Offset = "0xA3A564", VA = "0xA3A564", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xA3A5DC", Offset = "0xA3A5DC", VA = "0xA3A5DC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xA3A678", Offset = "0xA3A678", VA = "0xA3A678", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<bool> System.Collections.Generic.IEnumerable<System.Boolean>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xA3A738", Offset = "0xA3A738", VA = "0xA3A738", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool _0;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool _1;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool _2;

		[Token(Token = "0x17000512")]
		public bool this[int index]
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xA3A230", Offset = "0xA3A230", VA = "0xA3A230")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0xA3A29C", Offset = "0xA3A29C", VA = "0xA3A29C")]
			set
			{
			}
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xA3A30C", Offset = "0xA3A30C", VA = "0xA3A30C")]
		public bool Contains(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xA3A358", Offset = "0xA3A358", VA = "0xA3A358")]
		public int IndexOf(bool value)
		{
			return default(int);
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xA3A3A0", Offset = "0xA3A3A0", VA = "0xA3A3A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xA3A3AC", Offset = "0xA3A3AC", VA = "0xA3A3AC")]
		public void Clear(bool value)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xA3A3FC", Offset = "0xA3A3FC", VA = "0xA3A3FC")]
		[IteratorStateMachine(typeof(<Enumerate>d__10))]
		private IEnumerable<bool> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xA3A4B4", Offset = "0xA3A4B4", VA = "0xA3A4B4", Slot = "4")]
		public IEnumerator<bool> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xA3A55C", Offset = "0xA3A55C", VA = "0xA3A55C", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000453")]
	public class MathUtil
	{
		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static double EPSILON;

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xA3A73C", Offset = "0xA3A73C", VA = "0xA3A73C")]
		public static bool AreValuesEqual(double val1, double val2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xA3A11C", Offset = "0xA3A11C", VA = "0xA3A11C")]
		public static bool AreValuesEqual(double val1, double val2, double tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xA3A0E4", Offset = "0xA3A0E4", VA = "0xA3A0E4")]
		public static bool IsValueBetween(double val, double min, double max, double tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xA38A74", Offset = "0xA38A74", VA = "0xA38A74")]
		public static double RoundWithPrecision(double f, double precision)
		{
			return default(double);
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xA3A7C0", Offset = "0xA3A7C0", VA = "0xA3A7C0")]
		public static double Clamp(double a, double low, double high)
		{
			return default(double);
		}

		[Token(Token = "0x6001EA8")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xA38010", Offset = "0xA38010", VA = "0xA38010")]
		public static uint Jenkins32Hash(byte[] data, uint nInitialValue)
		{
			return default(uint);
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xA3A844", Offset = "0xA3A844", VA = "0xA3A844")]
		public MathUtil()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class Point2D : IComparable<Point2D>
	{
		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected double mX;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double mY;

		[Token(Token = "0x17000515")]
		public virtual double X
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xA3A8A4", Offset = "0xA3A8A4", VA = "0xA3A8A4", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xA3A8AC", Offset = "0xA3A8AC", VA = "0xA3A8AC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000516")]
		public virtual double Y
		{
			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xA3A8B4", Offset = "0xA3A8B4", VA = "0xA3A8B4", Slot = "7")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xA3A8BC", Offset = "0xA3A8BC", VA = "0xA3A8BC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000517")]
		public float Xf
		{
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xA3A8C4", Offset = "0xA3A8C4", VA = "0xA3A8C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000518")]
		public float Yf
		{
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xA3A8E0", Offset = "0xA3A8E0", VA = "0xA3A8E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xA31E68", Offset = "0xA31E68", VA = "0xA31E68")]
		public Point2D()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xA2D2AC", Offset = "0xA2D2AC", VA = "0xA2D2AC")]
		public Point2D(double x, double y)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xA3A8FC", Offset = "0xA3A8FC", VA = "0xA3A8FC")]
		public Point2D(Point2D p)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xA38664", Offset = "0xA38664", VA = "0xA38664", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xA3A950", Offset = "0xA3A950", VA = "0xA3A950", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xA38944", Offset = "0xA38944", VA = "0xA38944", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xA32F28", Offset = "0xA32F28", VA = "0xA32F28")]
		public bool Equals(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xA2FE94", Offset = "0xA2FE94", VA = "0xA2FE94")]
		public bool Equals(Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xA3A958", Offset = "0xA3A958", VA = "0xA3A958", Slot = "4")]
		public int CompareTo(Point2D other)
		{
			return default(int);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xA3AA44", Offset = "0xA3AA44", VA = "0xA3AA44", Slot = "9")]
		public virtual void Set(double x, double y)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xA3AA7C", Offset = "0xA3AA7C", VA = "0xA3AA7C", Slot = "10")]
		public virtual void Set(Point2D p)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xA3AADC", Offset = "0xA3AADC", VA = "0xA3AADC")]
		public void Add(Point2D p)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xA3AB74", Offset = "0xA3AB74", VA = "0xA3AB74")]
		public void Add(double scalar)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xA2D2D8", Offset = "0xA2D2D8", VA = "0xA2D2D8")]
		public void Subtract(Point2D p)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xA3ABD0", Offset = "0xA3ABD0", VA = "0xA3ABD0")]
		public void Subtract(double scalar)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xA3AC2C", Offset = "0xA3AC2C", VA = "0xA3AC2C")]
		public void Multiply(Point2D p)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xA3ACC4", Offset = "0xA3ACC4", VA = "0xA3ACC4")]
		public void Multiply(double scalar)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xA3AD20", Offset = "0xA3AD20", VA = "0xA3AD20")]
		public void Divide(Point2D p)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xA3ADB8", Offset = "0xA3ADB8", VA = "0xA3ADB8")]
		public void Divide(double scalar)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xA3AE14", Offset = "0xA3AE14", VA = "0xA3AE14")]
		public void Negate()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xA331C4", Offset = "0xA331C4", VA = "0xA331C4")]
		public double Magnitude()
		{
			return default(double);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xA2D370", Offset = "0xA2D370", VA = "0xA2D370")]
		public double MagnitudeSquared()
		{
			return default(double);
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xA3AE64", Offset = "0xA3AE64", VA = "0xA3AE64")]
		public double MagnitudeReciprocal()
		{
			return default(double);
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xA33284", Offset = "0xA33284", VA = "0xA33284")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xA3AE7C", Offset = "0xA3AE7C", VA = "0xA3AE7C")]
		public double Dot(Point2D p)
		{
			return default(double);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xA3AF08", Offset = "0xA3AF08", VA = "0xA3AF08")]
		public double Cross(Point2D p)
		{
			return default(double);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xA3AF94", Offset = "0xA3AF94", VA = "0xA3AF94")]
		public void Clamp(Point2D low, Point2D high)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xA3B0E0", Offset = "0xA3B0E0", VA = "0xA3B0E0")]
		public void Abs()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xA3B180", Offset = "0xA3B180", VA = "0xA3B180")]
		public void Reciprocal()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xA3B218", Offset = "0xA3B218", VA = "0xA3B218")]
		public void Translate(Point2D vector)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xA3B21C", Offset = "0xA3B21C", VA = "0xA3B21C")]
		public void Translate(double x, double y)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xA3B27C", Offset = "0xA3B27C", VA = "0xA3B27C")]
		public void Scale(Point2D vector)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xA3B280", Offset = "0xA3B280", VA = "0xA3B280")]
		public void Scale(double scalar)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xA3B284", Offset = "0xA3B284", VA = "0xA3B284")]
		public void Scale(double x, double y)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xA3B2E4", Offset = "0xA3B2E4", VA = "0xA3B2E4")]
		public void Rotate(double radians)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xA3B3C0", Offset = "0xA3B3C0", VA = "0xA3B3C0")]
		public void RotateDegrees(double degrees)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xA332A4", Offset = "0xA332A4", VA = "0xA332A4")]
		public static double Dot(Point2D lhs, Point2D rhs)
		{
			return default(double);
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xA33330", Offset = "0xA33330", VA = "0xA33330")]
		public static double Cross(Point2D lhs, Point2D rhs)
		{
			return default(double);
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xA3B3DC", Offset = "0xA3B3DC", VA = "0xA3B3DC")]
		public static Point2D Clamp(Point2D a, Point2D low, Point2D high)
		{
			return null;
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xA3B45C", Offset = "0xA3B45C", VA = "0xA3B45C")]
		public static Point2D Min(Point2D a, Point2D b)
		{
			return null;
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xA3B58C", Offset = "0xA3B58C", VA = "0xA3B58C")]
		public static Point2D Max(Point2D a, Point2D b)
		{
			return null;
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xA3B6BC", Offset = "0xA3B6BC", VA = "0xA3B6BC")]
		public static Point2D Abs(Point2D a)
		{
			return null;
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xA3B780", Offset = "0xA3B780", VA = "0xA3B780")]
		public static Point2D Reciprocal(Point2D a)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xA3B824", Offset = "0xA3B824", VA = "0xA3B824")]
		public static Point2D Perpendicular(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xA3B8D0", Offset = "0xA3B8D0", VA = "0xA3B8D0")]
		public static Point2D Perpendicular(double scalar, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xA3B97C", Offset = "0xA3B97C", VA = "0xA3B97C")]
		public static Point2D operator +(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xA3B9F4", Offset = "0xA3B9F4", VA = "0xA3B9F4")]
		public static Point2D operator +(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xA3239C", Offset = "0xA3239C", VA = "0xA3239C")]
		public static Point2D operator -(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xA3BA6C", Offset = "0xA3BA6C", VA = "0xA3BA6C")]
		public static Point2D operator -(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xA3BAE4", Offset = "0xA3BAE4", VA = "0xA3BAE4")]
		public static Point2D operator *(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xA3BB5C", Offset = "0xA3BB5C", VA = "0xA3BB5C")]
		public static Point2D operator *(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xA3BBD4", Offset = "0xA3BBD4", VA = "0xA3BBD4")]
		public static Point2D operator *(double scalar, Point2D lhs)
		{
			return null;
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xA3BC4C", Offset = "0xA3BC4C", VA = "0xA3BC4C")]
		public static Point2D operator /(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xA3BCC4", Offset = "0xA3BCC4", VA = "0xA3BCC4")]
		public static Point2D operator /(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xA3BD3C", Offset = "0xA3BD3C", VA = "0xA3BD3C")]
		public static Point2D operator -(Point2D p)
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xA3BDA4", Offset = "0xA3BDA4", VA = "0xA3BDA4")]
		public static bool operator <(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xA3BDC4", Offset = "0xA3BDC4", VA = "0xA3BDC4")]
		public static bool operator >(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xA3BDE4", Offset = "0xA3BDE4", VA = "0xA3BDE4")]
		public static bool operator <=(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xA3BE04", Offset = "0xA3BE04", VA = "0xA3BE04")]
		public static bool operator >=(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000455")]
	public class Point2DEnumerator : IEnumerator<Point2D>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IList<Point2D> mPoints;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int position;

		[Token(Token = "0x17000519")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xA3BF24", Offset = "0xA3BF24", VA = "0xA3BF24", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051A")]
		public Point2D Current
		{
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xA3BF28", Offset = "0xA3BF28", VA = "0xA3BF28", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xA3BE24", Offset = "0xA3BE24", VA = "0xA3BE24")]
		public Point2DEnumerator(IList<Point2D> points)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xA3BE5C", Offset = "0xA3BE5C", VA = "0xA3BE5C", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xA3BF14", Offset = "0xA3BF14", VA = "0xA3BF14", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xA3BF20", Offset = "0xA3BF20", VA = "0xA3BF20", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class Point2DList : IEnumerable<Point2D>, IEnumerable, IList<Point2D>, ICollection<Point2D>
	{
		[Token(Token = "0x2000457")]
		public enum WindingOrderType
		{
			[Token(Token = "0x4001BB8")]
			CW = 0,
			[Token(Token = "0x4001BB9")]
			CCW = 1,
			[Token(Token = "0x4001BBA")]
			Unknown = 2,
			[Token(Token = "0x4001BBB")]
			Default = 1
		}

		[Token(Token = "0x2000458")]
		[Flags]
		public enum PolygonError : uint
		{
			[Token(Token = "0x4001BBD")]
			None = 0u,
			[Token(Token = "0x4001BBE")]
			NotEnoughVertices = 1u,
			[Token(Token = "0x4001BBF")]
			NotConvex = 2u,
			[Token(Token = "0x4001BC0")]
			NotSimple = 4u,
			[Token(Token = "0x4001BC1")]
			AreaTooSmall = 8u,
			[Token(Token = "0x4001BC2")]
			SidesTooCloseToParallel = 0x10u,
			[Token(Token = "0x4001BC3")]
			TooThin = 0x20u,
			[Token(Token = "0x4001BC4")]
			Degenerate = 0x40u,
			[Token(Token = "0x4001BC5")]
			Unknown = 0x40000000u
		}

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int kMaxPolygonVertices;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly double kLinearSlop;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly double kAngularSlop;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Point2D> mPoints;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Rect2D mBoundingBox;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected WindingOrderType mWindingOrder;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected double mEpsilon;

		[Token(Token = "0x1700051B")]
		public Rect2D BoundingBox
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xA3C064", Offset = "0xA3C064", VA = "0xA3C064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051C")]
		public WindingOrderType WindingOrder
		{
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xA3C06C", Offset = "0xA3C06C", VA = "0xA3C06C")]
			get
			{
				return default(WindingOrderType);
			}
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xA336C4", Offset = "0xA336C4", VA = "0xA336C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700051D")]
		public double Epsilon
		{
			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xA3C074", Offset = "0xA3C074", VA = "0xA3C074")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700051E")]
		public Point2D this[int index]
		{
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xA2FD84", Offset = "0xA2FD84", VA = "0xA2FD84", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xA3C07C", Offset = "0xA3C07C", VA = "0xA3C07C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700051F")]
		public int Count
		{
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xA2B298", Offset = "0xA2B298", VA = "0xA2B298", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000520")]
		public virtual bool IsReadOnly
		{
			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xA3C0E4", Offset = "0xA3C0E4", VA = "0xA3C0E4", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xA2AA20", Offset = "0xA2AA20", VA = "0xA2AA20")]
		public Point2DList()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xA3C110", Offset = "0xA3C110", VA = "0xA3C110")]
		public Point2DList(int capacity)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xA32B74", Offset = "0xA32B74", VA = "0xA32B74")]
		public Point2DList(IList<Point2D> l)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xA334B4", Offset = "0xA334B4", VA = "0xA334B4")]
		public Point2DList(Point2DList l)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xA3C278", Offset = "0xA3C278", VA = "0xA3C278", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xA3C374", Offset = "0xA3C374", VA = "0xA3C374", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xA3C404", Offset = "0xA3C404", VA = "0xA3C404", Slot = "4")]
		private IEnumerator<Point2D> System.Collections.Generic.IEnumerable<Virtence.VText.Tesselation.Poly2Tri.Point2D>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xA2FDDC", Offset = "0xA2FDDC", VA = "0xA2FDDC", Slot = "14")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xA2FF9C", Offset = "0xA2FF9C", VA = "0xA2FF9C", Slot = "8")]
		public int IndexOf(Point2D p)
		{
			return default(int);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xA3C480", Offset = "0xA3C480", VA = "0xA3C480", Slot = "19")]
		public virtual void Add(Point2D p)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xA2B164", Offset = "0xA2B164", VA = "0xA2B164", Slot = "20")]
		protected virtual void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xA3C498", Offset = "0xA3C498", VA = "0xA3C498", Slot = "21")]
		public virtual void AddRange(Point2DList l)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xA3C54C", Offset = "0xA3C54C", VA = "0xA3C54C", Slot = "22")]
		public virtual void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xA3C89C", Offset = "0xA3C89C", VA = "0xA3C89C", Slot = "23")]
		public virtual void Insert(int idx, Point2D item)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xA2B69C", Offset = "0xA2B69C", VA = "0xA2B69C", Slot = "24")]
		public virtual bool Remove(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xA3CA1C", Offset = "0xA3CA1C", VA = "0xA3CA1C", Slot = "25")]
		public virtual void RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xA3CAA0", Offset = "0xA3CAA0", VA = "0xA3CAA0", Slot = "26")]
		public virtual void RemoveRange(int idxStart, int count)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xA30758", Offset = "0xA30758", VA = "0xA30758", Slot = "15")]
		public bool Contains(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xA3CB38", Offset = "0xA3CB38", VA = "0xA3CB38", Slot = "16")]
		public void CopyTo(Point2D[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xA3C8BC", Offset = "0xA3C8BC", VA = "0xA3C8BC")]
		public void CalculateBounds()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xA2B30C", Offset = "0xA2B30C", VA = "0xA2B30C")]
		public double CalculateEpsilon()
		{
			return default(double);
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xA2B2E0", Offset = "0xA2B2E0", VA = "0xA2B2E0")]
		public WindingOrderType CalculateWindingOrder()
		{
			return default(WindingOrderType);
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xA2FFF4", Offset = "0xA2FFF4", VA = "0xA2FFF4")]
		public int NextIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xA30E74", Offset = "0xA30E74", VA = "0xA30E74")]
		public int PreviousIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xA3CC7C", Offset = "0xA3CC7C", VA = "0xA3CC7C")]
		public double GetSignedArea()
		{
			return default(double);
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xA3CD8C", Offset = "0xA3CD8C", VA = "0xA3CD8C")]
		public double GetArea()
		{
			return default(double);
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xA3CEA8", Offset = "0xA3CEA8", VA = "0xA3CEA8")]
		public Point2D GetCentroid()
		{
			return null;
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xA3D01C", Offset = "0xA3D01C", VA = "0xA3D01C")]
		public void Translate(Point2D vector)
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xA3D080", Offset = "0xA3D080", VA = "0xA3D080")]
		public void Scale(Point2D value)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xA3D0E4", Offset = "0xA3D0E4", VA = "0xA3D0E4")]
		public void Rotate(double radians)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xA3D2E0", Offset = "0xA3D2E0", VA = "0xA3D2E0")]
		public bool IsDegenerate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xA3D458", Offset = "0xA3D458", VA = "0xA3D458")]
		public bool IsConvex()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xA3D630", Offset = "0xA3D630", VA = "0xA3D630")]
		public bool IsSimple()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xA359B8", Offset = "0xA359B8", VA = "0xA359B8")]
		public PolygonError CheckPolygon()
		{
			return default(PolygonError);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xA3D7BC", Offset = "0xA3D7BC", VA = "0xA3D7BC")]
		public static string GetErrorString(PolygonError error)
		{
			return null;
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xA35850", Offset = "0xA35850", VA = "0xA35850")]
		public void RemoveDuplicateNeighborPoints()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xA32D1C", Offset = "0xA32D1C", VA = "0xA32D1C")]
		public void Simplify()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xA35E84", Offset = "0xA35E84", VA = "0xA35E84")]
		public void Simplify(double bias)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xA3DC18", Offset = "0xA3DC18", VA = "0xA3DC18")]
		public void MergeParallelEdges(double tolerance)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xA3E260", Offset = "0xA3E260", VA = "0xA3E260")]
		public void ProjectToAxis(Point2D axis, out double min, out double max)
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class Rect2D
	{
		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double mMinX;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double mMaxX;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double mMinY;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double mMaxY;

		[Token(Token = "0x17000521")]
		public double MinX
		{
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xA3E364", Offset = "0xA3E364", VA = "0xA3E364")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xA3E36C", Offset = "0xA3E36C", VA = "0xA3E36C")]
			set
			{
			}
		}

		[Token(Token = "0x17000522")]
		public double MaxX
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xA3E374", Offset = "0xA3E374", VA = "0xA3E374")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0xA3E37C", Offset = "0xA3E37C", VA = "0xA3E37C")]
			set
			{
			}
		}

		[Token(Token = "0x17000523")]
		public double MinY
		{
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0xA3E384", Offset = "0xA3E384", VA = "0xA3E384")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0xA3E38C", Offset = "0xA3E38C", VA = "0xA3E38C")]
			set
			{
			}
		}

		[Token(Token = "0x17000524")]
		public double MaxY
		{
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0xA3E394", Offset = "0xA3E394", VA = "0xA3E394")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0xA3E39C", Offset = "0xA3E39C", VA = "0xA3E39C")]
			set
			{
			}
		}

		[Token(Token = "0x17000525")]
		public double Left
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xA3E3A4", Offset = "0xA3E3A4", VA = "0xA3E3A4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xA3E3AC", Offset = "0xA3E3AC", VA = "0xA3E3AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000526")]
		public double Right
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0xA3E3B4", Offset = "0xA3E3B4", VA = "0xA3E3B4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xA3E3BC", Offset = "0xA3E3BC", VA = "0xA3E3BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000527")]
		public double Top
		{
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0xA3E3C4", Offset = "0xA3E3C4", VA = "0xA3E3C4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0xA3E3CC", Offset = "0xA3E3CC", VA = "0xA3E3CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public double Bottom
		{
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0xA3E3D4", Offset = "0xA3E3D4", VA = "0xA3E3D4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F33")]
			[Address(RVA = "0xA3E3DC", Offset = "0xA3E3DC", VA = "0xA3E3DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000529")]
		public double Width
		{
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0xA2D910", Offset = "0xA2D910", VA = "0xA2D910")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700052A")]
		public double Height
		{
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0xA3CC70", Offset = "0xA3CC70", VA = "0xA3CC70")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700052B")]
		public bool Empty
		{
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xA3E3E4", Offset = "0xA3E3E4", VA = "0xA3E3E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xA3C0EC", Offset = "0xA3C0EC", VA = "0xA3C0EC")]
		public Rect2D()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xA3E408", Offset = "0xA3E408", VA = "0xA3E408", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xA3E410", Offset = "0xA3E410", VA = "0xA3E410", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xA3E4A4", Offset = "0xA3E4A4", VA = "0xA3E4A4")]
		public bool Equals(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xA3E514", Offset = "0xA3E514", VA = "0xA3E514")]
		public bool Equals(Rect2D r, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xA2B928", Offset = "0xA2B928", VA = "0xA2B928")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xA3E638", Offset = "0xA3E638", VA = "0xA3E638")]
		public void Set(double xmin, double xmax, double ymin, double ymax)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xA3C254", Offset = "0xA3C254", VA = "0xA3C254")]
		public void Set(Rect2D b)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xA3E718", Offset = "0xA3E718", VA = "0xA3E718")]
		public void SetSize(double w, double h)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xA3E734", Offset = "0xA3E734", VA = "0xA3E734")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xA3E770", Offset = "0xA3E770", VA = "0xA3E770")]
		public bool Contains(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xA3E7F8", Offset = "0xA3E7F8", VA = "0xA3E7F8")]
		public bool Contains(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xA3E854", Offset = "0xA3E854", VA = "0xA3E854")]
		public bool ContainsInclusive(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xA3E890", Offset = "0xA3E890", VA = "0xA3E890")]
		public bool ContainsInclusive(double x, double y, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xA3E8DC", Offset = "0xA3E8DC", VA = "0xA3E8DC")]
		public bool ContainsInclusive(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xA3E964", Offset = "0xA3E964", VA = "0xA3E964")]
		public bool ContainsInclusive(Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xA3EA00", Offset = "0xA3EA00", VA = "0xA3EA00")]
		public bool ContainsInclusive(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xA3EA5C", Offset = "0xA3EA5C", VA = "0xA3EA5C")]
		public bool ContainsInclusive(Rect2D r, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xA2D8B4", Offset = "0xA2D8B4", VA = "0xA2D8B4")]
		public bool Intersects(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xA3EAC8", Offset = "0xA3EAC8", VA = "0xA3EAC8")]
		public Point2D GetCenter()
		{
			return null;
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xA3EB58", Offset = "0xA3EB58", VA = "0xA3EB58")]
		public bool IsNormalized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xA3E644", Offset = "0xA3E644", VA = "0xA3E644")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xA2B938", Offset = "0xA2B938", VA = "0xA2B938")]
		public void AddPoint(Point2D p)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xA3EB7C", Offset = "0xA3EB7C", VA = "0xA3EB7C")]
		public void Inflate(double w, double h)
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xA3EBA0", Offset = "0xA3EBA0", VA = "0xA3EBA0")]
		public void Inflate(double left, double top, double right, double bottom)
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xA3EBC4", Offset = "0xA3EBC4", VA = "0xA3EBC4")]
		public void Offset(double w, double h)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xA3EBE0", Offset = "0xA3EBE0", VA = "0xA3EBE0")]
		public void SetPosition(double x, double y)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xA3EC0C", Offset = "0xA3EC0C", VA = "0xA3EC0C")]
		public bool Intersection(Rect2D r1, Rect2D r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xA3ECB0", Offset = "0xA3ECB0", VA = "0xA3ECB0")]
		public void Union(Rect2D r1, Rect2D r2)
		{
		}
	}
}
namespace Virtence.VText.DebugUtilities
{
	[Token(Token = "0x200045A")]
	public class DebugUtilities
	{
		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _sphereRadius;

		[Token(Token = "0x1700052C")]
		public float SphereRadius
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0xA3ED48", Offset = "0xA3ED48", VA = "0xA3ED48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0xA3ED50", Offset = "0xA3ED50", VA = "0xA3ED50")]
			set
			{
			}
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xA3ED58", Offset = "0xA3ED58", VA = "0xA3ED58")]
		public void DrawSphere(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xA3ED5C", Offset = "0xA3ED5C", VA = "0xA3ED5C")]
		public DebugUtilities()
		{
		}
	}
	[Token(Token = "0x200045B")]
	internal class GlyphContourPointsDrawer
	{
		[Token(Token = "0x4001BCB")]
		private const float DEBUG_DURATION = 30f;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _previousVertex;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder _stringBuilder;

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xA3ED6C", Offset = "0xA3ED6C", VA = "0xA3ED6C")]
		public void BeginRead(int contourCount)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xA3EE50", Offset = "0xA3EE50", VA = "0xA3EE50")]
		public void CloseContour()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xA3EFB0", Offset = "0xA3EFB0", VA = "0xA3EFB0")]
		public void Curve3(float x1, float y1, float x2, float y2)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xA3F0D8", Offset = "0xA3F0D8", VA = "0xA3F0D8")]
		public void Curve4(float x1, float y1, float x2, float y2, float x3, float y3)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xA3F200", Offset = "0xA3F200", VA = "0xA3F200")]
		public void EndRead()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xA3F278", Offset = "0xA3F278", VA = "0xA3F278")]
		public void LineTo(float x1, float y1)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xA3F3A0", Offset = "0xA3F3A0", VA = "0xA3F3A0")]
		public void MoveTo(float x0, float y0)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xA3F4C4", Offset = "0xA3F4C4", VA = "0xA3F4C4")]
		public GlyphContourPointsDrawer()
		{
		}
	}
}
namespace Virtence.VText.Extensions
{
	[Token(Token = "0x200045C")]
	public static class ComponentExtensions
	{
		[Token(Token = "0x6001F60")]
		public static T GetCopyOf<T>(this UnityEngine.Component comp, T other) where T : UnityEngine.Component
		{
			return null;
		}
	}
	[Token(Token = "0x200045D")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xA3F4CC", Offset = "0xA3F4CC", VA = "0xA3F4CC")]
		public static UnityEngine.Component AddComponentClone(this GameObject go, UnityEngine.Component toAdd)
		{
			return null;
		}
	}
}
