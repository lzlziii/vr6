using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using AOT;
using AtmosphericHeightFog;
using BzKovSoft.CharacterSlicer;
using BzKovSoft.CharacterSlicerSamples;
using BzKovSoft.ObjectSlicer;
using BzKovSoft.ObjectSlicerSamples;
using GameAnalyticsSDK.Events;
using GameAnalyticsSDK.Setup;
using HighlightPlus;
using Il2CppDummyDll;
using LevelEditor;
using TMPro;
using Tutorial;
using Unity.Mathematics;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Localization;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using VLB;
using VRKeys;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class MusicController : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	[CompilerGenerated]
	private sealed class <PlayMusic>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicController <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000007")]
			[Address(RVA = "0xBC2548", Offset = "0xBC2548", VA = "0xBC2548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000009")]
			[Address(RVA = "0xBC2590", Offset = "0xBC2590", VA = "0xBC2590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000004")]
		[Address(RVA = "0xBC239C", Offset = "0xBC239C", VA = "0xBC239C")]
		[DebuggerHidden]
		public <PlayMusic>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000005")]
		[Address(RVA = "0xBC23CC", Offset = "0xBC23CC", VA = "0xBC23CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0xBC23D0", Offset = "0xBC23D0", VA = "0xBC23D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000008")]
		[Address(RVA = "0xBC2550", Offset = "0xBC2550", VA = "0xBC2550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] music;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource PlayMySound;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xBC22B8", Offset = "0xBC22B8", VA = "0xBC22B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xBC2328", Offset = "0xBC2328", VA = "0xBC2328")]
	[IteratorStateMachine(typeof(<PlayMusic>d__4))]
	private IEnumerator PlayMusic()
	{
		return null;
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xBC23C4", Offset = "0xBC23C4", VA = "0xBC23C4")]
	public MusicController()
	{
	}
}
[Token(Token = "0x2000004")]
public class Dissolve : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	[CompilerGenerated]
	private sealed class <DissolveProcess>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400000A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dissolve <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000010")]
			[Address(RVA = "0xBC2844", Offset = "0xBC2844", VA = "0xBC2844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000012")]
			[Address(RVA = "0xBC288C", Offset = "0xBC288C", VA = "0xBC288C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0xBC26B4", Offset = "0xBC26B4", VA = "0xBC26B4")]
		[DebuggerHidden]
		public <DissolveProcess>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600000E")]
		[Address(RVA = "0xBC26E4", Offset = "0xBC26E4", VA = "0xBC26E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0xBC26E8", Offset = "0xBC26E8", VA = "0xBC26E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0xBC284C", Offset = "0xBC284C", VA = "0xBC284C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject animCheck;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject text;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xBC2598", Offset = "0xBC2598", VA = "0xBC2598")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xBC2640", Offset = "0xBC2640", VA = "0xBC2640")]
	[IteratorStateMachine(typeof(<DissolveProcess>d__3))]
	private IEnumerator DissolveProcess()
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xBC26DC", Offset = "0xBC26DC", VA = "0xBC26DC")]
	public Dissolve()
	{
	}
}
[Token(Token = "0x2000006")]
public class RedPaintReveal : MonoBehaviour
{
	[Token(Token = "0x2000007")]
	[CompilerGenerated]
	private sealed class <AnimProcess>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RedPaintReveal <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000019")]
			[Address(RVA = "0xBC2BF8", Offset = "0xBC2BF8", VA = "0xBC2BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600001B")]
			[Address(RVA = "0xBC2C40", Offset = "0xBC2C40", VA = "0xBC2C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0xBC2A20", Offset = "0xBC2A20", VA = "0xBC2A20")]
		[DebuggerHidden]
		public <AnimProcess>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0xBC2A50", Offset = "0xBC2A50", VA = "0xBC2A50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000018")]
		[Address(RVA = "0xBC2A54", Offset = "0xBC2A54", VA = "0xBC2A54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600001A")]
		[Address(RVA = "0xBC2C00", Offset = "0xBC2C00", VA = "0xBC2C00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject animCheck;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool underFrames;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool inMask;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waitTime;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int siblingIndex;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xBC2894", Offset = "0xBC2894", VA = "0xBC2894")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xBC29AC", Offset = "0xBC29AC", VA = "0xBC29AC")]
	[IteratorStateMachine(typeof(<AnimProcess>d__6))]
	private IEnumerator AnimProcess()
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xBC2A48", Offset = "0xBC2A48", VA = "0xBC2A48")]
	public RedPaintReveal()
	{
	}
}
[Token(Token = "0x2000008")]
public class SpawnUnderFrames : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject myObject;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xBC2C48", Offset = "0xBC2C48", VA = "0xBC2C48")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xBC2C70", Offset = "0xBC2C70", VA = "0xBC2C70")]
	public SpawnUnderFrames()
	{
	}
}
[Token(Token = "0x2000009")]
public class TextGenerator : MonoBehaviour
{
	[Token(Token = "0x200000A")]
	[CompilerGenerated]
	private sealed class <TextCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextGenerator <>4__this;

		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <>7__wrap1;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000024")]
			[Address(RVA = "0xBC3004", Offset = "0xBC3004", VA = "0xBC3004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000026")]
			[Address(RVA = "0xBC304C", Offset = "0xBC304C", VA = "0xBC304C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0xBC2D0C", Offset = "0xBC2D0C", VA = "0xBC2D0C")]
		[DebuggerHidden]
		public <TextCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000022")]
		[Address(RVA = "0xBC2D3C", Offset = "0xBC2D3C", VA = "0xBC2D3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0xBC2D40", Offset = "0xBC2D40", VA = "0xBC2D40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0xBC300C", Offset = "0xBC300C", VA = "0xBC300C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string text;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textGameObject;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fontSize;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color fontColor;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xBC2C78", Offset = "0xBC2C78", VA = "0xBC2C78")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xBC2C98", Offset = "0xBC2C98", VA = "0xBC2C98")]
	[IteratorStateMachine(typeof(<TextCoroutine>d__5))]
	private IEnumerator TextCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xBC2D34", Offset = "0xBC2D34", VA = "0xBC2D34")]
	public TextGenerator()
	{
	}
}
[Token(Token = "0x200000B")]
public class DemoTest : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool InfiniteDecal;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light DirLight;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isVR;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject BloodAttach;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] BloodFX;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 direction;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int effectIdx;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xBC3054", Offset = "0xBC3054", VA = "0xBC3054")]
	private Transform GetNearestObject(Transform hit, Vector3 hitPos)
	{
		return null;
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xBC3234", Offset = "0xBC3234", VA = "0xBC3234")]
	private void Update()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xBC3684", Offset = "0xBC3684", VA = "0xBC3684")]
	public float CalculateAngle(Vector3 from, Vector3 to)
	{
		return default(float);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xBC3734", Offset = "0xBC3734", VA = "0xBC3734")]
	public DemoTest()
	{
	}
}
[Token(Token = "0x200000C")]
public class BFX_BloodSettings : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Height;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float LightIntensityMultiplier;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DecalLiveTimeInfinite;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xBC3744", Offset = "0xBC3744", VA = "0xBC3744")]
	public BFX_BloodSettings()
	{
	}
}
[Token(Token = "0x200000D")]
public class BFX_DecaGizmo : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform t;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xBC3754", Offset = "0xBC3754", VA = "0xBC3754")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xBC3A98", Offset = "0xBC3A98", VA = "0xBC3A98")]
	public BFX_DecaGizmo()
	{
	}
}
[Token(Token = "0x200000E")]
public class BFX_DecalSettings : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	[CompilerGenerated]
	private sealed class <ShowProcess>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BFX_DecalSettings <>4__this;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <sc>5__3;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000039")]
			[Address(RVA = "0xBC4AC4", Offset = "0xBC4AC4", VA = "0xBC4AC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600003B")]
			[Address(RVA = "0xBC4B0C", Offset = "0xBC4B0C", VA = "0xBC4B0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0xBC4270", Offset = "0xBC4270", VA = "0xBC4270")]
		[DebuggerHidden]
		public <ShowProcess>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0xBC46A8", Offset = "0xBC46A8", VA = "0xBC46A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0xBC46AC", Offset = "0xBC46AC", VA = "0xBC46AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600003A")]
		[Address(RVA = "0xBC4ACC", Offset = "0xBC4ACC", VA = "0xBC4ACC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BFX_BloodSettings BloodSettings;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform parent;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeHeightMax;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeHeightMin;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public Vector3 TimeScaleMax;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 TimeScaleMin;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public Vector3 TimeOffsetMax;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 TimeOffsetMin;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space]
	public AnimationCurve TimeByHeight;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 startOffset;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 startScale;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 anchorPos;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timeDelay;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 averageRay;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform t;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform tParent;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BFX_ShaderAnimation shaderCurve;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ScoreFlyAwayWithPlayer scoreFlyAwayWithPlayer;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float groundPoint;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject blood;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xBC3AA0", Offset = "0xBC3AA0", VA = "0xBC3AA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xBC3B7C", Offset = "0xBC3B7C", VA = "0xBC3B7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xBC3E58", Offset = "0xBC3E58", VA = "0xBC3E58")]
	private Vector3 GetAverageRay(Vector3 start, Vector3 forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xBC3FEC", Offset = "0xBC3FEC", VA = "0xBC3FEC")]
	private void EnableDecalAnimation()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xBC4204", Offset = "0xBC4204", VA = "0xBC4204")]
	private void DelayedDestroy()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xBC4190", Offset = "0xBC4190", VA = "0xBC4190")]
	[IteratorStateMachine(typeof(<ShowProcess>d__25))]
	private IEnumerator ShowProcess()
	{
		return null;
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xBC4298", Offset = "0xBC4298", VA = "0xBC4298")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xBC45B8", Offset = "0xBC45B8", VA = "0xBC45B8")]
	public BFX_DecalSettings()
	{
	}
}
[Token(Token = "0x2000010")]
public class BFX_DrawToLayers : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask DrawDecalToLayers;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private DepthTextureMode defaultMode;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture rt;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xBC4B14", Offset = "0xBC4B14", VA = "0xBC4B14")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xBC4E14", Offset = "0xBC4E14", VA = "0xBC4E14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xBC4EA0", Offset = "0xBC4EA0", VA = "0xBC4EA0")]
	public BFX_DrawToLayers()
	{
	}
}
[Token(Token = "0x2000011")]
public class BFX_ManualAnimationUpdate : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BFX_BloodSettings BloodSettings;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve AnimationSpeed;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FramesCount;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeLimit;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float OffsetFrames;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer rend;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xBC4EC8", Offset = "0xBC4EC8", VA = "0xBC4EC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xBC4F6C", Offset = "0xBC4F6C", VA = "0xBC4F6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xBC503C", Offset = "0xBC503C", VA = "0xBC503C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xBC51BC", Offset = "0xBC51BC", VA = "0xBC51BC")]
	public BFX_ManualAnimationUpdate()
	{
	}
}
[Token(Token = "0x2000012")]
public class BFX_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xBC5208", Offset = "0xBC5208", VA = "0xBC5208")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xBC5234", Offset = "0xBC5234", VA = "0xBC5234")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xBC58D0", Offset = "0xBC58D0", VA = "0xBC58D0")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xBC590C", Offset = "0xBC590C", VA = "0xBC590C")]
	public BFX_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000013")]
public class BFX_RenderDepth : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DepthTextureMode defaultMode;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xBC5928", Offset = "0xBC5928", VA = "0xBC5928")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xBC59C4", Offset = "0xBC59C4", VA = "0xBC59C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xBC5A20", Offset = "0xBC5A20", VA = "0xBC5A20")]
	public BFX_RenderDepth()
	{
	}
}
[Token(Token = "0x2000014")]
public class BFX_ShaderAnimation : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BFX_BloodSettings BloodSettings;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsLoop;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MaterialNumber;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseSharedMaterial;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] UseSharedRenderers;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TimeDelay;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool canUpdate;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startTime;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int propertyID;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string shaderProperty;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer rend;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xBC5A28", Offset = "0xBC5A28", VA = "0xBC5A28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xBC5AF4", Offset = "0xBC5AF4", VA = "0xBC5AF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xBC5B78", Offset = "0xBC5B78", VA = "0xBC5B78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xBC5BE0", Offset = "0xBC5BE0", VA = "0xBC5BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xBC5D9C", Offset = "0xBC5D9C", VA = "0xBC5D9C")]
	public BFX_ShaderAnimation()
	{
	}
}
[Token(Token = "0x2000015")]
[ExecuteInEditMode]
public class DepthTexture : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xBC5DE4", Offset = "0xBC5DE4", VA = "0xBC5DE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xBC5E54", Offset = "0xBC5E54", VA = "0xBC5E54")]
	public DepthTexture()
	{
	}
}
[Token(Token = "0x2000016")]
public class CameraDisabler : MonoBehaviour
{
	[Token(Token = "0x6000051")]
	[Address(RVA = "0xBC5E5C", Offset = "0xBC5E5C", VA = "0xBC5E5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xBC5EC4", Offset = "0xBC5EC4", VA = "0xBC5EC4")]
	public CameraDisabler()
	{
	}
}
[Token(Token = "0x2000017")]
public class LightBlinker : MonoBehaviour
{
	[Token(Token = "0x2000018")]
	[CompilerGenerated]
	private sealed class <Blink>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightBlinker <>4__this;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <current_time>5__2;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005A")]
			[Address(RVA = "0xBC612C", Offset = "0xBC612C", VA = "0xBC612C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0xBC6174", Offset = "0xBC6174", VA = "0xBC6174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0xBC5FEC", Offset = "0xBC5FEC", VA = "0xBC5FEC")]
		[DebuggerHidden]
		public <Blink>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xBC601C", Offset = "0xBC601C", VA = "0xBC601C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xBC6020", Offset = "0xBC6020", VA = "0xBC6020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0xBC6134", Offset = "0xBC6134", VA = "0xBC6134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float blinkTime;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float zMovement;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float targetIntencity;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve blinkCurve;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Light target_light;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float start_z_pos;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xBC5ECC", Offset = "0xBC5ECC", VA = "0xBC5ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xBC5F00", Offset = "0xBC5F00", VA = "0xBC5F00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xBC5F78", Offset = "0xBC5F78", VA = "0xBC5F78")]
	[IteratorStateMachine(typeof(<Blink>d__8))]
	private IEnumerator Blink()
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xBC6014", Offset = "0xBC6014", VA = "0xBC6014")]
	public LightBlinker()
	{
	}
}
[Token(Token = "0x2000019")]
public class PlayerWeaponExplode : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody[] rigidBodies;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float force;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float upwards;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform explosionPoint;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool usePlayerHead;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool useForwardForce;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xBC617C", Offset = "0xBC617C", VA = "0xBC617C")]
	private void Start()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xBC635C", Offset = "0xBC635C", VA = "0xBC635C")]
	public PlayerWeaponExplode()
	{
	}
}
[Token(Token = "0x200001A")]
public class PlayerHeadTrigger : MonoBehaviour
{
	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTriggerPlayer;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xBC6364", Offset = "0xBC6364", VA = "0xBC6364")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xBC63E4", Offset = "0xBC63E4", VA = "0xBC63E4")]
	public PlayerHeadTrigger()
	{
	}
}
[Token(Token = "0x200001B")]
public class AnalyticsManager : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string uniq;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xBC63EC", Offset = "0xBC63EC", VA = "0xBC63EC")]
	public static void DamagedInLevel(string _damager)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xBC6794", Offset = "0xBC6794", VA = "0xBC6794")]
	public static void DamagedInTutor(string _damager)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xBC6908", Offset = "0xBC6908", VA = "0xBC6908")]
	public static void DamagedInCustom(string _damager)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xBC6A7C", Offset = "0xBC6A7C", VA = "0xBC6A7C")]
	public static void LevelStarted()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xBC6D20", Offset = "0xBC6D20", VA = "0xBC6D20")]
	public static void LevelFinished()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xBC7020", Offset = "0xBC7020", VA = "0xBC7020")]
	public static void TutorsFinished()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xBC70E0", Offset = "0xBC70E0", VA = "0xBC70E0")]
	public static void LevelFailed()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xBC7524", Offset = "0xBC7524", VA = "0xBC7524")]
	public static void MenuExit()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xBC77B0", Offset = "0xBC77B0", VA = "0xBC77B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xBC7994", Offset = "0xBC7994", VA = "0xBC7994")]
	private void StopLevel()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xBC7AAC", Offset = "0xBC7AAC", VA = "0xBC7AAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xBC7C4C", Offset = "0xBC7C4C", VA = "0xBC7C4C")]
	public AnalyticsManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200001C")]
public struct FormField
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntContainer intContainer;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string fieldEntry;
}
[Token(Token = "0x200001D")]
public class FormSender : MonoBehaviour
{
	[Token(Token = "0x200001E")]
	[CompilerGenerated]
	private sealed class <Send>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FormSender <>4__this;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007C")]
			[Address(RVA = "0xBC8A50", Offset = "0xBC8A50", VA = "0xBC8A50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007E")]
			[Address(RVA = "0xBC8A98", Offset = "0xBC8A98", VA = "0xBC8A98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0xBC7FB0", Offset = "0xBC7FB0", VA = "0xBC7FB0")]
		[DebuggerHidden]
		public <Send>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0xBC87E8", Offset = "0xBC87E8", VA = "0xBC87E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0xBC87EC", Offset = "0xBC87EC", VA = "0xBC87EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0xBC8A58", Offset = "0xBC8A58", VA = "0xBC8A58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FormField[] fields;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string formURL;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject askRoot;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] easyQuestions;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] hardQuestions;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color activeColor;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color inactiveColor;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string path;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AskerSave save;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AskerLevel level;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xBC7CC0", Offset = "0xBC7CC0", VA = "0xBC7CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xBC7D20", Offset = "0xBC7D20", VA = "0xBC7D20")]
	public void ShowFormWithStopRule(int _stopGameRule = -1)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xBC7E48", Offset = "0xBC7E48", VA = "0xBC7E48")]
	public void ShowForm(int _formId = 0)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xBC7E68", Offset = "0xBC7E68", VA = "0xBC7E68")]
	public void HideForm()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xBC7E88", Offset = "0xBC7E88", VA = "0xBC7E88")]
	public void SendPressed()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xBC7F3C", Offset = "0xBC7F3C", VA = "0xBC7F3C")]
	[IteratorStateMachine(typeof(<Send>d__12))]
	public IEnumerator Send()
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xBC7FD8", Offset = "0xBC7FD8", VA = "0xBC7FD8")]
	public void LoadFile()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xBC8514", Offset = "0xBC8514", VA = "0xBC8514")]
	public void SaveFile()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xBC7D24", Offset = "0xBC7D24", VA = "0xBC7D24")]
	public void ShowFields()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xBC8710", Offset = "0xBC8710", VA = "0xBC8710")]
	public void SaveLevelData()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xBC8790", Offset = "0xBC8790", VA = "0xBC8790")]
	public FormSender()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class AskerSave
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<AskerLevel> levels;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xBC8700", Offset = "0xBC8700", VA = "0xBC8700")]
	public AskerSave()
	{
	}
}
[Serializable]
[Token(Token = "0x2000020")]
public class AskerLevel
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public DifficultyLevel difficulty;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool completedMark;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool completedRecomend;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xBC8708", Offset = "0xBC8708", VA = "0xBC8708")]
	public AskerLevel()
	{
	}
}
[Token(Token = "0x2000021")]
public class GAComicsFirstTime : MonoBehaviour
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _comicsName;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xBC8AA0", Offset = "0xBC8AA0", VA = "0xBC8AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xBC8AB0", Offset = "0xBC8AB0", VA = "0xBC8AB0")]
	public GAComicsFirstTime()
	{
	}
}
[Token(Token = "0x2000022")]
public class GameAnalyticsEventsCombo : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _id01;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _id02;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _id03;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _id04;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int curCombo;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xBC8AB8", Offset = "0xBC8AB8", VA = "0xBC8AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xBC8CF8", Offset = "0xBC8CF8", VA = "0xBC8CF8")]
	private void LevelStarted()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xBC8F08", Offset = "0xBC8F08", VA = "0xBC8F08")]
	private void StopLevel()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xBC9034", Offset = "0xBC9034", VA = "0xBC9034")]
	public void OnComboChange(int value)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xBC962C", Offset = "0xBC962C", VA = "0xBC962C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xBC9908", Offset = "0xBC9908", VA = "0xBC9908")]
	public GameAnalyticsEventsCombo()
	{
	}
}
[Token(Token = "0x2000023")]
public class GameAnalyticsEventsComics : MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameAnalyticsEventsComics Instance;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool skiped;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _id01;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _id02;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _id03;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _id04;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _timeStart;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xBC9918", Offset = "0xBC9918", VA = "0xBC9918")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xBC99E4", Offset = "0xBC99E4", VA = "0xBC99E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xBC9B34", Offset = "0xBC9B34", VA = "0xBC9B34")]
	public void SetEndComics()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xBC9B3C", Offset = "0xBC9B3C", VA = "0xBC9B3C")]
	private void ComicsEnded()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xBC9C48", Offset = "0xBC9C48", VA = "0xBC9C48")]
	private void ComicsLoaded()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xBCA220", Offset = "0xBCA220", VA = "0xBCA220")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xBCA364", Offset = "0xBCA364", VA = "0xBCA364")]
	public GameAnalyticsEventsComics()
	{
	}
}
[Token(Token = "0x2000024")]
public class GameAnalyticsEventsComicsParam : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameAnalyticsEventsComicsParam Instance;

	[Token(Token = "0x1700000F")]
	public string ComicsName
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xBCA374", Offset = "0xBCA374", VA = "0xBCA374")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000091")]
		[Address(RVA = "0xBCA37C", Offset = "0xBCA37C", VA = "0xBCA37C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xBCA384", Offset = "0xBCA384", VA = "0xBCA384")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xBCA450", Offset = "0xBCA450", VA = "0xBCA450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xBCA5A4", Offset = "0xBCA5A4", VA = "0xBCA5A4")]
	private void InitComics(string message)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xBCA5AC", Offset = "0xBCA5AC", VA = "0xBCA5AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xBCA700", Offset = "0xBCA700", VA = "0xBCA700")]
	public GameAnalyticsEventsComicsParam()
	{
	}
}
[Token(Token = "0x2000025")]
public class GameAnalyticsEventsCustomMissionParam : MonoBehaviour
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameAnalyticsEventsCustomMissionParam Instance;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _id01;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _id02;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _id03;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DateTime _timeStart;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _lvlStarted;

	[Token(Token = "0x17000010")]
	public string SongName
	{
		[Token(Token = "0x6000097")]
		[Address(RVA = "0xBCA708", Offset = "0xBCA708", VA = "0xBCA708")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000098")]
		[Address(RVA = "0xBCA710", Offset = "0xBCA710", VA = "0xBCA710")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public DifficultyLevel Difficulty
	{
		[Token(Token = "0x6000099")]
		[Address(RVA = "0xBCA718", Offset = "0xBCA718", VA = "0xBCA718")]
		[CompilerGenerated]
		get
		{
			return default(DifficultyLevel);
		}
		[Token(Token = "0x600009A")]
		[Address(RVA = "0xBCA720", Offset = "0xBCA720", VA = "0xBCA720")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xBCA728", Offset = "0xBCA728", VA = "0xBCA728")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xBCA7F4", Offset = "0xBCA7F4", VA = "0xBCA7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xBCA950", Offset = "0xBCA950", VA = "0xBCA950")]
	public void GameLoaded(DateTime time, string id01, string id02, string id03)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xBCA9A8", Offset = "0xBCA9A8", VA = "0xBCA9A8")]
	public void GameEnded()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xBCAAC0", Offset = "0xBCAAC0", VA = "0xBCAAC0")]
	private void CustomSongsSelected(string songName, DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xBCAAEC", Offset = "0xBCAAEC", VA = "0xBCAAEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xBCAC48", Offset = "0xBCAC48", VA = "0xBCAC48")]
	public GameAnalyticsEventsCustomMissionParam()
	{
	}
}
[Token(Token = "0x2000026")]
public class GameAnalyticsEventsCustomMissionsTest : MonoBehaviour
{
	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xBCAC50", Offset = "0xBCAC50", VA = "0xBCAC50")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xBCAC54", Offset = "0xBCAC54", VA = "0xBCAC54")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xBCAC58", Offset = "0xBCAC58", VA = "0xBCAC58")]
	public GameAnalyticsEventsCustomMissionsTest()
	{
	}
}
[Token(Token = "0x2000027")]
public class GameAnalyticsEventsDamage : MonoBehaviour
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AgainstLogDamage.Event_id_02 _id02;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xBCAC60", Offset = "0xBCAC60", VA = "0xBCAC60")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xBCAE88", Offset = "0xBCAE88", VA = "0xBCAE88")]
	private void Damaged(string botType)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xBCAFA8", Offset = "0xBCAFA8", VA = "0xBCAFA8")]
	private void SetSpeed(float speed)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xBCAFB8", Offset = "0xBCAFB8", VA = "0xBCAFB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xBCB1E0", Offset = "0xBCB1E0", VA = "0xBCB1E0")]
	public GameAnalyticsEventsDamage()
	{
	}
}
[Token(Token = "0x2000028")]
public class GameAnalyticsEventsDeath : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _lvlName;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime _timeStart;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _timeResult;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xBCB1E8", Offset = "0xBCB1E8", VA = "0xBCB1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xBCB3D8", Offset = "0xBCB3D8", VA = "0xBCB3D8")]
	private void CustomSongsLoaded(string songName, DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xBCB44C", Offset = "0xBCB44C", VA = "0xBCB44C")]
	private void PlayerDead()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xBCB5C4", Offset = "0xBCB5C4", VA = "0xBCB5C4")]
	private void InitGame()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xBCB664", Offset = "0xBCB664", VA = "0xBCB664")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xBCB668", Offset = "0xBCB668", VA = "0xBCB668")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xBCB858", Offset = "0xBCB858", VA = "0xBCB858")]
	public GameAnalyticsEventsDeath()
	{
	}
}
[Token(Token = "0x2000029")]
public class GameAnalyticsEventsLoadedSceneName : MonoBehaviour
{
	[Token(Token = "0x200002A")]
	private enum EventMissionLVLType
	{
		[Token(Token = "0x40000B2")]
		tutorial,
		[Token(Token = "0x40000B3")]
		common,
		[Token(Token = "0x40000B4")]
		cutscene,
		[Token(Token = "0x40000B5")]
		custom
	}

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnSceneLoaded;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameAnalyticsEventsLoadedSceneName Instance;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<string> _scenesNames;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<string> _cutScenesNames;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EventMissionLVLType _lvlType;

	[Token(Token = "0x17000012")]
	public string SceneType
	{
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xBCB860", Offset = "0xBCB860", VA = "0xBCB860")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xBCB868", Offset = "0xBCB868", VA = "0xBCB868")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public string SceneName
	{
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xBCB870", Offset = "0xBCB870", VA = "0xBCB870")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xBCB878", Offset = "0xBCB878", VA = "0xBCB878")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public string SceneLVL
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xBCB880", Offset = "0xBCB880", VA = "0xBCB880")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xBCB888", Offset = "0xBCB888", VA = "0xBCB888")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xBCB890", Offset = "0xBCB890", VA = "0xBCB890")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xBCB978", Offset = "0xBCB978", VA = "0xBCB978")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xBCBC68", Offset = "0xBCBC68", VA = "0xBCBC68")]
	public GameAnalyticsEventsLoadedSceneName()
	{
	}
}
[Token(Token = "0x200002C")]
public enum EventMissionType
{
	[Token(Token = "0x40000B8")]
	missions,
	[Token(Token = "0x40000B9")]
	customs,
	[Token(Token = "0x40000BA")]
	tutorial,
	[Token(Token = "0x40000BB")]
	cut_scene
}
[Token(Token = "0x200002D")]
public enum EventMissionID
{
	[Token(Token = "0x40000BD")]
	city,
	[Token(Token = "0x40000BE")]
	train,
	[Token(Token = "0x40000BF")]
	ship,
	[Token(Token = "0x40000C0")]
	airship,
	[Token(Token = "0x40000C1")]
	temple,
	[Token(Token = "0x40000C2")]
	dark,
	[Token(Token = "0x40000C3")]
	roof,
	[Token(Token = "0x40000C4")]
	song_name
}
[Token(Token = "0x200002E")]
public enum EventMissionLVL
{
	[Token(Token = "0x40000C6")]
	easy,
	[Token(Token = "0x40000C7")]
	normal,
	[Token(Token = "0x40000C8")]
	hard
}
[Token(Token = "0x200002F")]
public class GameAnalyticsEventsMiss : MonoBehaviour
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _lvlName;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime _timeStart;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _timeResult;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xBCBE74", Offset = "0xBCBE74", VA = "0xBCBE74")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xBCC090", Offset = "0xBCC090", VA = "0xBCC090")]
	private void CustomSongsLoaded(string songName, DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xBCC098", Offset = "0xBCC098", VA = "0xBCC098")]
	private void InitGame()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xBCC138", Offset = "0xBCC138", VA = "0xBCC138")]
	private void Damaged(string obj)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xBCC2B0", Offset = "0xBCC2B0", VA = "0xBCC2B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xBCC4CC", Offset = "0xBCC4CC", VA = "0xBCC4CC")]
	public GameAnalyticsEventsMiss()
	{
	}
}
[Token(Token = "0x2000030")]
public class GameAnalyticsEventsMissions : MonoBehaviour
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime _timeStart;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double _timeResult;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _id01;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _id02;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _id03;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _id04;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _missionStarted;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xBCC4D4", Offset = "0xBCC4D4", VA = "0xBCC4D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xBCC620", Offset = "0xBCC620", VA = "0xBCC620")]
	private void GameLoaded()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xBCC7EC", Offset = "0xBCC7EC", VA = "0xBCC7EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xBCC7F0", Offset = "0xBCC7F0", VA = "0xBCC7F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xBCC93C", Offset = "0xBCC93C", VA = "0xBCC93C")]
	public GameAnalyticsEventsMissions()
	{
	}
}
[Token(Token = "0x2000031")]
public class GameAnalyticsEventsMissionsOnScene : MonoBehaviour
{
	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xBCC944", Offset = "0xBCC944", VA = "0xBCC944")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xBCCA0C", Offset = "0xBCCA0C", VA = "0xBCCA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xBCCA10", Offset = "0xBCCA10", VA = "0xBCCA10")]
	public GameAnalyticsEventsMissionsOnScene()
	{
	}
}
[Token(Token = "0x2000032")]
public class GameAnalyticsEventsMissionsTest : MonoBehaviour
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private static List<string> _scenesNames;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DateTime _timeStart;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static double _timeResult;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string _id01;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string _id02;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string _id03;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string _id04;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool _missionStarted;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xBCCA18", Offset = "0xBCCA18", VA = "0xBCCA18")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xBCCBFC", Offset = "0xBCCBFC", VA = "0xBCCBFC")]
	public static void LevelStarted()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xBCCEC8", Offset = "0xBCCEC8", VA = "0xBCCEC8")]
	private void StopLevel()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xBCD0C0", Offset = "0xBCD0C0", VA = "0xBCD0C0")]
	public static void LevelFinished()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xBCD0C4", Offset = "0xBCD0C4", VA = "0xBCD0C4")]
	public static void LevelFailed()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xBCD1F8", Offset = "0xBCD1F8", VA = "0xBCD1F8")]
	public static void MenuExit()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xBCD1FC", Offset = "0xBCD1FC", VA = "0xBCD1FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xBCD3E0", Offset = "0xBCD3E0", VA = "0xBCD3E0")]
	public GameAnalyticsEventsMissionsTest()
	{
	}
}
[Token(Token = "0x2000033")]
public class GameAnalyticsEventsModificators : MonoBehaviour
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool modificators;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xBCD7A4", Offset = "0xBCD7A4", VA = "0xBCD7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xBCD994", Offset = "0xBCD994", VA = "0xBCD994")]
	private void CheckSendLog()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xBCDFAC", Offset = "0xBCDFAC", VA = "0xBCDFAC")]
	private void ModificatorsChange()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xBCD9A4", Offset = "0xBCD9A4", VA = "0xBCD9A4")]
	public void SendAllModificators()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xBCDFB8", Offset = "0xBCDFB8", VA = "0xBCDFB8")]
	private string OnOff(bool state)
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xBCE030", Offset = "0xBCE030", VA = "0xBCE030")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xBCE220", Offset = "0xBCE220", VA = "0xBCE220")]
	public GameAnalyticsEventsModificators()
	{
	}
}
[Token(Token = "0x2000034")]
public class GameAnalyticsEventsSettings : MonoBehaviour
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool settings;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xBCE228", Offset = "0xBCE228", VA = "0xBCE228")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xBCE418", Offset = "0xBCE418", VA = "0xBCE418")]
	private void CheckSendLog()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xBCEC9C", Offset = "0xBCEC9C", VA = "0xBCEC9C")]
	public void SettingsChange()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xBCE428", Offset = "0xBCE428", VA = "0xBCE428")]
	public void SendAllSettings()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xBCECA8", Offset = "0xBCECA8", VA = "0xBCECA8")]
	private string OnOff(bool state)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xBCED10", Offset = "0xBCED10", VA = "0xBCED10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xBCEF00", Offset = "0xBCEF00", VA = "0xBCEF00")]
	public GameAnalyticsEventsSettings()
	{
	}
}
[Token(Token = "0x2000035")]
public class GameAnalyticsEventsTutorial : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GAEventTutorialState> _eventStates;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GAEventTutorial _oldEvent;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue<GAEventTutorial> _eventsQueue;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DateTime _timeStart;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private double _timeResult;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xBCEF08", Offset = "0xBCEF08", VA = "0xBCEF08")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xBCF254", Offset = "0xBCF254", VA = "0xBCF254")]
	private void SendEvent(TutorialState state, int index)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xBCF4E4", Offset = "0xBCF4E4", VA = "0xBCF4E4")]
	private void SendOldEvent()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xBCF6E0", Offset = "0xBCF6E0", VA = "0xBCF6E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xBCF844", Offset = "0xBCF844", VA = "0xBCF844")]
	public GameAnalyticsEventsTutorial()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class GAEventTutorial
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AgainstLogTutorial.Event_id_01 ID01;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AgainstLogTutorial.Event_id_02 ID02;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AgainstLogTutorial.Event_id_03 ID03;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AgainstLogTutorial.Event_id_04 ID04;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DateTime TimeStart;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double TimeResult;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xBCF1FC", Offset = "0xBCF1FC", VA = "0xBCF1FC")]
	public GAEventTutorial(AgainstLogTutorial.Event_id_01 id01, AgainstLogTutorial.Event_id_02 id02, AgainstLogTutorial.Event_id_03 id03, AgainstLogTutorial.Event_id_04 id04, DateTime timeStart)
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class GAEventTutorialState
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TutorialState State;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GAEventTutorial> Events;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xBCF8F0", Offset = "0xBCF8F0", VA = "0xBCF8F0")]
	public GAEventTutorialState()
	{
	}
}
[Token(Token = "0x2000039")]
public class GameAnalyticsEventsTutorialLobby : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameAnalyticsEventsTutorialLobby Instance;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _tutorName;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime _timeStart;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _timeResult;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _eventStarted;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xBCF8F8", Offset = "0xBCF8F8", VA = "0xBCF8F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xBCF9C8", Offset = "0xBCF9C8", VA = "0xBCF9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xBCFBBC", Offset = "0xBCFBBC", VA = "0xBCFBBC")]
	private void GameEnded()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xBCFD44", Offset = "0xBCFD44", VA = "0xBCFD44")]
	private void TutorialLoaded()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xBCFF5C", Offset = "0xBCFF5C", VA = "0xBCFF5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xBD0150", Offset = "0xBD0150", VA = "0xBD0150")]
	public GameAnalyticsEventsTutorialLobby()
	{
	}
}
[Token(Token = "0x200003A")]
public class GameAnalyticsJWEvents : MonoBehaviour
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameAnalyticsJWEvents Instance;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _analyticsInitialized;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _commandsCounter;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xBD0158", Offset = "0xBD0158", VA = "0xBD0158")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xBD0224", Offset = "0xBD0224", VA = "0xBD0224")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xBD0288", Offset = "0xBD0288", VA = "0xBD0288")]
	[ContextMenu("Test event")]
	public void TestEvent()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xBC9D64", Offset = "0xBC9D64", VA = "0xBC9D64")]
	public void SendEvent(string logID1, string logID2, string logID3, string logID4, float value)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xBC9194", Offset = "0xBC9194", VA = "0xBC9194")]
	public void SendEvent(string logID1, string logID2, string logID3, string logID4, float value1, float value2)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xBD03AC", Offset = "0xBD03AC", VA = "0xBD03AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xBD03B0", Offset = "0xBD03B0", VA = "0xBD03B0")]
	public GameAnalyticsJWEvents()
	{
	}
}
[Token(Token = "0x200003B")]
public class AgainstLogTutorial
{
	[Token(Token = "0x200003C")]
	public enum Event_id_01
	{
		[Token(Token = "0x40000F4")]
		tutorial
	}

	[Token(Token = "0x200003D")]
	public enum Event_id_02
	{
		[Token(Token = "0x40000F6")]
		start,
		[Token(Token = "0x40000F7")]
		sb_centre,
		[Token(Token = "0x40000F8")]
		sb_dodge,
		[Token(Token = "0x40000F9")]
		sb_sword,
		[Token(Token = "0x40000FA")]
		sb_slice,
		[Token(Token = "0x40000FB")]
		sb_slice_dodge,
		[Token(Token = "0x40000FC")]
		sb_bullet,
		[Token(Token = "0x40000FD")]
		sb_damage,
		[Token(Token = "0x40000FE")]
		sb_kill_heal,
		[Token(Token = "0x40000FF")]
		sb_centre_repeat,
		[Token(Token = "0x4000100")]
		wb_revolver,
		[Token(Token = "0x4000101")]
		wb_revolver_shot,
		[Token(Token = "0x4000102")]
		wb_knuckle,
		[Token(Token = "0x4000103")]
		wb_hit,
		[Token(Token = "0x4000104")]
		wb_gun,
		[Token(Token = "0x4000105")]
		wb_gun_shot,
		[Token(Token = "0x4000106")]
		rb_swipe,
		[Token(Token = "0x4000107")]
		rb_swipe_repeat,
		[Token(Token = "0x4000108")]
		rb_dodge,
		[Token(Token = "0x4000109")]
		rb_dodge_repeat
	}

	[Token(Token = "0x200003E")]
	public enum Event_id_03
	{
		[Token(Token = "0x400010B")]
		begin,
		[Token(Token = "0x400010C")]
		end
	}

	[Token(Token = "0x200003F")]
	public enum Event_id_04
	{
		[Token(Token = "0x400010E")]
		NA
	}

	[Token(Token = "0x2000040")]
	public enum Event_id_05
	{
		[Token(Token = "0x4000110")]
		commands_counter
	}

	[Token(Token = "0x2000041")]
	public enum Value
	{
		[Token(Token = "0x4000112")]
		time_in_seconds
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xBD03B8", Offset = "0xBD03B8", VA = "0xBD03B8")]
	public AgainstLogTutorial()
	{
	}
}
[Token(Token = "0x2000042")]
public class AgainstLogLobbyTutorial
{
	[Token(Token = "0x2000043")]
	public enum Event_id_01
	{
		[Token(Token = "0x4000114")]
		lobby_tutorial
	}

	[Token(Token = "0x2000044")]
	public enum Event_id_02
	{
		[Token(Token = "0x4000116")]
		start,
		[Token(Token = "0x4000117")]
		standing_battle,
		[Token(Token = "0x4000118")]
		weapon_battle,
		[Token(Token = "0x4000119")]
		run_battle
	}

	[Token(Token = "0x2000045")]
	public enum Event_id_03
	{
		[Token(Token = "0x400011B")]
		begin,
		[Token(Token = "0x400011C")]
		end
	}

	[Token(Token = "0x2000046")]
	public enum Event_id_04
	{
		[Token(Token = "0x400011E")]
		NA
	}

	[Token(Token = "0x2000047")]
	public enum Event_id_05
	{
		[Token(Token = "0x4000120")]
		commands_counter
	}

	[Token(Token = "0x2000048")]
	public enum Value
	{
		[Token(Token = "0x4000122")]
		time_in_seconds
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xBD03C0", Offset = "0xBD03C0", VA = "0xBD03C0")]
	public AgainstLogLobbyTutorial()
	{
	}
}
[Token(Token = "0x2000049")]
public class AgainstLogMissions
{
	[Token(Token = "0x200004A")]
	public enum Event_id_01
	{
		[Token(Token = "0x4000124")]
		missions
	}

	[Token(Token = "0x200004B")]
	public enum Event_id_02
	{
		[Token(Token = "0x4000126")]
		city,
		[Token(Token = "0x4000127")]
		train,
		[Token(Token = "0x4000128")]
		ship,
		[Token(Token = "0x4000129")]
		airship,
		[Token(Token = "0x400012A")]
		temple,
		[Token(Token = "0x400012B")]
		dark,
		[Token(Token = "0x400012C")]
		roof
	}

	[Token(Token = "0x200004C")]
	public enum Event_id_03
	{
		[Token(Token = "0x400012E")]
		easy,
		[Token(Token = "0x400012F")]
		normal,
		[Token(Token = "0x4000130")]
		hard
	}

	[Token(Token = "0x200004D")]
	public enum Event_id_04
	{
		[Token(Token = "0x4000132")]
		begin,
		[Token(Token = "0x4000133")]
		end
	}

	[Token(Token = "0x200004E")]
	public enum Event_id_05
	{
		[Token(Token = "0x4000135")]
		commands_counter
	}

	[Token(Token = "0x200004F")]
	public enum Value
	{
		[Token(Token = "0x4000137")]
		time_in_seconds
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xBD03C8", Offset = "0xBD03C8", VA = "0xBD03C8")]
	public AgainstLogMissions()
	{
	}
}
[Token(Token = "0x2000050")]
public class AgainstLogCustomLevels
{
	[Token(Token = "0x2000051")]
	public enum Event_id_01
	{
		[Token(Token = "0x4000139")]
		customs
	}

	[Token(Token = "0x2000052")]
	public enum Event_id_02
	{
		[Token(Token = "0x400013B")]
		song_name
	}

	[Token(Token = "0x2000053")]
	public enum Event_id_03
	{
		[Token(Token = "0x400013D")]
		easy,
		[Token(Token = "0x400013E")]
		normal,
		[Token(Token = "0x400013F")]
		hard
	}

	[Token(Token = "0x2000054")]
	public enum Event_id_04
	{
		[Token(Token = "0x4000141")]
		begin,
		[Token(Token = "0x4000142")]
		end
	}

	[Token(Token = "0x2000055")]
	public enum Event_id_05
	{
		[Token(Token = "0x4000144")]
		commands_counter
	}

	[Token(Token = "0x2000056")]
	public enum Value
	{
		[Token(Token = "0x4000146")]
		time_in_seconds
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xBD03D0", Offset = "0xBD03D0", VA = "0xBD03D0")]
	public AgainstLogCustomLevels()
	{
	}
}
[Token(Token = "0x2000057")]
public class AgainstLogCutScenes
{
	[Token(Token = "0x2000058")]
	public enum Event_id_01
	{
		[Token(Token = "0x4000148")]
		cut_scene
	}

	[Token(Token = "0x2000059")]
	public enum Event_id_02
	{
		[Token(Token = "0x400014A")]
		city,
		[Token(Token = "0x400014B")]
		train,
		[Token(Token = "0x400014C")]
		ship,
		[Token(Token = "0x400014D")]
		airship,
		[Token(Token = "0x400014E")]
		temple,
		[Token(Token = "0x400014F")]
		dark,
		[Token(Token = "0x4000150")]
		roof
	}

	[Token(Token = "0x200005A")]
	public enum Event_id_03
	{
		[Token(Token = "0x4000152")]
		_true,
		[Token(Token = "0x4000153")]
		_false
	}

	[Token(Token = "0x200005B")]
	public enum Event_id_04
	{
		[Token(Token = "0x4000155")]
		skip,
		[Token(Token = "0x4000156")]
		view
	}

	[Token(Token = "0x200005C")]
	public enum Event_id_05
	{
		[Token(Token = "0x4000158")]
		commands_counter
	}

	[Token(Token = "0x200005D")]
	public enum Value
	{
		[Token(Token = "0x400015A")]
		NA
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xBD03D8", Offset = "0xBD03D8", VA = "0xBD03D8")]
	public AgainstLogCutScenes()
	{
	}
}
[Token(Token = "0x200005E")]
public class AgainstLogDeath
{
	[Token(Token = "0x200005F")]
	public enum Event_id_01
	{
		[Token(Token = "0x400015C")]
		death
	}

	[Token(Token = "0x2000060")]
	public enum Event_id_02
	{
		[Token(Token = "0x400015E")]
		city,
		[Token(Token = "0x400015F")]
		train,
		[Token(Token = "0x4000160")]
		ship,
		[Token(Token = "0x4000161")]
		airship,
		[Token(Token = "0x4000162")]
		temple,
		[Token(Token = "0x4000163")]
		dark,
		[Token(Token = "0x4000164")]
		roof,
		[Token(Token = "0x4000165")]
		song_name
	}

	[Token(Token = "0x2000061")]
	public enum Event_id_03
	{
		[Token(Token = "0x4000167")]
		NA
	}

	[Token(Token = "0x2000062")]
	public enum Event_id_04
	{
		[Token(Token = "0x4000169")]
		NA
	}

	[Token(Token = "0x2000063")]
	public enum Event_id_05
	{
		[Token(Token = "0x400016B")]
		commands_counter
	}

	[Token(Token = "0x2000064")]
	public enum Value
	{
		[Token(Token = "0x400016D")]
		time_in_seconds
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xBD03E0", Offset = "0xBD03E0", VA = "0xBD03E0")]
	public AgainstLogDeath()
	{
	}
}
[Token(Token = "0x2000065")]
public class AgainstLogDamage
{
	[Token(Token = "0x2000066")]
	public enum Event_id_01
	{
		[Token(Token = "0x400016F")]
		damage
	}

	[Token(Token = "0x2000067")]
	public enum Event_id_02
	{
		[Token(Token = "0x4000171")]
		sb_mode,
		[Token(Token = "0x4000172")]
		rb_mode
	}

	[Token(Token = "0x2000068")]
	public enum Event_id_03
	{
		[Token(Token = "0x4000174")]
		bot_type
	}

	[Token(Token = "0x2000069")]
	public enum Event_id_04
	{
		[Token(Token = "0x4000176")]
		NA
	}

	[Token(Token = "0x200006A")]
	public enum Event_id_05
	{
		[Token(Token = "0x4000178")]
		commands_counter
	}

	[Token(Token = "0x200006B")]
	public enum Value
	{
		[Token(Token = "0x400017A")]
		NA
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xBD03E8", Offset = "0xBD03E8", VA = "0xBD03E8")]
	public AgainstLogDamage()
	{
	}
}
[Token(Token = "0x200006C")]
public class AgainstLogMiss
{
	[Token(Token = "0x200006D")]
	public enum Event_id_01
	{
		[Token(Token = "0x400017C")]
		miss
	}

	[Token(Token = "0x200006E")]
	public enum Event_id_02
	{
		[Token(Token = "0x400017E")]
		city,
		[Token(Token = "0x400017F")]
		train,
		[Token(Token = "0x4000180")]
		ship,
		[Token(Token = "0x4000181")]
		airship,
		[Token(Token = "0x4000182")]
		temple,
		[Token(Token = "0x4000183")]
		dark,
		[Token(Token = "0x4000184")]
		roof,
		[Token(Token = "0x4000185")]
		song_name
	}

	[Token(Token = "0x200006F")]
	public enum Event_id_03
	{
		[Token(Token = "0x4000187")]
		NA
	}

	[Token(Token = "0x2000070")]
	public enum Event_id_04
	{
		[Token(Token = "0x4000189")]
		NA
	}

	[Token(Token = "0x2000071")]
	public enum Event_id_05
	{
		[Token(Token = "0x400018B")]
		commands_counter
	}

	[Token(Token = "0x2000072")]
	public enum Value
	{
		[Token(Token = "0x400018D")]
		time_in_seconds
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xBD03F0", Offset = "0xBD03F0", VA = "0xBD03F0")]
	public AgainstLogMiss()
	{
	}
}
[Token(Token = "0x2000073")]
public class AgainstLogCombo
{
	[Token(Token = "0x2000074")]
	public enum Event_id_01
	{
		[Token(Token = "0x400018F")]
		combo
	}

	[Token(Token = "0x2000075")]
	public enum Event_id_02
	{
		[Token(Token = "0x4000191")]
		city,
		[Token(Token = "0x4000192")]
		train,
		[Token(Token = "0x4000193")]
		ship,
		[Token(Token = "0x4000194")]
		airship,
		[Token(Token = "0x4000195")]
		temple,
		[Token(Token = "0x4000196")]
		dark,
		[Token(Token = "0x4000197")]
		roof,
		[Token(Token = "0x4000198")]
		song_name
	}

	[Token(Token = "0x2000076")]
	public enum Event_id_03
	{
		[Token(Token = "0x400019A")]
		increase,
		[Token(Token = "0x400019B")]
		drop
	}

	[Token(Token = "0x2000077")]
	public enum Event_id_04
	{
		[Token(Token = "0x400019D")]
		NA
	}

	[Token(Token = "0x2000078")]
	public enum Event_id_05
	{
		[Token(Token = "0x400019F")]
		commands_counter
	}

	[Token(Token = "0x2000079")]
	public enum Value
	{
		[Token(Token = "0x40001A1")]
		time_in_seconds
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xBD03F8", Offset = "0xBD03F8", VA = "0xBD03F8")]
	public AgainstLogCombo()
	{
	}
}
[Token(Token = "0x200007A")]
public class AgainstLogSettings
{
	[Token(Token = "0x200007B")]
	public enum Event_id_01
	{
		[Token(Token = "0x40001A3")]
		setting
	}

	[Token(Token = "0x200007C")]
	public enum Event_id_02
	{
		[Token(Token = "0x40001A5")]
		main_hand,
		[Token(Token = "0x40001A6")]
		display_camera,
		[Token(Token = "0x40001A7")]
		blood_vignette,
		[Token(Token = "0x40001A8")]
		vignette,
		[Token(Token = "0x40001A9")]
		deflect,
		[Token(Token = "0x40001AA")]
		dodge_arrows,
		[Token(Token = "0x40001AB")]
		comics,
		[Token(Token = "0x40001AC")]
		vignette_power,
		[Token(Token = "0x40001AD")]
		metronome,
		[Token(Token = "0x40001AE")]
		environment_lighting,
		[Token(Token = "0x40001AF")]
		heal_damage_vignette
	}

	[Token(Token = "0x200007D")]
	public enum Event_id_03
	{
		[Token(Token = "0x40001B1")]
		status
	}

	[Token(Token = "0x200007E")]
	public enum Event_id_04
	{
		[Token(Token = "0x40001B3")]
		NA
	}

	[Token(Token = "0x200007F")]
	public enum Event_id_05
	{
		[Token(Token = "0x40001B5")]
		commands_counter
	}

	[Token(Token = "0x2000080")]
	public enum Value
	{
		[Token(Token = "0x40001B7")]
		NA
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xBD0400", Offset = "0xBD0400", VA = "0xBD0400")]
	public AgainstLogSettings()
	{
	}
}
[Token(Token = "0x2000081")]
public class AgainstLogModificators
{
	[Token(Token = "0x2000082")]
	public enum Event_id_01
	{
		[Token(Token = "0x40001B9")]
		modificator
	}

	[Token(Token = "0x2000083")]
	public enum Event_id_02
	{
		[Token(Token = "0x40001BB")]
		indicators,
		[Token(Token = "0x40001BC")]
		hud,
		[Token(Token = "0x40001BD")]
		immortality,
		[Token(Token = "0x40001BE")]
		noir,
		[Token(Token = "0x40001BF")]
		freestyle,
		[Token(Token = "0x40001C0")]
		one_chance,
		[Token(Token = "0x40001C1")]
		colourless,
		[Token(Token = "0x40001C2")]
		beat_circle
	}

	[Token(Token = "0x2000084")]
	public enum Event_id_03
	{
		[Token(Token = "0x40001C4")]
		on,
		[Token(Token = "0x40001C5")]
		off
	}

	[Token(Token = "0x2000085")]
	public enum Event_id_04
	{
		[Token(Token = "0x40001C7")]
		NA
	}

	[Token(Token = "0x2000086")]
	public enum Event_id_05
	{
		[Token(Token = "0x40001C9")]
		commands_counter
	}

	[Token(Token = "0x2000087")]
	public enum Value
	{
		[Token(Token = "0x40001CB")]
		NA
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xBD0408", Offset = "0xBD0408", VA = "0xBD0408")]
	public AgainstLogModificators()
	{
	}
}
[Token(Token = "0x2000088")]
public class IntContainer : MonoBehaviour
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int defaultValue;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int curValue;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<int, int> onValueChanged;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xBD0410", Offset = "0xBD0410", VA = "0xBD0410")]
	public void SetValue(int _value)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xBD047C", Offset = "0xBD047C", VA = "0xBD047C")]
	public int GetVaue()
	{
		return default(int);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xBD0484", Offset = "0xBD0484", VA = "0xBD0484")]
	public IntContainer()
	{
	}
}
[Token(Token = "0x2000089")]
public class AnimationSignal : MonoBehaviour
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Enemy main;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Signal signal;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xBD0494", Offset = "0xBD0494", VA = "0xBD0494")]
	private void Signaling()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xBD04B0", Offset = "0xBD04B0", VA = "0xBD04B0")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xBD04CC", Offset = "0xBD04CC", VA = "0xBD04CC", Slot = "4")]
	protected virtual void MissEnemy()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xBD04F0", Offset = "0xBD04F0", VA = "0xBD04F0")]
	public AnimationSignal()
	{
	}
}
[Token(Token = "0x200008A")]
public class AnimationSignalShooter : MonoBehaviour
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyShooter enemyShooter;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xBD04F8", Offset = "0xBD04F8", VA = "0xBD04F8")]
	public void StartAim()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xBD0514", Offset = "0xBD0514", VA = "0xBD0514")]
	public void ReadyToShoot()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xBD0538", Offset = "0xBD0538", VA = "0xBD0538")]
	public void ShootToPlayer()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xBD055C", Offset = "0xBD055C", VA = "0xBD055C")]
	public AnimationSignalShooter()
	{
	}
}
[Token(Token = "0x200008B")]
public class AnimDisable : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	[CompilerGenerated]
	private sealed class <AnimProcess>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimDisable <>4__this;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000115")]
			[Address(RVA = "0xBD07C0", Offset = "0xBD07C0", VA = "0xBD07C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000117")]
			[Address(RVA = "0xBD0808", Offset = "0xBD0808", VA = "0xBD0808", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xBD0650", Offset = "0xBD0650", VA = "0xBD0650")]
		[DebuggerHidden]
		public <AnimProcess>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0xBD0680", Offset = "0xBD0680", VA = "0xBD0680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0xBD0684", Offset = "0xBD0684", VA = "0xBD0684", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xBD07C8", Offset = "0xBD07C8", VA = "0xBD07C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject anim;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xBD0564", Offset = "0xBD0564", VA = "0xBD0564")]
	private void Start()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xBD05DC", Offset = "0xBD05DC", VA = "0xBD05DC")]
	[IteratorStateMachine(typeof(<AnimProcess>d__2))]
	private IEnumerator AnimProcess()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xBD0678", Offset = "0xBD0678", VA = "0xBD0678")]
	public AnimDisable()
	{
	}
}
[Token(Token = "0x200008D")]
public class ArriveEffect : MonoBehaviour
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject arriveEffect;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xBD0810", Offset = "0xBD0810", VA = "0xBD0810")]
	private void Active()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xBD0830", Offset = "0xBD0830", VA = "0xBD0830")]
	public ArriveEffect()
	{
	}
}
[Token(Token = "0x200008E")]
public class Archer : Balancer
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float explosionDelay;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startPos;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool done;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xBD0838", Offset = "0xBD0838", VA = "0xBD0838")]
	private void Start()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xBD08C4", Offset = "0xBD08C4", VA = "0xBD08C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xBD0978", Offset = "0xBD0978", VA = "0xBD0978", Slot = "4")]
	protected override void Do()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xBD0AC0", Offset = "0xBD0AC0", VA = "0xBD0AC0")]
	public Archer()
	{
	}
}
[Token(Token = "0x200008F")]
public class Balancer : MonoBehaviour
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PreJumpActionChecker hitArrowsChecker;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool checkCollider;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xBD0AE0", Offset = "0xBD0AE0", VA = "0xBD0AE0")]
	public void Explode()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xBD0B2C", Offset = "0xBD0B2C", VA = "0xBD0B2C", Slot = "4")]
	protected virtual void Do()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xBD0AD0", Offset = "0xBD0AD0", VA = "0xBD0AD0")]
	public Balancer()
	{
	}
}
[Token(Token = "0x2000090")]
public class Grenade : Balancer
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lateTime;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] visuals;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject grenade;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator2;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject effect;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isTutor;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isDamaged;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool readyToRun;

	[Token(Token = "0x40001E6")]
	private const float lateDistance = 2f;

	[Token(Token = "0x40001E7")]
	private const float lateFactor = 5.4f;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xBD0B30", Offset = "0xBD0B30", VA = "0xBD0B30", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xBD0CAC", Offset = "0xBD0CAC", VA = "0xBD0CAC")]
	public void ResetTime()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xBD0CB8", Offset = "0xBD0CB8", VA = "0xBD0CB8")]
	public void CountTime()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xBD0CD4", Offset = "0xBD0CD4", VA = "0xBD0CD4", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xBD0D28", Offset = "0xBD0D28", VA = "0xBD0D28", Slot = "4")]
	protected override void Do()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xBD0F58", Offset = "0xBD0F58", VA = "0xBD0F58", Slot = "7")]
	protected virtual void ForcePlayerMove(float lateFactor, float lateTime)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xBD1048", Offset = "0xBD1048", VA = "0xBD1048")]
	public void SetDamage()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xBD1054", Offset = "0xBD1054", VA = "0xBD1054")]
	public void HideAndShow()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xBD10E8", Offset = "0xBD10E8", VA = "0xBD10E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xBD1130", Offset = "0xBD1130", VA = "0xBD1130")]
	public Grenade()
	{
	}
}
[Token(Token = "0x2000091")]
public class MissBlock : Balancer
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float offset;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PreJumpActionChecker actionArrowsChecker;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool done;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool checkPlayerUpPosition;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform playerPoint;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useHeadPos;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xBD1148", Offset = "0xBD1148", VA = "0xBD1148")]
	private void Start()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xBD11CC", Offset = "0xBD11CC", VA = "0xBD11CC")]
	protected void Update()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xBD12DC", Offset = "0xBD12DC", VA = "0xBD12DC", Slot = "4")]
	protected override void Do()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xBD12FC", Offset = "0xBD12FC", VA = "0xBD12FC")]
	public MissBlock()
	{
	}
}
[Token(Token = "0x2000092")]
public class Rocket : MonoBehaviour
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform point;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveSpeed;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float turnSpeed;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float f;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xBD130C", Offset = "0xBD130C", VA = "0xBD130C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xBD1388", Offset = "0xBD1388", VA = "0xBD1388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xBD1574", Offset = "0xBD1574", VA = "0xBD1574")]
	public Rocket()
	{
	}
}
[Token(Token = "0x2000093")]
public class Thrower : MonoBehaviour
{
	[Token(Token = "0x2000094")]
	[CompilerGenerated]
	private sealed class <ScaleThrowObject>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Thrower <>4__this;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000140")]
			[Address(RVA = "0xBD1D74", Offset = "0xBD1D74", VA = "0xBD1D74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000142")]
			[Address(RVA = "0xBD1DBC", Offset = "0xBD1DBC", VA = "0xBD1DBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600013D")]
		[Address(RVA = "0xBD199C", Offset = "0xBD199C", VA = "0xBD199C")]
		[DebuggerHidden]
		public <ScaleThrowObject>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600013E")]
		[Address(RVA = "0xBD1C48", Offset = "0xBD1C48", VA = "0xBD1C48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600013F")]
		[Address(RVA = "0xBD1C4C", Offset = "0xBD1C4C", VA = "0xBD1C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0xBD1D7C", Offset = "0xBD1D7C", VA = "0xBD1D7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] visuals;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] effects;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 throwObjectScale;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mover throwObject;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] fakeThrowObject;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource throwSoundEffect;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject shootCheckerObject;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float throwTime;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isDamaged;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HasDodgeIndicator dodgeIndicator;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float dodgeDelayDistanceFactor;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject dodgeEffect;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xBD157C", Offset = "0xBD157C", VA = "0xBD157C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xBD1698", Offset = "0xBD1698", VA = "0xBD1698", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xBD180C", Offset = "0xBD180C", VA = "0xBD180C")]
	public void SoundEffect()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xBD188C", Offset = "0xBD188C", VA = "0xBD188C")]
	protected void ShowThrowObject()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xBD1928", Offset = "0xBD1928", VA = "0xBD1928")]
	[IteratorStateMachine(typeof(<ScaleThrowObject>d__16))]
	private IEnumerator ScaleThrowObject()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xBD19C4", Offset = "0xBD19C4", VA = "0xBD19C4")]
	public void HideVisual()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xBD1A8C", Offset = "0xBD1A8C", VA = "0xBD1A8C")]
	public void SetDamage()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xBD1A98", Offset = "0xBD1A98", VA = "0xBD1A98", Slot = "5")]
	protected virtual void Stop()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xBD1AB8", Offset = "0xBD1AB8", VA = "0xBD1AB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xBD1BB0", Offset = "0xBD1BB0", VA = "0xBD1BB0")]
	public void DodgeSignal()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xBD1C38", Offset = "0xBD1C38", VA = "0xBD1C38")]
	public Thrower()
	{
	}
}
[Token(Token = "0x2000095")]
public class ThrowerSide : Thrower
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform root;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject throwRightObject;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject throwLeftObject;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject anotherAxe;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform uiArrow;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xBD1DC4", Offset = "0xBD1DC4", VA = "0xBD1DC4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xBD1F88", Offset = "0xBD1F88", VA = "0xBD1F88")]
	public ThrowerSide()
	{
	}
}
[Token(Token = "0x2000096")]
public class ThrowObject : MonoBehaviour
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] rends;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color startColor;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color brightColor;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color cv;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float dis;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float startDis;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xBD1F98", Offset = "0xBD1F98", VA = "0xBD1F98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xBD21E4", Offset = "0xBD21E4", VA = "0xBD21E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xBD2390", Offset = "0xBD2390", VA = "0xBD2390")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xBD23C4", Offset = "0xBD23C4", VA = "0xBD23C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBD24C8", Offset = "0xBD24C8", VA = "0xBD24C8")]
	public ThrowObject()
	{
	}
}
[Token(Token = "0x2000097")]
public class BeatMaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000098")]
	public struct Beat
	{
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform point;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float time;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Obstacle.Type type;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float breakDistance;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float cryptography;
	}

	[Token(Token = "0x2000099")]
	public struct WhereChangeMove
	{
		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timeChange;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool isPlayerMove;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float posY;
	}

	[Token(Token = "0x200009A")]
	[CompilerGenerated]
	private sealed class <StopProcess>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeatMaker <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000164")]
			[Address(RVA = "0xBD5378", Offset = "0xBD5378", VA = "0xBD5378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000166")]
			[Address(RVA = "0xBD53C0", Offset = "0xBD53C0", VA = "0xBD53C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0xBD33CC", Offset = "0xBD33CC", VA = "0xBD33CC")]
		[DebuggerHidden]
		public <StopProcess>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0xBD5200", Offset = "0xBD5200", VA = "0xBD5200", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0xBD5204", Offset = "0xBD5204", VA = "0xBD5204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xBD5380", Offset = "0xBD5380", VA = "0xBD5380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DifficultyLevel difficulty;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool started;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float t;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float musicStartTime;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int n;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<Obstacle, int> onSpawnObstacle;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Custm Song Path")]
	public bool customSong;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float delayMusic;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Beat[] beats;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float[] startTimes;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] bosses;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] bossPoints;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] bossSpawnTimes;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public int bossAttacks;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pauseTime;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string fileName;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MenuLevelEditor.EnvironmentData[] environmentDatas;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MenuLevelEditor.EnvironmentData[] environmentBoxesDatas;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject groundCube;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool doIt;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Spawner sp;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject testCube;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float bpm;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private float preTime;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float bossActionTime;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<WhereChangeMove> _whereChangeMoves;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool isPlayerMove;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBD24DC", Offset = "0xBD24DC", VA = "0xBD24DC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBD2E84", Offset = "0xBD2E84", VA = "0xBD2E84")]
	public float[] GetStartTimes()
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xBD2E8C", Offset = "0xBD2E8C", VA = "0xBD2E8C")]
	public float GetBeatAccuracy()
	{
		return default(float);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xBD2EE8", Offset = "0xBD2EE8", VA = "0xBD2EE8", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xBD3358", Offset = "0xBD3358", VA = "0xBD3358")]
	[IteratorStateMachine(typeof(<StopProcess>d__20))]
	private IEnumerator StopProcess()
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xBD33F4", Offset = "0xBD33F4", VA = "0xBD33F4", Slot = "6")]
	public virtual void StopBeatMaker()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xBD345C", Offset = "0xBD345C", VA = "0xBD345C", Slot = "7")]
	public virtual void StartMusic()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xBD37B8", Offset = "0xBD37B8", VA = "0xBD37B8")]
	private void SetPositionOnTime()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xBD4710", Offset = "0xBD4710", VA = "0xBD4710")]
	protected void PlayMusic()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xBD4744", Offset = "0xBD4744", VA = "0xBD4744")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xBD4788", Offset = "0xBD4788", VA = "0xBD4788")]
	protected void Pause()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xBD47AC", Offset = "0xBD47AC", VA = "0xBD47AC")]
	protected void Resume()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xBD47EC", Offset = "0xBD47EC", VA = "0xBD47EC")]
	public float GetTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xBD47F4", Offset = "0xBD47F4", VA = "0xBD47F4", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xBD2A14", Offset = "0xBD2A14", VA = "0xBD2A14")]
	private void ReadBeats()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xBD2C78", Offset = "0xBD2C78", VA = "0xBD2C78")]
	private void ReadEnvironmentBlocks(string path = "")
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xBD4AB0", Offset = "0xBD4AB0", VA = "0xBD4AB0")]
	public void ReadFromFile(bool useBossBots = false)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xBD5098", Offset = "0xBD5098", VA = "0xBD5098")]
	public float GetBPM()
	{
		return default(float);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xBD50A0", Offset = "0xBD50A0", VA = "0xBD50A0")]
	public float GetPreTime()
	{
		return default(float);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xBD3980", Offset = "0xBD3980", VA = "0xBD3980")]
	public void CalculatePositionAtTime()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xBD50A8", Offset = "0xBD50A8", VA = "0xBD50A8")]
	private void AddWhereChangeMove(bool state, float time, float posY = 0f)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xBD4410", Offset = "0xBD4410", VA = "0xBD4410")]
	private void ChangeMoveDistanceAndSetPosition(float time)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xBD5178", Offset = "0xBD5178", VA = "0xBD5178")]
	public BeatMaker()
	{
	}
}
[Token(Token = "0x200009B")]
public class BeatMakerMultyBoss : BeatMaker
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Vector3 startPlayerPoint;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool isMove;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xBD53C8", Offset = "0xBD53C8", VA = "0xBD53C8", Slot = "7")]
	public override void StartMusic()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xBD5464", Offset = "0xBD5464", VA = "0xBD5464")]
	public BeatMakerMultyBoss()
	{
	}
}
[Token(Token = "0x200009C")]
public class BeatMakerRef : MonoBehaviour
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BeatMaker[] beatMakers;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BeatMakerRef instance;

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xBD5468", Offset = "0xBD5468", VA = "0xBD5468")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xBD5538", Offset = "0xBD5538", VA = "0xBD5538")]
	public BeatMaker GetBeatMaker(DifficultyLevel difficulty)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xBD54C8", Offset = "0xBD54C8", VA = "0xBD54C8")]
	public void SwitchOff()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xBD5588", Offset = "0xBD5588", VA = "0xBD5588")]
	public BeatMakerRef()
	{
	}
}
[Token(Token = "0x200009D")]
public class BeatInvoker : MonoBehaviour
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnMiss;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnHitInBeat;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnHitInNotBeat;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static BeatInvoker Instance;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BotBGInvokerParameters Parameters;

	[Token(Token = "0x1700001B")]
	public float BeatTime
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0xBD5590", Offset = "0xBD5590", VA = "0xBD5590")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0xBD5598", Offset = "0xBD5598", VA = "0xBD5598")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xBD55A0", Offset = "0xBD55A0", VA = "0xBD55A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xBD56A0", Offset = "0xBD56A0", VA = "0xBD56A0")]
	public void InvokeLight(BeatState state, float beatTime)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xBD5848", Offset = "0xBD5848", VA = "0xBD5848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xBD584C", Offset = "0xBD584C", VA = "0xBD584C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xBD5850", Offset = "0xBD5850", VA = "0xBD5850")]
	public BeatInvoker()
	{
	}
}
[Token(Token = "0x200009E")]
public enum BeatState
{
	[Token(Token = "0x4000243")]
	miss,
	[Token(Token = "0x4000244")]
	hitinbeat,
	[Token(Token = "0x4000245")]
	hitinnotbeat
}
[Token(Token = "0x200009F")]
public class BGLighterCustomParameters : MonoBehaviour
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BotBGInvokerParameters Parameters;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xBD5858", Offset = "0xBD5858", VA = "0xBD5858")]
	private void Start()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xBD58B4", Offset = "0xBD58B4", VA = "0xBD58B4")]
	public BGLighterCustomParameters()
	{
	}
}
[Token(Token = "0x20000A0")]
public class BotBGInvoker : MonoBehaviour
{
	[Token(Token = "0x20000A1")]
	[CompilerGenerated]
	private sealed class <LateStart>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotBGInvoker <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600017E")]
			[Address(RVA = "0xBD5FA0", Offset = "0xBD5FA0", VA = "0xBD5FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000180")]
			[Address(RVA = "0xBD5FE8", Offset = "0xBD5FE8", VA = "0xBD5FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0xBD5A34", Offset = "0xBD5A34", VA = "0xBD5A34")]
		[DebuggerHidden]
		public <LateStart>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0xBD5D58", Offset = "0xBD5D58", VA = "0xBD5D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0xBD5D5C", Offset = "0xBD5D5C", VA = "0xBD5D5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xBD5FA8", Offset = "0xBD5FA8", VA = "0xBD5FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _offset;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Enemy _enemyBot;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _time;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _timeStart;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeBeat;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timeChange;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xBD58BC", Offset = "0xBD58BC", VA = "0xBD58BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xBD59C0", Offset = "0xBD59C0", VA = "0xBD59C0")]
	[IteratorStateMachine(typeof(<LateStart>d__7))]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xBD5A5C", Offset = "0xBD5A5C", VA = "0xBD5A5C")]
	private void EnemyKilled()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xBD5C44", Offset = "0xBD5C44", VA = "0xBD5C44")]
	private void EnemyMiss()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xBD5D44", Offset = "0xBD5D44", VA = "0xBD5D44")]
	public BotBGInvoker()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A2")]
[CreateAssetMenu(fileName = "BG Parameters", menuName = "Against/Enemy/BG Parameters")]
public class BotBGInvokerParameters : ScriptableObject
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ImpactErrorPercent;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Accuracy;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color ColorHitInBeat;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color ColorHitInNotBeat;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color ColorMiss;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color ColorExtraMultply;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float LightIntensity;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve Relax;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float TimeLenght;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float TimeExtraLenght;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float TimeVignette;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<TimeSequence> TimeSequenceList;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool IsShine;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xBD5FF0", Offset = "0xBD5FF0", VA = "0xBD5FF0")]
	public BotBGInvokerParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A3")]
public class TimeSequence
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float TimeStart;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TimeEnd;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xBD6004", Offset = "0xBD6004", VA = "0xBD6004")]
	public TimeSequence()
	{
	}
}
[Token(Token = "0x20000A4")]
public class BringBGEmiter : MonoBehaviour, IBringLight
{
	[Token(Token = "0x20000A5")]
	[CompilerGenerated]
	private sealed class <PlayLight>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BringBGEmiter <>4__this;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float offset;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018E")]
			[Address(RVA = "0xBD68F4", Offset = "0xBD68F4", VA = "0xBD68F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000190")]
			[Address(RVA = "0xBD693C", Offset = "0xBD693C", VA = "0xBD693C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xBD654C", Offset = "0xBD654C", VA = "0xBD654C")]
		[DebuggerHidden]
		public <PlayLight>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xBD677C", Offset = "0xBD677C", VA = "0xBD677C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xBD6780", Offset = "0xBD6780", VA = "0xBD6780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xBD68FC", Offset = "0xBD68FC", VA = "0xBD68FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem _lines;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xBD600C", Offset = "0xBD600C", VA = "0xBD600C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xBD610C", Offset = "0xBD610C", VA = "0xBD610C", Slot = "4")]
	public void Subscribe()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xBD632C", Offset = "0xBD632C", VA = "0xBD632C", Slot = "5")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xBD6454", Offset = "0xBD6454", VA = "0xBD6454", Slot = "6")]
	public void NotHit()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xBD64D0", Offset = "0xBD64D0", VA = "0xBD64D0", Slot = "7")]
	public void Miss()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xBD63A8", Offset = "0xBD63A8", VA = "0xBD63A8")]
	[IteratorStateMachine(typeof(<PlayLight>d__6))]
	private IEnumerator PlayLight(Color color, float offset)
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xBD6574", Offset = "0xBD6574", VA = "0xBD6574")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xBD6774", Offset = "0xBD6774", VA = "0xBD6774")]
	public BringBGEmiter()
	{
	}
}
[Token(Token = "0x20000A6")]
public class BringFog : MonoBehaviour, IBringLight
{
	[Token(Token = "0x20000A7")]
	[CompilerGenerated]
	private sealed class <CalcMutantColor>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BringFog <>4__this;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeIteration>5__2;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeCurent>5__3;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600019F")]
			[Address(RVA = "0xBD7554", Offset = "0xBD7554", VA = "0xBD7554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0xBD759C", Offset = "0xBD759C", VA = "0xBD759C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xBD7354", Offset = "0xBD7354", VA = "0xBD7354")]
		[DebuggerHidden]
		public <CalcMutantColor>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xBD737C", Offset = "0xBD737C", VA = "0xBD737C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xBD7380", Offset = "0xBD7380", VA = "0xBD7380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xBD755C", Offset = "0xBD755C", VA = "0xBD755C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A8")]
	[CompilerGenerated]
	private sealed class <PlayLight>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BringFog <>4__this;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeIteration>5__2;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeCurent>5__3;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A5")]
			[Address(RVA = "0xBD77C4", Offset = "0xBD77C4", VA = "0xBD77C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0xBD780C", Offset = "0xBD780C", VA = "0xBD780C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xBD75A4", Offset = "0xBD75A4", VA = "0xBD75A4")]
		[DebuggerHidden]
		public <PlayLight>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xBD75CC", Offset = "0xBD75CC", VA = "0xBD75CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xBD75D0", Offset = "0xBD75D0", VA = "0xBD75D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xBD77CC", Offset = "0xBD77CC", VA = "0xBD77CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HeightFogGlobal _fog;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color _colorFog;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color _colorLight;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _colorExtra;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _colorMutant;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _busy;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _indexOldMaxMultyply;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine extraColor;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine playLight;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xBD6944", Offset = "0xBD6944", VA = "0xBD6944", Slot = "5")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xBD6AEC", Offset = "0xBD6AEC", VA = "0xBD6AEC", Slot = "7")]
	public void Miss()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xBD6B98", Offset = "0xBD6B98", VA = "0xBD6B98", Slot = "6")]
	public void NotHit()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xBD6C44", Offset = "0xBD6C44", VA = "0xBD6C44", Slot = "4")]
	public void Subscribe()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xBD69F0", Offset = "0xBD69F0", VA = "0xBD69F0")]
	private void ExtraColor(int index)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xBD6F2C", Offset = "0xBD6F2C", VA = "0xBD6F2C")]
	[IteratorStateMachine(typeof(<CalcMutantColor>d__14))]
	public IEnumerator CalcMutantColor()
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xBD6FA0", Offset = "0xBD6FA0", VA = "0xBD6FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xBD6A78", Offset = "0xBD6A78", VA = "0xBD6A78")]
	[IteratorStateMachine(typeof(<PlayLight>d__16))]
	public IEnumerator PlayLight()
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xBD7018", Offset = "0xBD7018", VA = "0xBD7018")]
	private Color Mixing(Color color1, Color color2, float p)
	{
		return default(Color);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xBD7064", Offset = "0xBD7064", VA = "0xBD7064")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xBD734C", Offset = "0xBD734C", VA = "0xBD734C")]
	public BringFog()
	{
	}
}
[Token(Token = "0x20000A9")]
public class BringHDRMaterials : MonoBehaviour, IBringLight
{
	[Token(Token = "0x20000AA")]
	[CompilerGenerated]
	private sealed class <PlayLight>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accuracy;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float intencityFactor;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BringHDRMaterials <>4__this;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve relax;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <timeIteration>5__2;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <timeCurent>5__3;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B4")]
			[Address(RVA = "0xBD8668", Offset = "0xBD8668", VA = "0xBD8668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B6")]
			[Address(RVA = "0xBD86B0", Offset = "0xBD86B0", VA = "0xBD86B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xBD7F90", Offset = "0xBD7F90", VA = "0xBD7F90")]
		[DebuggerHidden]
		public <PlayLight>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xBD8364", Offset = "0xBD8364", VA = "0xBD8364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xBD8368", Offset = "0xBD8368", VA = "0xBD8368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xBD8670", Offset = "0xBD8670", VA = "0xBD8670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<MaterialsForBrigtness> _sceneMaterialTypes;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xBD7814", Offset = "0xBD7814", VA = "0xBD7814")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xBD7B1C", Offset = "0xBD7B1C", VA = "0xBD7B1C", Slot = "4")]
	public void Subscribe()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xBD7D1C", Offset = "0xBD7D1C", VA = "0xBD7D1C", Slot = "5")]
	public void Hit()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xBD7E80", Offset = "0xBD7E80", VA = "0xBD7E80", Slot = "6")]
	public void NotHit()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xBD7F08", Offset = "0xBD7F08", VA = "0xBD7F08", Slot = "7")]
	public void Miss()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xBD7DA4", Offset = "0xBD7DA4", VA = "0xBD7DA4")]
	[IteratorStateMachine(typeof(<PlayLight>d__6))]
	public IEnumerator PlayLight(Color color, float intencityFactor, float offset, float accuracy, AnimationCurve relax)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xBD7FB8", Offset = "0xBD7FB8", VA = "0xBD7FB8")]
	private Color Mixing(Color color1, Color color2, float p)
	{
		return default(Color);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xBD8004", Offset = "0xBD8004", VA = "0xBD8004")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xBD835C", Offset = "0xBD835C", VA = "0xBD835C")]
	public BringHDRMaterials()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AB")]
public class MaterialsForBrigtness
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Material> SceneHDRMaterials;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Color> SceneHDROriginColors;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Default;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string HDRName;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xBD86B8", Offset = "0xBD86B8", VA = "0xBD86B8")]
	public MaterialsForBrigtness()
	{
	}
}
[Token(Token = "0x20000AC")]
public interface IBringLight
{
	[Token(Token = "0x60001B8")]
	void Subscribe();

	[Token(Token = "0x60001B9")]
	void Hit();

	[Token(Token = "0x60001BA")]
	void NotHit();

	[Token(Token = "0x60001BB")]
	void Miss();
}
[Token(Token = "0x20000AD")]
public class AddedArrows : MonoBehaviour
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject arrows;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xBD86C0", Offset = "0xBD86C0", VA = "0xBD86C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xBD8778", Offset = "0xBD8778", VA = "0xBD8778")]
	private void Subscibe()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xBD8884", Offset = "0xBD8884", VA = "0xBD8884")]
	private void HitCheck(Collider coll)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xBD8938", Offset = "0xBD8938", VA = "0xBD8938")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xBD8A44", Offset = "0xBD8A44", VA = "0xBD8A44")]
	public AddedArrows()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Bat : MonoBehaviour
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animFactor;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xBD8A4C", Offset = "0xBD8A4C", VA = "0xBD8A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xBD8B7C", Offset = "0xBD8B7C", VA = "0xBD8B7C")]
	private void StopAnim()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xBD8B9C", Offset = "0xBD8B9C", VA = "0xBD8B9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xBD8CA0", Offset = "0xBD8CA0", VA = "0xBD8CA0")]
	public Bat()
	{
	}
}
[Token(Token = "0x20000AF")]
public class BlockDamager : MonoBehaviour
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider[] colls;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] effects;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] rends;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnHit;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xBD8CB0", Offset = "0xBD8CB0", VA = "0xBD8CB0")]
	public void Hit()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xBD8E18", Offset = "0xBD8E18", VA = "0xBD8E18")]
	public BlockDamager()
	{
	}
}
[Token(Token = "0x20000B0")]
public class BrokenFloorCreator : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject floor;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useScale;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject staticFloor;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xBD8E20", Offset = "0xBD8E20", VA = "0xBD8E20")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xBD8E24", Offset = "0xBD8E24", VA = "0xBD8E24")]
	private void Create()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xBD908C", Offset = "0xBD908C", VA = "0xBD908C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xBD9090", Offset = "0xBD9090", VA = "0xBD9090")]
	public BrokenFloorCreator()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ChangebleJumpBlock : Obstacle, IDistanceChangeable
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform maxPoint;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform endPoint;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public JumpChecker jumpChecker;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RunChecker runChecker;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Grenade grenade;

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xBD9098", Offset = "0xBD9098", VA = "0xBD9098", Slot = "8")]
	public void Set(float distance, float cryptography)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xBD94B0", Offset = "0xBD94B0", VA = "0xBD94B0", Slot = "9")]
	public virtual void RunSet(bool state)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xBD94D0", Offset = "0xBD94D0", VA = "0xBD94D0")]
	private void CheckExplosionCounting()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xBD9598", Offset = "0xBD9598", VA = "0xBD9598", Slot = "10")]
	protected virtual bool IsPlayerRunnig()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xBD95FC", Offset = "0xBD95FC", VA = "0xBD95FC")]
	public ChangebleJumpBlock()
	{
	}
}
[Token(Token = "0x20000B2")]
public class DistanceAction : MonoBehaviour, IDistanceChangeable
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DistanceChanger[] distanceChangers;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xBD9654", Offset = "0xBD9654", VA = "0xBD9654", Slot = "4")]
	public void Set(float distance, float cryptography)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xBD96C8", Offset = "0xBD96C8", VA = "0xBD96C8")]
	public DistanceAction()
	{
	}
}
[Token(Token = "0x20000B3")]
public class DistanceChanger : MonoBehaviour
{
	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xBD96D0", Offset = "0xBD96D0", VA = "0xBD96D0", Slot = "4")]
	public virtual void Set(float distance)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xBD96D4", Offset = "0xBD96D4", VA = "0xBD96D4")]
	public DistanceChanger()
	{
	}
}
[Token(Token = "0x20000B4")]
public class Explosion : MonoBehaviour
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] rigidbodies;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float force;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer[] rends;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] startScale;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve decCurve;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool dec;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float decTime;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform player;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerMover playerMover;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnExplode;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BrokenFloorCreator brokenFloorCreator;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool check;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool checkByPoint;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xBD96DC", Offset = "0xBD96DC", VA = "0xBD96DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xBD9974", Offset = "0xBD9974", VA = "0xBD9974")]
	private void Hide()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xBD99D8", Offset = "0xBD99D8", VA = "0xBD99D8")]
	private void Show()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xBD9A3C", Offset = "0xBD9A3C", VA = "0xBD9A3C")]
	public void Boom()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xBD9B6C", Offset = "0xBD9B6C", VA = "0xBD9B6C")]
	private void Dec()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xBD9B78", Offset = "0xBD9B78", VA = "0xBD9B78")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xBD9E60", Offset = "0xBD9E60", VA = "0xBD9E60")]
	public Explosion()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ExplosionSlowMotion : MonoBehaviour
{
	[Token(Token = "0x20000B6")]
	[CompilerGenerated]
	private sealed class <SlowMoIn>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosionSlowMotion <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E2")]
			[Address(RVA = "0xBDA1BC", Offset = "0xBDA1BC", VA = "0xBDA1BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0xBDA204", Offset = "0xBDA204", VA = "0xBDA204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xBD9F90", Offset = "0xBD9F90", VA = "0xBD9F90")]
		[DebuggerHidden]
		public <SlowMoIn>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xBD9FF8", Offset = "0xBD9FF8", VA = "0xBD9FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xBD9FFC", Offset = "0xBD9FFC", VA = "0xBD9FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xBDA1C4", Offset = "0xBDA1C4", VA = "0xBDA1C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B7")]
	[CompilerGenerated]
	private sealed class <SlowMoOut>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosionSlowMotion <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E8")]
			[Address(RVA = "0xBDA41C", Offset = "0xBDA41C", VA = "0xBDA41C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EA")]
			[Address(RVA = "0xBDA464", Offset = "0xBDA464", VA = "0xBDA464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xBD9FB8", Offset = "0xBD9FB8", VA = "0xBD9FB8")]
		[DebuggerHidden]
		public <SlowMoOut>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xBDA20C", Offset = "0xBDA20C", VA = "0xBDA20C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xBDA210", Offset = "0xBDA210", VA = "0xBDA210", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xBDA424", Offset = "0xBDA424", VA = "0xBDA424", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeScale;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float musicPitch;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xBD9E7C", Offset = "0xBD9E7C", VA = "0xBD9E7C")]
	public void Activate(bool state)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xBD9EA8", Offset = "0xBD9EA8", VA = "0xBD9EA8")]
	[IteratorStateMachine(typeof(<SlowMoIn>d__4))]
	private IEnumerator SlowMoIn()
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xBD9F1C", Offset = "0xBD9F1C", VA = "0xBD9F1C")]
	[IteratorStateMachine(typeof(<SlowMoOut>d__5))]
	private IEnumerator SlowMoOut()
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xBD9FE0", Offset = "0xBD9FE0", VA = "0xBD9FE0")]
	public ExplosionSlowMotion()
	{
	}
}
[Token(Token = "0x20000B8")]
public class FallChecker : MotionChecker
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xBDA46C", Offset = "0xBDA46C", VA = "0xBDA46C", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xBDA4DC", Offset = "0xBDA4DC", VA = "0xBDA4DC")]
	private void Fall()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xBDA588", Offset = "0xBDA588", VA = "0xBDA588")]
	public FallChecker()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ForciblyMover : Obstacle, IDistanceChangeable
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform endPoint;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool invoked;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool completed;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform player;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform playerHead;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xBDA598", Offset = "0xBDA598", VA = "0xBDA598", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xBDA634", Offset = "0xBDA634", VA = "0xBDA634", Slot = "8")]
	public void Set(float distance, float cryptography = 0f)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xBDA77C", Offset = "0xBDA77C", VA = "0xBDA77C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xBDA8D4", Offset = "0xBDA8D4", VA = "0xBDA8D4", Slot = "9")]
	protected virtual void MovePlayer(bool state, Transform movePoint)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xBDA948", Offset = "0xBDA948", VA = "0xBDA948")]
	public ForciblyMover()
	{
	}
}
[Token(Token = "0x20000BA")]
public class HitArrowsChecker : PreJumpActionChecker
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool leftHandTrigged;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	protected bool rightHandTrigged;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandController leftHand;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandController rightHand;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float leftHandVelocity;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float rightHandVelocity;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool missCheck;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xBDA9A0", Offset = "0xBDA9A0", VA = "0xBDA9A0", Slot = "4")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xBDAC68", Offset = "0xBDAC68", VA = "0xBDAC68", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xBDADD8", Offset = "0xBDADD8", VA = "0xBDADD8", Slot = "6")]
	public override void Hit()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xBDAF60", Offset = "0xBDAF60", VA = "0xBDAF60")]
	public void MissHit()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xBDB058", Offset = "0xBDB058", VA = "0xBDB058")]
	public HitArrowsChecker()
	{
	}
}
[Token(Token = "0x20000BB")]
public class Hook : PreJumpActionChecker
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool handTrigged;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandController hand;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject visual;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject arc;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform hookPoint;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject hookLine;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HookLine hookRope;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 startHandPos;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xBDB068", Offset = "0xBDB068", VA = "0xBDB068", Slot = "4")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xBDB1B8", Offset = "0xBDB1B8", VA = "0xBDB1B8")]
	private void GrapplingShoot()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xBDB3AC", Offset = "0xBDB3AC", VA = "0xBDB3AC", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xBDB5DC", Offset = "0xBDB5DC", VA = "0xBDB5DC", Slot = "6")]
	public override void Hit()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xBDB718", Offset = "0xBDB718", VA = "0xBDB718")]
	public Hook()
	{
	}
}
[Token(Token = "0x20000BC")]
public interface IDistanceChangeable
{
	[Token(Token = "0x60001FD")]
	void Set(float distance, float cryptography = 0f);
}
[Token(Token = "0x20000BD")]
public class Inverter : MonoBehaviour
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useScale;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xBDB720", Offset = "0xBDB720", VA = "0xBDB720")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xBDB94C", Offset = "0xBDB94C", VA = "0xBDB94C")]
	public Inverter()
	{
	}
}
[Token(Token = "0x20000BE")]
public class JumpChecker : MotionChecker
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform playerPoint;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform maxHeightPoint;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endPoint;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool gravity;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool jumpInPlace;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xBDB954", Offset = "0xBDB954", VA = "0xBDB954", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xBDBBE0", Offset = "0xBDBBE0", VA = "0xBDBBE0")]
	public JumpChecker()
	{
	}
}
[Token(Token = "0x20000BF")]
public class MotionChecker : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PreJumpActionChecker hitArrowsChecker;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool infinity;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xBDBBE8", Offset = "0xBDBBE8", VA = "0xBDBBE8", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xBDA4CC", Offset = "0xBDA4CC", VA = "0xBDA4CC", Slot = "5")]
	protected virtual void Check()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xBDBCB0", Offset = "0xBDBCB0", VA = "0xBDBCB0")]
	public void Unsubscribe()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xBDBD78", Offset = "0xBDBD78", VA = "0xBDBD78", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xBDA590", Offset = "0xBDA590", VA = "0xBDA590")]
	public MotionChecker()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MovableBlockSpeed : DistanceChanger
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MovableObstacle movableObstacle;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xBDBD7C", Offset = "0xBDBD7C", VA = "0xBDBD7C", Slot = "4")]
	public override void Set(float distance)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xBDBD98", Offset = "0xBDBD98", VA = "0xBDBD98")]
	public MovableBlockSpeed()
	{
	}
}
[Token(Token = "0x20000C1")]
public class PauseBreaker : MonoBehaviour
{
	[Token(Token = "0x6000209")]
	[Address(RVA = "0xBDBDA0", Offset = "0xBDBDA0", VA = "0xBDBDA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xBDBDF0", Offset = "0xBDBDF0", VA = "0xBDBDF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xBDBDF4", Offset = "0xBDBDF4", VA = "0xBDBDF4")]
	public PauseBreaker()
	{
	}
}
[Token(Token = "0x20000C2")]
public class PreJumpActionChecker : MonoBehaviour
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider coll;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnHitted;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xBDAC64", Offset = "0xBDAC64", VA = "0xBDAC64", Slot = "4")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xBDADD4", Offset = "0xBDADD4", VA = "0xBDADD4", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xBDAE9C", Offset = "0xBDAE9C", VA = "0xBDAE9C", Slot = "6")]
	public virtual void Hit()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xBDB060", Offset = "0xBDB060", VA = "0xBDB060")]
	public PreJumpActionChecker()
	{
	}
}
[Token(Token = "0x20000C3")]
public class RunChecker : MotionChecker
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool run;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform movePoint;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grenade grenade;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Grenade grenadeStopParam;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xBDBDFC", Offset = "0xBDBDFC", VA = "0xBDBDFC", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xBDBF28", Offset = "0xBDBF28", VA = "0xBDBF28")]
	public RunChecker()
	{
	}
}
[Token(Token = "0x20000C4")]
public class SideBlock : DistanceChanger
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject block;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool test;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xBDBF30", Offset = "0xBDBF30", VA = "0xBDBF30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xBDC014", Offset = "0xBDC014", VA = "0xBDC014", Slot = "4")]
	public override void Set(float distance)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xBDC044", Offset = "0xBDC044", VA = "0xBDC044")]
	public SideBlock()
	{
	}
}
[Token(Token = "0x20000C5")]
public class UIBoxerNew : UISignalState
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LookAt _lookAt;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UIBoxerTarget _boxerTargetUI;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xBDC04C", Offset = "0xBDC04C", VA = "0xBDC04C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xBDC2FC", Offset = "0xBDC2FC", VA = "0xBDC2FC")]
	public UIBoxerNew()
	{
	}
}
[Token(Token = "0x20000C6")]
public class UIChangeScaleFromDist : UISignalState
{
	[Token(Token = "0x20000C7")]
	[CompilerGenerated]
	private sealed class <LateStart>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIChangeScaleFromDist <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0xBDC69C", Offset = "0xBDC69C", VA = "0xBDC69C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000220")]
			[Address(RVA = "0xBDC6E4", Offset = "0xBDC6E4", VA = "0xBDC6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0xBDC414", Offset = "0xBDC414", VA = "0xBDC414")]
		[DebuggerHidden]
		public <LateStart>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0xBDC55C", Offset = "0xBDC55C", VA = "0xBDC55C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0xBDC560", Offset = "0xBDC560", VA = "0xBDC560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0xBDC6A4", Offset = "0xBDC6A4", VA = "0xBDC6A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _offset;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _myPosition;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _playerPosition;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _myPositionCurent;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _playerPositionCurent;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _distanceBetweenMeAndPlayer;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _distanceCurentBetweenMeAndPlayer;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _distance;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _lego;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xBDC30C", Offset = "0xBDC30C", VA = "0xBDC30C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xBDC3A0", Offset = "0xBDC3A0", VA = "0xBDC3A0")]
	[IteratorStateMachine(typeof(<LateStart>d__10))]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xBDC43C", Offset = "0xBDC43C", VA = "0xBDC43C")]
	private void Update()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xBDC54C", Offset = "0xBDC54C", VA = "0xBDC54C")]
	public UIChangeScaleFromDist()
	{
	}
}
[Token(Token = "0x20000C8")]
public class UIShooterArrowState : UISignalState
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _rootUI;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _oldUI;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EnemyShooter _enemyShooter;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _time;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _power;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _timeStart;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _timeBeat;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _timeChange;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _change;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xBDC6EC", Offset = "0xBDC6EC", VA = "0xBDC6EC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xBDC7E0", Offset = "0xBDC7E0", VA = "0xBDC7E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xBDC874", Offset = "0xBDC874", VA = "0xBDC874")]
	public UIShooterArrowState()
	{
	}
}
[Token(Token = "0x20000C9")]
[RequireComponent(typeof(UICanvasState))]
public class UISignalState : MonoBehaviour
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected UICanvasArrowParameters _parameters;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected UICanvasState _uiCanvasState;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xBDC07C", Offset = "0xBDC07C", VA = "0xBDC07C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xBDC87C", Offset = "0xBDC87C", VA = "0xBDC87C", Slot = "5")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xBDC8A0", Offset = "0xBDC8A0", VA = "0xBDC8A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xBDC53C", Offset = "0xBDC53C", VA = "0xBDC53C")]
	protected float DistanceOneDirection(float x1, float x2)
	{
		return default(float);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xBDC304", Offset = "0xBDC304", VA = "0xBDC304")]
	public UISignalState()
	{
	}
}
[Token(Token = "0x20000CA")]
public class UIStateDirection : MonoBehaviour
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UICanvasState canvasState;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CutArrowDirection arrowDirection;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xBDCA68", Offset = "0xBDCA68", VA = "0xBDCA68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xBDCA90", Offset = "0xBDCA90", VA = "0xBDCA90")]
	public UIStateDirection()
	{
	}
}
[Token(Token = "0x20000CB")]
public class UIStateEnemyBeatTime : UISignalState
{
	[Token(Token = "0x20000CC")]
	[CompilerGenerated]
	private sealed class <StartChange>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateEnemyBeatTime <>4__this;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000234")]
			[Address(RVA = "0xBDD160", Offset = "0xBDD160", VA = "0xBDD160", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000236")]
			[Address(RVA = "0xBDD1A8", Offset = "0xBDD1A8", VA = "0xBDD1A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0xBDCBA0", Offset = "0xBDCBA0", VA = "0xBDCBA0")]
		[DebuggerHidden]
		public <StartChange>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0xBDCE40", Offset = "0xBDCE40", VA = "0xBDCE40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0xBDCE44", Offset = "0xBDCE44", VA = "0xBDCE44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0xBDD168", Offset = "0xBDD168", VA = "0xBDD168", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _beatOffset;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _timeStart;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeBeat;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timeChange;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _time;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _change;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xBDCA98", Offset = "0xBDCA98", VA = "0xBDCA98", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xBDCB2C", Offset = "0xBDCB2C", VA = "0xBDCB2C")]
	[IteratorStateMachine(typeof(<StartChange>d__7))]
	private IEnumerator StartChange()
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xBDCBC8", Offset = "0xBDCBC8", VA = "0xBDCBC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xBDCC58", Offset = "0xBDCC58", VA = "0xBDCC58")]
	public void Restart()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xBDCC70", Offset = "0xBDCC70", VA = "0xBDCC70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xBDCE38", Offset = "0xBDCE38", VA = "0xBDCE38")]
	public UIStateEnemyBeatTime()
	{
	}
}
[Token(Token = "0x20000CD")]
public class WallJumpChecker : MotionChecker
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform playerOrienatationPoint;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform fallPoint;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xBDD1B0", Offset = "0xBDD1B0", VA = "0xBDD1B0", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xBDD2A0", Offset = "0xBDD2A0", VA = "0xBDD2A0")]
	public WallJumpChecker()
	{
	}
}
[Token(Token = "0x20000CE")]
public class WallRunDistance : DistanceChanger
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lastArrows;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform fallPoint;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform block;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoxCollider boxCollider;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xBDD2A8", Offset = "0xBDD2A8", VA = "0xBDD2A8", Slot = "4")]
	public override void Set(float distance)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xBDD524", Offset = "0xBDD524", VA = "0xBDD524")]
	public WallRunDistance()
	{
	}
}
[Token(Token = "0x20000CF")]
[RequireComponent(typeof(Collider))]
public class WeaponBlock : MonoBehaviour, IDistanceChangeable
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HandWeapon type;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SphereCollider coll;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _bothHand;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _distance;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _cryptography;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Obstacle obstacle;

	[Token(Token = "0x1700002E")]
	public HandWeapon WeaponType
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0xBDD52C", Offset = "0xBDD52C", VA = "0xBDD52C")]
		get
		{
			return default(HandWeapon);
		}
	}

	[Token(Token = "0x1700002F")]
	public float Distance
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0xBDD534", Offset = "0xBDD534", VA = "0xBDD534")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000030")]
	public float Cryptography
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0xBDD53C", Offset = "0xBDD53C", VA = "0xBDD53C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000031")]
	public bool BothHand
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xBDD544", Offset = "0xBDD544", VA = "0xBDD544")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000032")]
	public float BeatTime
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xBDD54C", Offset = "0xBDD54C", VA = "0xBDD54C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xBDD568", Offset = "0xBDD568", VA = "0xBDD568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xBDD6AC", Offset = "0xBDD6AC", VA = "0xBDD6AC", Slot = "4")]
	public void Set(float distance, float cryptography = 0f)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xBDD6B4", Offset = "0xBDD6B4", VA = "0xBDD6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xBDD7E8", Offset = "0xBDD7E8", VA = "0xBDD7E8")]
	public void DestroyWB()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xBDD85C", Offset = "0xBDD85C", VA = "0xBDD85C")]
	public WeaponBlock()
	{
	}
}
[Token(Token = "0x20000D0")]
public class WeaponBlockFollower : MonoBehaviour
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform root;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float offset;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeaponBlock weaponBlock;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphereCollider coll;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform weapon;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftWeapon;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform fx;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canAim;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool aim;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float moveSpeed;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float rotationSpeed;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform leftHandPoint;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform rightHandPoint;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform handPoint;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool aimed;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xBDD864", Offset = "0xBDD864", VA = "0xBDD864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xBDDD40", Offset = "0xBDDD40", VA = "0xBDDD40")]
	private void HandAutoAim()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xBDDE18", Offset = "0xBDDE18", VA = "0xBDDE18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xBDE248", Offset = "0xBDE248", VA = "0xBDE248")]
	private void Pause()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xBDE278", Offset = "0xBDE278", VA = "0xBDE278")]
	private void Resume()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xBDE2A8", Offset = "0xBDE2A8", VA = "0xBDE2A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xBDE448", Offset = "0xBDE448", VA = "0xBDE448")]
	public WeaponBlockFollower()
	{
	}
}
[Token(Token = "0x20000D1")]
public class WeaponDistance : MonoBehaviour
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WeaponSwitcher leftWeaponSwitcher;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WeaponSwitcher rightWeaponSwitcher;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float endPos;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float endTime;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandType inHand;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool bothHands;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandWeapon currentWeapon;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xBDE464", Offset = "0xBDE464", VA = "0xBDE464")]
	private void Start()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xBDE590", Offset = "0xBDE590", VA = "0xBDE590")]
	public void Set(WeaponBlock wb)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xBDEEB8", Offset = "0xBDEEB8", VA = "0xBDEEB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xBDEBA4", Offset = "0xBDEBA4", VA = "0xBDEBA4")]
	public void CompletedWeapon()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xBDEF60", Offset = "0xBDEF60", VA = "0xBDEF60", Slot = "4")]
	public virtual float GetMusicTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xBDF0E0", Offset = "0xBDF0E0", VA = "0xBDF0E0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xBDF0F0", Offset = "0xBDF0F0", VA = "0xBDF0F0")]
	public HandWeapon GetCurrentWeapon()
	{
		return default(HandWeapon);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xBDF0F8", Offset = "0xBDF0F8", VA = "0xBDF0F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xBDF1FC", Offset = "0xBDF1FC", VA = "0xBDF1FC")]
	public WeaponDistance()
	{
	}
}
[Token(Token = "0x20000D2")]
public class Boss : BossBase, ICuttable, IShootable
{
	[Token(Token = "0x20000D3")]
	[CompilerGenerated]
	private sealed class <FollowToCatcher>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Boss <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0xBE0354", Offset = "0xBE0354", VA = "0xBE0354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026F")]
			[Address(RVA = "0xBE039C", Offset = "0xBE039C", VA = "0xBE039C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0xBE00C0", Offset = "0xBE00C0", VA = "0xBE00C0")]
		[DebuggerHidden]
		public <FollowToCatcher>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xBE0234", Offset = "0xBE0234", VA = "0xBE0234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xBE0238", Offset = "0xBE0238", VA = "0xBE0238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0xBE035C", Offset = "0xBE035C", VA = "0xBE035C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Boss _instance;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BossBeatMaker bossBeatMaker;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool checkDamage;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform playerHead;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandDamager;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform leftHandDamager;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CutArrow[] cutArrows;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer[] cutArrowRends;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UISignal[] uiSignals;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int arrowNumber;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] eyesPoints;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] eyePrefab;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] eyes;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Signal[] eyesSignals;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject blocksPrefab;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform[] blocksPoint;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BossBlocksExplosion[] blocksExplosion;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform playerCatcher;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Collider[] bodyColliders;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public DamageEffectShooted damageEffect;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] hittedParticles;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int eyeN;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int particlesN;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool stopFollower;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xBDF204", Offset = "0xBDF204", VA = "0xBDF204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xBDF25C", Offset = "0xBDF25C", VA = "0xBDF25C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xBDF9C8", Offset = "0xBDF9C8", VA = "0xBDF9C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xBDFC00", Offset = "0xBDFC00", VA = "0xBDFC00", Slot = "6")]
	public void Cutted(bool codirected, float parallelFactor, float distanceFactor, Vector3 hitVector, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xBDFD9C", Offset = "0xBDFD9C", VA = "0xBDFD9C", Slot = "7")]
	public void MakeReady()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xBDFDA0", Offset = "0xBDFDA0", VA = "0xBDFDA0")]
	private void CheckDamage()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xBDFBF8", Offset = "0xBDFBF8", VA = "0xBDFBF8")]
	private void UnCheckDamage()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xBDFDAC", Offset = "0xBDFDAC", VA = "0xBDFDAC")]
	private void ShowArrow()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xBDFDF8", Offset = "0xBDFDF8", VA = "0xBDFDF8")]
	private void ArrowSignaling()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xBDF4C8", Offset = "0xBDF4C8", VA = "0xBDF4C8")]
	private void HideArrows()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xBDFB44", Offset = "0xBDFB44", VA = "0xBDFB44")]
	private void DamagePlayer()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xBDFE34", Offset = "0xBDFE34", VA = "0xBDFE34")]
	private void EyesSignaling()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xBDFE84", Offset = "0xBDFE84", VA = "0xBDFE84")]
	private void RightHandBoom()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xBDFFA8", Offset = "0xBDFFA8", VA = "0xBDFFA8")]
	private void LeftHandBoom()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xBDFFD8", Offset = "0xBDFFD8", VA = "0xBDFFD8")]
	private void HittedParticles()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xBDF538", Offset = "0xBDF538", VA = "0xBDF538")]
	private void ResetComponents()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xBE002C", Offset = "0xBE002C", VA = "0xBE002C")]
	private void CatchPlayer()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xBE004C", Offset = "0xBE004C", VA = "0xBE004C")]
	[IteratorStateMachine(typeof(<FollowToCatcher>d__41))]
	private IEnumerator FollowToCatcher()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xBE00E8", Offset = "0xBE00E8", VA = "0xBE00E8")]
	private void UnCatchPlayer()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xBE00F4", Offset = "0xBE00F4", VA = "0xBE00F4")]
	private void Exploding()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xBE0224", Offset = "0xBE0224", VA = "0xBE0224")]
	public Boss()
	{
	}
}
[Token(Token = "0x20000D4")]
public class BossBase : MonoBehaviour
{
	[Token(Token = "0x6000270")]
	[Address(RVA = "0xBDF3C4", Offset = "0xBDF3C4", VA = "0xBDF3C4", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xBE03A4", Offset = "0xBE03A4", VA = "0xBE03A4")]
	private void DestroyMe()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xBE0410", Offset = "0xBE0410", VA = "0xBE0410", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xBE022C", Offset = "0xBE022C", VA = "0xBE022C")]
	public BossBase()
	{
	}
}
[Token(Token = "0x20000D5")]
public class BossBeatMaker : BossBeatMakerBase
{
	[Serializable]
	[Token(Token = "0x20000D6")]
	public struct BlockBeat
	{
		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject block;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Collider blockColl;
	}

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int damageTriggerNumber;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] damagedTriggers;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BlockBeat[] blockBeats;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] startTimes;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int blockNumber;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xBE0514", Offset = "0xBE0514", VA = "0xBE0514", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xBE076C", Offset = "0xBE076C", VA = "0xBE076C")]
	private void ResetCounting()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xBE0AB8", Offset = "0xBE0AB8", VA = "0xBE0AB8", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xBDA534", Offset = "0xBDA534", VA = "0xBDA534")]
	public void NextAnim()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xBE0BCC", Offset = "0xBE0BCC", VA = "0xBE0BCC")]
	private void BlockAction()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xBE0C74", Offset = "0xBE0C74", VA = "0xBE0C74")]
	public BossBeatMaker()
	{
	}
}
[Token(Token = "0x20000D7")]
public class BossBeatMakerBase : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000D8")]
	public struct AnimationBeat
	{
		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string triggerName;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;
	}

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BeatMaker beatMaker;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int n;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationBeat[] animationBeats;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xBE05E8", Offset = "0xBE05E8", VA = "0xBE05E8", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xBE0B44", Offset = "0xBE0B44", VA = "0xBE0B44", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xBE0C7C", Offset = "0xBE0C7C", VA = "0xBE0C7C")]
	public BossBeatMakerBase()
	{
	}
}
[Token(Token = "0x20000D9")]
public class BossBlocksExplosion : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] blocks;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform explosionPoint;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xBDFEB0", Offset = "0xBDFEB0", VA = "0xBDFEB0")]
	public void Boom()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xBE0C84", Offset = "0xBE0C84", VA = "0xBE0C84")]
	private void DestroyBlocks()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xBE0CF8", Offset = "0xBE0CF8", VA = "0xBE0CF8")]
	public BossBlocksExplosion()
	{
	}
}
[Token(Token = "0x20000DA")]
public class BossHitChecker : MonoBehaviour
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnemyMelee main;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Signal signal;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool checkDamage;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform playerHead;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform damagePoint;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xBE0D00", Offset = "0xBE0D00", VA = "0xBE0D00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xBE0E78", Offset = "0xBE0E78", VA = "0xBE0E78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xBE10AC", Offset = "0xBE10AC", VA = "0xBE10AC")]
	public void CheckDamage()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xBE1088", Offset = "0xBE1088", VA = "0xBE1088")]
	public void UnCheckDamage()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xBE0F7C", Offset = "0xBE0F7C", VA = "0xBE0F7C")]
	private void DamagePlayer()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xBE10B8", Offset = "0xBE10B8", VA = "0xBE10B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xBE1190", Offset = "0xBE1190", VA = "0xBE1190")]
	public BossHitChecker()
	{
	}
}
[Token(Token = "0x20000DB")]
public class FullFollower : MonoBehaviour
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Enemy main;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hide;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool follow;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float destroyTime;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xBE1198", Offset = "0xBE1198", VA = "0xBE1198")]
	private void Start()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xBE12EC", Offset = "0xBE12EC", VA = "0xBE12EC")]
	public void StopFollowing()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xBE140C", Offset = "0xBE140C", VA = "0xBE140C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xBE1560", Offset = "0xBE1560", VA = "0xBE1560")]
	public FullFollower()
	{
	}
}
[Token(Token = "0x20000DC")]
public class Spider2Boss : BossBase
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject web;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform webPoint;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform player;

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xBE1578", Offset = "0xBE1578", VA = "0xBE1578", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xBE15E8", Offset = "0xBE15E8", VA = "0xBE15E8")]
	public void WebShoot(Vector3 direction)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xBE176C", Offset = "0xBE176C", VA = "0xBE176C")]
	public float GetMoveSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xBE17C8", Offset = "0xBE17C8", VA = "0xBE17C8")]
	public Spider2Boss()
	{
	}
}
[Token(Token = "0x20000DD")]
public class Spider2BossBeatMaker : BossBeatMakerBase
{
	[Serializable]
	[Token(Token = "0x20000DE")]
	public struct WebBeat
	{
		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 direction;
	}

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WebBeat[] webBeats;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int w;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Spider2Boss spider;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xBE17D0", Offset = "0xBE17D0", VA = "0xBE17D0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xBE1AB8", Offset = "0xBE1AB8", VA = "0xBE1AB8", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xBE1B3C", Offset = "0xBE1B3C", VA = "0xBE1B3C")]
	public Spider2BossBeatMaker()
	{
	}
}
[Token(Token = "0x20000DF")]
public class SpiderBoss : BossBase
{
	[Token(Token = "0x20000E0")]
	public enum SpiderBlockType
	{
		[Token(Token = "0x4000362")]
		Left,
		[Token(Token = "0x4000363")]
		Right,
		[Token(Token = "0x4000364")]
		Up
	}

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spiderBlock;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftPoint;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightPoint;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform upPoint;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider shootCheckerCollider;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShootChecker shootChecker;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WeaponSwitcher ws;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xBE1B44", Offset = "0xBE1B44", VA = "0xBE1B44", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xBE1C00", Offset = "0xBE1C00", VA = "0xBE1C00")]
	public void CreateBlock(SpiderBlockType spiderBlockType)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xBE1CEC", Offset = "0xBE1CEC", VA = "0xBE1CEC")]
	public void ShootCheckerCollider()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xBE1D30", Offset = "0xBE1D30", VA = "0xBE1D30")]
	private void StopPlayer()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xBE1F00", Offset = "0xBE1F00", VA = "0xBE1F00")]
	private void StopPlayerMotion()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xBE1F5C", Offset = "0xBE1F5C", VA = "0xBE1F5C")]
	private void HideTarget()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xBE1FB4", Offset = "0xBE1FB4", VA = "0xBE1FB4", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xBE2138", Offset = "0xBE2138", VA = "0xBE2138")]
	public SpiderBoss()
	{
	}
}
[Token(Token = "0x20000E1")]
public class SpiderBossBeatMaker : BossBeatMakerBase
{
	[Token(Token = "0x600029A")]
	[Address(RVA = "0xBE2140", Offset = "0xBE2140", VA = "0xBE2140", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xBE21E4", Offset = "0xBE21E4", VA = "0xBE21E4")]
	public SpiderBossBeatMaker()
	{
	}
}
[Token(Token = "0x20000E2")]
public class SpiderHitTrigger : MonoBehaviour
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider coll;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject blood;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bloodPoint;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xBE21EC", Offset = "0xBE21EC", VA = "0xBE21EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xBE24B0", Offset = "0xBE24B0", VA = "0xBE24B0")]
	public SpiderHitTrigger()
	{
	}
}
[Token(Token = "0x20000E3")]
public class SpiderSignals : MonoBehaviour
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpiderBoss boss;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Signal shootSignal;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyShooter enemyShooter;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Signal[] cutSignals;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UISignal hitSignal;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hitTrigger;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider[] colliders;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] spiderParts;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIAttackPoint[] attackPoints;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int n;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform[] parts;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WeaponSwitcher leftWeaponSwitcher;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WeaponSwitcher rightWeaponSwitcher;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BossHitChecker[] legs;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xBE24B8", Offset = "0xBE24B8", VA = "0xBE24B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xBE26B8", Offset = "0xBE26B8", VA = "0xBE26B8")]
	private void DisableColliders()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xBE271C", Offset = "0xBE271C", VA = "0xBE271C")]
	private void EnableColliders()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xBE2790", Offset = "0xBE2790", VA = "0xBE2790")]
	private void Signaling()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xBE27AC", Offset = "0xBE27AC", VA = "0xBE27AC")]
	private void HitSignaling()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xBE27C8", Offset = "0xBE27C8", VA = "0xBE27C8")]
	private void HideHitSignal()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xBE27E4", Offset = "0xBE27E4", VA = "0xBE27E4")]
	private void ShowPart()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xBE2920", Offset = "0xBE2920", VA = "0xBE2920")]
	private void BeatSignal()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xBE2960", Offset = "0xBE2960", VA = "0xBE2960")]
	private void HitBeatSignal()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xBE297C", Offset = "0xBE297C", VA = "0xBE297C")]
	private void CheckParts()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xBE2AB8", Offset = "0xBE2AB8", VA = "0xBE2AB8")]
	private void ShowHitTrigger()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xBE2AD8", Offset = "0xBE2AD8", VA = "0xBE2AD8")]
	private void HideHitTrigger()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xBE2AF8", Offset = "0xBE2AF8", VA = "0xBE2AF8")]
	private void MissEnemy()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xBE2C18", Offset = "0xBE2C18", VA = "0xBE2C18")]
	private void MissAttack()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xBE2CF0", Offset = "0xBE2CF0", VA = "0xBE2CF0")]
	private void CreateLeftBlock()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xBE2D0C", Offset = "0xBE2D0C", VA = "0xBE2D0C")]
	private void CreateRightBlock()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xBE2D28", Offset = "0xBE2D28", VA = "0xBE2D28")]
	private void CreateUpBlock()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xBE2D44", Offset = "0xBE2D44", VA = "0xBE2D44")]
	private void ShootCheckerCollider()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xBE2D5C", Offset = "0xBE2D5C", VA = "0xBE2D5C")]
	private void CheckDamage1()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xBE2D90", Offset = "0xBE2D90", VA = "0xBE2D90")]
	private void UnCheckDamage1()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xBE2DBC", Offset = "0xBE2DBC", VA = "0xBE2DBC")]
	private void CheckDamage2()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xBE2DF4", Offset = "0xBE2DF4", VA = "0xBE2DF4")]
	private void UnCheckDamage2()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xBE2E24", Offset = "0xBE2E24", VA = "0xBE2E24")]
	private void CheckDamage3()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xBE2E5C", Offset = "0xBE2E5C", VA = "0xBE2E5C")]
	private void UnCheckDamage3()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xBE2E8C", Offset = "0xBE2E8C", VA = "0xBE2E8C")]
	private void CheckDamage4()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xBE2EC4", Offset = "0xBE2EC4", VA = "0xBE2EC4")]
	private void UnCheckDamage4()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xBE2EF4", Offset = "0xBE2EF4", VA = "0xBE2EF4")]
	private void HideFakePaws()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xBE2FB8", Offset = "0xBE2FB8", VA = "0xBE2FB8")]
	public SpiderSignals()
	{
	}
}
[Token(Token = "0x20000E4")]
[CreateAssetMenu(fileName = "EffectAsset", menuName = "JoyWay/Effect/EffectAsset")]
public class EffectAsset : ScriptableObject
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> effects;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xBE2FC0", Offset = "0xBE2FC0", VA = "0xBE2FC0")]
	public GameObject GetRandom()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xBE3050", Offset = "0xBE3050", VA = "0xBE3050")]
	public static implicit operator GameObject(EffectAsset asset)
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xBE3060", Offset = "0xBE3060", VA = "0xBE3060")]
	public EffectAsset()
	{
	}
}
[Token(Token = "0x20000E5")]
public class Balrog : MonoBehaviour
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Base")]
	[SerializeField]
	private DissolveController _dissolveController;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _portalEffectShow;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _portalEffectHide;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystemController _breathEffect;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Header("Audio")]
	private AudioSource _audioSource;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip _screamSound;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource _spearAudioSource;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip _swingSound;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Move")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float _backSpeed;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _runSpeed;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _rightStep;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform _leftStep;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _rightStepEffect;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject _leftStepEffect;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _currentSpeed;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _move;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Animation")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private string _param;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float _slowSpeed;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float _slowSpeedFoot;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _startSpeed;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[Header("FireWave")]
	private AngleShooter _rightShooter;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AngleShooter _leftShooter;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AngleShooter _upShooter;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private ParticleSystemController _rightHandFireEffect;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private ParticleSystemController _leftHandFireEffect;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float _delayShoot;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float _delayShootUp;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private BossAction _rightWaveAction;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private BossAction _leftWaveAction;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private BossAction _upWaveAction;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Direction _shootDirection;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	[Header("ThrowRock")]
	private GameObject _rock;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ParticleSystemController _rockEffect;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject _breakRockEffect;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private AudioSource _rockAudioSource;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private float _delayThrowRock;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private BossAction _throwRockAction;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private BlockDamager _rockDamager;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private ShootPointsBoss _rockShootPoints;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private DissolveController _rockDissolve;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ShootChecker _rockShootChecker;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private UISignal _uiSignalRock;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Header("ThrowSpear")]
	[SerializeField]
	private GameObject _spear;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private ParticleSystemController _spearEffect;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private ParticleSystemController _spearDissolveEffect;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject _dodgeSpear;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private AudioClip _spearSound;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private float _delayShowShootedBody;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[SerializeField]
	private float _delayThrowSpear;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private BossAction _throwSpearAction;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject _shootBody;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private BlockDamager _spearDamager;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private ShootPointsBoss _shootPointsBoss;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private UISignal _shootUI;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private DissolveController _spearDissolve;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private ShootChecker _shootChecker;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[Header("FootAttack")]
	private GameObject _footBlockR;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private float _footTimeMove;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	[SerializeField]
	private float _footDelayMoveBack;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private BossAction _footAction;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private UISignal _footUI_R;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private BladeObject _footBladeR;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool _isFootAttack;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[Header("WallAttack")]
	[SerializeField]
	private BossAction _handStayActionR;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private BossAction _handStayActionL;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	[Header("HandAttack")]
	private GameObject _handBlockR;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private GameObject _handBlockL;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private float _handTimeMove;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	[SerializeField]
	private float _handDelayMoveBack;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private float _handDelayStayAttack;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private BossAction _handActionR;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private BossAction _handActionL;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private UISignal _handUI_L;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private UISignal _handUI_R;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private BladeObject _handBlade_R;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private BladeObject _handBlade_L;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private CutArrowDirection _cutArrow_R;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private CutArrowDirection _cutArrow_L;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private bool _isRightHand;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x261")]
	private bool _isStay;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x262")]
	private bool _destroy;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	[Header("Slice")]
	private Enemy _enemy;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	private GameObject _puchEffect;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	private float _timeRun;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	private BossAction _sliceAction;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	private Collider[] _sliceColliders;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private GameObject _sliceSphere;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private DamageEffectCutted _damageEffectCutted;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private WaveSlice _waveSlice;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool _isLastAttack;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	private bool _isDamaged;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xBE3068", Offset = "0xBE3068", VA = "0xBE3068")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xBE3644", Offset = "0xBE3644", VA = "0xBE3644")]
	private void LinkToAction(bool state)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xBE3EFC", Offset = "0xBE3EFC", VA = "0xBE3EFC")]
	public void DamageToPlayer()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xBE40DC", Offset = "0xBE40DC", VA = "0xBE40DC")]
	public void Show()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xBE4124", Offset = "0xBE4124", VA = "0xBE4124")]
	public void HidePortal()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xBE41D0", Offset = "0xBE41D0", VA = "0xBE41D0")]
	public void Hide()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xBE422C", Offset = "0xBE422C", VA = "0xBE422C")]
	public void Breath()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xBE4260", Offset = "0xBE4260", VA = "0xBE4260")]
	public void Step(bool isRight)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xBE437C", Offset = "0xBE437C", VA = "0xBE437C")]
	private void StartThrowRock()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xBE43F0", Offset = "0xBE43F0", VA = "0xBE43F0")]
	private void ThrowRock()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xBE450C", Offset = "0xBE450C", VA = "0xBE450C")]
	private void BreakRock()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xBE467C", Offset = "0xBE467C", VA = "0xBE467C")]
	private void StopThrowRock()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xBE46B0", Offset = "0xBE46B0", VA = "0xBE46B0")]
	private void DissolveBreakRock()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xBE470C", Offset = "0xBE470C", VA = "0xBE470C")]
	public void StartThrowSpear()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xBE47E0", Offset = "0xBE47E0", VA = "0xBE47E0")]
	public void StartShootToBalrog()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xBE48FC", Offset = "0xBE48FC", VA = "0xBE48FC")]
	public void BreakThrowSpear()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xBE4A10", Offset = "0xBE4A10", VA = "0xBE4A10")]
	public void ThrowSpear()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xBE4B44", Offset = "0xBE4B44", VA = "0xBE4B44")]
	public void StopThrowSpear()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xBE4B8C", Offset = "0xBE4B8C", VA = "0xBE4B8C")]
	public void RigthWave()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xBE4BE4", Offset = "0xBE4BE4", VA = "0xBE4BE4")]
	public void LeftWave()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xBE4C3C", Offset = "0xBE4C3C", VA = "0xBE4C3C")]
	public void UpWave()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xBE4C90", Offset = "0xBE4C90", VA = "0xBE4C90")]
	private void StartFireWave()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xBE4C94", Offset = "0xBE4C94", VA = "0xBE4C94")]
	private void ShowFireEffect()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xBE4D3C", Offset = "0xBE4D3C", VA = "0xBE4D3C")]
	private void StartShoot()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xBE4E24", Offset = "0xBE4E24", VA = "0xBE4E24")]
	public void Slow()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xBE4E78", Offset = "0xBE4E78", VA = "0xBE4E78")]
	public void StopSlow()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xBE4EA0", Offset = "0xBE4EA0", VA = "0xBE4EA0")]
	public void StopWalkBackAnim()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xBE4EF8", Offset = "0xBE4EF8", VA = "0xBE4EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xBE4FDC", Offset = "0xBE4FDC", VA = "0xBE4FDC")]
	public void ForwardMove()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xBE4FF4", Offset = "0xBE4FF4", VA = "0xBE4FF4")]
	public void ForwardMove(float time)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xBE5064", Offset = "0xBE5064", VA = "0xBE5064")]
	public void BackwardMove()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xBE5078", Offset = "0xBE5078", VA = "0xBE5078")]
	public void BackwardMove(float time)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xBE50E4", Offset = "0xBE50E4", VA = "0xBE50E4")]
	public void RunForward()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xBE50FC", Offset = "0xBE50FC", VA = "0xBE50FC")]
	public void StopMove()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xBE5104", Offset = "0xBE5104", VA = "0xBE5104")]
	public void Move(bool state)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xBE5110", Offset = "0xBE5110", VA = "0xBE5110")]
	public void SetSpeed(float _speed)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xBE5118", Offset = "0xBE5118", VA = "0xBE5118")]
	private void StartFootAttack()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xBE51B0", Offset = "0xBE51B0", VA = "0xBE51B0")]
	private void FootAttack()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xBE5268", Offset = "0xBE5268", VA = "0xBE5268")]
	private void FootDamage()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xBE5288", Offset = "0xBE5288", VA = "0xBE5288")]
	private void BreakFootAttack()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xBE52E0", Offset = "0xBE52E0", VA = "0xBE52E0")]
	private void ReturnFootAttack()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xBE536C", Offset = "0xBE536C", VA = "0xBE536C")]
	public void CheckPlayerPose(bool isRight)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xBE5370", Offset = "0xBE5370", VA = "0xBE5370")]
	public void IsRightHand(bool state)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xBE537C", Offset = "0xBE537C", VA = "0xBE537C")]
	private void StartHandStayAttack()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xBE53D8", Offset = "0xBE53D8", VA = "0xBE53D8")]
	private void StartHandMoveAttack()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xBE546C", Offset = "0xBE546C", VA = "0xBE546C")]
	private void HandAttack()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xBE5598", Offset = "0xBE5598", VA = "0xBE5598")]
	private void HandDamage()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xBE55F0", Offset = "0xBE55F0", VA = "0xBE55F0")]
	private void BreakHandAttack()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xBE5694", Offset = "0xBE5694", VA = "0xBE5694")]
	private void ReturnHandAttack()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xBE5740", Offset = "0xBE5740", VA = "0xBE5740")]
	private void StartSlice()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xBE5908", Offset = "0xBE5908", VA = "0xBE5908")]
	private void StartAttack()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xBE5910", Offset = "0xBE5910", VA = "0xBE5910")]
	private void HideBalrog()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xBE5920", Offset = "0xBE5920", VA = "0xBE5920")]
	private void Slice()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xBE5A60", Offset = "0xBE5A60", VA = "0xBE5A60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xBE5C50", Offset = "0xBE5C50", VA = "0xBE5C50")]
	public Balrog()
	{
	}
}
[Token(Token = "0x20000E6")]
public class BalrogAnimationEvent : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Balrog balrog;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xBE5C6C", Offset = "0xBE5C6C", VA = "0xBE5C6C")]
	public void Breath()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xBE5C84", Offset = "0xBE5C84", VA = "0xBE5C84")]
	public void StartSlowMo()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xBE5C9C", Offset = "0xBE5C9C", VA = "0xBE5C9C")]
	public void StopSlowMo()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xBE5CB4", Offset = "0xBE5CB4", VA = "0xBE5CB4")]
	public void StepRight()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xBE5CD0", Offset = "0xBE5CD0", VA = "0xBE5CD0")]
	public void StepLeft()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xBE5CEC", Offset = "0xBE5CEC", VA = "0xBE5CEC")]
	public void DamageToPlayer()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xBE5D04", Offset = "0xBE5D04", VA = "0xBE5D04")]
	public BalrogAnimationEvent()
	{
	}
}
[Token(Token = "0x20000E7")]
public class BalrogStep : MonoBehaviour
{
	[Token(Token = "0x20000E8")]
	[CompilerGenerated]
	private sealed class <Hide>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BalrogStep <>4__this;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <a>5__3;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000301")]
			[Address(RVA = "0xBE5FA0", Offset = "0xBE5FA0", VA = "0xBE5FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000303")]
			[Address(RVA = "0xBE5FE8", Offset = "0xBE5FE8", VA = "0xBE5FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xBE5DC8", Offset = "0xBE5DC8", VA = "0xBE5DC8")]
		[DebuggerHidden]
		public <Hide>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xBE5DF8", Offset = "0xBE5DF8", VA = "0xBE5DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0xBE5DFC", Offset = "0xBE5DFC", VA = "0xBE5DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xBE5FA8", Offset = "0xBE5FA8", VA = "0xBE5FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer _mesh;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _timeHide;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _mat;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xBE5D0C", Offset = "0xBE5D0C", VA = "0xBE5D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xBE5D54", Offset = "0xBE5D54", VA = "0xBE5D54")]
	[IteratorStateMachine(typeof(<Hide>d__4))]
	private IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xBE5DF0", Offset = "0xBE5DF0", VA = "0xBE5DF0")]
	public BalrogStep()
	{
	}
}
[Token(Token = "0x20000E9")]
public class BaseBossController : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BeatMaker beatMaker;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Act[] acts;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hideLast;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentAct;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int n;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool test;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool doIt;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int enemyCount;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int dopEnemyCount;

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xBE5FF0", Offset = "0xBE5FF0", VA = "0xBE5FF0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xBE62B8", Offset = "0xBE62B8", VA = "0xBE62B8", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xBE644C", Offset = "0xBE644C", VA = "0xBE644C")]
	public void StopBoss()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xBE6560", Offset = "0xBE6560", VA = "0xBE6560")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xBE640C", Offset = "0xBE640C", VA = "0xBE640C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xBE6198", Offset = "0xBE6198", VA = "0xBE6198")]
	public void SortTime()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xBE65A0", Offset = "0xBE65A0", VA = "0xBE65A0")]
	public void PrevAction()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xBE65D4", Offset = "0xBE65D4", VA = "0xBE65D4")]
	public void SetAction()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xBE6614", Offset = "0xBE6614", VA = "0xBE6614")]
	public void NextAction()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xBE6648", Offset = "0xBE6648", VA = "0xBE6648")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xBE66B4", Offset = "0xBE66B4", VA = "0xBE66B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xBE67B8", Offset = "0xBE67B8", VA = "0xBE67B8")]
	public BaseBossController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EA")]
public struct Act
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BossAction action;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float beatTime;
}
[Token(Token = "0x20000EB")]
public class BossAction : MonoBehaviour
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BaseBossController bossController;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string multiplier;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationState[] animations;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationState breakAnimaion;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onStartBossAction;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent onEndBossAction;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent onBreakAction;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected int currentAnim;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected float time;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool work;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int enemyCount;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool isActive;

	[Token(Token = "0x17000037")]
	public bool IsWork
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0xBE67C0", Offset = "0xBE67C0", VA = "0xBE67C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xBE67C8", Offset = "0xBE67C8", VA = "0xBE67C8", Slot = "4")]
	public virtual void SetBossController(BaseBossController _bossController)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xBE6874", Offset = "0xBE6874", VA = "0xBE6874", Slot = "5")]
	public virtual void StartAction()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xBE68A0", Offset = "0xBE68A0", VA = "0xBE68A0", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xBE699C", Offset = "0xBE699C", VA = "0xBE699C", Slot = "7")]
	public virtual void SetAnimation(AnimationState animation)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xBE6A44", Offset = "0xBE6A44", VA = "0xBE6A44", Slot = "8")]
	public virtual void ResetAnimation()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xBE6ABC", Offset = "0xBE6ABC", VA = "0xBE6ABC", Slot = "9")]
	public virtual float CalculateTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xBE6B98", Offset = "0xBE6B98", VA = "0xBE6B98", Slot = "10")]
	public virtual void BreakAction()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xBE6C70", Offset = "0xBE6C70", VA = "0xBE6C70", Slot = "11")]
	public virtual void StopBreakAction()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xBE6CB8", Offset = "0xBE6CB8", VA = "0xBE6CB8", Slot = "12")]
	public virtual void StopAction()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xBE6CDC", Offset = "0xBE6CDC", VA = "0xBE6CDC")]
	public BossAction()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EC")]
public struct AnimationState
{
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string animBool;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool state;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float duration;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float multiplier;
}
[Token(Token = "0x20000ED")]
public class BossControl : MonoBehaviour
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BaseBossController bossController;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PressButton next;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressButton current;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PressButton prev;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xBE6CEC", Offset = "0xBE6CEC", VA = "0xBE6CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xBE6D60", Offset = "0xBE6D60", VA = "0xBE6D60")]
	public void SetLinks()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xBE6EB0", Offset = "0xBE6EB0", VA = "0xBE6EB0")]
	public void RemoveLinks()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xBE7000", Offset = "0xBE7000", VA = "0xBE7000")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xBE7004", Offset = "0xBE7004", VA = "0xBE7004")]
	public BossControl()
	{
	}
}
[Token(Token = "0x20000EE")]
public class TentacleAnimation : MonoBehaviour
{
	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationState[] anims;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentAnim;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string resetAnimTrigger;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xBE700C", Offset = "0xBE700C", VA = "0xBE700C")]
	public void StartAnim()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xBE70BC", Offset = "0xBE70BC", VA = "0xBE70BC")]
	public void NextAnim()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xBE70F4", Offset = "0xBE70F4", VA = "0xBE70F4")]
	public void StopAnim()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xBE7184", Offset = "0xBE7184", VA = "0xBE7184")]
	public TentacleAnimation()
	{
	}
}
[Token(Token = "0x20000EF")]
public class BeatObject : MonoBehaviour
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem ps;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UISignal uiSignal;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UIBoxerTarget uiBoxerTarget;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnBeat;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BodyHitCheck[] bodyHits;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isBeated;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Score")]
	public GameObject scoreText;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float beatTime;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xBE718C", Offset = "0xBE718C", VA = "0xBE718C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xBE72FC", Offset = "0xBE72FC", VA = "0xBE72FC")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xBE7340", Offset = "0xBE7340", VA = "0xBE7340")]
	public void Beat(Rigidbody rb, Vector3 direction)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xBE779C", Offset = "0xBE779C", VA = "0xBE779C")]
	public void SetBeatTime(float t)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xBE77A4", Offset = "0xBE77A4", VA = "0xBE77A4")]
	public float BeatTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xBE7454", Offset = "0xBE7454", VA = "0xBE7454")]
	public void BeatScore(Rigidbody hittedRigidbody, Vector3 hitVector)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xBE77AC", Offset = "0xBE77AC", VA = "0xBE77AC", Slot = "4")]
	public virtual void ShowScore(Vector3 pos, int accuracy, int other)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xBE7AB8", Offset = "0xBE7AB8", VA = "0xBE7AB8")]
	public void HideUI()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xBE7AD4", Offset = "0xBE7AD4", VA = "0xBE7AD4")]
	public BeatObject()
	{
	}
}
[Token(Token = "0x20000F0")]
public class BiplaneAnimationEvent : MonoBehaviour
{
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BiplaneBoss biplaneBoss;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xBE7ADC", Offset = "0xBE7ADC", VA = "0xBE7ADC")]
	public void RightWing()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xBE7B78", Offset = "0xBE7B78", VA = "0xBE7B78")]
	public void LeftWing()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xBE7B94", Offset = "0xBE7B94", VA = "0xBE7B94")]
	public void StopWing()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xBE7C14", Offset = "0xBE7C14", VA = "0xBE7C14")]
	public void ShowDogFighterImmediatly()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xBE7C94", Offset = "0xBE7C94", VA = "0xBE7C94")]
	public BiplaneAnimationEvent()
	{
	}
}
[Token(Token = "0x20000F1")]
public class BiplaneBoss : MonoBehaviour
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject biplane;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject dogfighter;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject shootEffect;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject fireEngine;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject explosionEffect;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource scratchSource;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystemController wing_R;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystemController wing_L;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject dodge_R;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject dodge_L;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public DissolveController dissolveController;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource source;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip[] shootClips;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Dive")]
	[SerializeField]
	private GameObject divePlane;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool shootSoundEffect;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float bpm;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float preTime;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float pauseTime;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float delayShoot;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BossAction curBossAction;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool hardCode;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xBE7C9C", Offset = "0xBE7C9C", VA = "0xBE7C9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xBE7D98", Offset = "0xBE7D98", VA = "0xBE7D98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xBE7DEC", Offset = "0xBE7DEC", VA = "0xBE7DEC")]
	public void ShootSound()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xBE7E58", Offset = "0xBE7E58", VA = "0xBE7E58")]
	public void ShowBiplane(bool state, BossAction bossAction)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xBE7C2C", Offset = "0xBE7C2C", VA = "0xBE7C2C")]
	public void ShowDogFighterImmideatly()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xBE7E98", Offset = "0xBE7E98", VA = "0xBE7E98")]
	public void ShowDogFighter(bool state, BossAction bossAction)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xBE7F28", Offset = "0xBE7F28", VA = "0xBE7F28")]
	public void HidePlanes(BossAction bossAction)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xBE7FB0", Offset = "0xBE7FB0", VA = "0xBE7FB0")]
	private void Hide()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xBE7FF8", Offset = "0xBE7FF8", VA = "0xBE7FF8")]
	public void Fire()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xBE80A4", Offset = "0xBE80A4", VA = "0xBE80A4")]
	public void Dive(bool isRight)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xBE8154", Offset = "0xBE8154", VA = "0xBE8154")]
	public void ShowDivePlane(bool state)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xBE7AF8", Offset = "0xBE7AF8", VA = "0xBE7AF8")]
	public void SparkEffect(bool isRight)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xBE7BAC", Offset = "0xBE7BAC", VA = "0xBE7BAC")]
	public void SparkEffectStop()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xBE8174", Offset = "0xBE8174", VA = "0xBE8174")]
	public void Explosion(bool state)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xBE81F0", Offset = "0xBE81F0", VA = "0xBE81F0")]
	public void Shoot(bool state)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xBE8228", Offset = "0xBE8228", VA = "0xBE8228")]
	public BiplaneBoss()
	{
	}
}
[Token(Token = "0x20000F2")]
public class BossActionAirplane : BossAction
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private BiplaneBoss biplaneBoss;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private bool isBiplane;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	[SerializeField]
	private bool showAtStart;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool isBreaked;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xBE823C", Offset = "0xBE823C", VA = "0xBE823C", Slot = "5")]
	public override void StartAction()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xBE82B8", Offset = "0xBE82B8", VA = "0xBE82B8", Slot = "10")]
	public override void BreakAction()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xBE82C4", Offset = "0xBE82C4", VA = "0xBE82C4", Slot = "12")]
	public override void StopAction()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xBE8324", Offset = "0xBE8324", VA = "0xBE8324", Slot = "11")]
	public override void StopBreakAction()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xBE8364", Offset = "0xBE8364", VA = "0xBE8364")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xBE8370", Offset = "0xBE8370", VA = "0xBE8370")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xBE8378", Offset = "0xBE8378", VA = "0xBE8378")]
	public BossActionAirplane()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ControlShooters : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000F4")]
	public struct ShooterTiming
	{
		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EnemyShooter enemyShooter;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float delayTime;
	}

	[Token(Token = "0x20000F5")]
	[CompilerGenerated]
	private sealed class <AimingProccess>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControlShooters <>4__this;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int n;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000350")]
			[Address(RVA = "0xBE8920", Offset = "0xBE8920", VA = "0xBE8920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000352")]
			[Address(RVA = "0xBE8968", Offset = "0xBE8968", VA = "0xBE8968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xBE85BC", Offset = "0xBE85BC", VA = "0xBE85BC")]
		[DebuggerHidden]
		public <AimingProccess>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0xBE85EC", Offset = "0xBE85EC", VA = "0xBE85EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xBE85F0", Offset = "0xBE85F0", VA = "0xBE85F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xBE8928", Offset = "0xBE8928", VA = "0xBE8928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShooterTiming[] shooters;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayReadyToShoot;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delayShoot;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnStartAim;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasShield;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xBE838C", Offset = "0xBE838C", VA = "0xBE838C")]
	public void Start()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xBE83D8", Offset = "0xBE83D8", VA = "0xBE83D8")]
	public void StartShotter(int n)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xBE8538", Offset = "0xBE8538", VA = "0xBE8538")]
	[IteratorStateMachine(typeof(<AimingProccess>d__8))]
	private IEnumerator AimingProccess(int n)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xBE85E4", Offset = "0xBE85E4", VA = "0xBE85E4")]
	public ControlShooters()
	{
	}
}
[Token(Token = "0x20000F6")]
public class BladeObject : MonoBehaviour
{
	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EffectAsset blood;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bloodPoint;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDamage;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool damaged;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 startPos;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Slice")]
	public Transform cutDirection;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 collisionPoint;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float minV;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float beatTime;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("DamageEffect")]
	public GameObject scoreText;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string scoreTextToShow;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int accuracyToShow;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int otherToShow;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 hitPoint;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 hitDir;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 flatDir;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xBE8970", Offset = "0xBE8970", VA = "0xBE8970")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xBE8978", Offset = "0xBE8978", VA = "0xBE8978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xBE89A8", Offset = "0xBE89A8", VA = "0xBE89A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xBE89D4", Offset = "0xBE89D4", VA = "0xBE89D4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xBE92C8", Offset = "0xBE92C8", VA = "0xBE92C8")]
	public void SetBeatTime(float t)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xBE92D0", Offset = "0xBE92D0", VA = "0xBE92D0")]
	public float BeatTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xBE8CF4", Offset = "0xBE8CF4", VA = "0xBE8CF4")]
	private void Check(BzKnife blade)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xBE93E8", Offset = "0xBE93E8", VA = "0xBE93E8", Slot = "4")]
	public virtual void Cutted(bool codirected, float parallelFactor, float distanceFactor, Vector3 hitVector)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xBE99CC", Offset = "0xBE99CC", VA = "0xBE99CC")]
	public void SetScoreText(int _accuracy, int _other)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xBE92D8", Offset = "0xBE92D8", VA = "0xBE92D8")]
	public void SetHitPoint(Vector3 hitPoint, Vector3 hitDir)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xBE9B44", Offset = "0xBE9B44", VA = "0xBE9B44", Slot = "5")]
	public virtual void ShowScore(Vector3 pos, int accuracy, int other)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xBE9E50", Offset = "0xBE9E50", VA = "0xBE9E50")]
	public BladeObject()
	{
	}
}
[Token(Token = "0x20000F7")]
public class ChangeBoss : MonoBehaviour
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] boss;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] pointsPlayer;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BossControl bossControl;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int currentBoss;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC9F93C", Offset = "0xC9F93C", VA = "0xC9F93C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC9FAAC", Offset = "0xC9FAAC", VA = "0xC9FAAC")]
	public void NextBoss()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC9F944", Offset = "0xC9F944", VA = "0xC9F944")]
	public void SetBoss(int n)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC9FB38", Offset = "0xC9FB38", VA = "0xC9FB38")]
	public ChangeBoss()
	{
	}
}
[Token(Token = "0x20000F8")]
public class CreateCopy : MonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject copy;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC9FB40", Offset = "0xC9FB40", VA = "0xC9FB40")]
	public void CreateCopyObjectDelay()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC9FB90", Offset = "0xC9FB90", VA = "0xC9FB90")]
	public void CreateCopyObject()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC9FCC8", Offset = "0xC9FCC8", VA = "0xC9FCC8")]
	public CreateCopy()
	{
	}
}
[Token(Token = "0x20000F9")]
public class DamagedByBlade : MonoBehaviour
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyMelee main;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 collisionPoint;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bladeVector;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform cutDirection;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool destroyWeapon;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC9FCD8", Offset = "0xC9FCD8", VA = "0xC9FCD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC9FCF8", Offset = "0xC9FCF8", VA = "0xC9FCF8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC9FE14", Offset = "0xC9FE14", VA = "0xC9FE14")]
	private void Check(BzKnife blade)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xCA0418", Offset = "0xCA0418", VA = "0xCA0418")]
	public DamagedByBlade()
	{
	}
}
[Token(Token = "0x20000FA")]
public class DamageEffectBoss : DamageEffect
{
	[Token(Token = "0x600036A")]
	[Address(RVA = "0xCA0420", Offset = "0xCA0420", VA = "0xCA0420", Slot = "7")]
	public override void MissShow()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xCA0424", Offset = "0xCA0424", VA = "0xCA0424", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xCA0428", Offset = "0xCA0428", VA = "0xCA0428", Slot = "9")]
	public override void CollisionParticles(bool state = true)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xCA042C", Offset = "0xCA042C", VA = "0xCA042C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xCA0430", Offset = "0xCA0430", VA = "0xCA0430")]
	public DamageEffectBoss()
	{
	}
}
[Token(Token = "0x20000FB")]
public class DamagePlayer : MonoBehaviour
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canDamage;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xCA0438", Offset = "0xCA0438", VA = "0xCA0438")]
	public void DamageToPlayer()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xCA04C0", Offset = "0xCA04C0", VA = "0xCA04C0")]
	public void SetDamage(bool state)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xCA04CC", Offset = "0xCA04CC", VA = "0xCA04CC")]
	public DamagePlayer()
	{
	}
}
[Token(Token = "0x20000FC")]
public class JumpBlock : MonoBehaviour
{
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject frontJumpBlock;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject backJumpBlock;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject jumpBlock;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xCA04D4", Offset = "0xCA04D4", VA = "0xCA04D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xCA04E0", Offset = "0xCA04E0", VA = "0xCA04E0")]
	public void ShowBlock()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xCA0500", Offset = "0xCA0500", VA = "0xCA0500")]
	public void HideBlock()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xCA05A8", Offset = "0xCA05A8", VA = "0xCA05A8")]
	public JumpBlock()
	{
	}
}
[Token(Token = "0x20000FD")]
public class SmallMonster : MonoBehaviour
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isMove;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeDelayToMove;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startPos;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xCA05B0", Offset = "0xCA05B0", VA = "0xCA05B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xCA05E0", Offset = "0xCA05E0", VA = "0xCA05E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xCA067C", Offset = "0xCA067C", VA = "0xCA067C")]
	public void StartMove()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xCA0688", Offset = "0xCA0688", VA = "0xCA0688")]
	public void SetMove(bool state)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xCA0694", Offset = "0xCA0694", VA = "0xCA0694")]
	private void Update()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xCA0638", Offset = "0xCA0638", VA = "0xCA0638")]
	public void ResetMonster()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xCA0768", Offset = "0xCA0768", VA = "0xCA0768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xCA0788", Offset = "0xCA0788", VA = "0xCA0788")]
	public SmallMonster()
	{
	}
}
[Token(Token = "0x20000FE")]
public class SpawnMonster : MonoBehaviour
{
	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject childMonster;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpawnChildMonster[] monsterTime;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] spawnPoints;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool start;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xCA07A0", Offset = "0xCA07A0", VA = "0xCA07A0")]
	public void StartSpawn()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xCA07FC", Offset = "0xCA07FC", VA = "0xCA07FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xCA0A0C", Offset = "0xCA0A0C", VA = "0xCA0A0C")]
	public SpawnMonster()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FF")]
public struct SpawnChildMonster
{
	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int spawnPoint;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int spawnTime;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool spawned;
}
[Token(Token = "0x2000100")]
public class MoveWithPlayer : MonoBehaviour
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerMovable;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool move;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool copyY;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xCA0A14", Offset = "0xCA0A14", VA = "0xCA0A14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xCA0AE4", Offset = "0xCA0AE4", VA = "0xCA0AE4")]
	public void SetMove(bool state)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xCA0AF0", Offset = "0xCA0AF0", VA = "0xCA0AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xCA0B98", Offset = "0xCA0B98", VA = "0xCA0B98")]
	public MoveWithPlayer()
	{
	}
}
[Token(Token = "0x2000101")]
public class NotificationUI : MonoBehaviour
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NotificationUI instance;

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xCA0BA8", Offset = "0xCA0BA8", VA = "0xCA0BA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xCA0C00", Offset = "0xCA0C00", VA = "0xCA0C00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xCA0C04", Offset = "0xCA0C04", VA = "0xCA0C04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xCA0C08", Offset = "0xCA0C08", VA = "0xCA0C08")]
	public NotificationUI()
	{
	}
}
[Token(Token = "0x2000102")]
public class Octopus : MonoBehaviour
{
	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject octopus;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ShooterAimer headAimer;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool sliceAction;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("SlowMo")]
	private Animator animator;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string speedParam;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float slowSpeed;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float slowSpeedMemo;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Move")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _move;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Show")]
	[SerializeField]
	private GameObject showPortal;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private DissolveController dissolveController;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("SliceAttack")]
	[SerializeField]
	private BladeObject bladeObject;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float delayHandsEffect;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private BossAction attackAction;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private BossAction attackActionHide;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private BossAction attackJumpAction;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UISignal uiSignal;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OctopusTentacle[] octopusTentacles;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("BeatAttack")]
	[SerializeField]
	private BeatObject beatObject;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float delayHandEffect;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private BossAction beatAction;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float delayHideBeat;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[Header("Effect")]
	private GameObject[] effects;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private ParticleSystemController jumpEffect;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private ParticleSystemController stepEffect_R;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private ParticleSystemController stepEffect_L;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private ParticleSystemController hand_R;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ParticleSystemController hand_L;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject destroyEffect;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject mechanism;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Transform sharmanka;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float currentSpeed;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool showed;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	private bool isBeat;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
	private bool isAttack;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
	private bool isDamaged;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool isSlow;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Other")]
	[SerializeField]
	private Transform rootBone;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 offset;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool lastAttack;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xCA0C10", Offset = "0xCA0C10", VA = "0xCA0C10")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xCA0C7C", Offset = "0xCA0C7C", VA = "0xCA0C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xCA1408", Offset = "0xCA1408", VA = "0xCA1408")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xCA1410", Offset = "0xCA1410", VA = "0xCA1410")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xCA1460", Offset = "0xCA1460", VA = "0xCA1460")]
	public void HideUI()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xCA14A8", Offset = "0xCA14A8", VA = "0xCA14A8")]
	public void Show(bool state)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xCA1668", Offset = "0xCA1668", VA = "0xCA1668")]
	private void Portal(bool state)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xCA16BC", Offset = "0xCA16BC", VA = "0xCA16BC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xCA16D0", Offset = "0xCA16D0", VA = "0xCA16D0")]
	private void HideOctopus()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xCA1708", Offset = "0xCA1708", VA = "0xCA1708")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xCA1824", Offset = "0xCA1824", VA = "0xCA1824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xCA1908", Offset = "0xCA1908", VA = "0xCA1908")]
	public void FastMove()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xCA1A1C", Offset = "0xCA1A1C", VA = "0xCA1A1C")]
	public void MoveForward(float time)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xCA1AA8", Offset = "0xCA1AA8", VA = "0xCA1AA8")]
	public void MoveBackward(float time)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xCA1B30", Offset = "0xCA1B30", VA = "0xCA1B30")]
	public void StopMove()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xCA1B38", Offset = "0xCA1B38", VA = "0xCA1B38")]
	public void SetSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xCA1B40", Offset = "0xCA1B40", VA = "0xCA1B40")]
	public void StepRight()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xCA1B5C", Offset = "0xCA1B5C", VA = "0xCA1B5C")]
	public void StepLeft()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xCA1B78", Offset = "0xCA1B78", VA = "0xCA1B78")]
	public void Jump()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xCA0E5C", Offset = "0xCA0E5C", VA = "0xCA0E5C")]
	public void LinkToAction(bool state)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xCA1BB8", Offset = "0xCA1BB8", VA = "0xCA1BB8")]
	public void DamageToPlayer()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xCA1C48", Offset = "0xCA1C48", VA = "0xCA1C48")]
	public void DiscardTentacles()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xCA1CA8", Offset = "0xCA1CA8", VA = "0xCA1CA8")]
	public void SetLastAttack()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xCA1CB4", Offset = "0xCA1CB4", VA = "0xCA1CB4")]
	public void EpicFreezeTime()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xCA1D20", Offset = "0xCA1D20", VA = "0xCA1D20")]
	public void StartSlice()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xCA1E68", Offset = "0xCA1E68", VA = "0xCA1E68")]
	public void ShowHandsEffect()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xCA1E98", Offset = "0xCA1E98", VA = "0xCA1E98")]
	public void Slice()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xCA1F68", Offset = "0xCA1F68", VA = "0xCA1F68")]
	public void StopSlice()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xCA204C", Offset = "0xCA204C", VA = "0xCA204C")]
	public void EpicDestroy()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xCA215C", Offset = "0xCA215C", VA = "0xCA215C")]
	public void StartBeat()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xCA229C", Offset = "0xCA229C", VA = "0xCA229C")]
	public void ShowHandEffect()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xCA22B8", Offset = "0xCA22B8", VA = "0xCA22B8")]
	public void Beat()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xCA22FC", Offset = "0xCA22FC", VA = "0xCA22FC")]
	public void StopBeat()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xCA23B4", Offset = "0xCA23B4", VA = "0xCA23B4")]
	private void HideBeat()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xCA23C8", Offset = "0xCA23C8", VA = "0xCA23C8")]
	public void Slow()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xCA1F2C", Offset = "0xCA1F2C", VA = "0xCA1F2C")]
	public void StopSlow()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xCA2428", Offset = "0xCA2428", VA = "0xCA2428")]
	public Octopus()
	{
	}
}
[Token(Token = "0x2000103")]
public class OctopusAnimationEvent : MonoBehaviour
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Octopus octopus;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OctopusTentacle r;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OctopusTentacle l;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private OctopusTentacle r_Up;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OctopusTentacle l_Up;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xCA2438", Offset = "0xCA2438", VA = "0xCA2438")]
	public void Base_UI()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xCA2450", Offset = "0xCA2450", VA = "0xCA2450")]
	public void BaseDamage()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xCA2468", Offset = "0xCA2468", VA = "0xCA2468")]
	public void Slow()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xCA2480", Offset = "0xCA2480", VA = "0xCA2480")]
	public void StopSlow()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xCA2498", Offset = "0xCA2498", VA = "0xCA2498")]
	public void Step_R()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xCA24BC", Offset = "0xCA24BC", VA = "0xCA24BC")]
	public void Step_L()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xCA24E0", Offset = "0xCA24E0", VA = "0xCA24E0")]
	public void Jump()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xCA24F8", Offset = "0xCA24F8", VA = "0xCA24F8")]
	public void R_UI()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xCA2514", Offset = "0xCA2514", VA = "0xCA2514")]
	public void Damage_R()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xCA2530", Offset = "0xCA2530", VA = "0xCA2530")]
	public void SlowR()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xCA254C", Offset = "0xCA254C", VA = "0xCA254C")]
	public void StopR()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xCA2568", Offset = "0xCA2568", VA = "0xCA2568")]
	public void L_UI()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xCA2584", Offset = "0xCA2584", VA = "0xCA2584")]
	public void Damage_L()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xCA25A0", Offset = "0xCA25A0", VA = "0xCA25A0")]
	public void SlowL()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xCA25BC", Offset = "0xCA25BC", VA = "0xCA25BC")]
	public void StopL()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xCA25D8", Offset = "0xCA25D8", VA = "0xCA25D8")]
	public void RU_UI()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xCA25F4", Offset = "0xCA25F4", VA = "0xCA25F4")]
	public void Damage_RU()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xCA2610", Offset = "0xCA2610", VA = "0xCA2610")]
	public void SlowRUp()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xCA262C", Offset = "0xCA262C", VA = "0xCA262C")]
	public void StopRUp()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xCA2648", Offset = "0xCA2648", VA = "0xCA2648")]
	public void LU_UI()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xCA2664", Offset = "0xCA2664", VA = "0xCA2664")]
	public void Damage_LU()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xCA2680", Offset = "0xCA2680", VA = "0xCA2680")]
	public void SlowLUp()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xCA269C", Offset = "0xCA269C", VA = "0xCA269C")]
	public void StopLUp()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xCA26B8", Offset = "0xCA26B8", VA = "0xCA26B8")]
	public void EpicDestroyed()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xCA26D0", Offset = "0xCA26D0", VA = "0xCA26D0")]
	public OctopusAnimationEvent()
	{
	}
}
[Token(Token = "0x2000104")]
public class OnHittedArrowEvent : MonoBehaviour
{
	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HitArrowsChecker hitArrowsChecker;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onHitted;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xCA26D8", Offset = "0xCA26D8", VA = "0xCA26D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xCA27B0", Offset = "0xCA27B0", VA = "0xCA27B0")]
	public void Do()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xCA2870", Offset = "0xCA2870", VA = "0xCA2870")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xCA2948", Offset = "0xCA2948", VA = "0xCA2948")]
	public OnHittedArrowEvent()
	{
	}
}
[Token(Token = "0x2000105")]
public class PressButton : MenuButton
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnPress;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xCA2950", Offset = "0xCA2950", VA = "0xCA2950", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xCA2A58", Offset = "0xCA2A58", VA = "0xCA2A58")]
	public PressButton()
	{
	}
}
[Token(Token = "0x2000106")]
public class ResetParent : MonoBehaviour
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Enemy enemy;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xCA2A78", Offset = "0xCA2A78", VA = "0xCA2A78")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xCA2B98", Offset = "0xCA2B98", VA = "0xCA2B98")]
	public void ResetParentObject()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xCA2BBC", Offset = "0xCA2BBC", VA = "0xCA2BBC")]
	public ResetParent()
	{
	}
}
[Token(Token = "0x2000107")]
public class RicochetBall : MonoBehaviour
{
	[Token(Token = "0x2000108")]
	[CompilerGenerated]
	private sealed class <LookAtPlayer>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RicochetBall <>4__this;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__3;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion <NewRot>5__4;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DD")]
			[Address(RVA = "0xCA36EC", Offset = "0xCA36EC", VA = "0xCA36EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0xCA3734", Offset = "0xCA3734", VA = "0xCA3734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xCA312C", Offset = "0xCA312C", VA = "0xCA312C")]
		[DebuggerHidden]
		public <LookAtPlayer>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xCA3494", Offset = "0xCA3494", VA = "0xCA3494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xCA3498", Offset = "0xCA3498", VA = "0xCA3498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xCA36F4", Offset = "0xCA36F4", VA = "0xCA36F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _anim;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _body;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _portal;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystemController _damageEffect;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private DissolveController _dissolveController;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RicochetByBlade ricochetByBlade;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ShootChecker shootChecker;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform playerTransform;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xCA2BC4", Offset = "0xCA2BC4", VA = "0xCA2BC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xCA2F14", Offset = "0xCA2F14", VA = "0xCA2F14")]
	public void Show()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xCA304C", Offset = "0xCA304C", VA = "0xCA304C")]
	public void ShootedToPlayer()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xCA3080", Offset = "0xCA3080", VA = "0xCA3080")]
	public void Damage()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xCA2FD8", Offset = "0xCA2FD8", VA = "0xCA2FD8")]
	[IteratorStateMachine(typeof(<LookAtPlayer>d__12))]
	private IEnumerator LookAtPlayer()
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xCA3154", Offset = "0xCA3154", VA = "0xCA3154")]
	public void StartAim()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xCA30D8", Offset = "0xCA30D8", VA = "0xCA30D8")]
	public void ResetAnim()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xCA31BC", Offset = "0xCA31BC", VA = "0xCA31BC")]
	public void HideObject()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xCA3274", Offset = "0xCA3274", VA = "0xCA3274")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xCA348C", Offset = "0xCA348C", VA = "0xCA348C")]
	public RicochetBall()
	{
	}
}
[Token(Token = "0x2000109")]
public class RicochetBoss : BossAction
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RicochetByBlade enemyShooter;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xCA373C", Offset = "0xCA373C", VA = "0xCA373C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xCA3808", Offset = "0xCA3808", VA = "0xCA3808", Slot = "5")]
	public override void StartAction()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xCA3810", Offset = "0xCA3810", VA = "0xCA3810", Slot = "7")]
	public override void SetAnimation(AnimationState animation)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xCA3978", Offset = "0xCA3978", VA = "0xCA3978", Slot = "12")]
	public override void StopAction()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xCA3980", Offset = "0xCA3980", VA = "0xCA3980")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xCA3A4C", Offset = "0xCA3A4C", VA = "0xCA3A4C")]
	public RicochetBoss()
	{
	}
}
[Token(Token = "0x200010A")]
public class RicochetByBlade : EnemyShooter_Ricochet
{
	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Action OnReady;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public UnityEvent OnReadyEvent;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Action OnRicocheted;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Action OnShootToPlayer;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public UnityEvent OnEnd;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float timeToSingnal;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xCA3A54", Offset = "0xCA3A54", VA = "0xCA3A54", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xCA3AC8", Offset = "0xCA3AC8", VA = "0xCA3AC8", Slot = "22")]
	protected override void AddToOverviewSystem()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xCA38A8", Offset = "0xCA38A8", VA = "0xCA38A8")]
	public void Ready()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xCA3ACC", Offset = "0xCA3ACC", VA = "0xCA3ACC", Slot = "25")]
	public override void ReadyToShoot()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xCA3B18", Offset = "0xCA3B18", VA = "0xCA3B18", Slot = "28")]
	protected override void RicochetedEvent()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xCA3B5C", Offset = "0xCA3B5C", VA = "0xCA3B5C", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xCA3C84", Offset = "0xCA3C84", VA = "0xCA3C84", Slot = "26")]
	protected override void FastShoot()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xCA3D04", Offset = "0xCA3D04", VA = "0xCA3D04", Slot = "21")]
	public override void MissEnemy()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xCA3D5C", Offset = "0xCA3D5C", VA = "0xCA3D5C")]
	public RicochetByBlade()
	{
	}
}
[Token(Token = "0x200010B")]
public class ShootBoss : BossAction
{
	[Token(Token = "0x200010C")]
	[CompilerGenerated]
	private sealed class <shootProcess>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootBoss <>4__this;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F8")]
			[Address(RVA = "0xCA41F8", Offset = "0xCA41F8", VA = "0xCA41F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0xCA4240", Offset = "0xCA4240", VA = "0xCA4240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xCA3F8C", Offset = "0xCA3F8C", VA = "0xCA3F8C")]
		[DebuggerHidden]
		public <shootProcess>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xCA4058", Offset = "0xCA4058", VA = "0xCA4058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xCA405C", Offset = "0xCA405C", VA = "0xCA405C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xCA4200", Offset = "0xCA4200", VA = "0xCA4200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EnemyShooter enemyShooter;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UISignal uiSignal;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine coroutine;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xCA3D70", Offset = "0xCA3D70", VA = "0xCA3D70")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xCA3E0C", Offset = "0xCA3E0C", VA = "0xCA3E0C", Slot = "7")]
	public override void SetAnimation(AnimationState animation)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xCA3F40", Offset = "0xCA3F40", VA = "0xCA3F40")]
	public void StopShootProcess()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xCA3ECC", Offset = "0xCA3ECC", VA = "0xCA3ECC")]
	[IteratorStateMachine(typeof(<shootProcess>d__6))]
	private IEnumerator shootProcess()
	{
		return null;
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xCA3FB4", Offset = "0xCA3FB4", VA = "0xCA3FB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xCA4050", Offset = "0xCA4050", VA = "0xCA4050")]
	public ShootBoss()
	{
	}
}
[Token(Token = "0x200010D")]
public class ShootedBodyOctopus : MonoBehaviour
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject body;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject shootBody;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float upForce;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float forwardForce;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ShootChecker shootChecker;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CopyPosRot[] copyPosRots;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] copyParts;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody[] rigidbodies;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xCA4248", Offset = "0xCA4248", VA = "0xCA4248")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xCA4568", Offset = "0xCA4568", VA = "0xCA4568")]
	public void ShowShootedBody()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xCA471C", Offset = "0xCA471C", VA = "0xCA471C", Slot = "4")]
	public virtual void AddForce()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xCA4504", Offset = "0xCA4504", VA = "0xCA4504")]
	public void Hide()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xCA480C", Offset = "0xCA480C", VA = "0xCA480C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xCA4890", Offset = "0xCA4890", VA = "0xCA4890")]
	public ShootedBodyOctopus()
	{
	}
}
[Token(Token = "0x200010E")]
public class AngleShooter : Shooter
{
	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float angle;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BossDodgeIndicator dodgeIndicator;

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xCA48A4", Offset = "0xCA48A4", VA = "0xCA48A4")]
	public void ShootForward()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xCA4930", Offset = "0xCA4930", VA = "0xCA4930")]
	public void ShootLeft()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xCA49BC", Offset = "0xCA49BC", VA = "0xCA49BC")]
	public void ShootRight()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xCA4A4C", Offset = "0xCA4A4C", VA = "0xCA4A4C")]
	public void ShootVertical()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xCA4AFC", Offset = "0xCA4AFC", VA = "0xCA4AFC")]
	public void ShootForward(Transform target)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xCA4DEC", Offset = "0xCA4DEC", VA = "0xCA4DEC")]
	public void ShootLeft(Transform target)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xCA4E80", Offset = "0xCA4E80", VA = "0xCA4E80")]
	public void ShootRight(Transform target)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xCA4F18", Offset = "0xCA4F18", VA = "0xCA4F18")]
	public void ShootVertical(Transform target)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xCA5034", Offset = "0xCA5034", VA = "0xCA5034", Slot = "4")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xCA4B90", Offset = "0xCA4B90", VA = "0xCA4B90")]
	public void Shoot(Transform target)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xCA5238", Offset = "0xCA5238", VA = "0xCA5238")]
	public void ShootLeftAxe()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xCA52C4", Offset = "0xCA52C4", VA = "0xCA52C4")]
	public void ShootRightAxe()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xCA5354", Offset = "0xCA5354", VA = "0xCA5354")]
	public void ShootLeftAxe(Transform target)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xCA53E8", Offset = "0xCA53E8", VA = "0xCA53E8")]
	public void ShootRightAxe(Transform target)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xCA5480", Offset = "0xCA5480", VA = "0xCA5480")]
	public AngleShooter()
	{
	}
}
[Token(Token = "0x200010F")]
public class AutoShooter : Shooter
{
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isShooting;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rateOfFire;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeDelay;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xCA5490", Offset = "0xCA5490", VA = "0xCA5490")]
	private void Start()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xCA54A8", Offset = "0xCA54A8", VA = "0xCA54A8")]
	public void SetShoot(bool state)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xCA54B4", Offset = "0xCA54B4", VA = "0xCA54B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xCA550C", Offset = "0xCA550C", VA = "0xCA550C")]
	public AutoShooter()
	{
	}
}
[Token(Token = "0x2000110")]
public class BotShooter : Shooter
{
	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Direction direction;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BezierWay bezierWay;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xCA551C", Offset = "0xCA551C", VA = "0xCA551C", Slot = "4")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xCA5824", Offset = "0xCA5824", VA = "0xCA5824")]
	public BotShooter()
	{
	}
}
[Token(Token = "0x2000111")]
public class Missle : MonoBehaviour
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] targets;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentTarget;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnSpeed;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rocketFlySpeed;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xCA582C", Offset = "0xCA582C", VA = "0xCA582C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xCA5BB4", Offset = "0xCA5BB4", VA = "0xCA5BB4")]
	public Missle()
	{
	}
}
[Token(Token = "0x2000112")]
public class MissleShooter : Shooter
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] points;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform finalPoint;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 dir;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ArrowDirectionEnum cutDirection;

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xCA5BD4", Offset = "0xCA5BD4", VA = "0xCA5BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xCA5D0C", Offset = "0xCA5D0C", VA = "0xCA5D0C", Slot = "4")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xCA5E8C", Offset = "0xCA5E8C", VA = "0xCA5E8C")]
	public MissleShooter()
	{
	}
}
[Token(Token = "0x2000113")]
public class Projectile : MonoBehaviour
{
	[Token(Token = "0x2000114")]
	[CompilerGenerated]
	private sealed class <ScaleProjectile>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Projectile <>4__this;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000423")]
			[Address(RVA = "0xCA610C", Offset = "0xCA610C", VA = "0xCA610C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0xCA6154", Offset = "0xCA6154", VA = "0xCA6154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xCA5FFC", Offset = "0xCA5FFC", VA = "0xCA5FFC")]
		[DebuggerHidden]
		public <ScaleProjectile>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xCA6034", Offset = "0xCA6034", VA = "0xCA6034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xCA6038", Offset = "0xCA6038", VA = "0xCA6038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xCA6114", Offset = "0xCA6114", VA = "0xCA6114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected bool isSclaing;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startScale;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xCA5E94", Offset = "0xCA5E94", VA = "0xCA5E94")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xCA5F4C", Offset = "0xCA5F4C", VA = "0xCA5F4C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xCA5FF4", Offset = "0xCA5FF4", VA = "0xCA5FF4", Slot = "5")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xCA5ED8", Offset = "0xCA5ED8", VA = "0xCA5ED8")]
	[IteratorStateMachine(typeof(<ScaleProjectile>d__6))]
	private IEnumerator ScaleProjectile()
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xCA6024", Offset = "0xCA6024", VA = "0xCA6024")]
	public Projectile()
	{
	}
}
[Token(Token = "0x2000115")]
public class ProjectileBezier : Projectile
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BezierWay bezierWay;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeMove;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float curT;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool isStop;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool moveByCurve;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnStop;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xCA615C", Offset = "0xCA615C", VA = "0xCA615C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xCA61FC", Offset = "0xCA61FC", VA = "0xCA61FC", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xCA62C4", Offset = "0xCA62C4", VA = "0xCA62C4", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xCA62E4", Offset = "0xCA62E4", VA = "0xCA62E4")]
	public ProjectileBezier()
	{
	}
}
[Token(Token = "0x2000116")]
public class ProjectileBezierCustom : ProjectileBezier
{
	[Token(Token = "0x2000117")]
	[CompilerGenerated]
	private sealed class <MoveAsBot>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProjectileBezierCustom <>4__this;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <diff>5__2;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__3;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0xCA6700", Offset = "0xCA6700", VA = "0xCA6700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0xCA6748", Offset = "0xCA6748", VA = "0xCA6748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xCA64C4", Offset = "0xCA64C4", VA = "0xCA64C4")]
		[DebuggerHidden]
		public <MoveAsBot>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xCA6530", Offset = "0xCA6530", VA = "0xCA6530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xCA6534", Offset = "0xCA6534", VA = "0xCA6534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xCA6708", Offset = "0xCA6708", VA = "0xCA6708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool moveByCurveLastDist;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve animationCurveLastDist;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float distance;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float timeDistanceMove;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent OnStartMoveDirection;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UISignal arrow;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xCA62F4", Offset = "0xCA62F4", VA = "0xCA62F4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xCA6450", Offset = "0xCA6450", VA = "0xCA6450")]
	[IteratorStateMachine(typeof(<MoveAsBot>d__8))]
	private IEnumerator MoveAsBot()
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xCA64EC", Offset = "0xCA64EC", VA = "0xCA64EC")]
	public void Break()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xCA64F8", Offset = "0xCA64F8", VA = "0xCA64F8", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xCA6520", Offset = "0xCA6520", VA = "0xCA6520")]
	public ProjectileBezierCustom()
	{
	}
}
[Token(Token = "0x2000118")]
public class ProjectileRigidbody : Projectile
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 moveDirection;

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xCA6750", Offset = "0xCA6750", VA = "0xCA6750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xCA6790", Offset = "0xCA6790", VA = "0xCA6790")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xCA6814", Offset = "0xCA6814", VA = "0xCA6814")]
	public ProjectileRigidbody()
	{
	}
}
[Token(Token = "0x2000119")]
public class RandomActivation : MonoBehaviour
{
	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objs;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xCA6824", Offset = "0xCA6824", VA = "0xCA6824")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xCA6870", Offset = "0xCA6870", VA = "0xCA6870")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xCA68D4", Offset = "0xCA68D4", VA = "0xCA68D4")]
	public RandomActivation()
	{
	}
}
[Token(Token = "0x200011A")]
public class Shooter : MonoBehaviour
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject projectilePrefab;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shootPoint;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xCA68DC", Offset = "0xCA68DC", VA = "0xCA68DC", Slot = "4")]
	public virtual void Shoot()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xCA5488", Offset = "0xCA5488", VA = "0xCA5488")]
	public Shooter()
	{
	}
}
[Token(Token = "0x200011B")]
public class ShootMorePointsBoss : MonoBehaviour
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShootChecker[] shootCheckers;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnAllShooted;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _count;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xCA69C8", Offset = "0xCA69C8", VA = "0xCA69C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xCA6AB4", Offset = "0xCA6AB4", VA = "0xCA6AB4")]
	public int GetShootCount()
	{
		return default(int);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xCA6AD0", Offset = "0xCA6AD0", VA = "0xCA6AD0")]
	public void Damaged()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xCA6AF8", Offset = "0xCA6AF8", VA = "0xCA6AF8")]
	public void ResetPoints()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xCA6B18", Offset = "0xCA6B18", VA = "0xCA6B18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xCA6BF4", Offset = "0xCA6BF4", VA = "0xCA6BF4")]
	public ShootMorePointsBoss()
	{
	}
}
[Token(Token = "0x200011C")]
public class ShootPointsBoss : MonoBehaviour
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int shootCountEasy;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int shootCountNormal;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int shootCountHard;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ShootChecker shootChecker;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnAllShooted;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _count;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xCA6BFC", Offset = "0xCA6BFC", VA = "0xCA6BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xCA6CE0", Offset = "0xCA6CE0", VA = "0xCA6CE0")]
	public int GetShootCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xCA6D6C", Offset = "0xCA6D6C", VA = "0xCA6D6C")]
	public void Damaged()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xCA6D94", Offset = "0xCA6D94", VA = "0xCA6D94")]
	public void ResetPoints()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xCA6DAC", Offset = "0xCA6DAC", VA = "0xCA6DAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xCA6E84", Offset = "0xCA6E84", VA = "0xCA6E84")]
	public ShootPointsBoss()
	{
	}
}
[Token(Token = "0x200011D")]
public class SliceTentacle : MonoBehaviour
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DamageEffectCutted effectCutted;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterSlicerSampleFast[] slicerSampleFast;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int c;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xCA6E8C", Offset = "0xCA6E8C", VA = "0xCA6E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xCA6F98", Offset = "0xCA6F98", VA = "0xCA6F98")]
	public void RemoveBugJoint()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xCA70F0", Offset = "0xCA70F0", VA = "0xCA70F0")]
	public void Remove()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xCA731C", Offset = "0xCA731C", VA = "0xCA731C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xCA743C", Offset = "0xCA743C", VA = "0xCA743C")]
	public SliceTentacle()
	{
	}
}
[Token(Token = "0x200011E")]
public class TunnelMove : MonoBehaviour
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool move;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startPosY;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endPosY;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xCA7444", Offset = "0xCA7444", VA = "0xCA7444")]
	public void SetMove(bool state)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xCA7450", Offset = "0xCA7450", VA = "0xCA7450")]
	private void Update()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xCA7584", Offset = "0xCA7584", VA = "0xCA7584")]
	public TunnelMove()
	{
	}
}
[Token(Token = "0x200011F")]
public class AngleMethods
{
	[Token(Token = "0x6000451")]
	[Address(RVA = "0xCA758C", Offset = "0xCA758C", VA = "0xCA758C")]
	public static Vector3 GetDirection(Direction direction)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xCA7600", Offset = "0xCA7600", VA = "0xCA7600")]
	public static Direction CrossDirection(Direction h, Direction v)
	{
		return default(Direction);
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xCA7680", Offset = "0xCA7680", VA = "0xCA7680")]
	public static void GetDirection(Direction dir, out Direction side, out Direction stage)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xCA76E4", Offset = "0xCA76E4", VA = "0xCA76E4")]
	public static Direction GetDirection(Obstacle.Type type)
	{
		return default(Direction);
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xCA7704", Offset = "0xCA7704", VA = "0xCA7704")]
	public static CollinearData CollinearVectors()
	{
		return default(CollinearData);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xCA770C", Offset = "0xCA770C", VA = "0xCA770C")]
	public AngleMethods()
	{
	}
}
[Token(Token = "0x2000120")]
public struct CollinearData
{
}
[Serializable]
[Token(Token = "0x2000121")]
public enum Direction
{
	[Token(Token = "0x40004FB")]
	Up,
	[Token(Token = "0x40004FC")]
	UpRight,
	[Token(Token = "0x40004FD")]
	Right,
	[Token(Token = "0x40004FE")]
	DownRight,
	[Token(Token = "0x40004FF")]
	Down,
	[Token(Token = "0x4000500")]
	DownLeft,
	[Token(Token = "0x4000501")]
	Left,
	[Token(Token = "0x4000502")]
	UpLeft,
	[Token(Token = "0x4000503")]
	Center
}
[Token(Token = "0x2000122")]
public class EnableEvent : MonoBehaviour
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onEnable;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xCA7714", Offset = "0xCA7714", VA = "0xCA7714")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xCA7728", Offset = "0xCA7728", VA = "0xCA7728")]
	public EnableEvent()
	{
	}
}
[Token(Token = "0x2000123")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lookAtPlayer;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xCA7730", Offset = "0xCA7730", VA = "0xCA7730")]
	private void Start()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xCA77E4", Offset = "0xCA77E4", VA = "0xCA77E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xCA7850", Offset = "0xCA7850", VA = "0xCA7850")]
	public LookAt()
	{
	}
}
[Token(Token = "0x2000124")]
public class MoveForward : MonoBehaviour
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HitArrowsChecker checker;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeMove;

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xCA7858", Offset = "0xCA7858", VA = "0xCA7858")]
	private void Start()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xCA7930", Offset = "0xCA7930", VA = "0xCA7930")]
	public void Move()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xCA79D4", Offset = "0xCA79D4", VA = "0xCA79D4")]
	public void Stop()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xCA7A4C", Offset = "0xCA7A4C", VA = "0xCA7A4C")]
	public MoveForward()
	{
	}
}
[Token(Token = "0x2000125")]
public class MovePlayerToPoint : MonoBehaviour
{
	[Token(Token = "0x2000126")]
	[CompilerGenerated]
	private sealed class <Move>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovePlayerToPoint <>4__this;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000467")]
			[Address(RVA = "0xCA7CEC", Offset = "0xCA7CEC", VA = "0xCA7CEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000469")]
			[Address(RVA = "0xCA7D34", Offset = "0xCA7D34", VA = "0xCA7D34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xCA7B60", Offset = "0xCA7B60", VA = "0xCA7B60")]
		[DebuggerHidden]
		public <Move>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xCA7B98", Offset = "0xCA7B98", VA = "0xCA7B98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xCA7B9C", Offset = "0xCA7B9C", VA = "0xCA7B9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xCA7CF4", Offset = "0xCA7CF4", VA = "0xCA7CF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform player;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform endPoint;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeMove;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xCA7A5C", Offset = "0xCA7A5C", VA = "0xCA7A5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xCA7ACC", Offset = "0xCA7ACC", VA = "0xCA7ACC")]
	public void StartMove()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xCA7AEC", Offset = "0xCA7AEC", VA = "0xCA7AEC")]
	[IteratorStateMachine(typeof(<Move>d__5))]
	private IEnumerator Move()
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xCA7B88", Offset = "0xCA7B88", VA = "0xCA7B88")]
	public MovePlayerToPoint()
	{
	}
}
[Token(Token = "0x2000127")]
public class SetToPoint : MonoBehaviour
{
	[Token(Token = "0x2000128")]
	[CompilerGenerated]
	private sealed class <Move>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetToPoint <>4__this;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pos;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__2;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startPoint>5__3;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000472")]
			[Address(RVA = "0xCA8040", Offset = "0xCA8040", VA = "0xCA8040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000474")]
			[Address(RVA = "0xCA8088", Offset = "0xCA8088", VA = "0xCA8088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xCA7EE4", Offset = "0xCA7EE4", VA = "0xCA7EE4")]
		[DebuggerHidden]
		public <Move>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0xCA7F1C", Offset = "0xCA7F1C", VA = "0xCA7F1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xCA7F20", Offset = "0xCA7F20", VA = "0xCA7F20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xCA8048", Offset = "0xCA8048", VA = "0xCA8048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeMove;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerTransform;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xCA7D3C", Offset = "0xCA7D3C", VA = "0xCA7D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xCA7DD0", Offset = "0xCA7DD0", VA = "0xCA7DD0")]
	public void SetToPointMove()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xCA7EBC", Offset = "0xCA7EBC", VA = "0xCA7EBC")]
	public void RevertToPoint()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xCA7E24", Offset = "0xCA7E24", VA = "0xCA7E24")]
	[IteratorStateMachine(typeof(<Move>d__7))]
	private IEnumerator Move(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xCA7F0C", Offset = "0xCA7F0C", VA = "0xCA7F0C")]
	public SetToPoint()
	{
	}
}
[Token(Token = "0x2000129")]
public class SpawnWeapons : MonoBehaviour
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPoint;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 dirSpawn;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dist;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Obstacle.Type[] typesWeapons;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startPos;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WeaponSwitcher rightWeaponSwitcher;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WeaponSwitcher leftWeaponSwitcher;

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xCA8090", Offset = "0xCA8090", VA = "0xCA8090")]
	public void Start()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xCA8174", Offset = "0xCA8174", VA = "0xCA8174")]
	public void SpawnWeapon()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xCA8274", Offset = "0xCA8274", VA = "0xCA8274")]
	public void UnGrabWeapon()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xCA82A4", Offset = "0xCA82A4", VA = "0xCA82A4")]
	public SpawnWeapons()
	{
	}
}
[Token(Token = "0x200012A")]
public class StartEvent : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onStart;

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xCA82B4", Offset = "0xCA82B4", VA = "0xCA82B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xCA82C8", Offset = "0xCA82C8", VA = "0xCA82C8")]
	public StartEvent()
	{
	}
}
[Token(Token = "0x200012B")]
public class TimeEvent : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeDelay;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onTime;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xCA82D0", Offset = "0xCA82D0", VA = "0xCA82D0")]
	public void RunDelay()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xCA8320", Offset = "0xCA8320", VA = "0xCA8320")]
	public void RunDelay(float _delay)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xCA837C", Offset = "0xCA837C", VA = "0xCA837C")]
	private void DoOnTime()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xCA8398", Offset = "0xCA8398", VA = "0xCA8398")]
	public void StopTimeEvent()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xCA83E4", Offset = "0xCA83E4", VA = "0xCA83E4")]
	public TimeEvent()
	{
	}
}
[Token(Token = "0x200012C")]
public class TriggerPlayer : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTriggerPlayer;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xCA83EC", Offset = "0xCA83EC", VA = "0xCA83EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xCA84EC", Offset = "0xCA84EC", VA = "0xCA84EC")]
	public TriggerPlayer()
	{
	}
}
[Token(Token = "0x200012D")]
public class WaveSlice : MonoBehaviour
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject waveSlice;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject effect;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 sliceVector;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool startSlice;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool sliced;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float side;

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xCA84F4", Offset = "0xCA84F4", VA = "0xCA84F4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xCA85AC", Offset = "0xCA85AC", VA = "0xCA85AC")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xCA8678", Offset = "0xCA8678", VA = "0xCA8678")]
	public void CreateSliceWave()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xCA8A28", Offset = "0xCA8A28", VA = "0xCA8A28")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xCA8A64", Offset = "0xCA8A64", VA = "0xCA8A64")]
	public WaveSlice()
	{
	}
}
[Token(Token = "0x200012E")]
public class BotArrowState : MonoBehaviour
{
	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UICanvasState _arrow;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _oldUI;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _enemyTr;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Enemy _enemy;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _distanceMax;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _power;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _startPoint;

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xCA8A74", Offset = "0xCA8A74", VA = "0xCA8A74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xCA8DF0", Offset = "0xCA8DF0", VA = "0xCA8DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xCA8DCC", Offset = "0xCA8DCC", VA = "0xCA8DCC")]
	private void DisableUI()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xCA8E80", Offset = "0xCA8E80", VA = "0xCA8E80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xCA8FD8", Offset = "0xCA8FD8", VA = "0xCA8FD8")]
	public BotArrowState()
	{
	}
}
[Token(Token = "0x200012F")]
public class BotWeapon : MonoBehaviour
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject shootEffect;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform gunPoint;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AudioClip[] shootSounds;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected AudioSource preFireSource;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected ShootLine shootLine;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected AudioClip reloadSound;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected float reloadVolume;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _infinity;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _shootAuto;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xCA8FE0", Offset = "0xCA8FE0", VA = "0xCA8FE0")]
	public void SetInfinity(bool state)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xCA8FEC", Offset = "0xCA8FEC", VA = "0xCA8FEC")]
	public Vector3 GetGunPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xCA90A4", Offset = "0xCA90A4", VA = "0xCA90A4", Slot = "4")]
	public virtual void ReloadWeapon()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xCA9140", Offset = "0xCA9140", VA = "0xCA9140", Slot = "5")]
	public virtual void FlyBullet()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xCA9144", Offset = "0xCA9144", VA = "0xCA9144")]
	public void Shoot(Vector3 point)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xCA94C4", Offset = "0xCA94C4", VA = "0xCA94C4")]
	public void ReturnShootEffect()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xCA956C", Offset = "0xCA956C", VA = "0xCA956C")]
	public void SetShootEffect()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xCA9614", Offset = "0xCA9614", VA = "0xCA9614")]
	public void ShootAuto()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xCA93AC", Offset = "0xCA93AC", VA = "0xCA93AC")]
	public void CreateShootLine(Vector3 startPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xCA9640", Offset = "0xCA9640", VA = "0xCA9640")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xCA969C", Offset = "0xCA969C", VA = "0xCA969C")]
	public BotWeapon()
	{
	}
}
[Token(Token = "0x2000130")]
public class BotWeaponSwitcher : MonoBehaviour
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject weaponL;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject weaponR;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xCA96AC", Offset = "0xCA96AC", VA = "0xCA96AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xCA971C", Offset = "0xCA971C", VA = "0xCA971C")]
	public BotWeaponSwitcher()
	{
	}
}
[Token(Token = "0x2000131")]
public class AttentionMenu : MonoBehaviour
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayShowPause;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool showAttention;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool pause;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerMover playerMover;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameController gameController;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xCA9724", Offset = "0xCA9724", VA = "0xCA9724")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xCA97D4", Offset = "0xCA97D4", VA = "0xCA97D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xCA98C4", Offset = "0xCA98C4", VA = "0xCA98C4")]
	public void SetPauseDelay()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xCA9914", Offset = "0xCA9914", VA = "0xCA9914")]
	public void Pause()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xCA97D8", Offset = "0xCA97D8", VA = "0xCA97D8")]
	public void Check()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xCA9940", Offset = "0xCA9940", VA = "0xCA9940")]
	public AttentionMenu()
	{
	}
}
[Token(Token = "0x2000132")]
public class BackToButton : MenuButton
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int sceneNumber;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnBeforeBack;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xCA9950", Offset = "0xCA9950", VA = "0xCA9950", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xCA9A80", Offset = "0xCA9A80", VA = "0xCA9A80")]
	public BackToButton()
	{
	}
}
[Token(Token = "0x2000133")]
[RequireComponent(typeof(LongHoldButton))]
public class ButtonCursorFollower : MonoBehaviour
{
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LongHoldButton button;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cursor;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool2 constrains;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 t_newPoint;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xCA9A90", Offset = "0xCA9A90", VA = "0xCA9A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xCA9C40", Offset = "0xCA9C40", VA = "0xCA9C40")]
	private void SetFollow(VRButton _button)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xCA9C60", Offset = "0xCA9C60", VA = "0xCA9C60")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xCA9EDC", Offset = "0xCA9EDC", VA = "0xCA9EDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xCAA058", Offset = "0xCAA058", VA = "0xCAA058")]
	public ButtonCursorFollower()
	{
	}
}
[Token(Token = "0x2000134")]
public class ButtonLocker : MonoBehaviour
{
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xCAA060", Offset = "0xCAA060", VA = "0xCAA060", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xCAA0C0", Offset = "0xCAA0C0", VA = "0xCAA0C0")]
	public ButtonLocker()
	{
	}
}
[Token(Token = "0x2000135")]
public class ButtonSelector : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MenuButton currentActive;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xCAA0C8", Offset = "0xCAA0C8", VA = "0xCAA0C8")]
	public void SelectButton(MenuButton _button)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xCAA23C", Offset = "0xCAA23C", VA = "0xCAA23C")]
	public ButtonSelector()
	{
	}
}
[Token(Token = "0x2000136")]
public class CheckBoxAnimator : MonoBehaviour
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRButton theButton;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int boolId;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro textField;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string trueState;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string falseState;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xCAA244", Offset = "0xCAA244", VA = "0xCAA244")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xCAA408", Offset = "0xCAA408", VA = "0xCAA408")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xCAA488", Offset = "0xCAA488", VA = "0xCAA488")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xCAA4A4", Offset = "0xCAA4A4", VA = "0xCAA4A4")]
	private void SetState(VRButton _button)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xCAA398", Offset = "0xCAA398", VA = "0xCAA398")]
	public void SetState(bool _state)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xCAA4BC", Offset = "0xCAA4BC", VA = "0xCAA4BC")]
	private void LocaleChanged(Locale locale)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xCAA524", Offset = "0xCAA524", VA = "0xCAA524")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xCAA5A4", Offset = "0xCAA5A4", VA = "0xCAA5A4")]
	public CheckBoxAnimator()
	{
	}
}
[Token(Token = "0x2000137")]
public class CloseButton : MenuButton
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject restartButtons;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject marketingButtons;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xCAA64C", Offset = "0xCAA64C", VA = "0xCAA64C", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xCAA6AC", Offset = "0xCAA6AC", VA = "0xCAA6AC")]
	public CloseButton()
	{
	}
}
[Token(Token = "0x2000138")]
public class ComicsMenu : MonoBehaviour
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GenericButton genericButton;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ComicsController comicsController;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject soundController;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xCAA6BC", Offset = "0xCAA6BC", VA = "0xCAA6BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xCAA944", Offset = "0xCAA944", VA = "0xCAA944")]
	public void ShowButton()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xCAA9AC", Offset = "0xCAA9AC", VA = "0xCAA9AC")]
	private void OnPush(VRButton button)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xCAAAD8", Offset = "0xCAAAD8", VA = "0xCAAAD8")]
	private void HideComics()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xCAAB1C", Offset = "0xCAAB1C", VA = "0xCAAB1C")]
	public void LoadGame()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xCAAB20", Offset = "0xCAAB20", VA = "0xCAAB20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xCAACAC", Offset = "0xCAACAC", VA = "0xCAACAC")]
	public ComicsMenu()
	{
	}
}
[Token(Token = "0x2000139")]
public class Difficulty : MenuButton
{
	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xCAACB4", Offset = "0xCAACB4", VA = "0xCAACB4", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xCAAD60", Offset = "0xCAAD60", VA = "0xCAAD60", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xCAAE48", Offset = "0xCAAE48", VA = "0xCAAE48")]
	public Difficulty()
	{
	}
}
[Token(Token = "0x200013A")]
public class EmailController : MonoBehaviour
{
	[Token(Token = "0x200013B")]
	[CompilerGenerated]
	private sealed class <SendProcess>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmailController <>4__this;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _mail;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004C5")]
			[Address(RVA = "0xCAB2FC", Offset = "0xCAB2FC", VA = "0xCAB2FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004C7")]
			[Address(RVA = "0xCAB344", Offset = "0xCAB344", VA = "0xCAB344", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xCAAFBC", Offset = "0xCAAFBC", VA = "0xCAAFBC")]
		[DebuggerHidden]
		public <SendProcess>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xCAB03C", Offset = "0xCAB03C", VA = "0xCAB03C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xCAB040", Offset = "0xCAB040", VA = "0xCAB040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xCAB304", Offset = "0xCAB304", VA = "0xCAB304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DemoScene demoScene;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Keyboard keyb;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string BASE_URL;

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xCAAE58", Offset = "0xCAAE58", VA = "0xCAAE58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xCAAE78", Offset = "0xCAAE78", VA = "0xCAAE78")]
	public void SendMail(string _mail)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xCAAF2C", Offset = "0xCAAF2C", VA = "0xCAAF2C")]
	[IteratorStateMachine(typeof(<SendProcess>d__5))]
	private IEnumerator SendProcess(string _mail)
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xCAAFE4", Offset = "0xCAAFE4", VA = "0xCAAFE4")]
	public EmailController()
	{
	}
}
[Token(Token = "0x200013C")]
public class EnemySpeed : MenuButton
{
	[Token(Token = "0x200013D")]
	public enum Mode
	{
		[Token(Token = "0x4000562")]
		Fast,
		[Token(Token = "0x4000563")]
		Medium,
		[Token(Token = "0x4000564")]
		Slow
	}

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mode mode;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xCAB34C", Offset = "0xCAB34C", VA = "0xCAB34C", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xCAB38C", Offset = "0xCAB38C", VA = "0xCAB38C")]
	private void SetEnemySpeed()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xCAB42C", Offset = "0xCAB42C", VA = "0xCAB42C", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xCAB4E8", Offset = "0xCAB4E8", VA = "0xCAB4E8")]
	public EnemySpeed()
	{
	}
}
[Token(Token = "0x200013E")]
public class GenericButton : VRButton
{
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform buttonRoot;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro textField;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject frame;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture mainTexture;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture lockedTexture;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture selectedTexture;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color mainTextColor;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color lockedTextColor;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color selectedTextColor;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Renderer mainRenderer;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly int emissionTextureId;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 rememberedButtonLocalPos;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 rememberedInfoLocalPos;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xCAB4F8", Offset = "0xCAB4F8", VA = "0xCAB4F8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xCAB62C", Offset = "0xCAB62C", VA = "0xCAB62C", Slot = "8")]
	public override void ChangeVisual()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xCAB6D0", Offset = "0xCAB6D0", VA = "0xCAB6D0", Slot = "14")]
	protected virtual void SetupVisual(Texture _texture, Color _textColor, float _shifted = 0f, float _scale = 1f, bool _bold = false, bool _framed = false)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xCAA8AC", Offset = "0xCAA8AC", VA = "0xCAA8AC")]
	public void SetActive(bool _state)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xCABB18", Offset = "0xCABB18", VA = "0xCABB18")]
	public GenericButton()
	{
	}
}
[Token(Token = "0x200013F")]
public class GrabMode : MenuButton
{
	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xCABB9C", Offset = "0xCABB9C", VA = "0xCABB9C", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xCABBC0", Offset = "0xCABBC0", VA = "0xCABBC0", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xCABBC4", Offset = "0xCABBC4", VA = "0xCABBC4")]
	public GrabMode()
	{
	}
}
[Token(Token = "0x2000140")]
public interface ILongHoldButton
{
	[Token(Token = "0x60004D4")]
	void UnPush();
}
[Token(Token = "0x2000141")]
public class InGameMenu : MonoBehaviour
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnGameEnded;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int backSceneNumber;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xCABBD4", Offset = "0xCABBD4", VA = "0xCABBD4", Slot = "4")]
	protected virtual void Resume(VRButton _button)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xCABC38", Offset = "0xCABC38", VA = "0xCABC38", Slot = "5")]
	protected virtual void Restart(VRButton _button)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xCABDE4", Offset = "0xCABDE4", VA = "0xCABDE4", Slot = "6")]
	protected virtual void Menu(VRButton _button)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xCABEC8", Offset = "0xCABEC8", VA = "0xCABEC8", Slot = "7")]
	protected virtual void Back(VRButton _button)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xCABFB4", Offset = "0xCABFB4", VA = "0xCABFB4", Slot = "8")]
	protected virtual void NextLevel(VRButton _button)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xCAC06C", Offset = "0xCAC06C", VA = "0xCAC06C")]
	public InGameMenu()
	{
	}
}
[Token(Token = "0x2000142")]
public class ListPositions : MonoBehaviour
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float yOffset;

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xCAC07C", Offset = "0xCAC07C", VA = "0xCAC07C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xCAC1B4", Offset = "0xCAC1B4", VA = "0xCAC1B4")]
	public ListPositions()
	{
	}
}
[Token(Token = "0x2000143")]
public class LivesMode : MenuButton
{
	[Token(Token = "0x2000144")]
	public enum Mode
	{
		[Token(Token = "0x4000578")]
		FiveLives,
		[Token(Token = "0x4000579")]
		ThreeLives,
		[Token(Token = "0x400057A")]
		OneLive,
		[Token(Token = "0x400057B")]
		NoFail
	}

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mode mode;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject livesHud;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xCAC1C4", Offset = "0xCAC1C4", VA = "0xCAC1C4", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xCAC220", Offset = "0xCAC220", VA = "0xCAC220")]
	private void SetPlayerLives()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xCAC2F8", Offset = "0xCAC2F8", VA = "0xCAC2F8", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xCAC3F0", Offset = "0xCAC3F0", VA = "0xCAC3F0")]
	public LivesMode()
	{
	}
}
[Token(Token = "0x2000145")]
public class LockButton : MonoBehaviour
{
	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xCAC408", Offset = "0xCAC408", VA = "0xCAC408")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xCAC40C", Offset = "0xCAC40C", VA = "0xCAC40C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xCAC410", Offset = "0xCAC410", VA = "0xCAC410")]
	public LockButton()
	{
	}
}
[Token(Token = "0x2000146")]
public class LongHoldButton : GenericButton, ILongHoldButton
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform cursor;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xCAC418", Offset = "0xCAC418", VA = "0xCAC418", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xCAC4A0", Offset = "0xCAC4A0", VA = "0xCAC4A0", Slot = "7")]
	public override void UnPush()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xCAC510", Offset = "0xCAC510", VA = "0xCAC510")]
	public LongHoldButton()
	{
	}
}
[Token(Token = "0x2000147")]
public class MainHandButton : MenuButton
{
	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xCAC514", Offset = "0xCAC514", VA = "0xCAC514", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xCAC590", Offset = "0xCAC590", VA = "0xCAC590", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xCAC63C", Offset = "0xCAC63C", VA = "0xCAC63C")]
	public MainHandButton()
	{
	}
}
[Token(Token = "0x2000148")]
public class MainMenuButtonsController : MonoBehaviour
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] levelButtons;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] testerButtons;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] notTesterButtons;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xCAC64C", Offset = "0xCAC64C", VA = "0xCAC64C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xCAC8B0", Offset = "0xCAC8B0", VA = "0xCAC8B0")]
	public void SetButtons(bool state)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xCAC918", Offset = "0xCAC918", VA = "0xCAC918")]
	public MainMenuButtonsController()
	{
	}
}
[Token(Token = "0x2000149")]
public class MenuButton : VRButton
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startLocalScale;

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xCAC920", Offset = "0xCAC920", VA = "0xCAC920")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xCACA40", Offset = "0xCACA40", VA = "0xCACA40", Slot = "14")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xCACB38", Offset = "0xCACB38", VA = "0xCACB38", Slot = "8")]
	public override void ChangeVisual()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xCACBA8", Offset = "0xCACBA8", VA = "0xCACBA8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xCACBD4", Offset = "0xCACBD4", VA = "0xCACBD4", Slot = "15")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xCA2A68", Offset = "0xCA2A68", VA = "0xCA2A68")]
	public MenuButton()
	{
	}
}
[Token(Token = "0x200014A")]
public class MenuController : MonoBehaviour
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuController _instance;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MainMenuButtonsController mainMenu;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RestartMenu restartMenu;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pauseMenu;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FormSender asker;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject marketingMenu;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xCACCCC", Offset = "0xCACCCC", VA = "0xCACCCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xCACD24", Offset = "0xCACD24", VA = "0xCACD24")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xCAD27C", Offset = "0xCAD27C", VA = "0xCAD27C")]
	public void OnStopGame()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xCAD344", Offset = "0xCAD344", VA = "0xCAD344")]
	private void ShowMenu()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xCAD624", Offset = "0xCAD624", VA = "0xCAD624")]
	public void ShowPauseMenu()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xCAD644", Offset = "0xCAD644", VA = "0xCAD644")]
	private void DelayedHideMenu()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xCAD698", Offset = "0xCAD698", VA = "0xCAD698")]
	private void HideMenu()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xCAD788", Offset = "0xCAD788", VA = "0xCAD788")]
	public void MainMenu()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xCAD824", Offset = "0xCAD824", VA = "0xCAD824")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xCADD2C", Offset = "0xCADD2C", VA = "0xCADD2C")]
	public MenuController()
	{
	}
}
[Token(Token = "0x200014B")]
public class MenuMenuButton : MenuButton
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool pausedButton;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xCADD34", Offset = "0xCADD34", VA = "0xCADD34", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xCADD6C", Offset = "0xCADD6C", VA = "0xCADD6C", Slot = "6")]
	public override void OnPush()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xCADE54", Offset = "0xCADE54", VA = "0xCADE54", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xCADEB0", Offset = "0xCADEB0", VA = "0xCADEB0")]
	public MenuMenuButton()
	{
	}
}
[Token(Token = "0x200014C")]
public class OnEnableInTutorUnityEvent : MonoBehaviour
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent inTutor;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent notInTutor;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent inTester;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xCADEC0", Offset = "0xCADEC0", VA = "0xCADEC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xCADF7C", Offset = "0xCADF7C", VA = "0xCADF7C")]
	public OnEnableInTutorUnityEvent()
	{
	}
}
[Token(Token = "0x200014D")]
public class PageSelector : MonoBehaviour
{
	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIRadioGroup radio;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xCADF84", Offset = "0xCADF84", VA = "0xCADF84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xCADFD8", Offset = "0xCADFD8", VA = "0xCADFD8")]
	private void DelayedPush()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xCAE048", Offset = "0xCAE048", VA = "0xCAE048")]
	public PageSelector()
	{
	}
}
[Token(Token = "0x200014E")]
public class PauseMenu : InGameMenu
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GenericButton resumeButton;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GenericButton restartButton;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GenericButton menuButton;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GenericButton backToButton;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GenericButton restartButtonTutor;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GenericButton> buttons;

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xCAE050", Offset = "0xCAE050", VA = "0xCAE050")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xCAE508", Offset = "0xCAE508", VA = "0xCAE508")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xCAE46C", Offset = "0xCAE46C", VA = "0xCAE46C")]
	public void HideButtons()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xCAE50C", Offset = "0xCAE50C", VA = "0xCAE50C")]
	public void ShowButtons()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xCAE5E8", Offset = "0xCAE5E8", VA = "0xCAE5E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xCAE5EC", Offset = "0xCAE5EC", VA = "0xCAE5EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xCAE864", Offset = "0xCAE864", VA = "0xCAE864")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x200014F")]
public class RestartButton : MenuButton
{
	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool pausedButton;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xCAE8F4", Offset = "0xCAE8F4", VA = "0xCAE8F4", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xCAEA24", Offset = "0xCAEA24", VA = "0xCAEA24", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xCAEA80", Offset = "0xCAEA80", VA = "0xCAEA80")]
	public RestartButton()
	{
	}
}
[Token(Token = "0x2000150")]
public class RestartMenu : InGameMenu
{
	[Token(Token = "0x2000151")]
	private enum WinType
	{
		[Token(Token = "0x400059A")]
		None,
		[Token(Token = "0x400059B")]
		Lose,
		[Token(Token = "0x400059C")]
		Win
	}

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GenericButton restartButton;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GenericButton nextLevelButton;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GenericButton menuButton;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject winRoot;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject loseRoot;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] finalPanels;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xCAEA90", Offset = "0xCAEA90", VA = "0xCAEA90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xCAEC80", Offset = "0xCAEC80", VA = "0xCAEC80")]
	public void ShowTutorButton()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xCAD54C", Offset = "0xCAD54C", VA = "0xCAD54C")]
	public void ShowWin()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xCAD50C", Offset = "0xCAD50C", VA = "0xCAD50C")]
	public void ShowLose()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xCAEE2C", Offset = "0xCAEE2C", VA = "0xCAEE2C")]
	private void ShowWinLabel(WinType _win)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xCAECC0", Offset = "0xCAECC0", VA = "0xCAECC0")]
	private void ShowNextButton(bool _show)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xCAD764", Offset = "0xCAD764", VA = "0xCAD764")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xCAEE78", Offset = "0xCAEE78", VA = "0xCAEE78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xCAF068", Offset = "0xCAF068", VA = "0xCAF068")]
	private void HidePanels()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xCAF0CC", Offset = "0xCAF0CC", VA = "0xCAF0CC", Slot = "8")]
	protected override void NextLevel(VRButton _button)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xCAF0E4", Offset = "0xCAF0E4", VA = "0xCAF0E4", Slot = "5")]
	protected override void Restart(VRButton _button)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xCAF0FC", Offset = "0xCAF0FC", VA = "0xCAF0FC", Slot = "6")]
	protected override void Menu(VRButton _button)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xCAF114", Offset = "0xCAF114", VA = "0xCAF114")]
	public RestartMenu()
	{
	}
}
[Token(Token = "0x2000152")]
public class ResumeButton : MenuButton
{
	[Token(Token = "0x600051D")]
	[Address(RVA = "0xCAF124", Offset = "0xCAF124", VA = "0xCAF124", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xCAF1B8", Offset = "0xCAF1B8", VA = "0xCAF1B8", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xCAF214", Offset = "0xCAF214", VA = "0xCAF214")]
	public ResumeButton()
	{
	}
}
[Token(Token = "0x2000153")]
public class StartButton : MenuButton
{
	[Token(Token = "0x6000520")]
	[Address(RVA = "0xCAF224", Offset = "0xCAF224", VA = "0xCAF224", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xCAF2B8", Offset = "0xCAF2B8", VA = "0xCAF2B8", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xCAF314", Offset = "0xCAF314", VA = "0xCAF314")]
	public StartButton()
	{
	}
}
[Token(Token = "0x2000154")]
public class StartEditorButton : MenuButton
{
	[Token(Token = "0x6000523")]
	[Address(RVA = "0xCAF324", Offset = "0xCAF324", VA = "0xCAF324", Slot = "14")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xCAF328", Offset = "0xCAF328", VA = "0xCAF328", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xCAF3A0", Offset = "0xCAF3A0", VA = "0xCAF3A0", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xCAF3A4", Offset = "0xCAF3A4", VA = "0xCAF3A4", Slot = "15")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xCAF3A8", Offset = "0xCAF3A8", VA = "0xCAF3A8")]
	public StartEditorButton()
	{
	}
}
[Token(Token = "0x2000155")]
public class StartLevelButton : MenuButton
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DifficultyLevel difficulty;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xCAF3B8", Offset = "0xCAF3B8", VA = "0xCAF3B8", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xCAF4B4", Offset = "0xCAF4B4", VA = "0xCAF4B4", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xCAF4B8", Offset = "0xCAF4B8", VA = "0xCAF4B8")]
	public StartLevelButton()
	{
	}
}
[Token(Token = "0x2000156")]
public class SubscribeButton : MenuButton
{
	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject text;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xCAF4C8", Offset = "0xCAF4C8", VA = "0xCAF4C8", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xCAF530", Offset = "0xCAF530", VA = "0xCAF530")]
	public SubscribeButton()
	{
	}
}
[Token(Token = "0x2000157")]
public class Title : MonoBehaviour
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GenericButton button;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xCAF540", Offset = "0xCAF540", VA = "0xCAF540")]
	private void Start()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xCAF6C0", Offset = "0xCAF6C0", VA = "0xCAF6C0")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xCAF7A8", Offset = "0xCAF7A8", VA = "0xCAF7A8")]
	public void Menu(VRButton button)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xCAF850", Offset = "0xCAF850", VA = "0xCAF850")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xCAF938", Offset = "0xCAF938", VA = "0xCAF938")]
	public Title()
	{
	}
}
[Token(Token = "0x2000158")]
public class TutorButtonLocker : ButtonLocker
{
	[Token(Token = "0x6000532")]
	[Address(RVA = "0xCAF940", Offset = "0xCAF940", VA = "0xCAF940", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xCAF944", Offset = "0xCAF944", VA = "0xCAF944", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xCAF9E0", Offset = "0xCAF9E0", VA = "0xCAF9E0")]
	public TutorButtonLocker()
	{
	}
}
[Token(Token = "0x2000159")]
public class UISlider : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRButton inc;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRButton dec;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LongHoldButton button;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro valueTextField;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int currentValue;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int minValue;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int maxValue;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int step;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform axisStart;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform maxPos;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform visualPoint;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<UISlider> OnChange;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isLooking;

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xCAF9E8", Offset = "0xCAF9E8", VA = "0xCAF9E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xCAFC54", Offset = "0xCAFC54", VA = "0xCAFC54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xCAFC90", Offset = "0xCAFC90", VA = "0xCAFC90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xCB006C", Offset = "0xCB006C", VA = "0xCB006C")]
	private void SetLooking(VRButton _button)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xCAFEEC", Offset = "0xCAFEEC", VA = "0xCAFEEC")]
	public void SetValue01(float _value)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xCB0128", Offset = "0xCB0128", VA = "0xCB0128")]
	public float GetValue01()
	{
		return default(float);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xCAFC58", Offset = "0xCAFC58", VA = "0xCAFC58")]
	private void UpdateText(UISlider _slider)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xCB0148", Offset = "0xCB0148", VA = "0xCB0148")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xCB02C4", Offset = "0xCB02C4", VA = "0xCB02C4")]
	public UISlider()
	{
	}
}
[Token(Token = "0x200015A")]
public class UnityEventButton : MenuButton
{
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent target;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string initText;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xCB02E0", Offset = "0xCB02E0", VA = "0xCB02E0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xCB03AC", Offset = "0xCB03AC", VA = "0xCB03AC", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xCB03D4", Offset = "0xCB03D4", VA = "0xCB03D4", Slot = "11")]
	protected override void SetText()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xCB0400", Offset = "0xCB0400", VA = "0xCB0400")]
	public UnityEventButton()
	{
	}
}
[Token(Token = "0x200015B")]
public class VRButton : MonoBehaviour
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hide;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool changeVisual;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool selectable;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool unselectable;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<VRButton> OnPushAction;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<VRButton> OnUnPushAction;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<VRButton> OnUnhoverAction;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Collider coll;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected TextMeshPro info;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointed;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool selected;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool locked;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	[HideInInspector]
	public bool isTechniclePush;

	[Token(Token = "0x17000048")]
	public bool IsLocked
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0xCB0410", Offset = "0xCB0410", VA = "0xCB0410")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000049")]
	public bool IsSelected
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xCB0418", Offset = "0xCB0418", VA = "0xCB0418")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xCB031C", Offset = "0xCB031C", VA = "0xCB031C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xCA297C", Offset = "0xCA297C", VA = "0xCA297C", Slot = "5")]
	public virtual void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xCADE50", Offset = "0xCADE50", VA = "0xCADE50", Slot = "6")]
	public virtual void OnPush()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xCAC4F0", Offset = "0xCAC4F0", VA = "0xCAC4F0", Slot = "7")]
	public virtual void UnPush()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xCB0420", Offset = "0xCB0420", VA = "0xCB0420")]
	public void Point(bool _state)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xCAA194", Offset = "0xCAA194", VA = "0xCAA194")]
	public void Select(bool _state, bool _technicle = false)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xCB04E0", Offset = "0xCB04E0", VA = "0xCB04E0", Slot = "8")]
	public virtual void ChangeVisual()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xCB04E4", Offset = "0xCB04E4", VA = "0xCB04E4", Slot = "9")]
	public virtual void SetLockButton(bool state)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xCB04F8", Offset = "0xCB04F8", VA = "0xCB04F8", Slot = "10")]
	public virtual void ChangeVisualLockButton(bool state)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xCB04FC", Offset = "0xCB04FC", VA = "0xCB04FC", Slot = "11")]
	protected virtual void SetText()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xCB0500", Offset = "0xCB0500", VA = "0xCB0500", Slot = "12")]
	public virtual void SetText(string text)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xCB0524", Offset = "0xCB0524", VA = "0xCB0524", Slot = "13")]
	public virtual void ResetButton()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xCB0534", Offset = "0xCB0534", VA = "0xCB0534")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xCABB8C", Offset = "0xCABB8C", VA = "0xCABB8C")]
	public VRButton()
	{
	}
}
[Token(Token = "0x200015C")]
public class VRButtonConstructor : MonoBehaviour
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GenericButton button;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xCB0544", Offset = "0xCB0544", VA = "0xCB0544")]
	public VRButtonConstructor()
	{
	}
}
[Token(Token = "0x200015D")]
public class WishlistButton : MenuButton
{
	[Token(Token = "0x6000553")]
	[Address(RVA = "0xCB054C", Offset = "0xCB054C", VA = "0xCB054C")]
	public WishlistButton()
	{
	}
}
[Token(Token = "0x200015E")]
public class CeilMove : MonoBehaviour
{
	[Token(Token = "0x200015F")]
	[CompilerGenerated]
	private sealed class <Aiming>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CeilMove <>4__this;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600055E")]
			[Address(RVA = "0xCB0BF8", Offset = "0xCB0BF8", VA = "0xCB0BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000560")]
			[Address(RVA = "0xCB0C40", Offset = "0xCB0C40", VA = "0xCB0C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xCB0860", Offset = "0xCB0860", VA = "0xCB0860")]
		[DebuggerHidden]
		public <Aiming>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xCB0A78", Offset = "0xCB0A78", VA = "0xCB0A78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xCB0A7C", Offset = "0xCB0A7C", VA = "0xCB0A7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xCB0C00", Offset = "0xCB0C00", VA = "0xCB0C00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startPoint;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnStartMove;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnEndMove;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeMove;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Enemy enemy;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject effect;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool active;

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xCB055C", Offset = "0xCB055C", VA = "0xCB055C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xCB0768", Offset = "0xCB0768", VA = "0xCB0768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xCB07B8", Offset = "0xCB07B8", VA = "0xCB07B8")]
	public void StartAiming()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xCB07EC", Offset = "0xCB07EC", VA = "0xCB07EC")]
	[IteratorStateMachine(typeof(<Aiming>d__11))]
	private IEnumerator Aiming()
	{
		return null;
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xCB0888", Offset = "0xCB0888", VA = "0xCB0888")]
	public void StopAiming()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xCB0918", Offset = "0xCB0918", VA = "0xCB0918")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xCB0A70", Offset = "0xCB0A70", VA = "0xCB0A70")]
	public CeilMove()
	{
	}
}
[Token(Token = "0x2000160")]
public class ComicsController : MonoBehaviour
{
	[Token(Token = "0x2000161")]
	[CompilerGenerated]
	private sealed class <ComicsProcess>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComicsController <>4__this;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <initPos>5__2;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <finishPos>5__3;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <pointingTime>5__4;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <j>5__5;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <timeToPoint>5__6;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000567")]
			[Address(RVA = "0xCB1424", Offset = "0xCB1424", VA = "0xCB1424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000569")]
			[Address(RVA = "0xCB146C", Offset = "0xCB146C", VA = "0xCB146C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xCB0D44", Offset = "0xCB0D44", VA = "0xCB0D44")]
		[DebuggerHidden]
		public <ComicsProcess>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xCB0D80", Offset = "0xCB0D80", VA = "0xCB0D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xCB0D84", Offset = "0xCB0D84", VA = "0xCB0D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xCB142C", Offset = "0xCB142C", VA = "0xCB142C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvas;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ComicsFrame[] comicsFrames;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ComicsFrame[] comicsFramesNewVoice;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool useNewVoice;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float duration;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] sound;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool firsttime;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int replcheck;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource PlayMySound;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float completeDelay;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action onEndComics;

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xCB0C48", Offset = "0xCB0C48", VA = "0xCB0C48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xCB0CD0", Offset = "0xCB0CD0", VA = "0xCB0CD0")]
	[IteratorStateMachine(typeof(<ComicsProcess>d__12))]
	private IEnumerator ComicsProcess()
	{
		return null;
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xCB0D6C", Offset = "0xCB0D6C", VA = "0xCB0D6C")]
	public ComicsController()
	{
	}
}
[Token(Token = "0x2000162")]
public class ComicsFrame : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000163")]
	public struct CSlide
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image[] images;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioClip[] sound;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] replicas;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool replicascheck;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] changingReplicas;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool durationcheck;
	}

	[Token(Token = "0x2000164")]
	[CompilerGenerated]
	private sealed class <FrameProcess>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComicsFrame <>4__this;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <j>5__3;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000570")]
			[Address(RVA = "0xCB2168", Offset = "0xCB2168", VA = "0xCB2168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000572")]
			[Address(RVA = "0xCB21B0", Offset = "0xCB21B0", VA = "0xCB21B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xCB1698", Offset = "0xCB1698", VA = "0xCB1698")]
		[DebuggerHidden]
		public <FrameProcess>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xCB16D4", Offset = "0xCB16D4", VA = "0xCB16D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xCB16D8", Offset = "0xCB16D8", VA = "0xCB16D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xCB2170", Offset = "0xCB2170", VA = "0xCB2170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource PlayMySound;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool firsttime;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int replCheck;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Fading;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CSlide[] comicsSlides;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject animCheck;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParallaxRotator parallaxRotator;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xCB1474", Offset = "0xCB1474", VA = "0xCB1474")]
	private void Start()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xCB1624", Offset = "0xCB1624", VA = "0xCB1624")]
	[IteratorStateMachine(typeof(<FrameProcess>d__9))]
	private IEnumerator FrameProcess()
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xCB16C0", Offset = "0xCB16C0", VA = "0xCB16C0")]
	public ComicsFrame()
	{
	}
}
[Token(Token = "0x2000165")]
public class DoMe3D : MonoBehaviour
{
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MyMask;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xCB21B8", Offset = "0xCB21B8", VA = "0xCB21B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xCB2248", Offset = "0xCB2248", VA = "0xCB2248")]
	public DoMe3D()
	{
	}
}
[Token(Token = "0x2000166")]
public class Leader : MonoBehaviour
{
	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerHead;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 finishPos;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ComicsController comics;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject music;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform canvas;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator anim;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float curAngle;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float angle;

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xCB2250", Offset = "0xCB2250", VA = "0xCB2250")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xCB2338", Offset = "0xCB2338", VA = "0xCB2338")]
	private void Start()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xCB2360", Offset = "0xCB2360", VA = "0xCB2360")]
	private void Update()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xCB278C", Offset = "0xCB278C", VA = "0xCB278C")]
	public Leader()
	{
	}
}
[Token(Token = "0x2000167")]
public class ParallaxRotator : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	[CompilerGenerated]
	private sealed class <RotateProcess>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParallaxRotator <>4__this;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <da>5__2;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__3;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000580")]
			[Address(RVA = "0xCB3A50", Offset = "0xCB3A50", VA = "0xCB3A50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000582")]
			[Address(RVA = "0xCB3A98", Offset = "0xCB3A98", VA = "0xCB3A98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xCB38A8", Offset = "0xCB38A8", VA = "0xCB38A8")]
		[DebuggerHidden]
		public <RotateProcess>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xCB38D0", Offset = "0xCB38D0", VA = "0xCB38D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xCB38D4", Offset = "0xCB38D4", VA = "0xCB38D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xCB3A58", Offset = "0xCB3A58", VA = "0xCB3A58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool right;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float angle;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float duration;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimationCurve curve;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float yAngle;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool rightDirection;

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xCB279C", Offset = "0xCB279C", VA = "0xCB279C")]
	private void Start()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xCB212C", Offset = "0xCB212C", VA = "0xCB212C")]
	public void Rotate(float duration)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xCB2820", Offset = "0xCB2820", VA = "0xCB2820")]
	[IteratorStateMachine(typeof(<RotateProcess>d__8))]
	private IEnumerator RotateProcess()
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xCB2894", Offset = "0xCB2894", VA = "0xCB2894")]
	public ParallaxRotator()
	{
	}
}
[Token(Token = "0x2000169")]
public class Rotation : MonoBehaviour
{
	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float T;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float stateTime;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float yAngle;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float speed;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool state;

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xCB3AA0", Offset = "0xCB3AA0", VA = "0xCB3AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xCB3AA4", Offset = "0xCB3AA4", VA = "0xCB3AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xCB3BDC", Offset = "0xCB3BDC", VA = "0xCB3BDC")]
	public Rotation()
	{
	}
}
[Token(Token = "0x200016A")]
public class Scale : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	[CompilerGenerated]
	private sealed class <SlowScale>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scale <>4__this;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <q>5__2;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600058C")]
			[Address(RVA = "0xCB3DC4", Offset = "0xCB3DC4", VA = "0xCB3DC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058E")]
			[Address(RVA = "0xCB3E0C", Offset = "0xCB3E0C", VA = "0xCB3E0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xCB3C90", Offset = "0xCB3C90", VA = "0xCB3C90")]
		[DebuggerHidden]
		public <SlowScale>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xCB3CC0", Offset = "0xCB3CC0", VA = "0xCB3CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xCB3CC4", Offset = "0xCB3CC4", VA = "0xCB3CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xCB3DCC", Offset = "0xCB3DCC", VA = "0xCB3DCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cf;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xCB3BFC", Offset = "0xCB3BFC", VA = "0xCB3BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xCB3C1C", Offset = "0xCB3C1C", VA = "0xCB3C1C")]
	[IteratorStateMachine(typeof(<SlowScale>d__2))]
	private IEnumerator SlowScale()
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xCB3CB8", Offset = "0xCB3CB8", VA = "0xCB3CB8")]
	public Scale()
	{
	}
}
[Token(Token = "0x200016C")]
public class CopyBonesOrientation : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] targetBones;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] bones;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doIt;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xCB3E14", Offset = "0xCB3E14", VA = "0xCB3E14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xCB3EF0", Offset = "0xCB3EF0", VA = "0xCB3EF0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xCB3F04", Offset = "0xCB3F04", VA = "0xCB3F04")]
	public CopyBonesOrientation()
	{
	}
}
[Token(Token = "0x200016D")]
public class CopyOrientation : MonoBehaviour
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] targets;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] objects;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xCB3F0C", Offset = "0xCB3F0C", VA = "0xCB3F0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xCB3FE8", Offset = "0xCB3FE8", VA = "0xCB3FE8")]
	public CopyOrientation()
	{
	}
}
[Token(Token = "0x200016E")]
public class CountDown : MonoBehaviour
{
	[Token(Token = "0x200016F")]
	[CompilerGenerated]
	private sealed class <Timer>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CountDown <>4__this;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <count>5__2;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <plaerPos>5__3;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0xCB46FC", Offset = "0xCB46FC", VA = "0xCB46FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A0")]
			[Address(RVA = "0xCB4744", Offset = "0xCB4744", VA = "0xCB4744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xCB42C0", Offset = "0xCB42C0", VA = "0xCB42C0")]
		[DebuggerHidden]
		public <Timer>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xCB4410", Offset = "0xCB4410", VA = "0xCB4410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xCB4414", Offset = "0xCB4414", VA = "0xCB4414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xCB4704", Offset = "0xCB4704", VA = "0xCB4704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000170")]
	[CompilerGenerated]
	private sealed class <DelayTimer>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CountDown <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0xCB4854", Offset = "0xCB4854", VA = "0xCB4854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0xCB489C", Offset = "0xCB489C", VA = "0xCB489C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xCB43E0", Offset = "0xCB43E0", VA = "0xCB43E0")]
		[DebuggerHidden]
		public <DelayTimer>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xCB474C", Offset = "0xCB474C", VA = "0xCB474C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xCB4750", Offset = "0xCB4750", VA = "0xCB4750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xCB485C", Offset = "0xCB485C", VA = "0xCB485C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject numberPrefab;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnEndTimer;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xCB3FF0", Offset = "0xCB3FF0", VA = "0xCB3FF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xCB40F4", Offset = "0xCB40F4", VA = "0xCB40F4")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xCB41EC", Offset = "0xCB41EC", VA = "0xCB41EC")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xCB4178", Offset = "0xCB4178", VA = "0xCB4178")]
	[IteratorStateMachine(typeof(<Timer>d__5))]
	private IEnumerator Timer()
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xCB42E8", Offset = "0xCB42E8", VA = "0xCB42E8")]
	public void StartDelayTimer()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xCB436C", Offset = "0xCB436C", VA = "0xCB436C")]
	[IteratorStateMachine(typeof(<DelayTimer>d__7))]
	private IEnumerator DelayTimer()
	{
		return null;
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xCB4408", Offset = "0xCB4408", VA = "0xCB4408")]
	public CountDown()
	{
	}
}
[Token(Token = "0x2000171")]
public class CustomMenu : MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro[] textMeshProLevels;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Object[] scenes;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] sceneNames;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] currentScene;

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xCB48A4", Offset = "0xCB48A4", VA = "0xCB48A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xCB4A70", Offset = "0xCB4A70", VA = "0xCB4A70")]
	public void Startlevel(int n)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xCB4B94", Offset = "0xCB4B94", VA = "0xCB4B94")]
	public void NextScene()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xCB4C4C", Offset = "0xCB4C4C", VA = "0xCB4C4C")]
	public void PrevScene()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xCB4D0C", Offset = "0xCB4D0C", VA = "0xCB4D0C")]
	public CustomMenu()
	{
	}
}
[Token(Token = "0x2000172")]
public class HoldButton : MenuButton
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isPressed;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private HandType currentHand;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float delayTime;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float delayTimeFirst;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent onPress;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float t;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xCB4D14", Offset = "0xCB4D14", VA = "0xCB4D14", Slot = "14")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xCB4EA0", Offset = "0xCB4EA0", VA = "0xCB4EA0", Slot = "5")]
	public override void Push(bool _technical = false)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xCB4F3C", Offset = "0xCB4F3C", VA = "0xCB4F3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xCB4F94", Offset = "0xCB4F94", VA = "0xCB4F94")]
	public void Hold(bool _state, HandType handType)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xCB4FB4", Offset = "0xCB4FB4", VA = "0xCB4FB4")]
	public void ResetHold()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xCB4FBC", Offset = "0xCB4FBC", VA = "0xCB4FBC", Slot = "15")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xCB5148", Offset = "0xCB5148", VA = "0xCB5148")]
	public HoldButton()
	{
	}
}
[Token(Token = "0x2000173")]
public class SlideButton : MenuButton
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent onSlideUp;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent onSlideDown;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isHover;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private HandType currentHand;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float delayTime;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float t;

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xCB515C", Offset = "0xCB515C", VA = "0xCB515C", Slot = "14")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xCB526C", Offset = "0xCB526C", VA = "0xCB526C", Slot = "15")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xCB537C", Offset = "0xCB537C", VA = "0xCB537C")]
	public void Hover(VRButton button)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xCB5430", Offset = "0xCB5430", VA = "0xCB5430")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xCB5548", Offset = "0xCB5548", VA = "0xCB5548")]
	public SlideButton()
	{
	}
}
[Token(Token = "0x2000174")]
public class CutArrow : MonoBehaviour
{
	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetBone;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 direction;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform playerHead;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xCB5558", Offset = "0xCB5558", VA = "0xCB5558")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xCB55C0", Offset = "0xCB55C0", VA = "0xCB55C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xCB56D0", Offset = "0xCB56D0", VA = "0xCB56D0")]
	public CutArrow()
	{
	}
}
[Token(Token = "0x2000175")]
public class CutArrowDirection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000176")]
	public struct TypeDirection
	{
		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Obstacle.Type type;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 direction;
	}

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyMelee main;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CutArrow cutArrow;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Direction cutDirection;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TypeDirection[] typeDirections;

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xCB56D8", Offset = "0xCB56D8", VA = "0xCB56D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xCB57B4", Offset = "0xCB57B4", VA = "0xCB57B4")]
	public CutArrowDirection()
	{
	}
}
[Token(Token = "0x2000177")]
public class CutChecker : MonoBehaviour
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider coll;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 collisionPoint;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Blade blade;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject main;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ICuttable mainCuttable;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool codirectedCheck;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool destroyWeapon;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool check;

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xCB57BC", Offset = "0xCB57BC", VA = "0xCB57BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xCB581C", Offset = "0xCB581C", VA = "0xCB581C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xCB5918", Offset = "0xCB5918", VA = "0xCB5918")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xCB5928", Offset = "0xCB5928", VA = "0xCB5928")]
	private void Check()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xCB592C", Offset = "0xCB592C", VA = "0xCB592C")]
	public CutChecker()
	{
	}
}
[Token(Token = "0x2000178")]
public class DelayDestroyer : MonoBehaviour
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xCB593C", Offset = "0xCB593C", VA = "0xCB593C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xCB598C", Offset = "0xCB598C", VA = "0xCB598C")]
	private void Do()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xCB59F8", Offset = "0xCB59F8", VA = "0xCB59F8")]
	public DelayDestroyer()
	{
	}
}
[Token(Token = "0x2000179")]
public class DelayDestroyerRealTime : MonoBehaviour
{
	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xCB5A08", Offset = "0xCB5A08", VA = "0xCB5A08")]
	public void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xCB5A48", Offset = "0xCB5A48", VA = "0xCB5A48")]
	private void Do()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xCB5AB4", Offset = "0xCB5AB4", VA = "0xCB5AB4")]
	public DelayDestroyerRealTime()
	{
	}
}
[Token(Token = "0x200017A")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xCB5AC4", Offset = "0xCB5AC4", VA = "0xCB5AC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xCB5B30", Offset = "0xCB5B30", VA = "0xCB5B30")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x200017B")]
public class BodyHitCheck : MonoBehaviour
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnemyBoxer boxer;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Rigidbody, Vector3> onDamage;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandController handController;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xCB5B38", Offset = "0xCB5B38", VA = "0xCB5B38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xCB5B90", Offset = "0xCB5B90", VA = "0xCB5B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xCB5BE8", Offset = "0xCB5BE8", VA = "0xCB5BE8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xCB60A0", Offset = "0xCB60A0", VA = "0xCB60A0", Slot = "4")]
	protected virtual Vector3 CheckVeclocity(Collision collision)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xCB61EC", Offset = "0xCB61EC", VA = "0xCB61EC")]
	public BodyHitCheck()
	{
	}
}
[Token(Token = "0x200017C")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 lastPos;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xCB61F4", Offset = "0xCB61F4", VA = "0xCB61F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xCB62D0", Offset = "0xCB62D0", VA = "0xCB62D0")]
	private void Target()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xCB63CC", Offset = "0xCB63CC", VA = "0xCB63CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xCB6480", Offset = "0xCB6480", VA = "0xCB6480")]
	private void DestroyBullet()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xCB64EC", Offset = "0xCB64EC", VA = "0xCB64EC")]
	public Bullet()
	{
	}
}
[Token(Token = "0x200017D")]
public class BulletsLooker : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xCB64F4", Offset = "0xCB64F4", VA = "0xCB64F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xCB6560", Offset = "0xCB6560", VA = "0xCB6560")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xCB65CC", Offset = "0xCB65CC", VA = "0xCB65CC")]
	public BulletsLooker()
	{
	}
}
[Token(Token = "0x200017E")]
public class Car : MovableObstacle, IDistanceChangeable
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CarDriver driver;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xCB65D4", Offset = "0xCB65D4", VA = "0xCB65D4", Slot = "11")]
	public virtual void Set(float time, float cryptography)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xCB6650", Offset = "0xCB6650", VA = "0xCB6650")]
	public Car()
	{
	}
}
[Token(Token = "0x200017F")]
public class CarDriver : EnemyShooter, IDistanceChangeable
{
	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float delay;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool doNotShoot;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float timeWithDelay;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Renderer[] UIRends;

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xCB66B4", Offset = "0xCB66B4", VA = "0xCB66B4", Slot = "22")]
	protected override void AddToOverviewSystem()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xCB65EC", Offset = "0xCB65EC", VA = "0xCB65EC")]
	public void Set(float time)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xCB66B8", Offset = "0xCB66B8", VA = "0xCB66B8", Slot = "15")]
	public override void MakeReady()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xCB66BC", Offset = "0xCB66BC", VA = "0xCB66BC")]
	private void BadMakeReady()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xCB6840", Offset = "0xCB6840", VA = "0xCB6840")]
	private void StickOut()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xCB68CC", Offset = "0xCB68CC", VA = "0xCB68CC")]
	public void DoNotShoot()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xCB6954", Offset = "0xCB6954", VA = "0xCB6954", Slot = "23")]
	public override void ShootToPlayer()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xCB6A2C", Offset = "0xCB6A2C", VA = "0xCB6A2C")]
	public CarDriver()
	{
	}
}
[Token(Token = "0x2000180")]
public class CollisionEffect : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected DamageEffect main;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool checkCollision;

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xCB6A84", Offset = "0xCB6A84", VA = "0xCB6A84", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xCB6A88", Offset = "0xCB6A88", VA = "0xCB6A88", Slot = "5")]
	protected virtual void CheckCollision()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xCB6A94", Offset = "0xCB6A94", VA = "0xCB6A94", Slot = "6")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xCB6B24", Offset = "0xCB6B24", VA = "0xCB6B24", Slot = "7")]
	protected virtual void ShowParticles()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xCB6B28", Offset = "0xCB6B28", VA = "0xCB6B28", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xCB6B2C", Offset = "0xCB6B2C", VA = "0xCB6B2C")]
	public CollisionEffect()
	{
	}
}
[Token(Token = "0x2000181")]
public class CuttedCollisionEffect : CollisionEffect
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isNeg;

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xCB6B34", Offset = "0xCB6B34", VA = "0xCB6B34", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xCB6BFC", Offset = "0xCB6BFC", VA = "0xCB6BFC")]
	public void SetMain(DamageEffect main, bool isNeg)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xCB6C28", Offset = "0xCB6C28", VA = "0xCB6C28", Slot = "5")]
	protected override void CheckCollision()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xCB6CF8", Offset = "0xCB6CF8", VA = "0xCB6CF8", Slot = "7")]
	protected override void ShowParticles()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xCB6D20", Offset = "0xCB6D20", VA = "0xCB6D20", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xCB6DE8", Offset = "0xCB6DE8", VA = "0xCB6DE8")]
	public CuttedCollisionEffect()
	{
	}
}
[Token(Token = "0x2000182")]
public class DamageEffect : MonoBehaviour
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject scoreText;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject missParticles;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem[] particles;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] mainBodyVisuals;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider[] colliders;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] bloodEffects;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform noBloodEffects;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] noBloodEffectsForces;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float destroyDelay;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float showParticleDelay;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnCollisionCheck;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected bool collision;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xCB6DF0", Offset = "0xCB6DF0", VA = "0xCB6DF0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xCB6DF4", Offset = "0xCB6DF4", VA = "0xCB6DF4", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xCB6DF8", Offset = "0xCB6DF8", VA = "0xCB6DF8", Slot = "6")]
	public virtual void Show(Vector3 shootPoint, Vector3 damagePoint, float velocity)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xCB6DFC", Offset = "0xCB6DFC", VA = "0xCB6DFC", Slot = "7")]
	public virtual void MissShow()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xCB6F54", Offset = "0xCB6F54", VA = "0xCB6F54", Slot = "8")]
	public virtual void ShowScore(Vector3 pos, int accuracy, int other)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xCB7260", Offset = "0xCB7260", VA = "0xCB7260", Slot = "9")]
	public virtual void CollisionParticles(bool state = true)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xCB7514", Offset = "0xCB7514", VA = "0xCB7514", Slot = "10")]
	protected virtual void AddedEffect()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xCB7518", Offset = "0xCB7518", VA = "0xCB7518")]
	public DamageEffect()
	{
	}
}
[Token(Token = "0x2000183")]
public class DamageEffectCutted : DamageEffect
{
	[Token(Token = "0x2000184")]
	[CompilerGenerated]
	private sealed class <ShowNoBloodProcess>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamageEffectCutted <>4__this;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 hitVector;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 hitPoint;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0xCB8DC4", Offset = "0xCB8DC4", VA = "0xCB8DC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0xCB8E0C", Offset = "0xCB8E0C", VA = "0xCB8E0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xCB7780", Offset = "0xCB7780", VA = "0xCB7780")]
		[DebuggerHidden]
		public <ShowNoBloodProcess>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xCB832C", Offset = "0xCB832C", VA = "0xCB832C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xCB8330", Offset = "0xCB8330", VA = "0xCB8330", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xCB8DCC", Offset = "0xCB8DCC", VA = "0xCB8DCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000185")]
	[CompilerGenerated]
	private sealed class <ShowProcess>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamageEffectCutted <>4__this;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000609")]
			[Address(RVA = "0xCB8EE8", Offset = "0xCB8EE8", VA = "0xCB8EE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060B")]
			[Address(RVA = "0xCB8F30", Offset = "0xCB8F30", VA = "0xCB8F30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xCB7FC0", Offset = "0xCB7FC0", VA = "0xCB7FC0")]
		[DebuggerHidden]
		public <ShowProcess>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xCB8E14", Offset = "0xCB8E14", VA = "0xCB8E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xCB8E18", Offset = "0xCB8E18", VA = "0xCB8E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xCB8EF0", Offset = "0xCB8EF0", VA = "0xCB8EF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000186")]
	[CompilerGenerated]
	private sealed class <NegParticlesProcess>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamageEffectCutted <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060F")]
			[Address(RVA = "0xCB9160", Offset = "0xCB9160", VA = "0xCB9160", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000611")]
			[Address(RVA = "0xCB91A8", Offset = "0xCB91A8", VA = "0xCB91A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xCB8180", Offset = "0xCB8180", VA = "0xCB8180")]
		[DebuggerHidden]
		public <NegParticlesProcess>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xCB8F38", Offset = "0xCB8F38", VA = "0xCB8F38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xCB8F3C", Offset = "0xCB8F3C", VA = "0xCB8F3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xCB9168", Offset = "0xCB9168", VA = "0xCB9168", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000187")]
	[CompilerGenerated]
	private sealed class <PosParticlesProcess>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamageEffectCutted <>4__this;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0xCB93D8", Offset = "0xCB93D8", VA = "0xCB93D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0xCB9420", Offset = "0xCB9420", VA = "0xCB9420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xCB81A8", Offset = "0xCB81A8", VA = "0xCB81A8")]
		[DebuggerHidden]
		public <PosParticlesProcess>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xCB91B0", Offset = "0xCB91B0", VA = "0xCB91B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xCB91B4", Offset = "0xCB91B4", VA = "0xCB91B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xCB93E0", Offset = "0xCB93E0", VA = "0xCB93E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody[] negRbs;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody[] posRbs;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SkinnedMeshRenderer[] negRend;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SkinnedMeshRenderer[] posRend;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public DissolveControllerCutted dissolveControllerCutted;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Rigidbody[] toolsRb;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Rigidbody[] rbs;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent OnDamage;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action OnCutted;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string scoreTextToShow;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int accuracyToShow;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int otherToShow;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 hitPoint;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 hitDir;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 flatDir;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject dissolveSlashEffect;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool negCollided;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool posCollided;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xCB752C", Offset = "0xCB752C", VA = "0xCB752C", Slot = "6")]
	public override void Show(Vector3 hitVector, Vector3 hitPoint, float velocity)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xCB765C", Offset = "0xCB765C", VA = "0xCB765C")]
	[IteratorStateMachine(typeof(<ShowNoBloodProcess>d__17))]
	private IEnumerator ShowNoBloodProcess(Vector3 hitVector, Vector3 hitPoint)
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xCB77A8", Offset = "0xCB77A8", VA = "0xCB77A8")]
	public void SetHitPoint(Vector3 hitPoint, Vector3 hitDir)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xCB78B8", Offset = "0xCB78B8", VA = "0xCB78B8")]
	public void SetScoreText(int _accuracy, int _other)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xCB7A30", Offset = "0xCB7A30", VA = "0xCB7A30")]
	public void SetBodyPartsRigibodies(List<Rigidbody> negRigidbobies, List<Rigidbody> posRigidbobies)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xCB770C", Offset = "0xCB770C", VA = "0xCB770C")]
	[IteratorStateMachine(typeof(<ShowProcess>d__21))]
	private IEnumerator ShowProcess(Vector3 hitVector)
	{
		return null;
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xCB7FE8", Offset = "0xCB7FE8", VA = "0xCB7FE8", Slot = "9")]
	public override void CollisionParticles(bool isNeg)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xCB8098", Offset = "0xCB8098", VA = "0xCB8098")]
	[IteratorStateMachine(typeof(<NegParticlesProcess>d__25))]
	private IEnumerator NegParticlesProcess()
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xCB810C", Offset = "0xCB810C", VA = "0xCB810C")]
	[IteratorStateMachine(typeof(<PosParticlesProcess>d__26))]
	private IEnumerator PosParticlesProcess()
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xCB81D0", Offset = "0xCB81D0", VA = "0xCB81D0")]
	public void SetToolsRigidbodies()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xCB8274", Offset = "0xCB8274", VA = "0xCB8274")]
	public DamageEffectCutted()
	{
	}
}
[Token(Token = "0x2000188")]
public class DamageEffectHitted : DamageEffect
{
	[Token(Token = "0x2000189")]
	[CompilerGenerated]
	private sealed class <ShowProcess>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 hitVector;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DamageEffectHitted <>4__this;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Rigidbody hittedRigidbody;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000620")]
			[Address(RVA = "0xCBA084", Offset = "0xCBA084", VA = "0xCBA084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000622")]
			[Address(RVA = "0xCBA0CC", Offset = "0xCBA0CC", VA = "0xCBA0CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xCB95F0", Offset = "0xCB95F0", VA = "0xCB95F0")]
		[DebuggerHidden]
		public <ShowProcess>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xCB96F0", Offset = "0xCB96F0", VA = "0xCB96F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xCB96F4", Offset = "0xCB96F4", VA = "0xCB96F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xCBA08C", Offset = "0xCBA08C", VA = "0xCBA08C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Rigidbody[] rigidbodies;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Enemy main;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xCB9428", Offset = "0xCB9428", VA = "0xCB9428", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xCB9488", Offset = "0xCB9488", VA = "0xCB9488")]
	public void Show(Rigidbody hittedRigidbody, Vector3 hitVector, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xCB953C", Offset = "0xCB953C", VA = "0xCB953C")]
	[IteratorStateMachine(typeof(<ShowProcess>d__4))]
	private IEnumerator ShowProcess(Rigidbody hittedRigidbody, Vector3 hitVector)
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xCB9618", Offset = "0xCB9618", VA = "0xCB9618", Slot = "10")]
	protected override void AddedEffect()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xCB96DC", Offset = "0xCB96DC", VA = "0xCB96DC")]
	public DamageEffectHitted()
	{
	}
}
[Token(Token = "0x200018A")]
public class DamageEffectMagicHit : DamageEffectShooted
{
	[Token(Token = "0x6000623")]
	[Address(RVA = "0xCBA0D4", Offset = "0xCBA0D4", VA = "0xCBA0D4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xCBA22C", Offset = "0xCBA22C", VA = "0xCBA22C", Slot = "13")]
	public override void AddForce(Vector3 shootPoint, Vector3 damagePoint, float velocity)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xCBA618", Offset = "0xCBA618", VA = "0xCBA618")]
	public DamageEffectMagicHit()
	{
	}
}
[Token(Token = "0x200018B")]
public class DamageEffectShooted : DamageEffect
{
	[Token(Token = "0x200018C")]
	[CompilerGenerated]
	private sealed class <ShowProcess>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamageEffectShooted <>4__this;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 shootPoint;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 damagePoint;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float velocity;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xCBAF58", Offset = "0xCBAF58", VA = "0xCBAF58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000634")]
			[Address(RVA = "0xCBAFA0", Offset = "0xCBAFA0", VA = "0xCBAFA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xCBAA18", Offset = "0xCBAA18", VA = "0xCBAA18")]
		[DebuggerHidden]
		public <ShowProcess>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xCBADE8", Offset = "0xCBADE8", VA = "0xCBADE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xCBADEC", Offset = "0xCBADEC", VA = "0xCBADEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xCBAF60", Offset = "0xCBAF60", VA = "0xCBAF60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public Rigidbody[] shootedBodyRbs;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ShootChecker shootChecker;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xCBA0D8", Offset = "0xCBA0D8", VA = "0xCBA0D8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xCBA640", Offset = "0xCBA640", VA = "0xCBA640", Slot = "11")]
	public virtual void AddEffect(Vector3 hitPoint, Vector3 shootSource)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xCBA8B8", Offset = "0xCBA8B8", VA = "0xCBA8B8", Slot = "12")]
	public virtual void ShootEffect(Vector3 shootPoint, Vector3 hitPoint, int accuracy, int otherScore)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xCBA938", Offset = "0xCBA938", VA = "0xCBA938", Slot = "6")]
	public override void Show(Vector3 shootPoint, Vector3 damagePoint, float velocity)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xCBA958", Offset = "0xCBA958", VA = "0xCBA958")]
	[IteratorStateMachine(typeof(<ShowProcess>d__6))]
	private IEnumerator ShowProcess(Vector3 shootPoint, Vector3 damagePoint, float velocity)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xCBAA40", Offset = "0xCBAA40", VA = "0xCBAA40", Slot = "13")]
	public virtual void AddForce(Vector3 shootPoint, Vector3 damagePoint, float velocity)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xCBAD00", Offset = "0xCBAD00", VA = "0xCBAD00", Slot = "7")]
	public override void MissShow()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xCBAD24", Offset = "0xCBAD24", VA = "0xCBAD24", Slot = "10")]
	protected override void AddedEffect()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xCBA62C", Offset = "0xCBA62C", VA = "0xCBA62C")]
	public DamageEffectShooted()
	{
	}
}
[Token(Token = "0x200018D")]
public class DamageEffectShootedPropeller : DamageEffectShooted
{
	[Token(Token = "0x200018E")]
	[CompilerGenerated]
	private sealed class <ImpulseProcess>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamageEffectShootedPropeller <>4__this;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600063F")]
			[Address(RVA = "0xCBBA84", Offset = "0xCBBA84", VA = "0xCBBA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000641")]
			[Address(RVA = "0xCBBACC", Offset = "0xCBBACC", VA = "0xCBBACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xCBB5DC", Offset = "0xCBB5DC", VA = "0xCBB5DC")]
		[DebuggerHidden]
		public <ImpulseProcess>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xCBB7DC", Offset = "0xCBB7DC", VA = "0xCBB7DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xCBB7E0", Offset = "0xCBB7E0", VA = "0xCBB7E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xCBBA8C", Offset = "0xCBBA8C", VA = "0xCBBA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Animator propellerAnim;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 shootVector;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 rotateVector;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float shootFactor;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float shootPartFactor;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float shootFactorPropeller;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float shootFactorPropellerUp;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float torqueDuration;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float torqueFactor;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float torqueFactorPropeller;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool pause;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xCBAFA8", Offset = "0xCBAFA8", VA = "0xCBAFA8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xCBB150", Offset = "0xCBB150", VA = "0xCBB150", Slot = "13")]
	public override void AddForce(Vector3 shootPoint, Vector3 damagePoint, float velocity)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xCBB5C8", Offset = "0xCBB5C8", VA = "0xCBB5C8")]
	private void Pause()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xCBB5D4", Offset = "0xCBB5D4", VA = "0xCBB5D4")]
	private void UnPause()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xCBB554", Offset = "0xCBB554", VA = "0xCBB554")]
	[IteratorStateMachine(typeof(<ImpulseProcess>d__15))]
	private IEnumerator ImpulseProcess()
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xCBB604", Offset = "0xCBB604", VA = "0xCBB604")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xCBB7A4", Offset = "0xCBB7A4", VA = "0xCBB7A4")]
	public DamageEffectShootedPropeller()
	{
	}
}
[Token(Token = "0x200018F")]
public class DamageEffectShootedSpider : DamageEffectShooted
{
	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIBigTarget uiTarget;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform targetBone;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float side;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool done;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xCBBAD4", Offset = "0xCBBAD4", VA = "0xCBBAD4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xCBBAF4", Offset = "0xCBBAF4", VA = "0xCBBAF4", Slot = "13")]
	public override void AddForce(Vector3 shootPoint, Vector3 damagePoint, float velocity)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xCBBD78", Offset = "0xCBBD78", VA = "0xCBBD78", Slot = "9")]
	public override void CollisionParticles(bool state = true)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xCBBDEC", Offset = "0xCBBDEC", VA = "0xCBBDEC")]
	public DamageEffectShootedSpider()
	{
	}
}
[Token(Token = "0x2000190")]
public class Enemy : MovableObstacle, IDamagable, IDistanceChangeable, IShootable
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float attackDistance;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float attackSpeedFactor;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DamageEffect damageEffect;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DissolveController dissolveController;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShootChecker shootChecker;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float cryptography;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool damaged;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[HideInInspector]
	public bool dissolveOnStart;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform target;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action OnKilled;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action OnMissEnemy;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<Enemy> OnKilledEnemy;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 startPos;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected bool attack;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public float attackStartGameTime;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xCBBE08", Offset = "0xCBBE08", VA = "0xCBBE08", Slot = "13")]
	public virtual void SetTarget(Transform target)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xCBBE10", Offset = "0xCBBE10", VA = "0xCBBE10", Slot = "14")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xCBBFFC", Offset = "0xCBBFFC", VA = "0xCBBFFC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xCBC37C", Offset = "0xCBC37C", VA = "0xCBC37C", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xCBC5B8", Offset = "0xCBC5B8", VA = "0xCBC5B8", Slot = "15")]
	public virtual void MakeReady()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xCBC64C", Offset = "0xCBC64C", VA = "0xCBC64C", Slot = "16")]
	public virtual void Set(float distance, float _cryptography)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xCBC654", Offset = "0xCBC654", VA = "0xCBC654")]
	public void SetDissolve(bool state)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xCBC660", Offset = "0xCBC660", VA = "0xCBC660", Slot = "17")]
	protected virtual void Attack()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xCBC7D8", Offset = "0xCBC7D8", VA = "0xCBC7D8", Slot = "18")]
	public virtual void SetSide(bool rightCut)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xCBC7DC", Offset = "0xCBC7DC", VA = "0xCBC7DC", Slot = "19")]
	public virtual void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xCB7488", Offset = "0xCB7488", VA = "0xCB7488")]
	public void DelayDestroy(float delay)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xCBCA74", Offset = "0xCBCA74", VA = "0xCBCA74", Slot = "20")]
	public virtual void HitShotSound()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xCBCA78", Offset = "0xCBCA78", VA = "0xCBCA78", Slot = "21")]
	public virtual void MissEnemy()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xCBCCD8", Offset = "0xCBCCD8", VA = "0xCBCCD8", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xCBD060", Offset = "0xCBD060", VA = "0xCBD060")]
	public Enemy()
	{
	}
}
[Token(Token = "0x2000191")]
public class EnemyBoxer : Enemy
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Signal signal;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UIBoxerTarget boxUI;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool commonBoxer;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private DamageEffectShooted _damageEffectShooted;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("New Move Dont Touch")]
	public Vector3[] movePoints;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float tMove;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float tMoveWithoutSlice;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float t;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool customAttack;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool customAttackStart;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	public bool customAttacked;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float allDist;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float customAttackDist;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float customSpeed;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform rootAnimEnemy;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 movePoint;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float tSlice;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected bool copyPlayerY;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xCBD074", Offset = "0xCBD074", VA = "0xCBD074", Slot = "13")]
	public override void SetTarget(Transform target)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xCBD0DC", Offset = "0xCBD0DC", VA = "0xCBD0DC", Slot = "18")]
	public override void SetSide(bool rightCut)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xCBD15C", Offset = "0xCBD15C", VA = "0xCBD15C")]
	public void SetFromAsset(Vector3[] _poins, float _tMove, float customAttackDist, float customSpeed, Transform point)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xCBD378", Offset = "0xCBD378", VA = "0xCBD378", Slot = "9")]
	protected override void MoveObstacle()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xCBD490", Offset = "0xCBD490", VA = "0xCBD490")]
	protected void Move()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xCBD76C", Offset = "0xCBD76C", VA = "0xCBD76C", Slot = "17")]
	protected override void Attack()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xCB5E4C", Offset = "0xCB5E4C", VA = "0xCB5E4C")]
	public void Damage(Rigidbody hittedRigidbody, Vector3 hitVector, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xCBD7F8", Offset = "0xCBD7F8", VA = "0xCBD7F8", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xCBD91C", Offset = "0xCBD91C", VA = "0xCBD91C", Slot = "21")]
	public override void MissEnemy()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xCBD9B4", Offset = "0xCBD9B4", VA = "0xCBD9B4", Slot = "16")]
	public override void Set(float d, float cryptography)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xCBDACC", Offset = "0xCBDACC", VA = "0xCBDACC", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xCBDBBC", Offset = "0xCBDBBC", VA = "0xCBDBBC")]
	public EnemyBoxer()
	{
	}
}
[Token(Token = "0x2000192")]
public class EnemyMelee : Enemy, ICuttable, IVariable
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RuntimeAnimatorController[] animators;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform looker;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CutArrow[] cutArrows;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform cutDirection;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform hips;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UIArrow uiArrow;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Signal signal;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool sliced;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float barierWidth;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected string analyticsTag;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Action OnCutted;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private DamageEffectShooted _damageEffectShooted;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Header("New Move Dont Touch")]
	public Vector3[] movePoints;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float tMove;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float tMoveWithoutSlice;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float t;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool customAttack;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	public bool customAttackStart;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
	public bool customAttacked;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float allDist;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float customAttackDist;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float customSpeed;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform rootAnimEnemy;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector3 movePoint;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float tSlice;

	[Token(Token = "0x17000066")]
	public bool cutted
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0xCBDC2C", Offset = "0xCBDC2C", VA = "0xCBDC2C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000662")]
		[Address(RVA = "0xCBDC34", Offset = "0xCBDC34", VA = "0xCBDC34")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xCBDC40", Offset = "0xCBDC40", VA = "0xCBDC40", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xCBDCB4", Offset = "0xCBDCB4", VA = "0xCBDCB4", Slot = "24")]
	protected virtual void CheckSignal()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xCBDD38", Offset = "0xCBDD38", VA = "0xCBDD38", Slot = "23")]
	public void SetAnimator()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xCBDD84", Offset = "0xCBDD84", VA = "0xCBDD84", Slot = "25")]
	public virtual void Cutted(bool codirected, float parallelFactor, float distanceFactor, Vector3 hitVector, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xCBEA24", Offset = "0xCBEA24", VA = "0xCBEA24")]
	public void SetBodyPartsRigibodies(List<Rigidbody> negRbs, List<Rigidbody> posRbs)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xCBEAB8", Offset = "0xCBEAB8", VA = "0xCBEAB8", Slot = "16")]
	public override void Set(float d, float cryptography)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xCBEBE8", Offset = "0xCBEBE8", VA = "0xCBEBE8")]
	public void SetMeleeStay(float cryptography)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xCBEECC", Offset = "0xCBEECC", VA = "0xCBEECC", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xCBF36C", Offset = "0xCBF36C", VA = "0xCBF36C")]
	public void SetFromAsset(Vector3[] _poins, float _tMove, float customAttackDist, float customSpeed, Transform point)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xCBF590", Offset = "0xCBF590", VA = "0xCBF590", Slot = "9")]
	protected override void MoveObstacle()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xCBF088", Offset = "0xCBF088", VA = "0xCBF088")]
	protected void Move()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xCBF5B8", Offset = "0xCBF5B8", VA = "0xCBF5B8", Slot = "21")]
	public override void MissEnemy()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xCBF644", Offset = "0xCBF644", VA = "0xCBF644", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xCBF798", Offset = "0xCBF798", VA = "0xCBF798")]
	public EnemyMelee()
	{
	}
}
[Token(Token = "0x2000193")]
public class EnemyPlug : Enemy
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject _baseBot;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject _ragdoll;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xCBF83C", Offset = "0xCBF83C", VA = "0xCBF83C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xCBF8BC", Offset = "0xCBF8BC", VA = "0xCBF8BC", Slot = "17")]
	protected override void Attack()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xCBF8C0", Offset = "0xCBF8C0", VA = "0xCBF8C0", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xCBF8C4", Offset = "0xCBF8C4", VA = "0xCBF8C4", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xCBFA58", Offset = "0xCBFA58", VA = "0xCBFA58")]
	public EnemyPlug()
	{
	}
}
[Token(Token = "0x2000194")]
public class EnemyShield : MonoBehaviour
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider shootCollider;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider colliderShield;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform followPoint;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody hand;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShootChecker shootChecker;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xCBFA6C", Offset = "0xCBFA6C", VA = "0xCBFA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xCBFA88", Offset = "0xCBFA88", VA = "0xCBFA88")]
	public void Show()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xCBFAAC", Offset = "0xCBFAAC", VA = "0xCBFAAC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xCBFAD0", Offset = "0xCBFAD0", VA = "0xCBFAD0")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xCBFB78", Offset = "0xCBFB78", VA = "0xCBFB78")]
	public void SetPhysics()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xCBFC14", Offset = "0xCBFC14", VA = "0xCBFC14")]
	public EnemyShield()
	{
	}
}
[Token(Token = "0x2000195")]
public class EnemyShooter : Enemy
{
	[Token(Token = "0x2000196")]
	[CompilerGenerated]
	private sealed class <ShootToPlayerProcess>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyShooter <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000697")]
			[Address(RVA = "0xCC0F54", Offset = "0xCC0F54", VA = "0xCC0F54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0xCC0F9C", Offset = "0xCC0F9C", VA = "0xCC0F9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xCC01C0", Offset = "0xCC01C0", VA = "0xCC01C0")]
		[DebuggerHidden]
		public <ShootToPlayerProcess>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xCC0ED0", Offset = "0xCC0ED0", VA = "0xCC0ED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xCC0ED4", Offset = "0xCC0ED4", VA = "0xCC0ED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xCC0F5C", Offset = "0xCC0F5C", VA = "0xCC0F5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000197")]
	[CompilerGenerated]
	private sealed class <DodgeSignalProcess>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyShooter <>4__this;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069D")]
			[Address(RVA = "0xCC11D8", Offset = "0xCC11D8", VA = "0xCC11D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069F")]
			[Address(RVA = "0xCC1220", Offset = "0xCC1220", VA = "0xCC1220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xCC096C", Offset = "0xCC096C", VA = "0xCC096C")]
		[DebuggerHidden]
		public <DodgeSignalProcess>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xCC0FA4", Offset = "0xCC0FA4", VA = "0xCC0FA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xCC0FA8", Offset = "0xCC0FA8", VA = "0xCC0FA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xCC11E0", Offset = "0xCC11E0", VA = "0xCC11E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BotWeapon weapon;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform UITargetPoint;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform[] targets;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ShooterAimer shooterAimer;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected bool isShield;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public EnemyShield shield;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Vector3 moveDirection;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform laser;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MeshRenderer laserRend;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected Vector3 laserScale;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	protected float laserFactor;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected Vector3 headOffsetPoint;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioSource aimPoint;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public OverviewIndicator overviewIndicator;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Header("New logic Dont Touch")]
	[HideInInspector]
	public bool customAttack;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	[HideInInspector]
	public bool shoot;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float t;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float timeWait;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[HideInInspector]
	public float timePortal;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public float timeShoot;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public float timeToShootFromPlayer;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Portal portal;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject portalObj;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool showedPortal;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject[] hides;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected bool dodgeSignal;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	protected float dodgeSignalTime;

	[Token(Token = "0x17000067")]
	public float PortalShoot
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xCBFDF0", Offset = "0xCBFDF0", VA = "0xCBFDF0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xCBFC1C", Offset = "0xCBFC1C", VA = "0xCBFC1C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xCBFC68", Offset = "0xCBFC68", VA = "0xCBFC68", Slot = "17")]
	protected override void Attack()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xCBFC8C", Offset = "0xCBFC8C", VA = "0xCBFC8C", Slot = "22")]
	protected virtual void AddToOverviewSystem()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xCBFCF0", Offset = "0xCBFCF0", VA = "0xCBFCF0", Slot = "9")]
	protected override void MoveObstacle()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xCBFE00", Offset = "0xCBFE00", VA = "0xCBFE00")]
	public void SetFromAsset(float timePortal, float timeShoot, float timeToShootFromPlayer)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xCC0010", Offset = "0xCC0010", VA = "0xCC0010", Slot = "15")]
	public override void MakeReady()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xCC0020", Offset = "0xCC0020", VA = "0xCC0020", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xCC0038", Offset = "0xCC0038", VA = "0xCC0038")]
	public void Timer()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xCB69F0", Offset = "0xCB69F0", VA = "0xCB69F0", Slot = "23")]
	public virtual void ShootToPlayer()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xCC014C", Offset = "0xCC014C", VA = "0xCC014C")]
	[IteratorStateMachine(typeof(<ShootToPlayerProcess>d__36))]
	private IEnumerator ShootToPlayerProcess()
	{
		return null;
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xCC01E8", Offset = "0xCC01E8", VA = "0xCC01E8", Slot = "21")]
	public override void MissEnemy()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xCC0228", Offset = "0xCC0228", VA = "0xCC0228", Slot = "20")]
	public override void HitShotSound()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xCC022C", Offset = "0xCC022C", VA = "0xCC022C")]
	public void SetUITarget(float d)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xCC02E8", Offset = "0xCC02E8", VA = "0xCC02E8", Slot = "16")]
	public override void Set(float targetNumber, float cryptography)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xCC0624", Offset = "0xCC0624", VA = "0xCC0624", Slot = "24")]
	public virtual void SetShield(bool state)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xCC06F0", Offset = "0xCC06F0", VA = "0xCC06F0")]
	public void StartAim()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xCC08F8", Offset = "0xCC08F8", VA = "0xCC08F8")]
	[IteratorStateMachine(typeof(<DodgeSignalProcess>d__45))]
	private IEnumerator DodgeSignalProcess()
	{
		return null;
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xCC0994", Offset = "0xCC0994", VA = "0xCC0994", Slot = "25")]
	public virtual void ReadyToShoot()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xCC09C8", Offset = "0xCC09C8", VA = "0xCC09C8", Slot = "26")]
	protected virtual void FastShoot()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xCC0A9C", Offset = "0xCC0A9C", VA = "0xCC0A9C", Slot = "27")]
	protected virtual void TryDamagePlayer()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xCC0CE8", Offset = "0xCC0CE8", VA = "0xCC0CE8", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xCC0E00", Offset = "0xCC0E00", VA = "0xCC0E00", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xCB6A58", Offset = "0xCB6A58", VA = "0xCB6A58")]
	public EnemyShooter()
	{
	}
}
[Token(Token = "0x2000198")]
public class EnemyShooterFly : EnemyShooter
{
	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xCC1228", Offset = "0xCC1228", VA = "0xCC1228", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xCC1308", Offset = "0xCC1308", VA = "0xCC1308")]
	private void JoinBackpack()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xCC1404", Offset = "0xCC1404", VA = "0xCC1404", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xCC14E4", Offset = "0xCC14E4", VA = "0xCC14E4")]
	public EnemyShooterFly()
	{
	}
}
[Token(Token = "0x2000199")]
public class EnemyShooterFlyAutomat : EnemyShooter
{
	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float timeDelayToShoot;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float timeKillDelay;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public CeilMove ceilMover;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool isNew;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioSource source;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioClip[] shootClips;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool shootSoundEffect;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float bpm;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float preTime;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float pauseTime;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float delayShoot;

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xCC1510", Offset = "0xCC1510", VA = "0xCC1510", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xCC1778", Offset = "0xCC1778", VA = "0xCC1778")]
	public void StartShooting()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xCC1834", Offset = "0xCC1834", VA = "0xCC1834", Slot = "25")]
	public override void ReadyToShoot()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xCC1838", Offset = "0xCC1838", VA = "0xCC1838", Slot = "26")]
	protected override void FastShoot()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xCC1840", Offset = "0xCC1840", VA = "0xCC1840", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xCC184C", Offset = "0xCC184C", VA = "0xCC184C", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xCC18A4", Offset = "0xCC18A4", VA = "0xCC18A4")]
	public void ShootSound()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xCC1910", Offset = "0xCC1910", VA = "0xCC1910")]
	public EnemyShooterFlyAutomat()
	{
	}
}
[Token(Token = "0x200019A")]
public class EnemyShooterFlyAutomatRicochet : EnemyShooterRicochetFly
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public CeilMove ceilMover;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float timeDelayToShoot;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioSource source;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioClip[] shootClips;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool shootSoundEffect;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float bpm;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float preTime;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float pauseTime;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float delayShoot;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xCC1954", Offset = "0xCC1954", VA = "0xCC1954", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xCC1A90", Offset = "0xCC1A90", VA = "0xCC1A90", Slot = "17")]
	protected override void Attack()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xCC1B80", Offset = "0xCC1B80", VA = "0xCC1B80", Slot = "26")]
	protected override void FastShoot()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xCC1C7C", Offset = "0xCC1C7C", VA = "0xCC1C7C", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xCC1D94", Offset = "0xCC1D94", VA = "0xCC1D94", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xCC1DE4", Offset = "0xCC1DE4", VA = "0xCC1DE4")]
	public void ShootSound()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xCC2050", Offset = "0xCC2050", VA = "0xCC2050")]
	public EnemyShooterFlyAutomatRicochet()
	{
	}
}
[Token(Token = "0x200019B")]
public class EnemyShooterRicochetFly : EnemyShooter_Ricochet
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float readyDistance;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool ready;

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xCC1E50", Offset = "0xCC1E50", VA = "0xCC1E50", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xCC2070", Offset = "0xCC2070", VA = "0xCC2070")]
	public void CheckReadyDistance()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xCC206C", Offset = "0xCC206C", VA = "0xCC206C")]
	public EnemyShooterRicochetFly()
	{
	}
}
[Token(Token = "0x200019C")]
public class EnemyShooter_Ricochet : EnemyShooter
{
	[Token(Token = "0x200019D")]
	[CompilerGenerated]
	private sealed class <RicochetLaserCheckingProcess>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyShooter_Ricochet <>4__this;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <maxT>5__3;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0xCC2E98", Offset = "0xCC2E98", VA = "0xCC2E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0xCC2EE0", Offset = "0xCC2EE0", VA = "0xCC2EE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xCC252C", Offset = "0xCC252C", VA = "0xCC252C")]
		[DebuggerHidden]
		public <RicochetLaserCheckingProcess>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xCC28D8", Offset = "0xCC28D8", VA = "0xCC28D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xCC28DC", Offset = "0xCC28DC", VA = "0xCC28DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xCC2EA0", Offset = "0xCC2EA0", VA = "0xCC2EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019E")]
	[CompilerGenerated]
	private sealed class <RicochetBulletCheckingProcess>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyShooter_Ricochet <>4__this;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <maxT>5__3;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0xCC3B4C", Offset = "0xCC3B4C", VA = "0xCC3B4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0xCC3B94", Offset = "0xCC3B94", VA = "0xCC3B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xCC2558", Offset = "0xCC2558", VA = "0xCC2558")]
		[DebuggerHidden]
		public <RicochetBulletCheckingProcess>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xCC2EE8", Offset = "0xCC2EE8", VA = "0xCC2EE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xCC2EEC", Offset = "0xCC2EEC", VA = "0xCC2EEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xCC3B54", Offset = "0xCC3B54", VA = "0xCC3B54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected bool ricocheted;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UIBigTarget_Ricochet ux;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform bullet;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Action onReadyToShoot;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float freezeStartDis;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float freezeDis;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float freezeEndDis;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float freezeDurationFactor;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float uxDistance;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float uxSideDistance;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float laserScaleFactor;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	protected bool isSetUI;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected float timeSingnaling;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected string analyticsTag;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xCC1A6C", Offset = "0xCC1A6C", VA = "0xCC1A6C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xCC2228", Offset = "0xCC2228", VA = "0xCC2228", Slot = "25")]
	public override void ReadyToShoot()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xCC2408", Offset = "0xCC2408", VA = "0xCC2408", Slot = "16")]
	public override void Set(float targetNumber, float cryptography)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xCC2524", Offset = "0xCC2524", VA = "0xCC2524", Slot = "23")]
	public override void ShootToPlayer()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xCC2528", Offset = "0xCC2528", VA = "0xCC2528", Slot = "24")]
	public override void SetShield(bool state)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xCC2394", Offset = "0xCC2394", VA = "0xCC2394")]
	[IteratorStateMachine(typeof(<RicochetLaserCheckingProcess>d__19))]
	protected IEnumerator RicochetLaserCheckingProcess()
	{
		return null;
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xCC2554", Offset = "0xCC2554", VA = "0xCC2554", Slot = "28")]
	protected virtual void RicochetedEvent()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xCC2320", Offset = "0xCC2320", VA = "0xCC2320")]
	[IteratorStateMachine(typeof(<RicochetBulletCheckingProcess>d__21))]
	protected IEnumerator RicochetBulletCheckingProcess()
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xCC2580", Offset = "0xCC2580", VA = "0xCC2580")]
	public void Ricocheted(float factor)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xCC284C", Offset = "0xCC284C", VA = "0xCC284C")]
	public bool CheckRightDirection()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xCC1B88", Offset = "0xCC1B88", VA = "0xCC1B88", Slot = "26")]
	protected override void FastShoot()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xCC2878", Offset = "0xCC2878", VA = "0xCC2878", Slot = "27")]
	protected override void TryDamagePlayer()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xCC1C88", Offset = "0xCC1C88", VA = "0xCC1C88", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xCC2178", Offset = "0xCC2178", VA = "0xCC2178")]
	public EnemyShooter_Ricochet()
	{
	}
}
[Token(Token = "0x200019F")]
public class EnemySnake : EnemyMelee
{
	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private sealed class <SlowmoProcess>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySnake <>4__this;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E6")]
			[Address(RVA = "0xCC474C", Offset = "0xCC474C", VA = "0xCC474C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0xCC4794", Offset = "0xCC4794", VA = "0xCC4794", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xCC4164", Offset = "0xCC4164", VA = "0xCC4164")]
		[DebuggerHidden]
		public <SlowmoProcess>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xCC4570", Offset = "0xCC4570", VA = "0xCC4570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xCC4574", Offset = "0xCC4574", VA = "0xCC4574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xCC4754", Offset = "0xCC4754", VA = "0xCC4754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool isOld;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Animator fakeAnim;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject[] hideShowObjects;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected SkinnedMeshRenderer rend;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected Transform playerHead;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform damagePoint;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private IEnumerator slowmoCoroutine;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float slowmoTime;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AnimationCurve slowmoCurve;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Action onAttack;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioSource source;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public AudioClip[] showClips;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioSource dodgeSource;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AudioClip[] attackClips;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float dodgeIndicatorDelay;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	protected bool checkDamage;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject dodgeEffect;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xCC3B9C", Offset = "0xCC3B9C", VA = "0xCC3B9C", Slot = "14")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xCC3D40", Offset = "0xCC3D40", VA = "0xCC3D40", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xCC3EB0", Offset = "0xCC3EB0", VA = "0xCC3EB0", Slot = "24")]
	protected override void CheckSignal()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xCC3EB4", Offset = "0xCC3EB4", VA = "0xCC3EB4", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xCC40C0", Offset = "0xCC40C0", VA = "0xCC40C0")]
	public void Slowmo()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xCC40F0", Offset = "0xCC40F0", VA = "0xCC40F0")]
	[IteratorStateMachine(typeof(<SlowmoProcess>d__21))]
	private IEnumerator SlowmoProcess()
	{
		return null;
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xCC418C", Offset = "0xCC418C", VA = "0xCC418C")]
	public void CheckDamage()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xCC40B8", Offset = "0xCC40B8", VA = "0xCC40B8")]
	public void UnCheckDamage()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xCC3FA4", Offset = "0xCC3FA4", VA = "0xCC3FA4")]
	private void DamagePlayer()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xCC42B8", Offset = "0xCC42B8", VA = "0xCC42B8", Slot = "19")]
	public override void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xCC42D4", Offset = "0xCC42D4", VA = "0xCC42D4", Slot = "17")]
	protected override void Attack()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xCC43A4", Offset = "0xCC43A4", VA = "0xCC43A4")]
	public void ShowArrows()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xCC4228", Offset = "0xCC4228", VA = "0xCC4228")]
	public void HideArrows()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xCC4414", Offset = "0xCC4414", VA = "0xCC4414")]
	public void ReplaceFakeSnake()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xCC447C", Offset = "0xCC447C", VA = "0xCC447C", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xCC4528", Offset = "0xCC4528", VA = "0xCC4528")]
	public void BeatSignal()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xCC4544", Offset = "0xCC4544", VA = "0xCC4544")]
	public void DodgeSignal()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xCC4298", Offset = "0xCC4298", VA = "0xCC4298")]
	public void StopDodgeSignal()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xCC4564", Offset = "0xCC4564", VA = "0xCC4564")]
	public EnemySnake()
	{
	}
}
[Token(Token = "0x20001A1")]
public class FakeSnake : MonoBehaviour
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemySnake main;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xCC479C", Offset = "0xCC479C", VA = "0xCC479C")]
	private void Replace()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xCC47B4", Offset = "0xCC47B4", VA = "0xCC47B4")]
	public FakeSnake()
	{
	}
}
[Token(Token = "0x20001A2")]
public class FighterAirplane : MovableObstacle, IDistanceChangeable
{
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] weapons;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float durationAttackTime;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeFly;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] shootFx;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HasDodgeIndicator dodgeIndicator;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource source;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] shootClips;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool shootSoundEffect;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float bpm;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float preTime;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float pauseTime;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float delayShoot;

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xCC47BC", Offset = "0xCC47BC", VA = "0xCC47BC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xCC4AE8", Offset = "0xCC4AE8", VA = "0xCC4AE8")]
	public void StartShoot()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xCC4AF0", Offset = "0xCC4AF0", VA = "0xCC4AF0")]
	public void StopShoot()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xCC4B84", Offset = "0xCC4B84", VA = "0xCC4B84", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xCC4BF0", Offset = "0xCC4BF0", VA = "0xCC4BF0")]
	public void ShootSound()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xCC4A68", Offset = "0xCC4A68", VA = "0xCC4A68")]
	public void Shoot(bool _state)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xCC4C5C", Offset = "0xCC4C5C", VA = "0xCC4C5C", Slot = "10")]
	public void Set(float attackDuration, float cryptography)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xCC4C64", Offset = "0xCC4C64", VA = "0xCC4C64")]
	public FighterAirplane()
	{
	}
}
[Token(Token = "0x20001A3")]
public interface ICuttable
{
	[Token(Token = "0x60006F3")]
	void Cutted(bool codirected, float parallelFactor, float distanceFactor, Vector3 hitVector, Vector3 hitPoiint);
}
[Token(Token = "0x20001A4")]
public interface IDamagable
{
	[Token(Token = "0x60006F4")]
	void Damage(Vector3 shootPoint, Vector3 damagePoint, bool playSound, float velocity);
}
[Token(Token = "0x20001A5")]
public interface IShootable
{
	[Token(Token = "0x60006F5")]
	void MakeReady();
}
[Token(Token = "0x20001A6")]
public interface IVariable
{
	[Token(Token = "0x60006F6")]
	void SetAnimator();
}
[Token(Token = "0x20001A7")]
public class MovableObstacle : Obstacle
{
	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float moveSpeed;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xCBC5A0", Offset = "0xCBC5A0", VA = "0xCBC5A0", Slot = "8")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xCBD3A0", Offset = "0xCBD3A0", VA = "0xCBD3A0", Slot = "9")]
	protected virtual void MoveObstacle()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xCC450C", Offset = "0xCC450C", VA = "0xCC450C", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xCB6654", Offset = "0xCB6654", VA = "0xCB6654")]
	public MovableObstacle()
	{
	}
}
[Token(Token = "0x20001A8")]
public class Obstacle : MonoBehaviour
{
	[Token(Token = "0x20001A9")]
	public enum Type
	{
		[Token(Token = "0x400075C")]
		Melee_UpLeft = 0,
		[Token(Token = "0x400075D")]
		Melee_UpRight = 1,
		[Token(Token = "0x400075E")]
		Melee_Left = 2,
		[Token(Token = "0x400075F")]
		Melee_Right = 3,
		[Token(Token = "0x4000760")]
		Melee_DownLeft = 4,
		[Token(Token = "0x4000761")]
		Melee_DownRight = 5,
		[Token(Token = "0x4000762")]
		Melee_Up = 6,
		[Token(Token = "0x4000763")]
		Melee_Down = 7,
		[Token(Token = "0x4000764")]
		Shooter_Ricochet = 8,
		[Token(Token = "0x4000765")]
		Shooter = 9,
		[Token(Token = "0x4000766")]
		Boxer_Left = 10,
		[Token(Token = "0x4000767")]
		Boxer_Right = 11,
		[Token(Token = "0x4000768")]
		Snake_Left = 12,
		[Token(Token = "0x4000769")]
		Snake_Right = 13,
		[Token(Token = "0x400076A")]
		Shooter_Fly_Up = 14,
		[Token(Token = "0x400076B")]
		Shooter_Fly_Down = 15,
		[Token(Token = "0x400076C")]
		Shooter_Ricochet_Fly_Up = 16,
		[Token(Token = "0x400076D")]
		Shooter_Ricochet_Fly_Down = 17,
		[Token(Token = "0x400076E")]
		Melee_Stay_Left = 18,
		[Token(Token = "0x400076F")]
		Melee_Stay_Right = 19,
		[Token(Token = "0x4000770")]
		Automat_Fly = 20,
		[Token(Token = "0x4000771")]
		Automat_Fly_Ricochet = 21,
		[Token(Token = "0x4000772")]
		Boxer_Run = 22,
		[Token(Token = "0x4000773")]
		Warlock = 23,
		[Token(Token = "0x4000774")]
		Block_Blade = 30,
		[Token(Token = "0x4000775")]
		Block_Whip = 31,
		[Token(Token = "0x4000776")]
		Block_Shurikens = 32,
		[Token(Token = "0x4000777")]
		Block_BrassKnuckles = 33,
		[Token(Token = "0x4000778")]
		Block_Wall = 34,
		[Token(Token = "0x4000779")]
		Block_Jump = 35,
		[Token(Token = "0x400077A")]
		Block_LeftWallJump = 36,
		[Token(Token = "0x400077B")]
		Block_RightWallJump = 37,
		[Token(Token = "0x400077C")]
		Block_Run = 38,
		[Token(Token = "0x400077D")]
		Block_Arc = 39,
		[Token(Token = "0x400077E")]
		Block_ThrowerSide = 40,
		[Token(Token = "0x400077F")]
		Block_Thrower = 41,
		[Token(Token = "0x4000780")]
		Block_TommyGun = 42,
		[Token(Token = "0x4000781")]
		Block_ForciblyMove = 43,
		[Token(Token = "0x4000782")]
		Block_Gun = 44,
		[Token(Token = "0x4000783")]
		Car = 60,
		[Token(Token = "0x4000784")]
		AirPlane = 61,
		[Token(Token = "0x4000785")]
		BossAction = 999
	}

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float speed;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type type;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float attackTime;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lifetime;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float beatTime;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnDestroying;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool stopped;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xCBC1B4", Offset = "0xCBC1B4", VA = "0xCBC1B4", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xCC4E78", Offset = "0xCC4E78", VA = "0xCC4E78")]
	public void SetBeatTime(float t)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xCC4E80", Offset = "0xCC4E80", VA = "0xCC4E80")]
	public float BeatTime()
	{
		return default(float);
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xCC4C7C", Offset = "0xCC4C7C", VA = "0xCC4C7C", Slot = "5")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xCC4E88", Offset = "0xCC4E88", VA = "0xCC4E88")]
	public void SetLifeTime(float _lifetime)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xCC4EE4", Offset = "0xCC4EE4", VA = "0xCC4EE4", Slot = "6")]
	protected virtual void LifetimeDestroyObstacle()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xCC4EF4", Offset = "0xCC4EF4", VA = "0xCC4EF4")]
	protected void DestroyObstacle()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xCBCECC", Offset = "0xCBCECC", VA = "0xCBCECC", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xCC4E68", Offset = "0xCC4E68", VA = "0xCC4E68")]
	public Obstacle()
	{
	}
}
[Token(Token = "0x20001AA")]
public class ScreenMarker : MonoBehaviour
{
	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Transform _positionYeysSpace;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform _positionInfinitScreen;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform _planeIndicator;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected float _powerMax;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected float _trasholdDistance;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected MeshRenderer _planeIndicatorRenderer;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected float _power;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected float _distance;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected float _hideSpeed;

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xCC4FC8", Offset = "0xCC4FC8", VA = "0xCC4FC8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xCC4FF4", Offset = "0xCC4FF4", VA = "0xCC4FF4", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xCC524C", Offset = "0xCC524C", VA = "0xCC524C", Slot = "6")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xCC53DC", Offset = "0xCC53DC", VA = "0xCC53DC")]
	public ScreenMarker()
	{
	}
}
[Token(Token = "0x20001AB")]
public class ShootedCollisionEffect : CollisionEffect
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Enemy enemy;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xCC53F4", Offset = "0xCC53F4", VA = "0xCC53F4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xCC5554", Offset = "0xCC5554", VA = "0xCC5554", Slot = "5")]
	protected override void CheckCollision()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xCC5624", Offset = "0xCC5624", VA = "0xCC5624", Slot = "7")]
	protected override void ShowParticles()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xCC5648", Offset = "0xCC5648", VA = "0xCC5648", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xCC5758", Offset = "0xCC5758", VA = "0xCC5758")]
	public ShootedCollisionEffect()
	{
	}
}
[Token(Token = "0x20001AC")]
public class ShooterAimer : MonoBehaviour
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform fakeBone;

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xCC5760", Offset = "0xCC5760", VA = "0xCC5760")]
	private void Start()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xCC5884", Offset = "0xCC5884", VA = "0xCC5884")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xCC588C", Offset = "0xCC588C", VA = "0xCC588C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xCC58F8", Offset = "0xCC58F8", VA = "0xCC58F8")]
	public ShooterAimer()
	{
	}
}
[Token(Token = "0x20001AD")]
public class ShoterScreenMarker : ScreenMarker
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Enemy _enemyBot;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _hideIndicator;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _isGameDis;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xCC5900", Offset = "0xCC5900", VA = "0xCC5900")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xCC5AF4", Offset = "0xCC5AF4", VA = "0xCC5AF4")]
	private void HideIndicator()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xCC5B00", Offset = "0xCC5B00", VA = "0xCC5B00", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xCC5D64", Offset = "0xCC5D64", VA = "0xCC5D64", Slot = "6")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xCC5EC4", Offset = "0xCC5EC4", VA = "0xCC5EC4")]
	public ShoterScreenMarker()
	{
	}
}
[Token(Token = "0x20001AE")]
public class SnakeIndicatorController : MonoBehaviour
{
	[Token(Token = "0x20001AF")]
	[CompilerGenerated]
	private sealed class <indicatorShowProcess>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnakeIndicatorController <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xCC651C", Offset = "0xCC651C", VA = "0xCC651C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xCC6564", Offset = "0xCC6564", VA = "0xCC6564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xCC6158", Offset = "0xCC6158", VA = "0xCC6158")]
		[DebuggerHidden]
		public <indicatorShowProcess>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xCC63DC", Offset = "0xCC63DC", VA = "0xCC63DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xCC63E0", Offset = "0xCC63E0", VA = "0xCC63E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xCC6524", Offset = "0xCC6524", VA = "0xCC6524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject snakeIndicator;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnemySnake enemySnake;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material snakeIndicatorController;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float step;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float alphaStep;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xCC5EDC", Offset = "0xCC5EDC", VA = "0xCC5EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xCC60C4", Offset = "0xCC60C4", VA = "0xCC60C4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xCC60E4", Offset = "0xCC60E4", VA = "0xCC60E4")]
	[IteratorStateMachine(typeof(<indicatorShowProcess>d__7))]
	private IEnumerator indicatorShowProcess()
	{
		return null;
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xCC6180", Offset = "0xCC6180", VA = "0xCC6180")]
	public void Hide()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xCC61A0", Offset = "0xCC61A0", VA = "0xCC61A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xCC63D4", Offset = "0xCC63D4", VA = "0xCC63D4")]
	public SnakeIndicatorController()
	{
	}
}
[Token(Token = "0x20001B0")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Spawner _instance;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float runDistance;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Enemy[] enemies;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Obstacle[] blocks;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MovableObstacle[] vehicles;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("For environment")]
	public EnvironmentLE[] environment;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<Obstacle> OnSpawnBlock;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Bot Asset")]
	public List<ObstacleAsset> botDatas;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Direction Dir;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xCC656C", Offset = "0xCC656C", VA = "0xCC656C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xCC6608", Offset = "0xCC6608", VA = "0xCC6608", Slot = "5")]
	public virtual float GetTime(Obstacle.Type type, float breakDistance, float cryptography = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xCC6B98", Offset = "0xCC6B98", VA = "0xCC6B98", Slot = "6")]
	public virtual GameObject Create(Obstacle.Type type, Transform point, float breakDistance, float cryptography, float spawnTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xCC76AC", Offset = "0xCC76AC", VA = "0xCC76AC", Slot = "7")]
	public virtual void Create(Obstacle.Type type, Transform point, Direction direction, float breakDistance, float cryptography, float spawnTime = 0f)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xCC6D08", Offset = "0xCC6D08", VA = "0xCC6D08")]
	public GameObject CreateOldBot(Obstacle.Type type, Transform point, float breakDistance, float cryptography, float spawnTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xCC775C", Offset = "0xCC775C", VA = "0xCC775C", Slot = "8")]
	public virtual void SetLifeTimeToWeapon(Obstacle obstacle, float breakDistance)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xCC6794", Offset = "0xCC6794", VA = "0xCC6794")]
	public float GetTimeOldBot(Obstacle.Type type, float breakDistance, float cryptography = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xCC66CC", Offset = "0xCC66CC", VA = "0xCC66CC")]
	public ObstacleAsset GetAsset(Obstacle.Type type)
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xCC77A4", Offset = "0xCC77A4", VA = "0xCC77A4")]
	public Spawner()
	{
	}
}
[Token(Token = "0x20001B1")]
public class SpawnerSwitcher : MonoBehaviour
{
	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawnerOrig;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject spawnerDesigner;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool respawnOnMenu;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject curSpawner;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xCC87AC", Offset = "0xCC87AC", VA = "0xCC87AC")]
	public void Start()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xCC89B8", Offset = "0xCC89B8", VA = "0xCC89B8")]
	public void Respawn()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xCC88D0", Offset = "0xCC88D0", VA = "0xCC88D0")]
	public void CreateSpawner()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xCC8A1C", Offset = "0xCC8A1C", VA = "0xCC8A1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xCC8B38", Offset = "0xCC8B38", VA = "0xCC8B38")]
	public SpawnerSwitcher()
	{
	}
}
[Token(Token = "0x20001B2")]
public class StencilController : MonoBehaviour
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Renderer> _bodyRenderers;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Renderer> _stencilRenderers;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _id;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xCC8B40", Offset = "0xCC8B40", VA = "0xCC8B40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xCC8B74", Offset = "0xCC8B74", VA = "0xCC8B74")]
	public void SetStencil(float ID)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xCC8E3C", Offset = "0xCC8E3C", VA = "0xCC8E3C")]
	public StencilController()
	{
	}
}
[Token(Token = "0x20001B3")]
public class TrackRail : MonoBehaviour
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrackRail Instance;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Transform> _points;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _showPath;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xCC8E44", Offset = "0xCC8E44", VA = "0xCC8E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xCC8F10", Offset = "0xCC8F10", VA = "0xCC8F10")]
	public float PassHeightForMe(float myCurentPositionZ)
	{
		return default(float);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xCC90CC", Offset = "0xCC90CC", VA = "0xCC90CC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xCC921C", Offset = "0xCC921C", VA = "0xCC921C")]
	public TrackRail()
	{
	}
}
[Token(Token = "0x20001B4")]
public class AiplaneExplosion : MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] explosions;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] times;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isActive;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BeatMaker beatMaker;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int n;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xCC9224", Offset = "0xCC9224", VA = "0xCC9224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xCC9308", Offset = "0xCC9308", VA = "0xCC9308")]
	private void Update()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xCC93AC", Offset = "0xCC93AC", VA = "0xCC93AC")]
	public AiplaneExplosion()
	{
	}
}
[Token(Token = "0x20001B5")]
public class BeatTactMusic : MonoBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BeatTactMusic instance;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float songBpm;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float secPerBeat;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float songPosition;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float songPositionInBeats;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastSongPositionInBeats;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnNextAct;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float dspSongTime;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource musicSource;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float firstBeatOffset;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xCC93B4", Offset = "0xCC93B4", VA = "0xCC93B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xCC940C", Offset = "0xCC940C", VA = "0xCC940C")]
	private void Start()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xCC9440", Offset = "0xCC9440", VA = "0xCC9440")]
	private void Update()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xCC9500", Offset = "0xCC9500", VA = "0xCC9500")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xCC9518", Offset = "0xCC9518", VA = "0xCC9518")]
	public BeatTactMusic()
	{
	}
}
[Token(Token = "0x20001B6")]
public class BlocksTimeLine : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B7")]
	public struct BlocksAction
	{
		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Animator[] blocksAnims;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float time;
	}

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BeatMaker beatMaker;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animTriggerName;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BlocksAction[] blocksActions;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int n;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xCC9520", Offset = "0xCC9520", VA = "0xCC9520")]
	private void Start()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xCC9590", Offset = "0xCC9590", VA = "0xCC9590")]
	private void Update()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xCC9698", Offset = "0xCC9698", VA = "0xCC9698")]
	public BlocksTimeLine()
	{
	}
}
[Token(Token = "0x20001B8")]
public class EnvironmentMotionController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B9")]
	public struct EnvironmentPartOffset
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform part;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float offset;
	}

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float forwardLimit;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float backLimit;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnvironmentPartOffset[] environmentParts;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xCC96F0", Offset = "0xCC96F0", VA = "0xCC96F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xCC991C", Offset = "0xCC991C", VA = "0xCC991C")]
	public EnvironmentMotionController()
	{
	}
}
[Token(Token = "0x20001BA")]
public class FlashTimeLine : MonoBehaviour
{
	[Token(Token = "0x20001BB")]
	[CompilerGenerated]
	private sealed class <FlashProcess>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashTimeLine <>4__this;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0xCC9E58", Offset = "0xCC9E58", VA = "0xCC9E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0xCC9EA0", Offset = "0xCC9EA0", VA = "0xCC9EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xCC9C98", Offset = "0xCC9C98", VA = "0xCC9C98")]
		[DebuggerHidden]
		public <FlashProcess>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xCC9CD8", Offset = "0xCC9CD8", VA = "0xCC9CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xCC9CDC", Offset = "0xCC9CDC", VA = "0xCC9CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xCC9E60", Offset = "0xCC9E60", VA = "0xCC9E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light directionalLight;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip clip;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int width;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] waveF;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float waveAvr;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] times;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int n;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float maxIntensity;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xCC9924", Offset = "0xCC9924", VA = "0xCC9924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xCC9B48", Offset = "0xCC9B48", VA = "0xCC9B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xCC9C24", Offset = "0xCC9C24", VA = "0xCC9C24")]
	[IteratorStateMachine(typeof(<FlashProcess>d__11))]
	private IEnumerator FlashProcess()
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xCC9CC0", Offset = "0xCC9CC0", VA = "0xCC9CC0")]
	public FlashTimeLine()
	{
	}
}
[Token(Token = "0x20001BC")]
public class PlayerAirplaneBehaviour : MonoBehaviour
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform movePoint;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] shootersPoints;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float jumpTime;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float speed;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool go;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float enemyAirplaneOffset;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject enemyAirplane;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float airplaneCrashDelay;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject airplaneVisual;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject airplaneCrash;

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xCC9EA8", Offset = "0xCC9EA8", VA = "0xCC9EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xCCA048", Offset = "0xCCA048", VA = "0xCCA048")]
	private void Go()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xCCA208", Offset = "0xCCA208", VA = "0xCCA208")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xCCA210", Offset = "0xCCA210", VA = "0xCCA210")]
	private void Update()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xCCA484", Offset = "0xCCA484", VA = "0xCCA484")]
	private void Crash()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xCCA508", Offset = "0xCCA508", VA = "0xCCA508")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xCCA6A8", Offset = "0xCCA6A8", VA = "0xCCA6A8")]
	public PlayerAirplaneBehaviour()
	{
	}
}
[Token(Token = "0x20001BD")]
public class RainActivator : MonoBehaviour
{
	[Token(Token = "0x6000756")]
	[Address(RVA = "0xCCA6B0", Offset = "0xCCA6B0", VA = "0xCCA6B0")]
	public RainActivator()
	{
	}
}
[Token(Token = "0x20001BE")]
public class ZoneChecker : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] points;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xCCA6B8", Offset = "0xCCA6B8", VA = "0xCCA6B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xCCA828", Offset = "0xCCA828", VA = "0xCCA828")]
	public ZoneChecker()
	{
	}
}
[Token(Token = "0x20001BF")]
public class FaceToCamera : MonoBehaviour
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inverce;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xCCA830", Offset = "0xCCA830", VA = "0xCCA830")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xCCA864", Offset = "0xCCA864", VA = "0xCCA864")]
	private void Update()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xCCA920", Offset = "0xCCA920", VA = "0xCCA920")]
	public FaceToCamera()
	{
	}
}
[Token(Token = "0x20001C0")]
public class FakeBeatSound : MonoBehaviour
{
	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float shooterBeatTimeDelay;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isActive;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BeatMaker beatMaker;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int n;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FakeBeatSound instance;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<FakeBeatEnemy> fakeBeatShooters;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FakeBeatSoundStruct[] fakeBeats;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Gun curGun;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float bpm;

	[Token(Token = "0x17000076")]
	public float HalfShootBeatTime
	{
		[Token(Token = "0x600075C")]
		[Address(RVA = "0xCCA928", Offset = "0xCCA928", VA = "0xCCA928")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xCCA938", Offset = "0xCCA938", VA = "0xCCA938")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xCCA990", Offset = "0xCCA990", VA = "0xCCA990")]
	public void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xCCABE8", Offset = "0xCCABE8", VA = "0xCCABE8")]
	public bool BeatSoundShooter(Enemy enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xCCAE18", Offset = "0xCCAE18", VA = "0xCCAE18")]
	public void StopGame()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xCCAF4C", Offset = "0xCCAF4C", VA = "0xCCAF4C")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xCCAF9C", Offset = "0xCCAF9C", VA = "0xCCAF9C")]
	public void GetBeatMaker()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xCCB178", Offset = "0xCCB178", VA = "0xCCB178")]
	public void GetCurGun()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xCCB460", Offset = "0xCCB460", VA = "0xCCB460")]
	public void OnSpawnObstacle(Obstacle obstacle, int num)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xCCB288", Offset = "0xCCB288", VA = "0xCCB288")]
	public void SetFakeSoundTimes()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xCCB5F4", Offset = "0xCCB5F4", VA = "0xCCB5F4")]
	private float GetBeatTimeEnemyStay(int n, bool slice)
	{
		return default(float);
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xCCB7A4", Offset = "0xCCB7A4", VA = "0xCCB7A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xCCB7B4", Offset = "0xCCB7B4", VA = "0xCCB7B4")]
	public void Check()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xCCB824", Offset = "0xCCB824", VA = "0xCCB824")]
	public void PlaySoundFake()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xCCB944", Offset = "0xCCB944", VA = "0xCCB944")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xCCBAE4", Offset = "0xCCBAE4", VA = "0xCCBAE4")]
	public FakeBeatSound()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C1")]
public struct FakeBeatSoundStruct
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float t;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Obstacle.Type type;
}
[Serializable]
[Token(Token = "0x20001C2")]
public struct FakeBeatEnemy
{
	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Enemy enemy;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int num;
}
[Token(Token = "0x20001C3")]
public class FreestyleModChecker : MonoBehaviour
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> noFreestyle;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> freestyle;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> _imagesFillings;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xCCBAF8", Offset = "0xCCBAF8", VA = "0xCCBAF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xCCBC30", Offset = "0xCCBC30", VA = "0xCCBC30")]
	public FreestyleModChecker()
	{
	}
}
[Token(Token = "0x20001C4")]
public class DissolveAction : MonoBehaviour
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DissolveController dissolveController;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnShowDissolve;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnHideDissolve;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xCCBC38", Offset = "0xCCBC38", VA = "0xCCBC38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xCCBD9C", Offset = "0xCCBD9C", VA = "0xCCBD9C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xCCBDB0", Offset = "0xCCBDB0", VA = "0xCCBDB0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xCCBDC4", Offset = "0xCCBDC4", VA = "0xCCBDC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xCCBF28", Offset = "0xCCBF28", VA = "0xCCBF28")]
	public DissolveAction()
	{
	}
}
[Token(Token = "0x20001C5")]
public class DissolveController : MonoBehaviour
{
	[Token(Token = "0x20001C6")]
	[CompilerGenerated]
	private sealed class <ShowProcess>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DissolveController <>4__this;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <d>5__2;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0xCCC744", Offset = "0xCCC744", VA = "0xCCC744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0xCCC78C", Offset = "0xCCC78C", VA = "0xCCC78C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xCCC1F0", Offset = "0xCCC1F0", VA = "0xCCC1F0")]
		[DebuggerHidden]
		public <ShowProcess>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xCCC53C", Offset = "0xCCC53C", VA = "0xCCC53C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xCCC540", Offset = "0xCCC540", VA = "0xCCC540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xCCC74C", Offset = "0xCCC74C", VA = "0xCCC74C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C7")]
	[CompilerGenerated]
	private sealed class <HideProcess>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DissolveController <>4__this;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <d>5__2;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0xCCC9AC", Offset = "0xCCC9AC", VA = "0xCCC9AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xCCC9F4", Offset = "0xCCC9F4", VA = "0xCCC9F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xCCC3B4", Offset = "0xCCC3B4", VA = "0xCCC3B4")]
		[DebuggerHidden]
		public <HideProcess>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xCCC794", Offset = "0xCCC794", VA = "0xCCC794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xCCC798", Offset = "0xCCC798", VA = "0xCCC798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xCCC9B4", Offset = "0xCCC9B4", VA = "0xCCC9B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C8")]
	[CompilerGenerated]
	private sealed class <BrightProcess>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DissolveController <>4__this;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <startColor>5__2;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <brightColor>5__3;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color <cv>5__4;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <f>5__5;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0xCCCCC4", Offset = "0xCCCCC4", VA = "0xCCCCC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xCCCD0C", Offset = "0xCCCD0C", VA = "0xCCCD0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xCCC4F8", Offset = "0xCCC4F8", VA = "0xCCC4F8")]
		[DebuggerHidden]
		public <BrightProcess>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xCCC9FC", Offset = "0xCCC9FC", VA = "0xCCC9FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xCCCA00", Offset = "0xCCCA00", VA = "0xCCCA00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xCCCCCC", Offset = "0xCCCCCC", VA = "0xCCCCCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] rends;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material[] mats;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float speed;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float brightSpeed;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnDissolveCompleted;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnDissolveHide;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isShow;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color _startColor;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xCCBF30", Offset = "0xCCBF30", VA = "0xCCBF30")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xCCC15C", Offset = "0xCCC15C", VA = "0xCCC15C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xCCC17C", Offset = "0xCCC17C", VA = "0xCCC17C")]
	[IteratorStateMachine(typeof(<ShowProcess>d__10))]
	private IEnumerator ShowProcess()
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xCCC218", Offset = "0xCCC218", VA = "0xCCC218")]
	public void StartHide()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xCCC320", Offset = "0xCCC320", VA = "0xCCC320")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xCCC340", Offset = "0xCCC340", VA = "0xCCC340")]
	[IteratorStateMachine(typeof(<HideProcess>d__13))]
	private IEnumerator HideProcess()
	{
		return null;
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xCCC3DC", Offset = "0xCCC3DC", VA = "0xCCC3DC")]
	public void Bright()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xCCC484", Offset = "0xCCC484", VA = "0xCCC484")]
	[IteratorStateMachine(typeof(<BrightProcess>d__15))]
	private IEnumerator BrightProcess()
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xCCC520", Offset = "0xCCC520", VA = "0xCCC520")]
	public void SetSpeed(float value)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xCCC528", Offset = "0xCCC528", VA = "0xCCC528")]
	public DissolveController()
	{
	}
}
[Token(Token = "0x20001C9")]
public class DissolveControllerCutted : DissolveController
{
	[Token(Token = "0x20001CA")]
	[CompilerGenerated]
	private sealed class <HideProcess>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isNeg;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DissolveControllerCutted <>4__this;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material[] <mats>5__2;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <d>5__3;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xCCD4D8", Offset = "0xCCD4D8", VA = "0xCCD4D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0xCCD520", Offset = "0xCCD520", VA = "0xCCD520", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xCCD22C", Offset = "0xCCD22C", VA = "0xCCD22C")]
		[DebuggerHidden]
		public <HideProcess>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xCCD27C", Offset = "0xCCD27C", VA = "0xCCD27C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xCCD280", Offset = "0xCCD280", VA = "0xCCD280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xCCD4E0", Offset = "0xCCD4E0", VA = "0xCCD4E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material[] posMats;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material[] negMats;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool baseHided;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool negHided;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool posHided;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xCCCD14", Offset = "0xCCCD14", VA = "0xCCCD14")]
	public void SetRenderer(bool isNeg, Renderer[] rend)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xCCD048", Offset = "0xCCD048", VA = "0xCCD048")]
	public void HidePart(bool isNeg)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xCCD1A4", Offset = "0xCCD1A4", VA = "0xCCD1A4")]
	[IteratorStateMachine(typeof(<HideProcess>d__7))]
	private IEnumerator HideProcess(bool isNeg)
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xCCD254", Offset = "0xCCD254", VA = "0xCCD254")]
	public bool GetHidedState(bool isNegStateNeeded)
	{
		return default(bool);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xCCD268", Offset = "0xCCD268", VA = "0xCCD268")]
	public DissolveControllerCutted()
	{
	}
}
[Token(Token = "0x20001CB")]
public class ParticleSystemController : MonoBehaviour
{
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] ps;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isPlay;

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xCCD528", Offset = "0xCCD528", VA = "0xCCD528")]
	public void Play()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xCCD590", Offset = "0xCCD590", VA = "0xCCD590")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xCCD598", Offset = "0xCCD598", VA = "0xCCD598")]
	public void Stop()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xCCD5FC", Offset = "0xCCD5FC", VA = "0xCCD5FC")]
	public ParticleSystemController()
	{
	}
}
[Token(Token = "0x20001CC")]
public class Portal : MonoBehaviour
{
	[Token(Token = "0x600079E")]
	[Address(RVA = "0xCCD604", Offset = "0xCCD604", VA = "0xCCD604")]
	private void Start()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xCCD684", Offset = "0xCCD684", VA = "0xCCD684")]
	public Portal()
	{
	}
}
[Token(Token = "0x20001CD")]
public class GameController : MonoBehaviour
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameController _instance;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool showParticles;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool showUIs;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[HideInInspector]
	public bool showHud;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[HideInInspector]
	public bool shootersDodge;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool revolver;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool shields;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameLevelAsset levelsAsset;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameLevelAsset optiLevelsAsset;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isTester;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isCustomSong;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool isGameDis;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool started;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnStarted;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool tutor;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnStartGame;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action OnStartTutor;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action OnPause;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action OnUnPause;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnResume;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnStopGame;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<float> OnBeat;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameStopCause gameStopCause;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CountDown countDown;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool mainHandIsRight;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioMixer mixer;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static DifficultyLevel difficulty;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string currentLevelName;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public BeatMaker beatMaker;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public LevelAsset currentLevelAsset;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TutorialState[] tutorWay;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float ts;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float tsp;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PauseType pauseType;

	[Token(Token = "0x1700007F")]
	public bool IsStarted
	{
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xCCD68C", Offset = "0xCCD68C", VA = "0xCCD68C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000080")]
	public bool IsPaused
	{
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xCCD694", Offset = "0xCCD694", VA = "0xCCD694")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000081")]
	public bool isTutor
	{
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xCCD6A4", Offset = "0xCCD6A4", VA = "0xCCD6A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xCCD6AC", Offset = "0xCCD6AC", VA = "0xCCD6AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xCCDB28", Offset = "0xCCDB28", VA = "0xCCDB28")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xCCDC10", Offset = "0xCCDC10", VA = "0xCCDC10")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xCCDCD0", Offset = "0xCCDCD0", VA = "0xCCDCD0")]
	public void SetTimeScale(float time, float speed = -1f)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xCCDCE4", Offset = "0xCCDCE4", VA = "0xCCDCE4")]
	public void SetTutorWay(TutorialState[] tutorialStates)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xCCDCF0", Offset = "0xCCDCF0", VA = "0xCCDCF0")]
	public TutorialState[] GetTutorWay()
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xCCDCF8", Offset = "0xCCDCF8", VA = "0xCCDCF8")]
	private void StartTutorial()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xCCDE18", Offset = "0xCCDE18", VA = "0xCCDE18")]
	public void FindBeatMaker()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xCCE1F8", Offset = "0xCCE1F8", VA = "0xCCE1F8")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xCCE3D8", Offset = "0xCCE3D8", VA = "0xCCE3D8")]
	public void LostVision()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xCCE510", Offset = "0xCCE510", VA = "0xCCE510")]
	public void StayCenterPause(bool state)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xCCE51C", Offset = "0xCCE51C", VA = "0xCCE51C")]
	public void PauseGame(bool state = true)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xCCE3FC", Offset = "0xCCE3FC", VA = "0xCCE3FC")]
	private void SetPause(bool state)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xCCE554", Offset = "0xCCE554", VA = "0xCCE554")]
	public void UnPausedGame()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xCCE6EC", Offset = "0xCCE6EC", VA = "0xCCE6EC")]
	public void ResumeGame()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xCCE7EC", Offset = "0xCCE7EC", VA = "0xCCE7EC")]
	public void SetLevelAsset(LevelAsset levelAsset)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xCCE7F4", Offset = "0xCCE7F4", VA = "0xCCE7F4")]
	public void RunByLevelAsset(LevelAsset _levelAsset)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xCCE928", Offset = "0xCCE928", VA = "0xCCE928")]
	public void OpenMenu()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xCCEC9C", Offset = "0xCCEC9C", VA = "0xCCEC9C")]
	public void RunNextLevel()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xCCED6C", Offset = "0xCCED6C", VA = "0xCCED6C")]
	public LevelAsset GetNextLevelAsset()
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xCCE9D0", Offset = "0xCCE9D0", VA = "0xCCE9D0")]
	public void StopGame(GameStopCause _cause)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xCCDF08", Offset = "0xCCDF08", VA = "0xCCDF08")]
	public void SetDifficulty()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xCCDB2C", Offset = "0xCCDB2C", VA = "0xCCDB2C")]
	public void GetSetting()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xCCEE74", Offset = "0xCCEE74", VA = "0xCCEE74")]
	public void BeatAction(float factor)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xCCEE90", Offset = "0xCCEE90", VA = "0xCCEE90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xCCF28C", Offset = "0xCCF28C", VA = "0xCCF28C")]
	public GameController()
	{
	}
}
[Token(Token = "0x20001CE")]
public enum DifficultyLevel
{
	[Token(Token = "0x4000841")]
	Easy,
	[Token(Token = "0x4000842")]
	Normal,
	[Token(Token = "0x4000843")]
	Hard
}
[Token(Token = "0x20001CF")]
public enum PauseType
{
	[Token(Token = "0x4000845")]
	None,
	[Token(Token = "0x4000846")]
	StayCenter,
	[Token(Token = "0x4000847")]
	LostVision,
	[Token(Token = "0x4000848")]
	Player,
	[Token(Token = "0x4000849")]
	UnPauseProc
}
[Token(Token = "0x20001D0")]
public enum GameStopCause
{
	[Token(Token = "0x400084B")]
	Menu,
	[Token(Token = "0x400084C")]
	Tutorial,
	[Token(Token = "0x400084D")]
	Lose,
	[Token(Token = "0x400084E")]
	Win
}
[Token(Token = "0x20001D1")]
public class BaseManager<T> : MonoBehaviour
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<T> objs;

	[Token(Token = "0x60007BE")]
	public static void Add(T obj)
	{
	}

	[Token(Token = "0x60007BF")]
	public static void Remove(T obj)
	{
	}

	[Token(Token = "0x60007C0")]
	public BaseManager()
	{
	}
}
[Token(Token = "0x20001D2")]
public class BulletsLookerManager : BaseManager<BulletsLooker>
{
	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xCCF2F4", Offset = "0xCCF2F4", VA = "0xCCF2F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xCCF488", Offset = "0xCCF488", VA = "0xCCF488")]
	public BulletsLookerManager()
	{
	}
}
[Token(Token = "0x20001D3")]
public class FullFollowerManager : BaseManager<FullFollower>
{
	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xCCF4F4", Offset = "0xCCF4F4", VA = "0xCCF4F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xCCF75C", Offset = "0xCCF75C", VA = "0xCCF75C")]
	public FullFollowerManager()
	{
	}
}
[Token(Token = "0x20001D4")]
public class LookAtManager : BaseManager<LookAt>
{
	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xCCF7C8", Offset = "0xCCF7C8", VA = "0xCCF7C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xCCF95C", Offset = "0xCCF95C", VA = "0xCCF95C")]
	public LookAtManager()
	{
	}
}
[Token(Token = "0x20001D5")]
public class ShooterAimerManager : BaseManager<ShooterAimer>
{
	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xCCF9C8", Offset = "0xCCF9C8", VA = "0xCCF9C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xCCFCA8", Offset = "0xCCFCA8", VA = "0xCCFCA8")]
	public ShooterAimerManager()
	{
	}
}
[Token(Token = "0x20001D6")]
public class HandTriggerAction : MonoBehaviour
{
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTrigged;

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xCCFD14", Offset = "0xCCFD14", VA = "0xCCFD14")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xCCFDC4", Offset = "0xCCFDC4", VA = "0xCCFDC4")]
	public HandTriggerAction()
	{
	}
}
[Token(Token = "0x20001D7")]
public enum HandType
{
	[Token(Token = "0x4000852")]
	None,
	[Token(Token = "0x4000853")]
	Left,
	[Token(Token = "0x4000854")]
	Right,
	[Token(Token = "0x4000855")]
	Both
}
[Token(Token = "0x20001D8")]
public class HeadPoser : MonoBehaviour
{
	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xCCFDCC", Offset = "0xCCFDCC", VA = "0xCCFDCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xCCFE54", Offset = "0xCCFE54", VA = "0xCCFE54")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xCCFE58", Offset = "0xCCFE58", VA = "0xCCFE58")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xCCFE5C", Offset = "0xCCFE5C", VA = "0xCCFE5C")]
	public HeadPoser()
	{
	}
}
[Token(Token = "0x20001D9")]
public enum HMDType
{
	[Token(Token = "0x4000857")]
	OculusRift,
	[Token(Token = "0x4000858")]
	OculusRiftS,
	[Token(Token = "0x4000859")]
	Vive,
	[Token(Token = "0x400085A")]
	ViveCosmos,
	[Token(Token = "0x400085B")]
	ValveIndex,
	[Token(Token = "0x400085C")]
	WMR
}
[Token(Token = "0x20001DA")]
public enum ControllerType
{
	[Token(Token = "0x400085E")]
	None,
	[Token(Token = "0x400085F")]
	ViveController,
	[Token(Token = "0x4000860")]
	ViveCosmosController,
	[Token(Token = "0x4000861")]
	OculusController,
	[Token(Token = "0x4000862")]
	Knuckles,
	[Token(Token = "0x4000863")]
	WMRController
}
[Token(Token = "0x20001DB")]
public class HMDVarietyHandler : MonoBehaviour
{
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HMDVarietyHandler _instance;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static HMDType hmd;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static ControllerType right;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ControllerType left;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string detectedHMD;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnLeftHandControlled;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnRightHandControlled;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xCCFE64", Offset = "0xCCFE64", VA = "0xCCFE64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xCCFEBC", Offset = "0xCCFEBC", VA = "0xCCFEBC")]
	public HMDVarietyHandler()
	{
	}
}
[Token(Token = "0x20001DC")]
public abstract class InputSystem : MonoBehaviour
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InputSystem instance;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static InputAction Shoot;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static InputAction Swap;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static InputAction Menu;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static InputSingleAction Squeeze;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xCCFF14", Offset = "0xCCFF14", VA = "0xCCFF14")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60007D3")]
	public abstract float GetTrigger(HandType _type);

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xCCFF7C", Offset = "0xCCFF7C", VA = "0xCCFF7C", Slot = "5")]
	public virtual Vector3 GetHandPosition(HandType hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xCCFFC0", Offset = "0xCCFFC0", VA = "0xCCFFC0", Slot = "6")]
	public virtual Quaternion GetHandRotation(HandType hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xCD0004", Offset = "0xCD0004", VA = "0xCD0004", Slot = "7")]
	public virtual Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xCD0048", Offset = "0xCD0048", VA = "0xCD0048", Slot = "8")]
	public virtual Quaternion GetHeadRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xCD008C", Offset = "0xCD008C", VA = "0xCD008C", Slot = "9")]
	public virtual Vector2 GetStickPosition(HandType hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007D9")]
	public abstract void Vibrate(VibrationSettings settings, HandType hand);

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xCD00CC", Offset = "0xCD00CC", VA = "0xCD00CC")]
	protected InputSystem()
	{
	}
}
[Token(Token = "0x20001DD")]
public class InputAction
{
	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<bool> onRightAction;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<bool> onLeftAction;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<bool, HandType> onAction;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rightState;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool leftState;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xCCDA54", Offset = "0xCCDA54", VA = "0xCCDA54")]
	public void AddListener(HandType hand, Action<bool> action)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xCD01F8", Offset = "0xCD01F8", VA = "0xCD01F8")]
	public void AddListener(Action<bool, HandType> action)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xCCF1B8", Offset = "0xCCF1B8", VA = "0xCCF1B8")]
	public void RemoveListener(HandType hand, Action<bool> action)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xCD02A0", Offset = "0xCD02A0", VA = "0xCD02A0")]
	public void RemoveListener(Action<bool, HandType> action)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xCD0348", Offset = "0xCD0348", VA = "0xCD0348")]
	public void Trigger(bool state, HandType hand)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xCD01E8", Offset = "0xCD01E8", VA = "0xCD01E8")]
	public InputAction()
	{
	}
}
[Token(Token = "0x20001DE")]
public class InputSingleAction
{
	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<float> onRightAction;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<float> onLeftAction;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<float, HandType> onAction;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rightState;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float leftState;

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xCD03D4", Offset = "0xCD03D4", VA = "0xCD03D4")]
	public void AddListener(HandType hand, Action<float> action)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xCD04A8", Offset = "0xCD04A8", VA = "0xCD04A8")]
	public void AddListener(Action<float, HandType> action)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xCD0550", Offset = "0xCD0550", VA = "0xCD0550")]
	public void RemoveListener(HandType hand, Action<float> action)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xCD0624", Offset = "0xCD0624", VA = "0xCD0624")]
	public void RemoveListener(Action<float, HandType> action)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xCD06CC", Offset = "0xCD06CC", VA = "0xCD06CC")]
	public void Trigger(float state, HandType hand)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xCD01F0", Offset = "0xCD01F0", VA = "0xCD01F0")]
	public InputSingleAction()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DF")]
public struct VibrationSettings
{
	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float amplitude;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float frequency;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float duration;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float delay;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xCD0760", Offset = "0xCD0760", VA = "0xCD0760")]
	public static VibrationSettings Lerp(VibrationSettings a, VibrationSettings b, float t)
	{
		return default(VibrationSettings);
	}
}
[Token(Token = "0x20001E0")]
public class OculusInput : InputSystem
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int foveaLevel;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xCD07B0", Offset = "0xCD07B0", VA = "0xCD07B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xCD07B4", Offset = "0xCD07B4", VA = "0xCD07B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xCD07B8", Offset = "0xCD07B8", VA = "0xCD07B8")]
	private void InputFocusAquired()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xCD07BC", Offset = "0xCD07BC", VA = "0xCD07BC", Slot = "10")]
	public override void Vibrate(VibrationSettings settings, HandType hand)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xCD07C0", Offset = "0xCD07C0", VA = "0xCD07C0", Slot = "4")]
	public override float GetTrigger(HandType _type)
	{
		return default(float);
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xCD07C8", Offset = "0xCD07C8", VA = "0xCD07C8")]
	public OculusInput()
	{
	}
}
[Token(Token = "0x20001E1")]
public class OpenXRInput : InputSystem
{
	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xCD0820", Offset = "0xCD0820", VA = "0xCD0820")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xCD0824", Offset = "0xCD0824", VA = "0xCD0824", Slot = "10")]
	public override void Vibrate(VibrationSettings settings, HandType hand)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xCD0828", Offset = "0xCD0828", VA = "0xCD0828", Slot = "4")]
	public override float GetTrigger(HandType hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xCD0830", Offset = "0xCD0830", VA = "0xCD0830")]
	public OpenXRInput()
	{
	}
}
[Token(Token = "0x20001E2")]
public class PicoInput : InputSystem
{
	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XRController leftController;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private XRController rightController;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool leftTrigger;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool rightTrigger;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool leftMenu;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool rightMenu;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xCD0888", Offset = "0xCD0888", VA = "0xCD0888", Slot = "4")]
	public override float GetTrigger(HandType hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xCD0940", Offset = "0xCD0940", VA = "0xCD0940", Slot = "10")]
	public override void Vibrate(VibrationSettings settings, HandType hand)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xCD0974", Offset = "0xCD0974", VA = "0xCD0974")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xCD0B3C", Offset = "0xCD0B3C", VA = "0xCD0B3C")]
	private float GetGrip(HandType hand)
	{
		return default(float);
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xCD0BF4", Offset = "0xCD0BF4", VA = "0xCD0BF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xCD1000", Offset = "0xCD1000", VA = "0xCD1000", Slot = "9")]
	public override Vector2 GetStickPosition(HandType hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xCD10B8", Offset = "0xCD10B8", VA = "0xCD10B8")]
	public PicoInput()
	{
	}
}
[Token(Token = "0x20001E3")]
public class Platforms : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject steam;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oculus;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pico;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject openXR;

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xCD1110", Offset = "0xCD1110", VA = "0xCD1110")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xCD11A0", Offset = "0xCD11A0", VA = "0xCD11A0")]
	public Platforms()
	{
	}
}
[Token(Token = "0x20001E4")]
public enum DeviceType
{
	[Token(Token = "0x400088A")]
	Quest1,
	[Token(Token = "0x400088B")]
	Quest2,
	[Token(Token = "0x400088C")]
	Pico,
	[Token(Token = "0x400088D")]
	PC
}
[Token(Token = "0x20001E5")]
public class SteamInput : MonoBehaviour
{
	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xCD11A8", Offset = "0xCD11A8", VA = "0xCD11A8")]
	public SteamInput()
	{
	}
}
[Token(Token = "0x20001E6")]
public class LeaderboardsSystem : MonoBehaviour
{
	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xCD11B0", Offset = "0xCD11B0", VA = "0xCD11B0")]
	public static void Show(int score, string sceneName, DifficultyLevel difficultyLevel)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xCD1238", Offset = "0xCD1238", VA = "0xCD1238")]
	public LeaderboardsSystem()
	{
	}
}
[Token(Token = "0x20001E7")]
public class LeaderboardUploader : MonoBehaviour
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int leaderboardSize;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<LeaderboardScore> scores;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LeaderboardScore myScore;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, string, DifficultyLevel> ShowLeaderboard;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected int currentTask;

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xCD1240", Offset = "0xCD1240", VA = "0xCD1240", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xCD14CC", Offset = "0xCD14CC", VA = "0xCD14CC")]
	private void UpdateLeaderboardOnStopGame()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xCD1634", Offset = "0xCD1634", VA = "0xCD1634")]
	private void UploadScore(int score, string sceneName, DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xCD16B8", Offset = "0xCD16B8", VA = "0xCD16B8", Slot = "5")]
	protected virtual bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xCD16C0", Offset = "0xCD16C0", VA = "0xCD16C0", Slot = "6")]
	protected virtual void LoadMyScoreAndShowLeaderboard(int score, string sceneName, DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xCD16C4", Offset = "0xCD16C4", VA = "0xCD16C4", Slot = "7")]
	protected virtual void ResetProcesses()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xCD16C8", Offset = "0xCD16C8", VA = "0xCD16C8")]
	protected void GettingMyScore(LeaderboardScore _myScore)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xCD1734", Offset = "0xCD1734", VA = "0xCD1734")]
	protected void GettingAllScores(List<LeaderboardScore> _scores)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xCD17A0", Offset = "0xCD17A0", VA = "0xCD17A0", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xCD1A34", Offset = "0xCD1A34", VA = "0xCD1A34")]
	public LeaderboardUploader()
	{
	}
}
[Token(Token = "0x20001E8")]
public class LeaderboardScore
{
	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_Name;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_Rank;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_Score;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xCD1B00", Offset = "0xCD1B00", VA = "0xCD1B00")]
	public LeaderboardScore()
	{
	}
}
[Token(Token = "0x20001E9")]
public class LocalLeaderboardUploader : LeaderboardUploader
{
	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <LoadMyScoreAndShowLeaderboardProcess>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int score;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DifficultyLevel difficulty;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalLeaderboardUploader <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000811")]
			[Address(RVA = "0xCD1EEC", Offset = "0xCD1EEC", VA = "0xCD1EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0xCD1F34", Offset = "0xCD1F34", VA = "0xCD1F34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xCD1BD8", Offset = "0xCD1BD8", VA = "0xCD1BD8")]
		[DebuggerHidden]
		public <LoadMyScoreAndShowLeaderboardProcess>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xCD1C04", Offset = "0xCD1C04", VA = "0xCD1C04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xCD1C08", Offset = "0xCD1C08", VA = "0xCD1C08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xCD1EF4", Offset = "0xCD1EF4", VA = "0xCD1EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xCD1B08", Offset = "0xCD1B08", VA = "0xCD1B08", Slot = "6")]
	protected override void LoadMyScoreAndShowLeaderboard(int score, string sceneName, DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xCD1BD0", Offset = "0xCD1BD0", VA = "0xCD1BD0", Slot = "7")]
	protected override void ResetProcesses()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xCD1B28", Offset = "0xCD1B28", VA = "0xCD1B28")]
	[IteratorStateMachine(typeof(<LoadMyScoreAndShowLeaderboardProcess>d__2))]
	private IEnumerator LoadMyScoreAndShowLeaderboardProcess(int score, string sceneName, DifficultyLevel difficulty)
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xCD1C00", Offset = "0xCD1C00", VA = "0xCD1C00")]
	public LocalLeaderboardUploader()
	{
	}
}
[Token(Token = "0x20001EB")]
public class BeatMapCreator : MonoBehaviour
{
	[Token(Token = "0x20001EC")]
	[CompilerGenerated]
	private sealed class <TryLoadData>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeatMapCreator <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0xCD33BC", Offset = "0xCD33BC", VA = "0xCD33BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0xCD3404", Offset = "0xCD3404", VA = "0xCD3404", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xCD2028", Offset = "0xCD2028", VA = "0xCD2028")]
		[DebuggerHidden]
		public <TryLoadData>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xCD2C90", Offset = "0xCD2C90", VA = "0xCD2C90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xCD2C94", Offset = "0xCD2C94", VA = "0xCD2C94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xCD33C4", Offset = "0xCD33C4", VA = "0xCD33C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001ED")]
	[CompilerGenerated]
	private sealed class <ChangeSnapValue>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000827")]
			[Address(RVA = "0xCD34E0", Offset = "0xCD34E0", VA = "0xCD34E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000829")]
			[Address(RVA = "0xCD3528", Offset = "0xCD3528", VA = "0xCD3528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xCD2AB4", Offset = "0xCD2AB4", VA = "0xCD2AB4")]
		[DebuggerHidden]
		public <ChangeSnapValue>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xCD340C", Offset = "0xCD340C", VA = "0xCD340C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xCD3410", Offset = "0xCD3410", VA = "0xCD3410", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xCD34E8", Offset = "0xCD34E8", VA = "0xCD34E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	[CompilerGenerated]
	private sealed class <UnChoosePlanes>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0xCD36F8", Offset = "0xCD36F8", VA = "0xCD36F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0xCD3740", Offset = "0xCD3740", VA = "0xCD3740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xCD2ADC", Offset = "0xCD2ADC", VA = "0xCD2ADC")]
		[DebuggerHidden]
		public <UnChoosePlanes>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xCD3530", Offset = "0xCD3530", VA = "0xCD3530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xCD3534", Offset = "0xCD3534", VA = "0xCD3534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xCD3700", Offset = "0xCD3700", VA = "0xCD3700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BeatMapCreator _instance;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bpm;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pretime;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int division;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float playerSpeed;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform beatMap;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hitOffset;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform waveform;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool startMusic;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] beatsPositions;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int mapLength;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform levelCube;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int snapTo;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int currentSnapTo;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<int, float> OnReady;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MenuLevelEditor menuLevelEditor;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xCD1F3C", Offset = "0xCD1F3C", VA = "0xCD1F3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xCD1F94", Offset = "0xCD1F94", VA = "0xCD1F94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xCD1FB4", Offset = "0xCD1FB4", VA = "0xCD1FB4")]
	[IteratorStateMachine(typeof(<TryLoadData>d__19))]
	public IEnumerator TryLoadData()
	{
		return null;
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xCD2050", Offset = "0xCD2050", VA = "0xCD2050")]
	public void Init()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xCD2A28", Offset = "0xCD2A28", VA = "0xCD2A28")]
	[IteratorStateMachine(typeof(<ChangeSnapValue>d__21))]
	private IEnumerator ChangeSnapValue()
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xCD29C8", Offset = "0xCD29C8", VA = "0xCD29C8")]
	[IteratorStateMachine(typeof(<UnChoosePlanes>d__22))]
	private IEnumerator UnChoosePlanes()
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xCD2B04", Offset = "0xCD2B04", VA = "0xCD2B04")]
	private void UITime()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xCD2A88", Offset = "0xCD2A88", VA = "0xCD2A88")]
	public void StartMusic()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xCD2B08", Offset = "0xCD2B08", VA = "0xCD2B08")]
	private void Update()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xCD2C74", Offset = "0xCD2C74", VA = "0xCD2C74")]
	public BeatMapCreator()
	{
	}
}
[Token(Token = "0x20001EF")]
public class BeatMapDownloaded : MonoBehaviour
{
	[Token(Token = "0x6000830")]
	[Address(RVA = "0xCD3748", Offset = "0xCD3748", VA = "0xCD3748")]
	public BeatMapDownloaded()
	{
	}
}
[Token(Token = "0x20001F0")]
public static class BeatTimeScore
{
	[Token(Token = "0x20001F1")]
	public struct WhereChangeMove
	{
		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timeChange;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isPlayerMove;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float posY;
	}

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<WhereChangeMove> _whereChangeMoves;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xCD3750", Offset = "0xCD3750", VA = "0xCD3750")]
	public static void AddWhereChangeMove(Vector3 position, bool state, float time, float posY = 0f)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xCD38B0", Offset = "0xCD38B0", VA = "0xCD38B0")]
	public static float SetTimeAtPosition(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xCD3A0C", Offset = "0xCD3A0C", VA = "0xCD3A0C")]
	public static void SetWhereChangeMove(BeatMaker.Beat[] beats)
	{
	}
}
[Token(Token = "0x20001F2")]
public class SeeBookmark : MonoBehaviour
{
	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject bookmarkPanel;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button deleteButton;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField inputName;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_InputField inputMark;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeValue;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _init;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float time;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int startDoubleClick;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool click;

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xCD47B0", Offset = "0xCD47B0", VA = "0xCD47B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xCD47B4", Offset = "0xCD47B4", VA = "0xCD47B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xCD492C", Offset = "0xCD492C", VA = "0xCD492C")]
	public void Init([Optional] MenuLevelEditor.BookmarkData bookmarkData)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xCD4B44", Offset = "0xCD4B44", VA = "0xCD4B44")]
	private void ValueChange(string str)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xCD4C00", Offset = "0xCD4C00", VA = "0xCD4C00")]
	public void SeeBookmarkPanel()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xCD4D28", Offset = "0xCD4D28", VA = "0xCD4D28")]
	public void UnvisibleBookmarkPanel()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xCD4D68", Offset = "0xCD4D68", VA = "0xCD4D68")]
	private void Update()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xCD4E48", Offset = "0xCD4E48", VA = "0xCD4E48")]
	private void Delete()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xCD4DEC", Offset = "0xCD4DEC", VA = "0xCD4DEC")]
	public void DoubleClick()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xCD4F14", Offset = "0xCD4F14", VA = "0xCD4F14")]
	public SeeBookmark()
	{
	}
}
[Token(Token = "0x20001F3")]
public class SetBookmark : MonoBehaviour
{
	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SetBookmark _instance;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform handleSlider;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bookmarkPref;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bookmarkPanelPref;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas canvas;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> bookmarks;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xCD4F1C", Offset = "0xCD4F1C", VA = "0xCD4F1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xCD4F74", Offset = "0xCD4F74", VA = "0xCD4F74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xCD4FF0", Offset = "0xCD4FF0", VA = "0xCD4FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xCD5330", Offset = "0xCD5330", VA = "0xCD5330")]
	public void DownloadBookmarkFromSave(MenuLevelEditor.BookmarkData[] bookmarkData)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xCD5650", Offset = "0xCD5650", VA = "0xCD5650")]
	public void ChangeText(string str)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xCD5654", Offset = "0xCD5654", VA = "0xCD5654")]
	public SetBookmark()
	{
	}
}
[Token(Token = "0x20001F4")]
public class TimeBookmark : MonoBehaviour
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bookmarkPref;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xCD565C", Offset = "0xCD565C", VA = "0xCD565C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xCD5660", Offset = "0xCD5660", VA = "0xCD5660")]
	public TimeBookmark()
	{
	}
}
[Token(Token = "0x20001F5")]
public class ChangeTime
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float startTime;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeToward;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Obstacle.Type type;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<float, Vector3> positionAtTime;

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xCD5668", Offset = "0xCD5668", VA = "0xCD5668")]
	public void Init(Vector3 position, Obstacle.Type type, float time)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xCD579C", Offset = "0xCD579C", VA = "0xCD579C")]
	public Vector3 CheckTimeToMove(Vector3 position, Vector3 target, float attackDistance, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xCD5890", Offset = "0xCD5890", VA = "0xCD5890")]
	public bool CheckTimeToAnim(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xCD58B4", Offset = "0xCD58B4", VA = "0xCD58B4")]
	public bool IsStartPosition(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xCD58C4", Offset = "0xCD58C4", VA = "0xCD58C4")]
	public void AddToDictionary(float time, Vector3 position)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xCD5944", Offset = "0xCD5944", VA = "0xCD5944")]
	public bool PositionNotContainsTime(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xCD59B0", Offset = "0xCD59B0", VA = "0xCD59B0")]
	public Vector3 MoveAtPause(Vector3 position, Vector3 target, float attackDistance, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xCD5AF4", Offset = "0xCD5AF4", VA = "0xCD5AF4")]
	public ChangeTime()
	{
	}
}
[Token(Token = "0x20001F6")]
public class CollisionSoundCheck : MonoBehaviour
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip keyMomentClip;

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xCD5AFC", Offset = "0xCD5AFC", VA = "0xCD5AFC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xCD5D58", Offset = "0xCD5D58", VA = "0xCD5D58")]
	public CollisionSoundCheck()
	{
	}
}
[Token(Token = "0x20001F7")]
public class Destroyer : MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objs;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xCD5D60", Offset = "0xCD5D60", VA = "0xCD5D60")]
	public void Do()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xCD5E00", Offset = "0xCD5E00", VA = "0xCD5E00")]
	public Destroyer()
	{
	}
}
[Token(Token = "0x20001F8")]
public class EditorTesterButtons : MonoBehaviour
{
	[Token(Token = "0x6000853")]
	[Address(RVA = "0xCD5E08", Offset = "0xCD5E08", VA = "0xCD5E08")]
	public void GoToScene(int number)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xCD5EF4", Offset = "0xCD5EF4", VA = "0xCD5EF4")]
	public EditorTesterButtons()
	{
	}
}
[Token(Token = "0x20001F9")]
public class AbstractChunkManager : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Transform> chunks;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offset;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float last;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xCD5EFC", Offset = "0xCD5EFC", VA = "0xCD5EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xCD5F5C", Offset = "0xCD5F5C", VA = "0xCD5F5C")]
	public Transform GetChunk()
	{
		return null;
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xCD6024", Offset = "0xCD6024", VA = "0xCD6024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xCD6064", Offset = "0xCD6064", VA = "0xCD6064")]
	private void AddChunk()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xCD60F8", Offset = "0xCD60F8", VA = "0xCD60F8")]
	public AbstractChunkManager()
	{
	}
}
[Token(Token = "0x20001FA")]
public class FogController : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform player;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform fog;

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xCD610C", Offset = "0xCD610C", VA = "0xCD610C")]
	private void Start()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xCD616C", Offset = "0xCD616C", VA = "0xCD616C")]
	private void Update()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xCD61A0", Offset = "0xCD61A0", VA = "0xCD61A0")]
	public FogController()
	{
	}
}
[Token(Token = "0x20001FB")]
public class GenerateEnvironment : MonoBehaviour
{
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PoolObject planePrefab;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pool pool;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PoolObject boxPrefab;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Pool boxPool;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 planeXpos;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 planeXlen;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 planeYpos;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 planeYlen;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 planeZlen;

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xCD61A8", Offset = "0xCD61A8", VA = "0xCD61A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xCD6240", Offset = "0xCD6240", VA = "0xCD6240")]
	public void Generate()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xCD6474", Offset = "0xCD6474", VA = "0xCD6474")]
	public void GenerateBoxes()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xCD666C", Offset = "0xCD666C", VA = "0xCD666C")]
	private void CreateRoad(float f, float distance, Transform parent)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xCD67E8", Offset = "0xCD67E8", VA = "0xCD67E8")]
	public List<BeatMaker.Beat> GetBeats(Obstacle.Type _type, BeatMaker.Beat[] _beats)
	{
		return null;
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xCD69B8", Offset = "0xCD69B8", VA = "0xCD69B8")]
	public void ProcessWallsGeneration()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xCD6C54", Offset = "0xCD6C54", VA = "0xCD6C54")]
	public void PlaceWall(BeatMaker.Beat _beat)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xCD6D48", Offset = "0xCD6D48", VA = "0xCD6D48")]
	private Vector3 NewRandomVector(float min, float rand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xCD6DA8", Offset = "0xCD6DA8", VA = "0xCD6DA8")]
	private Color NewRandomColor(float min, float rand)
	{
		return default(Color);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xCD6E28", Offset = "0xCD6E28", VA = "0xCD6E28")]
	private Quaternion NewRandomQuaternion(float min, float rand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xCD6E30", Offset = "0xCD6E30", VA = "0xCD6E30")]
	public GenerateEnvironment()
	{
	}
}
[Token(Token = "0x20001FC")]
public class GrayBoxToJson : MonoBehaviour
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string fileName;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doIt;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xCD6E5C", Offset = "0xCD6E5C", VA = "0xCD6E5C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xCD71EC", Offset = "0xCD71EC", VA = "0xCD71EC")]
	public GrayBoxToJson()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FD")]
public class EnvBlocks
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MenuLevelEditor.EnvironmentData[] environmentDatas;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xCD71E4", Offset = "0xCD71E4", VA = "0xCD71E4")]
	public EnvBlocks()
	{
	}
}
[Token(Token = "0x20001FE")]
public class EnvironmentGrid : MonoBehaviour
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnvironmentGrid _instance;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2Int GridSize;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EnvironmentLE[,] grid;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnvironmentLE flyingBuilding;

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xCD7244", Offset = "0xCD7244", VA = "0xCD7244")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xCD72EC", Offset = "0xCD72EC", VA = "0xCD72EC")]
	public void StartPlacingEnvironment(EnvironmentLE environmentPrefab)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xCD73D4", Offset = "0xCD73D4", VA = "0xCD73D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xCD7840", Offset = "0xCD7840", VA = "0xCD7840")]
	public EnvironmentGrid()
	{
	}
}
[Token(Token = "0x20001FF")]
public class EnvironmentLE : MonoBehaviour
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2Int size;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer mainRenderer;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color mainColor;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xCD7854", Offset = "0xCD7854", VA = "0xCD7854")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xCD788C", Offset = "0xCD788C", VA = "0xCD788C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xCD77B4", Offset = "0xCD77B4", VA = "0xCD77B4")]
	public void SetTransparent(bool availiable)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xCD780C", Offset = "0xCD780C", VA = "0xCD780C")]
	public void ResetColor()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xCD7AAC", Offset = "0xCD7AAC", VA = "0xCD7AAC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xCD7BB4", Offset = "0xCD7BB4", VA = "0xCD7BB4")]
	public EnvironmentLE()
	{
	}
}
[Token(Token = "0x2000200")]
public class SphereMouseBehavior : MonoBehaviour
{
	[Token(Token = "0x2000201")]
	public enum sphereType
	{
		[Token(Token = "0x40008EF")]
		CENTER,
		[Token(Token = "0x40008F0")]
		MAX,
		[Token(Token = "0x40008F1")]
		MIN
	}

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnvironmentBehavior envBehavior;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float startZ;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public sphereType type;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool choose;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Plane plane;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xCD7C0C", Offset = "0xCD7C0C", VA = "0xCD7C0C")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xCD7C48", Offset = "0xCD7C48", VA = "0xCD7C48")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xCD7ED8", Offset = "0xCD7ED8", VA = "0xCD7ED8")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xCD7F38", Offset = "0xCD7F38", VA = "0xCD7F38")]
	private void OnMouseOver()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xCD8148", Offset = "0xCD8148", VA = "0xCD8148")]
	public SphereMouseBehavior()
	{
	}
}
[Token(Token = "0x2000202")]
public class GroundDrawer : MonoBehaviour
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rend;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BeatMapCreator beatMapCreator;

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xCD8150", Offset = "0xCD8150", VA = "0xCD8150")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xCD8238", Offset = "0xCD8238", VA = "0xCD8238")]
	private void StartCounting(int beatsLength, float bps)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xCD8358", Offset = "0xCD8358", VA = "0xCD8358")]
	public Texture2D Paint(int width, int height, float mapLength, Color metersColor)
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xCD85D8", Offset = "0xCD85D8", VA = "0xCD85D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xCD86C0", Offset = "0xCD86C0", VA = "0xCD86C0")]
	public GroundDrawer()
	{
	}
}
[Token(Token = "0x2000203")]
public class GroundLevel : MonoBehaviour
{
	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform player;

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xCD86C8", Offset = "0xCD86C8", VA = "0xCD86C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xCD876C", Offset = "0xCD876C", VA = "0xCD876C")]
	public GroundLevel()
	{
	}
}
[Token(Token = "0x2000204")]
public class ParametersManager : MonoBehaviour
{
	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ParametersManager _instance;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] parametersPref;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LevelPanel;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xCD8774", Offset = "0xCD8774", VA = "0xCD8774")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xCD87CC", Offset = "0xCD87CC", VA = "0xCD87CC")]
	public ParametersManager()
	{
	}
}
[Token(Token = "0x2000205")]
public class CarDriverLevelEditor : CarDriver
{
	[Token(Token = "0x6000883")]
	[Address(RVA = "0xCD87D4", Offset = "0xCD87D4", VA = "0xCD87D4")]
	public CarDriverLevelEditor()
	{
	}
}
[Token(Token = "0x2000206")]
public class CarLevelEditor : Car
{
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string animName;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _startPos;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float startTime;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeToward;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xCD87DC", Offset = "0xCD87DC", VA = "0xCD87DC", Slot = "12")]
	protected new virtual void Update()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xCD89F4", Offset = "0xCD89F4", VA = "0xCD89F4", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xCD89F8", Offset = "0xCD89F8", VA = "0xCD89F8", Slot = "11")]
	public override void Set(float time, float cryptography)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xCD8A14", Offset = "0xCD8A14", VA = "0xCD8A14")]
	public CarLevelEditor()
	{
	}
}
[Token(Token = "0x2000207")]
public class ChangebleJumpBlockEditor : ChangebleJumpBlock
{
	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RunCheckerLevelEditor runCheckerLevelEditor;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xCD8A1C", Offset = "0xCD8A1C", VA = "0xCD8A1C", Slot = "9")]
	public override void RunSet(bool state)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xCD8A3C", Offset = "0xCD8A3C", VA = "0xCD8A3C", Slot = "10")]
	protected override bool IsPlayerRunnig()
	{
		return default(bool);
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xCD8A90", Offset = "0xCD8A90", VA = "0xCD8A90")]
	public ChangebleJumpBlockEditor()
	{
	}
}
[Token(Token = "0x2000208")]
public class FighterAirplaneLevelEditor : FighterAirplane
{
	[Token(Token = "0x600088B")]
	[Address(RVA = "0xCD8A98", Offset = "0xCD8A98", VA = "0xCD8A98")]
	public FighterAirplaneLevelEditor()
	{
	}
}
[Token(Token = "0x2000209")]
public class ForciblyMoveLevelEditor : ForciblyMover
{
	[Token(Token = "0x600088C")]
	[Address(RVA = "0xCD8AA0", Offset = "0xCD8AA0", VA = "0xCD8AA0", Slot = "9")]
	protected override void MovePlayer(bool state, Transform movePoint)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xCD8B44", Offset = "0xCD8B44", VA = "0xCD8B44")]
	public ForciblyMoveLevelEditor()
	{
	}
}
[Token(Token = "0x200020A")]
public class GrenadeLevelEditor : Grenade
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string animName;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _startPos;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float startTime;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeToward;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xCD8B4C", Offset = "0xCD8B4C", VA = "0xCD8B4C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xCD8B54", Offset = "0xCD8B54", VA = "0xCD8B54", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xCD8B5C", Offset = "0xCD8B5C", VA = "0xCD8B5C", Slot = "7")]
	protected override void ForcePlayerMove(float lateFactor, float lateTime)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xCD8B60", Offset = "0xCD8B60", VA = "0xCD8B60")]
	public GrenadeLevelEditor()
	{
	}
}
[Token(Token = "0x200020B")]
public class HitArrowCheckerEditor : HitArrowsChecker
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HandController leftHand;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HandController rightHand;

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xCD8B68", Offset = "0xCD8B68", VA = "0xCD8B68", Slot = "4")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xCD8B70", Offset = "0xCD8B70", VA = "0xCD8B70", Slot = "6")]
	public override void Hit()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xCD8C74", Offset = "0xCD8C74", VA = "0xCD8C74")]
	public HitArrowCheckerEditor()
	{
	}
}
[Token(Token = "0x200020C")]
public class JumpCheckerLevelEditor : JumpChecker
{
	[Token(Token = "0x6000895")]
	[Address(RVA = "0xCD8C7C", Offset = "0xCD8C7C", VA = "0xCD8C7C", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xCD8DD8", Offset = "0xCD8DD8", VA = "0xCD8DD8")]
	public JumpCheckerLevelEditor()
	{
	}
}
[Token(Token = "0x200020D")]
public class PlayerMoverLevelEditor : PlayerMover
{
	[Token(Token = "0x6000897")]
	[Address(RVA = "0xCD8DE0", Offset = "0xCD8DE0", VA = "0xCD8DE0", Slot = "4")]
	protected override void SetFakeMoveSpeed(bool run)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xCD8E88", Offset = "0xCD8E88", VA = "0xCD8E88")]
	public PlayerMoverLevelEditor()
	{
	}
}
[Token(Token = "0x200020E")]
public class RunCheckerLevelEditor : MotionChecker
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool run;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform movePoint;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grenade grenade;

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xCD8E90", Offset = "0xCD8E90", VA = "0xCD8E90", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xCD8F7C", Offset = "0xCD8F7C", VA = "0xCD8F7C")]
	public RunCheckerLevelEditor()
	{
	}
}
[Token(Token = "0x200020F")]
public class StartCustomSong : MonoBehaviour
{
	[Token(Token = "0x600089B")]
	[Address(RVA = "0xCD8F84", Offset = "0xCD8F84", VA = "0xCD8F84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xCD9004", Offset = "0xCD9004", VA = "0xCD9004")]
	public StartCustomSong()
	{
	}
}
[Token(Token = "0x2000210")]
public class TommyGunLevelEditor : TommyGun
{
	[Token(Token = "0x600089D")]
	[Address(RVA = "0xCD900C", Offset = "0xCD900C", VA = "0xCD900C", Slot = "13")]
	protected override float GetPlayTime()
	{
		return default(float);
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xCD9060", Offset = "0xCD9060", VA = "0xCD9060")]
	public TommyGunLevelEditor()
	{
	}
}
[Token(Token = "0x2000211")]
public class WeaponDistanceLevelEditor : WeaponDistance
{
	[Token(Token = "0x600089F")]
	[Address(RVA = "0xCD9068", Offset = "0xCD9068", VA = "0xCD9068", Slot = "4")]
	public override float GetMusicTime()
	{
		return default(float);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xCD90BC", Offset = "0xCD90BC", VA = "0xCD90BC")]
	public WeaponDistanceLevelEditor()
	{
	}
}
[Token(Token = "0x2000212")]
public class PlaneBehaviorBlock : PlaneBehavior
{
	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private WeaponParameters param;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xCD90C4", Offset = "0xCD90C4", VA = "0xCD90C4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xCD936C", Offset = "0xCD936C", VA = "0xCD936C", Slot = "9")]
	public override void OnMouseDrag()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xCD9374", Offset = "0xCD9374", VA = "0xCD9374", Slot = "14")]
	public override void Restore(IMemento memento)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xCD93C0", Offset = "0xCD93C0", VA = "0xCD93C0", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xCD9460", Offset = "0xCD9460", VA = "0xCD9460", Slot = "15")]
	protected override void InputKey()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xCD9480", Offset = "0xCD9480", VA = "0xCD9480")]
	public PlaneBehaviorBlock()
	{
	}
}
[Token(Token = "0x2000213")]
public class PlaneBehaviorCar : PlaneBehavior
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CarParameters param;

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xCD9488", Offset = "0xCD9488", VA = "0xCD9488", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xCD97A0", Offset = "0xCD97A0", VA = "0xCD97A0", Slot = "9")]
	public override void OnMouseDrag()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xCD9824", Offset = "0xCD9824", VA = "0xCD9824", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xCD98C4", Offset = "0xCD98C4", VA = "0xCD98C4", Slot = "15")]
	protected override void InputKey()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xCD98E4", Offset = "0xCD98E4", VA = "0xCD98E4")]
	public PlaneBehaviorCar()
	{
	}
}
[Token(Token = "0x2000214")]
public class PlaneBehaviorForciblyMove : PlaneBehavior
{
	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public CubeHeightBehavior endHeight;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Vector3 endHeightPosition;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool changeParam;

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xCD98EC", Offset = "0xCD98EC", VA = "0xCD98EC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xCD9D98", Offset = "0xCD9D98", VA = "0xCD9D98", Slot = "11")]
	public override void Choose()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xCD9DE0", Offset = "0xCD9DE0", VA = "0xCD9DE0", Slot = "14")]
	public override void Restore(IMemento memento)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xCD9EB8", Offset = "0xCD9EB8", VA = "0xCD9EB8", Slot = "12")]
	public override void UnChoose()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xCD9F00", Offset = "0xCD9F00", VA = "0xCD9F00", Slot = "9")]
	public override void OnMouseDrag()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xCD9F84", Offset = "0xCD9F84", VA = "0xCD9F84", Slot = "10")]
	protected override void OnMouseUp()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xCD9F88", Offset = "0xCD9F88", VA = "0xCD9F88")]
	public void SetNewPosition()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xCDA180", Offset = "0xCDA180", VA = "0xCDA180")]
	public void SetBreakDistance()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xCDA2B4", Offset = "0xCDA2B4", VA = "0xCDA2B4", Slot = "15")]
	protected override void InputKey()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xCDA2D4", Offset = "0xCDA2D4", VA = "0xCDA2D4")]
	public PlaneBehaviorForciblyMove()
	{
	}
}
[Token(Token = "0x2000215")]
public class PlaneBehaviorJump : PlaneBehavior
{
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public JumpParameters param;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xCDA2DC", Offset = "0xCDA2DC", VA = "0xCDA2DC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xCDA5FC", Offset = "0xCDA5FC", VA = "0xCDA5FC", Slot = "11")]
	public override void Choose()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xCDA680", Offset = "0xCDA680", VA = "0xCDA680", Slot = "12")]
	public override void UnChoose()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xCDA704", Offset = "0xCDA704", VA = "0xCDA704", Slot = "9")]
	public override void OnMouseDrag()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xCDA788", Offset = "0xCDA788", VA = "0xCDA788", Slot = "14")]
	public override void Restore(IMemento memento)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xCDA8F8", Offset = "0xCDA8F8", VA = "0xCDA8F8", Slot = "10")]
	protected override void OnMouseUp()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xCDA91C", Offset = "0xCDA91C", VA = "0xCDA91C", Slot = "15")]
	protected override void InputKey()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xCDA93C", Offset = "0xCDA93C", VA = "0xCDA93C")]
	public PlaneBehaviorJump()
	{
	}
}
[Token(Token = "0x2000216")]
public class PlaneBehaviorRun : PlaneBehavior
{
	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xCDA944", Offset = "0xCDA944", VA = "0xCDA944", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xCDA9C8", Offset = "0xCDA9C8", VA = "0xCDA9C8", Slot = "9")]
	public override void OnMouseDrag()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xCDAA4C", Offset = "0xCDAA4C", VA = "0xCDAA4C", Slot = "6")]
	protected override void Pause()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xCDAAF0", Offset = "0xCDAAF0", VA = "0xCDAAF0", Slot = "5")]
	protected override void Play()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xCDAC1C", Offset = "0xCDAC1C", VA = "0xCDAC1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xCDAD78", Offset = "0xCDAD78", VA = "0xCDAD78", Slot = "15")]
	protected override void InputKey()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xCDAD98", Offset = "0xCDAD98", VA = "0xCDAD98")]
	public PlaneBehaviorRun()
	{
	}
}
[Token(Token = "0x2000217")]
public class PlaneBehaviorShooter : PlaneBehavior
{
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ShooterParameters param;

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xCDADA0", Offset = "0xCDADA0", VA = "0xCDADA0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xCDB1D4", Offset = "0xCDB1D4", VA = "0xCDB1D4", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xCDB2E0", Offset = "0xCDB2E0", VA = "0xCDB2E0", Slot = "15")]
	protected override void InputKey()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xCDB30C", Offset = "0xCDB30C", VA = "0xCDB30C")]
	public PlaneBehaviorShooter()
	{
	}
}
[Token(Token = "0x2000218")]
public class PlaneBehaviorSnake : PlaneBehavior
{
	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xCDB314", Offset = "0xCDB314", VA = "0xCDB314", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xCDB420", Offset = "0xCDB420", VA = "0xCDB420", Slot = "9")]
	public override void OnMouseDrag()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xCDB4A4", Offset = "0xCDB4A4", VA = "0xCDB4A4", Slot = "6")]
	protected override void Pause()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xCDB4FC", Offset = "0xCDB4FC", VA = "0xCDB4FC", Slot = "5")]
	protected override void Play()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xCDB618", Offset = "0xCDB618", VA = "0xCDB618", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xCDB6F0", Offset = "0xCDB6F0", VA = "0xCDB6F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xCDB82C", Offset = "0xCDB82C", VA = "0xCDB82C")]
	public PlaneBehaviorSnake()
	{
	}
}
[Token(Token = "0x2000219")]
public class PlaneBehaviorThrower : PlaneBehavior
{
	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xCDB834", Offset = "0xCDB834", VA = "0xCDB834", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xCDB9D8", Offset = "0xCDB9D8", VA = "0xCDB9D8", Slot = "9")]
	public override void OnMouseDrag()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xCDBAEC", Offset = "0xCDBAEC", VA = "0xCDBAEC", Slot = "10")]
	protected override void OnMouseUp()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xCDBC34", Offset = "0xCDBC34", VA = "0xCDBC34", Slot = "15")]
	protected override void InputKey()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xCDBC60", Offset = "0xCDBC60", VA = "0xCDBC60")]
	public PlaneBehaviorThrower()
	{
	}
}
[Token(Token = "0x200021A")]
public class PlaneBehaviorWall : PlaneBehavior
{
	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xCDBC68", Offset = "0xCDBC68", VA = "0xCDBC68", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xCDBD34", Offset = "0xCDBD34", VA = "0xCDBD34", Slot = "9")]
	public override void OnMouseDrag()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xCDBDE8", Offset = "0xCDBDE8", VA = "0xCDBDE8", Slot = "15")]
	protected override void InputKey()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xCDBE08", Offset = "0xCDBE08", VA = "0xCDBE08")]
	public PlaneBehaviorWall()
	{
	}
}
[Token(Token = "0x200021B")]
public interface IRestrictions
{
	[Token(Token = "0x60008D9")]
	void CheckRestrictions(Transform point);
}
[Token(Token = "0x200021C")]
public class Restrictions : MonoBehaviour
{
	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<PlaneBehavior> OnCheckRestriction;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Obstacle.Type currentWeapon;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int positionAtArray;

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xCDBE10", Offset = "0xCDBE10", VA = "0xCDBE10")]
	public void ShowWarnings(bool state)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xCDC0B0", Offset = "0xCDC0B0", VA = "0xCDC0B0")]
	public void CheckRestrictions(PlaneBehavior planeBehavior)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xCDC33C", Offset = "0xCDC33C", VA = "0xCDC33C")]
	private bool IsRunObstacle(Obstacle.Type type)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xCDC4D0", Offset = "0xCDC4D0", VA = "0xCDC4D0")]
	private bool IsStayObstacle(Obstacle.Type type)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xCDCBAC", Offset = "0xCDCBAC", VA = "0xCDCBAC")]
	private void RunRestriction(PlaneBehavior planeBehavior)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xCDCA50", Offset = "0xCDCA50", VA = "0xCDCA50")]
	private void RicochetRestriction(PlaneBehavior planeBehavior)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xCDC8EC", Offset = "0xCDC8EC", VA = "0xCDC8EC")]
	private void ShooterRestriction(PlaneBehavior planeBehavior)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xCDC718", Offset = "0xCDC718", VA = "0xCDC718")]
	private void BoxerRestriction(PlaneBehavior planeBehavior)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xCDC508", Offset = "0xCDC508", VA = "0xCDC508")]
	private void MeleeRestriction(PlaneBehavior planeBehavior)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xCDCC74", Offset = "0xCDCC74", VA = "0xCDCC74")]
	private BeatMaker.Beat GetCurrentWeapon()
	{
		return default(BeatMaker.Beat);
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xCDC388", Offset = "0xCDC388", VA = "0xCDC388")]
	private bool GetCurentRunState()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xCDCE80", Offset = "0xCDCE80", VA = "0xCDCE80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xCDCF9C", Offset = "0xCDCF9C", VA = "0xCDCF9C")]
	public Restrictions()
	{
	}
}
[Token(Token = "0x200021D")]
public class RestrictionsMelee : MonoBehaviour, IRestrictions
{
	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xCDCFA4", Offset = "0xCDCFA4", VA = "0xCDCFA4", Slot = "4")]
	public void CheckRestrictions(Transform point)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xCDCFFC", Offset = "0xCDCFFC", VA = "0xCDCFFC")]
	public RestrictionsMelee()
	{
	}
}
[Token(Token = "0x200021E")]
public class AirPlaneParameters : MonoBehaviour, IParameters
{
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField attackDurationField;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField flyDistanceField;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float attackDuration;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float flyDistance;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool changeParam;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xCDD004", Offset = "0xCDD004", VA = "0xCDD004")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xCDD10C", Offset = "0xCDD10C", VA = "0xCDD10C")]
	private void AttackDurationInput(string str)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xCDD1FC", Offset = "0xCDD1FC", VA = "0xCDD1FC")]
	private void FlyDistanceInput(string str)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xCDD2E4", Offset = "0xCDD2E4", VA = "0xCDD2E4", Slot = "4")]
	public bool ChangeParam()
	{
		return default(bool);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xCDD2EC", Offset = "0xCDD2EC", VA = "0xCDD2EC", Slot = "5")]
	public void SetParam()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xCDD34C", Offset = "0xCDD34C", VA = "0xCDD34C")]
	public AirPlaneParameters()
	{
	}
}
[Token(Token = "0x200021F")]
public class BossVissibleMark : MonoBehaviour
{
	[Token(Token = "0x2000220")]
	[CompilerGenerated]
	private sealed class <CoroutineStart>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossVissibleMark <>4__this;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0xCDDD00", Offset = "0xCDDD00", VA = "0xCDDD00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xCDDD48", Offset = "0xCDDD48", VA = "0xCDDD48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xCDD5A8", Offset = "0xCDD5A8", VA = "0xCDD5A8")]
		[DebuggerHidden]
		public <CoroutineStart>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xCDDB28", Offset = "0xCDDB28", VA = "0xCDDB28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xCDDB2C", Offset = "0xCDDB2C", VA = "0xCDDB2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xCDDD08", Offset = "0xCDDD08", VA = "0xCDDD08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color startColor;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color startTextColor;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnChangeToggle;

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xCDD354", Offset = "0xCDD354", VA = "0xCDD354")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xCDD534", Offset = "0xCDD534", VA = "0xCDD534")]
	[IteratorStateMachine(typeof(<CoroutineStart>d__6))]
	private IEnumerator CoroutineStart()
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xCDD5D0", Offset = "0xCDD5D0", VA = "0xCDD5D0")]
	private void CheckToggle()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xCDD890", Offset = "0xCDD890", VA = "0xCDD890")]
	public void VisibleBossMark()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xCDD648", Offset = "0xCDD648", VA = "0xCDD648")]
	private void HideBossMark()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xCDD76C", Offset = "0xCDD76C", VA = "0xCDD76C")]
	private void SeeBossMark()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xCDDA24", Offset = "0xCDDA24", VA = "0xCDDA24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xCDDB20", Offset = "0xCDDB20", VA = "0xCDDB20")]
	public BossVissibleMark()
	{
	}
}
[Token(Token = "0x2000221")]
public class CarParameters : Parameters, IParameters
{
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField driverTimeField;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField distanceField;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float driverTime;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool changeParam;

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xCDDD50", Offset = "0xCDDD50", VA = "0xCDDD50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xCDDE58", Offset = "0xCDDE58", VA = "0xCDDE58", Slot = "4")]
	public bool ChangeParam()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xCDDE60", Offset = "0xCDDE60", VA = "0xCDDE60", Slot = "5")]
	public void SetParam()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xCDDEC0", Offset = "0xCDDEC0", VA = "0xCDDEC0")]
	private void DriverTimeInput(string str)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xCDDFC0", Offset = "0xCDDFC0", VA = "0xCDDFC0")]
	private void DistanceInput(string str)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xCDE0C0", Offset = "0xCDE0C0", VA = "0xCDE0C0")]
	public CarParameters()
	{
	}
}
[Token(Token = "0x2000222")]
public class CubeHeightForEnv : MonoBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 screenPoint;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startPositionY;

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xCDE0D0", Offset = "0xCDE0D0", VA = "0xCDE0D0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xCDE258", Offset = "0xCDE258", VA = "0xCDE258")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xCDE510", Offset = "0xCDE510", VA = "0xCDE510")]
	public CubeHeightForEnv()
	{
	}
}
[Token(Token = "0x2000223")]
public class DragDropScrollMenu : MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform content;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Objects")]
	public GameObject prefab;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] enemySprites;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] blockSprites;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] vehicleSprites;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] environmentSprites;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Toggle;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Toggles;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject[] instPans;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ENV currentEnv;

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xCDE518", Offset = "0xCDE518", VA = "0xCDE518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xCDE6A8", Offset = "0xCDE6A8", VA = "0xCDE6A8")]
	private void Pause()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xCDE760", Offset = "0xCDE760", VA = "0xCDE760")]
	private void Play()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xCDE810", Offset = "0xCDE810", VA = "0xCDE810")]
	public void CreateContent(ENV env, int Lenght, bool run, WEAPON weapon)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xCDF2B4", Offset = "0xCDF2B4", VA = "0xCDF2B4")]
	private string CutString(string name)
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xCDF320", Offset = "0xCDF320", VA = "0xCDF320")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xCDF4B0", Offset = "0xCDF4B0", VA = "0xCDF4B0")]
	public DragDropScrollMenu()
	{
	}
}
[Token(Token = "0x2000224")]
public class DragObject : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ENV env;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Count;

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xCDF4B8", Offset = "0xCDF4B8", VA = "0xCDF4B8", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xCDF868", Offset = "0xCDF868", VA = "0xCDF868")]
	public DragObject()
	{
	}
}
[Token(Token = "0x2000225")]
public class PlacingObject : MonoBehaviour
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlacingObject _instance;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI infoText;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] enemyMesh;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] blockMesh;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] vehicleMesh;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject flyingBuilding;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Obstacle.Type type;

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xCDF870", Offset = "0xCDF870", VA = "0xCDF870")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xCDF8C8", Offset = "0xCDF8C8", VA = "0xCDF8C8")]
	public Transform CreateMeshUI(Obstacle.Type inputType)
	{
		return null;
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xCDF510", Offset = "0xCDF510", VA = "0xCDF510")]
	public void StartPlacing(ENV env, int id)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xCDFA10", Offset = "0xCDFA10", VA = "0xCDFA10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xCDFE9C", Offset = "0xCDFE9C", VA = "0xCDFE9C")]
	public PlacingObject()
	{
	}
}
[Token(Token = "0x2000226")]
public enum ENV
{
	[Token(Token = "0x4000939")]
	ENEMY,
	[Token(Token = "0x400093A")]
	BLOCK,
	[Token(Token = "0x400093B")]
	VEHICLE,
	[Token(Token = "0x400093C")]
	ENVIRONMENT
}
[Token(Token = "0x2000227")]
public enum WEAPON
{
	[Token(Token = "0x400093E")]
	Sword,
	[Token(Token = "0x400093F")]
	Gun,
	[Token(Token = "0x4000940")]
	Knuckles,
	[Token(Token = "0x4000941")]
	None
}
[Token(Token = "0x2000228")]
public class PressedButtons : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DragDropScrollMenu dragDropScrollMenu;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button enemyButton;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button blockButton;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button vehicleButton;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button environmentButton;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playerRun;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool playerStay;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle sword;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle gun;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle knuckles;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int Lenght;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private ENV currentEnv;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WEAPON currentWeapon;

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xCDFEA4", Offset = "0xCDFEA4", VA = "0xCDFEA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xCDFFC0", Offset = "0xCDFFC0", VA = "0xCDFFC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xCE0158", Offset = "0xCE0158", VA = "0xCE0158")]
	public void ButtonCLick(ENV env)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xCE0358", Offset = "0xCE0358", VA = "0xCE0358")]
	public void RunPlayerCheck(bool state)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xCE036C", Offset = "0xCE036C", VA = "0xCE036C")]
	public void OnSword(bool state)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xCE03C4", Offset = "0xCE03C4", VA = "0xCE03C4")]
	public void OnGun(bool state)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xCE0420", Offset = "0xCE0420", VA = "0xCE0420")]
	public void OnKnuckles(bool state)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xCE047C", Offset = "0xCE047C", VA = "0xCE047C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xCE0598", Offset = "0xCE0598", VA = "0xCE0598")]
	public PressedButtons()
	{
	}
}
[Token(Token = "0x2000229")]
public class SnapBeatsDropBox : MonoBehaviour
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SnapBeatsDropBox _instance;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Dropdown dropDown;

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xCE05C8", Offset = "0xCE05C8", VA = "0xCE05C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xCE0620", Offset = "0xCE0620", VA = "0xCE0620")]
	private void Start()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xCE0ED8", Offset = "0xCE0ED8", VA = "0xCE0ED8")]
	public void ChangeValue(int value)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xCE0F54", Offset = "0xCE0F54", VA = "0xCE0F54")]
	public SnapBeatsDropBox()
	{
	}
}
[Token(Token = "0x200022A")]
public class FastTestButton : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MenuLevelEditor MenuLevelEditor;

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xCE0F5C", Offset = "0xCE0F5C", VA = "0xCE0F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xCE1024", Offset = "0xCE1024", VA = "0xCE1024")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xCE1068", Offset = "0xCE1068", VA = "0xCE1068")]
	private void Update()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xCE106C", Offset = "0xCE106C", VA = "0xCE106C")]
	public FastTestButton()
	{
	}
}
[Token(Token = "0x200022B")]
public class HighLightDepence : MonoBehaviour
{
	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HighlightEffect highlightEffect;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HighlightEffect hightlightEffect_2;

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xCE1074", Offset = "0xCE1074", VA = "0xCE1074")]
	public HighLightDepence()
	{
	}
}
[Token(Token = "0x200022C")]
public class JumpParameters : Parameters, IParameters
{
	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle runToggle;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CubeHeightBehavior maxHeight;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CubeHeightBehavior endHeight;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 maxHeightPosition;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 endHeightPosition;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isRun;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool isJumpInPlace;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool changeParam;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlaneBehaviorJump planeBehavior;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xCE107C", Offset = "0xCE107C", VA = "0xCE107C")]
	private void Start()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xCE1124", Offset = "0xCE1124", VA = "0xCE1124")]
	public void SetHeight(Transform point)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xCE1814", Offset = "0xCE1814", VA = "0xCE1814")]
	public void SetNewPosition()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xCE1CA0", Offset = "0xCE1CA0", VA = "0xCE1CA0")]
	private void IsRun(bool ptr)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xCE1CAC", Offset = "0xCE1CAC", VA = "0xCE1CAC")]
	private void IsJumpInPlace(bool ptr)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xCE1AE4", Offset = "0xCE1AE4", VA = "0xCE1AE4")]
	public void SetBreakDistance()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xCE1CB8", Offset = "0xCE1CB8", VA = "0xCE1CB8", Slot = "4")]
	public bool ChangeParam()
	{
		return default(bool);
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xCE1CC0", Offset = "0xCE1CC0", VA = "0xCE1CC0", Slot = "5")]
	public void SetParam()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xCE1CC4", Offset = "0xCE1CC4", VA = "0xCE1CC4")]
	public JumpParameters()
	{
	}
}
[Token(Token = "0x200022D")]
public class LevelChooseButton : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	[CompilerGenerated]
	private sealed class <CoroutineStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelChooseButton <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0xCE26E8", Offset = "0xCE26E8", VA = "0xCE26E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0xCE2730", Offset = "0xCE2730", VA = "0xCE2730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xCE1EF8", Offset = "0xCE1EF8", VA = "0xCE1EF8")]
		[DebuggerHidden]
		public <CoroutineStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xCE2610", Offset = "0xCE2610", VA = "0xCE2610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xCE2614", Offset = "0xCE2614", VA = "0xCE2614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xCE26F0", Offset = "0xCE26F0", VA = "0xCE26F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI textButton;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnChooseLevel;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int level;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xCE1CCC", Offset = "0xCE1CCC", VA = "0xCE1CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xCE1E84", Offset = "0xCE1E84", VA = "0xCE1E84")]
	[IteratorStateMachine(typeof(<CoroutineStart>d__4))]
	private IEnumerator CoroutineStart()
	{
		return null;
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xCE1F20", Offset = "0xCE1F20", VA = "0xCE1F20")]
	private void CheckVisible()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xCE1F28", Offset = "0xCE1F28", VA = "0xCE1F28")]
	private void ChooseLevel(int level)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xCE23DC", Offset = "0xCE23DC", VA = "0xCE23DC")]
	public void OnClickButton()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xCE2504", Offset = "0xCE2504", VA = "0xCE2504")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xCE2600", Offset = "0xCE2600", VA = "0xCE2600")]
	public LevelChooseButton()
	{
	}
}
[Token(Token = "0x200022F")]
public class LevelPanel : MonoBehaviour
{
	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle easyToggle;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle mediumToggle;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle hardToggle;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xCE2738", Offset = "0xCE2738", VA = "0xCE2738")]
	public LevelPanel()
	{
	}
}
[Token(Token = "0x2000230")]
public class MainMenuData : MonoBehaviour
{
	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainMenuData _instance;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool openFile;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bpm;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float preTime;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int division;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string filePath;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float startTime;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool toggle;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string projectName;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DifficultyLevel difficulty;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool isMainGame;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip downloadedClip;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string trackPath;

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xCE2740", Offset = "0xCE2740", VA = "0xCE2740")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xCE283C", Offset = "0xCE283C", VA = "0xCE283C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xCE2938", Offset = "0xCE2938", VA = "0xCE2938")]
	public void SetData(CustomSongInfo _info)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xCE2A08", Offset = "0xCE2A08", VA = "0xCE2A08")]
	public MainMenuData()
	{
	}
}
[Token(Token = "0x2000231")]
public class MainMenuLevelEditor : MonoBehaviour
{
	[Token(Token = "0x2000232")]
	[CompilerGenerated]
	private sealed class <Download>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MainMenuLevelEditor <>4__this;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0xCE4CE0", Offset = "0xCE4CE0", VA = "0xCE4CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0xCE4D28", Offset = "0xCE4D28", VA = "0xCE4D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xCE2E60", Offset = "0xCE2E60", VA = "0xCE2E60")]
		[DebuggerHidden]
		public <Download>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xCE469C", Offset = "0xCE469C", VA = "0xCE469C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xCE46B8", Offset = "0xCE46B8", VA = "0xCE46B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xCE4C30", Offset = "0xCE4C30", VA = "0xCE4C30")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xCE4CE8", Offset = "0xCE4CE8", VA = "0xCE4CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000233")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuLevelEditor <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0xCE4E38", Offset = "0xCE4E38", VA = "0xCE4E38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0xCE4E80", Offset = "0xCE4E80", VA = "0xCE4E80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xCE2EFC", Offset = "0xCE2EFC", VA = "0xCE2EFC")]
		[DebuggerHidden]
		public <FadeOut>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xCE4D30", Offset = "0xCE4D30", VA = "0xCE4D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xCE4D34", Offset = "0xCE4D34", VA = "0xCE4D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xCE4E40", Offset = "0xCE4E40", VA = "0xCE4E40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000234")]
	[CompilerGenerated]
	private sealed class <ShowInfoText>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuLevelEditor <>4__this;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0xCE4F84", Offset = "0xCE4F84", VA = "0xCE4F84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0xCE4FCC", Offset = "0xCE4FCC", VA = "0xCE4FCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xCE3868", Offset = "0xCE3868", VA = "0xCE3868")]
		[DebuggerHidden]
		public <ShowInfoText>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xCE4E88", Offset = "0xCE4E88", VA = "0xCE4E88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xCE4E8C", Offset = "0xCE4E8C", VA = "0xCE4E8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xCE4F8C", Offset = "0xCE4F8C", VA = "0xCE4F8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BPMGroup;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject preTimeGroup;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject divisionGroup;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject existProjectPanel;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ScrollRect scrollView;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button loadTrackButton;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button startButton;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_InputField bpmField;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_InputField preTimeField;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TMP_InputField divisionField;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI downloadTrackText;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<TextMeshProUGUI> names;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color startColorText;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EventSystem system;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xCE2A70", Offset = "0xCE2A70", VA = "0xCE2A70")]
	public void OpenFile()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xCE2DD0", Offset = "0xCE2DD0", VA = "0xCE2DD0")]
	[IteratorStateMachine(typeof(<Download>d__14))]
	private IEnumerator Download(string url)
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xCE2E88", Offset = "0xCE2E88", VA = "0xCE2E88")]
	[IteratorStateMachine(typeof(<FadeOut>d__15))]
	private IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xCE2F24", Offset = "0xCE2F24", VA = "0xCE2F24", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xCE3450", Offset = "0xCE3450", VA = "0xCE3450")]
	public void Update()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xCE36F8", Offset = "0xCE36F8", VA = "0xCE36F8", Slot = "5")]
	public virtual void StartButton()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xCE37D8", Offset = "0xCE37D8", VA = "0xCE37D8")]
	[IteratorStateMachine(typeof(<ShowInfoText>d__21))]
	private IEnumerator ShowInfoText(string text)
	{
		return null;
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xCE3890", Offset = "0xCE3890", VA = "0xCE3890")]
	public void SetBPMData(string value)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xCE39E8", Offset = "0xCE39E8", VA = "0xCE39E8")]
	public void SetPreTimeData(string value)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xCE3B40", Offset = "0xCE3B40", VA = "0xCE3B40")]
	public void SetDivisionData(string value)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xCE2FCC", Offset = "0xCE2FCC", VA = "0xCE2FCC")]
	private void CreateExistPanels()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xCE3CA0", Offset = "0xCE3CA0", VA = "0xCE3CA0")]
	private void OpenButton(string name)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xCE4610", Offset = "0xCE4610", VA = "0xCE4610")]
	private void DeleteButton(string name, Transform panel)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xCE4614", Offset = "0xCE4614", VA = "0xCE4614")]
	public MainMenuLevelEditor()
	{
	}
}
[Token(Token = "0x2000236")]
public class MainMenuLevelTester : MainMenuLevelEditor
{
	[Token(Token = "0x6000969")]
	[Address(RVA = "0xCE5020", Offset = "0xCE5020", VA = "0xCE5020", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xCE5084", Offset = "0xCE5084", VA = "0xCE5084", Slot = "5")]
	public override void StartButton()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xCE5170", Offset = "0xCE5170", VA = "0xCE5170")]
	public MainMenuLevelTester()
	{
	}
}
[Token(Token = "0x2000237")]
public class MovePasteCollider : MonoBehaviour
{
	[Token(Token = "0x2000238")]
	[CompilerGenerated]
	private sealed class <ChooseCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovePasteCollider <>4__this;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0xCE57D4", Offset = "0xCE57D4", VA = "0xCE57D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0xCE581C", Offset = "0xCE581C", VA = "0xCE581C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xCE55E4", Offset = "0xCE55E4", VA = "0xCE55E4")]
		[DebuggerHidden]
		public <ChooseCoroutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xCE5614", Offset = "0xCE5614", VA = "0xCE5614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xCE5618", Offset = "0xCE5618", VA = "0xCE5618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xCE57DC", Offset = "0xCE57DC", VA = "0xCE57DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xCE5174", Offset = "0xCE5174", VA = "0xCE5174")]
	private void Update()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xCE5570", Offset = "0xCE5570", VA = "0xCE5570")]
	[IteratorStateMachine(typeof(<ChooseCoroutine>d__1))]
	private IEnumerator ChooseCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xCE560C", Offset = "0xCE560C", VA = "0xCE560C")]
	public MovePasteCollider()
	{
	}
}
[Token(Token = "0x2000239")]
public class Parameters : MonoBehaviour
{
	[Token(Token = "0x6000975")]
	[Address(RVA = "0xCDE0C8", Offset = "0xCDE0C8", VA = "0xCDE0C8")]
	public Parameters()
	{
	}
}
[Token(Token = "0x200023A")]
public class ShowMiniMap : MonoBehaviour
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage image;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject timePanel;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button _button;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isShow;

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xCE5824", Offset = "0xCE5824", VA = "0xCE5824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xCE58F0", Offset = "0xCE58F0", VA = "0xCE58F0")]
	public void ShowRawImage()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xCE5ACC", Offset = "0xCE5ACC", VA = "0xCE5ACC")]
	public ShowMiniMap()
	{
	}
}
[Token(Token = "0x200023B")]
public class SliderEvent : MonoBehaviour, IDragHandler, IEventSystemHandler
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slider slider;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xCE5AD4", Offset = "0xCE5AD4", VA = "0xCE5AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xCE5B68", Offset = "0xCE5B68", VA = "0xCE5B68", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xCE5BDC", Offset = "0xCE5BDC", VA = "0xCE5BDC")]
	public SliderEvent()
	{
	}
}
[Token(Token = "0x200023C")]
public class StartAnimationEnemy : MonoBehaviour
{
	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float speed;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xCE5BE4", Offset = "0xCE5BE4", VA = "0xCE5BE4")]
	public void Start()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xCE5CF4", Offset = "0xCE5CF4", VA = "0xCE5CF4")]
	public StartAnimationEnemy()
	{
	}
}
[Token(Token = "0x200023D")]
public class TimeLineCollision : MonoBehaviour
{
	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip keyMomentClip;

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xCE5D4C", Offset = "0xCE5D4C", VA = "0xCE5D4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xCE5F1C", Offset = "0xCE5F1C", VA = "0xCE5F1C")]
	public TimeLineCollision()
	{
	}
}
[Token(Token = "0x200023E")]
public class ToggleController : MonoBehaviour
{
	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOn;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color onColorBg;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color offColorBg;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image toggleBgImage;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform toggle;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject handle;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform handleTransform;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float handleSize;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float onPosX;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float offPosX;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float handleOffset;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject onIcon;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject offIcon;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float speed;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float t;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool switching;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<bool> OnSwitch;

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xCE5F24", Offset = "0xCE5F24", VA = "0xCE5F24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xCE5FE0", Offset = "0xCE5FE0", VA = "0xCE5FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xCE6170", Offset = "0xCE6170", VA = "0xCE6170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xCE62E4", Offset = "0xCE62E4", VA = "0xCE62E4")]
	public void DoYourStaff()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xCE63E4", Offset = "0xCE63E4", VA = "0xCE63E4")]
	public void Switching()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xCE6184", Offset = "0xCE6184", VA = "0xCE6184")]
	public void Toggle(bool toggleStatus)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xCE65E0", Offset = "0xCE65E0", VA = "0xCE65E0")]
	private Vector3 SmoothMove(GameObject toggleHandle, float startPosX, float endPosX)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xCE63F0", Offset = "0xCE63F0", VA = "0xCE63F0")]
	private Color SmoothColor(Color startCol, Color endCol)
	{
		return default(Color);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xCE64EC", Offset = "0xCE64EC", VA = "0xCE64EC")]
	private CanvasGroup Transparency(GameObject alphaObj, float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xCE6698", Offset = "0xCE6698", VA = "0xCE6698")]
	private void StopSwitching()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xCE6714", Offset = "0xCE6714", VA = "0xCE6714")]
	public ToggleController()
	{
	}
}
[Token(Token = "0x200023F")]
public class TranslateObjectMouse : MonoBehaviour
{
	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 screenPoint;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xCE671C", Offset = "0xCE671C", VA = "0xCE671C")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xCE68A4", Offset = "0xCE68A4", VA = "0xCE68A4")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xCE69E8", Offset = "0xCE69E8", VA = "0xCE69E8")]
	public TranslateObjectMouse()
	{
	}
}
[Token(Token = "0x2000240")]
public interface IMemento
{
	[Token(Token = "0x600098F")]
	int GetInstanceId();

	[Token(Token = "0x6000990")]
	Vector3 GetPosition();

	[Token(Token = "0x6000991")]
	Quaternion GetRotation();

	[Token(Token = "0x6000992")]
	Obstacle.Type GetObstacleType();

	[Token(Token = "0x6000993")]
	float GetBreakDistance();

	[Token(Token = "0x6000994")]
	float GetCryptography();

	[Token(Token = "0x6000995")]
	bool IsDelete();

	[Token(Token = "0x6000996")]
	BeatMaker.Beat GetBeat();

	[Token(Token = "0x6000997")]
	Vector3 GetPositionAtTime();

	[Token(Token = "0x6000998")]
	Vector3 GetEndHeight();

	[Token(Token = "0x6000999")]
	Vector3 GetMaxHeight();
}
[Token(Token = "0x2000241")]
internal class ConcreteMemento : IMemento
{
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int id;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 localPosition;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion localRotation;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 positionAtTime;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isDelete;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BeatMaker.Beat beat;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Obstacle.Type type;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float time;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float breakDistance;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float cryptographhy;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject pointObj;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 endHeightPos;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 maxHeightPos;

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xCE69F0", Offset = "0xCE69F0", VA = "0xCE69F0")]
	public ConcreteMemento(PlaneBehavior point, bool isDelete = false)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xCE6D54", Offset = "0xCE6D54", VA = "0xCE6D54", Slot = "4")]
	public int GetInstanceId()
	{
		return default(int);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xCE6D5C", Offset = "0xCE6D5C", VA = "0xCE6D5C", Slot = "5")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xCE6D68", Offset = "0xCE6D68", VA = "0xCE6D68", Slot = "12")]
	public Vector3 GetPositionAtTime()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xCE6D74", Offset = "0xCE6D74", VA = "0xCE6D74", Slot = "7")]
	public Obstacle.Type GetObstacleType()
	{
		return default(Obstacle.Type);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xCE6D7C", Offset = "0xCE6D7C", VA = "0xCE6D7C", Slot = "6")]
	public Quaternion GetRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xCE6D88", Offset = "0xCE6D88", VA = "0xCE6D88", Slot = "8")]
	public float GetBreakDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xCE6D90", Offset = "0xCE6D90", VA = "0xCE6D90", Slot = "9")]
	public float GetCryptography()
	{
		return default(float);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xCE6D98", Offset = "0xCE6D98", VA = "0xCE6D98", Slot = "10")]
	public bool IsDelete()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xCE6DA0", Offset = "0xCE6DA0", VA = "0xCE6DA0", Slot = "11")]
	public BeatMaker.Beat GetBeat()
	{
		return default(BeatMaker.Beat);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xCE6DB4", Offset = "0xCE6DB4", VA = "0xCE6DB4", Slot = "13")]
	public Vector3 GetEndHeight()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xCE6DC0", Offset = "0xCE6DC0", VA = "0xCE6DC0", Slot = "14")]
	public Vector3 GetMaxHeight()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000242")]
public class InputKeys : MonoBehaviour
{
	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisableAllInput;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnMenuOpen;

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xCE6DCC", Offset = "0xCE6DCC", VA = "0xCE6DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xCE6DD0", Offset = "0xCE6DD0", VA = "0xCE6DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xCE6E9C", Offset = "0xCE6E9C", VA = "0xCE6E9C")]
	public InputKeys()
	{
	}
}
[Token(Token = "0x2000243")]
public interface IParameters
{
	[Token(Token = "0x60009A9")]
	bool ChangeParam();

	[Token(Token = "0x60009AA")]
	void SetParam();
}
[Token(Token = "0x2000244")]
public static class SaveDirectory
{
	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string Path;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string CustomSongPath;
}
[Token(Token = "0x2000245")]
public static class JsonHelper
{
	[Serializable]
	[Token(Token = "0x2000246")]
	private class Wrapper<T>
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] Items;

		[Token(Token = "0x60009B2")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x60009AC")]
	public static T[] FromJson<T>(string json)
	{
		return null;
	}

	[Token(Token = "0x60009AD")]
	public static string ToJson<T>(T[] array)
	{
		return null;
	}

	[Token(Token = "0x60009AE")]
	public static string ToJson<T>(T[] array, bool prettyPrint)
	{
		return null;
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xCE6F68", Offset = "0xCE6F68", VA = "0xCE6F68")]
	public static bool WriteJsonToFile(string json, string fileName)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xCE4110", Offset = "0xCE4110", VA = "0xCE4110")]
	public static string ReadJsonFromFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xCE7284", Offset = "0xCE7284", VA = "0xCE7284")]
	public static string ReadJsonFromFile(string fileName, string path)
	{
		return null;
	}
}
[Token(Token = "0x2000247")]
public class Metronome : MonoBehaviour
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audio;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clip;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool start;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canPlay;

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xCE7768", Offset = "0xCE7768", VA = "0xCE7768")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xCE77C0", Offset = "0xCE77C0", VA = "0xCE77C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xCE7968", Offset = "0xCE7968", VA = "0xCE7968")]
	public void OnClick(bool state)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xCE7974", Offset = "0xCE7974", VA = "0xCE7974")]
	public Metronome()
	{
	}
}
[Token(Token = "0x2000248")]
public class Metronome3 : MonoBehaviour
{
	[Token(Token = "0x2000249")]
	[CompilerGenerated]
	private sealed class <MetronomProcess>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Metronome3 <>4__this;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double <dspTime>5__2;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double <timePerTick>5__3;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0xCE80A8", Offset = "0xCE80A8", VA = "0xCE80A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0xCE80F0", Offset = "0xCE80F0", VA = "0xCE80F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xCE7C90", Offset = "0xCE7C90", VA = "0xCE7C90")]
		[DebuggerHidden]
		public <MetronomProcess>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xCE7E60", Offset = "0xCE7E60", VA = "0xCE7E60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xCE7E64", Offset = "0xCE7E64", VA = "0xCE7E64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xCE80B0", Offset = "0xCE80B0", VA = "0xCE80B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float bpm;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip tick;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource metronome;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool running;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double nextTick;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ticked;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool metronomeSetting;

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xCE7984", Offset = "0xCE7984", VA = "0xCE7984")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xCE7B24", Offset = "0xCE7B24", VA = "0xCE7B24")]
	private void MetronomeActivator()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xCE7C6C", Offset = "0xCE7C6C", VA = "0xCE7C6C")]
	private void MetronomeDeactivator()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xCE7BF8", Offset = "0xCE7BF8", VA = "0xCE7BF8")]
	[IteratorStateMachine(typeof(<MetronomProcess>d__10))]
	private IEnumerator MetronomProcess()
	{
		return null;
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xCE7CB8", Offset = "0xCE7CB8", VA = "0xCE7CB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xCE7E58", Offset = "0xCE7E58", VA = "0xCE7E58")]
	public Metronome3()
	{
	}
}
[Token(Token = "0x200024A")]
public struct Levels
{
	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isBoss;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public bool easy;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public bool normal;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public bool hard;
}
[Token(Token = "0x200024B")]
public static class ParseBeatData
{
	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xCE80F8", Offset = "0xCE80F8", VA = "0xCE80F8")]
	public static List<BeatMaker.Beat> ParseAllForLevelEditor(string json, Transform root)
	{
		return null;
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xCE83C0", Offset = "0xCE83C0", VA = "0xCE83C0")]
	public static void ParseAllEnvironment(string json)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xCE845C", Offset = "0xCE845C", VA = "0xCE845C")]
	public static void ParseAllBookmarksData(string json)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xCE84E4", Offset = "0xCE84E4", VA = "0xCE84E4")]
	public static List<BeatMaker.Beat> ParseAll(string json, Transform root, bool useBossBots = false, int level = 2)
	{
		return null;
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xCE82AC", Offset = "0xCE82AC", VA = "0xCE82AC")]
	public static BeatMaker.Beat Parse(SaveButton.BeatOut beat, Transform root)
	{
		return default(BeatMaker.Beat);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xCE8B04", Offset = "0xCE8B04", VA = "0xCE8B04")]
	public static List<float> ParseXPositionAtTime(string json)
	{
		return null;
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xCE8C4C", Offset = "0xCE8C4C", VA = "0xCE8C4C")]
	public static List<Levels> ParseLevels(string json)
	{
		return null;
	}
}
[Token(Token = "0x200024C")]
public class TimeSlider : MonoBehaviour
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool trigger;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro text;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TimeSpan interval;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xCE8DAC", Offset = "0xCE8DAC", VA = "0xCE8DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xCE8EE4", Offset = "0xCE8EE4", VA = "0xCE8EE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xCE8EF0", Offset = "0xCE8EF0", VA = "0xCE8EF0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xCE8EF8", Offset = "0xCE8EF8", VA = "0xCE8EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xCE90AC", Offset = "0xCE90AC", VA = "0xCE90AC")]
	public TimeSlider()
	{
	}
}
[Token(Token = "0x200024D")]
public class VisualSidesChanger : MonoBehaviour
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftVisual;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightVisual;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HighLightDepence hightLight;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HighlightEffect startEffect;

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xCE90BC", Offset = "0xCE90BC", VA = "0xCE90BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xCDFDDC", Offset = "0xCDFDDC", VA = "0xCDFDDC")]
	public void Change()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xCE90DC", Offset = "0xCE90DC", VA = "0xCE90DC")]
	public void Hide()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xCE9114", Offset = "0xCE9114", VA = "0xCE9114")]
	public VisualSidesChanger()
	{
	}
}
[Token(Token = "0x200024E")]
public class WaveformDrawer : MonoBehaviour
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rend;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BeatMapCreator beatMapCreator;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int n;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xCE911C", Offset = "0xCE911C", VA = "0xCE911C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xCE9204", Offset = "0xCE9204", VA = "0xCE9204")]
	private void StartCounting(int beatsLength, float bps)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xCE937C", Offset = "0xCE937C", VA = "0xCE937C")]
	public Texture2D Paint(AudioClip audio, int width, int height, float bps, float waveformLength, Color waveformColor, Color beatsColor)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xCE9890", Offset = "0xCE9890", VA = "0xCE9890")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xCE9978", Offset = "0xCE9978", VA = "0xCE9978")]
	public WaveformDrawer()
	{
	}
}
[Token(Token = "0x200024F")]
public class LocalizationManager : MonoBehaviour
{
	[Token(Token = "0x2000250")]
	public enum Locale
	{
		[Token(Token = "0x40009E3")]
		EN,
		[Token(Token = "0x40009E4")]
		ZH_HANS,
		[Token(Token = "0x40009E5")]
		KO,
		[Token(Token = "0x40009E6")]
		JA,
		[Token(Token = "0x40009E7")]
		DE,
		[Token(Token = "0x40009E8")]
		FR,
		[Token(Token = "0x40009E9")]
		ES,
		[Token(Token = "0x40009EA")]
		IT,
		[Token(Token = "0x40009EB")]
		RU
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xCE9988", Offset = "0xCE9988", VA = "0xCE9988")]
	public static AudioClip GetAudioClip(string key)
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xCE9A80", Offset = "0xCE9A80", VA = "0xCE9A80")]
	public static AudioClip GetAudioClip(AudioClip defaultClip)
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xCE9B08", Offset = "0xCE9B08", VA = "0xCE9B08")]
	public static string GetText(string key)
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xCE9C64", Offset = "0xCE9C64", VA = "0xCE9C64")]
	public static Material GetMaterial(string key)
	{
		return null;
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xCE9D5C", Offset = "0xCE9D5C", VA = "0xCE9D5C")]
	public static void SetLocale(Locale locale)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xCE9E60", Offset = "0xCE9E60", VA = "0xCE9E60")]
	public LocalizationManager()
	{
	}
}
[Token(Token = "0x2000251")]
public class LocalizationMaterialChanger : MonoBehaviour
{
	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer rend;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string key;

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xCE9E68", Offset = "0xCE9E68", VA = "0xCE9E68")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xCE9EE8", Offset = "0xCE9EE8", VA = "0xCE9EE8")]
	public void Change(Locale locale)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xCE9F10", Offset = "0xCE9F10", VA = "0xCE9F10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xCE9F90", Offset = "0xCE9F90", VA = "0xCE9F90")]
	public LocalizationMaterialChanger()
	{
	}
}
[Token(Token = "0x2000252")]
public class Logging : MonoBehaviour
{
	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gameplayLogger;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool analyticLogger;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Logger GameplayDebug;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Logger AnalyticDebug;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xCE9F98", Offset = "0xCE9F98", VA = "0xCE9F98")]
	public void Awake()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xCEA014", Offset = "0xCEA014", VA = "0xCEA014")]
	public Logging()
	{
	}
}
[Token(Token = "0x2000253")]
public class MeleeSets : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000254")]
	public struct Parametrs
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Obstacle.Type type;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float attackTime;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float moveSpeed;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float attackDistance;
	}

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyMelee main;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Parametrs[] parametrs;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceFactor;

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xCEA260", Offset = "0xCEA260", VA = "0xCEA260")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xCEA2B8", Offset = "0xCEA2B8", VA = "0xCEA2B8")]
	public void SetDistanceFactor(float factor)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xCEA2C0", Offset = "0xCEA2C0", VA = "0xCEA2C0")]
	public MeleeSets()
	{
	}
}
[Token(Token = "0x2000255")]
public class MeleeWeapon : MonoBehaviour
{
	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyMelee main;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject weapon;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandPoint;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandPoint;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform point;

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xCEA2D0", Offset = "0xCEA2D0", VA = "0xCEA2D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xCEA344", Offset = "0xCEA344", VA = "0xCEA344")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xCEA420", Offset = "0xCEA420", VA = "0xCEA420")]
	public MeleeWeapon()
	{
	}
}
[Token(Token = "0x2000256")]
[CreateAssetMenu(fileName = "BotAsset", menuName = "Against/Enemy/BotAsset")]
public class BotAsset : ObstacleAsset
{
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeOffset;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BotMoveData move;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BotJumpData jump;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xCEA428", Offset = "0xCEA428", VA = "0xCEA428", Slot = "5")]
	public override GameObject Create(Obstacle.Type type, Transform point, float breakDistance, float cryptography, float spawnTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xCEAA9C", Offset = "0xCEAA9C", VA = "0xCEAA9C", Slot = "4")]
	public override void Create(Direction dir)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xCEAC28", Offset = "0xCEAC28", VA = "0xCEAC28", Slot = "8")]
	public override float GetBeatTime()
	{
		return default(float);
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xCEAA1C", Offset = "0xCEAA1C", VA = "0xCEAA1C")]
	public float GetTimeAllDist()
	{
		return default(float);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xCEACF4", Offset = "0xCEACF4", VA = "0xCEACF4", Slot = "6")]
	public override PosRot SpawnPoint(Direction side)
	{
		return default(PosRot);
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xCEAF64", Offset = "0xCEAF64", VA = "0xCEAF64", Slot = "7")]
	public override PosRot SpawnPoint(Direction side, Transform spawnPoint)
	{
		return default(PosRot);
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xCEB1E4", Offset = "0xCEB1E4", VA = "0xCEB1E4", Slot = "9")]
	public virtual Vector3[] MovePoints(Direction dir, Obstacle.Type type)
	{
		return null;
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xCEB4C0", Offset = "0xCEB4C0", VA = "0xCEB4C0", Slot = "10")]
	public virtual Vector3[] MovePoints4(Direction dir, Obstacle.Type type)
	{
		return null;
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xCEB83C", Offset = "0xCEB83C", VA = "0xCEB83C", Slot = "11")]
	public virtual Vector3[] MovePoints4(Transform spawnPoint, Direction dir, Obstacle.Type type)
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xCEA87C", Offset = "0xCEA87C", VA = "0xCEA87C")]
	public float Distance(Vector3[] points)
	{
		return default(float);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xCEA988", Offset = "0xCEA988", VA = "0xCEA988")]
	public void RevertMovePoints(Vector3[] points)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xCEBBC0", Offset = "0xCEBBC0", VA = "0xCEBBC0")]
	public BotAsset()
	{
	}
}
[Token(Token = "0x2000257")]
[CreateAssetMenu(fileName = "BotStayAsset", menuName = "Against/Enemy/BotStayAsset")]
public class BotStayAsset : BotAsset
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Enemy enemy;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xCEBBD0", Offset = "0xCEBBD0", VA = "0xCEBBD0", Slot = "5")]
	public override GameObject Create(Obstacle.Type type, Transform point, float breakDistance, float cryptography, float spawnTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xCEBE64", Offset = "0xCEBE64", VA = "0xCEBE64", Slot = "8")]
	public override float GetBeatTime()
	{
		return default(float);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xCEBEE4", Offset = "0xCEBEE4", VA = "0xCEBEE4")]
	public BotStayAsset()
	{
	}
}
[Token(Token = "0x2000258")]
[CreateAssetMenu(fileName = "BotAsset", menuName = "Against/Enemy/BotAsset")]
public class BoxerAsset : BotAsset
{
	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xCEBEEC", Offset = "0xCEBEEC", VA = "0xCEBEEC", Slot = "5")]
	public override GameObject Create(Obstacle.Type type, Transform point, float breakDistance, float cryptography, float spawnTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xCEC28C", Offset = "0xCEC28C", VA = "0xCEC28C", Slot = "10")]
	public override Vector3[] MovePoints4(Direction dir, Obstacle.Type type)
	{
		return null;
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xCEC608", Offset = "0xCEC608", VA = "0xCEC608", Slot = "11")]
	public override Vector3[] MovePoints4(Transform spawnPoint, Direction dir, Obstacle.Type type)
	{
		return null;
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xCEC98C", Offset = "0xCEC98C", VA = "0xCEC98C")]
	public BoxerAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000259")]
public struct BotMoveData
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x_DiagonalDist;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y_ForwardDist;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z_Line;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float n_Angle;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float n2_Angle;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float velocity;
}
[Serializable]
[Token(Token = "0x200025A")]
public struct BotJumpData
{
	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float jumpDist;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float jumpVelocity;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float jumpHeight;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve jumpCurve;
}
[Serializable]
[Token(Token = "0x200025B")]
public struct BotTimeData
{
	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x_timePortal;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y_timeWait;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z_timeShootFromPlayer;
}
[Token(Token = "0x200025C")]
public abstract class ObstacleAsset : ScriptableObject
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Obstacle.Type[] types;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x17000098")]
	public Obstacle.Type Type
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xCEAC00", Offset = "0xCEAC00", VA = "0xCEAC00")]
		get
		{
			return default(Obstacle.Type);
		}
	}

	[Token(Token = "0x60009FF")]
	public abstract void Create(Direction side);

	[Token(Token = "0x6000A00")]
	public abstract GameObject Create(Obstacle.Type type, Transform point, float breakDistance, float cryptography, float spawnTime = 0f);

	[Token(Token = "0x6000A01")]
	public abstract PosRot SpawnPoint(Direction side);

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xCEC994", Offset = "0xCEC994", VA = "0xCEC994", Slot = "7")]
	public virtual PosRot SpawnPoint(Direction side, Transform spawnPoint)
	{
		return default(PosRot);
	}

	[Token(Token = "0x6000A03")]
	public abstract float GetBeatTime();

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xCEC9CC", Offset = "0xCEC9CC", VA = "0xCEC9CC")]
	public bool CheckType(Obstacle.Type type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xCEBBC8", Offset = "0xCEBBC8", VA = "0xCEBBC8")]
	protected ObstacleAsset()
	{
	}
}
[Token(Token = "0x200025D")]
[CreateAssetMenu(fileName = "ShooterAsset", menuName = "Against/Enemy/ShooterAsset")]
public class ShooterAsset : BotAsset
{
	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BotTimeData timeData;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxDistToPlayer;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xCECA28", Offset = "0xCECA28", VA = "0xCECA28", Slot = "4")]
	public override void Create(Direction dir)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xCECB70", Offset = "0xCECB70", VA = "0xCECB70", Slot = "5")]
	public override GameObject Create(Obstacle.Type type, Transform point, float breakDistance, float cryptography, float spawnTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xCECE18", Offset = "0xCECE18", VA = "0xCECE18", Slot = "8")]
	public override float GetBeatTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xCECE2C", Offset = "0xCECE2C", VA = "0xCECE2C", Slot = "6")]
	public override PosRot SpawnPoint(Direction dir)
	{
		return default(PosRot);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xCED034", Offset = "0xCED034", VA = "0xCED034", Slot = "9")]
	public override Vector3[] MovePoints(Direction dir, Obstacle.Type type)
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xCED224", Offset = "0xCED224", VA = "0xCED224")]
	public ShooterAsset()
	{
	}
}
[Token(Token = "0x200025E")]
[CreateAssetMenu(fileName = "WeaponAsset", menuName = "Against/Obstacle/WeaponAsset")]
public class WeaponAsset : ObstacleAsset
{
	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xCED22C", Offset = "0xCED22C", VA = "0xCED22C", Slot = "8")]
	public override float GetBeatTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xCED234", Offset = "0xCED234", VA = "0xCED234", Slot = "5")]
	public override GameObject Create(Obstacle.Type type, Transform point, float breakDistance, float cryptography, float spawnTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xCED2A4", Offset = "0xCED2A4", VA = "0xCED2A4", Slot = "4")]
	public override void Create(Direction side)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xCED434", Offset = "0xCED434", VA = "0xCED434", Slot = "6")]
	public override PosRot SpawnPoint(Direction side)
	{
		return default(PosRot);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xCED4F8", Offset = "0xCED4F8", VA = "0xCED4F8")]
	public WeaponAsset()
	{
	}
}
[Token(Token = "0x200025F")]
[CreateAssetMenu(fileName = "Bot Combo", menuName = "Against/Enemy/Bot Combo")]
public class BotCombo : ScriptableObject
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeInterval;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BotAsset> Combo;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Direction> Directions;

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xCED500", Offset = "0xCED500", VA = "0xCED500")]
	public BotCombo()
	{
	}
}
[Token(Token = "0x2000260")]
public class SpawnController : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	[CompilerGenerated]
	private sealed class <SpawnComboCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnController <>4__this;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0xCEE358", Offset = "0xCEE358", VA = "0xCEE358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0xCEE3A0", Offset = "0xCEE3A0", VA = "0xCEE3A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xCEDA8C", Offset = "0xCEDA8C", VA = "0xCEDA8C")]
		[DebuggerHidden]
		public <SpawnComboCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xCEDEAC", Offset = "0xCEDEAC", VA = "0xCEDEAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xCEDEB0", Offset = "0xCEDEB0", VA = "0xCEDEB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xCEE360", Offset = "0xCEE360", VA = "0xCEE360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Obstacle.Type type;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BotCombo Combo;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GenericButton bot;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GenericButton left;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GenericButton right;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GenericButton combo;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GenericButton sword;

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xCED508", Offset = "0xCED508", VA = "0xCED508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xCED858", Offset = "0xCED858", VA = "0xCED858")]
	public void SpawnBot(VRButton button)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xCED8FC", Offset = "0xCED8FC", VA = "0xCED8FC")]
	public void BSLeft(VRButton button)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xCED968", Offset = "0xCED968", VA = "0xCED968")]
	public void BSRight(VRButton button)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xCED9D4", Offset = "0xCED9D4", VA = "0xCED9D4")]
	public void SpawnCombo(VRButton button)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xCEDA18", Offset = "0xCEDA18", VA = "0xCEDA18")]
	[IteratorStateMachine(typeof(<SpawnComboCoroutine>d__12))]
	private IEnumerator SpawnComboCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xCEDAB4", Offset = "0xCEDAB4", VA = "0xCEDAB4")]
	public void SpawnWeapon(VRButton button)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xCEDB54", Offset = "0xCEDB54", VA = "0xCEDB54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xCEDEA4", Offset = "0xCEDEA4", VA = "0xCEDEA4")]
	public SpawnController()
	{
	}
}
[Token(Token = "0x2000262")]
[CreateAssetMenu(fileName = "Sworld Lenght", menuName = "Against/Player Borders/SworldLenght")]
public class SworldLenght : ScriptableObject
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lenght;

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xCEE3A8", Offset = "0xCEE3A8", VA = "0xCEE3A8")]
	public SworldLenght()
	{
	}
}
[Token(Token = "0x2000263")]
public class TestDropList : MonoBehaviour
{
	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GenericButton _showHideDropList;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _dropList;

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xCEE3B0", Offset = "0xCEE3B0", VA = "0xCEE3B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xCEE498", Offset = "0xCEE498", VA = "0xCEE498")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xCEE49C", Offset = "0xCEE49C", VA = "0xCEE49C")]
	private void SwitchState(VRButton button)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xCEE4F4", Offset = "0xCEE4F4", VA = "0xCEE4F4")]
	public TestDropList()
	{
	}
}
[Token(Token = "0x2000264")]
public class TestDropListItem : MonoBehaviour
{
	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GenericButton _button;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TestMeleeAssetSetting _dropList;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Obstacle.Type _type;

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xCEE4FC", Offset = "0xCEE4FC", VA = "0xCEE4FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xCEE5E4", Offset = "0xCEE5E4", VA = "0xCEE5E4")]
	private void SetItem(VRButton button)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xCEE9B0", Offset = "0xCEE9B0", VA = "0xCEE9B0")]
	public TestDropListItem()
	{
	}
}
[Token(Token = "0x2000265")]
public class TestMeleeAssetSetting : MonoBehaviour
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TestSpawnController _spawnController;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TestSpawnSide _spawnSide;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GridDraw _gridDraw;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Obstacle.Type _type;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro _typeText;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _timeGO;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _waitGO;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _maxDistanceGO;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _jumpDistGO;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _jumpHeightGO;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _jumpVelocityGO;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro _xText;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro _yText;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro _zText;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro _angleText;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro _velocityText;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro _timeText;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro _waitText;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro _maxDistanceText;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro _jumpDistText;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshPro _jumpHeightText;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshPro _jumpVelocityText;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private UISlider _xParamSlider;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private UISlider _yParamSlider;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private UISlider _zParamSlider;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private UISlider _angleParamSlider;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private UISlider _velocityParamSlider;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private UISlider _timeParamSlider;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private UISlider _waitParamSlider;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private UISlider _maxDistanceParamSlider;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private UISlider _jumpDistParamSlider;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private UISlider _jumpHeightParamSlider;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private UISlider _jumpVelocityParamSlider;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private float _xMaxValue;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private float _yMaxValue;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private float _zMaxValue;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[SerializeField]
	private float _angleMaxValue;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private float _velocityMaxValue;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[SerializeField]
	private float _timeMaxValue;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private float _waitMaxValue;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	private float _maxDistanceMaxValue;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private float _jumpDistMaxValue;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	private float _jumpHeightMaxValue;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private float _jumpVelocityMaxValue;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private List<BotAsset> _meleeAssets;

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xCEE9B8", Offset = "0xCEE9B8", VA = "0xCEE9B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xCEF6FC", Offset = "0xCEF6FC", VA = "0xCEF6FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xCEF0B4", Offset = "0xCEF0B4", VA = "0xCEF0B4")]
	private void UpdateValues()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xCEF700", Offset = "0xCEF700", VA = "0xCEF700")]
	private void UpdateX(UISlider slider)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xCEF818", Offset = "0xCEF818", VA = "0xCEF818")]
	private void UpdateY(UISlider slider)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xCEF91C", Offset = "0xCEF91C", VA = "0xCEF91C")]
	private void UpdateZ(UISlider slider)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xCEFA3C", Offset = "0xCEFA3C", VA = "0xCEFA3C")]
	private void UpdateAngle(UISlider slider)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xCEFB5C", Offset = "0xCEFB5C", VA = "0xCEFB5C")]
	private void UpdateVelocity(UISlider slider)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xCEFC64", Offset = "0xCEFC64", VA = "0xCEFC64")]
	private void UpdateJumpDist(UISlider slider)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xCEFDB4", Offset = "0xCEFDB4", VA = "0xCEFDB4")]
	private void UpdateJumpHeight(UISlider slider)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xCEFF0C", Offset = "0xCEFF0C", VA = "0xCEFF0C")]
	private void UpdateJumpVelocity(UISlider slider)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xCF000C", Offset = "0xCF000C", VA = "0xCF000C")]
	private void UpdateTime(UISlider slider)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xCF0124", Offset = "0xCF0124", VA = "0xCF0124")]
	private void UpdateWait(UISlider slider)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xCF0244", Offset = "0xCF0244", VA = "0xCF0244")]
	private void UpdateMaxDistance(UISlider slider)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xCEE620", Offset = "0xCEE620", VA = "0xCEE620")]
	public void SetType(Obstacle.Type type)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xCF0368", Offset = "0xCF0368", VA = "0xCF0368")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xCF0880", Offset = "0xCF0880", VA = "0xCF0880")]
	public TestMeleeAssetSetting()
	{
	}
}
[Token(Token = "0x2000266")]
public class TestSpawnController : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	[CompilerGenerated]
	private sealed class <SpawnComboCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestSpawnController <>4__this;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xCF0F10", Offset = "0xCF0F10", VA = "0xCF0F10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0xCF0F58", Offset = "0xCF0F58", VA = "0xCF0F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xCF0A0C", Offset = "0xCF0A0C", VA = "0xCF0A0C")]
		[DebuggerHidden]
		public <SpawnComboCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xCF0A5C", Offset = "0xCF0A5C", VA = "0xCF0A5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xCF0A60", Offset = "0xCF0A60", VA = "0xCF0A60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xCF0F18", Offset = "0xCF0F18", VA = "0xCF0F18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BotAsset CurentAsset;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public BotCombo Combo;

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xCF08DC", Offset = "0xCF08DC", VA = "0xCF08DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xCF08E0", Offset = "0xCF08E0", VA = "0xCF08E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xCF08E4", Offset = "0xCF08E4", VA = "0xCF08E4")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xCF0978", Offset = "0xCF0978", VA = "0xCF0978")]
	public void SpawnCombo()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xCF0998", Offset = "0xCF0998", VA = "0xCF0998")]
	[IteratorStateMachine(typeof(<SpawnComboCoroutine>d__6))]
	private IEnumerator SpawnComboCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xCF0A34", Offset = "0xCF0A34", VA = "0xCF0A34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xCF0A54", Offset = "0xCF0A54", VA = "0xCF0A54")]
	public TestSpawnController()
	{
	}
}
[Token(Token = "0x2000268")]
public class TestSpawnSide : MonoBehaviour
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TestSpawnController _spawnController;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro _timeText;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UISlider _timeSlider;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _maxTime;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timeSliderValue;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _upLeft;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _upCenter;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _upRight;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _left;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _center;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _right;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _downLeft;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _downCenter;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _downRight;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GenericButton _upLeftButton;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GenericButton _upCenterButton;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GenericButton _upRightButton;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GenericButton _leftButton;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GenericButton _centerButton;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GenericButton _rightButton;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GenericButton _downLeftButton;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GenericButton _downCenterButton;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GenericButton _downRightButton;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GenericButton _comboButton;

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xCF0F60", Offset = "0xCF0F60", VA = "0xCF0F60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xCF16A0", Offset = "0xCF16A0", VA = "0xCF16A0")]
	private void Change(UISlider obj)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xCF1718", Offset = "0xCF1718", VA = "0xCF1718")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xCF171C", Offset = "0xCF171C", VA = "0xCF171C")]
	private void SpawnCombo(VRButton button)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xCF176C", Offset = "0xCF176C", VA = "0xCF176C")]
	private void UpLeftSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xCF17F4", Offset = "0xCF17F4", VA = "0xCF17F4")]
	private void UpCenterSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xCF1878", Offset = "0xCF1878", VA = "0xCF1878")]
	private void UpRightSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xCF1900", Offset = "0xCF1900", VA = "0xCF1900")]
	private void LeftSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xCF1988", Offset = "0xCF1988", VA = "0xCF1988")]
	private void CenterSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xCF1A10", Offset = "0xCF1A10", VA = "0xCF1A10")]
	private void RightSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xCF1A98", Offset = "0xCF1A98", VA = "0xCF1A98")]
	private void DownLeftSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xCF1B20", Offset = "0xCF1B20", VA = "0xCF1B20")]
	private void DownCenterSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xCF1BA8", Offset = "0xCF1BA8", VA = "0xCF1BA8")]
	private void DownRightSpawn(VRButton button)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xCF1C30", Offset = "0xCF1C30", VA = "0xCF1C30")]
	public void Init(BotAsset asset)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xCF1E80", Offset = "0xCF1E80", VA = "0xCF1E80")]
	public TestSpawnSide()
	{
	}
}
[Token(Token = "0x2000269")]
public class TestSworldLenght : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SworldLenght _lenght;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro _lenghtText;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UISlider _lenghtParamSlider;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _lenghtMaxValue;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _lenghtSlliderValue;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xCF1E88", Offset = "0xCF1E88", VA = "0xCF1E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xCF1FE4", Offset = "0xCF1FE4", VA = "0xCF1FE4")]
	private void UpdateLenght(UISlider obj)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xCF20A8", Offset = "0xCF20A8", VA = "0xCF20A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xCF20AC", Offset = "0xCF20AC", VA = "0xCF20AC")]
	public TestSworldLenght()
	{
	}
}
[Token(Token = "0x200026A")]
public class TestWeaponSpiwner : MonoBehaviour
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GenericButton _spawnWeapon;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Obstacle.Type _weaponType;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xCF20BC", Offset = "0xCF20BC", VA = "0xCF20BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xCF21A4", Offset = "0xCF21A4", VA = "0xCF21A4")]
	private void SpawnSworld(VRButton button)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xCF224C", Offset = "0xCF224C", VA = "0xCF224C")]
	public TestWeaponSpiwner()
	{
	}
}
[Token(Token = "0x200026B")]
public class TestZoneSize : MonoBehaviour
{
	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BordersSettings _bordersSettings;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro _xText;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro _yText;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro _zText;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GridDraw _gridDraw;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UISlider _xParamSlider;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UISlider _yParamSlider;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UISlider _zParamSlider;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _xMaxValue;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float _yMaxValue;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _zMaxValue;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _xSlliderValue;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _ySlliderValue;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _zSlliderValue;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xCF2254", Offset = "0xCF2254", VA = "0xCF2254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xCF25D8", Offset = "0xCF25D8", VA = "0xCF25D8")]
	private void UpdateX(UISlider slider)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xCF2660", Offset = "0xCF2660", VA = "0xCF2660")]
	private void UpdateY(UISlider slider)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xCF26E4", Offset = "0xCF26E4", VA = "0xCF26E4")]
	private void UpdateZ(UISlider slider)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xCF2768", Offset = "0xCF2768", VA = "0xCF2768")]
	public TestZoneSize()
	{
	}
}
[Token(Token = "0x200026C")]
public class GridDraw : MonoBehaviour
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject line;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TypeLine> lines;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BotAsset currentBotAsset;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Obstacle.Type curType;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xCF2780", Offset = "0xCF2780", VA = "0xCF2780")]
	public void SetAsset(BotAsset asset)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xCF265C", Offset = "0xCF265C", VA = "0xCF265C")]
	public void UpdateLine()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xCF27C8", Offset = "0xCF27C8", VA = "0xCF27C8")]
	public void CreateLine()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xCF29E0", Offset = "0xCF29E0", VA = "0xCF29E0")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xCF2AE8", Offset = "0xCF2AE8", VA = "0xCF2AE8")]
	public void AddNewLine(Direction direction)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xCF28D0", Offset = "0xCF28D0", VA = "0xCF28D0")]
	public void DrawLines()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xCF2C30", Offset = "0xCF2C30", VA = "0xCF2C30")]
	public GridDraw()
	{
	}
}
[Serializable]
[Token(Token = "0x200026D")]
public struct TypeLine
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Direction direction;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Line line;
}
[Token(Token = "0x200026E")]
public class Singletone : MonoBehaviour
{
	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xCF2CB8", Offset = "0xCF2CB8", VA = "0xCF2CB8")]
	public Singletone()
	{
	}
}
[Token(Token = "0x200026F")]
public class Singletone<T> : Singletone where T : Singletone
{
	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static T _instance;

	[Token(Token = "0x6000A6B")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000A6C")]
	public Singletone()
	{
	}
}
[Token(Token = "0x2000270")]
public class Metronome2 : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	[CompilerGenerated]
	private sealed class <Counter>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Metronome2 <>4__this;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0xCF2F40", Offset = "0xCF2F40", VA = "0xCF2F40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0xCF2F88", Offset = "0xCF2F88", VA = "0xCF2F88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xCF2D70", Offset = "0xCF2D70", VA = "0xCF2D70")]
		[DebuggerHidden]
		public <Counter>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xCF2E48", Offset = "0xCF2E48", VA = "0xCF2E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xCF2E4C", Offset = "0xCF2E4C", VA = "0xCF2E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xCF2F48", Offset = "0xCF2F48", VA = "0xCF2F48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000272")]
	[CompilerGenerated]
	private sealed class <ShowTest>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Metronome2 <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xCF3084", Offset = "0xCF3084", VA = "0xCF3084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xCF30CC", Offset = "0xCF30CC", VA = "0xCF30CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xCF2E0C", Offset = "0xCF2E0C", VA = "0xCF2E0C")]
		[DebuggerHidden]
		public <ShowTest>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xCF2F90", Offset = "0xCF2F90", VA = "0xCF2F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xCF2F94", Offset = "0xCF2F94", VA = "0xCF2F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xCF308C", Offset = "0xCF308C", VA = "0xCF308C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _beatRate;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector2 _timeSignature;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int _totalBeatLength;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _test;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _beatTime;

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xCF2CC0", Offset = "0xCF2CC0", VA = "0xCF2CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xCF2D6C", Offset = "0xCF2D6C", VA = "0xCF2D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xCF2CF8", Offset = "0xCF2CF8", VA = "0xCF2CF8")]
	[IteratorStateMachine(typeof(<Counter>d__7))]
	private IEnumerator Counter()
	{
		return null;
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xCF2D98", Offset = "0xCF2D98", VA = "0xCF2D98")]
	[IteratorStateMachine(typeof(<ShowTest>d__8))]
	private IEnumerator ShowTest()
	{
		return null;
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xCF2E34", Offset = "0xCF2E34", VA = "0xCF2E34")]
	public Metronome2()
	{
	}
}
[Token(Token = "0x2000273")]
public class AudioMixerController : MonoBehaviour
{
	[Token(Token = "0x2000274")]
	[CompilerGenerated]
	private sealed class <FlowProcess>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _fullTime;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixerController <>4__this;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MixerGroup _group;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float _targetVolume01;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _fromVolume01;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timeLeft>5__2;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xCF3698", Offset = "0xCF3698", VA = "0xCF3698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xCF36E0", Offset = "0xCF36E0", VA = "0xCF36E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xCF3574", Offset = "0xCF3574", VA = "0xCF3574")]
		[DebuggerHidden]
		public <FlowProcess>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xCF35A4", Offset = "0xCF35A4", VA = "0xCF35A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xCF35A8", Offset = "0xCF35A8", VA = "0xCF35A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xCF36A0", Offset = "0xCF36A0", VA = "0xCF36A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioMixerController instance;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer mixer;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] currentVolumes;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] maxPowers;

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xCF30D4", Offset = "0xCF30D4", VA = "0xCF30D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xCF3294", Offset = "0xCF3294", VA = "0xCF3294")]
	public void SetVolume(MixerGroup _group, float _volume01)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xCF33EC", Offset = "0xCF33EC", VA = "0xCF33EC")]
	public void MakeLerpFlow01(MixerGroup _group, float _fullTime, float _targetVolume01)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xCF34CC", Offset = "0xCF34CC", VA = "0xCF34CC")]
	[IteratorStateMachine(typeof(<FlowProcess>d__7))]
	private IEnumerator FlowProcess(MixerGroup _group, float _fullTime, float _fromVolume01, float _targetVolume01)
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xCF359C", Offset = "0xCF359C", VA = "0xCF359C")]
	public AudioMixerController()
	{
	}
}
[Token(Token = "0x2000275")]
public enum MixerGroup
{
	[Token(Token = "0x4000AA7")]
	Master,
	[Token(Token = "0x4000AA8")]
	Music,
	[Token(Token = "0x4000AA9")]
	Player,
	[Token(Token = "0x4000AAA")]
	Enemy,
	[Token(Token = "0x4000AAB")]
	Alert,
	[Token(Token = "0x4000AAC")]
	UI,
	[Token(Token = "0x4000AAD")]
	Other,
	[Token(Token = "0x4000AAE")]
	e_Count
}
[Token(Token = "0x2000276")]
public class CustomLevelButton : GenericButton, ITrackPreviewButton
{
	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Renderer imgRenderer;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshPro trackNameField;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshPro artistNameField;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMeshPro BPMField;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro lenField;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private new CustomSongInfo info;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int textureRefID;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public List<Renderer> renderers;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Collider collider;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool visualState;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xCF36E8", Offset = "0xCF36E8", VA = "0xCF36E8")]
	public void SetupButton(CustomSongInfo _info)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xCF384C", Offset = "0xCF384C", VA = "0xCF384C", Slot = "15")]
	public AudioClip GetClip()
	{
		return null;
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xCF3854", Offset = "0xCF3854", VA = "0xCF3854", Slot = "16")]
	public float GetStart()
	{
		return default(float);
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xCF3870", Offset = "0xCF3870", VA = "0xCF3870", Slot = "17")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xCF388C", Offset = "0xCF388C", VA = "0xCF388C")]
	public void UpdateCover(Texture _coverTexture)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xCF3944", Offset = "0xCF3944", VA = "0xCF3944")]
	public void SetActiveWhenOutOfBounds(bool _state)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xCF3ABC", Offset = "0xCF3ABC", VA = "0xCF3ABC")]
	public CustomLevelButton()
	{
	}
}
[Token(Token = "0x2000277")]
public class CustomSongBigViewWindow : MonoBehaviour
{
	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer imgRenderer;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro trackNameField;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro artistNameField;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro timeField;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro bpmField;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro enemyCountField;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro dodgeCountField;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] weaponIcons;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Transform> activeWeapons;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Texture;

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xCF3B34", Offset = "0xCF3B34", VA = "0xCF3B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xCF3BA4", Offset = "0xCF3BA4", VA = "0xCF3BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xCF3BA8", Offset = "0xCF3BA8", VA = "0xCF3BA8")]
	public void Setup(CustomSongInfo _info)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xCF3FB8", Offset = "0xCF3FB8", VA = "0xCF3FB8")]
	public void SetImg(Texture _tex)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xCF4060", Offset = "0xCF4060", VA = "0xCF4060")]
	public CustomSongBigViewWindow()
	{
	}
}
[Serializable]
[Token(Token = "0x2000278")]
public class TrackInfo
{
	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ProjectName;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ArtistName;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string SongName;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SongSubName;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string AudioPath;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MapperName;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PreviewStartTime;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float PreviewDuration;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string CoverImagePath;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string EnvironmentName;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DifficultyInfo[] DifficultyInfos;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float BPM;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float PreTime;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int Division;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string LastChanges;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int BlocksCount;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float TrackLenght;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xCF4150", Offset = "0xCF4150", VA = "0xCF4150")]
	public TrackInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x2000279")]
public struct DifficultyInfo
{
	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public DifficultyLevel difficulty;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int enemies;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int dodges;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Weapon[] weapons;
}
[Token(Token = "0x200027A")]
public enum Weapon
{
	[Token(Token = "0x4000AD9")]
	Blade,
	[Token(Token = "0x4000ADA")]
	Whip,
	[Token(Token = "0x4000ADB")]
	Shurikens,
	[Token(Token = "0x4000ADC")]
	BrassKnuckles,
	[Token(Token = "0x4000ADD")]
	Gun,
	[Token(Token = "0x4000ADE")]
	TommyGun
}
[Serializable]
[Token(Token = "0x200027B")]
public struct CustomSongInfo
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string projectName;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string songName;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string artistName;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bpm;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture coverTexture;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip clip;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DifficultyInfo difficulty;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackInfo trackInfo;
}
[Token(Token = "0x200027C")]
public class CustomSongs : MonoBehaviour
{
	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRButton startButton;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visual;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject projectPref;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject mainMenuDataPref;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MainMenuData mainMenuData;

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xCF4158", Offset = "0xCF4158", VA = "0xCF4158")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xCF4240", Offset = "0xCF4240", VA = "0xCF4240")]
	private void PressButton(VRButton button)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xCF427C", Offset = "0xCF427C", VA = "0xCF427C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xCF4364", Offset = "0xCF4364", VA = "0xCF4364")]
	public CustomSongs()
	{
	}
}
[Token(Token = "0x200027D")]
public class DifficultyButton : VRButton
{
	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LevelController levelController;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DifficultyLevel difficulty;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer border;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer rend;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xCF436C", Offset = "0xCF436C", VA = "0xCF436C", Slot = "6")]
	public override void OnPush()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xCF4494", Offset = "0xCF4494", VA = "0xCF4494", Slot = "8")]
	public override void ChangeVisual()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xCF44CC", Offset = "0xCF44CC", VA = "0xCF44CC", Slot = "10")]
	public override void ChangeVisualLockButton(bool state)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xCF4528", Offset = "0xCF4528", VA = "0xCF4528")]
	public DifficultyButton()
	{
	}
}
[Token(Token = "0x200027E")]
public class FinalScore : MonoBehaviour
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro curentScoreText;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visual;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro enemyKilltext;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro beatAccuracy;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro dodgeText;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnHit;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnHitBeat;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int enemiesCount;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int beatsCount;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int dodgeObstaclesCount;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int hittedEnemyCount;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int beatAccuracyCount;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 visStartPos;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xCF4530", Offset = "0xCF4530", VA = "0xCF4530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xCF48F0", Offset = "0xCF48F0", VA = "0xCF48F0")]
	private void AddHitBeat()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xCF4900", Offset = "0xCF4900", VA = "0xCF4900")]
	private void AddHitedEnemy()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xCF4910", Offset = "0xCF4910", VA = "0xCF4910")]
	private void BeatsInfo()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xCF4A88", Offset = "0xCF4A88", VA = "0xCF4A88")]
	private void HideMe()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xCF4B1C", Offset = "0xCF4B1C", VA = "0xCF4B1C")]
	private void SeeFinalScore()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xCF4DC4", Offset = "0xCF4DC4", VA = "0xCF4DC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xCF5160", Offset = "0xCF5160", VA = "0xCF5160")]
	public FinalScore()
	{
	}
}
[Token(Token = "0x200027F")]
public class FirstStartGame : MonoBehaviour
{
	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] uiLobby;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRButton startTutorButton;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRButton calibrateButton;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRButton buttonVignette;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private VRButton mainHandButton;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private VRButton buttonLanguage;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private VRButton buttonLanguageEN;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private VRButton buttonLanguageZH_HANS;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VRButton buttonLanguageKO;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private VRButton buttonLanguageJA;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private VRButton buttonLanguageDE;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private VRButton buttonLanguageFR;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private VRButton buttonLanguageES;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private VRButton buttonLanguageIT;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private VRButton buttonLanguageRU;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UISlider vignettePower;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro description;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject tutor;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TutorialsPage tutorialsPage;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro vignettePowerText;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string firstText;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private string secondText;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string firstTextKey;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string secondTextKey;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro languageText;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject languages;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float languageTextSize;

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xCF5168", Offset = "0xCF5168", VA = "0xCF5168")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xCF5D4C", Offset = "0xCF5D4C", VA = "0xCF5D4C")]
	private void UpdateTexts(Locale locale)
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xCF5E44", Offset = "0xCF5E44", VA = "0xCF5E44")]
	private void Calibrate(VRButton button)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xCF6154", Offset = "0xCF6154", VA = "0xCF6154")]
	public void SetVignette(VRButton button)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xCF6204", Offset = "0xCF6204", VA = "0xCF6204")]
	public void SetVignettePower(UISlider _slider)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xCF6288", Offset = "0xCF6288", VA = "0xCF6288")]
	private void ChangeMainHand(VRButton button)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xCF6330", Offset = "0xCF6330", VA = "0xCF6330")]
	private void StartTutorial(VRButton button)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xCF6538", Offset = "0xCF6538", VA = "0xCF6538")]
	public void ShowLanguages(VRButton button)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xCF65A4", Offset = "0xCF65A4", VA = "0xCF65A4")]
	public void SetLanguageEN(VRButton button)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xCF65F0", Offset = "0xCF65F0", VA = "0xCF65F0")]
	public void SetLanguageZH_HANS(VRButton button)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xCF65F8", Offset = "0xCF65F8", VA = "0xCF65F8")]
	public void SetLanguageKO(VRButton button)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xCF6600", Offset = "0xCF6600", VA = "0xCF6600")]
	public void SetLanguageJA(VRButton button)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xCF6608", Offset = "0xCF6608", VA = "0xCF6608")]
	public void SetLanguageDE(VRButton button)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xCF6610", Offset = "0xCF6610", VA = "0xCF6610")]
	public void SetLanguageFR(VRButton button)
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xCF6618", Offset = "0xCF6618", VA = "0xCF6618")]
	public void SetLanguageES(VRButton button)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xCF6620", Offset = "0xCF6620", VA = "0xCF6620")]
	public void SetLanguageIT(VRButton button)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xCF6628", Offset = "0xCF6628", VA = "0xCF6628")]
	public void SetLanguageRU(VRButton button)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xCF65AC", Offset = "0xCF65AC", VA = "0xCF65AC")]
	private void SetLocale(LocalizationManager.Locale locale)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xCF5F6C", Offset = "0xCF5F6C", VA = "0xCF5F6C")]
	private void SetLocale(Locale locale)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xCF6630", Offset = "0xCF6630", VA = "0xCF6630")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xCF6D5C", Offset = "0xCF6D5C", VA = "0xCF6D5C")]
	public FirstStartGame()
	{
	}
}
[Token(Token = "0x2000280")]
public interface ITrackPreviewButton
{
	[Token(Token = "0x6000ABD")]
	AudioClip GetClip();

	[Token(Token = "0x6000ABE")]
	float GetStart();

	[Token(Token = "0x6000ABF")]
	float GetDuration();
}
[Token(Token = "0x2000281")]
public class Leaderboard : MonoBehaviour
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected LeaderboardPanel leaderboardPanel;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected LeaderboardPanel leaderboardPanelGame;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LeaderboardPanel activeLeaderboard;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<LeaderboardScore> OnGetMyScore;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnHideMe;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnShowMe;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action OnStartLoading;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action OnStopLoading;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action<List<LeaderboardScore>> OnSeeLeaderboard;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxPlayers;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeaderboardScore myScore;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static bool readyForMenu;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private static bool missionsMenu;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xCF6D64", Offset = "0xCF6D64", VA = "0xCF6D64")]
	public static void EnteredInMissionsMenu()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xCF6DD0", Offset = "0xCF6DD0", VA = "0xCF6DD0")]
	public static void LeftMissionsMenu()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xCF6E38", Offset = "0xCF6E38", VA = "0xCF6E38")]
	public void SeeLeaderboard(List<LeaderboardScore> scores)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xCF733C", Offset = "0xCF733C", VA = "0xCF733C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xCF78E0", Offset = "0xCF78E0", VA = "0xCF78E0")]
	private void HideMe()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xCF7930", Offset = "0xCF7930", VA = "0xCF7930")]
	private void ShowMe()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xCF79C4", Offset = "0xCF79C4", VA = "0xCF79C4")]
	private void GetMyScore(LeaderboardScore score)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xCF79CC", Offset = "0xCF79CC", VA = "0xCF79CC")]
	public void StartLoading()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xCF7A60", Offset = "0xCF7A60", VA = "0xCF7A60")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xCF7AF4", Offset = "0xCF7AF4", VA = "0xCF7AF4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xCF8098", Offset = "0xCF8098", VA = "0xCF8098")]
	public Leaderboard()
	{
	}
}
[Token(Token = "0x2000282")]
public class LeaderboardPanel : MonoBehaviour
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject visual;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected GameObject[] textPanels;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject loadingCircle;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color normalColor;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color playerColor;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LeaderboardScore myScore;

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xCF703C", Offset = "0xCF703C", VA = "0xCF703C")]
	public void SeeLeaderboard(List<LeaderboardScore> scores, [Optional] LeaderboardScore myScore)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xCF81B0", Offset = "0xCF81B0", VA = "0xCF81B0")]
	private void SetScore(GameObject textPanel, LeaderboardScore score, Color color)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xCF79E4", Offset = "0xCF79E4", VA = "0xCF79E4")]
	public void StartLoading()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xCF7A78", Offset = "0xCF7A78", VA = "0xCF7A78")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xCF7320", Offset = "0xCF7320", VA = "0xCF7320")]
	public int GetCountScores()
	{
		return default(int);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xCF80A8", Offset = "0xCF80A8", VA = "0xCF80A8")]
	private void ResetScore(GameObject textPanel)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xCF852C", Offset = "0xCF852C", VA = "0xCF852C")]
	public LeaderboardPanel()
	{
	}
}
[Token(Token = "0x2000283")]
public class LevelButton : GenericButton, ITrackPreviewButton
{
	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro levelNameField;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LevelAsset levelAsset;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 rememberedNameLocalPos;

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xCF8544", Offset = "0xCF8544", VA = "0xCF8544", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xCF8584", Offset = "0xCF8584", VA = "0xCF8584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xCF8604", Offset = "0xCF8604", VA = "0xCF8604")]
	private void ChangeLocale(Locale locale)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xCF86A8", Offset = "0xCF86A8", VA = "0xCF86A8")]
	public void SetLevelAsset(LevelAsset _levelAsset)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xCF87E0", Offset = "0xCF87E0", VA = "0xCF87E0", Slot = "14")]
	protected override void SetupVisual(Texture _texture, Color _textColor, float _shifted = 0f, float _scale = 1f, bool _bold = false, bool _framed = false)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xCF8920", Offset = "0xCF8920", VA = "0xCF8920", Slot = "15")]
	public AudioClip GetClip()
	{
		return null;
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xCF893C", Offset = "0xCF893C", VA = "0xCF893C", Slot = "16")]
	public float GetStart()
	{
		return default(float);
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xCF8944", Offset = "0xCF8944", VA = "0xCF8944", Slot = "17")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xCF8968", Offset = "0xCF8968", VA = "0xCF8968")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xCF89E8", Offset = "0xCF89E8", VA = "0xCF89E8")]
	public LevelButton()
	{
	}
}
[Token(Token = "0x2000284")]
[Obsolete("Looks like we don't need it anymore. MissionsPage works directly with game controller")]
public class LevelController : MonoBehaviour
{
	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer rendererImage;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro scoreText;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRButton hideButton;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRButton startButton;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LevelAsset levelAsset;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DifficultyButton[] difficultyButtons;

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xCF89F0", Offset = "0xCF89F0", VA = "0xCF89F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xCF8BA4", Offset = "0xCF8BA4", VA = "0xCF8BA4")]
	public void StartGame(VRButton button)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xCF8D20", Offset = "0xCF8D20", VA = "0xCF8D20")]
	public void AvailableDifficulty()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xCF8DF0", Offset = "0xCF8DF0", VA = "0xCF8DF0")]
	public void ShowLevelController(LevelAsset levelAsset)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xCF8EF0", Offset = "0xCF8EF0", VA = "0xCF8EF0")]
	public void Hide(VRButton button)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xCF8EF4", Offset = "0xCF8EF4", VA = "0xCF8EF4")]
	public void HideLevelController()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xCF8FB0", Offset = "0xCF8FB0", VA = "0xCF8FB0")]
	public void SetLevelAsset(LevelAsset _levelAsset)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xCF4394", Offset = "0xCF4394", VA = "0xCF4394")]
	public void SetDifficulty(DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xCF900C", Offset = "0xCF900C", VA = "0xCF900C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xCF9194", Offset = "0xCF9194", VA = "0xCF9194")]
	public LevelController()
	{
	}
}
[Token(Token = "0x2000285")]
public class LevelSelector : MonoBehaviour
{
	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xCF919C", Offset = "0xCF919C", VA = "0xCF919C")]
	public LevelSelector()
	{
	}
}
[Token(Token = "0x2000286")]
public class MenuMusic : MonoBehaviour
{
	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuMusic instance;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIRadioGroup mainSellector;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource mainAudio;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource levelDemo;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GenericButton> subscribes;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float returnMainAudioTime;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxMainAudioTime;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentMainVolume;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly float timeForVolumeToReturn;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xCF91A4", Offset = "0xCF91A4", VA = "0xCF91A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xCF92BC", Offset = "0xCF92BC", VA = "0xCF92BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xCF94F0", Offset = "0xCF94F0", VA = "0xCF94F0")]
	public static void SubscribeToLevelsButtons(List<GenericButton> _buttons)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xCF95E4", Offset = "0xCF95E4", VA = "0xCF95E4")]
	private void SubscribeToLevelsButtonsInst(List<GenericButton> _buttons)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xCF974C", Offset = "0xCF974C", VA = "0xCF974C")]
	private void PlayLevelSound(VRButton _button)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xCF98DC", Offset = "0xCF98DC", VA = "0xCF98DC")]
	public void PlayTrackPreview(in CustomSongInfo _info)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xCF9998", Offset = "0xCF9998", VA = "0xCF9998")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xCF9A68", Offset = "0xCF9A68", VA = "0xCF9A68")]
	private void StopMusicOnChange(int _a, int _b)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xCF9A8C", Offset = "0xCF9A8C", VA = "0xCF9A8C")]
	private void ReturnToMainMusic()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xCF9AB0", Offset = "0xCF9AB0", VA = "0xCF9AB0")]
	public MenuMusic()
	{
	}
}
[Token(Token = "0x2000287")]
public class MenuSystem : MonoBehaviour
{
	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameLevelAsset levels;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PartMenu[] parts;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelController levelController;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tutorParent;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform levelParent;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LevelButton levelButtonPrefab;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TutorialPartButton[] tutorialPartButtons;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int X_START_POS;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int Y_START_POS;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int X_SPACE_BETWEEN_LEVEL;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int Y_SPACE_BETWEEN_LEVEL;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int NUMBER_OF_COLUMN;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<LevelButton, LevelAsset> levelButtons;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xCF9B48", Offset = "0xCF9B48", VA = "0xCF9B48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xCF9D0C", Offset = "0xCF9D0C", VA = "0xCF9D0C")]
	public void CreateLevelButtons()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xCFA2D4", Offset = "0xCFA2D4", VA = "0xCFA2D4")]
	public void StartTutorial(VRButton button)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xCFA014", Offset = "0xCFA014", VA = "0xCFA014")]
	public void CreateTutorButtons()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xCFA2A8", Offset = "0xCFA2A8", VA = "0xCFA2A8")]
	public Vector3 GetPosition(int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xCFA64C", Offset = "0xCFA64C", VA = "0xCFA64C")]
	public void SelectLevel(VRButton button)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xCFA798", Offset = "0xCFA798", VA = "0xCFA798")]
	public void SelectPart(VRButton button)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xCFA8DC", Offset = "0xCFA8DC", VA = "0xCFA8DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xCFAADC", Offset = "0xCFAADC", VA = "0xCFAADC")]
	public MenuSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000288")]
public struct PartMenu
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public VRButton button;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject part;
}
[Token(Token = "0x2000289")]
[CreateAssetMenu(fileName = "Player Borders Settings", menuName = "Against/Player Borders/PlayerBordersSettings")]
public class BordersSettings : ScriptableObject
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Width;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float X;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Y;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Z;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xCFAB9C", Offset = "0xCFAB9C", VA = "0xCFAB9C")]
	public BordersSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200028A")]
[CreateAssetMenu(fileName = "GameLevelsAsset_", menuName = "Against/Level/GameLevels")]
public class GameLevelAsset : ScriptableObject
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool hasFirstLauch;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public LobbyAsset lobbyAsset;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public TutorAsset[] tutorAssets;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public LevelAsset[] levelAssets;

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xCFABA4", Offset = "0xCFABA4", VA = "0xCFABA4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xCFA254", Offset = "0xCFA254", VA = "0xCFA254")]
	public bool CompleteTutorials()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xCFAC94", Offset = "0xCFAC94", VA = "0xCFAC94")]
	public bool CompleteGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xCFAD4C", Offset = "0xCFAD4C", VA = "0xCFAD4C")]
	public void SetData(GameSave gameSave)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xCFB008", Offset = "0xCFB008", VA = "0xCFB008")]
	public void UpdateOpens()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xCFB0B8", Offset = "0xCFB0B8", VA = "0xCFB0B8")]
	public GameSave GetData()
	{
		return null;
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xCFB450", Offset = "0xCFB450", VA = "0xCFB450")]
	public GameLevelAsset()
	{
	}
}
[Token(Token = "0x200028B")]
[CreateAssetMenu(fileName = "Level_", menuName = "Against/Level/LevelInfo")]
public class LevelAsset : ScriptableObject
{
	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isOpen;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Object scene;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Object comics;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip demoSound;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LevelDiffParam[] diffParams;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string sceneName;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string sceneComics;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string publicName;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture defaultImage;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture selectedImage;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture lockedImage;

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xCFB458", Offset = "0xCFB458", VA = "0xCFB458")]
	public void SetScore(DifficultyLevel difficulty, int score)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xCFB4C4", Offset = "0xCFB4C4", VA = "0xCFB4C4")]
	public void SetCompleted(DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xCF8FB8", Offset = "0xCF8FB8", VA = "0xCF8FB8")]
	public int GetScore(DifficultyLevel _difficultyLevel)
	{
		return default(int);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xCFB528", Offset = "0xCFB528", VA = "0xCFB528")]
	public bool HasDiff()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xCF8CD4", Offset = "0xCF8CD4", VA = "0xCF8CD4")]
	public bool HasComics()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xCFAD00", Offset = "0xCFAD00", VA = "0xCFAD00")]
	public bool IsComplited()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xCFAC40", Offset = "0xCFAC40", VA = "0xCFAC40")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xCFA790", Offset = "0xCFA790", VA = "0xCFA790")]
	public LevelAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200028C")]
public struct LevelDiffParam
{
	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public DifficultyLevel difficulty;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool hasDifficultyLevel;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int score;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool completed;
}
[Token(Token = "0x200028D")]
[CreateAssetMenu(fileName = "Lobby_", menuName = "Against/Level/LobbyInfo")]
public class LobbyAsset : ScriptableObject
{
	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object scene;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sceneName;

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xCFB580", Offset = "0xCFB580", VA = "0xCFB580")]
	public LobbyAsset()
	{
	}
}
[Token(Token = "0x200028E")]
[CreateAssetMenu(fileName = "Tutor_", menuName = "Against/Level/TutorInfo")]
public class TutorAsset : ScriptableObject
{
	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TutorialState state;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isCompleted;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[TextArea]
	public string description;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.Object scene;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string sceneName;

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xCFAC38", Offset = "0xCFAC38", VA = "0xCFAC38")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xCFB588", Offset = "0xCFB588", VA = "0xCFB588")]
	public TutorAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200028F")]
public struct TutorPart
{
	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public TutorialState state;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool isCompleted;
}
[Token(Token = "0x2000290")]
public class SettingController : MonoBehaviour
{
	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnModificatorChange;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<bool> OnIndicatorsSwitched;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<bool> OnInterfaceSwitched;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<bool> OnNoFailSwitched;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action<bool> OnNoirSwitched;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action OnSettingsChange;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Action<bool> OnMainHandSwitched;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Action<bool> OnDeflectSwitched;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Action<bool> OnDodgeArrowsSwitched;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Action<bool> OnDisplayCameraSwitched;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Action<bool> OnBloodVignetteSwitched;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Action<bool> OnVignetteSwitched;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Action<bool> OnComicsSwitched;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Action<float> OnVignettePower;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRButton buttonChangeHand;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRButton buttonDeflect;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRButton buttonDodgeArrows;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRButton buttonMetronomeUI;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRButton buttonLanguage;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRButton buttonLanguageEN;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRButton buttonLanguageZH_HANS;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VRButton buttonLanguageKO;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VRButton buttonLanguageJA;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VRButton buttonLanguageDE;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VRButton buttonLanguageFR;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VRButton buttonLanguageES;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VRButton buttonLanguageIT;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VRButton buttonLanguageRU;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VRButton buttonRecCamera;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public VRButton buttonBloodVignette;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VRButton buttonVignette;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public VRButton buttonComics;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public VRButton buttonCalibrate;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VRButton buttonHUD;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VRButton buttonShowUI;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VRButton buttonImmortal;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VRButton buttonNoir;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VRButton buttonShields;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public VRButton buttonPistol;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public VRButton buttonDodge;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UIRadioGroup qualityRadio;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UISlider vignettePower;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UISlider masterVolume;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UISlider musicVolume;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public UISlider playerVolume;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UISlider enemyVolume;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UISlider alertVolume;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UISlider uiVolume;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject immortalSetting;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject comics;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static float calibrationParam;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GenericButton[] genericButtons;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro languageText;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject languages;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float languageTextSize;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xCFB590", Offset = "0xCFB590", VA = "0xCFB590")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xCFCAF4", Offset = "0xCFCAF4", VA = "0xCFCAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xCFD19C", Offset = "0xCFD19C", VA = "0xCFD19C")]
	private void PushButton(VRButton button)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xCFCC58", Offset = "0xCFCC58", VA = "0xCFCC58")]
	private void UpdateSettings()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xCFD388", Offset = "0xCFD388", VA = "0xCFD388")]
	public void SetShowUI(VRButton button)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xCFD490", Offset = "0xCFD490", VA = "0xCFD490")]
	public void HUD(VRButton button)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xCFD598", Offset = "0xCFD598", VA = "0xCFD598")]
	public void Immortal(VRButton button)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xCFD6A0", Offset = "0xCFD6A0", VA = "0xCFD6A0")]
	public void Noir(VRButton button)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xCFD7D4", Offset = "0xCFD7D4", VA = "0xCFD7D4")]
	public void SetBeatCirclesUI(VRButton button)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xCFD8B8", Offset = "0xCFD8B8", VA = "0xCFD8B8")]
	public void SetColourlessUI(VRButton button)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xCFD99C", Offset = "0xCFD99C", VA = "0xCFD99C")]
	public void SetOneChanceUI(VRButton button)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xCFDABC", Offset = "0xCFDABC", VA = "0xCFDABC")]
	public void SetFreestyleModUI(VRButton button)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xCFDBA0", Offset = "0xCFDBA0", VA = "0xCFDBA0")]
	public void Deflect(VRButton button)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xCFDCA8", Offset = "0xCFDCA8", VA = "0xCFDCA8")]
	public void SetScorePoints(VRButton button)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xCFDD8C", Offset = "0xCFDD8C", VA = "0xCFDD8C")]
	public void SetDodgeArrows(VRButton button)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xCFDE94", Offset = "0xCFDE94", VA = "0xCFDE94")]
	public void SetMetronomeUI(VRButton button)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xCFDF78", Offset = "0xCFDF78", VA = "0xCFDF78")]
	public void SetMetronomePower(UISlider _slider)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xCFDF98", Offset = "0xCFDF98", VA = "0xCFDF98")]
	public void SetRecCamera(VRButton button)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xCFE0B0", Offset = "0xCFE0B0", VA = "0xCFE0B0")]
	public void Comics(VRButton button)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xCFE1B8", Offset = "0xCFE1B8", VA = "0xCFE1B8")]
	public void SetAutoAim(VRButton button)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xCFE29C", Offset = "0xCFE29C", VA = "0xCFE29C")]
	public void SetHand(VRButton button)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xCFE3A4", Offset = "0xCFE3A4", VA = "0xCFE3A4")]
	public void SetEnvironmentHitLightning(VRButton button)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xCFE488", Offset = "0xCFE488", VA = "0xCFE488")]
	public void SetBloodVignette(VRButton button)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xCFE590", Offset = "0xCFE590", VA = "0xCFE590")]
	public void SetVignette(VRButton button)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xCFE6D0", Offset = "0xCFE6D0", VA = "0xCFE6D0")]
	public void SetVignettePower(UISlider _slider)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xCFE79C", Offset = "0xCFE79C", VA = "0xCFE79C")]
	public void SetVignetteIndication(VRButton button)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xCF5E9C", Offset = "0xCF5E9C", VA = "0xCF5E9C")]
	public static void CalibrateHeight(VRButton button)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xCFE880", Offset = "0xCFE880", VA = "0xCFE880")]
	public void SetQuality(int _lastLevel, int _newLevel)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xCFE8F8", Offset = "0xCFE8F8", VA = "0xCFE8F8")]
	public void SetMasterVolume(UISlider _slider)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xCFE968", Offset = "0xCFE968", VA = "0xCFE968")]
	public void SetMusicVolume(UISlider _slider)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xCFE9D8", Offset = "0xCFE9D8", VA = "0xCFE9D8")]
	public void SetPlayerVolume(UISlider _slider)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xCFEA48", Offset = "0xCFEA48", VA = "0xCFEA48")]
	public void SetEnemyVolume(UISlider _slider)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xCFEAB8", Offset = "0xCFEAB8", VA = "0xCFEAB8")]
	public void SetAlertVolume(UISlider _slider)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xCFEB28", Offset = "0xCFEB28", VA = "0xCFEB28")]
	public void SetUIVolume(UISlider _slider)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xCFEB98", Offset = "0xCFEB98", VA = "0xCFEB98")]
	public void Pistol(VRButton button)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xCFEBF8", Offset = "0xCFEBF8", VA = "0xCFEBF8")]
	public void Shields(VRButton button)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xCFEC58", Offset = "0xCFEC58", VA = "0xCFEC58")]
	public void Dodge(VRButton button)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xCFECB8", Offset = "0xCFECB8", VA = "0xCFECB8")]
	public void ShowLanguages(VRButton button)
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xCFED24", Offset = "0xCFED24", VA = "0xCFED24")]
	public void SetLanguageEN(VRButton button)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xCFED70", Offset = "0xCFED70", VA = "0xCFED70")]
	public void SetLanguageZH_HANS(VRButton button)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xCFED78", Offset = "0xCFED78", VA = "0xCFED78")]
	public void SetLanguageKO(VRButton button)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xCFED80", Offset = "0xCFED80", VA = "0xCFED80")]
	public void SetLanguageJA(VRButton button)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xCFED88", Offset = "0xCFED88", VA = "0xCFED88")]
	public void SetLanguageDE(VRButton button)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xCFED90", Offset = "0xCFED90", VA = "0xCFED90")]
	public void SetLanguageFR(VRButton button)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xCFED98", Offset = "0xCFED98", VA = "0xCFED98")]
	public void SetLanguageES(VRButton button)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xCFEDA0", Offset = "0xCFEDA0", VA = "0xCFEDA0")]
	public void SetLanguageIT(VRButton button)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xCFEDA8", Offset = "0xCFEDA8", VA = "0xCFEDA8")]
	public void SetLanguageRU(VRButton button)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xCFED2C", Offset = "0xCFED2C", VA = "0xCFED2C")]
	private void SetLocale(LocalizationManager.Locale locale)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xCFD1A0", Offset = "0xCFD1A0", VA = "0xCFD1A0")]
	private void SetLocale(Locale locale)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xCFEDB0", Offset = "0xCFEDB0", VA = "0xCFEDB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xD00344", Offset = "0xD00344", VA = "0xD00344")]
	public SettingController()
	{
	}
}
[Token(Token = "0x2000291")]
public class TutorialButton : GenericButton
{
	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public TutorialState part;

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xD0034C", Offset = "0xD0034C", VA = "0xD0034C")]
	public TutorialButton()
	{
	}
}
[Token(Token = "0x2000292")]
public class TutorialPartButton : VRButton
{
	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TutorialState part;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture textureCompleted;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Renderer rendererCompleted;

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xD00354", Offset = "0xD00354", VA = "0xD00354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xCFA5D4", Offset = "0xCFA5D4", VA = "0xCFA5D4")]
	public void SetCompleted()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xD00374", Offset = "0xD00374", VA = "0xD00374", Slot = "10")]
	public override void ChangeVisualLockButton(bool state)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xD003F4", Offset = "0xD003F4", VA = "0xD003F4")]
	public TutorialPartButton()
	{
	}
}
[Token(Token = "0x2000293")]
public class OctopusTentacle : MonoBehaviour
{
	[Token(Token = "0x2000294")]
	[CompilerGenerated]
	private sealed class <DiscardBaseTentacle>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OctopusTentacle <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xD0283C", Offset = "0xD0283C", VA = "0xD0283C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xD02884", Offset = "0xD02884", VA = "0xD02884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xD018A0", Offset = "0xD018A0", VA = "0xD018A0")]
		[DebuggerHidden]
		public <DiscardBaseTentacle>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xD0257C", Offset = "0xD0257C", VA = "0xD0257C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xD02580", Offset = "0xD02580", VA = "0xD02580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xD02844", Offset = "0xD02844", VA = "0xD02844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000295")]
	[CompilerGenerated]
	private sealed class <DiscardTentacle>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OctopusTentacle <>4__this;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xD02CFC", Offset = "0xD02CFC", VA = "0xD02CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xD02D44", Offset = "0xD02D44", VA = "0xD02D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xD018C8", Offset = "0xD018C8", VA = "0xD018C8")]
		[DebuggerHidden]
		public <DiscardTentacle>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xD0288C", Offset = "0xD0288C", VA = "0xD0288C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xD02890", Offset = "0xD02890", VA = "0xD02890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xD02D04", Offset = "0xD02D04", VA = "0xD02D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Base")]
	[SerializeField]
	private GameObject octopusRoot;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string speedParam;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float slowSpeed;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject effectFlow;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystemController effectPipe;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private DissolveController dissolveController;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("BaseTent")]
	private GameObject baseRootObject;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Renderer baseOrigMesh;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Renderer baseMesh;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform[] copyBaseBones;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform[] baseBones;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody[] baseTentRigidbodies;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Ricochet")]
	[SerializeField]
	private RicochetByBlade ricochet;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float delayStartRicochet;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private BossAction ricochetAction;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private BossAction ricochetFarAction;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Damager")]
	[SerializeField]
	private GameObject damager;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VisualSidesChanger damageVisualSides;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Beat")]
	[SerializeField]
	private BeatObject beatObject;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float delayDiscard;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private float forceDiscard;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private BossAction beatAction;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Rigidbody[] tentRigidbodies;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Saw")]
	[SerializeField]
	private GameObject saw;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private BossAction attackSawAction;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private DissolveController sawController;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private VisualSidesChanger visualSides;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[Header("ThrowSaw")]
	private Direction direction;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private AngleShooter angleShooter;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private float delayThrowSaw;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private BossAction throwSawAction;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private float dodgeArrowDelay;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	private float target_dodgeArrowDelay;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private BossAction throwSawInTargetAction;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[Header("ThrowBot")]
	[SerializeField]
	private GameObject fakeStayBot;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private float delayStartMove;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CopyPosRot botCopyPosRot;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 botLocalStartPos;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private DissolveController botDissolveController;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Animator botAnimator;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool throwBotUp;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[SerializeField]
	private float delayShoot;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private float delayShoot_up;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private BotShooter botShooter;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private CopyPosRot startPoint;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private CopyPosRot startPoint2;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private BossAction throwBotAction;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private BossAction throwBotAction_up;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private BezierWay bezierWay_up;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[Header("Slice")]
	[SerializeField]
	private GameObject sliceRootObject;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private Transform rootBone;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject newSliceRootObject;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject[] origObjects;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject sliceDamager;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private BlockDamager sliceBlockDamager;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private UISignal sliceUI;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private Transform[] copyBones;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private Transform[] bones;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private Renderer sliceOrigMesh;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private Renderer sliceMesh;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private BossAction attackAction;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private DamageEffectCutted damageEffectCutted;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Signal sliceSignal;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private BlockDamager blockDamager;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool changeTentacle;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	private bool copy;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21A")]
	private bool isSliced;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21B")]
	private bool isBeated;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private bool isBeat;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21D")]
	private bool isAttack;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21E")]
	private bool isSaw;

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xD003FC", Offset = "0xD003FC", VA = "0xD003FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xD0099C", Offset = "0xD0099C", VA = "0xD0099C")]
	private void LinkToAction(bool state)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xD011E4", Offset = "0xD011E4", VA = "0xD011E4")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xD01260", Offset = "0xD01260", VA = "0xD01260")]
	public void Damage()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xD01290", Offset = "0xD01290", VA = "0xD01290")]
	public void ShowFlow()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xD00904", Offset = "0xD00904", VA = "0xD00904")]
	public void HideFlow()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xD012B0", Offset = "0xD012B0", VA = "0xD012B0")]
	public void Slow()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xD012D8", Offset = "0xD012D8", VA = "0xD012D8")]
	public void StopSlow()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xD01300", Offset = "0xD01300", VA = "0xD01300")]
	public void StartRicochet()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xD01400", Offset = "0xD01400", VA = "0xD01400")]
	public void Ready()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xD0141C", Offset = "0xD0141C", VA = "0xD0141C")]
	public void StopRicochet()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xD014EC", Offset = "0xD014EC", VA = "0xD014EC")]
	public void StartBeat()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xD015FC", Offset = "0xD015FC", VA = "0xD015FC")]
	public void BeatTentacle()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xD016A8", Offset = "0xD016A8", VA = "0xD016A8")]
	public void DiscardAllDentacles()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xD0182C", Offset = "0xD0182C", VA = "0xD0182C")]
	[IteratorStateMachine(typeof(<DiscardBaseTentacle>d__87))]
	private IEnumerator DiscardBaseTentacle()
	{
		return null;
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xD01624", Offset = "0xD01624", VA = "0xD01624")]
	[IteratorStateMachine(typeof(<DiscardTentacle>d__88))]
	private IEnumerator DiscardTentacle(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xD018F0", Offset = "0xD018F0", VA = "0xD018F0")]
	public void StopBeat()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xD01A10", Offset = "0xD01A10", VA = "0xD01A10")]
	public void StartSaw()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xD01A54", Offset = "0xD01A54", VA = "0xD01A54")]
	public void StopSaw()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xD01A88", Offset = "0xD01A88", VA = "0xD01A88")]
	public void HideSaw()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xD01AA8", Offset = "0xD01AA8", VA = "0xD01AA8")]
	public void StartThrowSaw()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xD01B20", Offset = "0xD01B20", VA = "0xD01B20")]
	public void StartThrowSawInTarget()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xD01B98", Offset = "0xD01B98", VA = "0xD01B98")]
	public void ThrowSaw()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xD01C04", Offset = "0xD01C04", VA = "0xD01C04")]
	public void ThrowSawInTarget()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xD01C78", Offset = "0xD01C78", VA = "0xD01C78")]
	public void ChangeTentacle()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xD01D4C", Offset = "0xD01D4C", VA = "0xD01D4C")]
	public void StartSlice()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xD01E58", Offset = "0xD01E58", VA = "0xD01E58")]
	public void SliceDamage()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xD01F4C", Offset = "0xD01F4C", VA = "0xD01F4C")]
	public void Sliced()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xD01E84", Offset = "0xD01E84", VA = "0xD01E84")]
	public void StopSlice()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xD01FB0", Offset = "0xD01FB0", VA = "0xD01FB0")]
	public void ThrowBotUp()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xD01FBC", Offset = "0xD01FBC", VA = "0xD01FBC")]
	public void StartThrowBot()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xD02098", Offset = "0xD02098", VA = "0xD02098")]
	private void FakeBotMove()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xD02100", Offset = "0xD02100", VA = "0xD02100")]
	private void ThrowBot()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xD0217C", Offset = "0xD0217C", VA = "0xD0217C")]
	public void HideBaseRootBone()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xD00924", Offset = "0xD00924", VA = "0xD00924")]
	public void Copy(bool state)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xD021F8", Offset = "0xD021F8", VA = "0xD021F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xD022DC", Offset = "0xD022DC", VA = "0xD022DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xD02574", Offset = "0xD02574", VA = "0xD02574")]
	public OctopusTentacle()
	{
	}
}
[Token(Token = "0x2000296")]
public class OnKillEnemyEvent : MonoBehaviour
{
	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Enemy enemy;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onKill;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xD02D4C", Offset = "0xD02D4C", VA = "0xD02D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xD02E24", Offset = "0xD02E24", VA = "0xD02E24")]
	private void OnKillEvent()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xD02E38", Offset = "0xD02E38", VA = "0xD02E38")]
	public OnKillEnemyEvent()
	{
	}
}
[Token(Token = "0x2000297")]
public class OptimizationDamageEffectParticlesChanger : OptimizationParticlesChanger
{
	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DamageEffect damageEffect;

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xD02E40", Offset = "0xD02E40", VA = "0xD02E40", Slot = "5")]
	protected override void OptiChange()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xD02E68", Offset = "0xD02E68", VA = "0xD02E68")]
	public OptimizationDamageEffectParticlesChanger()
	{
	}
}
[Token(Token = "0x2000298")]
public abstract class OptimizationParticlesChanger : MonoBehaviour
{
	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] optiParticleSystems;

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xD02E78", Offset = "0xD02E78", VA = "0xD02E78", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xD02E64", Offset = "0xD02E64", VA = "0xD02E64", Slot = "5")]
	protected virtual void OptiChange()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xD02E70", Offset = "0xD02E70", VA = "0xD02E70")]
	protected OptimizationParticlesChanger()
	{
	}
}
[Token(Token = "0x2000299")]
public class OptimizationParticleSystemControllerParticlesChanger : OptimizationParticlesChanger
{
	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystemController particleSystemController;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xD02EF0", Offset = "0xD02EF0", VA = "0xD02EF0", Slot = "5")]
	protected override void OptiChange()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xD02F14", Offset = "0xD02F14", VA = "0xD02F14")]
	public OptimizationParticleSystemControllerParticlesChanger()
	{
	}
}
[Token(Token = "0x200029A")]
public class OptimizationSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] notOptiObjs;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] optiObjs;

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xD02F1C", Offset = "0xD02F1C", VA = "0xD02F1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xD02F94", Offset = "0xD02F94", VA = "0xD02F94")]
	private void SetActive(GameObject[] objs, bool state)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xD03070", Offset = "0xD03070", VA = "0xD03070")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xD03094", Offset = "0xD03094", VA = "0xD03094")]
	public OptimizationSwitcher()
	{
	}
}
[Token(Token = "0x200029B")]
public class QualitySetup : MonoBehaviour
{
	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xD0309C", Offset = "0xD0309C", VA = "0xD0309C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xD0314C", Offset = "0xD0314C", VA = "0xD0314C")]
	public QualitySetup()
	{
	}
}
[Token(Token = "0x200029C")]
public class ComboCreator : MonoBehaviour
{
	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ComboCreator Instance;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro _curentIndexText;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro _totalIndexText;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro _timeText;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BotAsset _meleeAsset;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BotCombo _curentCombo;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _timeDelta;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ComboItemUI _comboItemsUI;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _panel;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _hider;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GenericButton _show;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GenericButton _hide;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GenericButton _addItem;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GenericButton _removeItem;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GenericButton _nextItem;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GenericButton _prevItem;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GenericButton _addTime;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GenericButton _remTime;

	[Token(Token = "0x170000A7")]
	public int Index
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xD03154", Offset = "0xD03154", VA = "0xD03154")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xD0315C", Offset = "0xD0315C", VA = "0xD0315C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public BotCombo CurentCombo
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xD03164", Offset = "0xD03164", VA = "0xD03164")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xD0316C", Offset = "0xD0316C", VA = "0xD0316C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xD03238", Offset = "0xD03238", VA = "0xD03238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xD03814", Offset = "0xD03814", VA = "0xD03814")]
	private void Hide(VRButton button)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xD0386C", Offset = "0xD0386C", VA = "0xD0386C")]
	private void Show(VRButton button)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xD038C4", Offset = "0xD038C4", VA = "0xD038C4")]
	private void Add(VRButton button)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xD03A68", Offset = "0xD03A68", VA = "0xD03A68")]
	private void Remove(VRButton button)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xD03C88", Offset = "0xD03C88", VA = "0xD03C88")]
	private void NextItem(VRButton button)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xD03DC8", Offset = "0xD03DC8", VA = "0xD03DC8")]
	private void PrevItem(VRButton button)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xD03F08", Offset = "0xD03F08", VA = "0xD03F08")]
	public void SetNewParam(Direction direction, Obstacle.Type type)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xD03F6C", Offset = "0xD03F6C", VA = "0xD03F6C")]
	private void AddTime(VRButton button)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xD03FDC", Offset = "0xD03FDC", VA = "0xD03FDC")]
	private void RemTime(VRButton button)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xD04058", Offset = "0xD04058", VA = "0xD04058")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xD0405C", Offset = "0xD0405C", VA = "0xD0405C")]
	public ComboCreator()
	{
	}
}
[Token(Token = "0x200029D")]
public class ComboItemUI : MonoBehaviour
{
	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro _dirText;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro _typeText;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Direction _direction;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Obstacle.Type _type;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GenericButton _nextDirection;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GenericButton _prevDirection;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GenericButton _nextType;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GenericButton _prevType;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int Index;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xD04064", Offset = "0xD04064", VA = "0xD04064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xD03B9C", Offset = "0xD03B9C", VA = "0xD03B9C")]
	public void UpdateInfo(Direction direction, Obstacle.Type type)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xD0431C", Offset = "0xD0431C", VA = "0xD0431C")]
	private void NextDirection(VRButton button)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xD044A0", Offset = "0xD044A0", VA = "0xD044A0")]
	private void PrevDirection(VRButton button)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xD04614", Offset = "0xD04614", VA = "0xD04614")]
	private void NextType(VRButton button)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xD04788", Offset = "0xD04788", VA = "0xD04788")]
	private void PrevType(VRButton button)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xD0490C", Offset = "0xD0490C", VA = "0xD0490C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xD04910", Offset = "0xD04910", VA = "0xD04910")]
	public ComboItemUI()
	{
	}
}
[Token(Token = "0x200029E")]
public class Borders : MonoBehaviour
{
	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Borders Instance;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _player;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BordersSettings _settings;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BordersSettings _settingsBeat;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _height;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _HDRintensity;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Line _drawerPZ;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Line _drawerAZ;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Line _drawerHZ;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform prefabLine;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> _playerZonePoints;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> _playerAtackPoints;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> _playerHotePoints;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool borders;

	[Token(Token = "0x170000A9")]
	public BordersSettings Settings
	{
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xD04918", Offset = "0xD04918", VA = "0xD04918")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AA")]
	public float BladeDist
	{
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xD04920", Offset = "0xD04920", VA = "0xD04920")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AB")]
	public float BeatDist
	{
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xD04944", Offset = "0xD04944", VA = "0xD04944")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xD04968", Offset = "0xD04968", VA = "0xD04968")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xD04DAC", Offset = "0xD04DAC", VA = "0xD04DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xD04E18", Offset = "0xD04E18", VA = "0xD04E18")]
	public void Show()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xD04E10", Offset = "0xD04E10", VA = "0xD04E10")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xD04F10", Offset = "0xD04F10", VA = "0xD04F10")]
	public void ShowMove(bool state)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xD04E20", Offset = "0xD04E20", VA = "0xD04E20")]
	public void ShowBorders(bool state)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xD04F1C", Offset = "0xD04F1C", VA = "0xD04F1C")]
	public void CheckBorders()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xD04F80", Offset = "0xD04F80", VA = "0xD04F80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xD04FA0", Offset = "0xD04FA0", VA = "0xD04FA0")]
	private void DrawPlayerZone()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xD05304", Offset = "0xD05304", VA = "0xD05304")]
	private void DrawAtackZone()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xD05678", Offset = "0xD05678", VA = "0xD05678")]
	private void DrawHoteZone()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xD058E4", Offset = "0xD058E4", VA = "0xD058E4")]
	public Vector3 Cros(float z, int side, float offcet = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xD05A78", Offset = "0xD05A78", VA = "0xD05A78")]
	public Vector3 Cros(Transform spawnPoint, float z, int side, float offset = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xD05C08", Offset = "0xD05C08", VA = "0xD05C08")]
	public Vector3 CrosBeat(float z, int side, float offcet = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xD05D9C", Offset = "0xD05D9C", VA = "0xD05D9C")]
	public Vector3 CrosBeat(Transform spawnPoint, float z, int side, float offset = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xD05FB4", Offset = "0xD05FB4", VA = "0xD05FB4")]
	public float CrosZ(string border, float offcet = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xD060D8", Offset = "0xD060D8", VA = "0xD060D8")]
	public float CrosZ(Transform spawnPoint, string border, float offcet = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xD06248", Offset = "0xD06248", VA = "0xD06248")]
	public float CrosZBeat(string border, float offcet = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xD0636C", Offset = "0xD0636C", VA = "0xD0636C")]
	public float CrosZBeat(Transform spawnPoint, string border, float offcet = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xD064DC", Offset = "0xD064DC", VA = "0xD064DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xD06880", Offset = "0xD06880", VA = "0xD06880")]
	public Borders()
	{
	}
}
[Token(Token = "0x200029F")]
public class EditorCursor : ViveCursor
{
	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xD07960", Offset = "0xD07960", VA = "0xD07960", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xD07BA8", Offset = "0xD07BA8", VA = "0xD07BA8", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xD07BAC", Offset = "0xD07BAC", VA = "0xD07BAC")]
	public EditorCursor()
	{
	}
}
[Token(Token = "0x20002A0")]
public class FistAnimationController : Squeezer
{
	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator anim;

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xD07C1C", Offset = "0xD07C1C", VA = "0xD07C1C", Slot = "5")]
	protected override void Set(float state)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xD07C98", Offset = "0xD07C98", VA = "0xD07C98")]
	public FistAnimationController()
	{
	}
}
[Token(Token = "0x20002A1")]
public class HandController : HandControllerBase
{
	[Token(Token = "0x20002A2")]
	[CompilerGenerated]
	private sealed class <StopVibrationProcess>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandController <>4__this;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _vibrationLenght;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xD089C0", Offset = "0xD089C0", VA = "0xD089C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xD08A08", Offset = "0xD08A08", VA = "0xD08A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xD083C4", Offset = "0xD083C4", VA = "0xD083C4")]
		[DebuggerHidden]
		public <StopVibrationProcess>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xD08894", Offset = "0xD08894", VA = "0xD08894", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xD08898", Offset = "0xD08898", VA = "0xD08898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xD089C8", Offset = "0xD089C8", VA = "0xD089C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponSwitcher weaponSwitcher;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VibrationSettings baseVibrationSettings;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VibrationSettings currentVibrationSettings;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VibrationSettings zeroVibrationSettings;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve lastPosCurve;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] lastPos;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] dt;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 vector;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<float> OnSqueeze;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float vibroTimeLeft;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public bool fist;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool shortVibration;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xD07CA8", Offset = "0xD07CA8", VA = "0xD07CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xD07E9C", Offset = "0xD07E9C", VA = "0xD07E9C")]
	private void SetSqueeze(float state)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xD07EB8", Offset = "0xD07EB8", VA = "0xD07EB8", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xD07F54", Offset = "0xD07F54", VA = "0xD07F54", Slot = "5")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xD08234", Offset = "0xD08234", VA = "0xD08234")]
	public void SimpleVibration()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xD0829C", Offset = "0xD0829C", VA = "0xD0829C")]
	public void KnockVibrition()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xD082D4", Offset = "0xD082D4", VA = "0xD082D4")]
	public void DinVibrition()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xD0826C", Offset = "0xD0826C", VA = "0xD0826C")]
	public void SoftVibrition(float _vibroTime = 0.3f)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xD08390", Offset = "0xD08390", VA = "0xD08390")]
	public void StrongVibration()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xD0830C", Offset = "0xD0830C", VA = "0xD0830C")]
	[IteratorStateMachine(typeof(<StopVibrationProcess>d__21))]
	private IEnumerator StopVibrationProcess(float _vibrationLenght)
	{
		return null;
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xD083EC", Offset = "0xD083EC", VA = "0xD083EC")]
	public void Vibration(float frequency, float amplitude)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xD0849C", Offset = "0xD0849C", VA = "0xD0849C")]
	public Vector3 GetVelocityVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xD084A8", Offset = "0xD084A8", VA = "0xD084A8")]
	public Vector3 GetLastVelocityVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xD0850C", Offset = "0xD0850C", VA = "0xD0850C")]
	public Vector3 GetLastPoint(int number)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xD08568", Offset = "0xD08568", VA = "0xD08568")]
	public bool CheckLastMotion(Vector3 lastPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xD085FC", Offset = "0xD085FC", VA = "0xD085FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xD087E8", Offset = "0xD087E8", VA = "0xD087E8")]
	public HandController()
	{
	}
}
[Token(Token = "0x20002A3")]
public class HandControllerBase : MonoBehaviour
{
	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandType handType;

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xD07F50", Offset = "0xD07F50", VA = "0xD07F50", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xD08230", Offset = "0xD08230", VA = "0xD08230", Slot = "5")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xD0888C", Offset = "0xD0888C", VA = "0xD0888C")]
	public HandControllerBase()
	{
	}
}
[Token(Token = "0x20002A4")]
public class HandTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandController controller;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Blade blade;

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xD08A10", Offset = "0xD08A10", VA = "0xD08A10")]
	public HandTrigger()
	{
	}
}
[Token(Token = "0x20002A5")]
public class HeadTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Collider> OnHitted;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool invulnerability;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float colliderRadius;

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xD08A18", Offset = "0xD08A18", VA = "0xD08A18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xD08A78", Offset = "0xD08A78", VA = "0xD08A78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xD08CF0", Offset = "0xD08CF0", VA = "0xD08CF0")]
	private void Vulnerability()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xD08CF8", Offset = "0xD08CF8", VA = "0xD08CF8")]
	public HeadTrigger()
	{
	}
}
[Token(Token = "0x20002A6")]
public class HelmetPosition : MonoBehaviour
{
	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HelmetPosition Instance;

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xD08D0C", Offset = "0xD08D0C", VA = "0xD08D0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xD08DD8", Offset = "0xD08DD8", VA = "0xD08DD8")]
	public HelmetPosition()
	{
	}
}
[Token(Token = "0x20002A7")]
public class LevelEffect : MonoBehaviour
{
	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelEffectStruct[] levelEffects;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion startRot;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject curEffect;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xD08DE0", Offset = "0xD08DE0", VA = "0xD08DE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xD08E10", Offset = "0xD08E10", VA = "0xD08E10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xD08FCC", Offset = "0xD08FCC", VA = "0xD08FCC")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xD09174", Offset = "0xD09174", VA = "0xD09174")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xD09204", Offset = "0xD09204", VA = "0xD09204")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xD092AC", Offset = "0xD092AC", VA = "0xD092AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xD09370", Offset = "0xD09370", VA = "0xD09370")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xD09434", Offset = "0xD09434", VA = "0xD09434")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xD095F0", Offset = "0xD095F0", VA = "0xD095F0")]
	public LevelEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A8")]
public struct LevelEffectStruct
{
	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int idLevel;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject effect;
}
[Token(Token = "0x20002A9")]
public class LookPointProjection : MonoBehaviour
{
	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _lookPointOrigin;

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xD095F8", Offset = "0xD095F8", VA = "0xD095F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xD095FC", Offset = "0xD095FC", VA = "0xD095FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xD09668", Offset = "0xD09668", VA = "0xD09668")]
	public LookPointProjection()
	{
	}
}
[Token(Token = "0x20002AA")]
public class OverviewIndicator : MonoBehaviour
{
	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform offset;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xD09670", Offset = "0xD09670", VA = "0xD09670")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xD09678", Offset = "0xD09678", VA = "0xD09678")]
	public void SetAlpha(float value)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xD096FC", Offset = "0xD096FC", VA = "0xD096FC")]
	public OverviewIndicator()
	{
	}
}
[Token(Token = "0x20002AB")]
public class OverviewSystem : MonoBehaviour
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float sphereRadius;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject indicator;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<EnemyShooter> shooters;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fovAngle;

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xD09704", Offset = "0xD09704", VA = "0xD09704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xD09708", Offset = "0xD09708", VA = "0xD09708")]
	public void AddShooter(EnemyShooter shooter)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xD098B8", Offset = "0xD098B8", VA = "0xD098B8")]
	public void RemoveShooter(EnemyShooter shooter)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xD09960", Offset = "0xD09960", VA = "0xD09960")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xD0A044", Offset = "0xD0A044", VA = "0xD0A044")]
	public OverviewSystem()
	{
	}
}
[Token(Token = "0x20002AC")]
public class Player : MonoBehaviour
{
	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Player _instance;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform basePoint;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerMover mover;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerUI ui;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerSoundController soundController;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnDamage;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<string> OnDamageName;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action OnPlayerDead;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HeadTrigger headTrigger;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RicochetSystem ricochetSystem;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OverviewSystem overviewSystem;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject recCam;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Volume volume;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UniversalRendererData rendererData;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public WeaponDistance weaponDistance;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public DodgeUX leftDodgeArrow;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public DodgeUX rightDodgeArrow;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public DodgeUX downDodgeArrow;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool isLevelEditor;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve comicsParallaxCurve;

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xD0A0D8", Offset = "0xD0A0D8", VA = "0xD0A0D8", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xD0A48C", Offset = "0xD0A48C", VA = "0xD0A48C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xD0A490", Offset = "0xD0A490", VA = "0xD0A490")]
	protected void RecCam()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xD0A4B0", Offset = "0xD0A4B0", VA = "0xD0A4B0")]
	protected void Reset()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xD0A590", Offset = "0xD0A590", VA = "0xD0A590", Slot = "6")]
	public virtual void Damaged(string _damager)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xD0A954", Offset = "0xD0A954", VA = "0xD0A954")]
	private void HealthToVolume(int lastLives, int lives)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xD0AA30", Offset = "0xD0AA30", VA = "0xD0AA30")]
	public void SetVolume()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xD0A524", Offset = "0xD0A524", VA = "0xD0A524")]
	public void ResetVolume()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xD0AA14", Offset = "0xD0AA14", VA = "0xD0AA14")]
	private void SetVolume(bool state, float value)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xD0AAB0", Offset = "0xD0AAB0", VA = "0xD0AAB0")]
	public void DodgeArrow(HasDodgeIndicator.DodgeSide side)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xD0AAFC", Offset = "0xD0AAFC", VA = "0xD0AAFC", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xD0AD88", Offset = "0xD0AD88", VA = "0xD0AD88")]
	public Player()
	{
	}
}
[Token(Token = "0x20002AD")]
public class PlayerFallFromWallJump : MotionChecker
{
	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform playerOrienatationPoint1;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform playerOrienatationPoint2;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform fallPoint;

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xD0AD90", Offset = "0xD0AD90", VA = "0xD0AD90", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xD0AF10", Offset = "0xD0AF10", VA = "0xD0AF10")]
	public PlayerFallFromWallJump()
	{
	}
}
[Token(Token = "0x20002AE")]
public class PlayerMover : MonoBehaviour
{
	[Token(Token = "0x20002AF")]
	[CompilerGenerated]
	private sealed class <GravityJumpProcess>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float v;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float a;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float g;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxHeightZ;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform endPoint;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__2;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <startY>5__3;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <lastMoveVector>5__4;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <playerY>5__5;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <lastPos>5__6;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xD0D168", Offset = "0xD0D168", VA = "0xD0D168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0xD0D1B0", Offset = "0xD0D1B0", VA = "0xD0D1B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xD0C118", Offset = "0xD0C118", VA = "0xD0C118")]
		[DebuggerHidden]
		public <GravityJumpProcess>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xD0CAD4", Offset = "0xD0CAD4", VA = "0xD0CAD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xD0CAD8", Offset = "0xD0CAD8", VA = "0xD0CAD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xD0D170", Offset = "0xD0D170", VA = "0xD0D170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B0")]
	[CompilerGenerated]
	private sealed class <JumpUpProcess>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xD0D30C", Offset = "0xD0D30C", VA = "0xD0D30C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xD0D354", Offset = "0xD0D354", VA = "0xD0D354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xD0C294", Offset = "0xD0C294", VA = "0xD0C294")]
		[DebuggerHidden]
		public <JumpUpProcess>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xD0D1B8", Offset = "0xD0D1B8", VA = "0xD0D1B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xD0D1BC", Offset = "0xD0D1BC", VA = "0xD0D1BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xD0D314", Offset = "0xD0D314", VA = "0xD0D314", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B1")]
	[CompilerGenerated]
	private sealed class <JumpDownProcess>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <v>5__2;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xD0D64C", Offset = "0xD0D64C", VA = "0xD0D64C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xD0D694", Offset = "0xD0D694", VA = "0xD0D694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xD0C2BC", Offset = "0xD0C2BC", VA = "0xD0C2BC")]
		[DebuggerHidden]
		public <JumpDownProcess>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xD0D35C", Offset = "0xD0D35C", VA = "0xD0D35C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xD0D360", Offset = "0xD0D360", VA = "0xD0D360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xD0D654", Offset = "0xD0D654", VA = "0xD0D654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B2")]
	[CompilerGenerated]
	private sealed class <FallFromWallProcess>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <tReset>5__2;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__3;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xD0D870", Offset = "0xD0D870", VA = "0xD0D870", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xD0D8B8", Offset = "0xD0D8B8", VA = "0xD0D8B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xD0C43C", Offset = "0xD0C43C", VA = "0xD0C43C")]
		[DebuggerHidden]
		public <FallFromWallProcess>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xD0D69C", Offset = "0xD0D69C", VA = "0xD0D69C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xD0D6A0", Offset = "0xD0D6A0", VA = "0xD0D6A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xD0D878", Offset = "0xD0D878", VA = "0xD0D878", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B3")]
	[CompilerGenerated]
	private sealed class <JumpProcess>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <c>5__2;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <posV>5__3;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startP>5__4;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <startR>5__5;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <rotV>5__6;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xD0DCB8", Offset = "0xD0DCB8", VA = "0xD0DCB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xD0DD00", Offset = "0xD0DD00", VA = "0xD0DD00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xD0C464", Offset = "0xD0C464", VA = "0xD0C464")]
		[DebuggerHidden]
		public <JumpProcess>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xD0D8C0", Offset = "0xD0D8C0", VA = "0xD0D8C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xD0D8C4", Offset = "0xD0D8C4", VA = "0xD0D8C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xD0DCC0", Offset = "0xD0DCC0", VA = "0xD0DCC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B4")]
	[CompilerGenerated]
	private sealed class <WallRunProcess>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <fallP>5__2;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <fallTime>5__4;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <g>5__5;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <vy>5__6;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0xD0DF3C", Offset = "0xD0DF3C", VA = "0xD0DF3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xD0DF84", Offset = "0xD0DF84", VA = "0xD0DF84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xD0C588", Offset = "0xD0C588", VA = "0xD0C588")]
		[DebuggerHidden]
		public <WallRunProcess>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xD0DD08", Offset = "0xD0DD08", VA = "0xD0DD08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xD0DD0C", Offset = "0xD0DD0C", VA = "0xD0DD0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xD0DF44", Offset = "0xD0DF44", VA = "0xD0DF44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<float> OnPlayerSpeed;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startSpeed;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform basePoint;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform trackingSpace;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform head;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform underHead;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform underHeadZ;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform leftHand;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform rightHand;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 leftHandLastPos;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 rightHandLastPos;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 startPos;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 startRot;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 jumpPos;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 jumpRot;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve jumpCurve;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float jumpUpSpeed;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float jumpDownSpeed;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float jumpSpeed;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 moveVector;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected float fakeMoveSpeed;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject footSteps;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject runFootSteps;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ParticleSystemController forceCircle;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ParticleSystemController speedLines;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject landingEffectPrefab;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vignette vignette;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool landEffect;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Action<bool> OnMove;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform[] calibrateParts;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool jumpProcess;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool wallRun;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 lastPos;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 vector;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform fallPoint;

	[Token(Token = "0x170000AE")]
	public bool isMove
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xD0AF18", Offset = "0xD0AF18", VA = "0xD0AF18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xD0AF28", Offset = "0xD0AF28", VA = "0xD0AF28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xD0B0AC", Offset = "0xD0B0AC", VA = "0xD0B0AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xD0B3EC", Offset = "0xD0B3EC", VA = "0xD0B3EC")]
	public void StartPosition()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xD0B420", Offset = "0xD0B420", VA = "0xD0B420")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xD0B4D0", Offset = "0xD0B4D0", VA = "0xD0B4D0")]
	public void Calibrate()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xD0B568", Offset = "0xD0B568", VA = "0xD0B568")]
	public void Calibrate(float calibrationParam)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xD0B694", Offset = "0xD0B694", VA = "0xD0B694")]
	private void StartMove(Transform movePoint)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xD0B9A8", Offset = "0xD0B9A8", VA = "0xD0B9A8")]
	public void StopMove()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xD0B004", Offset = "0xD0B004", VA = "0xD0B004")]
	private void SetSpeed(float number)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xD0B9E4", Offset = "0xD0B9E4", VA = "0xD0B9E4")]
	public bool PlayerHeadPose()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xD0BAC0", Offset = "0xD0BAC0", VA = "0xD0BAC0")]
	public void ShowForceCircle()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xD0BAEC", Offset = "0xD0BAEC", VA = "0xD0BAEC")]
	public void HideForceCircle()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xD0BB18", Offset = "0xD0BB18", VA = "0xD0BB18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xD0BC34", Offset = "0xD0BC34", VA = "0xD0BC34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xD0BCD4", Offset = "0xD0BCD4", VA = "0xD0BCD4")]
	public Vector3 GetVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xD0BCE4", Offset = "0xD0BCE4", VA = "0xD0BCE4", Slot = "4")]
	protected virtual void SetFakeMoveSpeed(bool run)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xD0BDE0", Offset = "0xD0BDE0", VA = "0xD0BDE0")]
	public void GravityJump(Transform maxHeightPoint, Transform endPoint, bool run)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xD0C060", Offset = "0xD0C060", VA = "0xD0C060")]
	[IteratorStateMachine(typeof(<GravityJumpProcess>d__54))]
	private IEnumerator GravityJumpProcess(float g, float v, float a, float maxHeightZ, Transform endPoint)
	{
		return null;
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xD0C140", Offset = "0xD0C140", VA = "0xD0C140")]
	public void Jump(Vector3 point)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xD0C1AC", Offset = "0xD0C1AC", VA = "0xD0C1AC")]
	[IteratorStateMachine(typeof(<JumpUpProcess>d__56))]
	private IEnumerator JumpUpProcess()
	{
		return null;
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xD0C220", Offset = "0xD0C220", VA = "0xD0C220")]
	[IteratorStateMachine(typeof(<JumpDownProcess>d__57))]
	private IEnumerator JumpDownProcess()
	{
		return null;
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xD0C2E4", Offset = "0xD0C2E4", VA = "0xD0C2E4")]
	public bool CheckLanding()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xD0C318", Offset = "0xD0C318", VA = "0xD0C318")]
	public void Jump(Vector3 jumpPos, Vector3 jumpRot, Transform fallPoint)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xD0AEB0", Offset = "0xD0AEB0", VA = "0xD0AEB0")]
	public void Fall(Vector3 jumpPos1, Vector3 jumpPos2, Vector3 jumpRot1, Transform fallPoint1)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xD0C3C8", Offset = "0xD0C3C8", VA = "0xD0C3C8")]
	[IteratorStateMachine(typeof(<FallFromWallProcess>d__61))]
	private IEnumerator FallFromWallProcess(Vector3 jumpPos2)
	{
		return null;
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xD0C354", Offset = "0xD0C354", VA = "0xD0C354")]
	[IteratorStateMachine(typeof(<JumpProcess>d__63))]
	private IEnumerator JumpProcess()
	{
		return null;
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xD0C48C", Offset = "0xD0C48C", VA = "0xD0C48C")]
	private void CheckWallRun()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xD0C514", Offset = "0xD0C514", VA = "0xD0C514")]
	[IteratorStateMachine(typeof(<WallRunProcess>d__65))]
	private IEnumerator WallRunProcess()
	{
		return null;
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xD0BD10", Offset = "0xD0BD10", VA = "0xD0BD10")]
	public void Move(bool move, Transform movePoint)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xD0C5B0", Offset = "0xD0C5B0", VA = "0xD0C5B0")]
	public void ShowSpeedLinesUnlimited()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xD0C608", Offset = "0xD0C608", VA = "0xD0C608")]
	public void SetSpeedLinesVector(Vector3 moveVector)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xD0B4B4", Offset = "0xD0B4B4", VA = "0xD0B4B4")]
	public void StopSpeedLines()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xD0C658", Offset = "0xD0C658", VA = "0xD0C658")]
	public bool HandCodirected(Vector3 arrowsDirection, bool isRightHand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xD0C84C", Offset = "0xD0C84C", VA = "0xD0C84C")]
	public float GetMaxSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xD0C854", Offset = "0xD0C854", VA = "0xD0C854")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xD0CA74", Offset = "0xD0CA74", VA = "0xD0CA74")]
	public PlayerMover()
	{
	}
}
[Token(Token = "0x20002B5")]
public class PlayerPlane : MonoBehaviour
{
	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerPlane Instance;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 _aspect;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Transform> _frustumPointsBase;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _distanceFromPlayer;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _fieldOfView;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _pointTrashold;

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xD0DF8C", Offset = "0xD0DF8C", VA = "0xD0DF8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xD0E058", Offset = "0xD0E058", VA = "0xD0E058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xD0E104", Offset = "0xD0E104", VA = "0xD0E104")]
	public void CalculateFrustumPlane()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xD0E220", Offset = "0xD0E220", VA = "0xD0E220")]
	public void Projection(Transform pointForProjection, Transform pointInScreen, Vector3 pointProjection)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xD0EB08", Offset = "0xD0EB08", VA = "0xD0EB08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xD0EB0C", Offset = "0xD0EB0C", VA = "0xD0EB0C")]
	public PlayerPlane()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B6")]
public struct TransformFieldOfView
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 Position;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion Rotation;

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xD0EB28", Offset = "0xD0EB28", VA = "0xD0EB28")]
	public TransformFieldOfView(Vector3 position, Quaternion rotation)
	{
	}
}
[Token(Token = "0x20002B7")]
public class PlayerSoundController : MonoBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip hitArrow;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip cutSound;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip cutSoundBeat;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip cutSoundNotBeat;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] shotSounds;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] tommyGunShoots;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] tommyGunStop;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip boxHitSound;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip missSound;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip grabSound;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip kekSound;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip ricochetSound;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioClip ricochetSoundDis;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip grapplingShootSound;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip grapplingBackSound;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip shotgunShotSound;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip reload1Sound;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip reload2Sound;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip levelLoadSound;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("UI")]
	public AudioClip hover;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip unHover;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip push;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Heal/Damage")]
	public AudioSource heal_damage_source;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip[] damageSounds;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip healSound;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("GrabWeapon")]
	public AudioClip bladeGrab;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip pistolGrab;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip tommyGunGrab;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip knucklesGrab;

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xD0EB3C", Offset = "0xD0EB3C", VA = "0xD0EB3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xD0ECCC", Offset = "0xD0ECCC", VA = "0xD0ECCC")]
	public void SetBeatSourse()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xD0EDB8", Offset = "0xD0EDB8", VA = "0xD0EDB8")]
	public void SetCommonBeatSourse()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xD0EEA4", Offset = "0xD0EEA4", VA = "0xD0EEA4")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xD0EF1C", Offset = "0xD0EF1C", VA = "0xD0EF1C")]
	public void Cut()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xD0EF5C", Offset = "0xD0EF5C", VA = "0xD0EF5C")]
	public void CutCustom(int cut)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xD0EFD4", Offset = "0xD0EFD4", VA = "0xD0EFD4")]
	public void BoxHit()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xD0F018", Offset = "0xD0F018", VA = "0xD0F018")]
	public void Miss()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xD0F05C", Offset = "0xD0F05C", VA = "0xD0F05C")]
	public void Heal()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xD0A8FC", Offset = "0xD0A8FC", VA = "0xD0A8FC")]
	public void PlayerDamage()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xD0F080", Offset = "0xD0F080", VA = "0xD0F080")]
	public void Grab()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xD0EEE4", Offset = "0xD0EEE4", VA = "0xD0EEE4")]
	private void RandomPitch()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xD0F0C4", Offset = "0xD0F0C4", VA = "0xD0F0C4")]
	public AudioClip GrabWeaponSound(HandWeapon type)
	{
		return null;
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xD0F114", Offset = "0xD0F114", VA = "0xD0F114")]
	public void HoverButton()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xD0F14C", Offset = "0xD0F14C", VA = "0xD0F14C")]
	public void UnHoverButton()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xD0F184", Offset = "0xD0F184", VA = "0xD0F184")]
	public void LockButton()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xD0F1BC", Offset = "0xD0F1BC", VA = "0xD0F1BC")]
	public void PushButton()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xD0F1F4", Offset = "0xD0F1F4", VA = "0xD0F1F4")]
	public void Kek()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xD0F234", Offset = "0xD0F234", VA = "0xD0F234")]
	public void Ricochet()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xD0F2D4", Offset = "0xD0F2D4", VA = "0xD0F2D4")]
	public void GrapplingShoot()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xD0F314", Offset = "0xD0F314", VA = "0xD0F314")]
	public void GrapplingBackSound()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xD0F354", Offset = "0xD0F354", VA = "0xD0F354")]
	public void LevelLoadSound()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xD0F394", Offset = "0xD0F394", VA = "0xD0F394")]
	public void AudioListenerVolume(float volume)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xD0F39C", Offset = "0xD0F39C", VA = "0xD0F39C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xD0F52C", Offset = "0xD0F52C", VA = "0xD0F52C")]
	public PlayerSoundController()
	{
	}
}
[Token(Token = "0x20002B8")]
public class PlayerSoundControllerBeat : MonoBehaviour
{
	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerSoundControllerBeat Instance;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip CutCommon;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip CutCustom;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip KnucklesCommon;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip KnucklesCustom;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip RevolverCommon;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip RevolverCustom;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip RicoshetCommon;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip RicoshetCustom;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip TommyGunCommon;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip TommyGunCustom;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xD0F534", Offset = "0xD0F534", VA = "0xD0F534")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xD0F600", Offset = "0xD0F600", VA = "0xD0F600")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xD0F604", Offset = "0xD0F604", VA = "0xD0F604")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xD0F608", Offset = "0xD0F608", VA = "0xD0F608")]
	public PlayerSoundControllerBeat()
	{
	}
}
[Token(Token = "0x20002B9")]
public class PlayerUI : MonoBehaviour
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int> OnComboChanged;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator fade;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image loadingBar;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LivesUI livesUI;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro score;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 scoreStartScale;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float scoreScaleFactor;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro multis;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 multisStartScale;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float multisScaleFactor;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform path;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform hero;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float start;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float way;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 startPoint;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float lengthTrack;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameController gameController;

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xD0F610", Offset = "0xD0F610", VA = "0xD0F610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xD0FA78", Offset = "0xD0FA78", VA = "0xD0FA78")]
	public void StartSet()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xD0FD5C", Offset = "0xD0FD5C", VA = "0xD0FD5C")]
	public void StopSet()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xD0F9F0", Offset = "0xD0F9F0", VA = "0xD0F9F0")]
	public void ReSet()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xD0FF58", Offset = "0xD0FF58", VA = "0xD0FF58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xD10014", Offset = "0xD10014", VA = "0xD10014")]
	private void Track()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xD100E4", Offset = "0xD100E4", VA = "0xD100E4")]
	public void SetLives(int lastLivesNumber, int livesNumber)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xD10104", Offset = "0xD10104", VA = "0xD10104")]
	public void SetHeal(int _newValue)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xD101A4", Offset = "0xD101A4", VA = "0xD101A4")]
	public void SetScore(int number)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xD10294", Offset = "0xD10294", VA = "0xD10294")]
	public void SetMulti(int number)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xD1040C", Offset = "0xD1040C", VA = "0xD1040C")]
	public void Fade(bool state)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xD10468", Offset = "0xD10468", VA = "0xD10468")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xD108D8", Offset = "0xD108D8", VA = "0xD108D8")]
	public PlayerUI()
	{
	}
}
[Token(Token = "0x20002BA")]
public class PlayerWatcher : MonoBehaviour
{
	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer _rend;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask _hitLayer;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _lookAt;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _lookBot;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _watcherLookPoint;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _watcherBot;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _fieldOfView;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _angleToInfinity;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _power;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _p0;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _p1;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _p0Sharp;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform _p1Sharp;

	[Token(Token = "0x170000BB")]
	public Quaternion WatcherLookPointQuaternion
	{
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xD108E0", Offset = "0xD108E0", VA = "0xD108E0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000BC")]
	public Quaternion WatcherBotQuaternion
	{
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xD108FC", Offset = "0xD108FC", VA = "0xD108FC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xD10918", Offset = "0xD10918", VA = "0xD10918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xD1091C", Offset = "0xD1091C", VA = "0xD1091C")]
	[ContextMenu("ShowHide tracer")]
	public void ShowHideTracer()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xD10AFC", Offset = "0xD10AFC", VA = "0xD10AFC")]
	public float GetPowerForBot(Transform lookBot)
	{
		return default(float);
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xD10DCC", Offset = "0xD10DCC", VA = "0xD10DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xD11134", Offset = "0xD11134", VA = "0xD11134")]
	public PlayerWatcher()
	{
	}
}
[Token(Token = "0x20002BB")]
public class RicochetSystem : MonoBehaviour
{
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<EnemyShooter_Ricochet> shootersR;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<EnemyShooter_Ricochet> shootersL;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightTrigger;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leftTrigger;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float minV;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxV;

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xD11148", Offset = "0xD11148", VA = "0xD11148")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xD1124C", Offset = "0xD1124C", VA = "0xD1124C")]
	private void ClearShooters()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xD112E8", Offset = "0xD112E8", VA = "0xD112E8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xD11468", Offset = "0xD11468", VA = "0xD11468")]
	public void Check(Collider other, RicochetTrigger trigger)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xD11FF0", Offset = "0xD11FF0", VA = "0xD11FF0")]
	public void StartSignaling(EnemyShooter_Ricochet shooter)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xD120D0", Offset = "0xD120D0", VA = "0xD120D0")]
	public void StopSignaling(EnemyShooter_Ricochet shooter)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xD12154", Offset = "0xD12154", VA = "0xD12154")]
	public void RockRicochet(bool isRight)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xD121CC", Offset = "0xD121CC", VA = "0xD121CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xD122D0", Offset = "0xD122D0", VA = "0xD122D0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xD122D4", Offset = "0xD122D4", VA = "0xD122D4")]
	public RicochetSystem()
	{
	}
}
[Token(Token = "0x20002BC")]
public class RicochetTrigger : MonoBehaviour
{
	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystemController sparks;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystemController rockSparks;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RicochetSystem ricochetSystem;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isRight;

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xD12398", Offset = "0xD12398", VA = "0xD12398")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xD123B4", Offset = "0xD123B4", VA = "0xD123B4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xD123D0", Offset = "0xD123D0", VA = "0xD123D0")]
	public RicochetTrigger()
	{
	}
}
[Token(Token = "0x20002BD")]
public class Squeezer : MonoBehaviour
{
	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandController handController;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xD123D8", Offset = "0xD123D8", VA = "0xD123D8", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xD07C94", Offset = "0xD07C94", VA = "0xD07C94", Slot = "5")]
	protected virtual void Set(float f)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xD124B0", Offset = "0xD124B0", VA = "0xD124B0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xD07CA0", Offset = "0xD07CA0", VA = "0xD07CA0")]
	public Squeezer()
	{
	}
}
[Token(Token = "0x20002BE")]
public class SubCameraController : MonoBehaviour
{
	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera refCam;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera dispCam;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float moveSpeed;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float rotationSpeed;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float t;

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xD12588", Offset = "0xD12588", VA = "0xD12588")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xD1262C", Offset = "0xD1262C", VA = "0xD1262C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xD12810", Offset = "0xD12810", VA = "0xD12810")]
	public SubCameraController()
	{
	}
}
[Token(Token = "0x20002BF")]
public class TransformOffset : MonoBehaviour
{
	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandController handController;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PosRot vive;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PosRot oculus;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PosRot oculusThrowSteam;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public PosRot knuckles;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PosRot pico;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public PosRot openXR;

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xD12820", Offset = "0xD12820", VA = "0xD12820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xD12868", Offset = "0xD12868", VA = "0xD12868", Slot = "4")]
	public virtual void SetOffsets(PosRot _offset)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xD128A4", Offset = "0xD128A4", VA = "0xD128A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xD128A8", Offset = "0xD128A8", VA = "0xD128A8")]
	public TransformOffset()
	{
	}
}
[Token(Token = "0x20002C0")]
public class UnderHeadPoint : MonoBehaviour
{
	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform head;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onlyZ;

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xD128B0", Offset = "0xD128B0", VA = "0xD128B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xD12918", Offset = "0xD12918", VA = "0xD12918")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xD129B8", Offset = "0xD129B8", VA = "0xD129B8")]
	public UnderHeadPoint()
	{
	}
}
[Token(Token = "0x20002C1")]
public class Vignette : MonoBehaviour
{
	[Token(Token = "0x20002C2")]
	[CompilerGenerated]
	private sealed class <DamageVignette>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vignette <>4__this;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xD14554", Offset = "0xD14554", VA = "0xD14554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xD1459C", Offset = "0xD1459C", VA = "0xD1459C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xD134CC", Offset = "0xD134CC", VA = "0xD134CC")]
		[DebuggerHidden]
		public <DamageVignette>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xD142A4", Offset = "0xD142A4", VA = "0xD142A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xD142A8", Offset = "0xD142A8", VA = "0xD142A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xD1455C", Offset = "0xD1455C", VA = "0xD1455C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C3")]
	[CompilerGenerated]
	private sealed class <BloodPulse>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vignette <>4__this;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <s>5__3;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0xD1476C", Offset = "0xD1476C", VA = "0xD1476C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0xD147B4", Offset = "0xD147B4", VA = "0xD147B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xD1376C", Offset = "0xD1376C", VA = "0xD1376C")]
		[DebuggerHidden]
		public <BloodPulse>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xD145A4", Offset = "0xD145A4", VA = "0xD145A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xD145A8", Offset = "0xD145A8", VA = "0xD145A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xD14774", Offset = "0xD14774", VA = "0xD14774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C4")]
	[CompilerGenerated]
	private sealed class <ShowVignetteInMenu>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vignette <>4__this;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float newPower;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xD14970", Offset = "0xD14970", VA = "0xD14970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0xD149B8", Offset = "0xD149B8", VA = "0xD149B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xD13A38", Offset = "0xD13A38", VA = "0xD13A38")]
		[DebuggerHidden]
		public <ShowVignetteInMenu>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xD147BC", Offset = "0xD147BC", VA = "0xD147BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xD147C0", Offset = "0xD147C0", VA = "0xD147C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xD14978", Offset = "0xD14978", VA = "0xD14978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C5")]
	[CompilerGenerated]
	private sealed class <DecreaseVignetteInMenu>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vignette <>4__this;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <q>5__2;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xD14AD8", Offset = "0xD14AD8", VA = "0xD14AD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0xD14B20", Offset = "0xD14B20", VA = "0xD14B20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xD13AD4", Offset = "0xD13AD4", VA = "0xD13AD4")]
		[DebuggerHidden]
		public <DecreaseVignetteInMenu>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xD149C0", Offset = "0xD149C0", VA = "0xD149C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xD149C4", Offset = "0xD149C4", VA = "0xD149C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xD14AE0", Offset = "0xD14AE0", VA = "0xD14AE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C6")]
	[CompilerGenerated]
	private sealed class <DecreaseProcess>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vignette <>4__this;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <q>5__2;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xD14C9C", Offset = "0xD14C9C", VA = "0xD14C9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xD14CE4", Offset = "0xD14CE4", VA = "0xD14CE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xD13AFC", Offset = "0xD13AFC", VA = "0xD13AFC")]
		[DebuggerHidden]
		public <DecreaseProcess>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xD14B28", Offset = "0xD14B28", VA = "0xD14B28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xD14B2C", Offset = "0xD14B2C", VA = "0xD14B2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xD14CA4", Offset = "0xD14CA4", VA = "0xD14CA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C7")]
	[CompilerGenerated]
	private sealed class <IncreaseProcess>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vignette <>4__this;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <q>5__2;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xD14EDC", Offset = "0xD14EDC", VA = "0xD14EDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xD14F24", Offset = "0xD14F24", VA = "0xD14F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xD13B24", Offset = "0xD13B24", VA = "0xD13B24")]
		[DebuggerHidden]
		public <IncreaseProcess>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xD14CEC", Offset = "0xD14CEC", VA = "0xD14CEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xD14CF0", Offset = "0xD14CF0", VA = "0xD14CF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xD14EE4", Offset = "0xD14EE4", VA = "0xD14EE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C8")]
	[CompilerGenerated]
	private sealed class <SmallDecreaseProcess>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vignette <>4__this;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <q>5__2;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0xD1507C", Offset = "0xD1507C", VA = "0xD1507C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xD150C4", Offset = "0xD150C4", VA = "0xD150C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xD13BD4", Offset = "0xD13BD4", VA = "0xD13BD4")]
		[DebuggerHidden]
		public <SmallDecreaseProcess>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xD14F2C", Offset = "0xD14F2C", VA = "0xD14F2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xD14F30", Offset = "0xD14F30", VA = "0xD14F30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xD15084", Offset = "0xD15084", VA = "0xD15084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Move")]
	[SerializeField]
	private GameObject vignetteObject;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float startVignette;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float vignetteChange;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	[SerializeField]
	private float vignettePower;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float increaseSpeed;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float decreaseSpeed;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float smallDecreaseSpeed;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float time;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float startMoveVignettePower;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve amount;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve inverseAmount;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer vignetteRend;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine coroutineMove;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 startScale;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Header("Blood")]
	private GameObject vignetteBlood;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float startBloodVignette;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float maxBloodVignette;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float chagnePulse;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float timePulse;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float curBloodPower;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshRenderer vignetteBloodRend;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine coroutineBloodPulse;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Damage")]
	public GameObject vignetteDamage;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Renderer VDRend;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float speedShow;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float speedHide;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color vdColor;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 vdScale;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool bloodVignetteActive;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool isActive;

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xD129C0", Offset = "0xD129C0", VA = "0xD129C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xD12A68", Offset = "0xD12A68", VA = "0xD12A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xD130CC", Offset = "0xD130CC", VA = "0xD130CC")]
	public void SetVignette()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xD13200", Offset = "0xD13200", VA = "0xD13200")]
	public void LivesChange(int lastLivesNumber, int livesNumber)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xD13204", Offset = "0xD13204", VA = "0xD13204")]
	private void Damage(int lastLivesNumber, int livesNumber)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xD133AC", Offset = "0xD133AC", VA = "0xD133AC")]
	public void Pain()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xD133D8", Offset = "0xD133D8", VA = "0xD133D8")]
	public void Revival()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xD13458", Offset = "0xD13458", VA = "0xD13458")]
	[IteratorStateMachine(typeof(<DamageVignette>d__37))]
	private IEnumerator DamageVignette()
	{
		return null;
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xD134F4", Offset = "0xD134F4", VA = "0xD134F4")]
	public void Blood(int before, int after)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xD136F8", Offset = "0xD136F8", VA = "0xD136F8")]
	[IteratorStateMachine(typeof(<BloodPulse>d__39))]
	private IEnumerator BloodPulse()
	{
		return null;
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xD13308", Offset = "0xD13308", VA = "0xD13308")]
	private float ChangeBloodVignettePower()
	{
		return default(float);
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xD13794", Offset = "0xD13794", VA = "0xD13794")]
	private void StopBloodVignette()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xD0C040", Offset = "0xD0C040", VA = "0xD0C040")]
	public void ShowMoveVignette()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xD0C5E8", Offset = "0xD0C5E8", VA = "0xD0C5E8")]
	public void HideMoveVignette()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xD1391C", Offset = "0xD1391C", VA = "0xD1391C")]
	public void ChangeVignettePower(float power)
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xD139B4", Offset = "0xD139B4", VA = "0xD139B4")]
	[IteratorStateMachine(typeof(<ShowVignetteInMenu>d__45))]
	private IEnumerator ShowVignetteInMenu(float newPower)
	{
		return null;
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xD13A60", Offset = "0xD13A60", VA = "0xD13A60")]
	[IteratorStateMachine(typeof(<DecreaseVignetteInMenu>d__46))]
	private IEnumerator DecreaseVignetteInMenu()
	{
		return null;
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xD138A8", Offset = "0xD138A8", VA = "0xD138A8")]
	[IteratorStateMachine(typeof(<DecreaseProcess>d__47))]
	private IEnumerator DecreaseProcess()
	{
		return null;
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xD13834", Offset = "0xD13834", VA = "0xD13834")]
	[IteratorStateMachine(typeof(<IncreaseProcess>d__48))]
	private IEnumerator IncreaseProcess()
	{
		return null;
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xD13B4C", Offset = "0xD13B4C", VA = "0xD13B4C")]
	private float GetMoveVignettePower()
	{
		return default(float);
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xD13B60", Offset = "0xD13B60", VA = "0xD13B60")]
	[IteratorStateMachine(typeof(<SmallDecreaseProcess>d__50))]
	private IEnumerator SmallDecreaseProcess()
	{
		return null;
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xD0C5CC", Offset = "0xD0C5CC", VA = "0xD0C5CC")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xD13BFC", Offset = "0xD13BFC", VA = "0xD13BFC")]
	private void EnableRend(bool state)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xD13C1C", Offset = "0xD13C1C", VA = "0xD13C1C")]
	private void StopMoveVignette()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xD13C68", Offset = "0xD13C68", VA = "0xD13C68")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xD12E88", Offset = "0xD12E88", VA = "0xD12E88")]
	private void AllVignetteStop()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xD13DB0", Offset = "0xD13DB0", VA = "0xD13DB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xD14288", Offset = "0xD14288", VA = "0xD14288")]
	public Vignette()
	{
	}
}
[Token(Token = "0x20002C9")]
public class ViveCursor : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	public enum AxisType
	{
		[Token(Token = "0x4000D74")]
		XAxis,
		[Token(Token = "0x4000D75")]
		ZAxis
	}

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ViveCursor _instance;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float thickness;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AxisType facingAxis;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool showCursor;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool isActive;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject pointer;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cursor;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnChangeHand;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<VRButton> OnHoverButton;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandController handRight;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform handRightCursor;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HandController handLeft;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform handLeftCursor;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public HandController currentHand;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Transform currentHandCursor;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 cursorScale;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float contactDistance;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform contactTarget;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material mat;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool triggerPressed;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public VRButton button;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public ILongHoldButton activeButton;

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xD150CC", Offset = "0xD150CC", VA = "0xD150CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xD15144", Offset = "0xD15144", VA = "0xD15144", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xD157C8", Offset = "0xD157C8", VA = "0xD157C8")]
	private void SetPointerTransform(float setLength, float setThicknes)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xD15958", Offset = "0xD15958", VA = "0xD15958")]
	public HandType GetCurrentHand()
	{
		return default(HandType);
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xD1563C", Offset = "0xD1563C", VA = "0xD1563C")]
	public void ChangeHandCursor(bool state, HandType handType)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xD15974", Offset = "0xD15974", VA = "0xD15974")]
	public void ActiveCursor(bool state, HandType handType)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xD07964", Offset = "0xD07964", VA = "0xD07964")]
	protected void MakeCursor()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xD159A0", Offset = "0xD159A0", VA = "0xD159A0")]
	private float GetBeamLength(bool bHit, RaycastHit hit)
	{
		return default(float);
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xD15C58", Offset = "0xD15C58", VA = "0xD15C58")]
	public void TryPushButton(bool state, HandType handType)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xD15DEC", Offset = "0xD15DEC", VA = "0xD15DEC")]
	private void PushButton()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xD15E3C", Offset = "0xD15E3C", VA = "0xD15E3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xD15FE4", Offset = "0xD15FE4", VA = "0xD15FE4")]
	private bool TriggerUnPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xD1562C", Offset = "0xD1562C", VA = "0xD1562C")]
	public void ResetCursor()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xD15994", Offset = "0xD15994", VA = "0xD15994")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xD15FEC", Offset = "0xD15FEC", VA = "0xD15FEC")]
	private void Visible(bool _state)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xD160B8", Offset = "0xD160B8", VA = "0xD160B8", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xD07BE4", Offset = "0xD07BE4", VA = "0xD07BE4")]
	public ViveCursor()
	{
	}
}
[Token(Token = "0x20002CB")]
public class Blade : MonoBehaviour
{
	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform bladePoint;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] fakeBlades;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] exFakeBlades;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPointPos;

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xD16564", Offset = "0xD16564", VA = "0xD16564")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xD16750", Offset = "0xD16750", VA = "0xD16750")]
	public Blade()
	{
	}
}
[Token(Token = "0x20002CC")]
public class BladeBehaviour : WeaponBehaviour
{
	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform blade;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform followPoint;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BzKnife bzKnife;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource source;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip bladeClip;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float speed;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxSpeed;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float drochFactor;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float dSpeed;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve curve;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro debug;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool paused;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Renderer rend;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystemController effects;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float showEffectFactor;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool effectsAdded;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float emFactor;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[Header("Sound Effect")]
	private AudioSource bladeSource;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float pitchMin;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private float pitchMax;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float interpolationSpeedPitch;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float interpolationSpeedVolume;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Transform bladeTarget;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float bladeFactor;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 lastTargetPosBlade;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float maxCurve;

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xD16758", Offset = "0xD16758", VA = "0xD16758")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xD16768", Offset = "0xD16768", VA = "0xD16768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xD16B58", Offset = "0xD16B58", VA = "0xD16B58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xD16BE0", Offset = "0xD16BE0", VA = "0xD16BE0")]
	public void SetBeatSourse()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xD16BE4", Offset = "0xD16BE4", VA = "0xD16BE4")]
	public void SetCommonBeatSourse()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xD16BE8", Offset = "0xD16BE8", VA = "0xD16BE8")]
	public void CutEffect()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xD16BEC", Offset = "0xD16BEC", VA = "0xD16BEC")]
	[ContextMenu("Process")]
	public void CutEffectCostil()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xD16C8C", Offset = "0xD16C8C", VA = "0xD16C8C")]
	private void Paused()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xD16C98", Offset = "0xD16C98", VA = "0xD16C98")]
	private void UnPaused()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xD16CA0", Offset = "0xD16CA0", VA = "0xD16CA0", Slot = "4")]
	public override void LateUpdate()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xD16FF0", Offset = "0xD16FF0", VA = "0xD16FF0", Slot = "5")]
	public override void OtherEffect(float e)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xD170D8", Offset = "0xD170D8", VA = "0xD170D8")]
	public void SoundEffect()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xD172F8", Offset = "0xD172F8", VA = "0xD172F8", Slot = "6")]
	public override void TargetFollow()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xD172FC", Offset = "0xD172FC", VA = "0xD172FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xD1731C", Offset = "0xD1731C", VA = "0xD1731C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xD17680", Offset = "0xD17680", VA = "0xD17680")]
	public BladeBehaviour()
	{
	}
}
[Token(Token = "0x20002CD")]
public class BladeLenght : MonoBehaviour
{
	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SworldLenght _lenght;

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xD176A8", Offset = "0xD176A8", VA = "0xD176A8")]
	public void UpdateLenght()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xD176E0", Offset = "0xD176E0", VA = "0xD176E0")]
	public BladeLenght()
	{
	}
}
[Token(Token = "0x20002CE")]
public class BladeLenghtController : MonoBehaviour
{
	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BladeLenghtController Instance;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BladeLenght> _bladeLenghts;

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xD176E8", Offset = "0xD176E8", VA = "0xD176E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xD177B4", Offset = "0xD177B4", VA = "0xD177B4")]
	public void UpdateLenght()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xD178FC", Offset = "0xD178FC", VA = "0xD178FC")]
	public BladeLenghtController()
	{
	}
}
[Token(Token = "0x20002CF")]
public class BoxGlove : MonoBehaviour
{
	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 position;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotation;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider collider;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject hitEffect;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WeaponSwitcher weaponSwitcher;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool grabbed;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HandController handController;

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xD17904", Offset = "0xD17904", VA = "0xD17904")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xD17ADC", Offset = "0xD17ADC", VA = "0xD17ADC")]
	public void SetBeatSourse()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xD17C0C", Offset = "0xD17C0C", VA = "0xD17C0C")]
	public void SetCommonBeatSourse()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xD17D3C", Offset = "0xD17D3C", VA = "0xD17D3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xD17FE8", Offset = "0xD17FE8", VA = "0xD17FE8")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xD180A8", Offset = "0xD180A8", VA = "0xD180A8")]
	public void Grab()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xD18164", Offset = "0xD18164", VA = "0xD18164")]
	public void Release()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xD1819C", Offset = "0xD1819C", VA = "0xD1819C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xD18444", Offset = "0xD18444", VA = "0xD18444")]
	public BoxGlove()
	{
	}
}
[Token(Token = "0x20002D0")]
public class BrokenWeapon : MonoBehaviour
{
	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] parts;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform point;

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xD1844C", Offset = "0xD1844C", VA = "0xD1844C")]
	public void SetExplosion()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xD184A0", Offset = "0xD184A0", VA = "0xD184A0")]
	public void SetExplosion(Transform point)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xD18528", Offset = "0xD18528", VA = "0xD18528")]
	private void Explosion()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xD18804", Offset = "0xD18804", VA = "0xD18804")]
	private void DestroyParts()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xD18870", Offset = "0xD18870", VA = "0xD18870")]
	public BrokenWeapon()
	{
	}
}
[Token(Token = "0x20002D1")]
public class Gun : MonoBehaviour
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator recoilAnim;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator triggerAnim;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator hammerAnim;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator drumAnim;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float animTriggerValue;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource source;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandController handController;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform shootPoint;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject linePrefab;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LayerMask layerMask;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool canShoot;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystemController shootEffect;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject spark;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected AudioClip[] shotClips;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool _isPistol;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	protected bool playKillShotSound;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Enemy shooterEnemy;

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xD18878", Offset = "0xD18878", VA = "0xD18878", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xD18B54", Offset = "0xD18B54", VA = "0xD18B54", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xD18D68", Offset = "0xD18D68", VA = "0xD18D68", Slot = "6")]
	public virtual void SetBeatSourse()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xD18F5C", Offset = "0xD18F5C", VA = "0xD18F5C", Slot = "7")]
	public virtual void SetCommonBeatSourse()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xD19150", Offset = "0xD19150", VA = "0xD19150")]
	public void DontShoot()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xD19158", Offset = "0xD19158", VA = "0xD19158")]
	public void CanShoot()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xD19164", Offset = "0xD19164", VA = "0xD19164", Slot = "8")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xD19338", Offset = "0xD19338", VA = "0xD19338", Slot = "9")]
	protected virtual void Shoot(bool _state)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xD19E38", Offset = "0xD19E38", VA = "0xD19E38", Slot = "10")]
	protected virtual void ShootEffect()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xD1A020", Offset = "0xD1A020", VA = "0xD1A020", Slot = "11")]
	public virtual void ShootSound()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xD1A0CC", Offset = "0xD1A0CC", VA = "0xD1A0CC", Slot = "12")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xD1A18C", Offset = "0xD1A18C", VA = "0xD1A18C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xD1A56C", Offset = "0xD1A56C", VA = "0xD1A56C")]
	public Gun()
	{
	}
}
[Token(Token = "0x20002D2")]
public class HookLine : MonoBehaviour
{
	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer line;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 hookPoint;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform hand;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float d;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float speed;

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xD1A58C", Offset = "0xD1A58C", VA = "0xD1A58C")]
	public void Shoot(Transform hand, Vector3 hookPoint)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xD1A624", Offset = "0xD1A624", VA = "0xD1A624")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xD1A8AC", Offset = "0xD1A8AC", VA = "0xD1A8AC")]
	public HookLine()
	{
	}
}
[Token(Token = "0x20002D3")]
public class KnuckleBehaviour : WeaponBehaviour
{
	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xD1A8BC", Offset = "0xD1A8BC", VA = "0xD1A8BC")]
	public KnuckleBehaviour()
	{
	}
}
[Token(Token = "0x20002D4")]
public class MusicShooting : MonoBehaviour
{
	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] times;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xD1A8C4", Offset = "0xD1A8C4", VA = "0xD1A8C4")]
	public MusicShooting()
	{
	}
}
[Token(Token = "0x20002D5")]
public class SetMusicShooting : MonoBehaviour
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MusicShooting musicShooting;

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xD1A8CC", Offset = "0xD1A8CC", VA = "0xD1A8CC")]
	public SetMusicShooting()
	{
	}
}
[Token(Token = "0x20002D6")]
public class ShootLine : MonoBehaviour
{
	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer line;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float width1;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float width2;

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xD1A8D4", Offset = "0xD1A8D4", VA = "0xD1A8D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xD1A924", Offset = "0xD1A924", VA = "0xD1A924")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xD19D90", Offset = "0xD19D90", VA = "0xD19D90")]
	public void Shoot(Vector3 point)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xD1A988", Offset = "0xD1A988", VA = "0xD1A988")]
	private void SetLineWidth(float w1, float w2)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xD1A9D0", Offset = "0xD1A9D0", VA = "0xD1A9D0")]
	private void DestroyLine()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xD1AA3C", Offset = "0xD1AA3C", VA = "0xD1AA3C")]
	public ShootLine()
	{
	}
}
[Token(Token = "0x20002D7")]
public class Shotgun : Gun
{
	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform otherHandPoint;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HandController otherHandController;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform forend;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float maxForendPos;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float minForendPos;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float centerForendPos;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lastForendPos;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool reloaded;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool triggered;

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xD1AA44", Offset = "0xD1AA44", VA = "0xD1AA44", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xD1AA5C", Offset = "0xD1AA5C", VA = "0xD1AA5C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xD1AA60", Offset = "0xD1AA60", VA = "0xD1AA60", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xD1AC6C", Offset = "0xD1AC6C", VA = "0xD1AC6C")]
	protected void ShotgunReload1()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xD1AD20", Offset = "0xD1AD20", VA = "0xD1AD20")]
	protected void ShotgunReload2()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xD1ADDC", Offset = "0xD1ADDC", VA = "0xD1ADDC", Slot = "9")]
	protected override void Shoot(bool _state)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xD1ADF8", Offset = "0xD1ADF8", VA = "0xD1ADF8", Slot = "10")]
	protected override void ShootEffect()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xD1AEAC", Offset = "0xD1AEAC", VA = "0xD1AEAC", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xD1AEB0", Offset = "0xD1AEB0", VA = "0xD1AEB0")]
	public Shotgun()
	{
	}
}
[Token(Token = "0x20002D8")]
public class Shuriken : MonoBehaviour
{
	[Token(Token = "0x4000DC8")]
	public const float minVelocity = 3.5f;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ShootChecker shootChecker;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 localHitPoint;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 vector;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve speedCurve;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve accelerationCurve;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float t;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float speedFactor;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform startPoint;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float lifetime;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject sparks;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource sound;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 lastPos;

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xD1BED0", Offset = "0xD1BED0", VA = "0xD1BED0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xD1BF50", Offset = "0xD1BF50", VA = "0xD1BF50")]
	public void Set(ShootChecker shootChecker, Vector3 localHitPoint, Vector3 vector, Transform startPoint)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xD1C1C4", Offset = "0xD1C1C4", VA = "0xD1C1C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xD1C7D0", Offset = "0xD1C7D0", VA = "0xD1C7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xD1C894", Offset = "0xD1C894", VA = "0xD1C894")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xD1C56C", Offset = "0xD1C56C", VA = "0xD1C56C")]
	private void Hit()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xD1CA9C", Offset = "0xD1CA9C", VA = "0xD1CA9C")]
	private void Destroyer()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xD1D114", Offset = "0xD1D114", VA = "0xD1D114")]
	public Shuriken()
	{
	}
}
[Token(Token = "0x20002D9")]
public class ShurikenInHandBehaviour : WeaponBehaviour
{
	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShurikenMechanics shurikenMechanics;

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xD1D12C", Offset = "0xD1D12C", VA = "0xD1D12C", Slot = "4")]
	public override void LateUpdate()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xD1D2C8", Offset = "0xD1D2C8", VA = "0xD1D2C8")]
	public ShurikenInHandBehaviour()
	{
	}
}
[Token(Token = "0x20002DA")]
public class ShurikenMechanics : ThrowMechanics
{
	[Token(Token = "0x20002DB")]
	[CompilerGenerated]
	private sealed class <ShowVisualProcess>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShurikenMechanics <>4__this;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xD1E9D4", Offset = "0xD1E9D4", VA = "0xD1E9D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xD1EA1C", Offset = "0xD1EA1C", VA = "0xD1EA1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xD1E7B4", Offset = "0xD1E7B4", VA = "0xD1E7B4")]
		[DebuggerHidden]
		public <ShowVisualProcess>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xD1E910", Offset = "0xD1E910", VA = "0xD1E910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xD1E914", Offset = "0xD1E914", VA = "0xD1E914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xD1E9DC", Offset = "0xD1E9DC", VA = "0xD1E9DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject visual;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject throwPrefab;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask layerMask;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool byButton;

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xD1D2E8", Offset = "0xD1D2E8", VA = "0xD1D2E8", Slot = "8")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xD1D3FC", Offset = "0xD1D3FC", VA = "0xD1D3FC", Slot = "5")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xD1D970", Offset = "0xD1D970", VA = "0xD1D970", Slot = "6")]
	protected override void Throw()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xD1D97C", Offset = "0xD1D97C", VA = "0xD1D97C")]
	protected void Throw(bool _state)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xD1E740", Offset = "0xD1E740", VA = "0xD1E740")]
	[IteratorStateMachine(typeof(<ShowVisualProcess>d__8))]
	private IEnumerator ShowVisualProcess()
	{
		return null;
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xD1E7DC", Offset = "0xD1E7DC", VA = "0xD1E7DC", Slot = "9")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xD1E8E0", Offset = "0xD1E8E0", VA = "0xD1E8E0")]
	public ShurikenMechanics()
	{
	}
}
[Token(Token = "0x20002DC")]
public class SwordEmissionController : Squeezer
{
	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xD1EA24", Offset = "0xD1EA24", VA = "0xD1EA24", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xD1EA2C", Offset = "0xD1EA2C", VA = "0xD1EA2C", Slot = "5")]
	protected override void Set(float state)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xD1EAB8", Offset = "0xD1EAB8", VA = "0xD1EAB8")]
	public SwordEmissionController()
	{
	}
}
[Token(Token = "0x20002DD")]
public class ThrowMechanics : MonoBehaviour
{
	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandController handController;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool canThrow;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _minHandVelocity;

	[Token(Token = "0x4000DE3")]
	public const float maxConeAngle = 50f;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 handVector;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastHandPoint;

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xD1EAC0", Offset = "0xD1EAC0", VA = "0xD1EAC0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xD1ECE0", Offset = "0xD1ECE0", VA = "0xD1ECE0")]
	public void CanNotThrow()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xD1ECE8", Offset = "0xD1ECE8", VA = "0xD1ECE8")]
	public void CanThrow()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xD1D478", Offset = "0xD1D478", VA = "0xD1D478", Slot = "5")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xD1D978", Offset = "0xD1D978", VA = "0xD1D978", Slot = "6")]
	protected virtual void Throw()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xD1ECF4", Offset = "0xD1ECF4", VA = "0xD1ECF4", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xD1E8F8", Offset = "0xD1E8F8", VA = "0xD1E8F8")]
	public ThrowMechanics()
	{
	}
}
[Token(Token = "0x20002DE")]
public class TommyGun : Gun
{
	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform otherHandPoint;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform singleHandAimPoint;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform singleHandAimCenterPoint;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float singleHandPointSpeed;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public HandController otherHandController;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int n;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource lastShootSource;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool shootPause;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float pauseTime;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float delayShoot;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int shootsNumber;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int shootsCount;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float bpm;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float preTime;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioClip[] stopSound;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool lastShoot;

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xD1EF14", Offset = "0xD1EF14", VA = "0xD1EF14", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xD1F128", Offset = "0xD1F128", VA = "0xD1F128", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xD1F460", Offset = "0xD1F460", VA = "0xD1F460", Slot = "6")]
	public override void SetBeatSourse()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xD1F654", Offset = "0xD1F654", VA = "0xD1F654", Slot = "7")]
	public override void SetCommonBeatSourse()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xD1F848", Offset = "0xD1F848", VA = "0xD1F848")]
	private void SetButtonDown(bool state)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xD1F854", Offset = "0xD1F854", VA = "0xD1F854", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xD1F944", Offset = "0xD1F944", VA = "0xD1F944")]
	public void SetDelayShoot(float time)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xD1F948", Offset = "0xD1F948", VA = "0xD1F948", Slot = "13")]
	protected virtual float GetPlayTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xD1FA08", Offset = "0xD1FA08", VA = "0xD1FA08", Slot = "9")]
	protected override void Shoot(bool _state)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xD1FB24", Offset = "0xD1FB24", VA = "0xD1FB24")]
	public void VisualEffect(bool state)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xD1FCAC", Offset = "0xD1FCAC", VA = "0xD1FCAC", Slot = "10")]
	protected override void ShootEffect()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xD1FCB0", Offset = "0xD1FCB0", VA = "0xD1FCB0", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xD1FEE0", Offset = "0xD1FEE0", VA = "0xD1FEE0")]
	public TommyGun()
	{
	}
}
[Token(Token = "0x20002DF")]
public class Uzi : Gun
{
	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float shootDelay;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected float nextShootTime;

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xD1FEF8", Offset = "0xD1FEF8", VA = "0xD1FEF8", Slot = "9")]
	protected override void Shoot(bool _state)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xD1FF4C", Offset = "0xD1FF4C", VA = "0xD1FF4C")]
	public Uzi()
	{
	}
}
[Token(Token = "0x20002E0")]
public class WeaponBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve effectCurve;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float effectFactor;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 lastTargetPos;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandController handController;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xD1D168", Offset = "0xD1D168", VA = "0xD1D168", Slot = "4")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xD1FF54", Offset = "0xD1FF54", VA = "0xD1FF54", Slot = "5")]
	public virtual void OtherEffect(float e)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xD1FF58", Offset = "0xD1FF58", VA = "0xD1FF58", Slot = "6")]
	public virtual void TargetFollow()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xD1D2D8", Offset = "0xD1D2D8", VA = "0xD1D2D8")]
	public WeaponBehaviour()
	{
	}
}
[Token(Token = "0x20002E1")]
public class WeaponLifetimeUI : MonoBehaviour
{
	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform head;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image loadingBar;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro timeText;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startTime;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color startColor;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color endColor;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color vectorColor;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isShow;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xD1FF8C", Offset = "0xD1FF8C", VA = "0xD1FF8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xD20008", Offset = "0xD20008", VA = "0xD20008")]
	public void SetValue(float endTime, float time)
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xD2021C", Offset = "0xD2021C", VA = "0xD2021C")]
	public void Reset(float startTime)
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xD20324", Offset = "0xD20324", VA = "0xD20324")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xD203C4", Offset = "0xD203C4", VA = "0xD203C4")]
	public WeaponLifetimeUI()
	{
	}
}
[Token(Token = "0x20002E2")]
public class WeaponSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool canGrab;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource grabSource;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeaponSets[] allWeapons;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnGrab;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnRelease;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public WeaponDistance weaponDistance;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HandWeapon _weaponType;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HandController handController;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startHandScale;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WeaponLifetimeUI weaponLifetime;

	[Token(Token = "0x170000CD")]
	public HandWeapon WeaponType
	{
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xD203E4", Offset = "0xD203E4", VA = "0xD203E4")]
		get
		{
			return default(HandWeapon);
		}
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xD203EC", Offset = "0xD203EC", VA = "0xD203EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xD20814", Offset = "0xD20814", VA = "0xD20814")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xD208E8", Offset = "0xD208E8", VA = "0xD208E8")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xD209C0", Offset = "0xD209C0", VA = "0xD209C0")]
	public void StopGame()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xD20824", Offset = "0xD20824", VA = "0xD20824")]
	public void TryGrab(Collider coll)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xD209C8", Offset = "0xD209C8", VA = "0xD209C8")]
	public void Grab(HandWeapon type, float cryptography)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xD20AD4", Offset = "0xD20AD4", VA = "0xD20AD4")]
	public void GrabWeapon(HandWeapon weapon)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xD20B88", Offset = "0xD20B88", VA = "0xD20B88")]
	private void ShowWeapon(HandWeapon weapon)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xD20AF8", Offset = "0xD20AF8", VA = "0xD20AF8")]
	private void SetCryptography(float cryptography)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xD20BF4", Offset = "0xD20BF4", VA = "0xD20BF4")]
	public void CompleteWeapon()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xD2098C", Offset = "0xD2098C", VA = "0xD2098C")]
	public void ReleaseWeapon()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xD20D78", Offset = "0xD20D78", VA = "0xD20D78")]
	public void HideWeapon()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xD20D80", Offset = "0xD20D80", VA = "0xD20D80")]
	public void PauseHand()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xD20D88", Offset = "0xD20D88", VA = "0xD20D88")]
	public void UnpauseHand()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xD20C0C", Offset = "0xD20C0C", VA = "0xD20C0C")]
	private void CompleteWeaponEffect()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xD20DB4", Offset = "0xD20DB4", VA = "0xD20DB4")]
	private void SetPlayerWeapon(HandWeapon weapon)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xD20944", Offset = "0xD20944", VA = "0xD20944")]
	private void ResetTommy()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xD207A4", Offset = "0xD207A4", VA = "0xD207A4")]
	public WeaponSets GetWeapon(HandWeapon _handWeapon)
	{
		return default(WeaponSets);
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xD20DBC", Offset = "0xD20DBC", VA = "0xD20DBC")]
	public Transform GetWeaponTransform(HandWeapon _handWeapon)
	{
		return null;
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xD20E34", Offset = "0xD20E34", VA = "0xD20E34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xD2117C", Offset = "0xD2117C", VA = "0xD2117C")]
	public WeaponSwitcher()
	{
	}
}
[Token(Token = "0x20002E3")]
public enum HandWeapon
{
	[Token(Token = "0x4000E10")]
	None,
	[Token(Token = "0x4000E11")]
	Blade,
	[Token(Token = "0x4000E12")]
	BoxGlove,
	[Token(Token = "0x4000E13")]
	MusicTommyGun,
	[Token(Token = "0x4000E14")]
	Shuriken,
	[Token(Token = "0x4000E15")]
	Whip,
	[Token(Token = "0x4000E16")]
	Gun
}
[Serializable]
[Token(Token = "0x20002E4")]
public struct WeaponSets
{
	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public HandWeapon type;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject weapon;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject brokenEffect;
}
[Token(Token = "0x20002E5")]
public class WhipBehaviour : WeaponBehaviour
{
	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xD21184", Offset = "0xD21184", VA = "0xD21184", Slot = "6")]
	public override void TargetFollow()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xD21188", Offset = "0xD21188", VA = "0xD21188")]
	public WhipBehaviour()
	{
	}
}
[Token(Token = "0x20002E6")]
public class WhipFake : MonoBehaviour
{
	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 startRotation;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ball;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ballPoint;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animatedModel;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator animatedPointModel;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float length;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float throwPartFactor;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 targetPoint;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 handVector;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ShootChecker shootChecker;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ShootChecker lastShootChecker;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool doIt;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject hitEffect;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject slowEffect;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject sparks;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource source;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip[] throwSounds;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip[] hitSounds;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action OnHit;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float speed;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float velocity;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool goForward;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 targetPos;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float wtf;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xD21198", Offset = "0xD21198", VA = "0xD21198")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xD211B8", Offset = "0xD211B8", VA = "0xD211B8")]
	public void Throw(Vector3 targetPoint, Vector3 handVector)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xD21610", Offset = "0xD21610", VA = "0xD21610")]
	public void Throw(ShootChecker shootChecker, Vector3 localTarget, Vector3 handVector)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xD214E4", Offset = "0xD214E4", VA = "0xD214E4")]
	private void Set()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xD212A0", Offset = "0xD212A0", VA = "0xD212A0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xD21AC4", Offset = "0xD21AC4", VA = "0xD21AC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xD2176C", Offset = "0xD2176C", VA = "0xD2176C")]
	private void Hit()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xD226F8", Offset = "0xD226F8", VA = "0xD226F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xD226FC", Offset = "0xD226FC", VA = "0xD226FC")]
	public WhipFake()
	{
	}
}
[Token(Token = "0x20002E7")]
public class WhipMechanics : ThrowMechanics
{
	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layerMask;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WhipFake fakeWhip;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xD22714", Offset = "0xD22714", VA = "0xD22714", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xD227F0", Offset = "0xD227F0", VA = "0xD227F0", Slot = "6")]
	protected override void Throw()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xD233C4", Offset = "0xD233C4", VA = "0xD233C4", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xD234A8", Offset = "0xD234A8", VA = "0xD234A8")]
	public WhipMechanics()
	{
	}
}
[Token(Token = "0x20002E8")]
public class PlayerFollowerSystem : MonoBehaviour
{
	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform playerHead;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform playerBase;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float xzMoveSpeed;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zMoveSpeed;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool onlyZ;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool paused;

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xD234C0", Offset = "0xD234C0", VA = "0xD234C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xD237C4", Offset = "0xD237C4", VA = "0xD237C4")]
	private void Pause()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xD237D0", Offset = "0xD237D0", VA = "0xD237D0")]
	private void UnPause()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xD237D8", Offset = "0xD237D8", VA = "0xD237D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xD239E8", Offset = "0xD239E8", VA = "0xD239E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xD23C90", Offset = "0xD23C90", VA = "0xD23C90")]
	public PlayerFollowerSystem()
	{
	}
}
[Token(Token = "0x20002E9")]
public class Points
{
	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int score;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int lives;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int multi;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int heal;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int currentComboStep;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int comboForNewStep;

	[Token(Token = "0x4000E40")]
	private const int maxMultiplier = 8;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int killsToHeal;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int maxHealth;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int constMaxHealth;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action<int> onScoreChanged;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Action<int> onMultiChanged;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Action<int> onHealChanged;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Action<int, int> onLivesChanged;

	[Token(Token = "0x170000CE")]
	public static int Score
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xD23CA4", Offset = "0xD23CA4", VA = "0xD23CA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xD23CFC", Offset = "0xD23CFC", VA = "0xD23CFC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public static int Lives
	{
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xD23D90", Offset = "0xD23D90", VA = "0xD23D90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xD23DE8", Offset = "0xD23DE8", VA = "0xD23DE8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public static int Multi
	{
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xD24054", Offset = "0xD24054", VA = "0xD24054")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xD240AC", Offset = "0xD240AC", VA = "0xD240AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public static int Heal
	{
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xD24144", Offset = "0xD24144", VA = "0xD24144")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xD23EE4", Offset = "0xD23EE4", VA = "0xD23EE4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xD2419C", Offset = "0xD2419C", VA = "0xD2419C")]
	public static void Reset()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xD242E8", Offset = "0xD242E8", VA = "0xD242E8")]
	public static void AddScore(int _number, bool _affectMultiplier = true)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xD24430", Offset = "0xD24430", VA = "0xD24430")]
	private static void AddCombo()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xD24684", Offset = "0xD24684", VA = "0xD24684")]
	public static void IncreaseMultiplier()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xD2477C", Offset = "0xD2477C", VA = "0xD2477C")]
	public static void LoseMultiplier()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xD24208", Offset = "0xD24208", VA = "0xD24208")]
	public static void ResetMultiplier()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xD24894", Offset = "0xD24894", VA = "0xD24894")]
	public Points()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EA")]
public class Pool
{
	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<UnityEngine.Object, Pool> pools;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject recyclablePoolParent;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject persistentPoolParent;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Queue<PoolObject> objects;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[DisableEditing]
	public Transform parent;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[DisableEditing]
	public PoolObject prefab;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool persistent;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xD248FC", Offset = "0xD248FC", VA = "0xD248FC")]
	private Pool(PoolObject _poolObject, int _count)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xD24C00", Offset = "0xD24C00", VA = "0xD24C00")]
	public void SetPersistent()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xD24BC8", Offset = "0xD24BC8", VA = "0xD24BC8")]
	public void Add(int _count)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xD24D78", Offset = "0xD24D78", VA = "0xD24D78")]
	public PoolObject CreateNew(PoolObject _obj, Transform _parent)
	{
		return null;
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xD24E4C", Offset = "0xD24E4C", VA = "0xD24E4C")]
	public static Pool GetOrCreate(PoolObject _poolObject)
	{
		return null;
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xD24FB4", Offset = "0xD24FB4", VA = "0xD24FB4")]
	public static Pool AddToPool(PoolObject _poolObject, int _count)
	{
		return null;
	}

	[Token(Token = "0x6000DB3")]
	public static T Pop<T>(PoolObject _poolObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xD25144", Offset = "0xD25144", VA = "0xD25144")]
	public PoolObject Pop()
	{
		return null;
	}

	[Token(Token = "0x6000DB5")]
	public T Pop<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xD251D8", Offset = "0xD251D8", VA = "0xD251D8")]
	public void Return(PoolObject _po)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xD25238", Offset = "0xD25238", VA = "0xD25238")]
	public void Remove(PoolObject poolObject)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xD25298", Offset = "0xD25298", VA = "0xD25298")]
	public void Destroy(bool _forced = false)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xD253A4", Offset = "0xD253A4", VA = "0xD253A4")]
	public static void Clear()
	{
	}
}
[Token(Token = "0x20002EB")]
public class PoolBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pool pool;

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xD25708", Offset = "0xD25708", VA = "0xD25708")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xD25724", Offset = "0xD25724", VA = "0xD25724")]
	public PoolBehaviour()
	{
	}
}
[Token(Token = "0x20002EC")]
public class PoolObject : MonoBehaviour
{
	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pool pool;

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xD2572C", Offset = "0xD2572C", VA = "0xD2572C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xD257D8", Offset = "0xD257D8", VA = "0xD257D8")]
	public void ReParent()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xD25848", Offset = "0xD25848", VA = "0xD25848")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xD25858", Offset = "0xD25858", VA = "0xD25858")]
	public PoolObject()
	{
	}
}
[Token(Token = "0x20002ED")]
public class PreLoading : MonoBehaviour
{
	[Token(Token = "0x20002EE")]
	[CompilerGenerated]
	private sealed class <Process>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreLoading <>4__this;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <gr>5__2;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xD25E44", Offset = "0xD25E44", VA = "0xD25E44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xD25E8C", Offset = "0xD25E8C", VA = "0xD25E8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xD258F8", Offset = "0xD258F8", VA = "0xD258F8")]
		[DebuggerHidden]
		public <Process>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xD25A1C", Offset = "0xD25A1C", VA = "0xD25A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xD25A20", Offset = "0xD25A20", VA = "0xD25A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xD25E4C", Offset = "0xD25E4C", VA = "0xD25E4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneController sceneController;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ground;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objects;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int callbacksCount;

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xD25860", Offset = "0xD25860", VA = "0xD25860")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xD25864", Offset = "0xD25864", VA = "0xD25864")]
	private void StartProcess()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xD25884", Offset = "0xD25884", VA = "0xD25884")]
	[IteratorStateMachine(typeof(<Process>d__6))]
	private IEnumerator Process()
	{
		return null;
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xD25920", Offset = "0xD25920", VA = "0xD25920")]
	public void CallBack()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xD25A10", Offset = "0xD25A10", VA = "0xD25A10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xD25A14", Offset = "0xD25A14", VA = "0xD25A14")]
	public PreLoading()
	{
	}
}
[Token(Token = "0x20002EF")]
public class PreLoadingBlocks : PreLoadingObject
{
	[Token(Token = "0x20002F0")]
	[CompilerGenerated]
	private sealed class <InstantiateBlocksProcess>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreLoadingBlocks <>4__this;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xD261C4", Offset = "0xD261C4", VA = "0xD261C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xD2620C", Offset = "0xD2620C", VA = "0xD2620C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xD25F28", Offset = "0xD25F28", VA = "0xD25F28")]
		[DebuggerHidden]
		public <InstantiateBlocksProcess>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xD25F60", Offset = "0xD25F60", VA = "0xD25F60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xD25F64", Offset = "0xD25F64", VA = "0xD25F64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xD261CC", Offset = "0xD261CC", VA = "0xD261CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] blocks;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xD25E94", Offset = "0xD25E94", VA = "0xD25E94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xD25EB4", Offset = "0xD25EB4", VA = "0xD25EB4")]
	[IteratorStateMachine(typeof(<InstantiateBlocksProcess>d__3))]
	private IEnumerator InstantiateBlocksProcess()
	{
		return null;
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xD25F50", Offset = "0xD25F50", VA = "0xD25F50")]
	public PreLoadingBlocks()
	{
	}
}
[Token(Token = "0x20002F1")]
public class PreLoadingBoxer : PreLoadingObject
{
	[Token(Token = "0x20002F2")]
	[CompilerGenerated]
	private sealed class <InstantiateAndRagdollProcess>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreLoadingBoxer <>4__this;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EnemyBoxer <enemyBoxer>5__2;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xD267D8", Offset = "0xD267D8", VA = "0xD267D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xD26820", Offset = "0xD26820", VA = "0xD26820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xD262A8", Offset = "0xD262A8", VA = "0xD262A8")]
		[DebuggerHidden]
		public <InstantiateAndRagdollProcess>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xD262D8", Offset = "0xD262D8", VA = "0xD262D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xD262DC", Offset = "0xD262DC", VA = "0xD262DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xD267E0", Offset = "0xD267E0", VA = "0xD267E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform boxerPoint;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject boxer;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xD26214", Offset = "0xD26214", VA = "0xD26214")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xD26234", Offset = "0xD26234", VA = "0xD26234")]
	[IteratorStateMachine(typeof(<InstantiateAndRagdollProcess>d__3))]
	private IEnumerator InstantiateAndRagdollProcess()
	{
		return null;
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xD262D0", Offset = "0xD262D0", VA = "0xD262D0")]
	public PreLoadingBoxer()
	{
	}
}
[Token(Token = "0x20002F3")]
public class PreLoadingCarAndDriver : PreLoadingObject
{
	[Token(Token = "0x20002F4")]
	[CompilerGenerated]
	private sealed class <InstantiateAndRagdollProcess>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreLoadingCarAndDriver <>4__this;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Car <enemyCar>5__2;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CarDriver <driver>5__3;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xD26E74", Offset = "0xD26E74", VA = "0xD26E74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0xD26EBC", Offset = "0xD26EBC", VA = "0xD26EBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xD268BC", Offset = "0xD268BC", VA = "0xD268BC")]
		[DebuggerHidden]
		public <InstantiateAndRagdollProcess>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xD268EC", Offset = "0xD268EC", VA = "0xD268EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xD268F0", Offset = "0xD268F0", VA = "0xD268F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xD26E7C", Offset = "0xD26E7C", VA = "0xD26E7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform carPoint;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject car;

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xD26828", Offset = "0xD26828", VA = "0xD26828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xD26848", Offset = "0xD26848", VA = "0xD26848")]
	[IteratorStateMachine(typeof(<InstantiateAndRagdollProcess>d__3))]
	private IEnumerator InstantiateAndRagdollProcess()
	{
		return null;
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xD268E4", Offset = "0xD268E4", VA = "0xD268E4")]
	public PreLoadingCarAndDriver()
	{
	}
}
[Token(Token = "0x20002F5")]
public class PreLoadingMelee : PreLoadingObject
{
	[Token(Token = "0x20002F6")]
	[CompilerGenerated]
	private sealed class <InstantiateAndCutProcess>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreLoadingMelee <>4__this;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EnemyMelee <enemyMelee>5__2;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EnemyMelee <enemyMonster>5__3;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EnemySnake <enemySnake>5__4;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xD27930", Offset = "0xD27930", VA = "0xD27930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0xD27978", Offset = "0xD27978", VA = "0xD27978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xD26F58", Offset = "0xD26F58", VA = "0xD26F58")]
		[DebuggerHidden]
		public <InstantiateAndCutProcess>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xD26F88", Offset = "0xD26F88", VA = "0xD26F88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xD26F8C", Offset = "0xD26F8C", VA = "0xD26F8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xD27938", Offset = "0xD27938", VA = "0xD27938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform meleePoint;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject melee;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform monsterPoint;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject monster;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform snakePoint;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject snake;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject blade;

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xD26EC4", Offset = "0xD26EC4", VA = "0xD26EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xD26EE4", Offset = "0xD26EE4", VA = "0xD26EE4")]
	[IteratorStateMachine(typeof(<InstantiateAndCutProcess>d__8))]
	private IEnumerator InstantiateAndCutProcess()
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xD26F80", Offset = "0xD26F80", VA = "0xD26F80")]
	public PreLoadingMelee()
	{
	}
}
[Token(Token = "0x20002F7")]
public class PreLoadingObject : MonoBehaviour
{
	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected PreLoading preLoading;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int callbacksNumber;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int callbacksCount;

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xD27980", Offset = "0xD27980", VA = "0xD27980")]
	public void Set(PreLoading preLoading)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xD261AC", Offset = "0xD261AC", VA = "0xD261AC")]
	protected void SendMainCallback()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xD27988", Offset = "0xD27988", VA = "0xD27988")]
	protected void SendCallBack()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xD267C8", Offset = "0xD267C8", VA = "0xD267C8")]
	public bool IsCallbacksCollected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xD25F58", Offset = "0xD25F58", VA = "0xD25F58")]
	public PreLoadingObject()
	{
	}
}
[Token(Token = "0x20002F8")]
public class PreLoadingShooter : PreLoadingObject
{
	[Token(Token = "0x20002F9")]
	[CompilerGenerated]
	private sealed class <InstantiateAndRagdollProcess>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreLoadingShooter <>4__this;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EnemyShooter <enemyShooter>5__2;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xD27F38", Offset = "0xD27F38", VA = "0xD27F38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xD27F80", Offset = "0xD27F80", VA = "0xD27F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xD27A2C", Offset = "0xD27A2C", VA = "0xD27A2C")]
		[DebuggerHidden]
		public <InstantiateAndRagdollProcess>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xD27A5C", Offset = "0xD27A5C", VA = "0xD27A5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xD27A60", Offset = "0xD27A60", VA = "0xD27A60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xD27F40", Offset = "0xD27F40", VA = "0xD27F40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shooterPoint;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject shooter;

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xD27998", Offset = "0xD27998", VA = "0xD27998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xD279B8", Offset = "0xD279B8", VA = "0xD279B8")]
	[IteratorStateMachine(typeof(<InstantiateAndRagdollProcess>d__3))]
	private IEnumerator InstantiateAndRagdollProcess()
	{
		return null;
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xD27A54", Offset = "0xD27A54", VA = "0xD27A54")]
	public PreLoadingShooter()
	{
	}
}
[Token(Token = "0x20002FA")]
public class PreLoadingThrowers : PreLoadingObject
{
	[Token(Token = "0x20002FB")]
	[CompilerGenerated]
	private sealed class <InstantiateThrowersProcess>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreLoadingThrowers <>4__this;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Thrower <thrower>5__2;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xD283D8", Offset = "0xD283D8", VA = "0xD283D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xD28420", Offset = "0xD28420", VA = "0xD28420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xD2801C", Offset = "0xD2801C", VA = "0xD2801C")]
		[DebuggerHidden]
		public <InstantiateThrowersProcess>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xD2804C", Offset = "0xD2804C", VA = "0xD2804C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xD28050", Offset = "0xD28050", VA = "0xD28050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xD283E0", Offset = "0xD283E0", VA = "0xD283E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject axeThrower;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform axeThrowerPoint;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject grenadeThrower;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform grenadeThrowerPoint;

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xD27F88", Offset = "0xD27F88", VA = "0xD27F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xD27FA8", Offset = "0xD27FA8", VA = "0xD27FA8")]
	[IteratorStateMachine(typeof(<InstantiateThrowersProcess>d__5))]
	private IEnumerator InstantiateThrowersProcess()
	{
		return null;
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xD28044", Offset = "0xD28044", VA = "0xD28044")]
	public PreLoadingThrowers()
	{
	}
}
[Token(Token = "0x20002FC")]
public class RicochetSets : ShooterSets
{
	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xD28428", Offset = "0xD28428", VA = "0xD28428", Slot = "4")]
	public override RuntimeAnimatorController GetAnimator(Direction direction, bool hasShield = false)
	{
		return null;
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xD28494", Offset = "0xD28494", VA = "0xD28494")]
	public RicochetSets()
	{
	}
}
[Serializable]
[Token(Token = "0x20002FD")]
public class IOClass
{
	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool tutorCompleted;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool subscribed;

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xD284A4", Offset = "0xD284A4", VA = "0xD284A4")]
	public IOClass()
	{
	}
}
[Token(Token = "0x20002FE")]
public class IOSaver : MonoBehaviour
{
	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static IOSaver _instance;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string path;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tutorCompleted;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool subscribed;

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xD284AC", Offset = "0xD284AC", VA = "0xD284AC")]
	public IOSaver()
	{
	}
}
[Token(Token = "0x20002FF")]
public class SaveController : MonoBehaviour
{
	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SaveController instance;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameLevelAsset gameLevelAsset;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string fileName;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string path;

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xD284B4", Offset = "0xD284B4", VA = "0xD284B4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xD28864", Offset = "0xD28864", VA = "0xD28864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xD285A0", Offset = "0xD285A0", VA = "0xD285A0")]
	public void LoadSaveInfo()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xD28C48", Offset = "0xD28C48", VA = "0xD28C48")]
	public bool CheckTutorComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xD28C64", Offset = "0xD28C64", VA = "0xD28C64")]
	public void CompleteTutorial(TutorialState tutorialState)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xD28968", Offset = "0xD28968", VA = "0xD28968")]
	public void SaveInfo()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xD28CC4", Offset = "0xD28CC4", VA = "0xD28CC4")]
	public void Subscribed()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xD28CC8", Offset = "0xD28CC8", VA = "0xD28CC8")]
	public void DeleteSave()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xD28DE8", Offset = "0xD28DE8", VA = "0xD28DE8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xD28E70", Offset = "0xD28E70", VA = "0xD28E70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xD28F74", Offset = "0xD28F74", VA = "0xD28F74")]
	public SaveController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000300")]
public class GameSave
{
	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool hasFirstLaunch;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TutorSave> tutorSaves;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LevelSave> levelSaves;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xD28B70", Offset = "0xD28B70", VA = "0xD28B70")]
	public GameSave()
	{
	}
}
[Serializable]
[Token(Token = "0x2000301")]
public class TutorSave
{
	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool completed;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xD28FCC", Offset = "0xD28FCC", VA = "0xD28FCC")]
	public TutorSave(int id, bool completed)
	{
	}
}
[Serializable]
[Token(Token = "0x2000302")]
public class LevelSave
{
	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<DifficultSave> difficultSaves;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xD28FFC", Offset = "0xD28FFC", VA = "0xD28FFC")]
	public LevelSave(int id)
	{
	}
}
[Serializable]
[Token(Token = "0x2000303")]
public class DifficultSave
{
	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int score;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool completed;

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xD29094", Offset = "0xD29094", VA = "0xD29094")]
	public DifficultSave(int score, bool completed)
	{
	}
}
[Token(Token = "0x2000304")]
public class SceneController : MonoBehaviour
{
	[Token(Token = "0x2000305")]
	[CompilerGenerated]
	private sealed class <LoadMenuProcess>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneController <>4__this;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0xD2A268", Offset = "0xD2A268", VA = "0xD2A268", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xD2A2B0", Offset = "0xD2A2B0", VA = "0xD2A2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xD2996C", Offset = "0xD2996C", VA = "0xD2996C")]
		[DebuggerHidden]
		public <LoadMenuProcess>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xD2A13C", Offset = "0xD2A13C", VA = "0xD2A13C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xD2A140", Offset = "0xD2A140", VA = "0xD2A140", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xD2A270", Offset = "0xD2A270", VA = "0xD2A270", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000306")]
	[CompilerGenerated]
	private sealed class <LoadGameProcess>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneController <>4__this;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0xD2A404", Offset = "0xD2A404", VA = "0xD2A404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xD2A44C", Offset = "0xD2A44C", VA = "0xD2A44C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xD29BD0", Offset = "0xD29BD0", VA = "0xD29BD0")]
		[DebuggerHidden]
		public <LoadGameProcess>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xD2A2B8", Offset = "0xD2A2B8", VA = "0xD2A2B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xD2A2BC", Offset = "0xD2A2BC", VA = "0xD2A2BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xD2A40C", Offset = "0xD2A40C", VA = "0xD2A40C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000307")]
	[CompilerGenerated]
	private sealed class <LoadGameProcess>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneController <>4__this;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string levelName;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xD2A570", Offset = "0xD2A570", VA = "0xD2A570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xD2A5B8", Offset = "0xD2A5B8", VA = "0xD2A5B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xD29BF8", Offset = "0xD29BF8", VA = "0xD29BF8")]
		[DebuggerHidden]
		public <LoadGameProcess>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xD2A454", Offset = "0xD2A454", VA = "0xD2A454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xD2A458", Offset = "0xD2A458", VA = "0xD2A458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xD2A578", Offset = "0xD2A578", VA = "0xD2A578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000308")]
	[CompilerGenerated]
	private sealed class <ReloadLevelProcess>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneController <>4__this;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xD2A6FC", Offset = "0xD2A6FC", VA = "0xD2A6FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xD2A744", Offset = "0xD2A744", VA = "0xD2A744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xD29D58", Offset = "0xD29D58", VA = "0xD29D58")]
		[DebuggerHidden]
		public <ReloadLevelProcess>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xD2A5C0", Offset = "0xD2A5C0", VA = "0xD2A5C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xD2A5C4", Offset = "0xD2A5C4", VA = "0xD2A5C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xD2A704", Offset = "0xD2A704", VA = "0xD2A704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000309")]
	[CompilerGenerated]
	private sealed class <LoadScene>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0xD2A908", Offset = "0xD2A908", VA = "0xD2A908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0xD2A950", Offset = "0xD2A950", VA = "0xD2A950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xD29E14", Offset = "0xD29E14", VA = "0xD29E14")]
		[DebuggerHidden]
		public <LoadScene>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xD2A74C", Offset = "0xD2A74C", VA = "0xD2A74C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xD2A750", Offset = "0xD2A750", VA = "0xD2A750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xD2A910", Offset = "0xD2A910", VA = "0xD2A910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string menu;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int game;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string tutorial;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isGame;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SceneController instance;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnLoadMenu;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnLoadGame;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnLoadTutorial;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnLoadScene;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<string> OnStartLoadComics;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action OnStartLoadNewScene;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action OnEndGame;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly WaitForSeconds levelLoadDelay;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool firstLoad;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isFirstLoading;

	[Token(Token = "0x170000E0")]
	public static bool isMenu
	{
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xD290C4", Offset = "0xD290C4", VA = "0xD290C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E1")]
	public static bool IsTutorNow
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xD29174", Offset = "0xD29174", VA = "0xD29174")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xD29224", Offset = "0xD29224", VA = "0xD29224")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xD29300", Offset = "0xD29300", VA = "0xD29300")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xD29774", Offset = "0xD29774", VA = "0xD29774")]
	private void SceneManager_sceneLoaded(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xD25DF8", Offset = "0xD25DF8", VA = "0xD25DF8")]
	public void LoadMenu()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xD298F8", Offset = "0xD298F8", VA = "0xD298F8")]
	[IteratorStateMachine(typeof(<LoadMenuProcess>d__21))]
	private IEnumerator LoadMenuProcess()
	{
		return null;
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xD29994", Offset = "0xD29994", VA = "0xD29994")]
	public void LoadComics(string levelName)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xD29A30", Offset = "0xD29A30", VA = "0xD29A30")]
	public void LoadGame()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xD29AD8", Offset = "0xD29AD8", VA = "0xD29AD8")]
	public void LoadGame(string levelName)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xD29AE4", Offset = "0xD29AE4", VA = "0xD29AE4")]
	public void LoadLevelNotGame(string levelName)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xD299D8", Offset = "0xD299D8", VA = "0xD299D8")]
	public void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xD29A64", Offset = "0xD29A64", VA = "0xD29A64")]
	[IteratorStateMachine(typeof(<LoadGameProcess>d__27))]
	private IEnumerator LoadGameProcess()
	{
		return null;
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xD29B40", Offset = "0xD29B40", VA = "0xD29B40")]
	[IteratorStateMachine(typeof(<LoadGameProcess>d__28))]
	private IEnumerator LoadGameProcess(string levelName)
	{
		return null;
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xD29C20", Offset = "0xD29C20", VA = "0xD29C20")]
	public void LoadTutorial()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xD29C9C", Offset = "0xD29C9C", VA = "0xD29C9C")]
	public void ReloadLevel()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xD29CE4", Offset = "0xD29CE4", VA = "0xD29CE4")]
	[IteratorStateMachine(typeof(<ReloadLevelProcess>d__31))]
	private IEnumerator ReloadLevelProcess()
	{
		return null;
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xD29D80", Offset = "0xD29D80", VA = "0xD29D80")]
	private void LoadingViewOff()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xD2957C", Offset = "0xD2957C", VA = "0xD2957C")]
	private void LoadingView(bool state)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xD29DA0", Offset = "0xD29DA0", VA = "0xD29DA0")]
	[IteratorStateMachine(typeof(<LoadScene>d__36))]
	private IEnumerator LoadScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xD29E3C", Offset = "0xD29E3C", VA = "0xD29E3C")]
	private static string NameFromIndex(int BuildIndex)
	{
		return null;
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xD29E9C", Offset = "0xD29E9C", VA = "0xD29E9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xD2A018", Offset = "0xD2A018", VA = "0xD2A018")]
	public SceneController()
	{
	}
}
[Token(Token = "0x200030A")]
public class ScoreFlyAwayWithPlayer : MonoBehaviour
{
	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve velocityCurve;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float state;

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xD2A958", Offset = "0xD2A958", VA = "0xD2A958")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xD2A960", Offset = "0xD2A960", VA = "0xD2A960")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xD2AA9C", Offset = "0xD2AA9C", VA = "0xD2AA9C")]
	public ScoreFlyAwayWithPlayer()
	{
	}
}
[Token(Token = "0x200030B")]
[CreateAssetMenu(fileName = "SettingAsset", menuName = "Against/Setting")]
public class SettingAsset : ScriptableObject
{
	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SettingsParameters parameters;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool autoDetectDevice;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public DeviceType deviceType;

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xD2AAA4", Offset = "0xD2AAA4", VA = "0xD2AAA4")]
	public void Copy(SettingAsset _asset)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xD2AB48", Offset = "0xD2AB48", VA = "0xD2AB48")]
	public void SetVolume(MixerGroup _group, float _volume)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xD2AC48", Offset = "0xD2AC48", VA = "0xD2AC48")]
	public float GetVolume(MixerGroup _group)
	{
		return default(float);
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xD2AB98", Offset = "0xD2AB98", VA = "0xD2AB98")]
	private void CheckInit()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xD2AC8C", Offset = "0xD2AC8C", VA = "0xD2AC8C")]
	public SettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200030C")]
public struct SettingsParameters
{
	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public HandType mainHand;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool analytic;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public bool asker;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public bool immortal;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
	public bool oneChance;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool showComics;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool comics;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public bool showUI;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public bool freestyle;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool beatCircles;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool colourless;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool showDodgeArrows;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool showHud;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool shootersDodge;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool revolverMode;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool shields;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool deflect;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool showParticle;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int lastMenuFolder;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int missionID;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DifficultyLevel difficulty;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool bloodVignette;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool vignette;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float vignettePower;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int qualityLevel;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float heightCalibration;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool hasTutorGame;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool areVolumesInited;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] volumes;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int languageId;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool noir;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool noBlood;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool metronome;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	internal bool environmentHitLightning;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal bool autoAim;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	internal bool scorePoints;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	internal bool vignetteIndication;
}
[Token(Token = "0x200030D")]
public class Setting : MonoBehaviour
{
	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Setting instance;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveName;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string saveExtension;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string path;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SettingAsset settingAsset;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SettingAsset defaultSettings;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action onChangeShowUI;

	[Token(Token = "0x170000EC")]
	public string SaveFileName
	{
		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xD2AC94", Offset = "0xD2AC94", VA = "0xD2AC94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xD2ACA4", Offset = "0xD2ACA4", VA = "0xD2ACA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xD2B1C0", Offset = "0xD2B1C0", VA = "0xD2B1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xD2B444", Offset = "0xD2B444", VA = "0xD2B444")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xD2AD50", Offset = "0xD2AD50", VA = "0xD2AD50")]
	private void DetectDevice()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xD2AE4C", Offset = "0xD2AE4C", VA = "0xD2AE4C")]
	private void LoadSettings()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xD2B448", Offset = "0xD2B448", VA = "0xD2B448")]
	public void SaveToFile()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xD2B904", Offset = "0xD2B904", VA = "0xD2B904")]
	private void SetDefaultSettings()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xD2B92C", Offset = "0xD2B92C", VA = "0xD2B92C")]
	public void CreateNewSave()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xD2B6D8", Offset = "0xD2B6D8", VA = "0xD2B6D8")]
	public bool FileCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xD2B65C", Offset = "0xD2B65C", VA = "0xD2B65C")]
	private void SetDefaultPath()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xD2BA14", Offset = "0xD2BA14", VA = "0xD2BA14")]
	public HandType MainHand()
	{
		return default(HandType);
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xD2BA30", Offset = "0xD2BA30", VA = "0xD2BA30")]
	public void SetMainHand(HandType handType)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xD2BA4C", Offset = "0xD2BA4C", VA = "0xD2BA4C")]
	public bool HasAnalytic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xD2BA68", Offset = "0xD2BA68", VA = "0xD2BA68")]
	public LocalizationManager.Locale GetLanguage()
	{
		return default(LocalizationManager.Locale);
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xD2BA84", Offset = "0xD2BA84", VA = "0xD2BA84")]
	public void SetLanguage(LocalizationManager.Locale locale)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xD2BAA0", Offset = "0xD2BAA0", VA = "0xD2BAA0")]
	public bool HasAsker()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xD2BABC", Offset = "0xD2BABC", VA = "0xD2BABC")]
	public bool GetDodgeUI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xD2BAD8", Offset = "0xD2BAD8", VA = "0xD2BAD8")]
	public bool GetBulletDeflection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xD2B388", Offset = "0xD2B388", VA = "0xD2B388")]
	public void SetImmortal(bool state)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xD2BAF4", Offset = "0xD2BAF4", VA = "0xD2BAF4")]
	public void SetEnvironmentHitLightning(bool state)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xD2BB14", Offset = "0xD2BB14", VA = "0xD2BB14")]
	public void SetAutoAim(bool state)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xD2BB34", Offset = "0xD2BB34", VA = "0xD2BB34")]
	public void SetScorePoints(bool state)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xD2BB54", Offset = "0xD2BB54", VA = "0xD2BB54")]
	public void SetVignetteIndication(bool state)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xD2BB74", Offset = "0xD2BB74", VA = "0xD2BB74")]
	public void SetOneChance(bool state)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xD2B2F0", Offset = "0xD2B2F0", VA = "0xD2B2F0")]
	public void SetShowUI(bool state)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xD2BB94", Offset = "0xD2BB94", VA = "0xD2BB94")]
	public void SetFreestyleMod(bool state)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xD2BBB4", Offset = "0xD2BBB4", VA = "0xD2BBB4")]
	public void SetBeatCircles(bool state)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xD2BBD4", Offset = "0xD2BBD4", VA = "0xD2BBD4")]
	public void SetMetronome(bool state)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xD2BBF4", Offset = "0xD2BBF4", VA = "0xD2BBF4")]
	public void SetColourlessUI(bool state)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xD2BC14", Offset = "0xD2BC14", VA = "0xD2BC14")]
	public void SetDodgeUI(bool state)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xD2BC34", Offset = "0xD2BC34", VA = "0xD2BC34")]
	public bool ShowComics()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xD2BC50", Offset = "0xD2BC50", VA = "0xD2BC50")]
	public void SetComics(bool state)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xD2BC70", Offset = "0xD2BC70", VA = "0xD2BC70")]
	public void SetRevolver(bool state)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xD2BCF0", Offset = "0xD2BCF0", VA = "0xD2BCF0")]
	public void SetShields(bool state)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xD2BD70", Offset = "0xD2BD70", VA = "0xD2BD70")]
	public void SetDodge(bool state)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xD2BDF0", Offset = "0xD2BDF0", VA = "0xD2BDF0")]
	public void SetBulletDeflection(bool bullet)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xD2BE10", Offset = "0xD2BE10", VA = "0xD2BE10")]
	public void SetQualityLevel(int _level)
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xD2B3C4", Offset = "0xD2B3C4", VA = "0xD2B3C4")]
	public void SetHeightCalibration(float calibrationParam)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xD2BFC8", Offset = "0xD2BFC8", VA = "0xD2BFC8")]
	public bool HasTutorGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xD2BFE4", Offset = "0xD2BFE4", VA = "0xD2BFE4")]
	public bool HasVignette()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xD2C000", Offset = "0xD2C000", VA = "0xD2C000")]
	public bool HasBloodVignette()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xD2C01C", Offset = "0xD2C01C", VA = "0xD2C01C")]
	public void SetBloodVignette(bool state)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xD2C03C", Offset = "0xD2C03C", VA = "0xD2C03C")]
	public void SetVignette(bool state)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xD2B21C", Offset = "0xD2B21C", VA = "0xD2B21C")]
	public float GetVignettePower()
	{
		return default(float);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xD2B238", Offset = "0xD2B238", VA = "0xD2B238")]
	public void SetVignettePower(float power)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xD2C05C", Offset = "0xD2C05C", VA = "0xD2C05C")]
	public void SetVolume(MixerGroup _group, float _volume)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xD29D88", Offset = "0xD29D88", VA = "0xD29D88")]
	public float GetVolume(MixerGroup _group)
	{
		return default(float);
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xD2C0F0", Offset = "0xD2C0F0", VA = "0xD2C0F0")]
	public bool IsComics()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xD24668", Offset = "0xD24668", VA = "0xD24668")]
	public bool IsImmortal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xD2C10C", Offset = "0xD2C10C", VA = "0xD2C10C")]
	public bool IsAutoAim()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xD2C128", Offset = "0xD2C128", VA = "0xD2C128")]
	public bool IsVignetteIndication()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xD2C144", Offset = "0xD2C144", VA = "0xD2C144")]
	public bool IsEnvironmentHitLightning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xD2C160", Offset = "0xD2C160", VA = "0xD2C160")]
	public bool IsScorePoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xD2C17C", Offset = "0xD2C17C", VA = "0xD2C17C")]
	public bool IsOneChance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xD2C198", Offset = "0xD2C198", VA = "0xD2C198")]
	public bool IsNoir()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xD2C1B4", Offset = "0xD2C1B4", VA = "0xD2C1B4")]
	public bool IsNoBlood()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xD2B2D4", Offset = "0xD2B2D4", VA = "0xD2B2D4")]
	public bool IsShowUI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xD2C1D0", Offset = "0xD2C1D0", VA = "0xD2C1D0")]
	public bool IsFreestyleMod()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xD2C1EC", Offset = "0xD2C1EC", VA = "0xD2C1EC")]
	public bool IsBeatCircles()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xD2C208", Offset = "0xD2C208", VA = "0xD2C208")]
	public bool IsColourlessUI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xD2C224", Offset = "0xD2C224", VA = "0xD2C224")]
	public bool IsMetronome()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xD2C240", Offset = "0xD2C240", VA = "0xD2C240")]
	public bool IsShowHud()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xD2C25C", Offset = "0xD2C25C", VA = "0xD2C25C")]
	public bool ShootersDodge()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xD2C278", Offset = "0xD2C278", VA = "0xD2C278")]
	public bool RevolverMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xD2C294", Offset = "0xD2C294", VA = "0xD2C294")]
	public bool Shields()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xD2C2B0", Offset = "0xD2C2B0", VA = "0xD2C2B0")]
	public bool IsShowParticle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xD2C2CC", Offset = "0xD2C2CC", VA = "0xD2C2CC")]
	public bool UseOptimization()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xD2C2F0", Offset = "0xD2C2F0", VA = "0xD2C2F0")]
	public bool IsQuestOne()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xD2C314", Offset = "0xD2C314", VA = "0xD2C314")]
	public int lastSelectedPage()
	{
		return default(int);
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xD2C330", Offset = "0xD2C330", VA = "0xD2C330")]
	public void SetLastMission(int state)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xD2C34C", Offset = "0xD2C34C", VA = "0xD2C34C")]
	public void SetHUD(bool state)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xD2C36C", Offset = "0xD2C36C", VA = "0xD2C36C")]
	public void SetNoir(bool state)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xD2C38C", Offset = "0xD2C38C", VA = "0xD2C38C")]
	public void SetNoBlood(bool state)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xD2C3AC", Offset = "0xD2C3AC", VA = "0xD2C3AC")]
	public int MissionID()
	{
		return default(int);
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xD2C3C8", Offset = "0xD2C3C8", VA = "0xD2C3C8")]
	public void SetMissionID(int id)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xD2C3E4", Offset = "0xD2C3E4", VA = "0xD2C3E4")]
	public DifficultyLevel Difficulty()
	{
		return default(DifficultyLevel);
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xD2C400", Offset = "0xD2C400", VA = "0xD2C400")]
	public void SetDifficulty(DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xD2C41C", Offset = "0xD2C41C", VA = "0xD2C41C")]
	public int GetQualityLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xD2B3A8", Offset = "0xD2B3A8", VA = "0xD2B3A8")]
	public float GetHeightCalibration()
	{
		return default(float);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xD2C438", Offset = "0xD2C438", VA = "0xD2C438")]
	public Setting()
	{
	}
}
[Token(Token = "0x200030E")]
public class SettingMenu : MonoBehaviour
{
	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xD2C4BC", Offset = "0xD2C4BC", VA = "0xD2C4BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xD2C4C0", Offset = "0xD2C4C0", VA = "0xD2C4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xD2C4C4", Offset = "0xD2C4C4", VA = "0xD2C4C4")]
	public SettingMenu()
	{
	}
}
[Token(Token = "0x200030F")]
public class ShootChecker : MonoBehaviour
{
	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Enemy main;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShooterCheckerParams checkerParam;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetBone;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform aimTarget;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxCollider boxColl;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool infiniteScore;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool allowInScore;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<Vector3, Vector3, bool, float> OnShootedHitPoint;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<Vector3, Vector3, int, int> OnShooted;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnShootedEvent;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float colliderScaleFactor;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private bool isScale;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float maxCollSize;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform playerBasePoint;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int shootedNumber;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool canBeDamaged;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool aimed;

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xD2C4CC", Offset = "0xD2C4CC", VA = "0xD2C4CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xD2C5B8", Offset = "0xD2C5B8", VA = "0xD2C5B8")]
	public void SetLookTarget(Transform lookTarget)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xD2C5C0", Offset = "0xD2C5C0", VA = "0xD2C5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xD1CB08", Offset = "0xD1CB08", VA = "0xD1CB08")]
	public void Shooted(Vector3 hitPoint, Vector3 shootPoint, bool playSound, float velocity)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xD2C91C", Offset = "0xD2C91C", VA = "0xD2C91C")]
	public void SetCanBeDamaged(bool state)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xD2C928", Offset = "0xD2C928", VA = "0xD2C928")]
	public bool CanBeDamaged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xD2C930", Offset = "0xD2C930", VA = "0xD2C930")]
	public void SetAimed(bool state)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xD1E720", Offset = "0xD1E720", VA = "0xD1E720")]
	public bool Aimed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xD2C93C", Offset = "0xD2C93C", VA = "0xD2C93C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xD2C96C", Offset = "0xD2C96C", VA = "0xD2C96C")]
	public ShootChecker()
	{
	}
}
[Token(Token = "0x2000310")]
[CreateAssetMenu(fileName = "Shooter Checker", menuName = "Against/Enemy/Shooter Checker")]
public class ShooterCheckerParams : ScriptableObject
{
	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Distance;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 MaxSize;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 MinSize;

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xD2C998", Offset = "0xD2C998", VA = "0xD2C998")]
	public ShooterCheckerParams()
	{
	}
}
[Token(Token = "0x2000311")]
public class ShooterSets : MonoBehaviour
{
	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform shieldPointRight;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shieldPointLeft;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform weaponPointRight;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform weaponPointLeft;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected ShooterParametrs[] shooterParametrs;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private FullFollower shield;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private FullFollower weapon;

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xD2C9B8", Offset = "0xD2C9B8", VA = "0xD2C9B8", Slot = "4")]
	public virtual RuntimeAnimatorController GetAnimator(Direction direction, bool hasShield = false)
	{
		return null;
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xD2CA48", Offset = "0xD2CA48", VA = "0xD2CA48")]
	public void Set(Direction direction)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xD2CB40", Offset = "0xD2CB40", VA = "0xD2CB40")]
	public Vector3 GetAimerOffsetRotation(Direction direction, bool hasShield, bool isSitDown)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xD2CAE0", Offset = "0xD2CAE0", VA = "0xD2CAE0")]
	public Transform GetWeaponPoint(Direction direction)
	{
		return null;
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xD2CB10", Offset = "0xD2CB10", VA = "0xD2CB10")]
	public Transform GetShieldPoint(Direction direction)
	{
		return null;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xD2849C", Offset = "0xD2849C", VA = "0xD2849C")]
	public ShooterSets()
	{
	}
}
[Serializable]
[Token(Token = "0x2000312")]
public struct ShooterParametrs
{
	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Direction direction;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 aimerRotationOffset;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 aimerRotationOffsetSitDown;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hasShield;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RuntimeAnimatorController animatorController;
}
[Token(Token = "0x2000313")]
public class ShowParticles : MonoBehaviour
{
	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particle;

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xD2CC14", Offset = "0xD2CC14", VA = "0xD2CC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xD2CC30", Offset = "0xD2CC30", VA = "0xD2CC30")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xD2CCDC", Offset = "0xD2CCDC", VA = "0xD2CCDC")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xD2CD88", Offset = "0xD2CD88", VA = "0xD2CD88")]
	public ShowParticles()
	{
	}
}
[Token(Token = "0x2000314")]
public class Signal : MonoBehaviour
{
	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISignal uiSignal;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnSignal;

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xD2CD90", Offset = "0xD2CD90", VA = "0xD2CD90")]
	public void Signaling()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xD2CE18", Offset = "0xD2CE18", VA = "0xD2CE18")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xD2CE9C", Offset = "0xD2CE9C", VA = "0xD2CE9C")]
	public void BeatSignal(float d)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xD2CEB8", Offset = "0xD2CEB8", VA = "0xD2CEB8")]
	public void BeatSignal()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xD2CED4", Offset = "0xD2CED4", VA = "0xD2CED4")]
	private void CheckExplosionCounting()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xD2CED8", Offset = "0xD2CED8", VA = "0xD2CED8")]
	public Signal()
	{
	}
}
[Token(Token = "0x2000315")]
public class SkinChanger : MonoBehaviour
{
	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer mainMesh;

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xD2CEE0", Offset = "0xD2CEE0", VA = "0xD2CEE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xD2CF78", Offset = "0xD2CF78", VA = "0xD2CF78")]
	public SkinChanger()
	{
	}
}
[Token(Token = "0x2000316")]
public class SliceRootBone : MonoBehaviour
{
	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnemyMelee enemy;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool set;

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xD2CF80", Offset = "0xD2CF80", VA = "0xD2CF80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xD2CFD8", Offset = "0xD2CFD8", VA = "0xD2CFD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xD2D008", Offset = "0xD2D008", VA = "0xD2D008")]
	public void SetBone()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xD2D1A0", Offset = "0xD2D1A0", VA = "0xD2D1A0")]
	public SliceRootBone()
	{
	}
}
[Token(Token = "0x2000317")]
public class SlowMotion : MotionChecker
{
	[Token(Token = "0x2000318")]
	[CompilerGenerated]
	private sealed class <SlowMoIn>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlowMotion <>4__this;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xD2D4FC", Offset = "0xD2D4FC", VA = "0xD2D4FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xD2D544", Offset = "0xD2D544", VA = "0xD2D544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xD2D2D0", Offset = "0xD2D2D0", VA = "0xD2D2D0")]
		[DebuggerHidden]
		public <SlowMoIn>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xD2D338", Offset = "0xD2D338", VA = "0xD2D338", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xD2D33C", Offset = "0xD2D33C", VA = "0xD2D33C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xD2D504", Offset = "0xD2D504", VA = "0xD2D504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000319")]
	[CompilerGenerated]
	private sealed class <SlowMoOut>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlowMotion <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xD2D75C", Offset = "0xD2D75C", VA = "0xD2D75C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xD2D7A4", Offset = "0xD2D7A4", VA = "0xD2D7A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xD2D2F8", Offset = "0xD2D2F8", VA = "0xD2D2F8")]
		[DebuggerHidden]
		public <SlowMoOut>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xD2D54C", Offset = "0xD2D54C", VA = "0xD2D54C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xD2D550", Offset = "0xD2D550", VA = "0xD2D550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xD2D764", Offset = "0xD2D764", VA = "0xD2D764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool activate;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeScale;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float musicPitch;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xD2D1A8", Offset = "0xD2D1A8", VA = "0xD2D1A8", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xD2D1E8", Offset = "0xD2D1E8", VA = "0xD2D1E8")]
	[IteratorStateMachine(typeof(<SlowMoIn>d__5))]
	private IEnumerator SlowMoIn()
	{
		return null;
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xD2D25C", Offset = "0xD2D25C", VA = "0xD2D25C")]
	[IteratorStateMachine(typeof(<SlowMoOut>d__6))]
	private IEnumerator SlowMoOut()
	{
		return null;
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xD2D320", Offset = "0xD2D320", VA = "0xD2D320")]
	public SlowMotion()
	{
	}
}
[Token(Token = "0x200031A")]
public class SnakeAnimationSignal : MonoBehaviour
{
	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemySnake main;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Signal signal;

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xD2D7AC", Offset = "0xD2D7AC", VA = "0xD2D7AC")]
	private void Signaling()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xD2D7C4", Offset = "0xD2D7C4", VA = "0xD2D7C4")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xD2D7DC", Offset = "0xD2D7DC", VA = "0xD2D7DC")]
	private void MissEnemy()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xD2D800", Offset = "0xD2D800", VA = "0xD2D800")]
	public void Slowmo()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xD2D81C", Offset = "0xD2D81C", VA = "0xD2D81C")]
	public void CheckDamage()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xD2D838", Offset = "0xD2D838", VA = "0xD2D838")]
	public void UnCheckDamage()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xD2D854", Offset = "0xD2D854", VA = "0xD2D854")]
	public void ShowArrows()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xD2D870", Offset = "0xD2D870", VA = "0xD2D870")]
	public void HideArrows()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xD2D88C", Offset = "0xD2D88C", VA = "0xD2D88C")]
	public void BeatSignal()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xD2D8A8", Offset = "0xD2D8A8", VA = "0xD2D8A8")]
	private void DodgeSignal()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xD2D8C4", Offset = "0xD2D8C4", VA = "0xD2D8C4")]
	private void StopDodgeSignal()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xD2D8E0", Offset = "0xD2D8E0", VA = "0xD2D8E0")]
	public SnakeAnimationSignal()
	{
	}
}
[Token(Token = "0x200031B")]
public class SparkEffect : CollisionEffect
{
	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject spark;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip sparkSound;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float volumeScale;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParticleSystemController sparkPS;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 pos;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 rot;

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xD2D8E8", Offset = "0xD2D8E8", VA = "0xD2D8E8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xD2D8F0", Offset = "0xD2D8F0", VA = "0xD2D8F0", Slot = "6")]
	public override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xD2DAD4", Offset = "0xD2DAD4", VA = "0xD2DAD4", Slot = "7")]
	protected override void ShowParticles()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xD2DB68", Offset = "0xD2DB68", VA = "0xD2DB68")]
	public SparkEffect()
	{
	}
}
[Token(Token = "0x200031C")]
public class SparkEffectSnake : SparkEffect
{
	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xD2DB7C", Offset = "0xD2DB7C", VA = "0xD2DB7C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xD2DC24", Offset = "0xD2DC24", VA = "0xD2DC24")]
	public SparkEffectSnake()
	{
	}
}
[Token(Token = "0x200031D")]
public class SteamLeaderBoardUploader : LeaderboardUploader
{
	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xD2DC38", Offset = "0xD2DC38", VA = "0xD2DC38")]
	public SteamLeaderBoardUploader()
	{
	}
}
[Token(Token = "0x200031E")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x170000F1")]
	public static bool Initialized
	{
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xD2DC40", Offset = "0xD2DC40", VA = "0xD2DC40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xD2DC48", Offset = "0xD2DC48", VA = "0xD2DC48")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x200031F")]
public class SteamTest : MonoBehaviour
{
	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xD2DC50", Offset = "0xD2DC50", VA = "0xD2DC50")]
	public SteamTest()
	{
	}
}
[Token(Token = "0x2000320")]
public class BindPoseExample : MonoBehaviour
{
	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xD2DC58", Offset = "0xD2DC58", VA = "0xD2DC58")]
	[ContextMenu("Process")]
	public void Process()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xD2E788", Offset = "0xD2E788", VA = "0xD2E788")]
	public BindPoseExample()
	{
	}
}
[Token(Token = "0x2000321")]
public class BonesRenamer : MonoBehaviour
{
	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _root;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> _bones;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _prefix;

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xD2E790", Offset = "0xD2E790", VA = "0xD2E790")]
	[ContextMenu("Add Prefix")]
	public void AddPrefix()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xD2EC90", Offset = "0xD2EC90", VA = "0xD2EC90")]
	[ContextMenu("Remove Prefix")]
	public void RemovePrefix()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xD2E90C", Offset = "0xD2E90C", VA = "0xD2E90C")]
	private void AddChildsToList(Transform parent, List<GameObject> list)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xD2EE28", Offset = "0xD2EE28", VA = "0xD2EE28")]
	public BonesRenamer()
	{
	}
}
[Token(Token = "0x2000322")]
public class BonesReplacer : MonoBehaviour
{
	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinnedMeshRenderer _origin;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinnedMeshRenderer _recipient;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xD2EE30", Offset = "0xD2EE30", VA = "0xD2EE30")]
	[ContextMenu("Process")]
	public void Process()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xD2EEF0", Offset = "0xD2EEF0", VA = "0xD2EEF0")]
	[ContextMenu("Smart Process")]
	public void SmartProcess()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xD2F17C", Offset = "0xD2F17C", VA = "0xD2F17C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xD2F180", Offset = "0xD2F180", VA = "0xD2F180")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xD2F184", Offset = "0xD2F184", VA = "0xD2F184")]
	public BonesReplacer()
	{
	}
}
[Token(Token = "0x2000323")]
public class RagDollCopyer : MonoBehaviour
{
	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xD2F18C", Offset = "0xD2F18C", VA = "0xD2F18C")]
	public RagDollCopyer()
	{
	}
}
[Token(Token = "0x2000324")]
public class TestAnimSpeed : MonoBehaviour
{
	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float attackDistance;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPos;

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xD2F194", Offset = "0xD2F194", VA = "0xD2F194")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xD2F1C4", Offset = "0xD2F1C4", VA = "0xD2F1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xD2F430", Offset = "0xD2F430", VA = "0xD2F430")]
	public TestAnimSpeed()
	{
	}
}
[Token(Token = "0x2000325")]
public class TestAutoRun : MonoBehaviour
{
	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xD2F438", Offset = "0xD2F438", VA = "0xD2F438")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xD2F53C", Offset = "0xD2F53C", VA = "0xD2F53C")]
	private void Run()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xD2F5A0", Offset = "0xD2F5A0", VA = "0xD2F5A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xD2F6A4", Offset = "0xD2F6A4", VA = "0xD2F6A4")]
	public TestAutoRun()
	{
	}
}
[Token(Token = "0x2000326")]
public class TestBeat : MonoBehaviour
{
	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> beatTime;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool started;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xD2F6AC", Offset = "0xD2F6AC", VA = "0xD2F6AC")]
	private void StartMusic()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xD2F6D4", Offset = "0xD2F6D4", VA = "0xD2F6D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xD2F7D8", Offset = "0xD2F7D8", VA = "0xD2F7D8")]
	public TestBeat()
	{
	}
}
[Token(Token = "0x2000327")]
public class TestBeatScaler : MonoBehaviour
{
	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 scale;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float scaleFactor;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedFactor;

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xD2F860", Offset = "0xD2F860", VA = "0xD2F860")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xD2F994", Offset = "0xD2F994", VA = "0xD2F994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xD2F9FC", Offset = "0xD2F9FC", VA = "0xD2F9FC")]
	private void Scale(float factor)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xD2FA14", Offset = "0xD2FA14", VA = "0xD2FA14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xD2FB28", Offset = "0xD2FB28", VA = "0xD2FB28")]
	public TestBeatScaler()
	{
	}
}
[Token(Token = "0x2000328")]
public class TestBeatShifts : MonoBehaviour
{
	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TestBeatShifts _instance;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BeatMaker beatMaker;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> startTimes;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> hitTimes;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool doIt;

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xD2FB38", Offset = "0xD2FB38", VA = "0xD2FB38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xD2FB90", Offset = "0xD2FB90", VA = "0xD2FB90")]
	public void AddBeat(float startTime, float hitTime)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xD2FCA4", Offset = "0xD2FCA4", VA = "0xD2FCA4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xD2FE18", Offset = "0xD2FE18", VA = "0xD2FE18")]
	public TestBeatShifts()
	{
	}
}
[Token(Token = "0x2000329")]
public class TestBoneCopy : MonoBehaviour
{
	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doIt;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] targetBones;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xD2FED0", Offset = "0xD2FED0", VA = "0xD2FED0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xD30018", Offset = "0xD30018", VA = "0xD30018")]
	public TestBoneCopy()
	{
	}
}
[Token(Token = "0x200032A")]
public class TestCopyJointSettings : MonoBehaviour
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterJoint[] dummyJoints;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterJoint[] mainJoints;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doIt;

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xD30020", Offset = "0xD30020", VA = "0xD30020")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xD30318", Offset = "0xD30318", VA = "0xD30318")]
	public TestCopyJointSettings()
	{
	}
}
[Token(Token = "0x200032B")]
public class TestCuttable : MonoBehaviour, ICuttable
{
	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro info;

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xD30320", Offset = "0xD30320", VA = "0xD30320", Slot = "4")]
	public void Cutted(bool codirected, float parallelFactor, float distanceFactor, Vector3 hitVector, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xD30678", Offset = "0xD30678", VA = "0xD30678")]
	public TestCuttable()
	{
	}
}
[Token(Token = "0x200032C")]
public class TestDistance : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xD30680", Offset = "0xD30680", VA = "0xD30680")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xD30804", Offset = "0xD30804", VA = "0xD30804")]
	public TestDistance()
	{
	}
}
[Token(Token = "0x200032D")]
public class TestGizmos : MonoBehaviour
{
	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform centerPoint;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hitPoint;

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xD3080C", Offset = "0xD3080C", VA = "0xD3080C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xD30DF4", Offset = "0xD30DF4", VA = "0xD30DF4")]
	public TestGizmos()
	{
	}
}
[Token(Token = "0x200032E")]
public class TestHighlight : MonoBehaviour
{
	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float x;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve overlay;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HighlightEffect highlightEffect;

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xD30DFC", Offset = "0xD30DFC", VA = "0xD30DFC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xD30EAC", Offset = "0xD30EAC", VA = "0xD30EAC")]
	public TestHighlight()
	{
	}
}
[Token(Token = "0x200032F")]
public class TestJumpMath : MonoBehaviour
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform maxHeightPoint;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool count;

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xD30EB4", Offset = "0xD30EB4", VA = "0xD30EB4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xD30EC8", Offset = "0xD30EC8", VA = "0xD30EC8")]
	private void Count()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xD3127C", Offset = "0xD3127C", VA = "0xD3127C")]
	public TestJumpMath()
	{
	}
}
[Token(Token = "0x2000330")]
public class TestNextEnemy : MonoBehaviour
{
	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterSlicerSampleFast main;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject nextEnemy;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool checked_;

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xD32284", Offset = "0xD32284", VA = "0xD32284")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xD32304", Offset = "0xD32304", VA = "0xD32304")]
	private void NextAction()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xD3239C", Offset = "0xD3239C", VA = "0xD3239C")]
	public TestNextEnemy()
	{
	}
}
[Token(Token = "0x2000331")]
public class TestPointsCreator : MonoBehaviour
{
	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BeatMaker bm;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform p;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject point;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float step;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastPos;

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xD323A4", Offset = "0xD323A4", VA = "0xD323A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xD32450", Offset = "0xD32450", VA = "0xD32450")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xD32654", Offset = "0xD32654", VA = "0xD32654")]
	public TestPointsCreator()
	{
	}
}
[Token(Token = "0x2000332")]
public class TestReadWrite : MonoBehaviour
{
	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int n;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool doIt;

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xD3265C", Offset = "0xD3265C", VA = "0xD3265C")]
	private void ChangeLog()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xD328A0", Offset = "0xD328A0", VA = "0xD328A0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xD328B4", Offset = "0xD328B4", VA = "0xD328B4")]
	public TestReadWrite()
	{
	}
}
[Token(Token = "0x2000333")]
public class TestSnakeCut : MonoBehaviour
{
	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TestSnakeCut _instance;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemySnake snake;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform point;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float runDistance;

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xD328BC", Offset = "0xD328BC", VA = "0xD328BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xD32914", Offset = "0xD32914", VA = "0xD32914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xD32918", Offset = "0xD32918", VA = "0xD32918")]
	public void CreateSnake()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xD32AB0", Offset = "0xD32AB0", VA = "0xD32AB0")]
	public TestSnakeCut()
	{
	}
}
[Token(Token = "0x2000334")]
public class TestTimer : MonoBehaviour
{
	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float t;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool done;

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xD32AC0", Offset = "0xD32AC0", VA = "0xD32AC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xD32B28", Offset = "0xD32B28", VA = "0xD32B28")]
	public TestTimer()
	{
	}
}
[Token(Token = "0x2000335")]
public class TestTorque : MonoBehaviour
{
	[Token(Token = "0x2000336")]
	[CompilerGenerated]
	private sealed class <ImpulseProcess>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestTorque <>4__this;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0xD33118", Offset = "0xD33118", VA = "0xD33118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0xD33160", Offset = "0xD33160", VA = "0xD33160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xD32E28", Offset = "0xD32E28", VA = "0xD32E28")]
		[DebuggerHidden]
		public <ImpulseProcess>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xD32E74", Offset = "0xD32E74", VA = "0xD32E74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xD32E78", Offset = "0xD32E78", VA = "0xD32E78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xD33120", Offset = "0xD33120", VA = "0xD33120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator propellerAnim;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject propellerEffect;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform damagePoint;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform shootPoint;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody[] rigidbodies;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 shootVector;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 rotateVector;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float shootFactor;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float shootFactorPropeller;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float shootFactorPropellerUp;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float torqueDuration;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float torqueFactor;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float torqueFactorPropeller;

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xD32B30", Offset = "0xD32B30", VA = "0xD32B30")]
	private void Shoot()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xD32DB4", Offset = "0xD32DB4", VA = "0xD32DB4")]
	[IteratorStateMachine(typeof(<ImpulseProcess>d__15))]
	private IEnumerator ImpulseProcess()
	{
		return null;
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xD32E50", Offset = "0xD32E50", VA = "0xD32E50")]
	public TestTorque()
	{
	}
}
[Token(Token = "0x2000337")]
public class TimingBotTest : Spawner
{
	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Enemy[] enemiesOld;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Obstacle[] blocksOld;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MovableObstacle[] vehiclesOld;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BeatMaker.Beat beat;

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xD33168", Offset = "0xD33168", VA = "0xD33168")]
	public float GetTimeOld(Obstacle.Type type, float breakDistance, float cryptography = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xD332FC", Offset = "0xD332FC", VA = "0xD332FC")]
	public void CreateOld(Obstacle.Type type, Transform point, float breakDistance, float cryptography)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xD33B54", Offset = "0xD33B54", VA = "0xD33B54")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xD33C14", Offset = "0xD33C14", VA = "0xD33C14")]
	public void SpawnNewObstacle()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xD33C30", Offset = "0xD33C30", VA = "0xD33C30")]
	public void SpawnOldObstacle()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xD33C40", Offset = "0xD33C40", VA = "0xD33C40")]
	public TimingBotTest()
	{
	}
}
[Token(Token = "0x2000338")]
public class TitleActivation : MonoBehaviour
{
	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dist;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject decal;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform playerTran;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool activate;

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xD33C48", Offset = "0xD33C48", VA = "0xD33C48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xD33CA8", Offset = "0xD33CA8", VA = "0xD33CA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xD33D3C", Offset = "0xD33D3C", VA = "0xD33D3C")]
	public TitleActivation()
	{
	}
}
[Token(Token = "0x2000339")]
public class BuildingDoor : MonoBehaviour
{
	[Token(Token = "0x200033A")]
	[CompilerGenerated]
	private sealed class <OpenRotateDoor>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingDoor <>4__this;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <newSize>5__2;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xD34074", Offset = "0xD34074", VA = "0xD34074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xD340BC", Offset = "0xD340BC", VA = "0xD340BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xD33ED4", Offset = "0xD33ED4", VA = "0xD33ED4")]
		[DebuggerHidden]
		public <OpenRotateDoor>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xD33F2C", Offset = "0xD33F2C", VA = "0xD33F2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xD33F30", Offset = "0xD33F30", VA = "0xD33F30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xD3407C", Offset = "0xD3407C", VA = "0xD3407C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033B")]
	[CompilerGenerated]
	private sealed class <CloseRotateDoor>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingDoor <>4__this;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <newSize>5__2;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0xD341D4", Offset = "0xD341D4", VA = "0xD341D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0xD3421C", Offset = "0xD3421C", VA = "0xD3421C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xD33EFC", Offset = "0xD33EFC", VA = "0xD33EFC")]
		[DebuggerHidden]
		public <CloseRotateDoor>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xD340C4", Offset = "0xD340C4", VA = "0xD340C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xD340C8", Offset = "0xD340C8", VA = "0xD340C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xD341DC", Offset = "0xD341DC", VA = "0xD341DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeReturn;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutine;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xD33D44", Offset = "0xD33D44", VA = "0xD33D44")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xD33E0C", Offset = "0xD33E0C", VA = "0xD33E0C")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xD33D98", Offset = "0xD33D98", VA = "0xD33D98")]
	[IteratorStateMachine(typeof(<OpenRotateDoor>d__5))]
	private IEnumerator OpenRotateDoor()
	{
		return null;
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xD33E60", Offset = "0xD33E60", VA = "0xD33E60")]
	[IteratorStateMachine(typeof(<CloseRotateDoor>d__6))]
	private IEnumerator CloseRotateDoor()
	{
		return null;
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xD33F24", Offset = "0xD33F24", VA = "0xD33F24")]
	public BuildingDoor()
	{
	}
}
[Token(Token = "0x200033C")]
public class CinemaProjector : MonoBehaviour
{
	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cinemaGlow;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float deactivateDist;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform playerTran;

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xD34224", Offset = "0xD34224", VA = "0xD34224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xD34290", Offset = "0xD34290", VA = "0xD34290")]
	public void SetActive(bool state)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xD342F8", Offset = "0xD342F8", VA = "0xD342F8")]
	public CinemaProjector()
	{
	}
}
[Token(Token = "0x200033D")]
[CreateAssetMenu(fileName = "VideoTutorAsset", menuName = "JoyWay/Video/VideoTutorAsset")]
public class VideoTutorAsset : ScriptableObject
{
	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<VideoTutor> videos;

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xD34300", Offset = "0xD34300", VA = "0xD34300")]
	public VideoClip GetVideoClip(Obstacle.Type type)
	{
		return null;
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xD343B4", Offset = "0xD343B4", VA = "0xD343B4")]
	public VideoTutorAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200033E")]
public struct VideoTutor
{
	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Obstacle.Type type;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public VideoClip videoClip;
}
[Token(Token = "0x200033F")]
public class TutorialBeatMaker : BeatMaker
{
	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RestartMenu restartMenu;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool restarted;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xD343BC", Offset = "0xD343BC", VA = "0xD343BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xD34440", Offset = "0xD34440", VA = "0xD34440", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xD34444", Offset = "0xD34444", VA = "0xD34444")]
	public void StartTutorialGame()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xD34648", Offset = "0xD34648", VA = "0xD34648", Slot = "7")]
	public override void StartMusic()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xD34B4C", Offset = "0xD34B4C", VA = "0xD34B4C")]
	public void CheckPlayerLifes(int i, int k)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xD34A78", Offset = "0xD34A78", VA = "0xD34A78")]
	public void SetGameSetting()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xD351CC", Offset = "0xD351CC", VA = "0xD351CC")]
	public void ResetGameSetting()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xD34BF4", Offset = "0xD34BF4", VA = "0xD34BF4")]
	public void StopTutorBeatMaker()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xD350A0", Offset = "0xD350A0", VA = "0xD350A0")]
	public void ShowRestartMenu()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xD35284", Offset = "0xD35284", VA = "0xD35284")]
	public void RestartBeatMaker(VRButton vRButton)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xD35394", Offset = "0xD35394", VA = "0xD35394", Slot = "6")]
	public override void StopBeatMaker()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xD357AC", Offset = "0xD357AC", VA = "0xD357AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xD35A9C", Offset = "0xD35A9C", VA = "0xD35A9C")]
	public TutorialBeatMaker()
	{
	}
}
[Token(Token = "0x2000340")]
public class TutorialContollerBlockUI : MonoBehaviour
{
	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer oculusHandsRend;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer viveHandsRend;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer valveHandsRend;

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xD35AA4", Offset = "0xD35AA4", VA = "0xD35AA4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xD35AA8", Offset = "0xD35AA8", VA = "0xD35AA8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xD35AF4", Offset = "0xD35AF4", VA = "0xD35AF4")]
	public TutorialContollerBlockUI()
	{
	}
}
[Token(Token = "0x2000341")]
public class TutorialStopper : MotionChecker
{
	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MissBlock missBlock;

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xD35AFC", Offset = "0xD35AFC", VA = "0xD35AFC", Slot = "5")]
	protected override void Check()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xD35B1C", Offset = "0xD35B1C", VA = "0xD35B1C")]
	public TutorialStopper()
	{
	}
}
[Token(Token = "0x2000342")]
public class ArrowsController : MonoBehaviour
{
	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HitArrowsChecker hitArrowsChecker;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] arrowsRends;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] arrowsUIs;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] particles;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform playerPoint;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float signalDistance;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color startColor;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color endColor;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color v;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float c;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xD35B24", Offset = "0xD35B24", VA = "0xD35B24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xD35C78", Offset = "0xD35C78", VA = "0xD35C78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xD35EFC", Offset = "0xD35EFC", VA = "0xD35EFC")]
	private void Explosion()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xD360AC", Offset = "0xD360AC", VA = "0xD360AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xD36184", Offset = "0xD36184", VA = "0xD36184")]
	public ArrowsController()
	{
	}
}
[Token(Token = "0x2000343")]
public class Beater : MonoBehaviour
{
	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xD3618C", Offset = "0xD3618C", VA = "0xD3618C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xD36290", Offset = "0xD36290", VA = "0xD36290")]
	public Beater()
	{
	}
}
[Token(Token = "0x2000344")]
public class BossDodgeIndicator : HasDodgeIndicator
{
	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xD36298", Offset = "0xD36298", VA = "0xD36298", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xD3629C", Offset = "0xD3629C", VA = "0xD3629C")]
	public void DelayShow()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xD36370", Offset = "0xD36370", VA = "0xD36370")]
	public BossDodgeIndicator()
	{
	}
}
[Token(Token = "0x2000345")]
public class CamDistanceOpacity : MonoBehaviour
{
	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro text;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve opacity;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xD36390", Offset = "0xD36390", VA = "0xD36390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xD363F8", Offset = "0xD363F8", VA = "0xD363F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xD364E8", Offset = "0xD364E8", VA = "0xD364E8")]
	public CamDistanceOpacity()
	{
	}
}
[Token(Token = "0x2000346")]
public class CubeHeightBehavior : MonoBehaviour
{
	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mat;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro text;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 screenPoint;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 offset;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public JumpParameters jumpParameters;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlaneBehaviorForciblyMove planeBehavior;

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xD364F0", Offset = "0xD364F0", VA = "0xD364F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xD365B8", Offset = "0xD365B8", VA = "0xD365B8")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xD36740", Offset = "0xD36740", VA = "0xD36740")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xD368F4", Offset = "0xD368F4", VA = "0xD368F4")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xD369FC", Offset = "0xD369FC", VA = "0xD369FC")]
	public CubeHeightBehavior()
	{
	}
}
[Token(Token = "0x2000347")]
public class DodgeIndicator : MonoBehaviour
{
	[Token(Token = "0x2000348")]
	[CompilerGenerated]
	private sealed class <ShowProcess>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DodgeIndicator <>4__this;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xD36D04", Offset = "0xD36D04", VA = "0xD36D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0xD36D4C", Offset = "0xD36D4C", VA = "0xD36D4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xD36B24", Offset = "0xD36B24", VA = "0xD36B24")]
		[DebuggerHidden]
		public <ShowProcess>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xD36B68", Offset = "0xD36B68", VA = "0xD36B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xD36B6C", Offset = "0xD36B6C", VA = "0xD36B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xD36D0C", Offset = "0xD36D0C", VA = "0xD36D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float distance;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float velocity;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float delayTime;

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xD36A04", Offset = "0xD36A04", VA = "0xD36A04")]
	public void SetTime(float dodgeTime)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xD36AB0", Offset = "0xD36AB0", VA = "0xD36AB0")]
	[IteratorStateMachine(typeof(<ShowProcess>d__6))]
	private IEnumerator ShowProcess()
	{
		return null;
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xD36B4C", Offset = "0xD36B4C", VA = "0xD36B4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xD36B54", Offset = "0xD36B54", VA = "0xD36B54")]
	public DodgeIndicator()
	{
	}
}
[Token(Token = "0x2000349")]
public class DodgeUX : MonoBehaviour
{
	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xD36D54", Offset = "0xD36D54", VA = "0xD36D54")]
	public void Show()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xD36E04", Offset = "0xD36E04", VA = "0xD36E04")]
	public DodgeUX()
	{
	}
}
[Token(Token = "0x200034A")]
public class Exiter : MonoBehaviour
{
	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRButton button;

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xD36E0C", Offset = "0xD36E0C", VA = "0xD36E0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xD36EF4", Offset = "0xD36EF4", VA = "0xD36EF4")]
	private void Exit(VRButton _button)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xD36EFC", Offset = "0xD36EFC", VA = "0xD36EFC")]
	public Exiter()
	{
	}
}
[Token(Token = "0x200034B")]
public class HandScoreController : MonoBehaviour
{
	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float edgeAngle;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float okAngle;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isShowing;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isPlaying;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject showingObject;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro scoreField;

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xD36F04", Offset = "0xD36F04", VA = "0xD36F04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xD37168", Offset = "0xD37168", VA = "0xD37168")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xD37720", Offset = "0xD37720", VA = "0xD37720")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xD37A4C", Offset = "0xD37A4C", VA = "0xD37A4C")]
	private void GameStarted()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xD37B04", Offset = "0xD37B04", VA = "0xD37B04")]
	private void GameStopped()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xD375EC", Offset = "0xD375EC", VA = "0xD375EC")]
	private void UpdateUI(int _ = 0)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xD37B2C", Offset = "0xD37B2C", VA = "0xD37B2C")]
	private void UpdateUILives(int l, int _ = 0)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xD37B30", Offset = "0xD37B30", VA = "0xD37B30")]
	public HandScoreController()
	{
	}
}
[Token(Token = "0x200034C")]
public class HasDodgeIndicator : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	public enum DodgeSide
	{
		[Token(Token = "0x4000FBF")]
		Left,
		[Token(Token = "0x4000FC0")]
		Right,
		[Token(Token = "0x4000FC1")]
		Down
	}

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DodgeSide dodgeSide;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] fireRends;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xD37B44", Offset = "0xD37B44", VA = "0xD37B44")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xD362A0", Offset = "0xD362A0", VA = "0xD362A0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xD37BF4", Offset = "0xD37BF4", VA = "0xD37BF4")]
	protected void Show()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xD36380", Offset = "0xD36380", VA = "0xD36380")]
	public HasDodgeIndicator()
	{
	}
}
[Token(Token = "0x200034E")]
public class HeartUI : MonoBehaviour
{
	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material full;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material progress;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material empty;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startScaleValue;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxScaleValue;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float scaleValue;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float healScaleFactor;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro heal;

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xD37C50", Offset = "0xD37C50", VA = "0xD37C50")]
	public void BigScale()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xD37CD4", Offset = "0xD37CD4", VA = "0xD37CD4")]
	public void ResetScale()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xD37D58", Offset = "0xD37D58", VA = "0xD37D58")]
	public void Full()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xD37E10", Offset = "0xD37E10", VA = "0xD37E10")]
	public void Empty()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xD37E94", Offset = "0xD37E94", VA = "0xD37E94")]
	public void Progress()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xD37DDC", Offset = "0xD37DDC", VA = "0xD37DDC")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xD37EBC", Offset = "0xD37EBC", VA = "0xD37EBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xD37F80", Offset = "0xD37F80", VA = "0xD37F80")]
	public void DestroyHeart()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xD37FEC", Offset = "0xD37FEC", VA = "0xD37FEC")]
	public HeartUI()
	{
	}
}
[Token(Token = "0x200034F")]
public class Line : MonoBehaviour
{
	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer rend;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0.01f, 0.1f)]
	public float width;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] points;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool close;

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xD37FF4", Offset = "0xD37FF4", VA = "0xD37FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xD381A8", Offset = "0xD381A8", VA = "0xD381A8")]
	public void ChangePointPos(Vector3[] points)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xD37FF8", Offset = "0xD37FF8", VA = "0xD37FF8")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xD38254", Offset = "0xD38254", VA = "0xD38254")]
	public void Draw(List<Vector3> vPoints, Color vColor, float vWidth)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xD38458", Offset = "0xD38458", VA = "0xD38458")]
	public void Draw(List<Vector3> vPoints, Color vColor, float vFactor, float vWidth, bool vClose = true)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xD386A4", Offset = "0xD386A4", VA = "0xD386A4")]
	public Line()
	{
	}
}
[Token(Token = "0x2000350")]
public class LivesUI : MonoBehaviour
{
	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lifeUI;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startPoint;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dist;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<HeartUI> heartUIs;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string healText;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HeartUI progressHeartUI;

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xD386AC", Offset = "0xD386AC", VA = "0xD386AC")]
	public void SetLive()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xD389DC", Offset = "0xD389DC", VA = "0xD389DC")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xD38BC4", Offset = "0xD38BC4", VA = "0xD38BC4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xD38AEC", Offset = "0xD38AEC", VA = "0xD38AEC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xD38BE8", Offset = "0xD38BE8", VA = "0xD38BE8")]
	public void ChangeLive(int liveLeft)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xD38B10", Offset = "0xD38B10", VA = "0xD38B10")]
	public void SetHealText(string text)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xD38E10", Offset = "0xD38E10", VA = "0xD38E10")]
	public LivesUI()
	{
	}
}
[Token(Token = "0x2000351")]
public class CustomDifficultyRadioGroup : UIRadioGroup
{
	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xD38E98", Offset = "0xD38E98", VA = "0xD38E98")]
	public void UpdateButtonsLock(in CustomSongInfo _info)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xD3908C", Offset = "0xD3908C", VA = "0xD3908C")]
	public CustomDifficultyRadioGroup()
	{
	}
}
[Token(Token = "0x2000352")]
public class CustomSongsPage : LevelsPage
{
	[Token(Token = "0x2000353")]
	[CompilerGenerated]
	private sealed class <UpdateCovers>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomSongsPage <>4__this;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CustomSongInfo <info>5__3;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0xD3BEC0", Offset = "0xD3BEC0", VA = "0xD3BEC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xD3BF08", Offset = "0xD3BF08", VA = "0xD3BF08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xD3A06C", Offset = "0xD3A06C", VA = "0xD3A06C")]
		[DebuggerHidden]
		public <UpdateCovers>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xD3BB24", Offset = "0xD3BB24", VA = "0xD3BB24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xD3BB28", Offset = "0xD3BB28", VA = "0xD3BB28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xD3BEC8", Offset = "0xD3BEC8", VA = "0xD3BEC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000354")]
	[CompilerGenerated]
	private sealed class <GetSong>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomSongsPage <>4__this;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <operation>5__3;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xD3C3D0", Offset = "0xD3C3D0", VA = "0xD3C3D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xD3C418", Offset = "0xD3C418", VA = "0xD3C418", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xD3B930", Offset = "0xD3B930", VA = "0xD3B930")]
		[DebuggerHidden]
		public <GetSong>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xD3BF10", Offset = "0xD3BF10", VA = "0xD3BF10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xD3BF2C", Offset = "0xD3BF2C", VA = "0xD3BF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xD3C320", Offset = "0xD3C320", VA = "0xD3C320")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xD3C3D8", Offset = "0xD3C3D8", VA = "0xD3C3D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000355")]
	[CompilerGenerated]
	private sealed class <GetCover>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CustomSongsPage <>4__this;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xD3C780", Offset = "0xD3C780", VA = "0xD3C780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xD3C7C8", Offset = "0xD3C7C8", VA = "0xD3C7C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xD3B9E8", Offset = "0xD3B9E8", VA = "0xD3B9E8")]
		[DebuggerHidden]
		public <GetCover>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xD3C420", Offset = "0xD3C420", VA = "0xD3C420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xD3C43C", Offset = "0xD3C43C", VA = "0xD3C43C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xD3C6D0", Offset = "0xD3C6D0", VA = "0xD3C6D0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xD3C788", Offset = "0xD3C788", VA = "0xD3C788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<string, DifficultyLevel> OnCustomSongsLoaded;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro scoreField;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIRadioGroup difficultySelector;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIScroll scroller;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentDifficulty;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Pool pool;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<CustomSongInfo> customSongsList;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CustomSongInfo current;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CustomSongBigViewWindow viewWindow;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject noCustomsPage;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject yesCustomsPage;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Texture defaultTexture;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Vector2 yBounds;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject mainMenuDataPref;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Texture coverTexture;

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xD39178", Offset = "0xD39178", VA = "0xD39178", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xD3966C", Offset = "0xD3966C", VA = "0xD3966C")]
	public void RefreshInfo()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xD39FF8", Offset = "0xD39FF8", VA = "0xD39FF8")]
	[IteratorStateMachine(typeof(<UpdateCovers>d__14))]
	private IEnumerator UpdateCovers()
	{
		return null;
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xD3A094", Offset = "0xD3A094", VA = "0xD3A094", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xD3A5F4", Offset = "0xD3A5F4", VA = "0xD3A5F4")]
	private void UpdateButtonVisuals(float obj)
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xD3A818", Offset = "0xD3A818", VA = "0xD3A818", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xD3AA94", Offset = "0xD3AA94", VA = "0xD3AA94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xD3ADD4", Offset = "0xD3ADD4", VA = "0xD3ADD4")]
	private void SetActiveViewUI(bool _state)
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xD3B074", Offset = "0xD3B074", VA = "0xD3B074")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xD3B07C", Offset = "0xD3B07C", VA = "0xD3B07C", Slot = "7")]
	protected override int ItemsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xD3B0C4", Offset = "0xD3B0C4", VA = "0xD3B0C4", Slot = "8")]
	protected override void SetupButtonInfo(int _id)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xD3B11C", Offset = "0xD3B11C", VA = "0xD3B11C", Slot = "9")]
	protected override void SetupLevelInfo(int _id)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xD3B464", Offset = "0xD3B464", VA = "0xD3B464")]
	private void DifficultyChanged(int _wasDif, int _newDif)
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xD3B5D8", Offset = "0xD3B5D8", VA = "0xD3B5D8", Slot = "10")]
	protected override void StartGame(VRButton _button)
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xD3B63C", Offset = "0xD3B63C", VA = "0xD3B63C")]
	public void StartTester(VRButton button)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xD3B3D4", Offset = "0xD3B3D4", VA = "0xD3B3D4")]
	[IteratorStateMachine(typeof(<GetSong>d__29))]
	public IEnumerator GetSong(string url)
	{
		return null;
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xD3B958", Offset = "0xD3B958", VA = "0xD3B958")]
	[IteratorStateMachine(typeof(<GetCover>d__31))]
	private IEnumerator GetCover(string url)
	{
		return null;
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xD3BA10", Offset = "0xD3BA10", VA = "0xD3BA10")]
	public CustomSongsPage()
	{
	}
}
[Token(Token = "0x2000356")]
public abstract class LevelsPage : MonoBehaviour
{
	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Button generation (skip if hand made)")]
	public bool autoCreate;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startPoint;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float buttonWidth;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject itemButton;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Technical")]
	protected GameLevelAsset levels;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIRadioGroup levelSelector;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRButton startButton;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GenericButton> buttons;

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xD39218", Offset = "0xD39218", VA = "0xD39218", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xD3C7D0", Offset = "0xD3C7D0", VA = "0xD3C7D0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xD3A908", Offset = "0xD3A908", VA = "0xD3A908", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xD3C7EC", Offset = "0xD3C7EC", VA = "0xD3C7EC")]
	private void OnLevelChange(int _oldLevelId, int _newLevelId)
	{
	}

	[Token(Token = "0x6000FDA")]
	protected abstract int ItemsCount();

	[Token(Token = "0x6000FDB")]
	protected abstract void SetupButtonInfo(int _id);

	[Token(Token = "0x6000FDC")]
	protected abstract void SetupLevelInfo(int _id);

	[Token(Token = "0x6000FDD")]
	protected abstract void StartGame(VRButton _button);

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xD3BA94", Offset = "0xD3BA94", VA = "0xD3BA94")]
	protected LevelsPage()
	{
	}
}
[Token(Token = "0x2000357")]
public class MissionsPage : LevelsPage
{
	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro scoreField;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIRadioGroup difficultySelector;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LevelAsset levelAsset;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DifficultyLevel currentDifficulty;

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xD3C808", Offset = "0xD3C808", VA = "0xD3C808", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xD3C8F8", Offset = "0xD3C8F8", VA = "0xD3C8F8", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xD3C99C", Offset = "0xD3C99C", VA = "0xD3C99C", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xD3CA8C", Offset = "0xD3CA8C", VA = "0xD3CA8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xD3CA94", Offset = "0xD3CA94", VA = "0xD3CA94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xD3CA9C", Offset = "0xD3CA9C", VA = "0xD3CA9C", Slot = "7")]
	protected override int ItemsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xD3CB08", Offset = "0xD3CB08", VA = "0xD3CB08", Slot = "8")]
	protected override void SetupButtonInfo(int _id)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xD3CBD8", Offset = "0xD3CBD8", VA = "0xD3CBD8", Slot = "9")]
	protected override void SetupLevelInfo(int _id)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xD3CD8C", Offset = "0xD3CD8C", VA = "0xD3CD8C")]
	private void DifficultyChanged(int _wasDif, int _newDif)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xD3CE2C", Offset = "0xD3CE2C", VA = "0xD3CE2C")]
	private void UpdateDifficultyPanel()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xD3CEFC", Offset = "0xD3CEFC", VA = "0xD3CEFC", Slot = "10")]
	protected override void StartGame(VRButton _button)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xD3D018", Offset = "0xD3D018", VA = "0xD3D018")]
	public MissionsPage()
	{
	}
}
[Token(Token = "0x2000358")]
public class TutorialsPage : LevelsPage
{
	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TutorialState[] tutorsStates;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro descriptionField;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentTutor;

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xD3D01C", Offset = "0xD3D01C", VA = "0xD3D01C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xD3D180", Offset = "0xD3D180", VA = "0xD3D180", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xD3D208", Offset = "0xD3D208", VA = "0xD3D208", Slot = "7")]
	protected override int ItemsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xD3D22C", Offset = "0xD3D22C", VA = "0xD3D22C", Slot = "8")]
	protected override void SetupButtonInfo(int _id)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xD3D230", Offset = "0xD3D230", VA = "0xD3D230", Slot = "9")]
	protected override void SetupLevelInfo(int _id)
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xD3D238", Offset = "0xD3D238", VA = "0xD3D238")]
	private void UpdateDecriptionPanel(int _id)
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xD3D2FC", Offset = "0xD3D2FC", VA = "0xD3D2FC")]
	private void LocaleChanged(Locale locale)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xD3D304", Offset = "0xD3D304", VA = "0xD3D304", Slot = "10")]
	protected override void StartGame(VRButton _button)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xD3D5F4", Offset = "0xD3D5F4", VA = "0xD3D5F4")]
	public TutorialsPage()
	{
	}
}
[Token(Token = "0x2000359")]
public class RotateAround : MonoBehaviour
{
	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xD3D5F8", Offset = "0xD3D5F8", VA = "0xD3D5F8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xD3D6BC", Offset = "0xD3D6BC", VA = "0xD3D6BC")]
	public RotateAround()
	{
	}
}
[Token(Token = "0x200035A")]
public class ScoreFly : MonoBehaviour
{
	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve velocityCurve;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve popEffect;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float state;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform scorePoint;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer rend;

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xD3D6C4", Offset = "0xD3D6C4", VA = "0xD3D6C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xD3D740", Offset = "0xD3D740", VA = "0xD3D740")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xD3DB7C", Offset = "0xD3DB7C", VA = "0xD3DB7C")]
	public ScoreFly()
	{
	}
}
[Token(Token = "0x200035B")]
public class ScoreTextSet : MonoBehaviour
{
	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro text;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform scorePoint;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve opacity;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxDistance;

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xD3DB84", Offset = "0xD3DB84", VA = "0xD3DB84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xD3DBFC", Offset = "0xD3DBFC", VA = "0xD3DBFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xD3DCCC", Offset = "0xD3DCCC", VA = "0xD3DCCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xD3DEA4", Offset = "0xD3DEA4", VA = "0xD3DEA4")]
	public ScoreTextSet()
	{
	}
}
[Token(Token = "0x200035C")]
public class SlowTurning : MonoBehaviour
{
	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform followTarget;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookTarget;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float turnSpeed;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xD3DEAC", Offset = "0xD3DEAC", VA = "0xD3DEAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xD3E074", Offset = "0xD3E074", VA = "0xD3E074")]
	public SlowTurning()
	{
	}
}
[Token(Token = "0x200035D")]
public class UI : MonoBehaviour
{
	[Token(Token = "0x200035E")]
	[CompilerGenerated]
	private sealed class <MotionFromCamera>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UI <>4__this;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <v>5__2;

		[Token(Token = "0x17000100")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0xD3E860", Offset = "0xD3E860", VA = "0xD3E860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0xD3E8A8", Offset = "0xD3E8A8", VA = "0xD3E8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xD3E2CC", Offset = "0xD3E2CC", VA = "0xD3E2CC")]
		[DebuggerHidden]
		public <MotionFromCamera>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xD3E41C", Offset = "0xD3E41C", VA = "0xD3E41C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xD3E420", Offset = "0xD3E420", VA = "0xD3E420", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xD3E868", Offset = "0xD3E868", VA = "0xD3E868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer rend;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Transform cam;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float motionSpeed;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Transform parent;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Color startColor;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Color signalColor;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Color color;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool follow;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine coroutine;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool b;

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xD3E07C", Offset = "0xD3E07C", VA = "0xD3E07C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xD3E16C", Offset = "0xD3E16C", VA = "0xD3E16C", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xD3E1A0", Offset = "0xD3E1A0", VA = "0xD3E1A0", Slot = "6")]
	public virtual void Show()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xD3E2A8", Offset = "0xD3E2A8", VA = "0xD3E2A8", Slot = "7")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xD3E234", Offset = "0xD3E234", VA = "0xD3E234")]
	[IteratorStateMachine(typeof(<MotionFromCamera>d__14))]
	private IEnumerator MotionFromCamera()
	{
		return null;
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xD3E2F4", Offset = "0xD3E2F4", VA = "0xD3E2F4", Slot = "8")]
	public virtual void EndPosition()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xD3E348", Offset = "0xD3E348", VA = "0xD3E348", Slot = "9")]
	protected virtual void MotionCompleted()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xD3E34C", Offset = "0xD3E34C", VA = "0xD3E34C", Slot = "10")]
	public virtual void BeatSignal(float d)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xD3E350", Offset = "0xD3E350", VA = "0xD3E350", Slot = "11")]
	public virtual void BeatSignal()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xD3E354", Offset = "0xD3E354", VA = "0xD3E354", Slot = "12")]
	public virtual void Revert()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xD3E3B4", Offset = "0xD3E3B4", VA = "0xD3E3B4", Slot = "13")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xD3E3B8", Offset = "0xD3E3B8", VA = "0xD3E3B8")]
	public UI()
	{
	}
}
[Token(Token = "0x200035F")]
public class UIArrow : UI
{
	[Token(Token = "0x2000360")]
	[CompilerGenerated]
	private sealed class <DirectMotion>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIArrow <>4__this;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <sx>5__2;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <py>5__3;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <v>5__4;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xD3EF68", Offset = "0xD3EF68", VA = "0xD3EF68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xD3EFB0", Offset = "0xD3EFB0", VA = "0xD3EFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xD3E9E4", Offset = "0xD3E9E4", VA = "0xD3E9E4")]
		[DebuggerHidden]
		public <DirectMotion>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xD3EC20", Offset = "0xD3EC20", VA = "0xD3EC20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xD3EC24", Offset = "0xD3EC24", VA = "0xD3EC24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xD3EF70", Offset = "0xD3EF70", VA = "0xD3EF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000361")]
	[CompilerGenerated]
	private sealed class <BeatSignalProcess>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIArrow <>4__this;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <tmax>5__3;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0xD3F0DC", Offset = "0xD3F0DC", VA = "0xD3F0DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0xD3F124", Offset = "0xD3F124", VA = "0xD3F124", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xD3EB84", Offset = "0xD3EB84", VA = "0xD3EB84")]
		[DebuggerHidden]
		public <BeatSignalProcess>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xD3EFB8", Offset = "0xD3EFB8", VA = "0xD3EFB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xD3EFBC", Offset = "0xD3EFBC", VA = "0xD3EFBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xD3F0E4", Offset = "0xD3F0E4", VA = "0xD3F0E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float scaleX;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float delay;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Color v;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 locScale;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float beatDistance;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public float beatStartDistance;

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xD3E8B0", Offset = "0xD3E8B0", VA = "0xD3E8B0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xD3E910", Offset = "0xD3E910", VA = "0xD3E910", Slot = "6")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xD3E970", Offset = "0xD3E970", VA = "0xD3E970")]
	[IteratorStateMachine(typeof(<DirectMotion>d__8))]
	private IEnumerator DirectMotion()
	{
		return null;
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xD3EA0C", Offset = "0xD3EA0C", VA = "0xD3EA0C", Slot = "10")]
	public override void BeatSignal(float d)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xD3EAE0", Offset = "0xD3EAE0", VA = "0xD3EAE0", Slot = "11")]
	public override void BeatSignal()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xD3EB10", Offset = "0xD3EB10", VA = "0xD3EB10")]
	[IteratorStateMachine(typeof(<BeatSignalProcess>d__11))]
	private IEnumerator BeatSignalProcess()
	{
		return null;
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xD3EBAC", Offset = "0xD3EBAC", VA = "0xD3EBAC")]
	public UIArrow()
	{
	}
}
[Token(Token = "0x2000362")]
public class UIArrowTarget : UI
{
	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform hitPoint;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform visualTransform;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIArrow arrow;

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xD3F12C", Offset = "0xD3F12C", VA = "0xD3F12C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xD3F14C", Offset = "0xD3F14C", VA = "0xD3F14C", Slot = "14")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xD3F24C", Offset = "0xD3F24C", VA = "0xD3F24C", Slot = "6")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xD3F258", Offset = "0xD3F258", VA = "0xD3F258", Slot = "12")]
	public override void Revert()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xD3F280", Offset = "0xD3F280", VA = "0xD3F280", Slot = "7")]
	public override void Hide()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xD3F2A8", Offset = "0xD3F2A8", VA = "0xD3F2A8", Slot = "9")]
	protected override void MotionCompleted()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xD3F30C", Offset = "0xD3F30C", VA = "0xD3F30C", Slot = "10")]
	public override void BeatSignal(float d)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xD3F32C", Offset = "0xD3F32C", VA = "0xD3F32C", Slot = "11")]
	public override void BeatSignal()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xD3F34C", Offset = "0xD3F34C", VA = "0xD3F34C")]
	public UIArrowTarget()
	{
	}
}
[Token(Token = "0x2000363")]
public class UIAttackPoint : UI
{
	[Token(Token = "0x2000364")]
	[CompilerGenerated]
	private sealed class <AplhaShow>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIAttackPoint <>4__this;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000106")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0xD3F7A4", Offset = "0xD3F7A4", VA = "0xD3F7A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0xD3F7EC", Offset = "0xD3F7EC", VA = "0xD3F7EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xD3F4D0", Offset = "0xD3F4D0", VA = "0xD3F4D0")]
		[DebuggerHidden]
		public <AplhaShow>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xD3F590", Offset = "0xD3F590", VA = "0xD3F590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xD3F594", Offset = "0xD3F594", VA = "0xD3F594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xD3F7AC", Offset = "0xD3F7AC", VA = "0xD3F7AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int tintColor;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeToShow;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float delayHide;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color v;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color dodgeColor;

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xD3F3B4", Offset = "0xD3F3B4", VA = "0xD3F3B4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xD3F414", Offset = "0xD3F414", VA = "0xD3F414", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xD3F424", Offset = "0xD3F424", VA = "0xD3F424", Slot = "6")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xD3F45C", Offset = "0xD3F45C", VA = "0xD3F45C")]
	[IteratorStateMachine(typeof(<AplhaShow>d__8))]
	private IEnumerator AplhaShow()
	{
		return null;
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xD3F4F8", Offset = "0xD3F4F8", VA = "0xD3F4F8", Slot = "9")]
	protected override void MotionCompleted()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xD3F4FC", Offset = "0xD3F4FC", VA = "0xD3F4FC")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xD3F51C", Offset = "0xD3F51C", VA = "0xD3F51C")]
	public UIAttackPoint()
	{
	}
}
[Token(Token = "0x2000365")]
public class UiAudio : MonoBehaviour
{
	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xD3F7F4", Offset = "0xD3F7F4", VA = "0xD3F7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xD3F814", Offset = "0xD3F814", VA = "0xD3F814")]
	public UiAudio()
	{
	}
}
[Token(Token = "0x2000366")]
public class UIBigTarget : UITarget
{
	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform followTarget;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform visualTransform;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UISmallTarget smallTarget;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float smallTargetDelay;

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xD3F81C", Offset = "0xD3F81C", VA = "0xD3F81C")]
	public void BaseShow()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xD3F820", Offset = "0xD3F820", VA = "0xD3F820", Slot = "6")]
	public override void Show()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xD3F864", Offset = "0xD3F864", VA = "0xD3F864", Slot = "14")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xD3F95C", Offset = "0xD3F95C", VA = "0xD3F95C")]
	protected void ShowSmallTarget()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xD3F97C", Offset = "0xD3F97C", VA = "0xD3F97C", Slot = "7")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xD3F9A4", Offset = "0xD3F9A4", VA = "0xD3F9A4", Slot = "9")]
	protected override void MotionCompleted()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xD3F9EC", Offset = "0xD3F9EC", VA = "0xD3F9EC", Slot = "12")]
	public override void Revert()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xD3FA14", Offset = "0xD3FA14", VA = "0xD3FA14", Slot = "13")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xD3FC6C", Offset = "0xD3FC6C", VA = "0xD3FC6C")]
	public UIBigTarget()
	{
	}
}
[Token(Token = "0x2000367")]
public class UIBigTarget_Ricochet : UIBigTarget
{
	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool isRight;

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xD3FCD8", Offset = "0xD3FCD8", VA = "0xD3FCD8", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xD3FEDC", Offset = "0xD3FEDC", VA = "0xD3FEDC")]
	public void SetUI()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xD3FFAC", Offset = "0xD3FFAC", VA = "0xD3FFAC", Slot = "6")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xD3FFEC", Offset = "0xD3FFEC", VA = "0xD3FFEC")]
	public void SetSignalColor()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xD40084", Offset = "0xD40084", VA = "0xD40084")]
	public UIBigTarget_Ricochet()
	{
	}
}
[Token(Token = "0x2000368")]
public class UIBossActivate : MonoBehaviour
{
	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISignal signal;

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xD40090", Offset = "0xD40090", VA = "0xD40090", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xD4025C", Offset = "0xD4025C", VA = "0xD4025C")]
	protected void Show()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xD40280", Offset = "0xD40280", VA = "0xD40280")]
	protected void Hide()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xD402A4", Offset = "0xD402A4", VA = "0xD402A4", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xD40408", Offset = "0xD40408", VA = "0xD40408")]
	public UIBossActivate()
	{
	}
}
[Token(Token = "0x2000369")]
public class UIBossRicochet : UIBossActivate
{
	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RicochetByBlade ricochet;

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xD40410", Offset = "0xD40410", VA = "0xD40410", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xD4055C", Offset = "0xD4055C", VA = "0xD4055C", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xD406A8", Offset = "0xD406A8", VA = "0xD406A8")]
	public UIBossRicochet()
	{
	}
}
[Token(Token = "0x200036A")]
public class UIBoxerTarget : UI
{
	[Token(Token = "0x200036B")]
	[CompilerGenerated]
	private sealed class <DirectMotion>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIBoxerTarget <>4__this;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <d>5__2;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__3;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <p>5__4;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0xD40C3C", Offset = "0xD40C3C", VA = "0xD40C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0xD40C84", Offset = "0xD40C84", VA = "0xD40C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xD40948", Offset = "0xD40948", VA = "0xD40948")]
		[DebuggerHidden]
		public <DirectMotion>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xD40A34", Offset = "0xD40A34", VA = "0xD40A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xD40A38", Offset = "0xD40A38", VA = "0xD40A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xD40C44", Offset = "0xD40C44", VA = "0xD40C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform targetBone;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform[] directPoints;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer smallRend;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float delay;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform directPoint;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 startPosSmallRend;

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xD406B0", Offset = "0xD406B0", VA = "0xD406B0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xD4078C", Offset = "0xD4078C", VA = "0xD4078C")]
	public void SetDirectPoint(int pointNumber)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xD407DC", Offset = "0xD407DC", VA = "0xD407DC")]
	public Transform GetDirectPoint()
	{
		return null;
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xD407E4", Offset = "0xD407E4", VA = "0xD407E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xD4085C", Offset = "0xD4085C", VA = "0xD4085C", Slot = "6")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xD408D4", Offset = "0xD408D4", VA = "0xD408D4")]
	[IteratorStateMachine(typeof(<DirectMotion>d__11))]
	private IEnumerator DirectMotion()
	{
		return null;
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xD40970", Offset = "0xD40970", VA = "0xD40970", Slot = "12")]
	public override void Revert()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xD409CC", Offset = "0xD409CC", VA = "0xD409CC")]
	public UIBoxerTarget()
	{
	}
}
[Token(Token = "0x200036C")]
[CreateAssetMenu(fileName = "Arrow Parameters", menuName = "Against/Enemy/Arrow Parameters")]
public class UICanvasArrowParameters : ScriptableObject
{
	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient ColorCircle;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve SizeCircle;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient ColorArrow;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve SizeArrow;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blumCircle;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blumArrow;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float multiply;

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xD40C8C", Offset = "0xD40C8C", VA = "0xD40C8C")]
	public UICanvasArrowParameters()
	{
	}
}
[Token(Token = "0x200036D")]
public class UICanvasState : MonoBehaviour
{
	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Enemy _enemyBot;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UICanvasArrowParameters _parameters;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Direction _direction;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Transform> _anchorsBG;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Transform> _anchorsFillings;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Renderer> _imagesBG;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<Renderer> _imagesFillings;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool colourless;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool showCircles;

	[Token(Token = "0x1700010A")]
	public UICanvasArrowParameters Parameters
	{
		[Token(Token = "0x6001062")]
		[Address(RVA = "0xD40CA4", Offset = "0xD40CA4", VA = "0xD40CA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	public Enemy EnemyBot
	{
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xD40CAC", Offset = "0xD40CAC", VA = "0xD40CAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xD40CB4", Offset = "0xD40CB4", VA = "0xD40CB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xD40F1C", Offset = "0xD40F1C", VA = "0xD40F1C")]
	public void CheckUICIrcles()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xD40DFC", Offset = "0xD40DFC", VA = "0xD40DFC")]
	public void CheckDirection()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xD40D6C", Offset = "0xD40D6C", VA = "0xD40D6C")]
	public void SetDirection(Direction direction)
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xD410A4", Offset = "0xD410A4", VA = "0xD410A4")]
	public void SetAngle(Vector3 angle)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xD41218", Offset = "0xD41218", VA = "0xD41218", Slot = "4")]
	public virtual void SetPosition(float p)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xD41998", Offset = "0xD41998", VA = "0xD41998")]
	public UICanvasState()
	{
	}
}
[Token(Token = "0x200036E")]
public class UICanvasStateMesh : MonoBehaviour
{
	[Token(Token = "0x200036F")]
	[CompilerGenerated]
	private sealed class <LateStart>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UICanvasStateMesh <>4__this;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0xD425DC", Offset = "0xD425DC", VA = "0xD425DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0xD42624", Offset = "0xD42624", VA = "0xD42624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xD41AA0", Offset = "0xD41AA0", VA = "0xD41AA0")]
		[DebuggerHidden]
		public <LateStart>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xD424A0", Offset = "0xD424A0", VA = "0xD424A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xD424A4", Offset = "0xD424A4", VA = "0xD424A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xD425E4", Offset = "0xD425E4", VA = "0xD425E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UICanvasArrowParameters _parameters;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Transform> _anchorsCircle;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Transform> _anchorsArrows;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Renderer> _imagesCircle;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Renderer> _imagesArrow;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _myPosition;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _playerPosition;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _myPositionCurent;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _playerPositionCurent;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _distanceBetweenMeAndPlayer;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _distanceCurentBetweenMeAndPlayer;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _distance;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _lego;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool colourless;

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xD419A0", Offset = "0xD419A0", VA = "0xD419A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xD41A2C", Offset = "0xD41A2C", VA = "0xD41A2C")]
	[IteratorStateMachine(typeof(<LateStart>d__15))]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xD41AC8", Offset = "0xD41AC8", VA = "0xD41AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xD41BB4", Offset = "0xD41BB4", VA = "0xD41BB4")]
	public void SetAngle(Vector3 angle)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xD41D28", Offset = "0xD41D28", VA = "0xD41D28", Slot = "4")]
	public virtual void SetPosition(float p)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xD41BA4", Offset = "0xD41BA4", VA = "0xD41BA4")]
	private float DistanceOneDirection(float x1, float x2)
	{
		return default(float);
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xD42498", Offset = "0xD42498", VA = "0xD42498")]
	public UICanvasStateMesh()
	{
	}
}
[Token(Token = "0x2000370")]
public class UIChangertoNewWithDeleteVisual : MonoBehaviour
{
	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject oldUI;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject newUI;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshFilter plane;

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xD4262C", Offset = "0xD4262C", VA = "0xD4262C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xD42738", Offset = "0xD42738", VA = "0xD42738")]
	public UIChangertoNewWithDeleteVisual()
	{
	}
}
[Token(Token = "0x2000371")]
public class UIChangeToNew : MonoBehaviour
{
	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject oldUI;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject newUI;

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xD42740", Offset = "0xD42740", VA = "0xD42740")]
	private void Awake()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xD42804", Offset = "0xD42804", VA = "0xD42804")]
	public UIChangeToNew()
	{
	}
}
[Token(Token = "0x2000372")]
public class UIMeleeStayNew : MonoBehaviour
{
	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Enemy enemy;

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xD4280C", Offset = "0xD4280C", VA = "0xD4280C")]
	private void Start()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xD42964", Offset = "0xD42964", VA = "0xD42964")]
	private void Hide()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xD42988", Offset = "0xD42988", VA = "0xD42988")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xD42AE0", Offset = "0xD42AE0", VA = "0xD42AE0")]
	public UIMeleeStayNew()
	{
	}
}
[Token(Token = "0x2000373")]
public class UIOctopusClaw : UI
{
	[Token(Token = "0x2000374")]
	[CompilerGenerated]
	private sealed class <BeatSignalProcess>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIOctopusClaw <>4__this;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <tmax>5__3;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0xD42E10", Offset = "0xD42E10", VA = "0xD42E10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0xD42E58", Offset = "0xD42E58", VA = "0xD42E58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xD42BD0", Offset = "0xD42BD0", VA = "0xD42BD0")]
		[DebuggerHidden]
		public <BeatSignalProcess>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xD42CB4", Offset = "0xD42CB4", VA = "0xD42CB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xD42CB8", Offset = "0xD42CB8", VA = "0xD42CB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xD42E18", Offset = "0xD42E18", VA = "0xD42E18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color v;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float deltaChangeColor;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float timeChangeColor;

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xD42AE8", Offset = "0xD42AE8", VA = "0xD42AE8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xD42B3C", Offset = "0xD42B3C", VA = "0xD42B3C", Slot = "6")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xD42B5C", Offset = "0xD42B5C", VA = "0xD42B5C")]
	[IteratorStateMachine(typeof(<BeatSignalProcess>d__5))]
	private IEnumerator BeatSignalProcess()
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xD42BF8", Offset = "0xD42BF8", VA = "0xD42BF8", Slot = "12")]
	public override void Revert()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xD42C44", Offset = "0xD42C44", VA = "0xD42C44")]
	public UIOctopusClaw()
	{
	}
}
[Token(Token = "0x2000375")]
public class UIRadioGroup : MonoBehaviour
{
	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<VRButton> group;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Action<VRButton>> actions;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] enablable;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int defaultValue;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentValue;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool autoinit;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool inited;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<int, int> onChange;

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xD42E60", Offset = "0xD42E60", VA = "0xD42E60")]
	private void Start()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xD3AE1C", Offset = "0xD3AE1C", VA = "0xD3AE1C")]
	public void Uninit()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xD3A2E8", Offset = "0xD3A2E8", VA = "0xD3A2E8")]
	public void Init(int _defaultValue = -1)
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xD42E7C", Offset = "0xD42E7C", VA = "0xD42E7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xD42EFC", Offset = "0xD42EFC", VA = "0xD42EFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xD42F00", Offset = "0xD42F00", VA = "0xD42F00")]
	private void ProcessButtonClick(VRButton _button, int _id)
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xD3B328", Offset = "0xD3B328", VA = "0xD3B328")]
	public void PushButton(int _id)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xD42F34", Offset = "0xD42F34", VA = "0xD42F34")]
	public void SelectRadio(int _id)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xD39090", Offset = "0xD39090", VA = "0xD39090")]
	public UIRadioGroup()
	{
	}
}
[Token(Token = "0x2000377")]
public class UIScroll : VRButton, ILongHoldButton
{
	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform slider;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform scrollTarget;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isLooking;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform cursor;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float pageCapacity;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float itemSize;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float items;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float overflow;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float size;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float borderOffset;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float tMinMax;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float rTMinMax2;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float value;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<float> OnValueChange;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PosRot initPos;

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xD43088", Offset = "0xD43088", VA = "0xD43088", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xD43214", Offset = "0xD43214", VA = "0xD43214")]
	private void StartLooking(VRButton _button)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xD4328C", Offset = "0xD4328C", VA = "0xD4328C")]
	private void StopLooking(VRButton obj)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xD3AFA0", Offset = "0xD3AFA0", VA = "0xD3AFA0")]
	public void Init(float _itemCount)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xD43338", Offset = "0xD43338", VA = "0xD43338")]
	private void Update()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xD43294", Offset = "0xD43294", VA = "0xD43294")]
	public void SetPosValue(float _value)
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xD433B4", Offset = "0xD433B4", VA = "0xD433B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xD43534", Offset = "0xD43534", VA = "0xD43534")]
	public UIScroll()
	{
	}
}
[Token(Token = "0x2000378")]
public class UISignal : MonoBehaviour
{
	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UI[] uis;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action onShow;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action onHide;

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xD43548", Offset = "0xD43548", VA = "0xD43548")]
	public void Show()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xD435C8", Offset = "0xD435C8", VA = "0xD435C8")]
	public void Hide()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xD43648", Offset = "0xD43648", VA = "0xD43648")]
	public void Revert()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xD436AC", Offset = "0xD436AC", VA = "0xD436AC")]
	public void BeatSignal(float d)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xD43720", Offset = "0xD43720", VA = "0xD43720")]
	public void BeatSignal()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xD43784", Offset = "0xD43784", VA = "0xD43784")]
	public UISignal()
	{
	}
}
[Token(Token = "0x2000379")]
public class UISmallTarget : UITarget
{
	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xD4378C", Offset = "0xD4378C", VA = "0xD4378C", Slot = "9")]
	protected override void MotionCompleted()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xD437C0", Offset = "0xD437C0", VA = "0xD437C0")]
	public UISmallTarget()
	{
	}
}
[Token(Token = "0x200037A")]
public class UITarget : UI
{
	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ShootChecker shootChecker;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Obstacle main;

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xD3FD2C", Offset = "0xD3FD2C", VA = "0xD3FD2C", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xD3F924", Offset = "0xD3F924", VA = "0xD3F924", Slot = "14")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xD437C4", Offset = "0xD437C4", VA = "0xD437C4", Slot = "8")]
	public override void EndPosition()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xD437F4", Offset = "0xD437F4", VA = "0xD437F4")]
	private void Disactivate()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xD3FAC4", Offset = "0xD3FAC4", VA = "0xD3FAC4", Slot = "13")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xD3FC70", Offset = "0xD3FC70", VA = "0xD3FC70")]
	public UITarget()
	{
	}
}
[Token(Token = "0x200037B")]
public class UICarDriverNew : MonoBehaviour
{
	[Token(Token = "0x200037C")]
	[CompilerGenerated]
	private sealed class <StartChange>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UICarDriverNew <>4__this;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xD43FB0", Offset = "0xD43FB0", VA = "0xD43FB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xD43FF8", Offset = "0xD43FF8", VA = "0xD43FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xD43C00", Offset = "0xD43C00", VA = "0xD43C00")]
		[DebuggerHidden]
		public <StartChange>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xD43E3C", Offset = "0xD43E3C", VA = "0xD43E3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xD43E40", Offset = "0xD43E40", VA = "0xD43E40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xD43FB8", Offset = "0xD43FB8", VA = "0xD43FB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CarDriver carDriver;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UICanvasState uiCanvasState;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float beatTime;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float changeTime;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float t;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool change;

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xD439A4", Offset = "0xD439A4", VA = "0xD439A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xD43B8C", Offset = "0xD43B8C", VA = "0xD43B8C")]
	[IteratorStateMachine(typeof(<StartChange>d__8))]
	private IEnumerator StartChange()
	{
		return null;
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xD43C28", Offset = "0xD43C28", VA = "0xD43C28")]
	public void Hide()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xD43C4C", Offset = "0xD43C4C", VA = "0xD43C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xD43CDC", Offset = "0xD43CDC", VA = "0xD43CDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xD43E34", Offset = "0xD43E34", VA = "0xD43E34")]
	public UICarDriverNew()
	{
	}
}
[Token(Token = "0x200037D")]
public static class Bezier
{
	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xD44000", Offset = "0xD44000", VA = "0xD44000")]
	public static Vector3 GetPoint2(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xD440D8", Offset = "0xD440D8", VA = "0xD440D8")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xD44184", Offset = "0xD44184", VA = "0xD44184")]
	public static float Distance(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float descret = 1000f)
	{
		return default(float);
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xD44310", Offset = "0xD44310", VA = "0xD44310")]
	public static float GetDistanceFromStart(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, float descrete = 1000f)
	{
		return default(float);
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xD4449C", Offset = "0xD4449C", VA = "0xD4449C")]
	public static float GetTime(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float z, float discrete = 1000f)
	{
		return default(float);
	}
}
[Token(Token = "0x200037E")]
public class BezierWay : MonoBehaviour
{
	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform p0;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Transform p1;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Transform p2;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Transform p3;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float t;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool show;

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xD445C8", Offset = "0xD445C8", VA = "0xD445C8")]
	public Vector3 GetPoint(float _t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xD44694", Offset = "0xD44694", VA = "0xD44694")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xD448C4", Offset = "0xD448C4", VA = "0xD448C4")]
	public BezierWay()
	{
	}
}
[Token(Token = "0x200037F")]
public class CopyPosRot : MonoBehaviour
{
	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool pos;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool rot;

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xD448CC", Offset = "0xD448CC", VA = "0xD448CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xD44980", Offset = "0xD44980", VA = "0xD44980")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xD44A1C", Offset = "0xD44A1C", VA = "0xD44A1C")]
	public CopyPosRot()
	{
	}
}
[Token(Token = "0x2000380")]
public class CreatePanoramaCapture : MonoBehaviour
{
	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera targetCamera;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture cubeMapLeft;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture equirectRT;

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xD44A2C", Offset = "0xD44A2C", VA = "0xD44A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xD44A30", Offset = "0xD44A30", VA = "0xD44A30")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xD44A5C", Offset = "0xD44A5C", VA = "0xD44A5C")]
	public void Capture()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xD44AA0", Offset = "0xD44AA0", VA = "0xD44AA0")]
	public void Save(RenderTexture rt)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xD44C00", Offset = "0xD44C00", VA = "0xD44C00")]
	public CreatePanoramaCapture()
	{
	}
}
[Token(Token = "0x2000381")]
public class DisableEditingAttribute : PropertyAttribute
{
	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xD44C08", Offset = "0xD44C08", VA = "0xD44C08")]
	public DisableEditingAttribute()
	{
	}
}
[Token(Token = "0x2000382")]
public class EulerAnglesAttribute : PropertyAttribute
{
	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xD44C10", Offset = "0xD44C10", VA = "0xD44C10")]
	public EulerAnglesAttribute()
	{
	}
}
[Token(Token = "0x2000383")]
public class FPS : MonoBehaviour
{
	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int fps;

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xD44C18", Offset = "0xD44C18", VA = "0xD44C18")]
	private void Update()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xD44C54", Offset = "0xD44C54", VA = "0xD44C54")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xD44D2C", Offset = "0xD44D2C", VA = "0xD44D2C")]
	public FPS()
	{
	}
}
[Token(Token = "0x2000384")]
public class GrayBoxReseter : MonoBehaviour
{
	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] boxes;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float posFactor;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scFactor;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doIt;

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xD44D34", Offset = "0xD44D34", VA = "0xD44D34")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xD44FB4", Offset = "0xD44FB4", VA = "0xD44FB4")]
	public GrayBoxReseter()
	{
	}
}
[Token(Token = "0x2000385")]
public class IntensityController : MonoBehaviour
{
	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light l;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistance;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minDistance;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxIntensity;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform player;

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xD44FC8", Offset = "0xD44FC8", VA = "0xD44FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xD45068", Offset = "0xD45068", VA = "0xD45068")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xD45188", Offset = "0xD45188", VA = "0xD45188")]
	public IntensityController()
	{
	}
}
[Token(Token = "0x2000386")]
public class LODSController : MonoBehaviour
{
	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> targets;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LODGroup[] targetsLODS;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] lodFactors;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool canChange;

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xD45190", Offset = "0xD45190", VA = "0xD45190")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xD451A0", Offset = "0xD451A0", VA = "0xD451A0")]
	public void Change()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xD45318", Offset = "0xD45318", VA = "0xD45318")]
	public void Set()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xD45D04", Offset = "0xD45D04", VA = "0xD45D04")]
	public LODSController()
	{
	}
}
[Token(Token = "0x2000387")]
public class Mover : MonoBehaviour
{
	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xD45D0C", Offset = "0xD45D0C", VA = "0xD45D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xD45E10", Offset = "0xD45E10", VA = "0xD45E10")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xD45F4C", Offset = "0xD45F4C", VA = "0xD45F4C")]
	public void SetSpeed(int _speed)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xD45F58", Offset = "0xD45F58", VA = "0xD45F58")]
	private void Stop()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xD45FB0", Offset = "0xD45FB0", VA = "0xD45FB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xD460B4", Offset = "0xD460B4", VA = "0xD460B4")]
	public Mover()
	{
	}
}
[Token(Token = "0x2000388")]
public class MoverAxeTracerCopier : MonoBehaviour
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _axeRight;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _axeLeft;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _bebra;

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xBEAEB0", Offset = "0xBEAEB0", VA = "0xBEAEB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xBEAF18", Offset = "0xBEAF18", VA = "0xBEAF18")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xBEAFC8", Offset = "0xBEAFC8", VA = "0xBEAFC8")]
	public MoverAxeTracerCopier()
	{
	}
}
[Serializable]
[Token(Token = "0x2000389")]
public struct PosRot
{
	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 pos;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[EulerAngles]
	public Quaternion rot;

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xBEAFD0", Offset = "0xBEAFD0", VA = "0xBEAFD0")]
	public PosRot(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xBEAFE4", Offset = "0xBEAFE4", VA = "0xBEAFE4")]
	public static implicit operator PosRot(Transform t)
	{
		return default(PosRot);
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xBEB048", Offset = "0xBEB048", VA = "0xBEB048")]
	public static PosRot operator -(PosRot a, PosRot b)
	{
		return default(PosRot);
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xBEB134", Offset = "0xBEB134", VA = "0xBEB134")]
	public static PosRot operator +(PosRot a, PosRot b)
	{
		return default(PosRot);
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xBEB1F0", Offset = "0xBEB1F0", VA = "0xBEB1F0")]
	public PosRot AddAsChild(PosRot child)
	{
		return default(PosRot);
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xBEB2CC", Offset = "0xBEB2CC", VA = "0xBEB2CC")]
	public PosRot GetAsChild(PosRot child)
	{
		return default(PosRot);
	}

	[MethodImpl(256)]
	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xBEB3C8", Offset = "0xBEB3C8", VA = "0xBEB3C8")]
	public static PosRot Lerp(PosRot a, PosRot b, float t)
	{
		return default(PosRot);
	}
}
[Token(Token = "0x200038A")]
public class RagdollSetting : MonoBehaviour
{
	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] rigidbodies;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3[] poses;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Quaternion[] rotates;

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xBEB468", Offset = "0xBEB468", VA = "0xBEB468")]
	public bool IsRagdoll()
	{
		return default(bool);
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xBEB4D8", Offset = "0xBEB4D8", VA = "0xBEB4D8")]
	public bool IsRagdoll(int n)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xBEB51C", Offset = "0xBEB51C", VA = "0xBEB51C")]
	public void FindRigibodies()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xBEB6DC", Offset = "0xBEB6DC", VA = "0xBEB6DC")]
	public void SetKinematic(int n, bool state)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xBEB77C", Offset = "0xBEB77C", VA = "0xBEB77C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xBEB89C", Offset = "0xBEB89C", VA = "0xBEB89C")]
	public RagdollSetting()
	{
	}
}
[Token(Token = "0x200038B")]
public class SelectTool : MonoBehaviour
{
	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xBEB8A4", Offset = "0xBEB8A4", VA = "0xBEB8A4")]
	public UnityEngine.Object[] GetActiveObjects(UnityEngine.Object[] allObjects)
	{
		return null;
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xBEBA2C", Offset = "0xBEBA2C", VA = "0xBEBA2C")]
	public void KillInactiveSellected(UnityEngine.Object[] _sellected)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xBEBB24", Offset = "0xBEBB24", VA = "0xBEBB24")]
	public SelectTool()
	{
	}
}
[Token(Token = "0x200038C")]
public class SoundPlayer : MonoBehaviour
{
	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xBEBB2C", Offset = "0xBEBB2C", VA = "0xBEBB2C")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xBEBB48", Offset = "0xBEBB48", VA = "0xBEBB48")]
	public SoundPlayer()
	{
	}
}
[Token(Token = "0x200038D")]
public class TrackingWaypoints : MonoBehaviour
{
	[Token(Token = "0x200038E")]
	[CompilerGenerated]
	private sealed class <Move>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackingWaypoints <>4__this;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeMove>5__2;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPoint>5__4;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <startRot>5__5;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <t>5__6;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xBEC084", Offset = "0xBEC084", VA = "0xBEC084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xBEC0CC", Offset = "0xBEC0CC", VA = "0xBEC0CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xBEBBE4", Offset = "0xBEBBE4", VA = "0xBEBBE4")]
		[DebuggerHidden]
		public <Move>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xBEBC1C", Offset = "0xBEBC1C", VA = "0xBEBC1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xBEBC20", Offset = "0xBEBC20", VA = "0xBEBC20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xBEC08C", Offset = "0xBEC08C", VA = "0xBEC08C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Waypoints waypoints;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveDuration;

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xBEBB50", Offset = "0xBEBB50", VA = "0xBEBB50")]
	public void StartMove()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xBEBB70", Offset = "0xBEBB70", VA = "0xBEBB70")]
	[IteratorStateMachine(typeof(<Move>d__3))]
	private IEnumerator Move()
	{
		return null;
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xBEBC0C", Offset = "0xBEBC0C", VA = "0xBEBC0C")]
	public TrackingWaypoints()
	{
	}
}
[Token(Token = "0x200038F")]
public static class TransformMethods
{
	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xBEC0D4", Offset = "0xBEC0D4", VA = "0xBEC0D4")]
	public static void CopyLocalPosRot(this Transform to, Transform from)
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xBEC128", Offset = "0xBEC128", VA = "0xBEC128")]
	public static void CopyLocalPosRot(this Transform to, PosRot from)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xBEC16C", Offset = "0xBEC16C", VA = "0xBEC16C")]
	public static void CopyGlobalPosRot(this Transform to, Transform from)
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xBEC1C0", Offset = "0xBEC1C0", VA = "0xBEC1C0")]
	public static void CopyGlobalPosRot(this Transform to, PosRot from)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xBEC204", Offset = "0xBEC204", VA = "0xBEC204")]
	public static PosRot Global(this Transform source)
	{
		return default(PosRot);
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xBEC268", Offset = "0xBEC268", VA = "0xBEC268")]
	public static void GlobalReset(this Transform to)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xBEC30C", Offset = "0xBEC30C", VA = "0xBEC30C")]
	public static void LocalReset(this Transform to)
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xBEC3B0", Offset = "0xBEC3B0", VA = "0xBEC3B0")]
	public static bool AlmostEquals(this Transform source, Transform target, float epsilonPos = 0.0001f, float epsilonRot = 0.1f)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000390")]
public class VolumetricController : MonoBehaviour
{
	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VolumetricLightBeam vlb;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistance;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minDistance;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxRangeLimit;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ebasosina;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform playerHead;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform player;

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xBEC4CC", Offset = "0xBEC4CC", VA = "0xBEC4CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xBEC594", Offset = "0xBEC594", VA = "0xBEC594")]
	private void Update()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xBEC738", Offset = "0xBEC738", VA = "0xBEC738")]
	public VolumetricController()
	{
	}
}
[Token(Token = "0x2000391")]
public class Waypoints : MonoBehaviour
{
	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] points;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentPoint;

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xBEBFCC", Offset = "0xBEBFCC", VA = "0xBEBFCC")]
	public PosRot NextPoint()
	{
		return default(PosRot);
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xBEC02C", Offset = "0xBEC02C", VA = "0xBEC02C")]
	public PosRot GetPoint()
	{
		return default(PosRot);
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xBEC740", Offset = "0xBEC740", VA = "0xBEC740")]
	public void ResetWaypoints()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xBEC74C", Offset = "0xBEC74C", VA = "0xBEC74C")]
	public Waypoints()
	{
	}
}
[Token(Token = "0x2000392")]
public class WeaponHighlighter : MonoBehaviour
{
	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] rends;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color highlightColor;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color startColor;

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xBEC75C", Offset = "0xBEC75C", VA = "0xBEC75C")]
	private void Start()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xBEC7A8", Offset = "0xBEC7A8", VA = "0xBEC7A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xBEC8DC", Offset = "0xBEC8DC", VA = "0xBEC8DC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xBEC9D0", Offset = "0xBEC9D0", VA = "0xBEC9D0")]
	public WeaponHighlighter()
	{
	}
}
[Token(Token = "0x2000393")]
public class LutBuilderFeature : ScriptableRendererFeature
{
	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lutEnable;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public ComputeShader lutBuilderShader;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int lutTextureSize;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lutDynamicRange;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LutBuilderPass lutBuilderPass;

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xBECA28", Offset = "0xBECA28", VA = "0xBECA28", Slot = "5")]
	public override void Create()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xBECD20", Offset = "0xBECD20", VA = "0xBECD20", Slot = "7")]
	public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xBECD44", Offset = "0xBECD44", VA = "0xBECD44")]
	public LutBuilderFeature()
	{
	}
}
[Token(Token = "0x2000394")]
internal class LutBuilderPass : ScriptableRenderPass
{
	[Token(Token = "0x2000395")]
	private static class ShaderConstants
	{
		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int _Lut_Params;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int _ColorBalance;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int _ColorFilter;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int _ChannelMixerRed;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int _ChannelMixerGreen;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int _ChannelMixerBlue;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int _HueSatCon;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int _Lift;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int _Gamma;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int _Gain;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int _Shadows;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int _Midtones;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int _Highlights;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int _ShaHiLimits;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int _SplitShadows;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int _SplitHighlights;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int _CurveMaster;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static readonly int _CurveRed;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly int _CurveGreen;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static readonly int _CurveBlue;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly int _CurveHueVsHue;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static readonly int _CurveHueVsSat;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly int _CurveLumVsSat;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static readonly int _CurveSatVsSat;
	}

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ComputeShader lutBuilderShader;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool lutEnable;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int lutTextureSize;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float lutDynamicRange;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private CommandBuffer lutBuffer;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ProfilingSampler lutProfilingSampler;

	[Token(Token = "0x40010ED")]
	private const string _3DLUT = "_3DLUT";

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int lutID;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int lutSizeID;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int lutRangeID;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private RenderTargetIdentifier lutIdfr;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private RenderTextureDescriptor lutDesc;

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xBECAC4", Offset = "0xBECAC4", VA = "0xBECAC4")]
	public LutBuilderPass(ComputeShader lutBuilderShader, bool lutEnable, int lutTextureSize, float lutDynamicRange)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xBECD60", Offset = "0xBECD60", VA = "0xBECD60", Slot = "9")]
	public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xBEE034", Offset = "0xBEE034", VA = "0xBEE034", Slot = "8")]
	public override void OnFinishCameraStackRendering(CommandBuffer cmd)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xBEE058", Offset = "0xBEE058", VA = "0xBEE058", Slot = "5")]
	public override void OnCameraSetup(CommandBuffer cmd, ref RenderingData renderingData)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xBEE05C", Offset = "0xBEE05C", VA = "0xBEE05C", Slot = "7")]
	public override void OnCameraCleanup(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000396")]
public class GAAdMobIntegration
{
	[Token(Token = "0x6001117")]
	[Address(RVA = "0xBEE4DC", Offset = "0xBEE4DC", VA = "0xBEE4DC")]
	public GAAdMobIntegration()
	{
	}
}
[Token(Token = "0x2000397")]
public class GAAequusIntegration
{
	[Token(Token = "0x6001118")]
	[Address(RVA = "0xBEE4E4", Offset = "0xBEE4E4", VA = "0xBEE4E4")]
	public static void ListenForImpressions(Action<string, string> callback)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xBEE4E8", Offset = "0xBEE4E8", VA = "0xBEE4E8")]
	public GAAequusIntegration()
	{
	}
}
[Token(Token = "0x2000398")]
public class GAFyberIntegration
{
	[Token(Token = "0x600111A")]
	[Address(RVA = "0xBEE4F0", Offset = "0xBEE4F0", VA = "0xBEE4F0")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xBEE4F4", Offset = "0xBEE4F4", VA = "0xBEE4F4")]
	public GAFyberIntegration()
	{
	}
}
[Token(Token = "0x2000399")]
public class GAHyperBidIntegration : MonoBehaviour
{
	[Token(Token = "0x600111C")]
	[Address(RVA = "0xBEE4FC", Offset = "0xBEE4FC", VA = "0xBEE4FC")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xBEE500", Offset = "0xBEE500", VA = "0xBEE500")]
	public GAHyperBidIntegration()
	{
	}
}
[Token(Token = "0x200039A")]
public class GAIronSourceIntegration
{
	[Token(Token = "0x600111E")]
	[Address(RVA = "0xBEE508", Offset = "0xBEE508", VA = "0xBEE508")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xBEE50C", Offset = "0xBEE50C", VA = "0xBEE50C")]
	public GAIronSourceIntegration()
	{
	}
}
[Token(Token = "0x200039B")]
public class GAMaxIntegration
{
	[Token(Token = "0x6001120")]
	[Address(RVA = "0xBEE514", Offset = "0xBEE514", VA = "0xBEE514")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xBEE518", Offset = "0xBEE518", VA = "0xBEE518")]
	public GAMaxIntegration()
	{
	}
}
[Token(Token = "0x200039C")]
public class GAMopubIntegration
{
	[Token(Token = "0x6001122")]
	[Address(RVA = "0xBEE520", Offset = "0xBEE520", VA = "0xBEE520")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xBEE524", Offset = "0xBEE524", VA = "0xBEE524")]
	public GAMopubIntegration()
	{
	}
}
[Token(Token = "0x200039D")]
public class GATopOnIntegration
{
	[Token(Token = "0x6001124")]
	[Address(RVA = "0xBEE52C", Offset = "0xBEE52C", VA = "0xBEE52C")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xBEE530", Offset = "0xBEE530", VA = "0xBEE530")]
	public GATopOnIntegration()
	{
	}
}
[Token(Token = "0x200039E")]
public class BasicSample : MonoBehaviour
{
	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _path;

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xBEE538", Offset = "0xBEE538", VA = "0xBEE538")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xBEF7F4", Offset = "0xBEF7F4", VA = "0xBEF7F4")]
	public void WriteResult(string[] paths)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xBEF8CC", Offset = "0xBEF8CC", VA = "0xBEF8CC")]
	public void WriteResult(string path)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xBEF8D4", Offset = "0xBEF8D4", VA = "0xBEF8D4")]
	public BasicSample()
	{
	}
}
[Token(Token = "0x200039F")]
[RequireComponent(typeof(Button))]
public class CanvasSampleOpenFileImage : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x20003A0")]
	[CompilerGenerated]
	private sealed class <OutputRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasSampleOpenFileImage <>4__this;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <loader>5__2;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0xBEFC78", Offset = "0xBEFC78", VA = "0xBEFC78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0xBEFCC0", Offset = "0xBEFCC0", VA = "0xBEFCC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xBEFB5C", Offset = "0xBEFB5C", VA = "0xBEFB5C")]
		[DebuggerHidden]
		public <OutputRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xBEFB8C", Offset = "0xBEFB8C", VA = "0xBEFB8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xBEFB90", Offset = "0xBEFB90", VA = "0xBEFB90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xBEFC80", Offset = "0xBEFC80", VA = "0xBEFC80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage output;

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xBEF8EC", Offset = "0xBEF8EC", VA = "0xBEF8EC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xBEF8F0", Offset = "0xBEF8F0", VA = "0xBEF8F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xBEF9A0", Offset = "0xBEF9A0", VA = "0xBEF9A0")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xBEFACC", Offset = "0xBEFACC", VA = "0xBEFACC")]
	[IteratorStateMachine(typeof(<OutputRoutine>d__4))]
	private IEnumerator OutputRoutine(string url)
	{
		return null;
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xBEFB84", Offset = "0xBEFB84", VA = "0xBEFB84")]
	public CanvasSampleOpenFileImage()
	{
	}
}
[Token(Token = "0x20003A1")]
[RequireComponent(typeof(Button))]
public class CanvasSampleOpenFileText : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x20003A2")]
	[CompilerGenerated]
	private sealed class <OutputRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasSampleOpenFileText <>4__this;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <loader>5__2;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001140")]
			[Address(RVA = "0xBF005C", Offset = "0xBF005C", VA = "0xBF005C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xBF00A4", Offset = "0xBF00A4", VA = "0xBF00A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xBEFF38", Offset = "0xBEFF38", VA = "0xBEFF38")]
		[DebuggerHidden]
		public <OutputRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xBEFF68", Offset = "0xBEFF68", VA = "0xBEFF68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xBEFF6C", Offset = "0xBEFF6C", VA = "0xBEFF6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xBF0064", Offset = "0xBF0064", VA = "0xBF0064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text output;

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xBEFCC8", Offset = "0xBEFCC8", VA = "0xBEFCC8", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xBEFCCC", Offset = "0xBEFCCC", VA = "0xBEFCCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xBEFD7C", Offset = "0xBEFD7C", VA = "0xBEFD7C")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xBEFEA8", Offset = "0xBEFEA8", VA = "0xBEFEA8")]
	[IteratorStateMachine(typeof(<OutputRoutine>d__4))]
	private IEnumerator OutputRoutine(string url)
	{
		return null;
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xBEFF60", Offset = "0xBEFF60", VA = "0xBEFF60")]
	public CanvasSampleOpenFileText()
	{
	}
}
[Token(Token = "0x20003A3")]
[RequireComponent(typeof(Button))]
public class CanvasSampleOpenFileTextMultiple : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x20003A4")]
	[CompilerGenerated]
	private sealed class <OutputRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] urlArr;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasSampleOpenFileTextMultiple <>4__this;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <outputText>5__2;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <loader>5__4;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0xBF05E8", Offset = "0xBF05E8", VA = "0xBF05E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0xBF0630", Offset = "0xBF0630", VA = "0xBF0630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xBF0424", Offset = "0xBF0424", VA = "0xBF0424")]
		[DebuggerHidden]
		public <OutputRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xBF0454", Offset = "0xBF0454", VA = "0xBF0454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xBF0458", Offset = "0xBF0458", VA = "0xBF0458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xBF05F0", Offset = "0xBF05F0", VA = "0xBF05F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text output;

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xBF00AC", Offset = "0xBF00AC", VA = "0xBF00AC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xBF00B0", Offset = "0xBF00B0", VA = "0xBF00B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xBF0160", Offset = "0xBF0160", VA = "0xBF0160")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xBF0394", Offset = "0xBF0394", VA = "0xBF0394")]
	[IteratorStateMachine(typeof(<OutputRoutine>d__4))]
	private IEnumerator OutputRoutine(string[] urlArr)
	{
		return null;
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xBF044C", Offset = "0xBF044C", VA = "0xBF044C")]
	public CanvasSampleOpenFileTextMultiple()
	{
	}
}
[Token(Token = "0x20003A5")]
[RequireComponent(typeof(Button))]
public class CanvasSampleSaveFileImage : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text output;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private byte[] _textureBytes;

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xBF0638", Offset = "0xBF0638", VA = "0xBF0638")]
	private void Awake()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xBF0750", Offset = "0xBF0750", VA = "0xBF0750", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xBF0754", Offset = "0xBF0754", VA = "0xBF0754")]
	private void Start()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xBF0804", Offset = "0xBF0804", VA = "0xBF0804")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xBF08F0", Offset = "0xBF08F0", VA = "0xBF08F0")]
	public CanvasSampleSaveFileImage()
	{
	}
}
[Token(Token = "0x20003A6")]
[RequireComponent(typeof(Button))]
public class CanvasSampleSaveFileText : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text output;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _data;

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xBF08F8", Offset = "0xBF08F8", VA = "0xBF08F8", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xBF08FC", Offset = "0xBF08FC", VA = "0xBF08FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xBF09AC", Offset = "0xBF09AC", VA = "0xBF09AC")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xBF0A98", Offset = "0xBF0A98", VA = "0xBF0A98")]
	public CanvasSampleSaveFileText()
	{
	}
}
[Token(Token = "0x20003A7")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xBF0AF0", Offset = "0xBF0AF0", VA = "0xBF0AF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xBF0B98", Offset = "0xBF0B98", VA = "0xBF0B98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xBF0C40", Offset = "0xBF0C40", VA = "0xBF0C40")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xBF10CC", Offset = "0xBF10CC", VA = "0xBF10CC")]
	public ChatController()
	{
	}
}
[Token(Token = "0x20003A8")]
public class DropdownSample : MonoBehaviour
{
	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Dropdown dropdownWithoutPlaceholder;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown dropdownWithPlaceholder;

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xBF10D4", Offset = "0xBF10D4", VA = "0xBF10D4")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xBF11DC", Offset = "0xBF11DC", VA = "0xBF11DC")]
	public DropdownSample()
	{
	}
}
[Token(Token = "0x20003A9")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x20003AA")]
	[CompilerGenerated]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0xBF1524", Offset = "0xBF1524", VA = "0xBF1524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0xBF156C", Offset = "0xBF156C", VA = "0xBF156C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xBF12E0", Offset = "0xBF12E0", VA = "0xBF12E0")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xBF1310", Offset = "0xBF1310", VA = "0xBF1310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xBF1314", Offset = "0xBF1314", VA = "0xBF1314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xBF152C", Offset = "0xBF152C", VA = "0xBF152C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xBF11E4", Offset = "0xBF11E4", VA = "0xBF11E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xBF126C", Offset = "0xBF126C", VA = "0xBF126C")]
	[IteratorStateMachine(typeof(<Start>d__4))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xBF1308", Offset = "0xBF1308", VA = "0xBF1308")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x20003AB")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x20003AC")]
	private static class Uniforms
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xBF1574", Offset = "0xBF1574", VA = "0xBF1574")]
	private void Start()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xBF15E8", Offset = "0xBF15E8", VA = "0xBF15E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xBF1744", Offset = "0xBF1744", VA = "0xBF1744")]
	public ExampleWheelController()
	{
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x20003AD")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xBF17B4", Offset = "0xBF17B4", VA = "0xBF17B4")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xBF17E4", Offset = "0xBF17E4", VA = "0xBF17E4")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xBF180C", Offset = "0xBF180C", VA = "0xBF180C")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x600116D")]
		[Address(RVA = "0xBF183C", Offset = "0xBF183C", VA = "0xBF183C")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x20003B2")]
		private static class Uniforms
		{
			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4001140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x20003B3")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4001147")]
			DepthTexture,
			[Token(Token = "0x4001148")]
			DepthNormalsTexture,
			[Token(Token = "0x4001149")]
			GBuffer
		}

		[Token(Token = "0x4001139")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x400113A")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x1700011C")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0xBF1844", Offset = "0xBF1844", VA = "0xBF1844")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x1700011D")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0xBF18E8", Offset = "0xBF18E8", VA = "0xBF18E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011E")]
		public override bool active
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0xBF1978", Offset = "0xBF1978", VA = "0xBF1978", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xBF19EC", Offset = "0xBF19EC", VA = "0xBF19EC", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xBF1A24", Offset = "0xBF1A24", VA = "0xBF1A24", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xBF1A64", Offset = "0xBF1A64", VA = "0xBF1A64", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xBF1ABC", Offset = "0xBF1ABC", VA = "0xBF1ABC", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xBF2480", Offset = "0xBF2480", VA = "0xBF2480")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x20003B5")]
		private static class Uniforms
		{
			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x400114A")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x1700011F")]
		public override bool active
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0xBF27B8", Offset = "0xBF27B8", VA = "0xBF27B8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xBF282C", Offset = "0xBF282C", VA = "0xBF282C")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xBF3180", Offset = "0xBF3180", VA = "0xBF3180")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x20003B7")]
		private static class Uniforms
		{
			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x20003B8")]
		private enum Pass
		{
			[Token(Token = "0x4001161")]
			Depth,
			[Token(Token = "0x4001162")]
			Normals,
			[Token(Token = "0x4001163")]
			MovecOpacity,
			[Token(Token = "0x4001164")]
			MovecImaging,
			[Token(Token = "0x4001165")]
			MovecArrows
		}

		[Token(Token = "0x20003B9")]
		private class ArrowArray
		{
			[Token(Token = "0x17000121")]
			public Mesh mesh
			{
				[Token(Token = "0x6001187")]
				[Address(RVA = "0xBF45D0", Offset = "0xBF45D0", VA = "0xBF45D0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001188")]
				[Address(RVA = "0xBF45D8", Offset = "0xBF45D8", VA = "0xBF45D8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000122")]
			public int columnCount
			{
				[Token(Token = "0x6001189")]
				[Address(RVA = "0xBF45E0", Offset = "0xBF45E0", VA = "0xBF45E0")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600118A")]
				[Address(RVA = "0xBF45E8", Offset = "0xBF45E8", VA = "0xBF45E8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000123")]
			public int rowCount
			{
				[Token(Token = "0x600118B")]
				[Address(RVA = "0xBF45F0", Offset = "0xBF45F0", VA = "0xBF45F0")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600118C")]
				[Address(RVA = "0xBF45F8", Offset = "0xBF45F8", VA = "0xBF45F8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0xBF3F80", Offset = "0xBF3F80", VA = "0xBF3F80")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0xBF3F58", Offset = "0xBF3F58", VA = "0xBF3F58")]
			public void Release()
			{
			}

			[Token(Token = "0x600118F")]
			[Address(RVA = "0xBF3F50", Offset = "0xBF3F50", VA = "0xBF3F50")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4001157")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x17000120")]
		public override bool active
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0xBF3430", Offset = "0xBF3430", VA = "0xBF3430", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xBF34BC", Offset = "0xBF34BC", VA = "0xBF34BC", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xBF3524", Offset = "0xBF3524", VA = "0xBF3524", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xBF357C", Offset = "0xBF357C", VA = "0xBF357C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xBF35BC", Offset = "0xBF35BC", VA = "0xBF35BC", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xBF36DC", Offset = "0xBF36DC", VA = "0xBF36DC")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xBF37F4", Offset = "0xBF37F4", VA = "0xBF37F4")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xBF38B8", Offset = "0xBF38B8", VA = "0xBF38B8")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xBF3E40", Offset = "0xBF3E40", VA = "0xBF3E40")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xBF43B8", Offset = "0xBF43B8", VA = "0xBF43B8", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xBF4400", Offset = "0xBF4400", VA = "0xBF4400")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x20003BB")]
		private static class Uniforms
		{
			[Token(Token = "0x400116A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x17000124")]
		public override bool active
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0xBF4600", Offset = "0xBF4600", VA = "0xBF4600", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xBF4674", Offset = "0xBF4674", VA = "0xBF4674", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xBF469C", Offset = "0xBF469C", VA = "0xBF469C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xBF4924", Offset = "0xBF4924", VA = "0xBF4924")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x20003BD")]
		private static class Uniforms
		{
			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x400117D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x400117E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x400117F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4001184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x400116C")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x400116D")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x400116E")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x17000125")]
		public override bool active
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0xBF4A08", Offset = "0xBF4A08", VA = "0xBF4A08", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xBF4A70", Offset = "0xBF4A70", VA = "0xBF4A70")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xBF4A9C", Offset = "0xBF4A9C", VA = "0xBF4A9C")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xBF4B2C", Offset = "0xBF4B2C", VA = "0xBF4B2C")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xBF4C30", Offset = "0xBF4C30", VA = "0xBF4C30")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xBF4CFC", Offset = "0xBF4CFC", VA = "0xBF4CFC")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xBF4D30", Offset = "0xBF4D30", VA = "0xBF4D30")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xBF4DB4", Offset = "0xBF4DB4", VA = "0xBF4DB4")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xBF4E98", Offset = "0xBF4E98", VA = "0xBF4E98")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xBF4F50", Offset = "0xBF4F50", VA = "0xBF4F50")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xBF4FEC", Offset = "0xBF4FEC", VA = "0xBF4FEC")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xBF5088", Offset = "0xBF5088", VA = "0xBF5088")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xBF5140", Offset = "0xBF5140", VA = "0xBF5140")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xBF51D4", Offset = "0xBF51D4", VA = "0xBF51D4")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xBF5270", Offset = "0xBF5270", VA = "0xBF5270")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xBF5298", Offset = "0xBF5298", VA = "0xBF5298")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xBF55CC", Offset = "0xBF55CC", VA = "0xBF55CC")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xBF5668", Offset = "0xBF5668", VA = "0xBF5668")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xBF568C", Offset = "0xBF568C", VA = "0xBF568C")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xBF5E28", Offset = "0xBF5E28", VA = "0xBF5E28", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xBF6008", Offset = "0xBF6008", VA = "0xBF6008")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xBF6128", Offset = "0xBF6128", VA = "0xBF6128", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xBF61AC", Offset = "0xBF61AC", VA = "0xBF61AC")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x20003BF")]
		private static class Uniforms
		{
			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x4001185")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4001187")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x17000126")]
		public override bool active
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xBF65F8", Offset = "0xBF65F8", VA = "0xBF65F8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xBF6660", Offset = "0xBF6660", VA = "0xBF6660", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xBF6668", Offset = "0xBF6668", VA = "0xBF6668")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xBF6704", Offset = "0xBF6704", VA = "0xBF6704")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xBF6778", Offset = "0xBF6778", VA = "0xBF6778")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xBF6848", Offset = "0xBF6848", VA = "0xBF6848")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xBF6894", Offset = "0xBF6894", VA = "0xBF6894")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xBF6FC4", Offset = "0xBF6FC4", VA = "0xBF6FC4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xBF7044", Offset = "0xBF7044", VA = "0xBF7044")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x20003C1")]
		private static class Uniforms
		{
			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4001195")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x17000127")]
		public override bool active
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xBF72CC", Offset = "0xBF72CC", VA = "0xBF72CC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xBF7334", Offset = "0xBF7334", VA = "0xBF7334", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xBF7340", Offset = "0xBF7340", VA = "0xBF7340")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xBF746C", Offset = "0xBF746C", VA = "0xBF746C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xBF760C", Offset = "0xBF760C", VA = "0xBF760C")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x20003C3")]
		private static class Uniforms
		{
			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x40011A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x40011A0")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x40011A1")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x40011A2")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x17000128")]
		public override bool active
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0xBF76F0", Offset = "0xBF76F0", VA = "0xBF76F0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xBF7764", Offset = "0xBF7764", VA = "0xBF7764")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xBF7770", Offset = "0xBF7770", VA = "0xBF7770", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xBF777C", Offset = "0xBF777C", VA = "0xBF777C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xBF7878", Offset = "0xBF7878", VA = "0xBF7878")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xBF7938", Offset = "0xBF7938", VA = "0xBF7938")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xBF83CC", Offset = "0xBF83CC", VA = "0xBF83CC")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xBF8534", Offset = "0xBF8534", VA = "0xBF8534")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x20003C5")]
		private static class Uniforms
		{
			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x40011A9")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x17000129")]
		public override bool active
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xBF8718", Offset = "0xBF8718", VA = "0xBF8718", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xBF87A0", Offset = "0xBF87A0", VA = "0xBF87A0", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xBF87E0", Offset = "0xBF87E0", VA = "0xBF87E0", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xBF87E8", Offset = "0xBF87E8", VA = "0xBF87E8", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xBF87F0", Offset = "0xBF87F0", VA = "0xBF87F0", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xBF8C64", Offset = "0xBF8C64", VA = "0xBF8C64")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x20003C7")]
		private static class Uniforms
		{
			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x1700012A")]
		public override bool active
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xBF8DD4", Offset = "0xBF8DD4", VA = "0xBF8DD4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xBF8E44", Offset = "0xBF8E44", VA = "0xBF8E44")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xBF9044", Offset = "0xBF9044", VA = "0xBF9044")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x20003C9")]
		private static class Uniforms
		{
			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x1700012B")]
		public override bool active
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xBF9128", Offset = "0xBF9128", VA = "0xBF9128", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xBF91AC", Offset = "0xBF91AC", VA = "0xBF91AC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xBF91D4", Offset = "0xBF91D4", VA = "0xBF91D4", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xBF9574", Offset = "0xBF9574", VA = "0xBF9574")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x20003CB")]
		private static class Uniforms
		{
			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x20003CC")]
		private enum Pass
		{
			[Token(Token = "0x40011D4")]
			VelocitySetup,
			[Token(Token = "0x40011D5")]
			TileMax1,
			[Token(Token = "0x40011D6")]
			TileMax2,
			[Token(Token = "0x40011D7")]
			TileMaxV,
			[Token(Token = "0x40011D8")]
			NeighborMax,
			[Token(Token = "0x40011D9")]
			Reconstruction,
			[Token(Token = "0x40011DA")]
			FrameCompression,
			[Token(Token = "0x40011DB")]
			FrameBlendingChroma,
			[Token(Token = "0x40011DC")]
			FrameBlendingRaw
		}

		[Token(Token = "0x20003CD")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x40011DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x60011E2")]
			[Address(RVA = "0xBF972C", Offset = "0xBF972C", VA = "0xBF972C")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x60011E3")]
			[Address(RVA = "0xBFB4F8", Offset = "0xBFB4F8", VA = "0xBFB4F8")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xBF990C", Offset = "0xBF990C", VA = "0xBF990C")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xBFA0B0", Offset = "0xBFA0B0", VA = "0xBFA0B0")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x20003CE")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x20003CF")]
			private struct Frame
			{
				[Token(Token = "0x40011E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x40011E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x40011E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x40011E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x60011ED")]
				[Address(RVA = "0xBFBBB0", Offset = "0xBFBBB0", VA = "0xBFBBB0")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x60011EE")]
				[Address(RVA = "0xBFB61C", Offset = "0xBFB61C", VA = "0xBFB61C")]
				public void Release()
				{
				}

				[Token(Token = "0x60011EF")]
				[Address(RVA = "0xBFB6EC", Offset = "0xBFB6EC", VA = "0xBFB6EC")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x60011F0")]
				[Address(RVA = "0xBFB9DC", Offset = "0xBFB9DC", VA = "0xBFB9DC")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x40011DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x40011E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x40011E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xBF97D8", Offset = "0xBF97D8", VA = "0xBF97D8")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xBF997C", Offset = "0xBF997C", VA = "0xBF997C")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60011E8")]
			[Address(RVA = "0xBFAEA4", Offset = "0xBFAEA4", VA = "0xBFAEA4")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x60011E9")]
			[Address(RVA = "0xBFA9C0", Offset = "0xBFA9C0", VA = "0xBFA9C0")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x60011EA")]
			[Address(RVA = "0xBFB51C", Offset = "0xBFB51C", VA = "0xBFB51C")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x60011EB")]
			[Address(RVA = "0xBFB550", Offset = "0xBFB550", VA = "0xBFB550")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x60011EC")]
			[Address(RVA = "0xBFBB4C", Offset = "0xBFBB4C", VA = "0xBFBB4C")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x1700012C")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0xBF96B8", Offset = "0xBF96B8", VA = "0xBF96B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xBF9764", Offset = "0xBF9764", VA = "0xBF9764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		public override bool active
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xBF9850", Offset = "0xBF9850", VA = "0xBF9850", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xBF9914", Offset = "0xBF9914", VA = "0xBF9914", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xBF9954", Offset = "0xBF9954", VA = "0xBF9954")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xBF99F0", Offset = "0xBF99F0", VA = "0xBF99F0", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xBF99F8", Offset = "0xBF99F8", VA = "0xBF99F8", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xBF9A00", Offset = "0xBF9A00", VA = "0xBF9A00", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xBF9A0C", Offset = "0xBF9A0C", VA = "0xBF9A0C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xBFAFC4", Offset = "0xBFAFC4", VA = "0xBFAFC4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xBFAFD4", Offset = "0xBFAFD4", VA = "0xBFAFD4")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x20003D1")]
		private static class Uniforms
		{
			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x40011F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x40011F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x40011FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x40011FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x40011FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x40011FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x40011FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4001209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x400120A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x20003D2")]
		private enum PassIndex
		{
			[Token(Token = "0x4001210")]
			RayTraceStep,
			[Token(Token = "0x4001211")]
			CompositeFinal,
			[Token(Token = "0x4001212")]
			Blur,
			[Token(Token = "0x4001213")]
			CompositeSSR,
			[Token(Token = "0x4001214")]
			MinMipGeneration,
			[Token(Token = "0x4001215")]
			HitPointToReflections,
			[Token(Token = "0x4001216")]
			BilateralKeyPack,
			[Token(Token = "0x4001217")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4001218")]
			PoissonBlur
		}

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x1700012F")]
		public override bool active
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xBFBCA0", Offset = "0xBFBCA0", VA = "0xBFBCA0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xBFBC98", Offset = "0xBFBC98", VA = "0xBFBC98", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xBFBD1C", Offset = "0xBFBD1C", VA = "0xBFBD1C", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xBFBE64", Offset = "0xBFBE64", VA = "0xBFBE64", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xBFBEA4", Offset = "0xBFBEA4", VA = "0xBFBEA4", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xBFBEAC", Offset = "0xBFBEAC", VA = "0xBFBEAC", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xBFCEB4", Offset = "0xBFCEB4", VA = "0xBFCEB4")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x20003D4")]
		private static class Uniforms
		{
			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4001219")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x400121A")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x17000130")]
		public override bool active
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0xBFD5A0", Offset = "0xBFD5A0", VA = "0xBFD5A0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0xBFD638", Offset = "0xBFD638", VA = "0xBFD638")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xBFD640", Offset = "0xBFD640", VA = "0xBFD640")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xBFD630", Offset = "0xBFD630", VA = "0xBFD630", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xBFD648", Offset = "0xBFD648", VA = "0xBFD648")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xBFD654", Offset = "0xBFD654", VA = "0xBFD654")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xBFDEF0", Offset = "0xBFDEF0", VA = "0xBFDEF0")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xBFE338", Offset = "0xBFE338", VA = "0xBFE338")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xBFD8E4", Offset = "0xBFD8E4", VA = "0xBFD8E4")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xBFD978", Offset = "0xBFD978", VA = "0xBFD978")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xBFDDA0", Offset = "0xBFDDA0", VA = "0xBFDDA0")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xBFE37C", Offset = "0xBFE37C", VA = "0xBFE37C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xBFE418", Offset = "0xBFE418", VA = "0xBFE418")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x20003D6")]
		private static class Uniforms
		{
			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x17000132")]
		public override bool active
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xBFE5C8", Offset = "0xBFE5C8", VA = "0xBFE5C8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xBFE6D4", Offset = "0xBFE6D4", VA = "0xBFE6D4", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xBFE814", Offset = "0xBFE814", VA = "0xBFE814")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xBFE958", Offset = "0xBFE958", VA = "0xBFE958")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x20003D8")]
		private static class Uniforms
		{
			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x17000133")]
		public override bool active
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xBFEA3C", Offset = "0xBFEA3C", VA = "0xBFEA3C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xBFEAA4", Offset = "0xBFEAA4", VA = "0xBFEAA4", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xBFED38", Offset = "0xBFED38", VA = "0xBFED38")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D9")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x20003DA")]
		public enum SampleCount
		{
			[Token(Token = "0x400122E")]
			Lowest = 3,
			[Token(Token = "0x400122F")]
			Low = 6,
			[Token(Token = "0x4001230")]
			Medium = 10,
			[Token(Token = "0x4001231")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x20003DB")]
		public struct Settings
		{
			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 4f)]
			[Tooltip("Degree of darkness produced by the effect.")]
			public float intensity;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Min(0.0001f)]
			[Tooltip("Radius of sample points, which affects extent of darkened areas.")]
			public float radius;

			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Number of sample points, which affects quality and performance.")]
			public SampleCount sampleCount;

			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Halves the resolution of the effect to increase performance at the cost of visual quality.")]
			public bool downsampling;

			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[Tooltip("Forces compatibility with Forward rendered objects when working with the Deferred rendering path.")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[Tooltip("Enables the ambient-only mode in that the effect only affects ambient lighting. This mode is only available with the Deferred rendering path and HDR rendering.")]
			public bool ambientOnly;

			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[Tooltip("Toggles the use of a higher precision depth texture with the forward rendering path (may impact performances). Has no effect with the deferred rendering path.")]
			public bool highPrecision;

			[Token(Token = "0x17000135")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001214")]
				[Address(RVA = "0xBFEED4", Offset = "0xBFEED4", VA = "0xBFEED4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000134")]
		public Settings settings
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xBFEEA8", Offset = "0xBFEEA8", VA = "0xBFEEA8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xBFEEB8", Offset = "0xBFEEB8", VA = "0xBFEEB8")]
			set
			{
			}
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xBFEEC4", Offset = "0xBFEEC4", VA = "0xBFEEC4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xBFEEEC", Offset = "0xBFEEEC", VA = "0xBFEEEC")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DC")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x20003DD")]
		public enum Method
		{
			[Token(Token = "0x400123B")]
			Fxaa,
			[Token(Token = "0x400123C")]
			Taa
		}

		[Token(Token = "0x20003DE")]
		public enum FxaaPreset
		{
			[Token(Token = "0x400123E")]
			ExtremePerformance,
			[Token(Token = "0x400123F")]
			Performance,
			[Token(Token = "0x4001240")]
			Default,
			[Token(Token = "0x4001241")]
			Quality,
			[Token(Token = "0x4001242")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x20003DF")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("The amount of desired sub-pixel aliasing removal. Effects the sharpeness of the output.")]
			[Range(0f, 1f)]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("The minimum amount of local contrast required to qualify a region as containing an edge.")]
			[Range(0.063f, 0.333f)]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Local contrast adaptation value to disallow the algorithm from executing on the darker regions.")]
			[Range(0f, 0.0833f)]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x20003E0")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("The amount of spread applied to the sampling coordinates while sampling for subpixel information.")]
			[Range(0.33f, 0.5f)]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("This value dictates how sharp the edges in the image are kept; a higher value implies sharper edges.")]
			[Range(2f, 8f)]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("The minimum amount of local contrast required to qualify a region as containing an edge.")]
			[Range(0.125f, 0.25f)]
			public float edgeDetectionThreshold;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Local contrast adaptation value to disallow the algorithm from executing on the darker regions.")]
			[Range(0.04f, 0.06f)]
			public float minimumRequiredLuminance;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x20003E1")]
		public struct FxaaSettings
		{
			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x17000137")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x600121B")]
				[Address(RVA = "0xBFF17C", Offset = "0xBFF17C", VA = "0xBFF17C")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003E2")]
		public struct TaaSettings
		{
			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0.1f, 1f)]
			[Tooltip("The diameter (in texels) inside which jitter samples are spread. Smaller values result in crisper but more aliased output, while larger values result in more stable but blurrier output.")]
			public float jitterSpread;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Controls the amount of sharpening applied to the color buffer.")]
			[Range(0f, 3f)]
			public float sharpen;

			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("The blend coefficient for a stationary fragment. Controls the percentage of history sample blended into the final color.")]
			[Range(0f, 0.99f)]
			public float stationaryBlending;

			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("The blend coefficient for a fragment with significant motion. Controls the percentage of history sample blended into the final color.")]
			[Range(0f, 0.99f)]
			public float motionBlending;

			[Token(Token = "0x17000138")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x600121C")]
				[Address(RVA = "0xBFF184", Offset = "0xBFF184", VA = "0xBFF184")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003E3")]
		public struct Settings
		{
			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x17000139")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600121D")]
				[Address(RVA = "0xBFEF4C", Offset = "0xBFEF4C", VA = "0xBFEF4C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000136")]
		public Settings settings
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xBFEF08", Offset = "0xBFEF08", VA = "0xBFEF08")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xBFEF1C", Offset = "0xBFEF1C", VA = "0xBFEF1C")]
			set
			{
			}
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xBFEF30", Offset = "0xBFEF30", VA = "0xBFEF30", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xBFEF68", Offset = "0xBFEF68", VA = "0xBFEF68")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003E5")]
		public struct BloomSettings
		{
			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Min(0f)]
			[Tooltip("Strength of the bloom filter.")]
			public float intensity;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Min(0f)]
			[Tooltip("Filters out pixels under this level of brightness.")]
			public float threshold;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0f, 1f)]
			[Tooltip("Makes transition between under/over-threshold gradual (0 = hard threshold, 1 = soft threshold).")]
			public float softKnee;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(1f, 7f)]
			[Tooltip("Changes extent of veiling effects in a screen resolution-independent fashion.")]
			public float radius;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Reduces flashing noise with an additional filter.")]
			public bool antiFlicker;

			[Token(Token = "0x1700013B")]
			public float thresholdLinear
			{
				[Token(Token = "0x6001223")]
				[Address(RVA = "0xBFF2FC", Offset = "0xBFF2FC", VA = "0xBFF2FC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001222")]
				[Address(RVA = "0xBFF2E0", Offset = "0xBFF2E0", VA = "0xBFF2E0")]
				set
				{
				}
			}

			[Token(Token = "0x1700013C")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x6001224")]
				[Address(RVA = "0xBFF308", Offset = "0xBFF308", VA = "0xBFF308")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003E6")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Dirtiness texture to add smudges or dust to the lens.")]
			public Texture texture;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Amount of lens dirtiness.")]
			[Min(0f)]
			public float intensity;

			[Token(Token = "0x1700013D")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6001225")]
				[Address(RVA = "0xBFF324", Offset = "0xBFF324", VA = "0xBFF324")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003E7")]
		public struct Settings
		{
			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x1700013E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001226")]
				[Address(RVA = "0xBFF220", Offset = "0xBFF220", VA = "0xBFF220")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700013A")]
		public Settings settings
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0xBFF1A4", Offset = "0xBFF1A4", VA = "0xBFF1A4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600121F")]
			[Address(RVA = "0xBFF1BC", Offset = "0xBFF1BC", VA = "0xBFF1BC")]
			set
			{
			}
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xBFF1E0", Offset = "0xBFF1E0", VA = "0xBFF1E0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xBFF294", Offset = "0xBFF294", VA = "0xBFF294")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E8")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003E9")]
		public struct DepthSettings
		{
			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Scales the camera far plane before displaying the depth map.")]
			[Range(0f, 1f)]
			public float scale;

			[Token(Token = "0x17000141")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x600122D")]
				[Address(RVA = "0xBFF424", Offset = "0xBFF424", VA = "0xBFF424")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003EA")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Opacity of the source render.")]
			[Range(0f, 1f)]
			public float sourceOpacity;

			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Opacity of the per-pixel motion vector colors.")]
			[Range(0f, 1f)]
			public float motionImageOpacity;

			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Because motion vectors are mainly very small vectors, you can use this setting to make them more visible.")]
			[Min(0f)]
			public float motionImageAmplitude;

			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Opacity for the motion vector arrows.")]
			[Range(0f, 1f)]
			public float motionVectorsOpacity;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("The arrow density on screen.")]
			[Range(8f, 64f)]
			public int motionVectorsResolution;

			[Token(Token = "0x4001265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Min(0f)]
			[Tooltip("Tweaks the arrows length.")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x17000142")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x600122E")]
				[Address(RVA = "0xBFF42C", Offset = "0xBFF42C", VA = "0xBFF42C")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x20003EB")]
		public enum Mode
		{
			[Token(Token = "0x4001267")]
			None,
			[Token(Token = "0x4001268")]
			Depth,
			[Token(Token = "0x4001269")]
			Normals,
			[Token(Token = "0x400126A")]
			MotionVectors,
			[Token(Token = "0x400126B")]
			AmbientOcclusion,
			[Token(Token = "0x400126C")]
			EyeAdaptation,
			[Token(Token = "0x400126D")]
			FocusPlane,
			[Token(Token = "0x400126E")]
			PreGradingLog,
			[Token(Token = "0x400126F")]
			LogLut,
			[Token(Token = "0x4001270")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x20003EC")]
		public struct Settings
		{
			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x17000143")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600122F")]
				[Address(RVA = "0xBFF3D0", Offset = "0xBFF3D0", VA = "0xBFF3D0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700013F")]
		public Settings settings
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xBFF354", Offset = "0xBFF354", VA = "0xBFF354")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xBFF364", Offset = "0xBFF364", VA = "0xBFF364")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public bool willInterrupt
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xBFF374", Offset = "0xBFF374", VA = "0xBFF374")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xBFF3A8", Offset = "0xBFF3A8", VA = "0xBFF3A8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xBFF398", Offset = "0xBFF398", VA = "0xBFF398")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xBFF3F8", Offset = "0xBFF3F8", VA = "0xBFF3F8")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003ED")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003EE")]
		public struct Settings
		{
			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Shift the hue of chromatic aberrations.")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4001276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0f, 1f)]
			[Tooltip("Amount of tangential distortion.")]
			public float intensity;

			[Token(Token = "0x17000145")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001234")]
				[Address(RVA = "0xBFF4B0", Offset = "0xBFF4B0", VA = "0xBFF4B0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000144")]
		public Settings settings
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xBFF448", Offset = "0xBFF448", VA = "0xBFF448")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001231")]
			[Address(RVA = "0xBFF454", Offset = "0xBFF454", VA = "0xBFF454")]
			set
			{
			}
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xBFF464", Offset = "0xBFF464", VA = "0xBFF464", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xBFF4E4", Offset = "0xBFF4E4", VA = "0xBFF4E4")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EF")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x20003F0")]
		public enum Tonemapper
		{
			[Token(Token = "0x400127B")]
			None,
			[Token(Token = "0x400127C")]
			ACES,
			[Token(Token = "0x400127D")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x20003F1")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Tonemapping algorithm to use at the end of the color grading process. Use \"Neutral\" if you need a customizable tonemapper or \"Filmic\" to give a standard filmic look to your scenes.")]
			public Tonemapper tonemapper;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(-0.1f, 0.1f)]
			public float neutralBlackIn;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(1f, 20f)]
			public float neutralWhiteIn;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(-0.09f, 0.1f)]
			public float neutralBlackOut;

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(1f, 19f)]
			public float neutralWhiteOut;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(0.1f, 20f)]
			public float neutralWhiteLevel;

			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(1f, 10f)]
			public float neutralWhiteClip;

			[Token(Token = "0x17000149")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x600123E")]
				[Address(RVA = "0xBFF728", Offset = "0xBFF728", VA = "0xBFF728")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003F2")]
		public struct BasicSettings
		{
			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Adjusts the overall exposure of the scene in EV units. This is applied after HDR effect and right before tonemapping so it won't affect previous effects in the chain.")]
			public float postExposure;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(-100f, 100f)]
			[Tooltip("Sets the white balance to a custom color temperature.")]
			public float temperature;

			[Token(Token = "0x4001287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(-100f, 100f)]
			[Tooltip("Sets the white balance to compensate for a green or magenta tint.")]
			public float tint;

			[Token(Token = "0x4001288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(-180f, 180f)]
			[Tooltip("Shift the hue of all colors.")]
			public float hueShift;

			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Pushes the intensity of all colors.")]
			[Range(0f, 2f)]
			public float saturation;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(0f, 2f)]
			[Tooltip("Expands or shrinks the overall range of tonal values.")]
			public float contrast;

			[Token(Token = "0x1700014A")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x600123F")]
				[Address(RVA = "0xBFF750", Offset = "0xBFF750", VA = "0xBFF750")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003F3")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x1700014B")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6001240")]
				[Address(RVA = "0xBFF760", Offset = "0xBFF760", VA = "0xBFF760")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003F4")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Trackball("GetSlopeValue")]
			public Color slope;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Trackball("GetPowerValue")]
			public Color power;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Trackball("GetOffsetValue")]
			public Color offset;

			[Token(Token = "0x1700014C")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001241")]
				[Address(RVA = "0xBFF778", Offset = "0xBFF778", VA = "0xBFF778")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003F5")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Trackball("GetLiftValue")]
			public Color lift;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Trackball("GetGammaValue")]
			public Color gamma;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Trackball("GetGainValue")]
			public Color gain;

			[Token(Token = "0x1700014D")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001242")]
				[Address(RVA = "0xBFF788", Offset = "0xBFF788", VA = "0xBFF788")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x20003F6")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4001296")]
			Linear,
			[Token(Token = "0x4001297")]
			Log
		}

		[Serializable]
		[Token(Token = "0x20003F7")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x1700014E")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001243")]
				[Address(RVA = "0xBFF798", Offset = "0xBFF798", VA = "0xBFF798")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003F8")]
		public struct CurvesSettings
		{
			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x40012A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x40012A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x40012A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x40012A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x40012A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x1700014F")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001244")]
				[Address(RVA = "0xBFF7C0", Offset = "0xBFF7C0", VA = "0xBFF7C0")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20003F9")]
		public struct Settings
		{
			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x17000150")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001245")]
				[Address(RVA = "0xBFF5FC", Offset = "0xBFF5FC", VA = "0xBFF5FC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000146")]
		public Settings settings
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xBFF53C", Offset = "0xBFF53C", VA = "0xBFF53C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xBFF54C", Offset = "0xBFF54C", VA = "0xBFF54C")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public bool isDirty
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xBFF580", Offset = "0xBFF580", VA = "0xBFF580")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xBFF588", Offset = "0xBFF588", VA = "0xBFF588")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xBFF594", Offset = "0xBFF594", VA = "0xBFF594")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xBFF59C", Offset = "0xBFF59C", VA = "0xBFF59C")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xBFF5AC", Offset = "0xBFF5AC", VA = "0xBFF5AC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xBFF6D0", Offset = "0xBFF6D0", VA = "0xBFF6D0", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xBFF6DC", Offset = "0xBFF6DC", VA = "0xBFF6DC")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x20003FB")]
		public enum KernelSize
		{
			[Token(Token = "0x40012AF")]
			Small,
			[Token(Token = "0x40012B0")]
			Medium,
			[Token(Token = "0x40012B1")]
			Large,
			[Token(Token = "0x40012B2")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x20003FC")]
		public struct Settings
		{
			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Min(0.1f)]
			[Tooltip("Distance to the point of focus.")]
			public float focusDistance;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(0.05f, 32f)]
			[Tooltip("Ratio of aperture (known as f-stop or f-number). The smaller the value is, the shallower the depth of field is.")]
			public float aperture;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Distance between the lens and the film. The larger the value is, the shallower the depth of field is.")]
			[Range(1f, 300f)]
			public float focalLength;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Calculate the focal length automatically from the field-of-view value set on the camera. Using this setting isn't recommended.")]
			public bool useCameraFov;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Convolution kernel size of the bokeh filter, which determines the maximum radius of bokeh. It also affects the performance (the larger the kernel is, the longer the GPU time is required).")]
			public KernelSize kernelSize;

			[Token(Token = "0x17000152")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600124A")]
				[Address(RVA = "0xBFFF28", Offset = "0xBFFF28", VA = "0xBFFF28")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000151")]
		public Settings settings
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xBFFED4", Offset = "0xBFFED4", VA = "0xBFFED4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xBFFEE8", Offset = "0xBFFEE8", VA = "0xBFFEE8")]
			set
			{
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xBFFEFC", Offset = "0xBFFEFC", VA = "0xBFFEFC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xBFFF54", Offset = "0xBFFF54", VA = "0xBFFF54")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FD")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20003FE")]
		public struct Settings
		{
			[Token(Token = "0x17000154")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600124F")]
				[Address(RVA = "0xBFFF9C", Offset = "0xBFFF9C", VA = "0xBFFF9C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000153")]
		public Settings settings
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xBFFF84", Offset = "0xBFFF84", VA = "0xBFFF84")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600124C")]
			[Address(RVA = "0xBFFF8C", Offset = "0xBFFF8C", VA = "0xBFFF8C")]
			set
			{
			}
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xBFFF94", Offset = "0xBFFF94", VA = "0xBFFF94", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xBFFFA4", Offset = "0xBFFFA4", VA = "0xBFFFA4")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FF")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x2000400")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x40012BB")]
			Progressive,
			[Token(Token = "0x40012BC")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x2000401")]
		public struct Settings
		{
			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Filters the dark part of the histogram when computing the average luminance to avoid very dark pixels from contributing to the auto exposure. Unit is in percent.")]
			[Range(1f, 99f)]
			public float lowPercent;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Filters the bright part of the histogram when computing the average luminance to avoid very dark pixels from contributing to the auto exposure. Unit is in percent.")]
			[Range(1f, 99f)]
			public float highPercent;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Minimum average luminance to consider for auto exposure (in EV).")]
			public float minLuminance;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Maximum average luminance to consider for auto exposure (in EV).")]
			public float maxLuminance;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Min(0f)]
			[Tooltip("Exposure bias. Use this to offset the global exposure of the scene.")]
			public float keyValue;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Set this to true to let Unity handle the key value automatically based on average luminance.")]
			public bool dynamicKeyValue;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Use \"Progressive\" if you want the auto exposure to be animated. Use \"Fixed\" otherwise.")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Tooltip("Adaptation speed from a dark to a light environment.")]
			[Min(0f)]
			public float speedUp;

			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("Adaptation speed from a light to a dark environment.")]
			[Min(0f)]
			public float speedDown;

			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[Range(-16f, -1f)]
			[Tooltip("Lower bound for the brightness range of the generated histogram (in EV). The bigger the spread between min & max, the lower the precision will be.")]
			public int logMin;

			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Range(1f, 16f)]
			[Tooltip("Upper bound for the brightness range of the generated histogram (in EV). The bigger the spread between min & max, the lower the precision will be.")]
			public int logMax;

			[Token(Token = "0x17000156")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001254")]
				[Address(RVA = "0xC00028", Offset = "0xC00028", VA = "0xC00028")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000155")]
		public Settings settings
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xBFFFB0", Offset = "0xBFFFB0", VA = "0xBFFFB0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xBFFFC8", Offset = "0xBFFFC8", VA = "0xBFFFC8")]
			set
			{
			}
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xBFFFE8", Offset = "0xBFFFE8", VA = "0xBFFFE8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xC0006C", Offset = "0xC0006C", VA = "0xC0006C")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000402")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000403")]
		public struct Settings
		{
			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Should the fog affect the skybox?")]
			public bool excludeSkybox;

			[Token(Token = "0x17000158")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001259")]
				[Address(RVA = "0xC000CC", Offset = "0xC000CC", VA = "0xC000CC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000157")]
		public Settings settings
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xC000B0", Offset = "0xC000B0", VA = "0xC000B0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xC000B8", Offset = "0xC000B8", VA = "0xC000B8")]
			set
			{
			}
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xC000C0", Offset = "0xC000C0", VA = "0xC000C0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xC000D4", Offset = "0xC000D4", VA = "0xC000D4")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000404")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000405")]
		public struct Settings
		{
			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Enable the use of colored grain.")]
			public bool colored;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Grain strength. Higher means more visible grain.")]
			[Range(0f, 1f)]
			public float intensity;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0.3f, 3f)]
			[Tooltip("Grain particle size.")]
			public float size;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(0f, 1f)]
			[Tooltip("Controls the noisiness response curve based on scene luminance. Lower values mean less noise in dark areas.")]
			public float luminanceContribution;

			[Token(Token = "0x1700015A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600125E")]
				[Address(RVA = "0xC00110", Offset = "0xC00110", VA = "0xC00110")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000159")]
		public Settings settings
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xC000E4", Offset = "0xC000E4", VA = "0xC000E4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xC000F4", Offset = "0xC000F4", VA = "0xC000F4")]
			set
			{
			}
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xC00100", Offset = "0xC00100", VA = "0xC00100", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xC00128", Offset = "0xC00128", VA = "0xC00128")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000407")]
		public struct Settings
		{
			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("The angle of rotary shutter. Larger values give longer exposure.")]
			[Range(0f, 360f)]
			public float shutterAngle;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(4f, 32f)]
			[Tooltip("The amount of sample points, which affects quality and performances.")]
			public int sampleCount;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0f, 1f)]
			[Tooltip("The strength of multiple frame blending. The opacity of preceding frames are determined from this coefficient and time differences.")]
			public float frameBlending;

			[Token(Token = "0x1700015C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001263")]
				[Address(RVA = "0xC0016C", Offset = "0xC0016C", VA = "0xC0016C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700015B")]
		public Settings settings
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xC0013C", Offset = "0xC0013C", VA = "0xC0013C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xC0014C", Offset = "0xC0014C", VA = "0xC0014C")]
			set
			{
			}
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xC00158", Offset = "0xC00158", VA = "0xC00158", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xC0017C", Offset = "0xC0017C", VA = "0xC0017C")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000408")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x2000409")]
		public enum SSRResolution
		{
			[Token(Token = "0x40012D5")]
			High = 0,
			[Token(Token = "0x40012D6")]
			Low = 2
		}

		[Token(Token = "0x200040A")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x40012D8")]
			PhysicallyBased,
			[Token(Token = "0x40012D9")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x200040B")]
		public struct IntensitySettings
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 2f)]
			[Tooltip("Nonphysical multiplier for the SSR reflections. 1.0 is physically based.")]
			public float reflectionMultiplier;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("How far away from the maxDistance to begin fading SSR.")]
			[Range(0f, 1000f)]
			public float fadeDistance;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Amplify Fresnel fade out. Increase if floor reflections look good close to the surface and bad farther 'under' the floor.")]
			[Range(0f, 1f)]
			public float fresnelFade;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Higher values correspond to a faster Fresnel fade as the reflection changes from the grazing angle.")]
			[Range(0.1f, 10f)]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x200040C")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("How the reflections are blended into the render.")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Half resolution SSRR is much faster, but less accurate.")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0.1f, 300f)]
			[Tooltip("Maximum reflection distance in world units.")]
			public float maxDistance;

			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(16f, 1024f)]
			[Tooltip("Max raytracing length.")]
			public int iterationCount;

			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Log base 2 of ray tracing coarse step size. Higher traces farther, lower gives better quality silhouettes.")]
			[Range(1f, 16f)]
			public int stepSize;

			[Token(Token = "0x40012E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(0.01f, 10f)]
			[Tooltip("Typical thickness of columns, walls, furniture, and other objects that reflection rays might pass behind.")]
			public float widthModifier;

			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(0.1f, 8f)]
			[Tooltip("Blurriness of reflections.")]
			public float reflectionBlur;

			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Tooltip("Disable for a performance gain in scenes where most glossy objects are horizontal, like floors, water, and tables. Leave on for scenes with glossy vertical objects.")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x200040D")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 1f)]
			[Tooltip("Higher = fade out SSRR near the edge of the screen so that reflections don't pop under camera motion.")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x200040E")]
		public struct Settings
		{
			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x1700015E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001268")]
				[Address(RVA = "0xC00224", Offset = "0xC00224", VA = "0xC00224")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700015D")]
		public Settings settings
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xC00194", Offset = "0xC00194", VA = "0xC00194")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001265")]
			[Address(RVA = "0xC001B4", Offset = "0xC001B4", VA = "0xC001B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xC001D4", Offset = "0xC001D4", VA = "0xC001D4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xC00278", Offset = "0xC00278", VA = "0xC00278")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000410")]
		public struct Settings
		{
			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Custom lookup texture (strip format, e.g. 256x16).")]
			public Texture2D lut;

			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0f, 1f)]
			[Tooltip("Blending factor.")]
			public float contribution;

			[Token(Token = "0x17000160")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600126D")]
				[Address(RVA = "0xC00330", Offset = "0xC00330", VA = "0xC00330")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700015F")]
		public Settings settings
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0xC002CC", Offset = "0xC002CC", VA = "0xC002CC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xC002D8", Offset = "0xC002D8", VA = "0xC002D8")]
			set
			{
			}
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xC002E8", Offset = "0xC002E8", VA = "0xC002E8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xC00360", Offset = "0xC00360", VA = "0xC00360")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000411")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x2000412")]
		public enum Mode
		{
			[Token(Token = "0x40012EF")]
			Classic,
			[Token(Token = "0x40012F0")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x2000413")]
		public struct Settings
		{
			[Token(Token = "0x40012F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Use the \"Classic\" mode for parametric controls. Use the \"Masked\" mode to use your own texture mask.")]
			public Mode mode;

			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Vignette color. Use the alpha channel for transparency.")]
			[ColorUsage(false)]
			public Color color;

			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Sets the vignette center point (screen center is [0.5,0.5]).")]
			public Vector2 center;

			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Tooltip("Amount of vignetting on screen.")]
			[Range(0f, 1f)]
			public float intensity;

			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("Smoothness of the vignette borders.")]
			[Range(0.01f, 1f)]
			public float smoothness;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[Tooltip("Lower values will make a square-ish vignette.")]
			[Range(0f, 1f)]
			public float roundness;

			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Tooltip("A black and white mask to use as a vignette.")]
			public Texture mask;

			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Tooltip("Mask opacity.")]
			[Range(0f, 1f)]
			public float opacity;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[Tooltip("Should the vignette be perfectly round or be dependent on the current aspect ratio?")]
			public bool rounded;

			[Token(Token = "0x17000162")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001272")]
				[Address(RVA = "0xC0049C", Offset = "0xC0049C", VA = "0xC0049C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000161")]
		public Settings settings
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xC003B4", Offset = "0xC003B4", VA = "0xC003B4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0xC003D4", Offset = "0xC003D4", VA = "0xC003D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xC00400", Offset = "0xC00400", VA = "0xC00400", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xC0051C", Offset = "0xC0051C", VA = "0xC0051C")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[RequireComponent(typeof(Camera))]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AddComponentMenu("Effects/Post-Processing Behaviour", -1)]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xC005C4", Offset = "0xC005C4", VA = "0xC005C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xC00FF4", Offset = "0xC00FF4", VA = "0xC00FF4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xC01B90", Offset = "0xC01B90", VA = "0xC01B90")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xC01CC8", Offset = "0xC01CC8", VA = "0xC01CC8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xC01DCC", Offset = "0xC01DCC", VA = "0xC01DCC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xC0286C", Offset = "0xC0286C", VA = "0xC0286C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xC029FC", Offset = "0xC029FC", VA = "0xC029FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xC02DA0", Offset = "0xC02DA0", VA = "0xC02DA0")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xC0174C", Offset = "0xC0174C", VA = "0xC0174C")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xC015D8", Offset = "0xC015D8", VA = "0xC015D8")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x600127D")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x600127F")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6001280")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6001281")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x6001282")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xC02DE0", Offset = "0xC02DE0", VA = "0xC02DE0")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x17000163")]
		public abstract bool active
		{
			[Token(Token = "0x6001285")]
			get;
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xC02E98", Offset = "0xC02E98", VA = "0xC02E98", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xC02EA0", Offset = "0xC02EA0", VA = "0xC02EA0", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xC02EA4", Offset = "0xC02EA4", VA = "0xC02EA4", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001288")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xC02EA8", Offset = "0xC02EA8", VA = "0xC02EA8")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x17000164")]
		public T model
		{
			[Token(Token = "0x600128A")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600128B")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x600128C")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x600128D")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x600128F")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x6001290")]
		public abstract string GetName();

		[Token(Token = "0x6001291")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x6001292")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6001293")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6001294")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x17000165")]
		public bool interrupted
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xC02EB0", Offset = "0xC02EB0", VA = "0xC02EB0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001296")]
			[Address(RVA = "0xC02EB8", Offset = "0xC02EB8", VA = "0xC02EB8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xC02ED0", Offset = "0xC02ED0", VA = "0xC02ED0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public bool isHdr
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0xC02EF8", Offset = "0xC02EF8", VA = "0xC02EF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000168")]
		public int width
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0xC02F14", Offset = "0xC02F14", VA = "0xC02F14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000169")]
		public int height
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0xC02F30", Offset = "0xC02F30", VA = "0xC02F30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016A")]
		public Rect viewport
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0xBFE93C", Offset = "0xBFE93C", VA = "0xBFE93C")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xC02EC4", Offset = "0xC02EC4", VA = "0xC02EC4")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xC01584", Offset = "0xC01584", VA = "0xC01584")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xC00FEC", Offset = "0xC00FEC", VA = "0xC00FEC")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[GetSet("enabled")]
		[SerializeField]
		private bool m_Enabled;

		[Token(Token = "0x1700016B")]
		public bool enabled
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0xC02F4C", Offset = "0xC02F4C", VA = "0xC02F4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0xC02F54", Offset = "0xC02F54", VA = "0xC02F54")]
			set
			{
			}
		}

		[Token(Token = "0x60012A1")]
		public abstract void Reset();

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xC02F70", Offset = "0xC02F70", VA = "0xC02F70", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xBFEF00", Offset = "0xBFEF00", VA = "0xBFEF00")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xC02F74", Offset = "0xC02F74", VA = "0xC02F74")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xBFFE20", Offset = "0xBFFE20", VA = "0xBFFE20")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xC0343C", Offset = "0xC0343C", VA = "0xC0343C")]
		public void Cache()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xC03624", Offset = "0xC03624", VA = "0xC03624")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200041D")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x1700016C")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0xC02784", Offset = "0xC02784", VA = "0xC02784")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016D")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0xC036A0", Offset = "0xC036A0", VA = "0xC036A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016E")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0xC02654", Offset = "0xC02654", VA = "0xC02654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public static Mesh quad
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xC036CC", Offset = "0xC036CC", VA = "0xC036CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xC0393C", Offset = "0xC0393C", VA = "0xC0393C")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xC03A3C", Offset = "0xC03A3C", VA = "0xC03A3C")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xC03BD8", Offset = "0xC03BD8", VA = "0xC03BD8")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xC02D58", Offset = "0xC02D58", VA = "0xC02D58")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xC00EDC", Offset = "0xC00EDC", VA = "0xC00EDC")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xC02338", Offset = "0xC02338", VA = "0xC02338")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xC02C7C", Offset = "0xC02C7C", VA = "0xC02C7C", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xC00F64", Offset = "0xC00F64", VA = "0xC00F64")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xC0253C", Offset = "0xC0253C", VA = "0xC0253C")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xC03C60", Offset = "0xC03C60", VA = "0xC03C60")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xC03D44", Offset = "0xC03D44", VA = "0xC03D44")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xC027A0", Offset = "0xC027A0", VA = "0xC027A0")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xC02D54", Offset = "0xC02D54", VA = "0xC02D54", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000420")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xC03E80", Offset = "0xC03E80", VA = "0xC03E80", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xC03F00", Offset = "0xC03F00", VA = "0xC03F00")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000421")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xC03F08", Offset = "0xC03F08", VA = "0xC03F08", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xC0437C", Offset = "0xC0437C", VA = "0xC0437C")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000423")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xC04DB4", Offset = "0xC04DB4", VA = "0xC04DB4")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000424")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xC04DFC", Offset = "0xC04DFC", VA = "0xC04DFC")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000425")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xC04E44", Offset = "0xC04E44", VA = "0xC04E44")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000426")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xC04E8C", Offset = "0xC04E8C", VA = "0xC04E8C")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000427")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xC04ED4", Offset = "0xC04ED4", VA = "0xC04ED4")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x17000170")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xC04384", Offset = "0xC04384", VA = "0xC04384")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xC0438C", Offset = "0xC0438C", VA = "0xC0438C")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xC04394", Offset = "0xC04394", VA = "0xC04394")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xC0439C", Offset = "0xC0439C", VA = "0xC0439C")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xC043A4", Offset = "0xC043A4", VA = "0xC043A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xC043AC", Offset = "0xC043AC", VA = "0xC043AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xC043B4", Offset = "0xC043B4", VA = "0xC043B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xC043BC", Offset = "0xC043BC", VA = "0xC043BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xC043C4", Offset = "0xC043C4", VA = "0xC043C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0xC043CC", Offset = "0xC043CC", VA = "0xC043CC")]
			set
			{
			}
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xC043D4", Offset = "0xC043D4", VA = "0xC043D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xC0458C", Offset = "0xC0458C", VA = "0xC0458C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xC04C54", Offset = "0xC04C54", VA = "0xC04C54", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xC04C58", Offset = "0xC04C58", VA = "0xC04C58", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xC049F8", Offset = "0xC049F8", VA = "0xC049F8")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xC04A6C", Offset = "0xC04A6C", VA = "0xC04A6C")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xC04AE0", Offset = "0xC04AE0", VA = "0xC04AE0")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xC04B5C", Offset = "0xC04B5C", VA = "0xC04B5C")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xC04BD8", Offset = "0xC04BD8", VA = "0xC04BD8")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xC04C5C", Offset = "0xC04C5C", VA = "0xC04C5C")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000428")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000429")]
		[CompilerGenerated]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000175")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012DB")]
				[Address(RVA = "0xC05574", Offset = "0xC05574", VA = "0xC05574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000176")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012DD")]
				[Address(RVA = "0xC055BC", Offset = "0xC055BC", VA = "0xC055BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xC04F90", Offset = "0xC04F90", VA = "0xC04F90")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xC04FC0", Offset = "0xC04FC0", VA = "0xC04FC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xC04FC4", Offset = "0xC04FC4", VA = "0xC04FC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xC0557C", Offset = "0xC0557C", VA = "0xC0557C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4001349")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x400134A")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xC04F1C", Offset = "0xC04F1C", VA = "0xC04F1C")]
		[IteratorStateMachine(typeof(<Start>d__10))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xC04FB8", Offset = "0xC04FB8", VA = "0xC04FB8")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x200042B")]
		[CompilerGenerated]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000177")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E3")]
				[Address(RVA = "0xC05B00", Offset = "0xC05B00", VA = "0xC05B00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E5")]
				[Address(RVA = "0xC05B48", Offset = "0xC05B48", VA = "0xC05B48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xC05638", Offset = "0xC05638", VA = "0xC05638")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xC05668", Offset = "0xC05668", VA = "0xC05668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012E2")]
			[Address(RVA = "0xC0566C", Offset = "0xC0566C", VA = "0xC0566C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xC05B08", Offset = "0xC05B08", VA = "0xC05B08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x4001357")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x4001358")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xC055C4", Offset = "0xC055C4", VA = "0xC055C4")]
		[IteratorStateMachine(typeof(<Start>d__10))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xC05660", Offset = "0xC05660", VA = "0xC05660")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xC05B50", Offset = "0xC05B50", VA = "0xC05B50")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xC06120", Offset = "0xC06120", VA = "0xC06120")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x200042E")]
		public enum BenchmarkType
		{
			[Token(Token = "0x4001366")]
			TMP_SDF_MOBILE,
			[Token(Token = "0x4001367")]
			TMP_SDF__MOBILE_SSD,
			[Token(Token = "0x4001368")]
			TMP_SDF,
			[Token(Token = "0x4001369")]
			TMP_BITMAP_MOBILE,
			[Token(Token = "0x400136A")]
			TEXTMESH_BITMAP
		}

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NumberOfSamples;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BenchmarkType Benchmark;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font SourceFontFile;

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xC06130", Offset = "0xC06130", VA = "0xC06130")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xC06134", Offset = "0xC06134", VA = "0xC06134")]
		private void Start()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xC06570", Offset = "0xC06570", VA = "0xC06570")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xC06580", Offset = "0xC06580", VA = "0xC06580")]
		private void Start()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xC06888", Offset = "0xC06888", VA = "0xC06888")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x2000431")]
		public enum CameraModes
		{
			[Token(Token = "0x400138A")]
			Follow,
			[Token(Token = "0x400138B")]
			Isometric,
			[Token(Token = "0x400138C")]
			Free
		}

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x4001387")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4001388")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xC068A4", Offset = "0xC068A4", VA = "0xC068A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xC06920", Offset = "0xC06920", VA = "0xC06920")]
		private void Start()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xC06A14", Offset = "0xC06A14", VA = "0xC06A14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xC06D48", Offset = "0xC06D48", VA = "0xC06D48")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xC07570", Offset = "0xC07570", VA = "0xC07570")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x2000433")]
		public enum MotionType
		{
			[Token(Token = "0x4001398")]
			Rotation,
			[Token(Token = "0x4001399")]
			BackAndForth,
			[Token(Token = "0x400139A")]
			Translation
		}

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xC075FC", Offset = "0xC075FC", VA = "0xC075FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xC079E4", Offset = "0xC079E4", VA = "0xC079E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xC07B2C", Offset = "0xC07B2C", VA = "0xC07B2C")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000435")]
		[CompilerGenerated]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012FC")]
				[Address(RVA = "0xC07DEC", Offset = "0xC07DEC", VA = "0xC07DEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012FE")]
				[Address(RVA = "0xC07E34", Offset = "0xC07E34", VA = "0xC07E34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012F9")]
			[Address(RVA = "0xC07C54", Offset = "0xC07C54", VA = "0xC07C54")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60012FA")]
			[Address(RVA = "0xC07C84", Offset = "0xC07C84", VA = "0xC07C84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xC07C88", Offset = "0xC07C88", VA = "0xC07C88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xC07DF4", Offset = "0xC07DF4", VA = "0xC07DF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xC07B40", Offset = "0xC07B40", VA = "0xC07B40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xC07BC0", Offset = "0xC07BC0", VA = "0xC07BC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xC07BE0", Offset = "0xC07BE0", VA = "0xC07BE0")]
		[IteratorStateMachine(typeof(<AnimateProperties>d__6))]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xC07C7C", Offset = "0xC07C7C", VA = "0xC07C7C")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40013A3")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xC07E3C", Offset = "0xC07E3C", VA = "0xC07E3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xC07F00", Offset = "0xC07F00", VA = "0xC07F00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xC07F8C", Offset = "0xC07F8C", VA = "0xC07F8C")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000438")]
		[CompilerGenerated]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600130A")]
				[Address(RVA = "0xC08CAC", Offset = "0xC08CAC", VA = "0xC08CAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600130C")]
				[Address(RVA = "0xC08CF4", Offset = "0xC08CF4", VA = "0xC08CF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001307")]
			[Address(RVA = "0xC08110", Offset = "0xC08110", VA = "0xC08110")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001308")]
			[Address(RVA = "0xC08374", Offset = "0xC08374", VA = "0xC08374", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001309")]
			[Address(RVA = "0xC08378", Offset = "0xC08378", VA = "0xC08378", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600130B")]
			[Address(RVA = "0xC08CB4", Offset = "0xC08CB4", VA = "0xC08CB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xC07F94", Offset = "0xC07F94", VA = "0xC07F94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xC07FFC", Offset = "0xC07FFC", VA = "0xC07FFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xC08090", Offset = "0xC08090", VA = "0xC08090")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xC0801C", Offset = "0xC0801C", VA = "0xC0801C")]
		[IteratorStateMachine(typeof(<WarpText>d__7))]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xC08138", Offset = "0xC08138", VA = "0xC08138")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x200043A")]
		[CompilerGenerated]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001313")]
				[Address(RVA = "0xC090EC", Offset = "0xC090EC", VA = "0xC090EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001315")]
				[Address(RVA = "0xC09134", Offset = "0xC09134", VA = "0xC09134", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001310")]
			[Address(RVA = "0xC08E14", Offset = "0xC08E14", VA = "0xC08E14")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001311")]
			[Address(RVA = "0xC08EC0", Offset = "0xC08EC0", VA = "0xC08EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001312")]
			[Address(RVA = "0xC08EC4", Offset = "0xC08EC4", VA = "0xC08EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0xC090F4", Offset = "0xC090F4", VA = "0xC090F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xC08CFC", Offset = "0xC08CFC", VA = "0xC08CFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xC08DA0", Offset = "0xC08DA0", VA = "0xC08DA0")]
		[IteratorStateMachine(typeof(<Start>d__4))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xC08E3C", Offset = "0xC08E3C", VA = "0xC08E3C")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x200043C")]
		[CompilerGenerated]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x1700017F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001321")]
				[Address(RVA = "0xC0964C", Offset = "0xC0964C", VA = "0xC0964C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000180")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001323")]
				[Address(RVA = "0xC09694", Offset = "0xC09694", VA = "0xC09694", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600131E")]
			[Address(RVA = "0xC093FC", Offset = "0xC093FC", VA = "0xC093FC")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600131F")]
			[Address(RVA = "0xC094C8", Offset = "0xC094C8", VA = "0xC094C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001320")]
			[Address(RVA = "0xC094CC", Offset = "0xC094CC", VA = "0xC094CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001322")]
			[Address(RVA = "0xC09654", Offset = "0xC09654", VA = "0xC09654", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043D")]
		[CompilerGenerated]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x17000181")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001327")]
				[Address(RVA = "0xC09874", Offset = "0xC09874", VA = "0xC09874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000182")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001329")]
				[Address(RVA = "0xC098BC", Offset = "0xC098BC", VA = "0xC098BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001324")]
			[Address(RVA = "0xC09498", Offset = "0xC09498", VA = "0xC09498")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001325")]
			[Address(RVA = "0xC0969C", Offset = "0xC0969C", VA = "0xC0969C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001326")]
			[Address(RVA = "0xC096A0", Offset = "0xC096A0", VA = "0xC096A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001328")]
			[Address(RVA = "0xC0987C", Offset = "0xC0987C", VA = "0xC0987C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xC0913C", Offset = "0xC0913C", VA = "0xC0913C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xC091A4", Offset = "0xC091A4", VA = "0xC091A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xC09258", Offset = "0xC09258", VA = "0xC09258")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xC09324", Offset = "0xC09324", VA = "0xC09324")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xC093F0", Offset = "0xC093F0", VA = "0xC093F0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xC091C8", Offset = "0xC091C8", VA = "0xC091C8")]
		[IteratorStateMachine(typeof(<RevealCharacters>d__7))]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xC09424", Offset = "0xC09424", VA = "0xC09424")]
		[IteratorStateMachine(typeof(<RevealWords>d__8))]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xC094C0", Offset = "0xC094C0", VA = "0xC094C0")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x200043F")]
		[CompilerGenerated]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000183")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001332")]
				[Address(RVA = "0xC0A688", Offset = "0xC0A688", VA = "0xC0A688", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000184")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001334")]
				[Address(RVA = "0xC0A6D0", Offset = "0xC0A6D0", VA = "0xC0A6D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600132F")]
			[Address(RVA = "0xC09EB0", Offset = "0xC09EB0", VA = "0xC09EB0")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001330")]
			[Address(RVA = "0xC09F98", Offset = "0xC09F98", VA = "0xC09F98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001331")]
			[Address(RVA = "0xC09F9C", Offset = "0xC09F9C", VA = "0xC09F9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001333")]
			[Address(RVA = "0xC0A690", Offset = "0xC0A690", VA = "0xC0A690", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000440")]
		[CompilerGenerated]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000185")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001338")]
				[Address(RVA = "0xC0ADB0", Offset = "0xC0ADB0", VA = "0xC0ADB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000186")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600133A")]
				[Address(RVA = "0xC0ADF8", Offset = "0xC0ADF8", VA = "0xC0ADF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001335")]
			[Address(RVA = "0xC09ED8", Offset = "0xC09ED8", VA = "0xC09ED8")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001336")]
			[Address(RVA = "0xC0A6D8", Offset = "0xC0A6D8", VA = "0xC0A6D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001337")]
			[Address(RVA = "0xC0A6DC", Offset = "0xC0A6DC", VA = "0xC0A6DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001339")]
			[Address(RVA = "0xC0ADB8", Offset = "0xC0ADB8", VA = "0xC0ADB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xC098C4", Offset = "0xC098C4", VA = "0xC098C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xC099AC", Offset = "0xC099AC", VA = "0xC099AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xC09DC8", Offset = "0xC09DC8", VA = "0xC09DC8")]
		[IteratorStateMachine(typeof(<DisplayTextMeshProFloatingText>d__12))]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xC09E3C", Offset = "0xC09E3C", VA = "0xC09E3C")]
		[IteratorStateMachine(typeof(<DisplayTextMeshFloatingText>d__13))]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xC09F00", Offset = "0xC09F00", VA = "0xC09F00")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xC0AE00", Offset = "0xC0AE00", VA = "0xC0AE00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xC0AE04", Offset = "0xC0AE04", VA = "0xC0AE04")]
		private void Start()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xC0B104", Offset = "0xC0B104", VA = "0xC0B104")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x2000443")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x40013F0")]
			TopLeft,
			[Token(Token = "0x40013F1")]
			BottomLeft,
			[Token(Token = "0x40013F2")]
			TopRight,
			[Token(Token = "0x40013F3")]
			BottomRight
		}

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40013EA")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xC0B114", Offset = "0xC0B114", VA = "0xC0B114")]
		private void Awake()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xC0B3CC", Offset = "0xC0B3CC", VA = "0xC0B3CC")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xC0B4E0", Offset = "0xC0B4E0", VA = "0xC0B4E0")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x2000445")]
		public enum objectType
		{
			[Token(Token = "0x40013FA")]
			TextMeshPro,
			[Token(Token = "0x40013FB")]
			TextMeshProUGUI
		}

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x40013F7")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xC0B4F0", Offset = "0xC0B4F0", VA = "0xC0B4F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xC0B714", Offset = "0xC0B714", VA = "0xC0B714")]
		private void Update()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xC0B7A8", Offset = "0xC0B7A8", VA = "0xC0B7A8")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x2000447")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001407")]
			TopLeft,
			[Token(Token = "0x4001408")]
			BottomLeft,
			[Token(Token = "0x4001409")]
			TopRight,
			[Token(Token = "0x400140A")]
			BottomRight
		}

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4001401")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xC0B7B0", Offset = "0xC0B7B0", VA = "0xC0B7B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xC0BBE8", Offset = "0xC0BBE8", VA = "0xC0BBE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xC0BC08", Offset = "0xC0BC08", VA = "0xC0BC08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xC0BA0C", Offset = "0xC0BA0C", VA = "0xC0BA0C")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xC0BD5C", Offset = "0xC0BD5C", VA = "0xC0BD5C")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xC0BD74", Offset = "0xC0BD74", VA = "0xC0BD74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xC0C048", Offset = "0xC0C048", VA = "0xC0C048")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xC0C2E4", Offset = "0xC0C2E4", VA = "0xC0C2E4")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xC0C534", Offset = "0xC0C534", VA = "0xC0C534")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC0C784", Offset = "0xC0C784", VA = "0xC0C784")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xC0CA64", Offset = "0xC0CA64", VA = "0xC0CA64")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xC0CD44", Offset = "0xC0CD44", VA = "0xC0CD44")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xC0D078", Offset = "0xC0D078", VA = "0xC0D078")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC0D080", Offset = "0xC0D080", VA = "0xC0D080")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xC0D088", Offset = "0xC0D088", VA = "0xC0D088")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC0D12C", Offset = "0xC0D12C", VA = "0xC0D12C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC0D7D0", Offset = "0xC0D7D0", VA = "0xC0D7D0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC0D848", Offset = "0xC0D848", VA = "0xC0D848", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xC0D8BC", Offset = "0xC0D8BC", VA = "0xC0D8BC")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4001416")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4001417")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC0D8D4", Offset = "0xC0D8D4", VA = "0xC0D8D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xC0DA9C", Offset = "0xC0DA9C", VA = "0xC0DA9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xC0DB68", Offset = "0xC0DB68", VA = "0xC0DB68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xC0DC34", Offset = "0xC0DC34", VA = "0xC0DC34")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xC0DCE0", Offset = "0xC0DCE0", VA = "0xC0DCE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xC0F1B4", Offset = "0xC0F1B4", VA = "0xC0F1B4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xC0F1C0", Offset = "0xC0F1C0", VA = "0xC0F1C0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xC0F1C8", Offset = "0xC0F1C8", VA = "0xC0F1C8", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xC0F1CC", Offset = "0xC0F1CC", VA = "0xC0F1CC", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xC0E930", Offset = "0xC0E930", VA = "0xC0E930")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xC0F1D0", Offset = "0xC0F1D0", VA = "0xC0F1D0")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200044D")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400142B")]
			TopLeft,
			[Token(Token = "0x400142C")]
			BottomLeft,
			[Token(Token = "0x400142D")]
			TopRight,
			[Token(Token = "0x400142E")]
			BottomRight
		}

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4001426")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xC0F1E8", Offset = "0xC0F1E8", VA = "0xC0F1E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xC0F644", Offset = "0xC0F644", VA = "0xC0F644")]
		private void Start()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xC0F664", Offset = "0xC0F664", VA = "0xC0F664")]
		private void Update()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xC0F40C", Offset = "0xC0F40C", VA = "0xC0F40C")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xC0F7B8", Offset = "0xC0F7B8", VA = "0xC0F7B8")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x200044F")]
		[CompilerGenerated]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4001433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600136E")]
				[Address(RVA = "0xC0FC34", Offset = "0xC0FC34", VA = "0xC0FC34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001370")]
				[Address(RVA = "0xC0FC7C", Offset = "0xC0FC7C", VA = "0xC0FC7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600136B")]
			[Address(RVA = "0xC0F8BC", Offset = "0xC0F8BC", VA = "0xC0F8BC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600136C")]
			[Address(RVA = "0xC0F8EC", Offset = "0xC0F8EC", VA = "0xC0F8EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600136D")]
			[Address(RVA = "0xC0F8F0", Offset = "0xC0F8F0", VA = "0xC0F8F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600136F")]
			[Address(RVA = "0xC0FC3C", Offset = "0xC0FC3C", VA = "0xC0FC3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xC0F7D0", Offset = "0xC0F7D0", VA = "0xC0F7D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xC0F828", Offset = "0xC0F828", VA = "0xC0F828")]
		private void Start()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xC0F848", Offset = "0xC0F848", VA = "0xC0F848")]
		[IteratorStateMachine(typeof(<AnimateVertexColors>d__3))]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xC0F8E4", Offset = "0xC0F8E4", VA = "0xC0F8E4")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x2000451")]
		private struct VertexAnim
		{
			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x2000452")]
		[CompilerGenerated]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600137B")]
				[Address(RVA = "0xC108E4", Offset = "0xC108E4", VA = "0xC108E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600137D")]
				[Address(RVA = "0xC1092C", Offset = "0xC1092C", VA = "0xC1092C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001378")]
			[Address(RVA = "0xC0FF84", Offset = "0xC0FF84", VA = "0xC0FF84")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001379")]
			[Address(RVA = "0xC0FFC4", Offset = "0xC0FFC4", VA = "0xC0FFC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600137A")]
			[Address(RVA = "0xC0FFC8", Offset = "0xC0FFC8", VA = "0xC0FFC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600137C")]
			[Address(RVA = "0xC108EC", Offset = "0xC108EC", VA = "0xC108EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xC0FC84", Offset = "0xC0FC84", VA = "0xC0FC84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xC0FCDC", Offset = "0xC0FCDC", VA = "0xC0FCDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xC0FDA8", Offset = "0xC0FDA8", VA = "0xC0FDA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xC0FE74", Offset = "0xC0FE74", VA = "0xC0FE74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xC0FF08", Offset = "0xC0FF08", VA = "0xC0FF08")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xC0FE94", Offset = "0xC0FE94", VA = "0xC0FE94")]
		[IteratorStateMachine(typeof(<AnimateVertexColors>d__11))]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xC0FFAC", Offset = "0xC0FFAC", VA = "0xC0FFAC")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x2000454")]
		[CompilerGenerated]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001388")]
				[Address(RVA = "0xC11698", Offset = "0xC11698", VA = "0xC11698", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600138A")]
				[Address(RVA = "0xC116E0", Offset = "0xC116E0", VA = "0xC116E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001385")]
			[Address(RVA = "0xC10C24", Offset = "0xC10C24", VA = "0xC10C24")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001386")]
			[Address(RVA = "0xC10C5C", Offset = "0xC10C5C", VA = "0xC10C5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001387")]
			[Address(RVA = "0xC10C60", Offset = "0xC10C60", VA = "0xC10C60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001389")]
			[Address(RVA = "0xC116A0", Offset = "0xC116A0", VA = "0xC116A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xC10934", Offset = "0xC10934", VA = "0xC10934")]
		private void Awake()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xC1098C", Offset = "0xC1098C", VA = "0xC1098C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xC10A58", Offset = "0xC10A58", VA = "0xC10A58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xC10B24", Offset = "0xC10B24", VA = "0xC10B24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xC10BB8", Offset = "0xC10BB8", VA = "0xC10BB8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xC10B44", Offset = "0xC10B44", VA = "0xC10B44")]
		[IteratorStateMachine(typeof(<AnimateVertexColors>d__11))]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xC10C4C", Offset = "0xC10C4C", VA = "0xC10C4C")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x2000456")]
		[CompilerGenerated]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x1700018D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001395")]
				[Address(RVA = "0xC1293C", Offset = "0xC1293C", VA = "0xC1293C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001397")]
				[Address(RVA = "0xC12984", Offset = "0xC12984", VA = "0xC12984", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001392")]
			[Address(RVA = "0xC119D8", Offset = "0xC119D8", VA = "0xC119D8")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001393")]
			[Address(RVA = "0xC11A18", Offset = "0xC11A18", VA = "0xC11A18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001394")]
			[Address(RVA = "0xC11A1C", Offset = "0xC11A1C", VA = "0xC11A1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001396")]
			[Address(RVA = "0xC12944", Offset = "0xC12944", VA = "0xC12944", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xC116E8", Offset = "0xC116E8", VA = "0xC116E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xC11740", Offset = "0xC11740", VA = "0xC11740")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xC1180C", Offset = "0xC1180C", VA = "0xC1180C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xC118D8", Offset = "0xC118D8", VA = "0xC118D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xC1196C", Offset = "0xC1196C", VA = "0xC1196C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xC118F8", Offset = "0xC118F8", VA = "0xC118F8")]
		[IteratorStateMachine(typeof(<AnimateVertexColors>d__10))]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xC11A00", Offset = "0xC11A00", VA = "0xC11A00")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x2000458")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x600139F")]
			[Address(RVA = "0xC12CCC", Offset = "0xC12CCC", VA = "0xC12CCC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xC12CD4", Offset = "0xC12CD4", VA = "0xC12CD4")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000459")]
		[CompilerGenerated]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x1700018F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013A4")]
				[Address(RVA = "0xC13A04", Offset = "0xC13A04", VA = "0xC13A04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000190")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013A6")]
				[Address(RVA = "0xC13A4C", Offset = "0xC13A4C", VA = "0xC13A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xC12C8C", Offset = "0xC12C8C", VA = "0xC12C8C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xC12D64", Offset = "0xC12D64", VA = "0xC12D64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xC12D68", Offset = "0xC12D68", VA = "0xC12D68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xC13A0C", Offset = "0xC13A0C", VA = "0xC13A0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xC1298C", Offset = "0xC1298C", VA = "0xC1298C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xC129E4", Offset = "0xC129E4", VA = "0xC129E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xC12AB0", Offset = "0xC12AB0", VA = "0xC12AB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xC12B7C", Offset = "0xC12B7C", VA = "0xC12B7C")]
		private void Start()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xC12C10", Offset = "0xC12C10", VA = "0xC12C10")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xC12B9C", Offset = "0xC12B9C", VA = "0xC12B9C")]
		[IteratorStateMachine(typeof(<AnimateVertexColors>d__10))]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xC12CB4", Offset = "0xC12CB4", VA = "0xC12CB4")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x200045B")]
		[CompilerGenerated]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x17000191")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013AF")]
				[Address(RVA = "0xC146AC", Offset = "0xC146AC", VA = "0xC146AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013B1")]
				[Address(RVA = "0xC146F4", Offset = "0xC146F4", VA = "0xC146F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xC13BD0", Offset = "0xC13BD0", VA = "0xC13BD0")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xC13E3C", Offset = "0xC13E3C", VA = "0xC13E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xC13E40", Offset = "0xC13E40", VA = "0xC13E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xC146B4", Offset = "0xC146B4", VA = "0xC146B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xC13A54", Offset = "0xC13A54", VA = "0xC13A54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xC13ABC", Offset = "0xC13ABC", VA = "0xC13ABC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xC13B50", Offset = "0xC13B50", VA = "0xC13B50")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xC13ADC", Offset = "0xC13ADC", VA = "0xC13ADC")]
		[IteratorStateMachine(typeof(<WarpText>d__8))]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xC13BF8", Offset = "0xC13BF8", VA = "0xC13BF8")]
		public WarpTextExample()
		{
		}
	}
}
namespace SteamAudio
{
	[Token(Token = "0x200045C")]
	public enum AudioEngine
	{
		[Token(Token = "0x4001472")]
		UnityNative,
		[Token(Token = "0x4001473")]
		FMODStudio
	}
	[Token(Token = "0x200045D")]
	public abstract class AudioEngineAmbisonicsSource
	{
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xC146FC", Offset = "0xC146FC", VA = "0xC146FC", Slot = "4")]
		public virtual void Initialize(GameObject gameObject)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xC14700", Offset = "0xC14700", VA = "0xC14700", Slot = "5")]
		public virtual void Destroy()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xC14704", Offset = "0xC14704", VA = "0xC14704", Slot = "6")]
		public virtual void UpdateParameters(SteamAudioAmbisonicsSource steamAudioAmbisonicsSource)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xC14708", Offset = "0xC14708", VA = "0xC14708", Slot = "7")]
		public virtual void GetParameters(SteamAudioAmbisonicsSource steamAudioAmbisonicsSource)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xC1470C", Offset = "0xC1470C", VA = "0xC1470C")]
		protected AudioEngineAmbisonicsSource()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public static class AudioEngineAmbisonicsSourceFactory
	{
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xC14714", Offset = "0xC14714", VA = "0xC14714")]
		public static AudioEngineAmbisonicsSource Create(AudioEngine audioEngine)
		{
			return null;
		}
	}
	[Token(Token = "0x200045F")]
	public sealed class UnityAudioEngineAmbisonicsSource : AudioEngineAmbisonicsSource
	{
		[Token(Token = "0x4001474")]
		private const int k_binauralModeIndex = 0;

		[Token(Token = "0x4001475")]
		private const int k_hrtfIndexIndex = 1;

		[Token(Token = "0x4001476")]
		private const int k_overrideHRTFIndexIndex = 2;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioSource audioSource;

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xC14788", Offset = "0xC14788", VA = "0xC14788", Slot = "4")]
		public override void Initialize(GameObject gameObject)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xC147EC", Offset = "0xC147EC", VA = "0xC147EC", Slot = "6")]
		public override void UpdateParameters(SteamAudioAmbisonicsSource steamAudioAmbisonicsSource)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xC14780", Offset = "0xC14780", VA = "0xC14780")]
		public UnityAudioEngineAmbisonicsSource()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public abstract class AudioEngineSource
	{
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xC148E4", Offset = "0xC148E4", VA = "0xC148E4", Slot = "4")]
		public virtual void Initialize(GameObject gameObject)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xC148E8", Offset = "0xC148E8", VA = "0xC148E8", Slot = "5")]
		public virtual void Destroy()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xC148EC", Offset = "0xC148EC", VA = "0xC148EC", Slot = "6")]
		public virtual void UpdateParameters(SteamAudioSource steamAudioSource)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xC148F0", Offset = "0xC148F0", VA = "0xC148F0", Slot = "7")]
		public virtual void GetParameters(SteamAudioSource steamAudioSource)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xC148F4", Offset = "0xC148F4", VA = "0xC148F4", Slot = "8")]
		public virtual bool ShouldSendIdentifier(SteamAudioSource steamAudioSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C0")]
		public abstract bool UsesBakedStaticListener(SteamAudioSource steamAudioSource);

		[Token(Token = "0x60013C1")]
		public abstract void SendIdentifier(SteamAudioSource steamAudioSource, int identifier);

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xC148FC", Offset = "0xC148FC", VA = "0xC148FC")]
		protected AudioEngineSource()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public static class AudioEngineSourceFactory
	{
		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xC14904", Offset = "0xC14904", VA = "0xC14904")]
		public static AudioEngineSource Create(AudioEngine audioEngine)
		{
			return null;
		}
	}
	[Token(Token = "0x2000462")]
	internal struct UnityAudioSourceData
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioRolloffMode rolloffMode;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float minDistance;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float maxDistance;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve distanceAttenuationCurve;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xC14A98", Offset = "0xC14A98", VA = "0xC14A98")]
		public static bool AreEqual(UnityAudioSourceData lhs, UnityAudioSourceData rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000463")]
	public sealed class UnityAudioEngineSource : AudioEngineSource
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] mIntPtrBuffer;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GCHandle thisObject;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityAudioSourceData m_curAudioSourceData;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityAudioSourceData m_prevAudioSourceData;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool mAudioSourceDataInitialized;

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xC14E70", Offset = "0xC14E70", VA = "0xC14E70", Slot = "4")]
		public override void Initialize(GameObject gameObject)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xC14EE8", Offset = "0xC14EE8", VA = "0xC14EE8", Slot = "5")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xC14EF4", Offset = "0xC14EF4", VA = "0xC14EF4", Slot = "7")]
		public override void GetParameters(SteamAudioSource steamAudioSource)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xC15110", Offset = "0xC15110", VA = "0xC15110")]
		private void SetSpatializerIntPtr(IntPtr ptr, ref int index)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xC153B0", Offset = "0xC153B0", VA = "0xC153B0", Slot = "6")]
		public override void UpdateParameters(SteamAudioSource steamAudioSource)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xC15900", Offset = "0xC15900", VA = "0xC15900", Slot = "8")]
		public override bool ShouldSendIdentifier(SteamAudioSource steamAudioSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xC15924", Offset = "0xC15924", VA = "0xC15924", Slot = "9")]
		public override bool UsesBakedStaticListener(SteamAudioSource steamAudioSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xC15944", Offset = "0xC15944", VA = "0xC15944", Slot = "10")]
		public override void SendIdentifier(SteamAudioSource steamAudioSource, int identifier)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xC14D6C", Offset = "0xC14D6C", VA = "0xC14D6C")]
		[MonoPInvokeCallback(typeof(DistanceAttenuationCallback))]
		public static float DistanceAttenuationCallback(float distance, IntPtr userData)
		{
			return default(float);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xC14A34", Offset = "0xC14A34", VA = "0xC14A34")]
		public UnityAudioEngineSource()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public abstract class AudioEngineState
	{
		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xC159CC", Offset = "0xC159CC", VA = "0xC159CC", Slot = "4")]
		public virtual void Initialize(ComponentCache componentCache, GameEngineState gameEngineState, string[] sofaFileName)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xC159D0", Offset = "0xC159D0", VA = "0xC159D0", Slot = "5")]
		public virtual void Destroy()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xC159D4", Offset = "0xC159D4", VA = "0xC159D4", Slot = "6")]
		public virtual void UpdateListener(Vector3 position, Vector3 ahead, Vector3 up)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xC159D8", Offset = "0xC159D8", VA = "0xC159D8", Slot = "7")]
		public virtual void UpdateSOFAFile(int index)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xC159DC", Offset = "0xC159DC", VA = "0xC159DC")]
		protected AudioEngineState()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public static class AudioEngineStateFactory
	{
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xC159E4", Offset = "0xC159E4", VA = "0xC159E4")]
		public static AudioEngineState Create(AudioEngine audioEngine)
		{
			return null;
		}
	}
	[Token(Token = "0x2000466")]
	public sealed class UnityAudioEngineState : AudioEngineState
	{
		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xC15B20", Offset = "0xC15B20", VA = "0xC15B20", Slot = "4")]
		public override void Initialize(ComponentCache componentCache, GameEngineState gameEngineState, string[] sofaFileNames)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xC15D88", Offset = "0xC15D88", VA = "0xC15D88", Slot = "5")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xC15DF0", Offset = "0xC15DF0", VA = "0xC15DF0", Slot = "6")]
		public override void UpdateListener(Vector3 position, Vector3 ahead, Vector3 up)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xC15ED4", Offset = "0xC15ED4", VA = "0xC15ED4", Slot = "7")]
		public override void UpdateSOFAFile(int index)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xC15B18", Offset = "0xC15B18", VA = "0xC15B18")]
		public UnityAudioEngineState()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public enum BakingMode
	{
		[Token(Token = "0x4001483")]
		StaticSource,
		[Token(Token = "0x4001484")]
		StaticListener,
		[Token(Token = "0x4001485")]
		Reverb
	}
	[Token(Token = "0x2000468")]
	public enum BakeStatus
	{
		[Token(Token = "0x4001487")]
		Ready,
		[Token(Token = "0x4001488")]
		InProgress,
		[Token(Token = "0x4001489")]
		Complete
	}
	[Token(Token = "0x2000469")]
	public class Baker
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool oneBakeActive;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string bakingGameObjectName;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int probeBoxBakingCurrently;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int objectBakingCurrently;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool bakeConvolution;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool bakeParameteric;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool cancelBake;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float bakeIRDuration;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BakeStatus bakeStatus;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SteamAudioManager steamAudioManager;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamAudioProbeBox[][] duringBakeProbeBoxes;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Sphere[] duringBakeSpheres;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject[] duringBakeObjects;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string[] duringBakeObjectNames;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BakedDataIdentifier[] duringBakeIdentifiers;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string[] duringBakeNames;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Thread bakeThread;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PhononCore.BakeProgressCallback bakeCallback;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xC15EE0", Offset = "0xC15EE0", VA = "0xC15EE0")]
		public void BakeEffectThread()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xC16AD4", Offset = "0xC16AD4", VA = "0xC16AD4")]
		public void BeginBake(GameObject[] gameObjects, BakedDataIdentifier[] identifiers, string[] names, Sphere[] influenceSpheres, SteamAudioProbeBox[][] probeBoxes)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xC171DC", Offset = "0xC171DC", VA = "0xC171DC")]
		public void EndBake()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xC172B8", Offset = "0xC172B8", VA = "0xC172B8")]
		private void InEditorUpdate()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xC172BC", Offset = "0xC172BC", VA = "0xC172BC")]
		public void CancelBake()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xC17384", Offset = "0xC17384", VA = "0xC17384")]
		public static bool IsBakeActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xC173CC", Offset = "0xC173CC", VA = "0xC173CC")]
		public BakeStatus GetBakeStatus()
		{
			return default(BakeStatus);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xC15EDC", Offset = "0xC15EDC", VA = "0xC15EDC")]
		[MonoPInvokeCallback(typeof(PhononCore.BakeProgressCallback))]
		private static void AdvanceProgress(float bakeProgressFraction)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xC173D4", Offset = "0xC173D4", VA = "0xC173D4")]
		public bool DrawProgressBar()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xC173DC", Offset = "0xC173DC", VA = "0xC173DC")]
		public Baker()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public enum Bool
	{
		[Token(Token = "0x400149D")]
		False,
		[Token(Token = "0x400149E")]
		True
	}
	[Token(Token = "0x200046B")]
	public enum Error
	{
		[Token(Token = "0x40014A0")]
		None,
		[Token(Token = "0x40014A1")]
		Fail,
		[Token(Token = "0x40014A2")]
		OutOfMemory,
		[Token(Token = "0x40014A3")]
		Initialization
	}
	[Token(Token = "0x200046C")]
	public delegate void LogCallback(string message);
	[Token(Token = "0x200046D")]
	public struct Vector3
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;
	}
	[Token(Token = "0x200046E")]
	public struct Matrix4x4
	{
		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;
	}
	[Token(Token = "0x200046F")]
	public struct Box
	{
		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 minCoordinates;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 maxCoordinates;
	}
	[Token(Token = "0x2000470")]
	public struct Sphere
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float centerx;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float centery;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float centerz;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float radius;
	}
	[Token(Token = "0x2000471")]
	public enum ChannelLayoutType
	{
		[Token(Token = "0x40014BE")]
		Speakers,
		[Token(Token = "0x40014BF")]
		Ambisonics
	}
	[Token(Token = "0x2000472")]
	public enum ChannelLayout
	{
		[Token(Token = "0x40014C1")]
		Mono,
		[Token(Token = "0x40014C2")]
		Stereo,
		[Token(Token = "0x40014C3")]
		Quadraphonic,
		[Token(Token = "0x40014C4")]
		FivePointOne,
		[Token(Token = "0x40014C5")]
		SevenPointOne,
		[Token(Token = "0x40014C6")]
		Custom
	}
	[Token(Token = "0x2000473")]
	public enum ChannelOrder
	{
		[Token(Token = "0x40014C8")]
		Interleaved,
		[Token(Token = "0x40014C9")]
		Deinterleaved
	}
	[Token(Token = "0x2000474")]
	public enum AmbisonicsOrdering
	{
		[Token(Token = "0x40014CB")]
		FurseMalham,
		[Token(Token = "0x40014CC")]
		ACN
	}
	[Token(Token = "0x2000475")]
	public enum AmbisonicsNormalization
	{
		[Token(Token = "0x40014CE")]
		FurseMalham,
		[Token(Token = "0x40014CF")]
		SN3D,
		[Token(Token = "0x40014D0")]
		N3D
	}
	[Token(Token = "0x2000476")]
	public struct AudioFormat
	{
		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ChannelLayoutType channelLayoutType;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ChannelLayout channelLayout;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int numSpeakers;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] speakerDirections;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ambisonicsOrder;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AmbisonicsOrdering ambisonicsOrdering;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AmbisonicsNormalization ambisonicsNormalization;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ChannelOrder channelOrder;
	}
	[Token(Token = "0x2000477")]
	public struct AudioBuffer
	{
		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioFormat audioFormat;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numSamples;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float[] interleavedBuffer;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr[] deInterleavedBuffer;
	}
	[Token(Token = "0x2000478")]
	public struct RenderingSettings
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int samplingRate;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int frameSize;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ConvolutionOption convolutionOption;
	}
	[Token(Token = "0x2000479")]
	public struct Complex
	{
		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float real;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float imag;
	}
	[Token(Token = "0x200047A")]
	public enum HRTFDatabaseType
	{
		[Token(Token = "0x40014E3")]
		Default,
		[Token(Token = "0x40014E4")]
		SOFA
	}
	[Token(Token = "0x200047B")]
	public struct HRTFParams
	{
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HRTFDatabaseType type;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr hrtfData;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sofaFileName;
	}
	[Token(Token = "0x200047C")]
	public enum HRTFInterpolation
	{
		[Token(Token = "0x40014E9")]
		Nearest,
		[Token(Token = "0x40014EA")]
		Bilinear
	}
	[Token(Token = "0x200047D")]
	public struct Triangle
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index0;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int index1;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int index2;
	}
	[Token(Token = "0x200047E")]
	public struct Material
	{
		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float absorptionLow;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float absorptionMid;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float absorptionHigh;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float scattering;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float transmissionLow;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float transmissionMid;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transmissionHigh;
	}
	[Token(Token = "0x200047F")]
	public enum SceneType
	{
		[Token(Token = "0x40014F6")]
		Phonon,
		[Token(Token = "0x40014F7")]
		Embree,
		[Token(Token = "0x40014F8")]
		RadeonRays,
		[Token(Token = "0x40014F9")]
		Custom
	}
	[Token(Token = "0x2000480")]
	public enum ConvolutionOption
	{
		[Token(Token = "0x40014FB")]
		Phonon,
		[Token(Token = "0x40014FC")]
		TrueAudioNext
	}
	[Token(Token = "0x2000481")]
	public enum OcclusionMethod
	{
		[Token(Token = "0x40014FE")]
		Raycast,
		[Token(Token = "0x40014FF")]
		Partial
	}
	[Token(Token = "0x2000482")]
	public enum OcclusionMode
	{
		[Token(Token = "0x4001501")]
		NoOcclusion,
		[Token(Token = "0x4001502")]
		OcclusionWithNoTransmission,
		[Token(Token = "0x4001503")]
		OcclusionWithFrequencyIndependentTransmission,
		[Token(Token = "0x4001504")]
		OcclusionWithFrequencyDependentTransmission
	}
	[Token(Token = "0x2000483")]
	public enum SimulationType
	{
		[Token(Token = "0x4001506")]
		Realtime,
		[Token(Token = "0x4001507")]
		Baked
	}
	[Token(Token = "0x2000484")]
	public struct SimulationSettings
	{
		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SceneType sceneType;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int maxOcclusionSamples;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int rays;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int secondaryRays;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bounces;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int threads;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float irDuration;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ambisonicsOrder;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxConvolutionSources;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int bakingBatchSize;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float irradianceMinDistance;
	}
	[Token(Token = "0x2000485")]
	public enum ComputeDeviceType
	{
		[Token(Token = "0x4001514")]
		CPU,
		[Token(Token = "0x4001515")]
		GPU,
		[Token(Token = "0x4001516")]
		Any
	}
	[Token(Token = "0x2000486")]
	public struct ComputeDeviceFilter
	{
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ComputeDeviceType type;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int maxCUsToReserve;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fractionCUsForIRUpdate;
	}
	[Token(Token = "0x2000487")]
	public enum ProbeBatchType
	{
		[Token(Token = "0x400151B")]
		Static,
		[Token(Token = "0x400151C")]
		Dynamic
	}
	[Token(Token = "0x2000488")]
	public enum ProbePlacementStrategy
	{
		[Token(Token = "0x400151E")]
		Centroid,
		[Token(Token = "0x400151F")]
		Octree,
		[Token(Token = "0x4001520")]
		UniformFloor
	}
	[Token(Token = "0x2000489")]
	public struct ProbePlacementParameters
	{
		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ProbePlacementStrategy placement;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float horizontalSpacing;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float heightAboveFloor;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int maxNumTriangles;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxOctreeDepth;
	}
	[Token(Token = "0x200048A")]
	public struct BakingSettings
	{
		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bool bakeParametric;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Bool bakeConvolution;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float irDurationForBake;
	}
	[Token(Token = "0x200048B")]
	public enum BakedDataType
	{
		[Token(Token = "0x400152A")]
		StaticSource,
		[Token(Token = "0x400152B")]
		StaticListener,
		[Token(Token = "0x400152C")]
		Reverb
	}
	[Serializable]
	[Token(Token = "0x200048C")]
	public struct BakedDataIdentifier
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int identifier;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public BakedDataType type;
	}
	[Token(Token = "0x200048D")]
	public struct DirectSoundPath
	{
		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 direction;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distanceAttenuation;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float airAbsorptionLow;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float airAbsorptionMid;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float airAbsorptionHigh;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float propagationDelay;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float occlusionFactor;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float transmissionFactorLow;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float transmissionFactorMid;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float transmissionFactorHigh;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float directivityFactor;
	}
	[Token(Token = "0x200048E")]
	public struct Directivity
	{
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float dipoleWeight;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float dipolePower;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr callback;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr userData;
	}
	[Token(Token = "0x200048F")]
	public enum DistanceAttenuationModelType
	{
		[Token(Token = "0x400153F")]
		Default,
		[Token(Token = "0x4001540")]
		InverseDistance,
		[Token(Token = "0x4001541")]
		Callback
	}
	[Token(Token = "0x2000490")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public delegate float DistanceAttenuationCallback(float distance, IntPtr userData);
	[Token(Token = "0x2000491")]
	public struct DistanceAttenuationModel
	{
		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DistanceAttenuationModelType type;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float minDistance;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DistanceAttenuationCallback callback;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr userData;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bool dirty;
	}
	[Token(Token = "0x2000492")]
	public enum AirAbsorptionModelType
	{
		[Token(Token = "0x4001548")]
		Default,
		[Token(Token = "0x4001549")]
		Exponential,
		[Token(Token = "0x400154A")]
		Callback
	}
	[Token(Token = "0x2000493")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public delegate float AirAbsorptionCallback(float distance, int band, IntPtr userData);
	[Token(Token = "0x2000494")]
	public struct AirAbsorptionModel
	{
		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AirAbsorptionModelType type;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float coefficients0;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float coefficients1;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float coefficients2;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AirAbsorptionCallback callback;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr userData;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bool dirty;
	}
	[Token(Token = "0x2000495")]
	public struct Source
	{
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 ahead;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 up;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 right;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Directivity directivity;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DistanceAttenuationModel distanceAttenuationModel;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AirAbsorptionModel airAbsorptionModel;
	}
	[Token(Token = "0x2000496")]
	public struct DirectSoundEffectOptions
	{
		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bool applyDistanceAttenuation;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Bool applyAirAbsorption;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OcclusionMode occlusionMode;
	}
	[Token(Token = "0x2000497")]
	public static class Common
	{
		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xC177F8", Offset = "0xC177F8", VA = "0xC177F8")]
		public static Vector3 ConvertVector(UnityEngine.Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xC17800", Offset = "0xC17800", VA = "0xC17800")]
		public static UnityEngine.Vector3 ConvertVector(Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xC17808", Offset = "0xC17808", VA = "0xC17808")]
		public static float[] ConvertMatrix(UnityEngine.Matrix4x4 matrix)
		{
			return null;
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xC17994", Offset = "0xC17994", VA = "0xC17994")]
		public static Matrix4x4 ConvertTransform(Transform transform)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xC17ADC", Offset = "0xC17ADC", VA = "0xC17ADC")]
		public static byte[] ConvertString(string s)
		{
			return null;
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xC17B54", Offset = "0xC17B54", VA = "0xC17B54")]
		public static int HashForIdentifier(string identifier)
		{
			return default(int);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xC17BFC", Offset = "0xC17BFC", VA = "0xC17BFC")]
		public static byte[] HashStringForIdentifier(string identifier)
		{
			return null;
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xC17C80", Offset = "0xC17C80", VA = "0xC17C80")]
		public static byte[] HashStringForIdentifierWithPrefix(string identifier, string prefix)
		{
			return null;
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xC17D18", Offset = "0xC17D18", VA = "0xC17D18")]
		public static string GetStreamingAssetsFileName(string fileName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000498")]
	public class ComponentCache
	{
		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioListener audioListener;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SteamAudioListener steamAudioListener;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamAudioCustomSpeakerLayout steamAudioCustomSpeakerLayout;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SteamAudioCustomSettings steamAudioCustomSettings;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isAudioListenerSet;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isSteamAudioListenerSet;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool isSteamAudioCustomSpeakerLayoutSet;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool isSteamAudioCustomSettingsSet;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xC18114", Offset = "0xC18114", VA = "0xC18114")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xC1844C", Offset = "0xC1844C", VA = "0xC1844C")]
		public void Destroy()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xC1813C", Offset = "0xC1813C", VA = "0xC1813C")]
		public AudioListener AudioListener()
		{
			return null;
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xC18200", Offset = "0xC18200", VA = "0xC18200")]
		public SteamAudioListener SteamAudioListener()
		{
			return null;
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xC18388", Offset = "0xC18388", VA = "0xC18388")]
		public SteamAudioCustomSpeakerLayout SteamAudioCustomSpeakerLayout()
		{
			return null;
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xC182C4", Offset = "0xC182C4", VA = "0xC182C4")]
		public SteamAudioCustomSettings SteamAudioCustomSettings()
		{
			return null;
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xC184A0", Offset = "0xC184A0", VA = "0xC184A0")]
		public ComponentCache()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class ComputeDevice
	{
		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr device;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xC184A8", Offset = "0xC184A8", VA = "0xC184A8")]
		public IntPtr GetDevice()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xC184B0", Offset = "0xC184B0", VA = "0xC184B0")]
		public Error Create(IntPtr globalContext, bool useOpenCL, ComputeDeviceFilter deviceFilter)
		{
			return default(Error);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xC18858", Offset = "0xC18858", VA = "0xC18858")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xC18930", Offset = "0xC18930", VA = "0xC18930")]
		public ComputeDevice()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public static class PhononCore
	{
		[Token(Token = "0x200049B")]
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void LoadSceneProgressCallback(float progress);

		[Token(Token = "0x200049C")]
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void FinalizeSceneProgressCallback(float progress);

		[Token(Token = "0x200049D")]
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void ClosestHitCallback(IntPtr origin, IntPtr direction, float minDistance, float maxDistance, [In][Out] ref float hitDistance, [In][Out] ref Vector3 hitNormal, [In][Out] ref IntPtr hitMaterial, IntPtr userData);

		[Token(Token = "0x200049E")]
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void AnyHitCallback(IntPtr origin, IntPtr direction, float minDistance, float maxDistance, [In][Out] ref int hitExists, IntPtr userData);

		[Token(Token = "0x200049F")]
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void BatchedClosestHitCallback(int numRays, Vector3[] origins, Vector3[] directions, int rayStride, float[] minDistances, float[] maxDistances, float[] hitDistances, Vector3[] hitNormals, IntPtr hitMaterials, int hitStride, IntPtr userData);

		[Token(Token = "0x20004A0")]
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void BatchedAnyHitCallback(int numRays, Vector3[] origins, Vector3[] directions, int rayStride, float[] minDistances, float[] maxDistances, byte[] hitExists, IntPtr userData);

		[Token(Token = "0x20004A1")]
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void ProbePlacementProgressCallback(float progress);

		[Token(Token = "0x20004A2")]
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void BakeProgressCallback(float progress);

		[PreserveSig]
		[Token(Token = "0x6001404")]
		[Address(RVA = "0xC18974", Offset = "0xC18974", VA = "0xC18974")]
		public static extern void iplGetVersion([In][Out] ref uint major, [In][Out] ref uint minor, [In][Out] ref uint patch);

		[PreserveSig]
		[Token(Token = "0x6001405")]
		[Address(RVA = "0xC18A08", Offset = "0xC18A08", VA = "0xC18A08")]
		public static extern Error iplCreateContext(LogCallback logCallback, IntPtr allocateCallback, IntPtr freeCallback, [In][Out] ref IntPtr context);

		[PreserveSig]
		[Token(Token = "0x6001406")]
		[Address(RVA = "0xC18AA8", Offset = "0xC18AA8", VA = "0xC18AA8")]
		public static extern void iplDestroyContext([In][Out] ref IntPtr context);

		[PreserveSig]
		[Token(Token = "0x6001407")]
		[Address(RVA = "0xC18B24", Offset = "0xC18B24", VA = "0xC18B24")]
		public static extern void iplCleanup();

		[PreserveSig]
		[Token(Token = "0x6001408")]
		[Address(RVA = "0xC187BC", Offset = "0xC187BC", VA = "0xC187BC")]
		public static extern Error iplCreateComputeDevice(IntPtr globalContext, ComputeDeviceFilter deviceFilter, [In][Out] ref IntPtr device);

		[PreserveSig]
		[Token(Token = "0x6001409")]
		[Address(RVA = "0xC188B4", Offset = "0xC188B4", VA = "0xC188B4")]
		public static extern void iplDestroyComputeDevice([In][Out] ref IntPtr device);

		[PreserveSig]
		[Token(Token = "0x600140A")]
		[Address(RVA = "0xC18B88", Offset = "0xC18B88", VA = "0xC18B88")]
		public static extern Error iplCreateScene(IntPtr context, IntPtr computeDevice, SceneType sceneType, int numMaterials, Material[] materials, ClosestHitCallback closestHitCallback, AnyHitCallback anyHitCallback, BatchedClosestHitCallback batchedClosestHitCallback, BatchedAnyHitCallback batchedAnyHitCallback, IntPtr userData, [In][Out] ref IntPtr scene);

		[PreserveSig]
		[Token(Token = "0x600140B")]
		[Address(RVA = "0xC18CA4", Offset = "0xC18CA4", VA = "0xC18CA4")]
		public static extern void iplDestroyScene([In][Out] ref IntPtr scene);

		[PreserveSig]
		[Token(Token = "0x600140C")]
		[Address(RVA = "0xC18D20", Offset = "0xC18D20", VA = "0xC18D20")]
		public static extern Error iplCreateStaticMesh(IntPtr scene, int numVertices, int numTriangles, Vector3[] vertices, Triangle[] triangles, int[] materialIndices, [In][Out] ref IntPtr staticMesh);

		[PreserveSig]
		[Token(Token = "0x600140D")]
		[Address(RVA = "0xC18DFC", Offset = "0xC18DFC", VA = "0xC18DFC")]
		public static extern void iplDestroyStaticMesh([In][Out] ref IntPtr staticMesh);

		[PreserveSig]
		[Token(Token = "0x600140E")]
		[Address(RVA = "0xC18E78", Offset = "0xC18E78", VA = "0xC18E78")]
		public static extern int iplSaveScene(IntPtr scene, [In][Out] byte[] data);

		[PreserveSig]
		[Token(Token = "0x600140F")]
		[Address(RVA = "0xC18F04", Offset = "0xC18F04", VA = "0xC18F04")]
		public static extern Error iplLoadScene(IntPtr globalContext, SceneType sceneType, byte[] data, int size, IntPtr computeDevice, LoadSceneProgressCallback progressCallback, [In][Out] ref IntPtr scene);

		[PreserveSig]
		[Token(Token = "0x6001410")]
		[Address(RVA = "0xC18FDC", Offset = "0xC18FDC", VA = "0xC18FDC")]
		public static extern void iplSaveSceneAsObj(IntPtr scene, byte[] fileName);

		[PreserveSig]
		[Token(Token = "0x6001411")]
		[Address(RVA = "0xC19068", Offset = "0xC19068", VA = "0xC19068")]
		public static extern Error iplCreateInstancedMesh(IntPtr scene, IntPtr instancedScene, Matrix4x4 transform, [In][Out] ref IntPtr instancedMesh);

		[PreserveSig]
		[Token(Token = "0x6001412")]
		[Address(RVA = "0xC19114", Offset = "0xC19114", VA = "0xC19114")]
		public static extern void iplDestroyInstancedMesh([In][Out] ref IntPtr instancedMesh);

		[PreserveSig]
		[Token(Token = "0x6001413")]
		[Address(RVA = "0xC19190", Offset = "0xC19190", VA = "0xC19190")]
		public static extern void iplAddInstancedMesh(IntPtr scene, IntPtr instancedMesh);

		[PreserveSig]
		[Token(Token = "0x6001414")]
		[Address(RVA = "0xC19214", Offset = "0xC19214", VA = "0xC19214")]
		public static extern void iplRemoveInstancedMesh(IntPtr scene, IntPtr instancedMesh);

		[PreserveSig]
		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC19298", Offset = "0xC19298", VA = "0xC19298")]
		public static extern void iplUpdateInstancedMeshTransform(IntPtr instancedMesh, Matrix4x4 transform);

		[PreserveSig]
		[Token(Token = "0x6001416")]
		[Address(RVA = "0xC1932C", Offset = "0xC1932C", VA = "0xC1932C")]
		public static extern void iplCommitScene(IntPtr scene);

		[PreserveSig]
		[Token(Token = "0x6001417")]
		[Address(RVA = "0xC193A8", Offset = "0xC193A8", VA = "0xC193A8")]
		public static extern Error iplCreateEnvironment(IntPtr globalContext, IntPtr computeDevice, SimulationSettings simulationSettings, IntPtr scene, IntPtr probeManager, [In][Out] ref IntPtr environment);

		[PreserveSig]
		[Token(Token = "0x6001418")]
		[Address(RVA = "0xC1946C", Offset = "0xC1946C", VA = "0xC1946C")]
		public static extern void iplDestroyEnvironment([In][Out] ref IntPtr environment);

		[PreserveSig]
		[Token(Token = "0x6001419")]
		[Address(RVA = "0xC194E8", Offset = "0xC194E8", VA = "0xC194E8")]
		public static extern void iplSetNumBounces(IntPtr environment, int numBounces);

		[PreserveSig]
		[Token(Token = "0x600141A")]
		[Address(RVA = "0xC1956C", Offset = "0xC1956C", VA = "0xC1956C")]
		public static extern void iplMixAudioBuffers(int numBuffers, AudioBuffer[] inputAudio, AudioBuffer outputAudio);

		[PreserveSig]
		[Token(Token = "0x600141B")]
		[Address(RVA = "0xC196E4", Offset = "0xC196E4", VA = "0xC196E4")]
		public static extern void iplInterleaveAudioBuffer(AudioBuffer inputAudio, AudioBuffer outputAudio);

		[PreserveSig]
		[Token(Token = "0x600141C")]
		[Address(RVA = "0xC197D4", Offset = "0xC197D4", VA = "0xC197D4")]
		public static extern void iplDeinterleaveAudioBuffer(AudioBuffer inputAudio, AudioBuffer outputAudio);

		[PreserveSig]
		[Token(Token = "0x600141D")]
		[Address(RVA = "0xC198C4", Offset = "0xC198C4", VA = "0xC198C4")]
		public static extern void iplConvertAudioBufferFormat(AudioBuffer inputAudio, AudioBuffer outputAudio);

		[PreserveSig]
		[Token(Token = "0x600141E")]
		[Address(RVA = "0xC199B4", Offset = "0xC199B4", VA = "0xC199B4")]
		public static extern Error iplCreateAmbisonicsRotator(IntPtr globalContext, int order, [In][Out] ref IntPtr rotator);

		[PreserveSig]
		[Token(Token = "0x600141F")]
		[Address(RVA = "0xC19A48", Offset = "0xC19A48", VA = "0xC19A48")]
		public static extern void iplDestroyAmbisonicsRotator([In][Out] ref IntPtr rotator);

		[PreserveSig]
		[Token(Token = "0x6001420")]
		[Address(RVA = "0xC19AC4", Offset = "0xC19AC4", VA = "0xC19AC4")]
		public static extern void iplSetAmbisonicsRotation(IntPtr rotator, Vector3 listenerAhead, Vector3 listenerUp);

		[PreserveSig]
		[Token(Token = "0x6001421")]
		[Address(RVA = "0xC19B88", Offset = "0xC19B88", VA = "0xC19B88")]
		public static extern void iplRotateAmbisonicsAudioBuffer(IntPtr rotator, AudioBuffer inputAudio, AudioBuffer outputAudio);

		[PreserveSig]
		[Token(Token = "0x6001422")]
		[Address(RVA = "0xC19C80", Offset = "0xC19C80", VA = "0xC19C80")]
		public static extern Vector3 iplCalculateRelativeDirection(Vector3 sourcePosition, Vector3 listenerPosition, Vector3 listenerAhead, Vector3 listenerUp);

		[PreserveSig]
		[Token(Token = "0x6001423")]
		[Address(RVA = "0xC19D5C", Offset = "0xC19D5C", VA = "0xC19D5C")]
		public static extern Error iplCreateEnvironmentalRenderer(IntPtr globalContext, IntPtr environment, RenderingSettings renderingSettings, AudioFormat outputFormat, IntPtr threadCreateCallback, IntPtr threadDestroyCallback, [In][Out] ref IntPtr renderer);

		[PreserveSig]
		[Token(Token = "0x6001424")]
		[Address(RVA = "0xC19E6C", Offset = "0xC19E6C", VA = "0xC19E6C")]
		public static extern void iplDestroyEnvironmentalRenderer([In][Out] ref IntPtr renderer);

		[PreserveSig]
		[Token(Token = "0x6001425")]
		[Address(RVA = "0xC19EE8", Offset = "0xC19EE8", VA = "0xC19EE8")]
		public static extern DirectSoundPath iplGetDirectSoundPath(IntPtr environment, Vector3 listenerPosition, Vector3 listenerAhead, Vector3 listenerUp, Source source, float sourceRadius, int numSamples, OcclusionMode occlusionMode, OcclusionMethod occlusionMethod);

		[PreserveSig]
		[Token(Token = "0x6001426")]
		[Address(RVA = "0xC1A03C", Offset = "0xC1A03C", VA = "0xC1A03C")]
		public static extern Error iplCreateConvolutionEffect(IntPtr renderer, BakedDataIdentifier identifier, SimulationType simulationType, AudioFormat inputFormat, AudioFormat outputFormat, [In][Out] ref IntPtr effect);

		[PreserveSig]
		[Token(Token = "0x6001427")]
		[Address(RVA = "0xC1A174", Offset = "0xC1A174", VA = "0xC1A174")]
		public static extern void iplDestroyConvolutionEffect([In][Out] ref IntPtr effect);

		[PreserveSig]
		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC1A1F0", Offset = "0xC1A1F0", VA = "0xC1A1F0")]
		public static extern void iplSetConvolutionEffectIdentifier(IntPtr effect, BakedDataIdentifier identifier);

		[PreserveSig]
		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC1A274", Offset = "0xC1A274", VA = "0xC1A274")]
		public static extern void iplSetDryAudioForConvolutionEffect(IntPtr effect, Vector3 sourcePosition, AudioBuffer dryAudio);

		[PreserveSig]
		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC1A358", Offset = "0xC1A358", VA = "0xC1A358")]
		public static extern void iplGetWetAudioForConvolutionEffect(IntPtr effect, Vector3 listenerPosition, Vector3 listenerAhead, Vector3 listenerUp, AudioBuffer wetAudio);

		[PreserveSig]
		[Token(Token = "0x600142B")]
		[Address(RVA = "0xC1A474", Offset = "0xC1A474", VA = "0xC1A474")]
		public static extern void iplGetMixedEnvironmentalAudio(IntPtr renderer, Vector3 listenerPosition, Vector3 listenerAhead, Vector3 listenerUp, AudioBuffer mixedWetAudio);

		[PreserveSig]
		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC1A590", Offset = "0xC1A590", VA = "0xC1A590")]
		public static extern void iplFlushConvolutionEffect(IntPtr effect);

		[PreserveSig]
		[Token(Token = "0x600142D")]
		[Address(RVA = "0xC1A60C", Offset = "0xC1A60C", VA = "0xC1A60C")]
		public static extern Error iplCreateProbeBox(IntPtr context, IntPtr scene, float[] boxLocalToWorldTransform, ProbePlacementParameters placementParams, ProbePlacementProgressCallback progressCallback, [In][Out] ref IntPtr probeBox);

		[PreserveSig]
		[Token(Token = "0x600142E")]
		[Address(RVA = "0xC16948", Offset = "0xC16948", VA = "0xC16948")]
		public static extern void iplDestroyProbeBox([In][Out] ref IntPtr probeBox);

		[PreserveSig]
		[Token(Token = "0x600142F")]
		[Address(RVA = "0xC1A6E4", Offset = "0xC1A6E4", VA = "0xC1A6E4")]
		public static extern int iplGetProbeSpheres(IntPtr probeBox, [In][Out] Sphere[] probeSpheres);

		[PreserveSig]
		[Token(Token = "0x6001430")]
		[Address(RVA = "0xC169C4", Offset = "0xC169C4", VA = "0xC169C4")]
		public static extern int iplSaveProbeBox(IntPtr probeBox, [In][Out] byte[] data);

		[PreserveSig]
		[Token(Token = "0x6001431")]
		[Address(RVA = "0xC16618", Offset = "0xC16618", VA = "0xC16618")]
		public static extern Error iplLoadProbeBox(IntPtr context, byte[] data, int size, [In][Out] ref IntPtr probeBox);

		[PreserveSig]
		[Token(Token = "0x6001432")]
		[Address(RVA = "0xC1A770", Offset = "0xC1A770", VA = "0xC1A770")]
		public static extern Error iplCreateProbeBatch(IntPtr context, [In][Out] ref IntPtr probeBatch);

		[PreserveSig]
		[Token(Token = "0x6001433")]
		[Address(RVA = "0xC1A7F4", Offset = "0xC1A7F4", VA = "0xC1A7F4")]
		public static extern void iplDestroyProbeBatch([In][Out] ref IntPtr probeBatch);

		[PreserveSig]
		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC1A870", Offset = "0xC1A870", VA = "0xC1A870")]
		public static extern void iplAddProbeToBatch(IntPtr probeBatch, IntPtr probeBox, int probeIndex);

		[PreserveSig]
		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC1A904", Offset = "0xC1A904", VA = "0xC1A904")]
		public static extern void iplFinalizeProbeBatch(IntPtr probeBatch);

		[PreserveSig]
		[Token(Token = "0x6001436")]
		[Address(RVA = "0xC1A980", Offset = "0xC1A980", VA = "0xC1A980")]
		public static extern int iplSaveProbeBatch(IntPtr probeBatch, [In][Out] byte[] data);

		[PreserveSig]
		[Token(Token = "0x6001437")]
		[Address(RVA = "0xC1AA0C", Offset = "0xC1AA0C", VA = "0xC1AA0C")]
		public static extern Error iplLoadProbeBatch(IntPtr context, byte[] data, int size, [In][Out] ref IntPtr probeBatch);

		[PreserveSig]
		[Token(Token = "0x6001438")]
		[Address(RVA = "0xC1AAB0", Offset = "0xC1AAB0", VA = "0xC1AAB0")]
		public static extern Error iplCreateProbeManager(IntPtr context, [In][Out] ref IntPtr probeManager);

		[PreserveSig]
		[Token(Token = "0x6001439")]
		[Address(RVA = "0xC1AB34", Offset = "0xC1AB34", VA = "0xC1AB34")]
		public static extern void iplDestroyProbeManager([In][Out] ref IntPtr probeManager);

		[PreserveSig]
		[Token(Token = "0x600143A")]
		[Address(RVA = "0xC1ABB0", Offset = "0xC1ABB0", VA = "0xC1ABB0")]
		public static extern void iplAddProbeBatch(IntPtr probeManager, IntPtr probeBatch);

		[PreserveSig]
		[Token(Token = "0x600143B")]
		[Address(RVA = "0xC1AC30", Offset = "0xC1AC30", VA = "0xC1AC30")]
		public static extern void iplRemoveProbeBatch(IntPtr probeManager, IntPtr probeBatch);

		[PreserveSig]
		[Token(Token = "0x600143C")]
		[Address(RVA = "0xC166BC", Offset = "0xC166BC", VA = "0xC166BC")]
		public static extern void iplBakeReverb(IntPtr environment, IntPtr probeBox, BakingSettings bakingSettings, BakeProgressCallback progressCallback);

		[PreserveSig]
		[Token(Token = "0x600143D")]
		[Address(RVA = "0xC1685C", Offset = "0xC1685C", VA = "0xC1685C")]
		public static extern void iplBakePropagation(IntPtr environment, IntPtr probeBox, Sphere sourceInfluence, BakedDataIdentifier sourceIdentifier, BakingSettings bakingSettings, BakeProgressCallback progressCallback);

		[PreserveSig]
		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC16770", Offset = "0xC16770", VA = "0xC16770")]
		public static extern void iplBakeStaticListener(IntPtr environment, IntPtr probeBox, Sphere listenerInfluence, BakedDataIdentifier listenerIdentifier, BakingSettings bakingSettings, BakeProgressCallback progressCallback);

		[PreserveSig]
		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC17320", Offset = "0xC17320", VA = "0xC17320")]
		public static extern void iplCancelBake();

		[PreserveSig]
		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC1ACB4", Offset = "0xC1ACB4", VA = "0xC1ACB4")]
		public static extern void iplDeleteBakedDataByIdentifier(IntPtr probeBox, BakedDataIdentifier identifier);

		[PreserveSig]
		[Token(Token = "0x6001441")]
		[Address(RVA = "0xC16A50", Offset = "0xC16A50", VA = "0xC16A50")]
		public static extern int iplGetBakedDataSizeByIdentifier(IntPtr probeBox, BakedDataIdentifier identifier);
	}
	[Token(Token = "0x20004A3")]
	public static class PhononUnityNative
	{
		[PreserveSig]
		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC1B9FC", Offset = "0xC1B9FC", VA = "0xC1B9FC")]
		public static extern void iplUnityGetVersion([In][Out] ref uint major, [In][Out] ref uint minor, [In][Out] ref uint patch);

		[PreserveSig]
		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC1BA8C", Offset = "0xC1BA8C", VA = "0xC1BA8C")]
		public static extern void iplUnityResetAudioEngine();

		[PreserveSig]
		[Token(Token = "0x6001464")]
		[Address(RVA = "0xC15BD4", Offset = "0xC15BD4", VA = "0xC15BD4")]
		public static extern int iplUnityAddSOFAFileName(string sofaFileName);

		[PreserveSig]
		[Token(Token = "0x6001465")]
		[Address(RVA = "0xC1BAF0", Offset = "0xC1BAF0", VA = "0xC1BAF0")]
		public static extern void iplUnityRemoveSOFAFileName(string sofaFileName);

		[PreserveSig]
		[Token(Token = "0x6001466")]
		[Address(RVA = "0xC15C68", Offset = "0xC15C68", VA = "0xC15C68")]
		public static extern void iplUnitySetCurrentSOFAFile(int index);

		[PreserveSig]
		[Token(Token = "0x6001467")]
		[Address(RVA = "0xC15CE4", Offset = "0xC15CE4", VA = "0xC15CE4")]
		public static extern void iplUnitySetEnvironment(SimulationSettings simulationSettings, IntPtr environment, ConvolutionOption convolutionType);

		[PreserveSig]
		[Token(Token = "0x6001468")]
		[Address(RVA = "0xC15D8C", Offset = "0xC15D8C", VA = "0xC15D8C")]
		public static extern void iplUnityResetEnvironment();

		[PreserveSig]
		[Token(Token = "0x6001469")]
		[Address(RVA = "0xC15E04", Offset = "0xC15E04", VA = "0xC15E04")]
		public static extern void iplUnitySetListener(Vector3 position, Vector3 ahead, Vector3 up);
	}
	[Token(Token = "0x20004A4")]
	public class Environment
	{
		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr environment;

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xC1BB7C", Offset = "0xC1BB7C", VA = "0xC1BB7C")]
		public IntPtr GetEnvironment()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xC1BB84", Offset = "0xC1BB84", VA = "0xC1BB84")]
		public Error Create(ComputeDevice computeDevice, SimulationSettings simulationSettings, Scene scene, ProbeManager probeManager, IntPtr globalContext)
		{
			return default(Error);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xC1BC98", Offset = "0xC1BC98", VA = "0xC1BC98")]
		public void Destroy()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xC1BCF4", Offset = "0xC1BCF4", VA = "0xC1BCF4")]
		public Environment()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public enum GameEngineStateInitReason
	{
		[Token(Token = "0x4001567")]
		ExportingScene,
		[Token(Token = "0x4001568")]
		GeneratingProbes,
		[Token(Token = "0x4001569")]
		EditingProbes,
		[Token(Token = "0x400156A")]
		Baking,
		[Token(Token = "0x400156B")]
		Playing
	}
	[Token(Token = "0x20004A6")]
	public class GameEngineState
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ComputeDevice computeDevice;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SimulationSettings simulationSettings;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Scene scene;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ProbeManager probeManager;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Environment environment;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ConvolutionOption convolutionType;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Dictionary<string, IntPtr> instancedScenes;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<UnityEngine.SceneManagement.Scene, IntPtr> additiveScenes;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Dictionary<UnityEngine.SceneManagement.Scene, IntPtr> additiveSceneMeshes;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<IntPtr> editorAdditiveScenes;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<IntPtr> editorAdditiveSceneMeshes;

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xC1BD90", Offset = "0xC1BD90", VA = "0xC1BD90")]
		public void Initialize(SimulationSettingsValue settings, ComponentCache componentCache, GameEngineStateInitReason reason)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xC1CD70", Offset = "0xC1CD70", VA = "0xC1CD70")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xC1D064", Offset = "0xC1D064", VA = "0xC1D064")]
		public IntPtr Context()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xC1D06C", Offset = "0xC1D06C", VA = "0xC1D06C")]
		public ComputeDevice ComputeDevice()
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xC1D074", Offset = "0xC1D074", VA = "0xC1D074")]
		public SimulationSettings SimulationSettings()
		{
			return default(SimulationSettings);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xC1D088", Offset = "0xC1D088", VA = "0xC1D088")]
		public Scene Scene()
		{
			return null;
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xC1D090", Offset = "0xC1D090", VA = "0xC1D090")]
		public ProbeManager ProbeManager()
		{
			return null;
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xC1D098", Offset = "0xC1D098", VA = "0xC1D098")]
		public Environment Environment()
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xC1D0A0", Offset = "0xC1D0A0", VA = "0xC1D0A0")]
		public ConvolutionOption ConvolutionType()
		{
			return default(ConvolutionOption);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xC1D0A8", Offset = "0xC1D0A8", VA = "0xC1D0A8")]
		public void ExportScene(MaterialValue defaultMaterial, bool exportOBJ)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xC1BD38", Offset = "0xC1BD38", VA = "0xC1BD38")]
		[MonoPInvokeCallback(typeof(LogCallback))]
		private static void LogMessage(string message)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xC1D970", Offset = "0xC1D970", VA = "0xC1D970")]
		public GameEngineState()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class ManagerData
	{
		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ComponentCache componentCache;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameEngineState gameEngineState;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioEngineState audioEngineState;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int referenceCount;

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xC1DB10", Offset = "0xC1DB10", VA = "0xC1DB10")]
		public void Initialize(GameEngineStateInitReason reason, AudioEngine audioEngine, SimulationSettingsValue simulationValue, string[] sofaFileNames)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xC1DBBC", Offset = "0xC1DBBC", VA = "0xC1DBBC")]
		public void Destroy()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xC1DC30", Offset = "0xC1DC30", VA = "0xC1DC30")]
		public ManagerData()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public enum MaterialPreset
	{
		[Token(Token = "0x400157D")]
		Generic,
		[Token(Token = "0x400157E")]
		Brick,
		[Token(Token = "0x400157F")]
		Concrete,
		[Token(Token = "0x4001580")]
		Ceramic,
		[Token(Token = "0x4001581")]
		Gravel,
		[Token(Token = "0x4001582")]
		Carpet,
		[Token(Token = "0x4001583")]
		Glass,
		[Token(Token = "0x4001584")]
		Plaster,
		[Token(Token = "0x4001585")]
		Wood,
		[Token(Token = "0x4001586")]
		Metal,
		[Token(Token = "0x4001587")]
		Rock,
		[Token(Token = "0x4001588")]
		Custom
	}
	[Token(Token = "0x20004A9")]
	public static class MaterialPresetList
	{
		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MaterialValue[] values;

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xC1DCDC", Offset = "0xC1DCDC", VA = "0xC1DCDC")]
		private static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xC1DD2C", Offset = "0xC1DD2C", VA = "0xC1DD2C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xC1E43C", Offset = "0xC1E43C", VA = "0xC1E43C")]
		public static MaterialValue PresetValue(int index)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004AA")]
	public class MaterialValue
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 1f)]
		public float LowFreqAbsorption;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float MidFreqAbsorption;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float HighFreqAbsorption;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float Scattering;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float LowFreqTransmission;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		public float MidFreqTransmission;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		public float HighFreqTransmission;

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xC1E434", Offset = "0xC1E434", VA = "0xC1E434")]
		public MaterialValue()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xC1E4DC", Offset = "0xC1E4DC", VA = "0xC1E4DC")]
		public MaterialValue(float aLow, float aMid, float aHigh)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xC1E3D0", Offset = "0xC1E3D0", VA = "0xC1E3D0")]
		public MaterialValue(float aLow, float aMid, float aHigh, float scattering, float tLow, float tMid, float tHigh)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xC1E524", Offset = "0xC1E524", VA = "0xC1E524")]
		public MaterialValue(MaterialValue other)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xC1E550", Offset = "0xC1E550", VA = "0xC1E550")]
		public void CopyFrom(MaterialValue other)
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class ProbeManager
	{
		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr probeManager;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IntPtr probeBatch;

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xC1E584", Offset = "0xC1E584", VA = "0xC1E584")]
		public IntPtr GetProbeManager()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xC1CAD8", Offset = "0xC1CAD8", VA = "0xC1CAD8")]
		public Error Create(IntPtr context)
		{
			return default(Error);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xC1CEF0", Offset = "0xC1CEF0", VA = "0xC1CEF0")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xC1DACC", Offset = "0xC1DACC", VA = "0xC1DACC")]
		public ProbeManager()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class RayTracer
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] s_hits;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float[] s_origin;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float[] s_direction;

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xC1E58C", Offset = "0xC1E58C", VA = "0xC1E58C")]
		[MonoPInvokeCallback(typeof(PhononCore.ClosestHitCallback))]
		public static void ClosestHit(IntPtr rayOrigin, IntPtr rayDirection, float minDistance, float maxDistance, ref float hitDistance, ref Vector3 hitNormal, ref IntPtr hitMaterial, IntPtr userData)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xC1E8F8", Offset = "0xC1E8F8", VA = "0xC1E8F8")]
		[MonoPInvokeCallback(typeof(PhononCore.AnyHitCallback))]
		public static void AnyHit(IntPtr rayOrigin, IntPtr rayDirection, float minDistance, float maxDistance, ref int hitExists, IntPtr userData)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xC1EF48", Offset = "0xC1EF48", VA = "0xC1EF48")]
		public RayTracer()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class Scene
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr materialBuffer;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static UnityEngine.SceneManagement.Scene s_activeScene;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SteamAudioManager s_steamAudioManager;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr scene;

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xC1EF50", Offset = "0xC1EF50", VA = "0xC1EF50")]
		public IntPtr GetScene()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xC1D188", Offset = "0xC1D188", VA = "0xC1D188")]
		public Error Export(ComputeDevice computeDevice, MaterialValue defaultMaterial, IntPtr globalContext, bool exportOBJ = false)
		{
			return default(Error);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xC1F918", Offset = "0xC1F918", VA = "0xC1F918")]
		private SteamAudioGeometry[] FilterGameObjectsWithDynamicGeometry(SteamAudioGeometry[] objects)
		{
			return null;
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xC1C66C", Offset = "0xC1C66C", VA = "0xC1C66C")]
		public Error Create(ComputeDevice computeDevice, SimulationSettings simulationSettings, IntPtr globalContext)
		{
			return default(Error);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xC1C938", Offset = "0xC1C938", VA = "0xC1C938")]
		public Error AddAdditiveScene(UnityEngine.SceneManagement.Scene unityScene, IntPtr activeScene, ComputeDevice computeDevice, SimulationSettings simulationSettings, IntPtr globalContext, out IntPtr addedScene, out IntPtr addedMesh)
		{
			return default(Error);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xC1CF6C", Offset = "0xC1CF6C", VA = "0xC1CF6C")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xC1FAF0", Offset = "0xC1FAF0", VA = "0xC1FAF0")]
		private static Material CopyMaterial(MaterialValue materialValue)
		{
			return default(Material);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xC1EBA4", Offset = "0xC1EBA4", VA = "0xC1EBA4")]
		public static LayerMask GetSteamAudioLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xC1FB1C", Offset = "0xC1FB1C", VA = "0xC1FB1C")]
		public static bool HasSteamAudioGeometry(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xC1ED28", Offset = "0xC1ED28", VA = "0xC1ED28")]
		public static IntPtr GetSteamAudioMaterialBuffer(Transform obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xC1F4E4", Offset = "0xC1F4E4", VA = "0xC1F4E4")]
		public static string SceneFileName(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xC1F454", Offset = "0xC1F454", VA = "0xC1F454")]
		private static string ObjFileName(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xC1DA88", Offset = "0xC1DA88", VA = "0xC1DA88")]
		public Scene()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public static class SceneExporter
	{
		[Token(Token = "0x600149A")]
		[Address(RVA = "0xC1FC98", Offset = "0xC1FC98", VA = "0xC1FC98")]
		private static bool IsDynamicSubObject(GameObject root, GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xC1FD3C", Offset = "0xC1FD3C", VA = "0xC1FD3C")]
		private static bool IsActiveInHierarchy(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xC1FDE8", Offset = "0xC1FDE8", VA = "0xC1FDE8")]
		public static List<GameObject> GetGameObjectsForExport(GameObject root, bool exportingStaticObjects = false)
		{
			return null;
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xC1EF58", Offset = "0xC1EF58", VA = "0xC1EF58")]
		public static GameObject[] GetStaticGameObjectsForExport(UnityEngine.SceneManagement.Scene scene)
		{
			return null;
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xC203F4", Offset = "0xC203F4", VA = "0xC203F4")]
		public static GameObject[] GetDynamicGameObjectsForExport(SteamAudioDynamicObject dynamicObject)
		{
			return null;
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xC20458", Offset = "0xC20458", VA = "0xC20458")]
		private static MaterialValue GetMaterialForGameObject(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xC2050C", Offset = "0xC2050C", VA = "0xC2050C")]
		private static Material MaterialFromSteamAudioMaterial(MaterialValue steamAudioMaterial)
		{
			return default(Material);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xC20538", Offset = "0xC20538", VA = "0xC20538")]
		private static void GetMaterialMapping(GameObject[] gameObjects, ref Material[] materials, ref int[] materialIndices)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xC20AAC", Offset = "0xC20AAC", VA = "0xC20AAC")]
		private static float GetTerrainSimplificationLevel(Terrain terrain)
		{
			return default(float);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xC20B0C", Offset = "0xC20B0C", VA = "0xC20B0C")]
		public static int GetNumVertices(GameObject gameObject)
		{
			return default(int);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xC20CBC", Offset = "0xC20CBC", VA = "0xC20CBC")]
		public static int GetNumTriangles(GameObject gameObject)
		{
			return default(int);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xC20E80", Offset = "0xC20E80", VA = "0xC20E80")]
		private static void GetVertices(GameObject gameObject, Vector3[] vertices, int offset, Transform transform)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xC21400", Offset = "0xC21400", VA = "0xC21400")]
		private static void GetTriangles(GameObject gameObject, Triangle[] triangles, int offset)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xC2174C", Offset = "0xC2174C", VA = "0xC2174C")]
		private static void FixupTriangleIndices(Triangle[] triangles, int startIndex, int endIndex, int indexOffset)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xC217B4", Offset = "0xC217B4", VA = "0xC217B4")]
		private static SteamAudioDynamicObject GetDynamicObjectInParent(Transform obj)
		{
			return null;
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xC1F070", Offset = "0xC1F070", VA = "0xC1F070")]
		public static void GetGeometryAndMaterialBuffers(GameObject[] gameObjects, ref Vector3[] vertices, ref Triangle[] triangles, ref int[] materialIndices, ref Material[] materials, bool isDynamic, bool exportOBJ)
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public enum SimulationSettingsPreset
	{
		[Token(Token = "0x400159B")]
		Low,
		[Token(Token = "0x400159C")]
		Medium,
		[Token(Token = "0x400159D")]
		High,
		[Token(Token = "0x400159E")]
		Custom
	}
	[Token(Token = "0x20004B0")]
	public static class SimulationSettingsPresetList
	{
		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SimulationSettingsValue[] values;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xC2189C", Offset = "0xC2189C", VA = "0xC2189C")]
		private static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xC218EC", Offset = "0xC218EC", VA = "0xC218EC")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xC21D08", Offset = "0xC21D08", VA = "0xC21D08")]
		public static SimulationSettingsValue PresetValue(int index)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004B1")]
	public class SimulationSettingsValue
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(4f, 256f)]
		public int MaxOcclusionSamples;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(512f, 16384f)]
		public int RealtimeRays;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(128f, 4096f)]
		public int RealtimeSecondaryRays;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 32f)]
		public int RealtimeBounces;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("As percentage of logical processors used on end users machine. Minimum of 1 thread is used.")]
		[Range(1f, 99f)]
		public int RealtimeThreadsPercentage;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(8192f, 65536f)]
		public int BakeRays;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(1024f, 16384f)]
		public int BakeSecondaryRays;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(16f, 256f)]
		public int BakeBounces;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("As percentage of logical processors used on developers machine. Minimum of 1 thread is used.")]
		[Range(1f, 99f)]
		public int BakeThreadsPercentage;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0.1f, 5f)]
		public float Duration;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 3f)]
		public int AmbisonicsOrder;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(1f, 128f)]
		public int MaxSources;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(0.1f, 10f)]
		public float IrradianceMinDistance;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xC21CE0", Offset = "0xC21CE0", VA = "0xC21CE0")]
		public SimulationSettingsValue()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xC21C2C", Offset = "0xC21C2C", VA = "0xC21C2C")]
		public SimulationSettingsValue(int realtimeRays, int realtimeSecondaryRays, int realtimeBounces, int realtimeThreadsPercentage, int bakeRays, int bakeSecondaryRays, int bakeBounces, int bakeThreadsPercentage, float duration, int ambisonicsOrder, int maxSources, float irradianceMinDistance)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xC21DA8", Offset = "0xC21DA8", VA = "0xC21DA8")]
		public SimulationSettingsValue(SimulationSettingsValue other)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xC21DF4", Offset = "0xC21DF4", VA = "0xC21DF4")]
		public void CopyFrom(SimulationSettingsValue other)
		{
		}
	}
	[Token(Token = "0x20004B2")]
	[AddComponentMenu("Steam Audio/Steam Audio Ambisonics Source")]
	public class SteamAudioAmbisonicsSource : MonoBehaviour
	{
		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableBinaural;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideHRTFIndex;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int hrtfIndex;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ManagerData managerData;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioEngine audioEngine;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioEngineAmbisonicsSource audioEngineAmbisonicsSource;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xC21E20", Offset = "0xC21E20", VA = "0xC21E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xC21F64", Offset = "0xC21F64", VA = "0xC21F64")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xC21F88", Offset = "0xC21F88", VA = "0xC21F88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xC21FAC", Offset = "0xC21FAC", VA = "0xC21FAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC21FE0", Offset = "0xC21FE0", VA = "0xC21FE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC22004", Offset = "0xC22004", VA = "0xC22004")]
		public SteamAudioAmbisonicsSource()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	[AddComponentMenu("Steam Audio/Steam Audio Baked Static Listener Node")]
	public class SteamAudioBakedStaticListenerNode : MonoBehaviour
	{
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string uniqueIdentifier;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(1f, 1024f)]
		public float bakingRadius;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool useAllProbeBoxes;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamAudioProbeBox[] probeBoxes;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Baker phononBaker;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> bakedProbeNames;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<int> bakedProbeDataSizes;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int bakedDataSize;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bakeToggle;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bakedStatsFoldout;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BakedDataIdentifier bakedDataIdentifier;

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC22014", Offset = "0xC22014", VA = "0xC22014")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC22280", Offset = "0xC22280", VA = "0xC22280")]
		public void BeginBake()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC22558", Offset = "0xC22558", VA = "0xC22558")]
		public void EndBake()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xC22570", Offset = "0xC22570", VA = "0xC22570")]
		public void UpdateBakedDataStatistics()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xC22534", Offset = "0xC22534", VA = "0xC22534")]
		private void CacheIdentifier()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xC228F4", Offset = "0xC228F4", VA = "0xC228F4")]
		public SteamAudioBakedStaticListenerNode()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	[AddComponentMenu("Steam Audio/Steam Audio Custom Settings")]
	public class SteamAudioCustomSettings : MonoBehaviour
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Simulation Settings")]
		public SceneType rayTracerOption;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Rendering Settings")]
		public ConvolutionOption convolutionOption;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 32f)]
		[Header("GPU Resource Reservation")]
		public int maxComputeUnitsToReserve;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0.1f, 5f)]
		[Header("Override Simulation Settings")]
		public float Duration;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 3f)]
		public int AmbisonicsOrder;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(1f, 128f)]
		public int MaxSources;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Radeon Rays Settings")]
		[Range(1f, 8f)]
		public int BakingBatchSize;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		public float fractionComputeUnitsForIRUpdate;

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC1C65C", Offset = "0xC1C65C", VA = "0xC1C65C")]
		public SceneType RayTracerType()
		{
			return default(SceneType);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC1C654", Offset = "0xC1C654", VA = "0xC1C654")]
		public ConvolutionOption ConvolutionType()
		{
			return default(ConvolutionOption);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC22A3C", Offset = "0xC22A3C", VA = "0xC22A3C")]
		public SteamAudioCustomSettings()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	[AddComponentMenu("Steam Audio/Steam Audio Custom Speaker Layout")]
	public class SteamAudioCustomSpeakerLayout : MonoBehaviour
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3[] speakerPositions;

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC22A68", Offset = "0xC22A68", VA = "0xC22A68")]
		public SteamAudioCustomSpeakerLayout()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	[RequireComponent(typeof(SteamAudioMaterial))]
	[AddComponentMenu("Steam Audio/Steam Audio Dynamic Object")]
	public class SteamAudioDynamicObject : MonoBehaviour
	{
		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string assetFileName;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamAudioManager manager;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IntPtr instancedMesh;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC22A70", Offset = "0xC22A70", VA = "0xC22A70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC22B90", Offset = "0xC22B90", VA = "0xC22B90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xC22C3C", Offset = "0xC22C3C", VA = "0xC22C3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xC22CE4", Offset = "0xC22CE4", VA = "0xC22CE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC22D8C", Offset = "0xC22D8C", VA = "0xC22D8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xC22E48", Offset = "0xC22E48", VA = "0xC22E48")]
		public void Export(string assetFileName, bool exportOBJ)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xC23118", Offset = "0xC23118", VA = "0xC23118")]
		private bool ValidateGeometry()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xC2319C", Offset = "0xC2319C", VA = "0xC2319C")]
		private void ReportValidationFailure(string message)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xC23240", Offset = "0xC23240", VA = "0xC23240")]
		public SteamAudioDynamicObject()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	[AddComponentMenu("Steam Audio/Steam Audio Geometry")]
	public class SteamAudioGeometry : MonoBehaviour
	{
		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 10f)]
		public int TerrainSimplificationLevel;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool exportAllChildren;

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xC232A8", Offset = "0xC232A8", VA = "0xC232A8")]
		public int GetNumVertices()
		{
			return default(int);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xC23420", Offset = "0xC23420", VA = "0xC23420")]
		public int GetNumTriangles()
		{
			return default(int);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xC23598", Offset = "0xC23598", VA = "0xC23598")]
		public SteamAudioGeometry()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public enum ReverbSimulationType
	{
		[Token(Token = "0x40015CD")]
		RealtimeReverb,
		[Token(Token = "0x40015CE")]
		BakedReverb
	}
	[Token(Token = "0x20004B9")]
	[AddComponentMenu("Steam Audio/Steam Audio Listener")]
	public class SteamAudioListener : MonoBehaviour
	{
		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useAllProbeBoxes;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamAudioProbeBox[] probeBoxes;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> bakedProbeNames;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> bakedProbeDataSizes;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int bakedDataSize;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool bakedStatsFoldout;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool bakeToggle;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SteamAudioBakedStaticListenerNode currentStaticListenerNode;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Baker phononBaker;

		[Token(Token = "0x17000193")]
		public BakedDataIdentifier Identifier
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xC23A28", Offset = "0xC23A28", VA = "0xC23A28")]
			get
			{
				return default(BakedDataIdentifier);
			}
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xC235A0", Offset = "0xC235A0", VA = "0xC235A0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xC237BC", Offset = "0xC237BC", VA = "0xC237BC")]
		public void BeginBake()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xC23A30", Offset = "0xC23A30", VA = "0xC23A30")]
		public void EndBake()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xC23A4C", Offset = "0xC23A4C", VA = "0xC23A4C")]
		public void UpdateBakedDataStatistics()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xC23D8C", Offset = "0xC23D8C", VA = "0xC23D8C")]
		public SteamAudioListener()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	[AddComponentMenu("Steam Audio/Steam Audio Manager")]
	public class SteamAudioManager : MonoBehaviour
	{
		[Token(Token = "0x20004BB")]
		[CompilerGenerated]
		private sealed class <EndOfFrameUpdate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamAudioManager <>4__this;

			[Token(Token = "0x17000194")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014F6")]
				[Address(RVA = "0xC25994", Offset = "0xC25994", VA = "0xC25994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000195")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014F8")]
				[Address(RVA = "0xC259DC", Offset = "0xC259DC", VA = "0xC259DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014F3")]
			[Address(RVA = "0xC2490C", Offset = "0xC2490C", VA = "0xC2490C")]
			[DebuggerHidden]
			public <EndOfFrameUpdate>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xC257C8", Offset = "0xC257C8", VA = "0xC257C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xC257CC", Offset = "0xC257CC", VA = "0xC257CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014F7")]
			[Address(RVA = "0xC2599C", Offset = "0xC2599C", VA = "0xC2599C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SteamAudioManager managerSingleton;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ManagerData managerData;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForEndOfFrame waitForEndOfFrame;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioEngine audioEngine;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] sofaFiles;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int currentSOFAFile;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public MaterialPreset materialPreset;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MaterialValue materialValue;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SimulationSettingsPreset simulationPreset;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SimulationSettingsValue simulationValue;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool updateComponents;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioListener currentAudioListener;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool showLoadTimeOptions;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool showMassBakingOptions;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Baker phononBaker;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask layerMask;

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xC23EA0", Offset = "0xC23EA0", VA = "0xC23EA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xC2417C", Offset = "0xC2417C", VA = "0xC2417C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xC24308", Offset = "0xC24308", VA = "0xC24308")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xC24408", Offset = "0xC24408", VA = "0xC24408")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xC248C4", Offset = "0xC248C4", VA = "0xC248C4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xC248DC", Offset = "0xC248DC", VA = "0xC248DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xC24294", Offset = "0xC24294", VA = "0xC24294")]
		[IteratorStateMachine(typeof(<EndOfFrameUpdate>d__6))]
		private IEnumerator EndOfFrameUpdate()
		{
			return null;
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xC23F50", Offset = "0xC23F50", VA = "0xC23F50")]
		public void Initialize(GameEngineStateInitReason reason)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xC24854", Offset = "0xC24854", VA = "0xC24854")]
		public void Destroy()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xC24A94", Offset = "0xC24A94", VA = "0xC24A94")]
		public static bool IsAudioEngineInitializing()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xC24A9C", Offset = "0xC24A9C", VA = "0xC24A9C")]
		public void ExportScene(bool exportOBJ)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xC24AF0", Offset = "0xC24AF0", VA = "0xC24AF0")]
		public AudioListener AudioListener()
		{
			return null;
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xC24B14", Offset = "0xC24B14", VA = "0xC24B14")]
		public SteamAudioListener SteamAudioListener()
		{
			return null;
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xC24B38", Offset = "0xC24B38", VA = "0xC24B38")]
		public GameEngineState GameEngineState()
		{
			return null;
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xC24B54", Offset = "0xC24B54", VA = "0xC24B54")]
		public AudioEngineState AudioEngineState()
		{
			return null;
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xC24B70", Offset = "0xC24B70", VA = "0xC24B70")]
		public ManagerData ManagerData()
		{
			return null;
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xC24B78", Offset = "0xC24B78", VA = "0xC24B78")]
		public static SteamAudioManager GetSingleton()
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xC24C4C", Offset = "0xC24C4C", VA = "0xC24C4C")]
		public int NumSOFAFiles()
		{
			return default(int);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xC24934", Offset = "0xC24934", VA = "0xC24934")]
		public string[] GetSOFAFileNames()
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xC24870", Offset = "0xC24870", VA = "0xC24870")]
		private static void ClearSingleton()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xC24CB0", Offset = "0xC24CB0", VA = "0xC24CB0")]
		public void CreateInstancedMesh(string assetFileName, Transform instanceTransform, ref IntPtr instancedMesh)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xC24FC8", Offset = "0xC24FC8", VA = "0xC24FC8")]
		public void DestroyInstancedMesh(ref IntPtr instancedMesh)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xC25028", Offset = "0xC25028", VA = "0xC25028")]
		public void EnableInstancedMesh(IntPtr instancedMesh)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xC250AC", Offset = "0xC250AC", VA = "0xC250AC")]
		public void DisableInstancedMesh(IntPtr instancedMesh)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xC25130", Offset = "0xC25130", VA = "0xC25130")]
		public void UpdateInstancedMeshTransform(IntPtr instancedMesh, Transform instanceTransform)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xC251D0", Offset = "0xC251D0", VA = "0xC251D0")]
		public void AddAdditiveScene(UnityEngine.SceneManagement.Scene unityScene)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xC2554C", Offset = "0xC2554C", VA = "0xC2554C")]
		public void RemoveAdditiveScene(UnityEngine.SceneManagement.Scene unityScene)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xC245D0", Offset = "0xC245D0", VA = "0xC245D0")]
		public void RemoveAllAdditiveScenes()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xC24438", Offset = "0xC24438", VA = "0xC24438")]
		public void RemoveAllInstancedScenes()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xC256AC", Offset = "0xC256AC", VA = "0xC256AC")]
		private void OnSceneLoaded(UnityEngine.SceneManagement.Scene additiveScene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xC256C0", Offset = "0xC256C0", VA = "0xC256C0")]
		private void OnSceneUnloaded(UnityEngine.SceneManagement.Scene additiveScene)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xC256C8", Offset = "0xC256C8", VA = "0xC256C8")]
		public SteamAudioManager()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	[AddComponentMenu("Steam Audio/Steam Audio Material")]
	public class SteamAudioMaterial : MonoBehaviour
	{
		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialPreset Preset;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialValue Value;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xC259E4", Offset = "0xC259E4", VA = "0xC259E4")]
		public SteamAudioMaterial()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	[AddComponentMenu("Steam Audio/Steam Audio Probe Box")]
	public class SteamAudioProbeBox : MonoBehaviour
	{
		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProbePlacementStrategy placementStrategy;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0.1f, 50f)]
		public float horizontalSpacing;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.1f, 20f)]
		public float heightAboveFloor;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(1f, 1024f)]
		public int maxNumTriangles;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(1f, 10f)]
		public int maxOctreeDepth;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int dataSize;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float[] probeSpherePoints;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float[] probeSphereRadii;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string cachedDataFileName;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ProbeDataLayerInfo> dataLayerInfo;

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xC259EC", Offset = "0xC259EC", VA = "0xC259EC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xC25C18", Offset = "0xC25C18", VA = "0xC25C18")]
		public void GenerateProbes()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xC263F8", Offset = "0xC263F8", VA = "0xC263F8")]
		public void DeleteBakedDataByIdentifier(BakedDataIdentifier identifier)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xC2674C", Offset = "0xC2674C", VA = "0xC2674C")]
		private string DataFileName()
		{
			return null;
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xC2689C", Offset = "0xC2689C", VA = "0xC2689C")]
		public void CacheFileName()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xC266B0", Offset = "0xC266B0", VA = "0xC266B0")]
		public byte[] LoadData()
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xC2634C", Offset = "0xC2634C", VA = "0xC2634C")]
		public void SaveData(byte[] data)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xC26388", Offset = "0xC26388", VA = "0xC26388")]
		public void ResetLayers()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xC268A0", Offset = "0xC268A0", VA = "0xC268A0")]
		public void AddOrUpdateLayer(BakedDataIdentifier identifier, string name, int size)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xC26A7C", Offset = "0xC26A7C", VA = "0xC26A7C")]
		public void AddLayer(BakedDataIdentifier identifier, string name, int size)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xC266E4", Offset = "0xC266E4", VA = "0xC266E4")]
		public void RemoveLayer(BakedDataIdentifier identifier)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xC26B94", Offset = "0xC26B94", VA = "0xC26B94")]
		public void UpdateLayerSize(BakedDataIdentifier identifier, int newSize)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xC26908", Offset = "0xC26908", VA = "0xC26908")]
		private ProbeDataLayerInfo FindLayer(BakedDataIdentifier identifier)
		{
			return null;
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xC26BB8", Offset = "0xC26BB8", VA = "0xC26BB8")]
		public SteamAudioProbeBox()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BE")]
	public class ProbeDataLayerInfo
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BakedDataIdentifier identifier;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int size;

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xC26BB0", Offset = "0xC26BB0", VA = "0xC26BB0")]
		public ProbeDataLayerInfo()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public enum SourceSimulationType
	{
		[Token(Token = "0x40015FB")]
		Realtime,
		[Token(Token = "0x40015FC")]
		BakedStaticSource,
		[Token(Token = "0x40015FD")]
		BakedStaticListener
	}
	[Token(Token = "0x20004C0")]
	[AddComponentMenu("Steam Audio/Steam Audio Source")]
	public class SteamAudioSource : MonoBehaviour
	{
		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool directBinaural;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public HRTFInterpolation interpolation;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool physicsBasedAttenuation;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DistanceAttenuationModel distanceAttenuationModel;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool airAbsorption;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AirAbsorptionModel airAbsorptionModel;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Range(0f, 1f)]
		public float dipoleWeight;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Range(0f, 4f)]
		public float dipolePower;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OcclusionMode occlusionMode;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public OcclusionMethod occlusionMethod;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Range(0.1f, 10f)]
		public float sourceRadius;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Range(2f, 256f)]
		public int occlusionSamples;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(0f, 1f)]
		public float directMixLevel;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool reflections;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool indirectBinaural;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		public bool physicsBasedAttenuationForIndirect;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Range(0f, 10f)]
		public float indirectMixLevel;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public SourceSimulationType simulationType;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string uniqueIdentifier;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool avoidSilenceDuringInit;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool overrideHRTFIndex;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int hrtfIndex;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public DirectSoundPath directPath;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[Range(1f, 1024f)]
		public float bakingRadius;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool useAllProbeBoxes;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SteamAudioProbeBox[] probeBoxes;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Baker baker;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public List<string> bakedProbeNames;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<int> bakedProbeDataSizes;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int bakedDataSize;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool bakedStatsFoldout;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		public bool bakeToggle;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public BakedDataIdentifier bakedDataIdentifier;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private ManagerData managerData;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private AudioEngine audioEngine;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AudioEngineSource audioEngineSource;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private UnityEngine.Vector3[] sphereVertices;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private UnityEngine.Vector3[] deformedSphereVertices;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Mesh deformedSphereMesh;

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xC26C84", Offset = "0xC26C84", VA = "0xC26C84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xC26DC4", Offset = "0xC26DC4", VA = "0xC26DC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xC26DE8", Offset = "0xC26DE8", VA = "0xC26DE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xC26E0C", Offset = "0xC26E0C", VA = "0xC26E0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xC26E44", Offset = "0xC26E44", VA = "0xC26E44")]
		private void Update()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xC273A4", Offset = "0xC273A4", VA = "0xC273A4")]
		public void BeginBake()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xC27684", Offset = "0xC27684", VA = "0xC27684")]
		public void EndBake()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xC276A0", Offset = "0xC276A0", VA = "0xC276A0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xC27EA4", Offset = "0xC27EA4", VA = "0xC27EA4")]
		public void UpdateBakedDataStatistics()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xC27660", Offset = "0xC27660", VA = "0xC27660")]
		private void CacheIdentifier()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xC272C4", Offset = "0xC272C4", VA = "0xC272C4")]
		private int GetIdentifierToSend()
		{
			return default(int);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xC28228", Offset = "0xC28228", VA = "0xC28228")]
		private UnityEngine.Vector3 DeformedVertex(UnityEngine.Vector3 vertex)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xC27A88", Offset = "0xC27A88", VA = "0xC27A88")]
		private void InitializeDeformedSphereMesh(int nPhi, int nTheta)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xC27DD4", Offset = "0xC27DD4", VA = "0xC27DD4")]
		private void DeformSphereMesh()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xC2827C", Offset = "0xC2827C", VA = "0xC2827C")]
		public SteamAudioSource()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public static class Version
	{
		[Token(Token = "0x4001625")]
		public const int major = 2;

		[Token(Token = "0x4001626")]
		public const int minor = 0;

		[Token(Token = "0x4001627")]
		public const int patch = 20;

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xC283EC", Offset = "0xC283EC", VA = "0xC283EC")]
		public static int GetVersion()
		{
			return default(int);
		}
	}
}
namespace SFB
{
	[Token(Token = "0x20004C2")]
	public interface IStandaloneFileBrowser
	{
		[Token(Token = "0x6001519")]
		string[] OpenFilePanel(string title, string directory, ExtensionFilter[] extensions, bool multiselect);

		[Token(Token = "0x600151A")]
		string[] OpenFolderPanel(string title, string directory, bool multiselect);

		[Token(Token = "0x600151B")]
		string SaveFilePanel(string title, string directory, string defaultName, ExtensionFilter[] extensions);

		[Token(Token = "0x600151C")]
		void OpenFilePanelAsync(string title, string directory, ExtensionFilter[] extensions, bool multiselect, Action<string[]> cb);

		[Token(Token = "0x600151D")]
		void OpenFolderPanelAsync(string title, string directory, bool multiselect, Action<string[]> cb);

		[Token(Token = "0x600151E")]
		void SaveFilePanelAsync(string title, string directory, string defaultName, ExtensionFilter[] extensions, Action<string> cb);
	}
	[Token(Token = "0x20004C3")]
	public struct ExtensionFilter
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] Extensions;

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xC283F8", Offset = "0xC283F8", VA = "0xC283F8")]
		public ExtensionFilter(string filterName, params string[] filterExtensions)
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class StandaloneFileBrowser
	{
		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IStandaloneFileBrowser _platformWrapper;

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xC28428", Offset = "0xC28428", VA = "0xC28428")]
		static StandaloneFileBrowser()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xC2842C", Offset = "0xC2842C", VA = "0xC2842C")]
		public static string[] OpenFilePanel(string title, string directory, string extension, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xC285B8", Offset = "0xC285B8", VA = "0xC285B8")]
		public static string[] OpenFilePanel(string title, string directory, ExtensionFilter[] extensions, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xC286B0", Offset = "0xC286B0", VA = "0xC286B0")]
		public static void OpenFilePanelAsync(string title, string directory, string extension, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xC2884C", Offset = "0xC2884C", VA = "0xC2884C")]
		public static void OpenFilePanelAsync(string title, string directory, ExtensionFilter[] extensions, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xC28950", Offset = "0xC28950", VA = "0xC28950")]
		public static string[] OpenFolderPanel(string title, string directory, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xC28A3C", Offset = "0xC28A3C", VA = "0xC28A3C")]
		public static void OpenFolderPanelAsync(string title, string directory, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xC28B38", Offset = "0xC28B38", VA = "0xC28B38")]
		public static string SaveFilePanel(string title, string directory, string defaultName, string extension)
		{
			return null;
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xC28CC4", Offset = "0xC28CC4", VA = "0xC28CC4")]
		public static string SaveFilePanel(string title, string directory, string defaultName, ExtensionFilter[] extensions)
		{
			return null;
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xC28DC0", Offset = "0xC28DC0", VA = "0xC28DC0")]
		public static void SaveFilePanelAsync(string title, string directory, string defaultName, string extension, Action<string> cb)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xC28F5C", Offset = "0xC28F5C", VA = "0xC28F5C")]
		public static void SaveFilePanelAsync(string title, string directory, string defaultName, ExtensionFilter[] extensions, Action<string> cb)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xC29060", Offset = "0xC29060", VA = "0xC29060")]
		public StandaloneFileBrowser()
		{
		}
	}
}
namespace GameAnalyticsSDK
{
	[Token(Token = "0x20004C5")]
	public enum GAErrorSeverity
	{
		[Token(Token = "0x400162C")]
		Undefined,
		[Token(Token = "0x400162D")]
		Debug,
		[Token(Token = "0x400162E")]
		Info,
		[Token(Token = "0x400162F")]
		Warning,
		[Token(Token = "0x4001630")]
		Error,
		[Token(Token = "0x4001631")]
		Critical
	}
	[Token(Token = "0x20004C6")]
	public enum GAProgressionStatus
	{
		[Token(Token = "0x4001633")]
		Undefined,
		[Token(Token = "0x4001634")]
		Start,
		[Token(Token = "0x4001635")]
		Complete,
		[Token(Token = "0x4001636")]
		Fail
	}
	[Token(Token = "0x20004C7")]
	public enum GAResourceFlowType
	{
		[Token(Token = "0x4001638")]
		Undefined,
		[Token(Token = "0x4001639")]
		Source,
		[Token(Token = "0x400163A")]
		Sink
	}
	[Token(Token = "0x20004C8")]
	public enum GAAdAction
	{
		[Token(Token = "0x400163C")]
		Undefined,
		[Token(Token = "0x400163D")]
		Clicked,
		[Token(Token = "0x400163E")]
		Show,
		[Token(Token = "0x400163F")]
		FailedShow,
		[Token(Token = "0x4001640")]
		RewardReceived,
		[Token(Token = "0x4001641")]
		Request,
		[Token(Token = "0x4001642")]
		Loaded
	}
	[Token(Token = "0x20004C9")]
	public enum GAAdType
	{
		[Token(Token = "0x4001644")]
		Undefined,
		[Token(Token = "0x4001645")]
		Video,
		[Token(Token = "0x4001646")]
		RewardedVideo,
		[Token(Token = "0x4001647")]
		Playable,
		[Token(Token = "0x4001648")]
		Interstitial,
		[Token(Token = "0x4001649")]
		OfferWall,
		[Token(Token = "0x400164A")]
		Banner
	}
	[Token(Token = "0x20004CA")]
	public enum GAAdError
	{
		[Token(Token = "0x400164C")]
		Undefined,
		[Token(Token = "0x400164D")]
		Unknown,
		[Token(Token = "0x400164E")]
		Offline,
		[Token(Token = "0x400164F")]
		NoFill,
		[Token(Token = "0x4001650")]
		InternalError,
		[Token(Token = "0x4001651")]
		InvalidRequest,
		[Token(Token = "0x4001652")]
		UnableToPrecache
	}
	[Token(Token = "0x20004CB")]
	[RequireComponent(typeof(GA_SpecialEvents))]
	[ExecuteInEditMode]
	public class GameAnalytics : MonoBehaviour
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Settings _settings;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameAnalytics _instance;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _hasInitializeBeenCalled;

		[Token(Token = "0x17000196")]
		public static Settings SettingsGA
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0xC29068", Offset = "0xC29068", VA = "0xC29068")]
			get
			{
				return null;
			}
			[Token(Token = "0x600152D")]
			[Address(RVA = "0xC29324", Offset = "0xC29324", VA = "0xC29324")]
			private set
			{
			}
		}

		[Token(Token = "0x14000001")]
		public static event Action OnRemoteConfigsUpdatedEvent
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xC2CD2C", Offset = "0xC2CD2C", VA = "0xC2CD2C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600155E")]
			[Address(RVA = "0xC2CDE8", Offset = "0xC2CDE8", VA = "0xC2CDE8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xC2937C", Offset = "0xC2937C", VA = "0xC2937C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xC293F8", Offset = "0xC293F8", VA = "0xC293F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xC29474", Offset = "0xC29474", VA = "0xC29474")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xC295DC", Offset = "0xC295DC", VA = "0xC295DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xC29688", Offset = "0xC29688", VA = "0xC29688")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xC290F8", Offset = "0xC290F8", VA = "0xC290F8")]
		private static void InitAPI()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xC298B4", Offset = "0xC298B4", VA = "0xC298B4")]
		private static void InternalInitialize()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xC2A4A8", Offset = "0xC2A4A8", VA = "0xC2A4A8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xC2A734", Offset = "0xC2A734", VA = "0xC2A734")]
		public static void NewBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xC2A8B0", Offset = "0xC2A8B0", VA = "0xC2A8B0")]
		public static void NewBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xC2A9A4", Offset = "0xC2A9A4", VA = "0xC2A9A4")]
		public static void NewBusinessEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xC2AB8C", Offset = "0xC2AB8C", VA = "0xC2AB8C")]
		public static void NewBusinessEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xC2ACA0", Offset = "0xC2ACA0", VA = "0xC2ACA0")]
		public static void NewDesignEvent(string eventName)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xC2AD60", Offset = "0xC2AD60", VA = "0xC2AD60")]
		public static void NewDesignEvent(string eventName, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xC2AE20", Offset = "0xC2AE20", VA = "0xC2AE20")]
		public static void NewDesignEvent(string eventName, float eventValue)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xC2AF60", Offset = "0xC2AF60", VA = "0xC2AF60")]
		public static void NewDesignEvent(string eventName, float eventValue, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xC2B030", Offset = "0xC2B030", VA = "0xC2B030")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xC2B110", Offset = "0xC2B110", VA = "0xC2B110")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xC2B1EC", Offset = "0xC2B1EC", VA = "0xC2B1EC")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xC2B2CC", Offset = "0xC2B2CC", VA = "0xC2B2CC")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xC2B3AC", Offset = "0xC2B3AC", VA = "0xC2B3AC")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xC2B49C", Offset = "0xC2B49C", VA = "0xC2B49C")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xC2B58C", Offset = "0xC2B58C", VA = "0xC2B58C")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, int score)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xC2B6EC", Offset = "0xC2B6EC", VA = "0xC2B6EC")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, int score, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xC2B7C4", Offset = "0xC2B7C4", VA = "0xC2B7C4")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xC2B93C", Offset = "0xC2B93C", VA = "0xC2B93C")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xC2BA28", Offset = "0xC2BA28", VA = "0xC2BA28")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xC2BBB4", Offset = "0xC2BBB4", VA = "0xC2BBB4")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xC2BCA8", Offset = "0xC2BCA8", VA = "0xC2BCA8")]
		public static void NewResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xC2BE38", Offset = "0xC2BE38", VA = "0xC2BE38")]
		public static void NewResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xC2BF38", Offset = "0xC2BF38", VA = "0xC2BF38")]
		public static void NewErrorEvent(GAErrorSeverity severity, string message)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xC2BFFC", Offset = "0xC2BFFC", VA = "0xC2BFFC")]
		public static void NewErrorEvent(GAErrorSeverity severity, string message, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xC2C0CC", Offset = "0xC2C0CC", VA = "0xC2C0CC")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xC2C248", Offset = "0xC2C248", VA = "0xC2C248")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xC2C33C", Offset = "0xC2C33C", VA = "0xC2C33C")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xC2C4B8", Offset = "0xC2C4B8", VA = "0xC2C4B8")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xC2C5AC", Offset = "0xC2C5AC", VA = "0xC2C5AC")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xC2C718", Offset = "0xC2C718", VA = "0xC2C718")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, IDictionary<string, object> customFields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xC2C804", Offset = "0xC2C804", VA = "0xC2C804")]
		public static void SetCustomId(string userId)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xC2A454", Offset = "0xC2A454", VA = "0xC2A454")]
		public static void SetEnabledManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xC2C964", Offset = "0xC2C964", VA = "0xC2C964")]
		public static void SetEnabledEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xC2CA0C", Offset = "0xC2CA0C", VA = "0xC2CA0C")]
		public static void StartSession()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xC2CAEC", Offset = "0xC2CAEC", VA = "0xC2CAEC")]
		public static void EndSession()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xC2CBCC", Offset = "0xC2CBCC", VA = "0xC2CBCC")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xC2CC24", Offset = "0xC2CC24", VA = "0xC2CC24")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xC2CC7C", Offset = "0xC2CC7C", VA = "0xC2CC7C")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xC2CCD4", Offset = "0xC2CCD4", VA = "0xC2CCD4")]
		public static void SetGlobalCustomEventFields(IDictionary<string, object> customFields)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xC2CEA4", Offset = "0xC2CEA4", VA = "0xC2CEA4")]
		public void OnRemoteConfigsUpdated()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xC2CF08", Offset = "0xC2CF08", VA = "0xC2CF08")]
		public static void RemoteConfigsUpdated()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xC2CF6C", Offset = "0xC2CF6C", VA = "0xC2CF6C")]
		public static string GetRemoteConfigsValueAsString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xC2CF74", Offset = "0xC2CF74", VA = "0xC2CF74")]
		public static string GetRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xC2D03C", Offset = "0xC2D03C", VA = "0xC2D03C")]
		public static bool IsRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xC2D0D4", Offset = "0xC2D0D4", VA = "0xC2D0D4")]
		public static string GetRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xC2D16C", Offset = "0xC2D16C", VA = "0xC2D16C")]
		public static string GetABTestingId()
		{
			return null;
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xC2D204", Offset = "0xC2D204", VA = "0xC2D204")]
		public static string GetABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xC2D29C", Offset = "0xC2D29C", VA = "0xC2D29C")]
		public static void StartTimer(string key)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xC2D344", Offset = "0xC2D344", VA = "0xC2D344")]
		public static void PauseTimer(string key)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xC2D3EC", Offset = "0xC2D3EC", VA = "0xC2D3EC")]
		public static void ResumeTimer(string key)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xC2D494", Offset = "0xC2D494", VA = "0xC2D494")]
		public static long StopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xC2D53C", Offset = "0xC2D53C", VA = "0xC2D53C")]
		public static void RequestTrackingAuthorization(IGameAnalyticsATTListener listener)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xC29EA0", Offset = "0xC29EA0", VA = "0xC29EA0")]
		private static string GetUnityVersion()
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xC29D1C", Offset = "0xC29D1C", VA = "0xC29D1C")]
		private static int GetPlatformIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xC2D540", Offset = "0xC2D540", VA = "0xC2D540")]
		public static void SetBuildAllPlatforms(string build)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xC2D5DC", Offset = "0xC2D5DC", VA = "0xC2D5DC")]
		public GameAnalytics()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public interface IGameAnalyticsATTListener
	{
		[Token(Token = "0x6001570")]
		void GameAnalyticsATTListenerNotDetermined();

		[Token(Token = "0x6001571")]
		void GameAnalyticsATTListenerRestricted();

		[Token(Token = "0x6001572")]
		void GameAnalyticsATTListenerDenied();

		[Token(Token = "0x6001573")]
		void GameAnalyticsATTListenerAuthorized();
	}
	[Token(Token = "0x20004CD")]
	public class GameAnalyticsILRD
	{
		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly AndroidJavaClass GA;

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xC2D5E4", Offset = "0xC2D5E4", VA = "0xC2D5E4")]
		private static void subscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xC2D660", Offset = "0xC2D660", VA = "0xC2D660")]
		private static void MopubImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xC2D664", Offset = "0xC2D664", VA = "0xC2D664")]
		private static void subscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xC2D6E0", Offset = "0xC2D6E0", VA = "0xC2D6E0")]
		private static void FyberImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xC2D6E4", Offset = "0xC2D6E4", VA = "0xC2D6E4")]
		private static void subscribeIronSourceImpressions()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xC2D760", Offset = "0xC2D760", VA = "0xC2D760")]
		private static void IronSourceImpressionHandler(string json)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xC2D764", Offset = "0xC2D764", VA = "0xC2D764")]
		private static void subscribeTopOnImpressions()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xC2D7E0", Offset = "0xC2D7E0", VA = "0xC2D7E0")]
		private static void TopOnImpressionHandler(string json)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xC2D7E4", Offset = "0xC2D7E4", VA = "0xC2D7E4")]
		private static void subscribeMaxImpressions()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xC2D860", Offset = "0xC2D860", VA = "0xC2D860")]
		private static void MaxImpressionHandler(string json)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xC2D864", Offset = "0xC2D864", VA = "0xC2D864")]
		private static void subscribeAequusImpressions()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xC2D8E0", Offset = "0xC2D8E0", VA = "0xC2D8E0")]
		private static void AequusImpressionHandler(string sdkVersion, string json)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xC2D8EC", Offset = "0xC2D8EC", VA = "0xC2D8EC")]
		private static void subscribeHyperBidImpressions()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xC2D968", Offset = "0xC2D968", VA = "0xC2D968")]
		private static void HyperBidImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xC2D970", Offset = "0xC2D970", VA = "0xC2D970")]
		public static void SubscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xC2D9BC", Offset = "0xC2D9BC", VA = "0xC2D9BC")]
		public static void SubscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xC2DA08", Offset = "0xC2DA08", VA = "0xC2DA08")]
		public static void SubscribeIronSourceImpressions()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xC2DA54", Offset = "0xC2DA54", VA = "0xC2DA54")]
		public static void SubscribeTopOnImpressions()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xC2DAA0", Offset = "0xC2DAA0", VA = "0xC2DAA0")]
		public static void SubscribeMaxImpressions()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xC2DAEC", Offset = "0xC2DAEC", VA = "0xC2DAEC")]
		public static void SubscribeAequusImpressions()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xC2DB38", Offset = "0xC2DB38", VA = "0xC2DB38")]
		public static void SubscribeHyperBidImpressions()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xC2DB84", Offset = "0xC2DB84", VA = "0xC2DB84")]
		public GameAnalyticsILRD()
		{
		}
	}
}
namespace GameAnalyticsSDK.Wrapper
{
	[Token(Token = "0x20004CE")]
	public class GA_Wrapper
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly AndroidJavaClass GA;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly AndroidJavaClass UNITY_GA;

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xC2DC28", Offset = "0xC2DC28", VA = "0xC2DC28")]
		private static void configureAvailableCustomDimensions01(string list)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xC2E0AC", Offset = "0xC2E0AC", VA = "0xC2E0AC")]
		private static void configureAvailableCustomDimensions02(string list)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xC2E524", Offset = "0xC2E524", VA = "0xC2E524")]
		private static void configureAvailableCustomDimensions03(string list)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xC2E99C", Offset = "0xC2E99C", VA = "0xC2E99C")]
		private static void configureAvailableResourceCurrencies(string list)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xC2EE14", Offset = "0xC2EE14", VA = "0xC2EE14")]
		private static void configureAvailableResourceItemTypes(string list)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xC2F28C", Offset = "0xC2F28C", VA = "0xC2F28C")]
		private static void configureSdkGameEngineVersion(string unitySdkVersion)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xC2F37C", Offset = "0xC2F37C", VA = "0xC2F37C")]
		private static void configureGameEngineVersion(string unityEngineVersion)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xC2F46C", Offset = "0xC2F46C", VA = "0xC2F46C")]
		private static void configureBuild(string build)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xC2F55C", Offset = "0xC2F55C", VA = "0xC2F55C")]
		private static void configureUserId(string userId)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xC2F64C", Offset = "0xC2F64C", VA = "0xC2F64C")]
		private static void configureAutoDetectAppVersion(bool flag)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xC2F770", Offset = "0xC2F770", VA = "0xC2F770")]
		private static void initialize(string gamekey, string gamesecret)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xC2FAF0", Offset = "0xC2FAF0", VA = "0xC2FAF0")]
		private static void setCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xC2FBE0", Offset = "0xC2FBE0", VA = "0xC2FBE0")]
		private static void setCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xC2FCD0", Offset = "0xC2FCD0", VA = "0xC2FCD0")]
		private static void setCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xC2FDC0", Offset = "0xC2FDC0", VA = "0xC2FDC0")]
		private static void setGlobalCustomEventFields(string customFields)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xC2FEB0", Offset = "0xC2FEB0", VA = "0xC2FEB0")]
		private static void addBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xC30168", Offset = "0xC30168", VA = "0xC30168")]
		private static void addBusinessEventWithReceipt(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xC304D0", Offset = "0xC304D0", VA = "0xC304D0")]
		private static void addResourceEvent(int flowType, string currency, float amount, string itemType, string itemId, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xC307B8", Offset = "0xC307B8", VA = "0xC307B8")]
		private static void addProgressionEvent(int progressionStatus, string progression01, string progression02, string progression03, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xC30A38", Offset = "0xC30A38", VA = "0xC30A38")]
		private static void addProgressionEventWithScore(int progressionStatus, string progression01, string progression02, string progression03, int score, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xC30D24", Offset = "0xC30D24", VA = "0xC30D24")]
		private static void addDesignEvent(string eventId, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xC30EC4", Offset = "0xC30EC4", VA = "0xC30EC4")]
		private static void addDesignEventWithValue(string eventId, float value, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xC310D8", Offset = "0xC310D8", VA = "0xC310D8")]
		private static void addErrorEvent(int severity, string message, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xC312E0", Offset = "0xC312E0", VA = "0xC312E0")]
		private static void addAdEventWithDuration(int adAction, int adType, string adSdkName, string adPlacement, long duration, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xC315DC", Offset = "0xC315DC", VA = "0xC315DC")]
		private static void addAdEventWithReason(int adAction, int adType, string adSdkName, string adPlacement, int noAdReason, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xC318C4", Offset = "0xC318C4", VA = "0xC318C4")]
		private static void addAdEvent(int adAction, int adType, string adSdkName, string adPlacement, string fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xC31B58", Offset = "0xC31B58", VA = "0xC31B58")]
		private static void setEnabledInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xC31C7C", Offset = "0xC31C7C", VA = "0xC31C7C")]
		private static void setEnabledVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xC31DA0", Offset = "0xC31DA0", VA = "0xC31DA0")]
		private static void setManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xC31EC4", Offset = "0xC31EC4", VA = "0xC31EC4")]
		private static void setEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xC31FE8", Offset = "0xC31FE8", VA = "0xC31FE8")]
		private static void gameAnalyticsStartSession()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xC320C0", Offset = "0xC320C0", VA = "0xC320C0")]
		private static void gameAnalyticsEndSession()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xC32198", Offset = "0xC32198", VA = "0xC32198")]
		private static string getRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xC322DC", Offset = "0xC322DC", VA = "0xC322DC")]
		private static bool isRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xC323C8", Offset = "0xC323C8", VA = "0xC323C8")]
		private static string getRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xC324B4", Offset = "0xC324B4", VA = "0xC324B4")]
		private static string getABTestingId()
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xC325A0", Offset = "0xC325A0", VA = "0xC325A0")]
		private static string getABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xC3268C", Offset = "0xC3268C", VA = "0xC3268C")]
		private static void startTimer(string key)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xC3277C", Offset = "0xC3277C", VA = "0xC3277C")]
		private static void pauseTimer(string key)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xC3286C", Offset = "0xC3286C", VA = "0xC3286C")]
		private static void resumeTimer(string key)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xC3295C", Offset = "0xC3295C", VA = "0xC3295C")]
		private static long stopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xC32A60", Offset = "0xC32A60", VA = "0xC32A60")]
		public static void SetAvailableCustomDimensions01(string list)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xC32AB4", Offset = "0xC32AB4", VA = "0xC32AB4")]
		public static void SetAvailableCustomDimensions02(string list)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xC32B08", Offset = "0xC32B08", VA = "0xC32B08")]
		public static void SetAvailableCustomDimensions03(string list)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xC32B5C", Offset = "0xC32B5C", VA = "0xC32B5C")]
		public static void SetAvailableResourceCurrencies(string list)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xC32BB0", Offset = "0xC32BB0", VA = "0xC32BB0")]
		public static void SetAvailableResourceItemTypes(string list)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xC29E4C", Offset = "0xC29E4C", VA = "0xC29E4C")]
		public static void SetUnitySdkVersion(string unitySdkVersion)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xC2A038", Offset = "0xC2A038", VA = "0xC2A038")]
		public static void SetUnityEngineVersion(string unityEngineVersion)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xC2A0E0", Offset = "0xC2A0E0", VA = "0xC2A0E0")]
		public static void SetBuild(string build)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xC2C8BC", Offset = "0xC2C8BC", VA = "0xC2C8BC")]
		public static void SetCustomUserId(string userId)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xC2C910", Offset = "0xC2C910", VA = "0xC2C910")]
		public static void SetEnabledManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xC2C9B8", Offset = "0xC2C9B8", VA = "0xC2C9B8")]
		public static void SetEnabledEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xC2A08C", Offset = "0xC2A08C", VA = "0xC2A08C")]
		public static void SetAutoDetectAppVersion(bool flag)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xC2CA58", Offset = "0xC2CA58", VA = "0xC2CA58")]
		public static void StartSession()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xC2CB38", Offset = "0xC2CB38", VA = "0xC2CB38")]
		public static void EndSession()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xC2A6D0", Offset = "0xC2A6D0", VA = "0xC2A6D0")]
		public static void Initialize(string gamekey, string gamesecret)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xC32C58", Offset = "0xC32C58", VA = "0xC32C58")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xC32CAC", Offset = "0xC32CAC", VA = "0xC32CAC")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xC32D00", Offset = "0xC32D00", VA = "0xC32D00")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xC32D54", Offset = "0xC32D54", VA = "0xC32D54")]
		public static void SetGlobalCustomEventFields(IDictionary<string, object> customFields)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xC330DC", Offset = "0xC330DC", VA = "0xC330DC")]
		public static void AddBusinessEventWithReceipt(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xC331AC", Offset = "0xC331AC", VA = "0xC331AC")]
		public static void AddBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xC33250", Offset = "0xC33250", VA = "0xC33250")]
		public static void AddResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xC332FC", Offset = "0xC332FC", VA = "0xC332FC")]
		public static void AddProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xC33398", Offset = "0xC33398", VA = "0xC33398")]
		public static void AddProgressionEventWithScore(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xC3343C", Offset = "0xC3343C", VA = "0xC3343C")]
		public static void AddDesignEvent(string eventID, float eventValue, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xC334C0", Offset = "0xC334C0", VA = "0xC334C0")]
		public static void AddDesignEvent(string eventID, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xC33534", Offset = "0xC33534", VA = "0xC33534")]
		public static void AddErrorEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xC335B8", Offset = "0xC335B8", VA = "0xC335B8")]
		public static void AddAdEventWithDuration(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xC3365C", Offset = "0xC3365C", VA = "0xC3365C")]
		public static void AddAdEventWithReason(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xC33700", Offset = "0xC33700", VA = "0xC33700")]
		public static void AddAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xC3379C", Offset = "0xC3379C", VA = "0xC3379C")]
		public static void SetInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xC337F0", Offset = "0xC337F0", VA = "0xC337F0")]
		public static void SetVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xC2CFD8", Offset = "0xC2CFD8", VA = "0xC2CFD8")]
		public static string GetRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xC2D088", Offset = "0xC2D088", VA = "0xC2D088")]
		public static bool IsRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xC2D120", Offset = "0xC2D120", VA = "0xC2D120")]
		public static string GetRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xC2D1B8", Offset = "0xC2D1B8", VA = "0xC2D1B8")]
		public static string GetABTestingId()
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xC2D250", Offset = "0xC2D250", VA = "0xC2D250")]
		public static string GetABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xC32DAC", Offset = "0xC32DAC", VA = "0xC32DAC")]
		private static string DictionaryToJsonString(IDictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xC2D2F0", Offset = "0xC2D2F0", VA = "0xC2D2F0")]
		public static void StartTimer(string key)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xC2D398", Offset = "0xC2D398", VA = "0xC2D398")]
		public static void PauseTimer(string key)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xC2D440", Offset = "0xC2D440", VA = "0xC2D440")]
		public static void ResumeTimer(string key)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xC2D4E8", Offset = "0xC2D4E8", VA = "0xC2D4E8")]
		public static long StopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xC33848", Offset = "0xC33848", VA = "0xC33848")]
		public GA_Wrapper()
		{
		}
	}
}
namespace GameAnalyticsSDK.Utilities
{
	[Token(Token = "0x20004CF")]
	public class GA_MiniJSON
	{
		[Token(Token = "0x20004D0")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x20004D1")]
			private enum TOKEN
			{
				[Token(Token = "0x400165D")]
				NONE,
				[Token(Token = "0x400165E")]
				CURLY_OPEN,
				[Token(Token = "0x400165F")]
				CURLY_CLOSE,
				[Token(Token = "0x4001660")]
				SQUARED_OPEN,
				[Token(Token = "0x4001661")]
				SQUARED_CLOSE,
				[Token(Token = "0x4001662")]
				COLON,
				[Token(Token = "0x4001663")]
				COMMA,
				[Token(Token = "0x4001664")]
				STRING,
				[Token(Token = "0x4001665")]
				NUMBER,
				[Token(Token = "0x4001666")]
				TRUE,
				[Token(Token = "0x4001667")]
				FALSE,
				[Token(Token = "0x4001668")]
				NULL
			}

			[Token(Token = "0x400165A")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x17000197")]
			private char PeekChar
			{
				[Token(Token = "0x60015EE")]
				[Address(RVA = "0xC346A4", Offset = "0xC346A4", VA = "0xC346A4")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000198")]
			private char NextChar
			{
				[Token(Token = "0x60015EF")]
				[Address(RVA = "0xC344DC", Offset = "0xC344DC", VA = "0xC344DC")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000199")]
			private string NextWord
			{
				[Token(Token = "0x60015F0")]
				[Address(RVA = "0xC34554", Offset = "0xC34554", VA = "0xC34554")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private TOKEN NextToken
			{
				[Token(Token = "0x60015F1")]
				[Address(RVA = "0xC33DD8", Offset = "0xC33DD8", VA = "0xC33DD8")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xC33B48", Offset = "0xC33B48", VA = "0xC33B48")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xC33BE4", Offset = "0xC33BE4", VA = "0xC33BE4")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x60015E5")]
			[Address(RVA = "0xC33930", Offset = "0xC33930", VA = "0xC33930")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xC33C84", Offset = "0xC33C84", VA = "0xC33C84", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xC33CB4", Offset = "0xC33CB4", VA = "0xC33CB4")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xC341FC", Offset = "0xC341FC", VA = "0xC341FC")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xC33C68", Offset = "0xC33C68", VA = "0xC33C68")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xC34324", Offset = "0xC34324", VA = "0xC34324")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xC33F9C", Offset = "0xC33F9C", VA = "0xC33F9C")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xC3440C", Offset = "0xC3440C", VA = "0xC3440C")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xC34600", Offset = "0xC34600", VA = "0xC34600")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x20004D2")]
		private sealed class Serializer
		{
			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xC3471C", Offset = "0xC3471C", VA = "0xC3471C")]
			private Serializer()
			{
			}

			[Token(Token = "0x60015F3")]
			[Address(RVA = "0xC33ACC", Offset = "0xC33ACC", VA = "0xC33ACC")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x60015F4")]
			[Address(RVA = "0xC34790", Offset = "0xC34790", VA = "0xC34790")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x60015F5")]
			[Address(RVA = "0xC34FAC", Offset = "0xC34FAC", VA = "0xC34FAC")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x60015F6")]
			[Address(RVA = "0xC34C4C", Offset = "0xC34C4C", VA = "0xC34C4C")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xC34960", Offset = "0xC34960", VA = "0xC34960")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x60015F8")]
			[Address(RVA = "0xC35438", Offset = "0xC35438", VA = "0xC35438")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xC2E0A0", Offset = "0xC2E0A0", VA = "0xC2E0A0")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xC33844", Offset = "0xC33844", VA = "0xC33844")]
		public static string Serialize(object obj)
		{
			return null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xC33B40", Offset = "0xC33B40", VA = "0xC33B40")]
		public GA_MiniJSON()
		{
		}
	}
}
namespace GameAnalyticsSDK.State
{
	[Token(Token = "0x20004D3")]
	internal static class GAState
	{
		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Settings _settings;

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xC2968C", Offset = "0xC2968C", VA = "0xC2968C")]
		public static void Init()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xC35708", Offset = "0xC35708", VA = "0xC35708")]
		private static bool ListContainsString(List<string> _list, string _string)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xC32C04", Offset = "0xC32C04", VA = "0xC32C04")]
		public static bool IsManualSessionHandlingEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xC35760", Offset = "0xC35760", VA = "0xC35760")]
		public static bool HasAvailableResourceCurrency(string _currency)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xC357BC", Offset = "0xC357BC", VA = "0xC357BC")]
		public static bool HasAvailableResourceItemType(string _itemType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xC35818", Offset = "0xC35818", VA = "0xC35818")]
		public static bool HasAvailableCustomDimensions01(string _dimension01)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xC35874", Offset = "0xC35874", VA = "0xC35874")]
		public static bool HasAvailableCustomDimensions02(string _dimension02)
		{
			return default(bool);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xC358D0", Offset = "0xC358D0", VA = "0xC358D0")]
		public static bool HasAvailableCustomDimensions03(string _dimension03)
		{
			return default(bool);
		}
	}
}
namespace GameAnalyticsSDK.Setup
{
	[Token(Token = "0x20004D4")]
	public class Settings : ScriptableObject
	{
		[Token(Token = "0x20004D5")]
		public enum HelpTypes
		{
			[Token(Token = "0x40016C5")]
			None,
			[Token(Token = "0x40016C6")]
			IncludeSystemSpecsHelp,
			[Token(Token = "0x40016C7")]
			ProvideCustomUserID
		}

		[Token(Token = "0x20004D6")]
		public enum MessageTypes
		{
			[Token(Token = "0x40016C9")]
			None,
			[Token(Token = "0x40016CA")]
			Error,
			[Token(Token = "0x40016CB")]
			Info,
			[Token(Token = "0x40016CC")]
			Warning
		}

		[Token(Token = "0x20004D7")]
		public struct HelpInfo
		{
			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Message;

			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MessageTypes MsgType;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public HelpTypes HelpType;
		}

		[Token(Token = "0x20004D8")]
		public enum InspectorStates
		{
			[Token(Token = "0x40016D1")]
			Account,
			[Token(Token = "0x40016D2")]
			Basic,
			[Token(Token = "0x40016D3")]
			Debugging,
			[Token(Token = "0x40016D4")]
			Pref
		}

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static string VERSION;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public static bool CheckingForUpdates;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TotalMessagesSubmitted;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TotalMessagesFailed;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int DesignMessagesSubmitted;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int DesignMessagesFailed;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int QualityMessagesSubmitted;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int QualityMessagesFailed;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ErrorMessagesSubmitted;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int ErrorMessagesFailed;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int BusinessMessagesSubmitted;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int BusinessMessagesFailed;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int UserMessagesSubmitted;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int UserMessagesFailed;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string CustomArea;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<string> gameKey;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<string> secretKey;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public List<string> Build;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<string> SelectedPlatformOrganization;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<string> SelectedPlatformStudio;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public List<string> SelectedPlatformGame;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public List<int> SelectedPlatformGameID;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public List<int> SelectedOrganization;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public List<int> SelectedStudio;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public List<int> SelectedGame;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string NewVersion;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string Changes;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool SignUpOpen;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string StudioName;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string GameName;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string OrganizationName;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string OrganizationIdentifier;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string EmailGA;

		[NonSerialized]
		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string PasswordGA;

		[NonSerialized]
		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string TokenGA;

		[NonSerialized]
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string ExpireTime;

		[NonSerialized]
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string LoginStatus;

		[NonSerialized]
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool JustSignedUp;

		[NonSerialized]
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool HideSignupWarning;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public bool IntroScreen;

		[NonSerialized]
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<Organization> Organizations;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool InfoLogEditor;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool InfoLogBuild;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		public bool VerboseLogBuild;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		public bool UseManualSessionHandling;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool SendExampleGameDataToMyGame;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		public bool InternetConnectivity;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<string> CustomDimensions01;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<string> CustomDimensions02;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<string> CustomDimensions03;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<string> ResourceItemTypes;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<string> ResourceCurrencies;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public RuntimePlatform LastCreatedGamePlatform;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<RuntimePlatform> Platforms;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public InspectorStates CurrentInspectorState;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<HelpTypes> ClosedHints;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool DisplayHints;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Vector2 DisplayHintsScrollState;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Texture2D Logo;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Texture2D UpdateIcon;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Texture2D InfoIcon;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Texture2D DeleteIcon;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Texture2D GameIcon;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D HomeIcon;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D InstrumentIcon;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D QuestionIcon;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Texture2D UserIcon;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Texture2D AmazonIcon;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Texture2D GooglePlayIcon;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Texture2D iosIcon;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Texture2D macIcon;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Texture2D windowsPhoneIcon;

		[NonSerialized]
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GUIStyle SignupButton;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool UsePlayerSettingsBuildNumber;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		public bool SubmitErrors;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
		public bool NativeErrorReporting;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public int MaxErrorCount;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool SubmitFpsAverage;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public bool SubmitFpsCritical;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
		public bool IncludeGooglePlay;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public int FpsCriticalThreshold;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int FpsCirticalSubmitInterval;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public List<bool> PlatformFoldOut;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public bool CustomDimensions01FoldOut;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		public bool CustomDimensions02FoldOut;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
		public bool CustomDimensions03FoldOut;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
		public bool ResourceItemTypesFoldOut;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public bool ResourceCurrenciesFoldOut;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly RuntimePlatform[] AvailablePlatforms;

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xC3592C", Offset = "0xC3592C", VA = "0xC3592C")]
		public void SetCustomUserID(string customID)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xC35980", Offset = "0xC35980", VA = "0xC35980")]
		public void RemovePlatformAtIndex(int index)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xC35B20", Offset = "0xC35B20", VA = "0xC35B20")]
		public void AddPlatform(RuntimePlatform platform)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xC36064", Offset = "0xC36064", VA = "0xC36064")]
		public string[] GetAvailablePlatforms()
		{
			return null;
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xC36368", Offset = "0xC36368", VA = "0xC36368")]
		public bool IsGameKeyValid(int index, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xC3642C", Offset = "0xC3642C", VA = "0xC3642C")]
		public bool IsSecretKeyValid(int index, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xC364F0", Offset = "0xC364F0", VA = "0xC364F0")]
		public static void UpdateKeys(int index, string gameKey, string secretKey)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xC36580", Offset = "0xC36580", VA = "0xC36580")]
		public void UpdateGameKey(int index, string value)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xC36684", Offset = "0xC36684", VA = "0xC36684")]
		public void UpdateSecretKey(int index, string value)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xC2A620", Offset = "0xC2A620", VA = "0xC2A620")]
		public string GetGameKey(int index)
		{
			return null;
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xC2A678", Offset = "0xC2A678", VA = "0xC2A678")]
		public string GetSecretKey(int index)
		{
			return null;
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xC36788", Offset = "0xC36788", VA = "0xC36788")]
		public void SetCustomArea(string customArea)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xC3678C", Offset = "0xC3678C", VA = "0xC3678C")]
		public void SetKeys(string gamekey, string secretkey)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xC36790", Offset = "0xC36790", VA = "0xC36790")]
		public Settings()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class Organization
	{
		[Token(Token = "0x1700019B")]
		public string Name
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0xC36D88", Offset = "0xC36D88", VA = "0xC36D88")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001611")]
			[Address(RVA = "0xC36D90", Offset = "0xC36D90", VA = "0xC36D90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public string ID
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xC36D98", Offset = "0xC36D98", VA = "0xC36D98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001613")]
			[Address(RVA = "0xC36DA0", Offset = "0xC36DA0", VA = "0xC36DA0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public List<Studio> Studios
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xC36DA8", Offset = "0xC36DA8", VA = "0xC36DA8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xC36DB0", Offset = "0xC36DB0", VA = "0xC36DB0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xC36DB8", Offset = "0xC36DB8", VA = "0xC36DB8")]
		public Organization(string name, string id)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xC36E70", Offset = "0xC36E70", VA = "0xC36E70")]
		public static string[] GetOrganizationNames(List<Organization> organizations, bool addFirstEmpty = true)
		{
			return null;
		}
	}
	[Token(Token = "0x20004DA")]
	public class Studio
	{
		[Token(Token = "0x1700019E")]
		public string Name
		{
			[Token(Token = "0x6001618")]
			[Address(RVA = "0xC37150", Offset = "0xC37150", VA = "0xC37150")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001619")]
			[Address(RVA = "0xC37158", Offset = "0xC37158", VA = "0xC37158")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public string ID
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xC37160", Offset = "0xC37160", VA = "0xC37160")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600161B")]
			[Address(RVA = "0xC37168", Offset = "0xC37168", VA = "0xC37168")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public string OrganizationID
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0xC37170", Offset = "0xC37170", VA = "0xC37170")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600161D")]
			[Address(RVA = "0xC37178", Offset = "0xC37178", VA = "0xC37178")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public List<Game> Games
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xC37180", Offset = "0xC37180", VA = "0xC37180")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600161F")]
			[Address(RVA = "0xC37188", Offset = "0xC37188", VA = "0xC37188")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xC37190", Offset = "0xC37190", VA = "0xC37190")]
		public Studio(string name, string id, string orgId, List<Game> games)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xC37204", Offset = "0xC37204", VA = "0xC37204")]
		public static string[] GetStudioNames(List<Studio> studios, bool addFirstEmpty = true)
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xC374DC", Offset = "0xC374DC", VA = "0xC374DC")]
		public static string[] GetGameNames(int index, List<Studio> studios)
		{
			return null;
		}
	}
	[Token(Token = "0x20004DB")]
	public class Game
	{
		[Token(Token = "0x170001A2")]
		public string Name
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0xC3779C", Offset = "0xC3779C", VA = "0xC3779C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xC377A4", Offset = "0xC377A4", VA = "0xC377A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public int ID
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xC377AC", Offset = "0xC377AC", VA = "0xC377AC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xC377B4", Offset = "0xC377B4", VA = "0xC377B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public string GameKey
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xC377BC", Offset = "0xC377BC", VA = "0xC377BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xC377C4", Offset = "0xC377C4", VA = "0xC377C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public string SecretKey
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xC377CC", Offset = "0xC377CC", VA = "0xC377CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xC377D4", Offset = "0xC377D4", VA = "0xC377D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xC377DC", Offset = "0xC377DC", VA = "0xC377DC")]
		public Game(string name, int id, string gameKey, string secretKey)
		{
		}
	}
}
namespace GameAnalyticsSDK.Events
{
	[Token(Token = "0x20004DC")]
	public static class GA_Ads
	{
		[Token(Token = "0x600162C")]
		[Address(RVA = "0xC2C1AC", Offset = "0xC2C1AC", VA = "0xC2C1AC")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xC2C41C", Offset = "0xC2C41C", VA = "0xC2C41C")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason, IDictionary<string, object> fields, bool mergeFields = false)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xC2C684", Offset = "0xC2C684", VA = "0xC2C684")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, IDictionary<string, object> fields, bool mergeFields = false)
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public static class GA_Business
	{
		[Token(Token = "0x600162F")]
		[Address(RVA = "0xC2AAB0", Offset = "0xC2AAB0", VA = "0xC2AAB0")]
		public static void NewEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xC2A814", Offset = "0xC2A814", VA = "0xC2A814")]
		public static void NewEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> fields, bool mergeFields)
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public static class GA_Debug
	{
		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MaxErrorCount;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _errorCount;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _showLogOnGUI;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<string> Messages;

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xC37844", Offset = "0xC37844", VA = "0xC37844")]
		public static void HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xC37BA0", Offset = "0xC37BA0", VA = "0xC37BA0")]
		private static void SubmitError(string message, LogType type)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xC37BD0", Offset = "0xC37BD0", VA = "0xC37BD0")]
		public static void EnabledLog()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public static class GA_Design
	{
		[Token(Token = "0x6001635")]
		[Address(RVA = "0xC2AEDC", Offset = "0xC2AEDC", VA = "0xC2AEDC")]
		public static void NewEvent(string eventName, float eventValue, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xC2AD4C", Offset = "0xC2AD4C", VA = "0xC2AD4C")]
		public static void NewEvent(string eventName, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xC37C80", Offset = "0xC37C80", VA = "0xC37C80")]
		private static void CreateNewEvent(string eventName, float? eventValue, IDictionary<string, object> fields, bool mergeFields)
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public static class GA_Error
	{
		[Token(Token = "0x6001638")]
		[Address(RVA = "0xC2BFF4", Offset = "0xC2BFF4", VA = "0xC2BFF4")]
		public static void NewEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xC37D6C", Offset = "0xC37D6C", VA = "0xC37D6C")]
		private static void CreateNewEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields, bool mergeFields = false)
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public static class GA_Progression
	{
		[Token(Token = "0x600163A")]
		[Address(RVA = "0xC2B0F8", Offset = "0xC2B0F8", VA = "0xC2B0F8")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xC2B2B8", Offset = "0xC2B2B8", VA = "0xC2B2B8")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xC2B488", Offset = "0xC2B488", VA = "0xC2B488")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xC2B650", Offset = "0xC2B650", VA = "0xC2B650")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, int score, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xC2B89C", Offset = "0xC2B89C", VA = "0xC2B89C")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xC2BB08", Offset = "0xC2BB08", VA = "0xC2BB08")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> fields, bool mergeFields)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xC37DE8", Offset = "0xC37DE8", VA = "0xC37DE8")]
		private static void CreateEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int? score, IDictionary<string, object> fields, bool mergeFields)
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public static class GA_Resource
	{
		[Token(Token = "0x6001641")]
		[Address(RVA = "0xC2BD94", Offset = "0xC2BD94", VA = "0xC2BD94")]
		public static void NewEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> fields, bool mergeFields)
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public static class GA_Setup
	{
		[Token(Token = "0x6001642")]
		[Address(RVA = "0xC2A134", Offset = "0xC2A134", VA = "0xC2A134")]
		public static void SetAvailableCustomDimensions01(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xC2A1D4", Offset = "0xC2A1D4", VA = "0xC2A1D4")]
		public static void SetAvailableCustomDimensions02(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xC2A274", Offset = "0xC2A274", VA = "0xC2A274")]
		public static void SetAvailableCustomDimensions03(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xC2A3B4", Offset = "0xC2A3B4", VA = "0xC2A3B4")]
		public static void SetAvailableResourceCurrencies(List<string> resourceCurrencies)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xC2A314", Offset = "0xC2A314", VA = "0xC2A314")]
		public static void SetAvailableResourceItemTypes(List<string> resourceItemTypes)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xC29C74", Offset = "0xC29C74", VA = "0xC29C74")]
		public static void SetInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xC29CC8", Offset = "0xC29CC8", VA = "0xC29CC8")]
		public static void SetVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xC2CBD0", Offset = "0xC2CBD0", VA = "0xC2CBD0")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xC2CC28", Offset = "0xC2CC28", VA = "0xC2CC28")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xC2CC80", Offset = "0xC2CC80", VA = "0xC2CC80")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xC2CCD8", Offset = "0xC2CCD8", VA = "0xC2CCD8")]
		public static void SetGlobalCustomEventFields(IDictionary<string, object> customFields)
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class GA_SpecialEvents : MonoBehaviour
	{
		[Token(Token = "0x20004E5")]
		[CompilerGenerated]
		private sealed class <SubmitFPSRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001658")]
				[Address(RVA = "0xC388F8", Offset = "0xC388F8", VA = "0xC388F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600165A")]
				[Address(RVA = "0xC38940", Offset = "0xC38940", VA = "0xC38940", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001655")]
			[Address(RVA = "0xC382D0", Offset = "0xC382D0", VA = "0xC382D0")]
			[DebuggerHidden]
			public <SubmitFPSRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001656")]
			[Address(RVA = "0xC38790", Offset = "0xC38790", VA = "0xC38790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001657")]
			[Address(RVA = "0xC38794", Offset = "0xC38794", VA = "0xC38794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001659")]
			[Address(RVA = "0xC38900", Offset = "0xC38900", VA = "0xC38900", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E6")]
		[CompilerGenerated]
		private sealed class <CheckCriticalFPSRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GA_SpecialEvents <>4__this;

			[Token(Token = "0x170001A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600165E")]
				[Address(RVA = "0xC38A68", Offset = "0xC38A68", VA = "0xC38A68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001660")]
				[Address(RVA = "0xC38AB0", Offset = "0xC38AB0", VA = "0xC38AB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600165B")]
			[Address(RVA = "0xC382F8", Offset = "0xC382F8", VA = "0xC382F8")]
			[DebuggerHidden]
			public <CheckCriticalFPSRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600165C")]
			[Address(RVA = "0xC38948", Offset = "0xC38948", VA = "0xC38948", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600165D")]
			[Address(RVA = "0xC3894C", Offset = "0xC3894C", VA = "0xC3894C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600165F")]
			[Address(RVA = "0xC38A70", Offset = "0xC38A70", VA = "0xC38A70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _frameCountAvg;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float _lastUpdateAvg;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _frameCountCrit;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _lastUpdateCrit;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _criticalFpsCount;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _fpsWaitTimeMultiplier;

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xC381C4", Offset = "0xC381C4", VA = "0xC381C4")]
		public void Start()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xC381FC", Offset = "0xC381FC", VA = "0xC381FC")]
		[IteratorStateMachine(typeof(<SubmitFPSRoutine>d__7))]
		private IEnumerator SubmitFPSRoutine()
		{
			return null;
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xC3825C", Offset = "0xC3825C", VA = "0xC3825C")]
		[IteratorStateMachine(typeof(<CheckCriticalFPSRoutine>d__8))]
		private IEnumerator CheckCriticalFPSRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xC38320", Offset = "0xC38320", VA = "0xC38320")]
		public void Update()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xC38428", Offset = "0xC38428", VA = "0xC38428")]
		public static void SubmitFPS()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xC38620", Offset = "0xC38620", VA = "0xC38620")]
		public void CheckCriticalFPS()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xC38734", Offset = "0xC38734", VA = "0xC38734")]
		public GA_SpecialEvents()
		{
		}
	}
}
namespace GameAnalyticsSDK.Validators
{
	[Token(Token = "0x20004E7")]
	internal static class GAValidator
	{
		[Token(Token = "0x6001661")]
		[Address(RVA = "0xC38AB8", Offset = "0xC38AB8", VA = "0xC38AB8")]
		public static bool StringMatch(string s, string pattern)
		{
			return default(bool);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xC38B30", Offset = "0xC38B30", VA = "0xC38B30")]
		public static bool ValidateBusinessEvent(string currency, int amount, string cartType, string itemType, string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xC38E18", Offset = "0xC38E18", VA = "0xC38E18")]
		public static bool ValidateResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xC39084", Offset = "0xC39084", VA = "0xC39084")]
		public static bool ValidateProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03)
		{
			return default(bool);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xC39324", Offset = "0xC39324", VA = "0xC39324")]
		public static bool ValidateDesignEvent(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xC394B8", Offset = "0xC394B8", VA = "0xC394B8")]
		public static bool ValidateErrorEvent(GAErrorSeverity severity, string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xC395CC", Offset = "0xC395CC", VA = "0xC395CC")]
		public static bool ValidateAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xC39754", Offset = "0xC39754", VA = "0xC39754")]
		public static bool ValidateSdkErrorEvent(string gameKey, string gameSecret, GAErrorSeverity type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xC397F4", Offset = "0xC397F4", VA = "0xC397F4")]
		public static bool ValidateKeys(string gameKey, string gameSecret)
		{
			return default(bool);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xC38CB8", Offset = "0xC38CB8", VA = "0xC38CB8")]
		public static bool ValidateCurrency(string currency)
		{
			return default(bool);
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xC38D78", Offset = "0xC38D78", VA = "0xC38D78")]
		public static bool ValidateEventPartLength(string eventPart, bool allowNull)
		{
			return default(bool);
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xC38DD0", Offset = "0xC38DD0", VA = "0xC38DD0")]
		public static bool ValidateEventPartCharacters(string eventPart)
		{
			return default(bool);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xC393E8", Offset = "0xC393E8", VA = "0xC393E8")]
		public static bool ValidateEventIdLength(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xC39450", Offset = "0xC39450", VA = "0xC39450")]
		public static bool ValidateEventIdCharacters(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xC39880", Offset = "0xC39880", VA = "0xC39880")]
		public static bool ValidateBuild(string build)
		{
			return default(bool);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xC39888", Offset = "0xC39888", VA = "0xC39888")]
		public static bool ValidateUserId(string uId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xC38D20", Offset = "0xC38D20", VA = "0xC38D20")]
		public static bool ValidateShortString(string shortString, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xC396FC", Offset = "0xC396FC", VA = "0xC396FC")]
		public static bool ValidateString(string s, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xC39574", Offset = "0xC39574", VA = "0xC39574")]
		public static bool ValidateLongString(string longString, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xC39914", Offset = "0xC39914", VA = "0xC39914")]
		public static bool ValidateConnectionType(string connectionType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xC37F08", Offset = "0xC37F08", VA = "0xC37F08")]
		public static bool ValidateCustomDimensions(params string[] customDimensions)
		{
			return default(bool);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xC37F5C", Offset = "0xC37F5C", VA = "0xC37F5C")]
		public static bool ValidateResourceCurrencies(params string[] resourceCurrencies)
		{
			return default(bool);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xC3809C", Offset = "0xC3809C", VA = "0xC3809C")]
		public static bool ValidateResourceItemTypes(params string[] resourceItemTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xC39E80", Offset = "0xC39E80", VA = "0xC39E80")]
		public static bool ValidateDimension01(string dimension01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xC39F5C", Offset = "0xC39F5C", VA = "0xC39F5C")]
		public static bool ValidateDimension02(string dimension02)
		{
			return default(bool);
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xC3A038", Offset = "0xC3A038", VA = "0xC3A038")]
		public static bool ValidateDimension03(string dimension03)
		{
			return default(bool);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xC3995C", Offset = "0xC3995C", VA = "0xC3995C")]
		public static bool ValidateArrayOfStrings(long maxCount, long maxStringLength, bool allowNoValues, string logTag, params string[] arrayOfStrings)
		{
			return default(bool);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xC3A114", Offset = "0xC3A114", VA = "0xC3A114")]
		public static bool ValidateClientTs(long clientTs)
		{
			return default(bool);
		}
	}
}
namespace Tutorial
{
	[Token(Token = "0x20004E8")]
	public class AnimationBehavior : StateMachineBehaviour
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isEnd;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action onEndAnimation;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float time;

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xC3A138", Offset = "0xC3A138", VA = "0xC3A138", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xC3A144", Offset = "0xC3A144", VA = "0xC3A144", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xC3A148", Offset = "0xC3A148", VA = "0xC3A148", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xC3A1BC", Offset = "0xC3A1BC", VA = "0xC3A1BC", Slot = "7")]
		public override void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xC3A1C0", Offset = "0xC3A1C0", VA = "0xC3A1C0", Slot = "8")]
		public override void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xC3A1C4", Offset = "0xC3A1C4", VA = "0xC3A1C4")]
		public AnimationBehavior()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class ArrowDirection : MonoBehaviour
	{
		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArrowDirectionEnum direction;

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xC3A1CC", Offset = "0xC3A1CC", VA = "0xC3A1CC")]
		public ArrowDirection()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public static class ArrowDirectionMethods
	{
		[Token(Token = "0x6001684")]
		[Address(RVA = "0xC3A1D4", Offset = "0xC3A1D4", VA = "0xC3A1D4")]
		public static Vector3 GetVector(ArrowDirectionEnum arrowDirection)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20004EB")]
	public enum ArrowDirectionEnum
	{
		[Token(Token = "0x40016F4")]
		Forward,
		[Token(Token = "0x40016F5")]
		Up,
		[Token(Token = "0x40016F6")]
		Down,
		[Token(Token = "0x40016F7")]
		RightUp,
		[Token(Token = "0x40016F8")]
		LeftUp,
		[Token(Token = "0x40016F9")]
		RightDown,
		[Token(Token = "0x40016FA")]
		LeftDown,
		[Token(Token = "0x40016FB")]
		Right,
		[Token(Token = "0x40016FC")]
		Left
	}
	[Token(Token = "0x20004EC")]
	public class BuildingShow : MonoBehaviour
	{
		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingDoor leftDoor;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingDoor rightDoor;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeShow;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve curve;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float distance;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 startPos;

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xC3A208", Offset = "0xC3A208", VA = "0xC3A208")]
		private void Start()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xC3A268", Offset = "0xC3A268", VA = "0xC3A268")]
		public void OpenDoor()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xC3A298", Offset = "0xC3A298", VA = "0xC3A298")]
		private void Update()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xC3A380", Offset = "0xC3A380", VA = "0xC3A380")]
		public BuildingShow()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class FirstPart : TutorialPart
	{
		[Token(Token = "0x20004EE")]
		[CompilerGenerated]
		private sealed class <CheckFootprint>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirstPart <>4__this;

			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600169A")]
				[Address(RVA = "0xC3B550", Offset = "0xC3B550", VA = "0xC3B550", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600169C")]
				[Address(RVA = "0xC3B598", Offset = "0xC3B598", VA = "0xC3B598", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001697")]
			[Address(RVA = "0xC3ADF4", Offset = "0xC3ADF4", VA = "0xC3ADF4")]
			[DebuggerHidden]
			public <CheckFootprint>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001698")]
			[Address(RVA = "0xC3B1F0", Offset = "0xC3B1F0", VA = "0xC3B1F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001699")]
			[Address(RVA = "0xC3B1F4", Offset = "0xC3B1F4", VA = "0xC3B1F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600169B")]
			[Address(RVA = "0xC3B558", Offset = "0xC3B558", VA = "0xC3B558", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float lookAngle;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ParticleSystemController forceCircle;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject footprint;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MeshRenderer footMesh;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform rootGhostBlade;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject rightBlade;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject leftBlade;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject RLBlade;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject LRBlade;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 startRootGhostBlade;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int completeTask;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int completedCount;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int startBeat;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool isCombo;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool isFailCombo;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool isLives;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool startHeal;

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xC3A390", Offset = "0xC3A390", VA = "0xC3A390")]
		private void Start()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xC3A410", Offset = "0xC3A410", VA = "0xC3A410", Slot = "15")]
		public override void StartTutorial()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xC3A418", Offset = "0xC3A418", VA = "0xC3A418")]
		private void DamageToPlayer()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xC3A49C", Offset = "0xC3A49C", VA = "0xC3A49C", Slot = "4")]
		public override void SpawnNewObject()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xC3AA68", Offset = "0xC3AA68", VA = "0xC3AA68", Slot = "8")]
		public override void SpawnObstacle(Obstacle obstacle)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xC3AB50", Offset = "0xC3AB50", VA = "0xC3AB50")]
		private void ActivateGhost()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xC3ABE0", Offset = "0xC3ABE0", VA = "0xC3ABE0", Slot = "13")]
		public override void OnCompletedTask()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xC3ADC4", Offset = "0xC3ADC4", VA = "0xC3ADC4", Slot = "14")]
		public override void CompleteTask()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xC3A9F4", Offset = "0xC3A9F4", VA = "0xC3A9F4")]
		[IteratorStateMachine(typeof(<CheckFootprint>d__25))]
		private IEnumerator CheckFootprint()
		{
			return null;
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xC3AE1C", Offset = "0xC3AE1C", VA = "0xC3AE1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xC3AF40", Offset = "0xC3AF40", VA = "0xC3AF40", Slot = "9")]
		public override void RepeatStage()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xC3B01C", Offset = "0xC3B01C", VA = "0xC3B01C", Slot = "16")]
		public override void EndTutotial()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xC3B134", Offset = "0xC3B134", VA = "0xC3B134", Slot = "17")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xC3B1E8", Offset = "0xC3B1E8", VA = "0xC3B1E8")]
		public FirstPart()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class SecondPart : TutorialPart
	{
		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float moveDistance;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform playerTrans;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool firstRun;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool firstRunCompleted;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Animator[] animators;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Grenade grenade;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Collider runCollider;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private TutorialHandAnim tutorialHandAnim;

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xC3B5A0", Offset = "0xC3B5A0", VA = "0xC3B5A0", Slot = "15")]
		public override void StartTutorial()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xC3B614", Offset = "0xC3B614", VA = "0xC3B614", Slot = "4")]
		public override void SpawnNewObject()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xC3B720", Offset = "0xC3B720", VA = "0xC3B720", Slot = "8")]
		public override void SpawnObstacle(Obstacle obstacle)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xC3B8C0", Offset = "0xC3B8C0", VA = "0xC3B8C0")]
		public void StartRun()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xC3BA64", Offset = "0xC3BA64", VA = "0xC3BA64")]
		public void WaitRun()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xC3BC94", Offset = "0xC3BC94", VA = "0xC3BC94")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xC3BF30", Offset = "0xC3BF30", VA = "0xC3BF30", Slot = "9")]
		public override void RepeatStage()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xC3BF48", Offset = "0xC3BF48", VA = "0xC3BF48", Slot = "12")]
		public override void CompleteObstacle()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xC3C16C", Offset = "0xC3C16C", VA = "0xC3C16C")]
		public SecondPart()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class ThirdPart : TutorialPart
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject building;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BuildingShow build;

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xC3C174", Offset = "0xC3C174", VA = "0xC3C174", Slot = "15")]
		public override void StartTutorial()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xC3C284", Offset = "0xC3C284", VA = "0xC3C284")]
		public void StartTutor()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xC3C548", Offset = "0xC3C548", VA = "0xC3C548", Slot = "7")]
		public override void SpawnEnemy(Enemy enemy)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xC3C5A8", Offset = "0xC3C5A8", VA = "0xC3C5A8", Slot = "16")]
		public override void EndTutotial()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xC3C6C4", Offset = "0xC3C6C4", VA = "0xC3C6C4", Slot = "17")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xC3C7AC", Offset = "0xC3C7AC", VA = "0xC3C7AC")]
		public ThirdPart()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class TutorialAnimationEvents : MonoBehaviour
	{
		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onEndAnimation;

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xC3C7B4", Offset = "0xC3C7B4", VA = "0xC3C7B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xC3C8B0", Offset = "0xC3C8B0", VA = "0xC3C8B0")]
		public void EndAnimationActivate()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xC3C8C4", Offset = "0xC3C8C4", VA = "0xC3C8C4")]
		public TutorialAnimationEvents()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class TutorialButton : MenuButton
	{
		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xC3C8CC", Offset = "0xC3C8CC", VA = "0xC3C8CC", Slot = "5")]
		public override void Push(bool _technical = false)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xC3C944", Offset = "0xC3C944", VA = "0xC3C944")]
		public TutorialButton()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class TutorialController : MonoBehaviour
	{
		[Token(Token = "0x20004F4")]
		[CompilerGenerated]
		private sealed class <StopMusic>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialController <>4__this;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016CA")]
				[Address(RVA = "0xC3EE98", Offset = "0xC3EE98", VA = "0xC3EE98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016CC")]
				[Address(RVA = "0xC3EEE0", Offset = "0xC3EEE0", VA = "0xC3EEE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xC3ED9C", Offset = "0xC3ED9C", VA = "0xC3ED9C")]
			[DebuggerHidden]
			public <StopMusic>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xC3EDC4", Offset = "0xC3EDC4", VA = "0xC3EDC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xC3EDC8", Offset = "0xC3EDC8", VA = "0xC3EDC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xC3EEA0", Offset = "0xC3EEA0", VA = "0xC3EEA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialState startState;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delayTutorGame;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TutorialState currentState;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public TutorialBeatMaker currentBeatMaker;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int n;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<TutorialState> OnChangeState;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<bool> OnCompletedTask;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action OnFailTask;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnCompletedStage;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnRestartStage;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TutorialController instance;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSource source;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isStarted;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool isTutor;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool isTutorGame;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TutorialState[] tutorWay;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public StateBeatMaker[] stateBeatMakers;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VRButton restartButtonTutor;

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xC3C94C", Offset = "0xC3C94C", VA = "0xC3C94C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xC3C9B0", Offset = "0xC3C9B0", VA = "0xC3C9B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xC3CDA4", Offset = "0xC3CDA4", VA = "0xC3CDA4")]
		public void CheckNewTutorial()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xC3CCF8", Offset = "0xC3CCF8", VA = "0xC3CCF8")]
		public void StartNewTutorial(bool state, HandType handType)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xC3CE6C", Offset = "0xC3CE6C", VA = "0xC3CE6C")]
		public void StartTutorial()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xC3CFAC", Offset = "0xC3CFAC", VA = "0xC3CFAC")]
		public void CompleteTutorial()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xC3D138", Offset = "0xC3D138", VA = "0xC3D138")]
		public void CheckCurrentTutorialGame()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xC3D298", Offset = "0xC3D298", VA = "0xC3D298")]
		public void StartTutorialGame(bool state, HandType handType)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xC3D300", Offset = "0xC3D300", VA = "0xC3D300")]
		public void SetStartTutorGame()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xC3D30C", Offset = "0xC3D30C", VA = "0xC3D30C")]
		public void RestarStage(VRButton vRButton)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xC3D880", Offset = "0xC3D880", VA = "0xC3D880")]
		public void CompleteTutorialGame()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xC3D958", Offset = "0xC3D958", VA = "0xC3D958")]
		public void CompleteTask(bool state = true)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xC3D978", Offset = "0xC3D978", VA = "0xC3D978")]
		public void FailTask()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xC3D994", Offset = "0xC3D994", VA = "0xC3D994")]
		public void CompleteStage()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xC3CF50", Offset = "0xC3CF50", VA = "0xC3CF50")]
		public void NextState()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xC3D0C4", Offset = "0xC3D0C4", VA = "0xC3D0C4")]
		[IteratorStateMachine(typeof(<StopMusic>d__33))]
		private IEnumerator StopMusic()
		{
			return null;
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xC3D9B0", Offset = "0xC3D9B0", VA = "0xC3D9B0")]
		public void Pause()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xC3D9DC", Offset = "0xC3D9DC", VA = "0xC3D9DC")]
		public void Resume()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xC3C648", Offset = "0xC3C648", VA = "0xC3C648")]
		public void Final()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xC3DA08", Offset = "0xC3DA08", VA = "0xC3DA08")]
		private void LoadMenu()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xC3DAAC", Offset = "0xC3DAAC", VA = "0xC3DAAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xC3DD94", Offset = "0xC3DD94", VA = "0xC3DD94")]
		public TutorialController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F5")]
	public enum TutorialState
	{
		[Token(Token = "0x400173A")]
		ColdSteel,
		[Token(Token = "0x400173B")]
		Pistol,
		[Token(Token = "0x400173C")]
		Move,
		[Token(Token = "0x400173D")]
		Final
	}
	[Serializable]
	[Token(Token = "0x20004F6")]
	public struct StateBeatMaker
	{
		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TutorialState state;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TutorialBeatMaker beatMaker;
	}
	[Token(Token = "0x20004F7")]
	public class TutorialCopyPos : MonoBehaviour
	{
		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xC3EEE8", Offset = "0xC3EEE8", VA = "0xC3EEE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xC3EF50", Offset = "0xC3EF50", VA = "0xC3EF50")]
		private void Update()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xC3F060", Offset = "0xC3F060", VA = "0xC3F060")]
		public TutorialCopyPos()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class TutorialEnvironment : MonoBehaviour
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float checkDistance;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveDistance;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform player;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool move;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool changePos;

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xC3F068", Offset = "0xC3F068", VA = "0xC3F068")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xC3F1A8", Offset = "0xC3F1A8", VA = "0xC3F1A8")]
		private void Activate(TutorialState tutorialState)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xC3F354", Offset = "0xC3F354", VA = "0xC3F354")]
		public void Update()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xC3F4C8", Offset = "0xC3F4C8", VA = "0xC3F4C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xC3F450", Offset = "0xC3F450", VA = "0xC3F450")]
		public void ResetPos()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xC3F5CC", Offset = "0xC3F5CC", VA = "0xC3F5CC")]
		public TutorialEnvironment()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class TutorialFlyMessage : MonoBehaviour
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] message;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro textUI;

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xC3F5D4", Offset = "0xC3F5D4", VA = "0xC3F5D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xC3F644", Offset = "0xC3F644", VA = "0xC3F644")]
		public TutorialFlyMessage()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class TutorialHandAnim : MonoBehaviour
	{
		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isActive;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xC3F64C", Offset = "0xC3F64C", VA = "0xC3F64C")]
		public void SetActive(bool state)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xC3F658", Offset = "0xC3F658", VA = "0xC3F658")]
		public void Activate()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xC3F68C", Offset = "0xC3F68C", VA = "0xC3F68C")]
		public TutorialHandAnim()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class TutorialHitArrowChecker : HitArrowsChecker
	{
		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xC3F69C", Offset = "0xC3F69C", VA = "0xC3F69C")]
		public TutorialHitArrowChecker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FC")]
	public class TutorialMessages : MonoBehaviour
	{
		[Token(Token = "0x20004FD")]
		[CompilerGenerated]
		private sealed class <MusicVolume>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialMessages <>4__this;

			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <tDiss>5__2;

			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__3;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016EE")]
				[Address(RVA = "0xC40958", Offset = "0xC40958", VA = "0xC40958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016F0")]
				[Address(RVA = "0xC409A0", Offset = "0xC409A0", VA = "0xC409A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xC401E8", Offset = "0xC401E8", VA = "0xC401E8")]
			[DebuggerHidden]
			public <MusicVolume>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xC40760", Offset = "0xC40760", VA = "0xC40760", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xC40764", Offset = "0xC40764", VA = "0xC40764", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016EF")]
			[Address(RVA = "0xC40960", Offset = "0xC40960", VA = "0xC40960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<TutorialState, int> OnSuccessComplition;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro text;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 startPosText;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject goodMess;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject wrongMess;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource musicSource;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource source;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TutorialMessages instance;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public MessageState[] tutorialMessages;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public TutorialState state;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int currentMessageIndex;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TextVoice currentMess;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextVoice congratulationMess;

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xC3F6A4", Offset = "0xC3F6A4", VA = "0xC3F6A4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xC3F9CC", Offset = "0xC3F9CC", VA = "0xC3F9CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xC3FA04", Offset = "0xC3FA04", VA = "0xC3FA04")]
		public void GoodMess(bool state)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xC3FB74", Offset = "0xC3FB74", VA = "0xC3FB74")]
		public void FailMess()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xC3FCC0", Offset = "0xC3FCC0", VA = "0xC3FCC0")]
		public void OnTutorialStateChange(TutorialState _state)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xC3FEB4", Offset = "0xC3FEB4", VA = "0xC3FEB4")]
		public void NextMessage()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xC3FDA4", Offset = "0xC3FDA4", VA = "0xC3FDA4")]
		private void SetMessage(TextVoice textVoice)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xC40018", Offset = "0xC40018", VA = "0xC40018")]
		public void ClearMessage()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xC40074", Offset = "0xC40074", VA = "0xC40074")]
		public void SetText()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xC40174", Offset = "0xC40174", VA = "0xC40174")]
		[IteratorStateMachine(typeof(<MusicVolume>d__22))]
		private IEnumerator MusicVolume()
		{
			return null;
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xC40210", Offset = "0xC40210", VA = "0xC40210")]
		public void SetText(string mess)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xC4025C", Offset = "0xC4025C", VA = "0xC4025C")]
		public void ResetPos()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xC40308", Offset = "0xC40308", VA = "0xC40308")]
		public void SetCongratulationText()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xC40458", Offset = "0xC40458", VA = "0xC40458")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xC40758", Offset = "0xC40758", VA = "0xC40758")]
		public TutorialMessages()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FE")]
	public class MessageState
	{
		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public TutorialState state;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextVoice[] messages;

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xC409A8", Offset = "0xC409A8", VA = "0xC409A8")]
		public MessageState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FF")]
	public class TextVoice
	{
		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string text;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float width;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip voice;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int delay;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xC409B0", Offset = "0xC409B0", VA = "0xC409B0")]
		public TextVoice()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class TutorialMover : MonoBehaviour
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float moveSpeed;

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xC409B8", Offset = "0xC409B8", VA = "0xC409B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xC40A5C", Offset = "0xC40A5C", VA = "0xC40A5C")]
		public TutorialMover()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class TutorialMoverRealTime : MonoBehaviour
	{
		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float moveSpeed;

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xC40A6C", Offset = "0xC40A6C", VA = "0xC40A6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xC40B10", Offset = "0xC40B10", VA = "0xC40B10")]
		public TutorialMoverRealTime()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class TutorialPart : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000503")]
		public struct Beat
		{
			[Token(Token = "0x400177A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform point;

			[Token(Token = "0x400177B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Obstacle.Type type;

			[Token(Token = "0x400177C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float breakDistance;

			[Token(Token = "0x400177D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float cryptography;

			[Token(Token = "0x400177E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool changeText;

			[Token(Token = "0x400177F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeDelay;
		}

		[Token(Token = "0x2000504")]
		[CompilerGenerated]
		private sealed class <SpawnWithDelay>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeDelay;

			[Token(Token = "0x4001783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TutorialPart <>4__this;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600170D")]
				[Address(RVA = "0xC4232C", Offset = "0xC4232C", VA = "0xC4232C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600170F")]
				[Address(RVA = "0xC42374", Offset = "0xC42374", VA = "0xC42374", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600170A")]
			[Address(RVA = "0xC41C74", Offset = "0xC41C74", VA = "0xC41C74")]
			[DebuggerHidden]
			public <SpawnWithDelay>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x600170B")]
			[Address(RVA = "0xC42268", Offset = "0xC42268", VA = "0xC42268", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600170C")]
			[Address(RVA = "0xC4226C", Offset = "0xC4226C", VA = "0xC4226C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600170E")]
			[Address(RVA = "0xC42334", Offset = "0xC42334", VA = "0xC42334", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool work;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TutorialState state;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialEnvironment textBlockUI;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayCompleteTask;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delayNextStage;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CinemaProjector cinemaProjector;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject videoObject;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VideoTutorAsset videoTutor;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Beat[] beats;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int currentBeat;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject createdObject;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int weaponStageCount;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected List<Enemy> enemies;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Obstacle obstacle;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected WeaponSwitcher[] hands;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool pauseGame;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		protected bool isWeapon;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		protected bool isCompleted;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		protected bool wait;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool dodge;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		protected bool noMess;

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xC40B20", Offset = "0xC40B20", VA = "0xC40B20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xC40E28", Offset = "0xC40E28", VA = "0xC40E28")]
		public void Pause()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xC40EA4", Offset = "0xC40EA4", VA = "0xC40EA4")]
		public void OnTutorialStateChange(TutorialState _state)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xC40ED0", Offset = "0xC40ED0", VA = "0xC40ED0", Slot = "4")]
		public virtual void SpawnNewObject()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xC41128", Offset = "0xC41128", VA = "0xC41128", Slot = "5")]
		public virtual void PlayVideo()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xC41140", Offset = "0xC41140", VA = "0xC41140", Slot = "6")]
		public virtual void StopVideo()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xC4119C", Offset = "0xC4119C", VA = "0xC4119C", Slot = "7")]
		public virtual void SpawnEnemy(Enemy enemy)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xC412FC", Offset = "0xC412FC", VA = "0xC412FC", Slot = "8")]
		public virtual void SpawnObstacle(Obstacle obstacle)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xC41478", Offset = "0xC41478", VA = "0xC41478", Slot = "9")]
		public virtual void RepeatStage()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xC41600", Offset = "0xC41600", VA = "0xC41600", Slot = "10")]
		public virtual void ClearEnemies()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xC41670", Offset = "0xC41670", VA = "0xC41670", Slot = "11")]
		public virtual void CompleteEnemy()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xC41824", Offset = "0xC41824", VA = "0xC41824", Slot = "12")]
		public virtual void CompleteObstacle()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xC41954", Offset = "0xC41954", VA = "0xC41954", Slot = "13")]
		public virtual void OnCompletedTask()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xC419C0", Offset = "0xC419C0", VA = "0xC419C0", Slot = "14")]
		public virtual void CompleteTask()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xC41B78", Offset = "0xC41B78", VA = "0xC41B78", Slot = "15")]
		public virtual void StartTutorial()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xC4157C", Offset = "0xC4157C", VA = "0xC4157C")]
		[IteratorStateMachine(typeof(<SpawnWithDelay>d__38))]
		public IEnumerator SpawnWithDelay(float timeDelay)
		{
			return null;
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xC41C9C", Offset = "0xC41C9C", VA = "0xC41C9C", Slot = "16")]
		public virtual void EndTutotial()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xC41EB0", Offset = "0xC41EB0", VA = "0xC41EB0", Slot = "17")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xC42258", Offset = "0xC42258", VA = "0xC42258")]
		public TutorialPart()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class TutorialPlayer : Player
	{
		[Token(Token = "0x6001710")]
		[Address(RVA = "0xC4237C", Offset = "0xC4237C", VA = "0xC4237C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xC423CC", Offset = "0xC423CC", VA = "0xC423CC", Slot = "6")]
		public override void Damaged(string _damager)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xC4245C", Offset = "0xC4245C", VA = "0xC4245C")]
		public TutorialPlayer()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class TutorialSpawner : Spawner
	{
		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TutorialSpawner instance;

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xC42464", Offset = "0xC42464", VA = "0xC42464", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xC424BC", Offset = "0xC424BC", VA = "0xC424BC", Slot = "8")]
		public override void SetLifeTimeToWeapon(Obstacle obstacle, float breakDistance)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xC424C0", Offset = "0xC424C0", VA = "0xC424C0")]
		public TutorialSpawner()
		{
		}
	}
}
namespace LevelEditor
{
	[Token(Token = "0x2000507")]
	public enum EVENT_TYPE
	{
		[Token(Token = "0x4001786")]
		GAME_PLAY,
		[Token(Token = "0x4001787")]
		GAME_PAUSE,
		[Token(Token = "0x4001788")]
		CREATE_ENEMY,
		[Token(Token = "0x4001789")]
		DESTROY_ENEMY,
		[Token(Token = "0x400178A")]
		PLAYER_MOVE,
		[Token(Token = "0x400178B")]
		CHOOSE_MARK,
		[Token(Token = "0x400178C")]
		CHANGE_TIME
	}
	[Token(Token = "0x2000508")]
	public class EditorInit : MonoBehaviour
	{
		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EditorInit _instance;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EVENT_TYPE _eventType;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject menuPanel;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action OnPlay;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action OnPause;

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xC424C8", Offset = "0xC424C8", VA = "0xC424C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xC4252C", Offset = "0xC4252C", VA = "0xC4252C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xC42688", Offset = "0xC42688", VA = "0xC42688")]
		private void Pause()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xC42694", Offset = "0xC42694", VA = "0xC42694")]
		private void Play()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xC4269C", Offset = "0xC4269C", VA = "0xC4269C")]
		private void Update()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xC42718", Offset = "0xC42718", VA = "0xC42718")]
		private void AutoSave()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xC4278C", Offset = "0xC4278C", VA = "0xC4278C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xC428E8", Offset = "0xC428E8", VA = "0xC428E8")]
		public EditorInit()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class EnvironmentBehavior : MonoBehaviour
	{
		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool choose;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform sphereCenter;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform sphereMax;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform sphereMin;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform visual;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Choose colors")]
		public Color colorChoose;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color colorUnChoose;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float distance;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SphereMouseBehavior centerBehavior;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xC428F0", Offset = "0xC428F0", VA = "0xC428F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xC42B4C", Offset = "0xC42B4C", VA = "0xC42B4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xC42C94", Offset = "0xC42C94", VA = "0xC42C94")]
		public void SetNewCoordinate(float startZ, float endZ, SphereMouseBehavior.sphereType type)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xC43068", Offset = "0xC43068", VA = "0xC43068")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xC43084", Offset = "0xC43084", VA = "0xC43084")]
		public Vector3 GetScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xC42BBC", Offset = "0xC42BBC", VA = "0xC42BBC")]
		private void InputKey()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xC43198", Offset = "0xC43198", VA = "0xC43198")]
		public EnvironmentBehavior()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class CamManager : MonoBehaviour
	{
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CamManager _instance;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform player;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform camerasPos;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera headCamera;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera freeViewCamera;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera yCoordCamera;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera xCoordCamera;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float speed;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float rotationSensity;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float motionSensity;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minimumVert;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maximumVert;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _rotationX;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Camera enabledCamera;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 startCoordCameraPos;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion startCoordCameraRot;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Camera rayCamera;

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xC431BC", Offset = "0xC431BC", VA = "0xC431BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xC432A4", Offset = "0xC432A4", VA = "0xC432A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xC4331C", Offset = "0xC4331C", VA = "0xC4331C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xC438C8", Offset = "0xC438C8", VA = "0xC438C8")]
		public Camera GetRayCamera()
		{
			return null;
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xC438D0", Offset = "0xC438D0", VA = "0xC438D0")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xC43914", Offset = "0xC43914", VA = "0xC43914")]
		private void SetRotationPanelUI(float x, float y, float z)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xC43360", Offset = "0xC43360", VA = "0xC43360")]
		private void InputKey()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xC43B04", Offset = "0xC43B04", VA = "0xC43B04")]
		private void MouseTranslate()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xC43DCC", Offset = "0xC43DCC", VA = "0xC43DCC")]
		public void ChangeTime(float time)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xC43244", Offset = "0xC43244", VA = "0xC43244")]
		private void DisableAllCameras()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xC43DD0", Offset = "0xC43DD0", VA = "0xC43DD0")]
		public CamManager()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class CanvasManager : MonoBehaviour
	{
		[Token(Token = "0x6001730")]
		[Address(RVA = "0xC43DEC", Offset = "0xC43DEC", VA = "0xC43DEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xC43DF0", Offset = "0xC43DF0", VA = "0xC43DF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xC43DF4", Offset = "0xC43DF4", VA = "0xC43DF4")]
		public CanvasManager()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class CopyPasteManager : MonoBehaviour
	{
		[Token(Token = "0x200050D")]
		[CompilerGenerated]
		private sealed class <SetParentCoroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaneBehavior plane;

			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CopyPasteManager <>4__this;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001747")]
				[Address(RVA = "0xC464B0", Offset = "0xC464B0", VA = "0xC464B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001749")]
				[Address(RVA = "0xC464F8", Offset = "0xC464F8", VA = "0xC464F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001744")]
			[Address(RVA = "0xC45E0C", Offset = "0xC45E0C", VA = "0xC45E0C")]
			[DebuggerHidden]
			public <SetParentCoroutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0xC46354", Offset = "0xC46354", VA = "0xC46354", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001746")]
			[Address(RVA = "0xC46358", Offset = "0xC46358", VA = "0xC46358", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001748")]
			[Address(RVA = "0xC464B8", Offset = "0xC464B8", VA = "0xC464B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CopyPasteManager _instance;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int sizeBackUpCopy;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRect chooseParametersScroll;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas screenCanvas;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoxCollider pasteCollider;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject planePref;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject circlePref;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject stickPref;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject isBossPref;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform parentPanelForScreenCanval;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject beatDataPanelForScreenCanvas;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform timeLine;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI textYPerhaps;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Canvas worldScreenCanvas;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject beatDataPanel;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject cubeHeight;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<PlaneBehavior> planes;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<PlaneBehavior> buffer;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<PlaneBehavior> selectedObjects;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<EnvironmentBehavior> environmentBehaviors;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<IMemento> _mementoes;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<IMemento> _mementoesRedo;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool multy;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<PlaneBehavior> pasteBuffer;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int selected;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Vector3 startPos;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Vector3 endPos;

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xC43DFC", Offset = "0xC43DFC", VA = "0xC43DFC")]
		public void Backup(PlaneBehavior point, bool isDelete = false)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xC43FCC", Offset = "0xC43FCC", VA = "0xC43FCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xC44130", Offset = "0xC44130", VA = "0xC44130")]
		public void RemoveSelectedObject(int id)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xC44208", Offset = "0xC44208", VA = "0xC44208")]
		private void Update()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xC443B4", Offset = "0xC443B4", VA = "0xC443B4")]
		public void CreateEnv(MenuLevelEditor.EnvironmentData[] environmentDatas)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xC44550", Offset = "0xC44550", VA = "0xC44550")]
		private void Redo()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xC44BF8", Offset = "0xC44BF8", VA = "0xC44BF8")]
		private void Undo()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xC45650", Offset = "0xC45650", VA = "0xC45650")]
		public void RemovePlane(int id)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xC44278", Offset = "0xC44278", VA = "0xC44278")]
		private void InputKey()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xC45774", Offset = "0xC45774", VA = "0xC45774")]
		private void CopyPaste()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xC45D7C", Offset = "0xC45D7C", VA = "0xC45D7C")]
		[IteratorStateMachine(typeof(<SetParentCoroutine>d__34))]
		private IEnumerator SetParentCoroutine(PlaneBehavior plane)
		{
			return null;
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xC45E34", Offset = "0xC45E34", VA = "0xC45E34")]
		public void SelectedArea()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xC45F44", Offset = "0xC45F44", VA = "0xC45F44")]
		public void FarPlane()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xC460E0", Offset = "0xC460E0", VA = "0xC460E0")]
		public static void DeleteBeat(Transform point)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xC430A0", Offset = "0xC430A0", VA = "0xC430A0")]
		public void DeleteEnvironmentBehavior(EnvironmentBehavior point)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xC46200", Offset = "0xC46200", VA = "0xC46200")]
		public CopyPasteManager()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class TimeManager : MonoBehaviour
	{
		[Token(Token = "0x200050F")]
		public struct WhereChangeMove
		{
			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeChange;

			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool isPlayerMove;

			[Token(Token = "0x40017DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float posY;
		}

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TimeManager _instance;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform player;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeValue;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isPlayerMove;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _startCoord;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _startCoordPlayer;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider slider;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _time;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<float> OnChangeTime;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<Transform> OnCreateEnemy;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<Transform> OnDestroyEnemy;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action<bool> OnPlayerMove;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<WhereChangeMove> _whereChangeMoves;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 moveVector;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool endCycle;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xC46500", Offset = "0xC46500", VA = "0xC46500")]
		private void Awake()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xC46558", Offset = "0xC46558", VA = "0xC46558")]
		private void Start()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xC4681C", Offset = "0xC4681C", VA = "0xC4681C")]
		public void CalculatePositionAtTime(Transform point)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xC47370", Offset = "0xC47370", VA = "0xC47370")]
		public float GetRealTime()
		{
			return default(float);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xC47378", Offset = "0xC47378", VA = "0xC47378")]
		public float GetTimeValue()
		{
			return default(float);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xC472A0", Offset = "0xC472A0", VA = "0xC472A0")]
		private void AddWhereChangeMove(bool state, float time, float posY = 0f)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xC47380", Offset = "0xC47380", VA = "0xC47380")]
		private void PlayerMove(bool state)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xC4738C", Offset = "0xC4738C", VA = "0xC4738C")]
		public void MoveVector(Transform movePoint)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xC476B4", Offset = "0xC476B4", VA = "0xC476B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xC47B30", Offset = "0xC47B30", VA = "0xC47B30")]
		public void ChangeTime(float time)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xC47EEC", Offset = "0xC47EEC", VA = "0xC47EEC")]
		private void SetPositionNearestObstacle(float time)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xC47B9C", Offset = "0xC47B9C", VA = "0xC47B9C")]
		private void ChangeMoveDistanceAndSetPosition(float time)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xC4834C", Offset = "0xC4834C", VA = "0xC4834C")]
		public void OpenInputTextPanel(string str)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xC4841C", Offset = "0xC4841C", VA = "0xC4841C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xC48638", Offset = "0xC48638", VA = "0xC48638")]
		public TimeManager()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class Mark : MonoBehaviour
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Mark _instance;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform point;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask layerMask;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject planePref;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lookAt;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool uiCreated;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Plane plane;

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xC48698", Offset = "0xC48698", VA = "0xC48698")]
		private void Awake()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xC486F0", Offset = "0xC486F0", VA = "0xC486F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC48844", Offset = "0xC48844", VA = "0xC48844")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xC48B0C", Offset = "0xC48B0C", VA = "0xC48B0C")]
		private bool RayCastToMark()
		{
			return default(bool);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xC48C28", Offset = "0xC48C28", VA = "0xC48C28")]
		public void SetMark(Transform point)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xC48CCC", Offset = "0xC48CCC", VA = "0xC48CCC")]
		public static void SetEnvironment(GameObject setGameObject)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xC450A0", Offset = "0xC450A0", VA = "0xC450A0")]
		public static PlaneBehavior SetComponentAndParentPlane(GameObject planePref, Transform point, Obstacle.Type type, float time, float breakDistance, float cryptography, float x_localPositionAtTime = 0f, bool isBoss = false, bool easy = true, bool normal = true, bool hard = true)
		{
			return null;
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xC48D1C", Offset = "0xC48D1C", VA = "0xC48D1C")]
		public Mark()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class BeatMakerEditor : BeatMaker
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private new float[] startTimes;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform[] points;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private new bool started;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<Beat> beatsEditor;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int i;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xC48D24", Offset = "0xC48D24", VA = "0xC48D24", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xC48F60", Offset = "0xC48F60", VA = "0xC48F60")]
		private void CreateBeat(Transform point)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xC4950C", Offset = "0xC4950C", VA = "0xC4950C")]
		private void ChangeTime(float time)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xC49724", Offset = "0xC49724", VA = "0xC49724", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xC49234", Offset = "0xC49234", VA = "0xC49234")]
		public static void SortBeats(ref List<Beat> beats)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xC491B8", Offset = "0xC491B8", VA = "0xC491B8")]
		private float CalcBeatTime(PlaneBehavior planeBehavior, Obstacle.Type type)
		{
			return default(float);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xC49A00", Offset = "0xC49A00", VA = "0xC49A00")]
		private new void PlayMusic()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xC49A1C", Offset = "0xC49A1C", VA = "0xC49A1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xC49BE4", Offset = "0xC49BE4", VA = "0xC49BE4")]
		public BeatMakerEditor()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class EnemyBoxerLevelEditor : EnemyBoxer
	{
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ChangeTime _changeTime;

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xC49BEC", Offset = "0xC49BEC", VA = "0xC49BEC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xC49CB8", Offset = "0xC49CB8", VA = "0xC49CB8", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xC49F90", Offset = "0xC49F90", VA = "0xC49F90", Slot = "16")]
		public override void Set(float d, float cryptography)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xC4A08C", Offset = "0xC4A08C", VA = "0xC4A08C")]
		private void ChangeAnimState()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xC4A18C", Offset = "0xC4A18C", VA = "0xC4A18C", Slot = "6")]
		protected override void LifetimeDestroyObstacle()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xC4A190", Offset = "0xC4A190", VA = "0xC4A190", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xC4A194", Offset = "0xC4A194", VA = "0xC4A194", Slot = "21")]
		public override void MissEnemy()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xC4A19C", Offset = "0xC4A19C", VA = "0xC4A19C")]
		public EnemyBoxerLevelEditor()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class EnemyMeleeLevelEditor : EnemyMelee
	{
		[Token(Token = "0x6001772")]
		[Address(RVA = "0xC4A1A4", Offset = "0xC4A1A4", VA = "0xC4A1A4")]
		public EnemyMeleeLevelEditor()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class EnemyShooterLevelEditor : EnemyShooter
	{
		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private ChangeTime _changeTime;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xC4A1AC", Offset = "0xC4A1AC", VA = "0xC4A1AC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xC4A278", Offset = "0xC4A278", VA = "0xC4A278", Slot = "6")]
		protected override void LifetimeDestroyObstacle()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xC4A27C", Offset = "0xC4A27C", VA = "0xC4A27C", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xC4A280", Offset = "0xC4A280", VA = "0xC4A280", Slot = "21")]
		public override void MissEnemy()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xC4A288", Offset = "0xC4A288", VA = "0xC4A288")]
		public EnemyShooterLevelEditor()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class EnemyShooterRicochetEditor : EnemyShooter_Ricochet
	{
		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private ChangeTime _changeTime;

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xC4A290", Offset = "0xC4A290", VA = "0xC4A290", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xC4A35C", Offset = "0xC4A35C", VA = "0xC4A35C", Slot = "6")]
		protected override void LifetimeDestroyObstacle()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xC4A360", Offset = "0xC4A360", VA = "0xC4A360", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xC4A364", Offset = "0xC4A364", VA = "0xC4A364", Slot = "21")]
		public override void MissEnemy()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xC4A36C", Offset = "0xC4A36C", VA = "0xC4A36C")]
		public EnemyShooterRicochetEditor()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class EnemySnakeLevelEditor : EnemySnake
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private ChangeTime _changeTime;

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xC4A374", Offset = "0xC4A374", VA = "0xC4A374", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xC4A440", Offset = "0xC4A440", VA = "0xC4A440", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xC4A9F0", Offset = "0xC4A9F0", VA = "0xC4A9F0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xC4AC40", Offset = "0xC4AC40", VA = "0xC4AC40")]
		private void ChangeAnimState()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xC4A9EC", Offset = "0xC4A9EC", VA = "0xC4A9EC")]
		private void DamagePlayer()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xC4AD8C", Offset = "0xC4AD8C", VA = "0xC4AD8C", Slot = "6")]
		protected override void LifetimeDestroyObstacle()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xC4AD90", Offset = "0xC4AD90", VA = "0xC4AD90", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xC4AD94", Offset = "0xC4AD94", VA = "0xC4AD94", Slot = "21")]
		public override void MissEnemy()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xC4AD9C", Offset = "0xC4AD9C", VA = "0xC4AD9C")]
		public EnemySnakeLevelEditor()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class ObstacleLevelEditor : Obstacle, IDistanceChangeable
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string animName;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _startPos;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float startTime;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float timeToward;

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xC4ADA4", Offset = "0xC4ADA4", VA = "0xC4ADA4", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xC4AED0", Offset = "0xC4AED0", VA = "0xC4AED0", Slot = "8")]
		public void Set(float distance, float cryptography = 0f)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xC4AED4", Offset = "0xC4AED4", VA = "0xC4AED4")]
		public ObstacleLevelEditor()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class PlaneBehavior : MonoBehaviour
	{
		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool choose;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color colorWarning;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color colorChoose;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color colorUnChoose;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color afterTimeLineColor;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float beatTime;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected bool mouseDrag;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float breakDistance;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public float cryptography;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject positionAtTime;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CubeBehavior behaviorPositionAtTime;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GameObject parameters;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected TextMeshProUGUI positionText;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public MeshRenderer mat;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MeshRenderer matPositionAtTime;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Obstacle.Type type;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject panelUI;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject panelUISCreenCanvas;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject uiMesh;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private HighLightDepence _highlightEffect;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject isBossToggle;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool _isBoss;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject levelPanel;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool easyLevel;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public bool mediumLevel;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		public bool hardLevel;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float dragTime;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Plane plane;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool warning;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int perhapsSize;

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xC4AF2C", Offset = "0xC4AF2C", VA = "0xC4AF2C")]
		private void Init()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xC4B764", Offset = "0xC4B764", VA = "0xC4B764", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xC4BADC", Offset = "0xC4BADC", VA = "0xC4BADC")]
		private void ChangeIsBoss(bool state)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xC4BB58", Offset = "0xC4BB58", VA = "0xC4BB58")]
		private void ChangeEasyLevel(bool state)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xC4BBD4", Offset = "0xC4BBD4", VA = "0xC4BBD4")]
		private void ChangeMediumLevel(bool state)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xC4BC50", Offset = "0xC4BC50", VA = "0xC4BC50")]
		private void ChangeHardLevel(bool state)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xC4BCCC", Offset = "0xC4BCCC", VA = "0xC4BCCC", Slot = "5")]
		protected virtual void Play()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xC4BCEC", Offset = "0xC4BCEC", VA = "0xC4BCEC", Slot = "6")]
		protected virtual void Pause()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xC4BD80", Offset = "0xC4BD80", VA = "0xC4BD80")]
		private void ChangeTime(float time)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xC4BEC4", Offset = "0xC4BEC4", VA = "0xC4BEC4", Slot = "7")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xC4BF98", Offset = "0xC4BF98", VA = "0xC4BF98", Slot = "8")]
		public virtual void PostNewBeat()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xC4C110", Offset = "0xC4C110", VA = "0xC4C110")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xC4C310", Offset = "0xC4C310", VA = "0xC4C310", Slot = "9")]
		public virtual void OnMouseDrag()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xC4C698", Offset = "0xC4C698", VA = "0xC4C698", Slot = "10")]
		protected virtual void OnMouseUp()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xC4C814", Offset = "0xC4C814", VA = "0xC4C814", Slot = "11")]
		public virtual void Choose()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xC4CFD0", Offset = "0xC4CFD0", VA = "0xC4CFD0", Slot = "12")]
		public virtual void UnChoose()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xC4D224", Offset = "0xC4D224", VA = "0xC4D224", Slot = "13")]
		public virtual void AfterTimeLineColor()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xC4D3B4", Offset = "0xC4D3B4", VA = "0xC4D3B4")]
		public void WarningColor()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xC4D57C", Offset = "0xC4D57C", VA = "0xC4D57C")]
		public void NotWarning()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xC43F58", Offset = "0xC43F58", VA = "0xC43F58")]
		public IMemento SaveMoment(bool isDelete)
		{
			return null;
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xC4D584", Offset = "0xC4D584", VA = "0xC4D584", Slot = "14")]
		public virtual void Restore(IMemento memento)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xC4DA34", Offset = "0xC4DA34", VA = "0xC4DA34", Slot = "15")]
		protected virtual void InputKey()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xC4DB50", Offset = "0xC4DB50", VA = "0xC4DB50")]
		protected void InputRotate()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xC4DCA4", Offset = "0xC4DCA4", VA = "0xC4DCA4")]
		protected void InputYPosition()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xC4488C", Offset = "0xC4488C", VA = "0xC4488C")]
		public void DestroyAllInherits()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xC4E040", Offset = "0xC4E040", VA = "0xC4E040", Slot = "16")]
		protected virtual void DestroyChild()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xC4E208", Offset = "0xC4E208", VA = "0xC4E208")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xC4E44C", Offset = "0xC4E44C", VA = "0xC4E44C")]
		public PlaneBehavior()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class PlaneBehaviorAirPlane : PlaneBehavior
	{
		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AirPlaneParameters param;

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xC4E46C", Offset = "0xC4E46C", VA = "0xC4E46C", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xC4E7B8", Offset = "0xC4E7B8", VA = "0xC4E7B8", Slot = "9")]
		public override void OnMouseDrag()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xC4E870", Offset = "0xC4E870", VA = "0xC4E870", Slot = "10")]
		protected override void OnMouseUp()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xC4E954", Offset = "0xC4E954", VA = "0xC4E954", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xC4E9F0", Offset = "0xC4E9F0", VA = "0xC4E9F0", Slot = "15")]
		protected override void InputKey()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xC4EA08", Offset = "0xC4EA08", VA = "0xC4EA08")]
		public PlaneBehaviorAirPlane()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class PlaneBehaviorBoxer : PlaneBehavior
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private WeaponParameters param;

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xC4EA28", Offset = "0xC4EA28", VA = "0xC4EA28", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xC4EEAC", Offset = "0xC4EEAC", VA = "0xC4EEAC", Slot = "9")]
		public override void OnMouseDrag()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xC4EF98", Offset = "0xC4EF98", VA = "0xC4EF98", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xC4F064", Offset = "0xC4F064", VA = "0xC4F064")]
		public PlaneBehaviorBoxer()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class PlaneBehaviorMelee : PlaneBehavior
	{
		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xC4F084", Offset = "0xC4F084", VA = "0xC4F084", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xC4F2E8", Offset = "0xC4F2E8", VA = "0xC4F2E8", Slot = "9")]
		public override void OnMouseDrag()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xC4F430", Offset = "0xC4F430", VA = "0xC4F430", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xC4F528", Offset = "0xC4F528", VA = "0xC4F528", Slot = "6")]
		protected override void Pause()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xC4F5C0", Offset = "0xC4F5C0", VA = "0xC4F5C0", Slot = "5")]
		protected override void Play()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xC4F748", Offset = "0xC4F748", VA = "0xC4F748")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xC4F1CC", Offset = "0xC4F1CC", VA = "0xC4F1CC")]
		public Vector3 EnemyMeleePositionBeat(Vector3 beat, Transform point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xC4F8F4", Offset = "0xC4F8F4", VA = "0xC4F8F4")]
		public PlaneBehaviorMelee()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class PlaneBehaviorWallJump : PlaneBehavior
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private WeaponParameters param;

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xC4F914", Offset = "0xC4F914", VA = "0xC4F914", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xC4FC28", Offset = "0xC4FC28", VA = "0xC4FC28", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xC4FCC4", Offset = "0xC4FCC4", VA = "0xC4FCC4", Slot = "9")]
		public override void OnMouseDrag()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xC4FDC4", Offset = "0xC4FDC4", VA = "0xC4FDC4", Slot = "15")]
		protected override void InputKey()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xC4FDDC", Offset = "0xC4FDDC", VA = "0xC4FDDC")]
		public PlaneBehaviorWallJump()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public static class PossitionBeat
	{
		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float dist_x;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float radius;
	}
	[Token(Token = "0x200051E")]
	public class CubeBehavior : MonoBehaviour
	{
		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaneBehavior plane;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 screenPoint;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 offset;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Plane planeForRay;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool drag;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer mat;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject createEnemyPos;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject attackDistanceGO;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LineRenderer _lineRenderer;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float distance;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float dragTime;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int snap;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xC4FE4C", Offset = "0xC4FE4C", VA = "0xC4FE4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xC50590", Offset = "0xC50590", VA = "0xC50590")]
		private void CreateAttackDistance()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xC4CD78", Offset = "0xC4CD78", VA = "0xC4CD78")]
		public void SetColorGradient()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xC507FC", Offset = "0xC507FC", VA = "0xC507FC")]
		public void ChangeTime(float time)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xC50978", Offset = "0xC50978", VA = "0xC50978")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xC50A40", Offset = "0xC50A40", VA = "0xC50A40")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xC50D7C", Offset = "0xC50D7C", VA = "0xC50D7C")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xC51184", Offset = "0xC51184", VA = "0xC51184")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xC50320", Offset = "0xC50320", VA = "0xC50320")]
		public void CheckNearestBeat()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xC513B0", Offset = "0xC513B0", VA = "0xC513B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xC514B4", Offset = "0xC514B4", VA = "0xC514B4")]
		public CubeBehavior()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class MenuLevelEditor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000520")]
		public class OldTrackInfo
		{
			[Token(Token = "0x4001839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float bpm;

			[Token(Token = "0x400183A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float preTime;

			[Token(Token = "0x400183B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int division;

			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string trackPath;

			[Token(Token = "0x400183D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int difficulty;

			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xC55368", Offset = "0xC55368", VA = "0xC55368")]
			public OldTrackInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000521")]
		public class EnvironmentData
		{
			[Token(Token = "0x400183E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x400183F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 scale;

			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xC55370", Offset = "0xC55370", VA = "0xC55370")]
			public EnvironmentData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000522")]
		public class BookmarkData
		{
			[Token(Token = "0x4001840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4001841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string text_1;

			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string text_2;

			[Token(Token = "0x4001843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeValue;

			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xC55378", Offset = "0xC55378", VA = "0xC55378")]
			public BookmarkData()
			{
			}
		}

		[Token(Token = "0x2000523")]
		[CompilerGenerated]
		private sealed class <ChangeTimeAutoSaveCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool fastTest;

			[Token(Token = "0x4001847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MenuLevelEditor <>4__this;

			[Token(Token = "0x170001B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017E9")]
				[Address(RVA = "0xC55E98", Offset = "0xC55E98", VA = "0xC55E98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EB")]
				[Address(RVA = "0xC55EE0", Offset = "0xC55EE0", VA = "0xC55EE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xC54B58", Offset = "0xC54B58", VA = "0xC54B58")]
			[DebuggerHidden]
			public <ChangeTimeAutoSaveCoroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xC55490", Offset = "0xC55490", VA = "0xC55490", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xC55494", Offset = "0xC55494", VA = "0xC55494", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017EA")]
			[Address(RVA = "0xC55EA0", Offset = "0xC55EA0", VA = "0xC55EA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000524")]
		[CompilerGenerated]
		private sealed class <ChangeTimeCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuLevelEditor <>4__this;

			[Token(Token = "0x170001B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EF")]
				[Address(RVA = "0xC56280", Offset = "0xC56280", VA = "0xC56280", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F1")]
				[Address(RVA = "0xC562C8", Offset = "0xC562C8", VA = "0xC562C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xC54C70", Offset = "0xC54C70", VA = "0xC54C70")]
			[DebuggerHidden]
			public <ChangeTimeCoroutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xC55EE8", Offset = "0xC55EE8", VA = "0xC55EE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xC55EEC", Offset = "0xC55EEC", VA = "0xC55EEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xC56288", Offset = "0xC56288", VA = "0xC56288", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000526")]
		[CompilerGenerated]
		private sealed class <Download>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400184E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400184F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4001851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MenuLevelEditor <>4__this;

			[Token(Token = "0x4001852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WWW <www>5__2;

			[Token(Token = "0x170001B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F9")]
				[Address(RVA = "0xC567A8", Offset = "0xC567A8", VA = "0xC567A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017FB")]
				[Address(RVA = "0xC567F0", Offset = "0xC567F0", VA = "0xC567F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F5")]
			[Address(RVA = "0xC550E0", Offset = "0xC550E0", VA = "0xC550E0")]
			[DebuggerHidden]
			public <Download>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60017F6")]
			[Address(RVA = "0xC56330", Offset = "0xC56330", VA = "0xC56330", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xC5634C", Offset = "0xC5634C", VA = "0xC5634C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xC566F8", Offset = "0xC566F8", VA = "0xC566F8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60017FA")]
			[Address(RVA = "0xC567B0", Offset = "0xC567B0", VA = "0xC567B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button newProjectButton;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button openProjectButton;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button saveProjectButton;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button testButton;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button mainMenuButton;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ScrollRect scrollView;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject existProjectPanel;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject savePanel;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject askAboutExistName;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject askBeforeLeave;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string fileName;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TMP_InputField _inputField;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Button saveButton;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TextMeshProUGUI text;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Destroyer destroyer;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TextMeshProUGUI textBeforeLeave;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Button yesLeaveButton;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Button noLeaveButton;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TextMeshProUGUI askText;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Button yesButton;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Button noButton;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float time;

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xC524C4", Offset = "0xC524C4", VA = "0xC524C4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xC525B8", Offset = "0xC525B8", VA = "0xC525B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xC531BC", Offset = "0xC531BC", VA = "0xC531BC")]
		private void TestButtonClick()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xC532C4", Offset = "0xC532C4", VA = "0xC532C4")]
		private void MainMenuClick()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xC53334", Offset = "0xC53334", VA = "0xC53334")]
		private void ClickNoLeave()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xC53354", Offset = "0xC53354", VA = "0xC53354")]
		private void ClickYesLeave()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xC538C8", Offset = "0xC538C8", VA = "0xC538C8")]
		private void ClickNo()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xC538E8", Offset = "0xC538E8", VA = "0xC538E8")]
		private void ClickYes()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xC549BC", Offset = "0xC549BC", VA = "0xC549BC")]
		public void CheckAutoSave(bool fastTest = false)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xC54AD0", Offset = "0xC54AD0", VA = "0xC54AD0")]
		[IteratorStateMachine(typeof(<ChangeTimeAutoSaveCoroutine>d__31))]
		private IEnumerator ChangeTimeAutoSaveCoroutine(bool fastTest)
		{
			return null;
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xC54B80", Offset = "0xC54B80", VA = "0xC54B80")]
		public void CheckExistProject()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xC54BFC", Offset = "0xC54BFC", VA = "0xC54BFC")]
		[IteratorStateMachine(typeof(<ChangeTimeCoroutine>d__33))]
		private IEnumerator ChangeTimeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xC52DBC", Offset = "0xC52DBC", VA = "0xC52DBC")]
		private void CreateExistPanels()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xC534C0", Offset = "0xC534C0", VA = "0xC534C0")]
		private void NewProject(bool changeActiveState)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xC54DF0", Offset = "0xC54DF0", VA = "0xC54DF0")]
		private void OpenProject()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xC54CA0", Offset = "0xC54CA0", VA = "0xC54CA0")]
		public void ChangeActiveState()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xC54EB8", Offset = "0xC54EB8", VA = "0xC54EB8")]
		public void OpenButton(string name)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xC55050", Offset = "0xC55050", VA = "0xC55050")]
		[IteratorStateMachine(typeof(<Download>d__39))]
		private IEnumerator Download(string url)
		{
			return null;
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xC55108", Offset = "0xC55108", VA = "0xC55108")]
		private void DeleteButton(string name, Transform panel)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xC551CC", Offset = "0xC551CC", VA = "0xC551CC")]
		private void SaveName(string name)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xC55224", Offset = "0xC55224", VA = "0xC55224")]
		public void CopyAudioFile(string path)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xC53B48", Offset = "0xC53B48", VA = "0xC53B48")]
		private void SaveData()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xC55380", Offset = "0xC55380", VA = "0xC55380")]
		public void ExitButton()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xC524C8", Offset = "0xC524C8", VA = "0xC524C8")]
		private void ChangeStateSavePanel()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xC55388", Offset = "0xC55388", VA = "0xC55388")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xC55480", Offset = "0xC55480", VA = "0xC55480")]
		public MenuLevelEditor()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class MoveCollider : MonoBehaviour
	{
		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xC567F8", Offset = "0xC567F8", VA = "0xC567F8")]
		public MoveCollider()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class PlayButton : MonoBehaviour
	{
		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI text;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xC56800", Offset = "0xC56800", VA = "0xC56800")]
		private void Start()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xC5688C", Offset = "0xC5688C", VA = "0xC5688C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xC568FC", Offset = "0xC568FC", VA = "0xC568FC")]
		public void OnClickButton()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xC56A1C", Offset = "0xC56A1C", VA = "0xC56A1C")]
		public PlayButton()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class SaveButton : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200052A")]
		public class BeatOut
		{
			[Token(Token = "0x400185B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x400185C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion rotation;

			[Token(Token = "0x400185D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float time;

			[Token(Token = "0x400185E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int type;

			[Token(Token = "0x400185F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float breakDistance;

			[Token(Token = "0x4001860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float cryptography;

			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool isBoss;

			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool easy;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
			public bool normal;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
			public bool hard;

			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float x_localPositionAtTime;

			[Token(Token = "0x4001866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isRun;

			[Token(Token = "0x6001806")]
			[Address(RVA = "0xC55360", Offset = "0xC55360", VA = "0xC55360")]
			public BeatOut()
			{
			}
		}

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject savePanel;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button button;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject panel;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_InputField _inputField;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button saveButton;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI text;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fileName;

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xC56A24", Offset = "0xC56A24", VA = "0xC56A24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xC56D54", Offset = "0xC56D54", VA = "0xC56D54")]
		private void OpenPanel()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xC56DA0", Offset = "0xC56DA0", VA = "0xC56DA0")]
		private void SaveName(string name)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xC56DA8", Offset = "0xC56DA8", VA = "0xC56DA8")]
		private void SaveData()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xC5709C", Offset = "0xC5709C", VA = "0xC5709C")]
		public SaveButton()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class SelectObjects : MonoBehaviour
	{
		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SelectObjects _instance;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PlaneBehavior> unit;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PlaneBehavior> unitSelected;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin skin;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rect rect;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool draw;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool multy;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 startPos;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector2 endPos;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LayerMask layerMask;

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xC570F4", Offset = "0xC570F4", VA = "0xC570F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xC5714C", Offset = "0xC5714C", VA = "0xC5714C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xC571F8", Offset = "0xC571F8", VA = "0xC571F8")]
		private bool CheckUnit(PlaneBehavior unit)
		{
			return default(bool);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xC57378", Offset = "0xC57378", VA = "0xC57378")]
		public void Select(List<PlaneBehavior> planes)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xC573B8", Offset = "0xC573B8", VA = "0xC573B8")]
		public void Deselect(List<PlaneBehavior> planes)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xC57540", Offset = "0xC57540", VA = "0xC57540")]
		private void DeselectAllUnit()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xC575DC", Offset = "0xC575DC", VA = "0xC575DC")]
		public SelectObjects()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class ShooterParameters : Parameters, IParameters
	{
		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public TMP_Dropdown targetField;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Toggle shieldField;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Toggle sitField;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Toggle sideField;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int target;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int shield;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int sit;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int side;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool changeParam;

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xC575E4", Offset = "0xC575E4", VA = "0xC575E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xC57948", Offset = "0xC57948", VA = "0xC57948")]
		private void TimeToShootInput(int value)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xC57958", Offset = "0xC57958", VA = "0xC57958")]
		private void ShieldInput(bool isOn)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xC5796C", Offset = "0xC5796C", VA = "0xC5796C")]
		private void SitInput(bool isOn)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xC57980", Offset = "0xC57980", VA = "0xC57980")]
		private void SideInput(bool isOn)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xC57994", Offset = "0xC57994", VA = "0xC57994", Slot = "4")]
		public bool ChangeParam()
		{
			return default(bool);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xC5799C", Offset = "0xC5799C", VA = "0xC5799C", Slot = "5")]
		public void SetParam()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xC57A14", Offset = "0xC57A14", VA = "0xC57A14")]
		public ShooterParameters()
		{
		}
	}
	[Token(Token = "0x200052D")]
	public class TextDataForBeatPanel : MonoBehaviour
	{
		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI pointText;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI timeText;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI typeText;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI breakDistanceText;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI cryptographyText;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color mainColor;

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xC57A1C", Offset = "0xC57A1C", VA = "0xC57A1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xC57A28", Offset = "0xC57A28", VA = "0xC57A28")]
		public void SetBeatData(BeatMaker.Beat beat)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xC57D54", Offset = "0xC57D54", VA = "0xC57D54")]
		public void SetBeatDataForScreenUI(BeatMaker.Beat beat)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xC57FB8", Offset = "0xC57FB8", VA = "0xC57FB8")]
		public void SetWarningtext(string text)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xC5801C", Offset = "0xC5801C", VA = "0xC5801C")]
		public TextDataForBeatPanel()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class TimeSinceStart : MonoBehaviour
	{
		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider slider;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI inputField;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_InputField inputTimeField;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool onSelectTimeInput;

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xC58024", Offset = "0xC58024", VA = "0xC58024")]
		private void Start()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xC5807C", Offset = "0xC5807C", VA = "0xC5807C")]
		private void Update()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xC5817C", Offset = "0xC5817C", VA = "0xC5817C")]
		public void OnSelectInputText(bool state)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xC58188", Offset = "0xC58188", VA = "0xC58188")]
		public TimeSinceStart()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class WeaponParameters : Parameters, IParameters
	{
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public TMP_InputField breakDistanceField;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TextMeshProUGUI text;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float breakDistance;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool changeParam;

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xC58190", Offset = "0xC58190", VA = "0xC58190")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xC58310", Offset = "0xC58310", VA = "0xC58310")]
		private void BreakDistanceInput(string str)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xC583F8", Offset = "0xC583F8", VA = "0xC583F8", Slot = "4")]
		public bool ChangeParam()
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xC58400", Offset = "0xC58400", VA = "0xC58400", Slot = "5")]
		public void SetParam()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xC58430", Offset = "0xC58430", VA = "0xC58430")]
		public WeaponParameters()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class WorldSpaceUI : MonoBehaviour
	{
		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WorldSpaceUI _instance;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject timePrefab;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int beatCount;

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xC58438", Offset = "0xC58438", VA = "0xC58438")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xC58490", Offset = "0xC58490", VA = "0xC58490")]
		public void UITimeOnBeat(float d)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xC58638", Offset = "0xC58638", VA = "0xC58638")]
		public void UITimeEveryBeat(float d)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xC5881C", Offset = "0xC5881C", VA = "0xC5881C")]
		public WorldSpaceUI()
		{
		}
	}
}
namespace DitzelGames.FastIK
{
	[Token(Token = "0x2000531")]
	public class FastIKFabric : MonoBehaviour
	{
		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ChainLength;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Target;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Pole;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Solver Parameters")]
		public int Iterations;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Delta;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		public float SnapBackStrength;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float[] BonesLength;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float CompleteLength;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] Bones;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3[] Positions;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3[] StartDirectionSucc;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Quaternion[] StartRotationBone;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Quaternion StartRotationTarget;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform Root;

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xC58824", Offset = "0xC58824", VA = "0xC58824")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xC58828", Offset = "0xC58828", VA = "0xC58828")]
		private void Init()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xC5912C", Offset = "0xC5912C", VA = "0xC5912C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xC59130", Offset = "0xC59130", VA = "0xC59130")]
		private void ResolveIK()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xC58DC0", Offset = "0xC58DC0", VA = "0xC58DC0")]
		private Vector3 GetPositionRootSpace(Transform current)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xC58EF8", Offset = "0xC58EF8", VA = "0xC58EF8")]
		private void SetPositionRootSpace(Transform current, Vector3 position)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xC58FF8", Offset = "0xC58FF8", VA = "0xC58FF8")]
		private Quaternion GetRotationRootSpace(Transform current)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xC59EEC", Offset = "0xC59EEC", VA = "0xC59EEC")]
		private void SetRotationRootSpace(Transform current, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xC5A028", Offset = "0xC5A028", VA = "0xC5A028")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xC5A02C", Offset = "0xC5A02C", VA = "0xC5A02C")]
		public FastIKFabric()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class FastIKLook : MonoBehaviour
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Target;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 StartDirection;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Quaternion StartRotation;

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xC5A050", Offset = "0xC5A050", VA = "0xC5A050")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xC5A134", Offset = "0xC5A134", VA = "0xC5A134")]
		private void Update()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xC5A2C4", Offset = "0xC5A2C4", VA = "0xC5A2C4")]
		public FastIKLook()
		{
		}
	}
}
namespace VRKeys
{
	[Token(Token = "0x2000533")]
	public class BackspaceKey : Key
	{
		[Token(Token = "0x6001835")]
		[Address(RVA = "0xC5A2CC", Offset = "0xC5A2CC", VA = "0xC5A2CC", Slot = "17")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xC5A4E4", Offset = "0xC5A4E4", VA = "0xC5A4E4", Slot = "20")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xC5A510", Offset = "0xC5A510", VA = "0xC5A510")]
		public BackspaceKey()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class CancelKey : Key
	{
		[Token(Token = "0x6001838")]
		[Address(RVA = "0xC5A57C", Offset = "0xC5A57C", VA = "0xC5A57C", Slot = "17")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xC5A5C4", Offset = "0xC5A5C4", VA = "0xC5A5C4", Slot = "20")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xC5A5F0", Offset = "0xC5A5F0", VA = "0xC5A5F0")]
		public CancelKey()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class ClearKey : Key
	{
		[Token(Token = "0x600183B")]
		[Address(RVA = "0xC5A5F4", Offset = "0xC5A5F4", VA = "0xC5A5F4", Slot = "17")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xC5A6D8", Offset = "0xC5A6D8", VA = "0xC5A6D8", Slot = "20")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xC5A704", Offset = "0xC5A704", VA = "0xC5A704")]
		public ClearKey()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class Controller : MonoBehaviour
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mallet mallet;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputDeviceRole role;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputDevice _device;

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xC5A708", Offset = "0xC5A708", VA = "0xC5A708")]
		private void Start()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xC5A788", Offset = "0xC5A788", VA = "0xC5A788")]
		private InputDevice GetDevice()
		{
			return default(InputDevice);
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xC5A894", Offset = "0xC5A894", VA = "0xC5A894")]
		private bool DeviceIsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xC5A8C0", Offset = "0xC5A8C0", VA = "0xC5A8C0")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xC5A920", Offset = "0xC5A920", VA = "0xC5A920")]
		public bool OnGrip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xC5A9DC", Offset = "0xC5A9DC", VA = "0xC5A9DC")]
		public Controller()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class EnterKey : Key
	{
		[Token(Token = "0x6001844")]
		[Address(RVA = "0xC5A9E4", Offset = "0xC5A9E4", VA = "0xC5A9E4", Slot = "17")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xC5AA6C", Offset = "0xC5AA6C", VA = "0xC5AA6C", Slot = "20")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xC5AA98", Offset = "0xC5AA98", VA = "0xC5AA98")]
		public EnterKey()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class DemoScene : MonoBehaviour
	{
		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Keyboard keyboard;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Regex emailValidator;

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xC5AA9C", Offset = "0xC5AA9C", VA = "0xC5AA9C")]
		public bool ValidateEmail(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xC5AAB8", Offset = "0xC5AAB8", VA = "0xC5AAB8")]
		public DemoScene()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class HandCollider : MonoBehaviour
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mallet mallet;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool inKeyboard;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xC5AB48", Offset = "0xC5AB48", VA = "0xC5AB48")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xC5ABC4", Offset = "0xC5ABC4", VA = "0xC5ABC4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xC5AC3C", Offset = "0xC5AC3C", VA = "0xC5AC3C")]
		public HandCollider()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class Key : MenuButton
	{
		[Token(Token = "0x200053B")]
		[CompilerGenerated]
		private sealed class <Press>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Key <>4__this;

			[Token(Token = "0x170001BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600185C")]
				[Address(RVA = "0xC5B244", Offset = "0xC5B244", VA = "0xC5B244", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600185E")]
				[Address(RVA = "0xC5B28C", Offset = "0xC5B28C", VA = "0xC5B28C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001859")]
			[Address(RVA = "0xC5AF38", Offset = "0xC5AF38", VA = "0xC5AF38")]
			[DebuggerHidden]
			public <Press>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0xC5B12C", Offset = "0xC5B12C", VA = "0xC5B12C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0xC5B130", Offset = "0xC5B130", VA = "0xC5B130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185D")]
			[Address(RVA = "0xC5B24C", Offset = "0xC5B24C", VA = "0xC5B24C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053C")]
		[CompilerGenerated]
		private sealed class <DoActivateFor>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Key <>4__this;

			[Token(Token = "0x40018B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float seconds;

			[Token(Token = "0x170001BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001862")]
				[Address(RVA = "0xC5B378", Offset = "0xC5B378", VA = "0xC5B378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001864")]
				[Address(RVA = "0xC5B3C0", Offset = "0xC5B3C0", VA = "0xC5B3C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185F")]
			[Address(RVA = "0xC5AFE4", Offset = "0xC5AFE4", VA = "0xC5AFE4")]
			[DebuggerHidden]
			public <DoActivateFor>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001860")]
			[Address(RVA = "0xC5B294", Offset = "0xC5B294", VA = "0xC5B294", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001861")]
			[Address(RVA = "0xC5B298", Offset = "0xC5B298", VA = "0xC5B298", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001863")]
			[Address(RVA = "0xC5B380", Offset = "0xC5B380", VA = "0xC5B380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Keyboard keyboard;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshPro label;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material inactiveMat;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material activeMat;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material disabledMat;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 defaultPosition;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 pressedPosition;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 pressDirection;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float pressMagnitude;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool autoInit;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool isPressing;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool disabled;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IEnumerator _ActivateFor;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IEnumerator _Press;

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xC5AC44", Offset = "0xC5AC44", VA = "0xC5AC44")]
		private new void Awake()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xC5ACD8", Offset = "0xC5ACD8", VA = "0xC5ACD8")]
		public void Init(Vector3 defaultPos)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xC5AD7C", Offset = "0xC5AD7C", VA = "0xC5AD7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xC5ADD4", Offset = "0xC5ADD4", VA = "0xC5ADD4", Slot = "16")]
		protected virtual void OnEnableExtras()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xC5ADD8", Offset = "0xC5ADD8", VA = "0xC5ADD8", Slot = "5")]
		public override void Push(bool _technical = false)
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xC5AEC4", Offset = "0xC5AEC4", VA = "0xC5AEC4")]
		[IteratorStateMachine(typeof(<Press>d__20))]
		private IEnumerator Press()
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xC5A2FC", Offset = "0xC5A2FC", VA = "0xC5A2FC", Slot = "17")]
		public virtual void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xC5A3F8", Offset = "0xC5A3F8", VA = "0xC5A3F8")]
		public void ActivateFor(float seconds)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xC5AF60", Offset = "0xC5AF60", VA = "0xC5AF60")]
		[IteratorStateMachine(typeof(<DoActivateFor>d__23))]
		private IEnumerator DoActivateFor(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xC5B00C", Offset = "0xC5B00C", VA = "0xC5B00C", Slot = "18")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xC5B09C", Offset = "0xC5B09C", VA = "0xC5B09C", Slot = "19")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xC5B128", Offset = "0xC5B128", VA = "0xC5B128", Slot = "20")]
		public virtual void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xC5A514", Offset = "0xC5A514", VA = "0xC5A514")]
		public Key()
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class Keyboard : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053E")]
		public class KeyboardUpdateEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001884")]
			[Address(RVA = "0xC5C310", Offset = "0xC5C310", VA = "0xC5C310")]
			public KeyboardUpdateEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200053F")]
		public class KeyboardSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0xC5C358", Offset = "0xC5C358", VA = "0xC5C358")]
			public KeyboardSubmitEvent()
			{
			}
		}

		[Token(Token = "0x2000540")]
		[CompilerGenerated]
		private sealed class <Start>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x170001BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001889")]
				[Address(RVA = "0xC5C494", Offset = "0xC5C494", VA = "0xC5C494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600188B")]
				[Address(RVA = "0xC5C4DC", Offset = "0xC5C4DC", VA = "0xC5C4DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001886")]
			[Address(RVA = "0xC5B43C", Offset = "0xC5B43C", VA = "0xC5B43C")]
			[DebuggerHidden]
			public <Start>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001887")]
			[Address(RVA = "0xC5C3B0", Offset = "0xC5C3B0", VA = "0xC5C3B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001888")]
			[Address(RVA = "0xC5C3B4", Offset = "0xC5C3B4", VA = "0xC5C3B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600188A")]
			[Address(RVA = "0xC5C49C", Offset = "0xC5C49C", VA = "0xC5C49C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000541")]
		[CompilerGenerated]
		private sealed class <EnableWhenInitialized>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x170001C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600188F")]
				[Address(RVA = "0xC5C5E8", Offset = "0xC5C5E8", VA = "0xC5C5E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001891")]
				[Address(RVA = "0xC5C630", Offset = "0xC5C630", VA = "0xC5C630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600188C")]
			[Address(RVA = "0xC5B814", Offset = "0xC5B814", VA = "0xC5B814")]
			[DebuggerHidden]
			public <EnableWhenInitialized>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x600188D")]
			[Address(RVA = "0xC5C4E4", Offset = "0xC5C4E4", VA = "0xC5C4E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600188E")]
			[Address(RVA = "0xC5C4E8", Offset = "0xC5C4E8", VA = "0xC5C4E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001890")]
			[Address(RVA = "0xC5C5F0", Offset = "0xC5C5F0", VA = "0xC5C5F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000542")]
		[CompilerGenerated]
		private sealed class <DelayToggleShift>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x170001C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001895")]
				[Address(RVA = "0xC5C6EC", Offset = "0xC5C6EC", VA = "0xC5C6EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001897")]
				[Address(RVA = "0xC5C734", Offset = "0xC5C734", VA = "0xC5C734", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001892")]
			[Address(RVA = "0xC5BC84", Offset = "0xC5BC84", VA = "0xC5BC84")]
			[DebuggerHidden]
			public <DelayToggleShift>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001893")]
			[Address(RVA = "0xC5C638", Offset = "0xC5C638", VA = "0xC5C638", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0xC5C63C", Offset = "0xC5C63C", VA = "0xC5C63C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001896")]
			[Address(RVA = "0xC5C6F4", Offset = "0xC5C6F4", VA = "0xC5C6F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000543")]
		[CompilerGenerated]
		private sealed class <DoSetLanguage>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyboardLayout lang;

			[Token(Token = "0x170001C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600189B")]
				[Address(RVA = "0xC5C90C", Offset = "0xC5C90C", VA = "0xC5C90C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600189D")]
				[Address(RVA = "0xC5C954", Offset = "0xC5C954", VA = "0xC5C954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001898")]
			[Address(RVA = "0xC5BE70", Offset = "0xC5BE70", VA = "0xC5BE70")]
			[DebuggerHidden]
			public <DoSetLanguage>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001899")]
			[Address(RVA = "0xC5C73C", Offset = "0xC5C73C", VA = "0xC5C73C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600189A")]
			[Address(RVA = "0xC5C740", Offset = "0xC5C740", VA = "0xC5C740", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600189C")]
			[Address(RVA = "0xC5C914", Offset = "0xC5C914", VA = "0xC5C914", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000544")]
		[CompilerGenerated]
		private sealed class <DoSetPlaceholderMessage>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string msg;

			[Token(Token = "0x170001C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018A1")]
				[Address(RVA = "0xC5CA98", Offset = "0xC5CA98", VA = "0xC5CA98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A3")]
				[Address(RVA = "0xC5CAE0", Offset = "0xC5CAE0", VA = "0xC5CAE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600189E")]
			[Address(RVA = "0xC5BF48", Offset = "0xC5BF48", VA = "0xC5BF48")]
			[DebuggerHidden]
			public <DoSetPlaceholderMessage>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x600189F")]
			[Address(RVA = "0xC5C95C", Offset = "0xC5C95C", VA = "0xC5C95C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xC5C960", Offset = "0xC5C960", VA = "0xC5C960", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xC5CAA0", Offset = "0xC5CAA0", VA = "0xC5CAA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000545")]
		[CompilerGenerated]
		private sealed class <SetupKeys>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Keyboard <>4__this;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <activeState>5__2;

			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <keyCount>5__3;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__4;

			[Token(Token = "0x170001C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018A7")]
				[Address(RVA = "0xC5D8B8", Offset = "0xC5D8B8", VA = "0xC5D8B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A9")]
				[Address(RVA = "0xC5D900", Offset = "0xC5D900", VA = "0xC5D900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xC5C170", Offset = "0xC5C170", VA = "0xC5C170")]
			[DebuggerHidden]
			public <SetupKeys>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xC5CAE8", Offset = "0xC5CAE8", VA = "0xC5CAE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xC5CAEC", Offset = "0xC5CAEC", VA = "0xC5CAEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xC5D8C0", Offset = "0xC5D8C0", VA = "0xC5D8C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 positionRelativeToUser;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyboardLayout keyboardLayout;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(15f)]
		public TextMeshProUGUI placeholder;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string placeholderMessage;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI displayText;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject validationNotice;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI validationMessage;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject infoNotice;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI infoMessage;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject successNotice;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI successMessage;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Space(15f)]
		public Color displayTextColor;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color caretColor;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Space(15f)]
		public GameObject keyPrefab;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform keysParent;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float keyWidth;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float keyHeight;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Space(15f)]
		public string text;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Space(15f)]
		public GameObject canvas;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject keyboardWrapper;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ShiftKey shiftKey;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Key[] extraKeys;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Space(15f)]
		public bool leftPressing;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool rightPressing;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		public bool initialized;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		public bool disabled;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Space(15f)]
		public KeyboardUpdateEvent OnUpdate;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public KeyboardSubmitEvent OnSubmit;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityEvent OnCancel;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LetterKey[] keys;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool shifted;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Layout layout;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public EmailController emailController;

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xC5B3C8", Offset = "0xC5B3C8", VA = "0xC5B3C8")]
		[IteratorStateMachine(typeof(<Start>d__34))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xC5B464", Offset = "0xC5B464", VA = "0xC5B464")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xC5B4AC", Offset = "0xC5B4AC", VA = "0xC5B4AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xC5B588", Offset = "0xC5B588", VA = "0xC5B588")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xC5B680", Offset = "0xC5B680", VA = "0xC5B680")]
		[IteratorStateMachine(typeof(<EnableWhenInitialized>d__38))]
		private IEnumerator EnableWhenInitialized()
		{
			return null;
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xC5B4B0", Offset = "0xC5B4B0", VA = "0xC5B4B0")]
		public void Disable()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xC5A65C", Offset = "0xC5A65C", VA = "0xC5A65C")]
		public void SetText(string txt)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xC5B9BC", Offset = "0xC5B9BC", VA = "0xC5B9BC")]
		public void AddCharacter(string character)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xC5BB38", Offset = "0xC5BB38", VA = "0xC5BB38")]
		public bool ToggleShift()
		{
			return default(bool);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xC5BAC4", Offset = "0xC5BAC4", VA = "0xC5BAC4")]
		[IteratorStateMachine(typeof(<DelayToggleShift>d__43))]
		private IEnumerator DelayToggleShift()
		{
			return null;
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xC5BCAC", Offset = "0xC5BCAC", VA = "0xC5BCAC")]
		public void DisableInput()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xC5B6F4", Offset = "0xC5B6F4", VA = "0xC5B6F4")]
		public void EnableInput()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xC5A360", Offset = "0xC5A360", VA = "0xC5A360")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xC5AA04", Offset = "0xC5AA04", VA = "0xC5AA04")]
		public void Submit()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xC5A59C", Offset = "0xC5A59C", VA = "0xC5A59C")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xC5BDCC", Offset = "0xC5BDCC", VA = "0xC5BDCC")]
		public void SetLayout(KeyboardLayout layout)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xC5BDEC", Offset = "0xC5BDEC", VA = "0xC5BDEC")]
		[IteratorStateMachine(typeof(<DoSetLanguage>d__51))]
		private IEnumerator DoSetLanguage(KeyboardLayout lang)
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xC5BE98", Offset = "0xC5BE98", VA = "0xC5BE98")]
		public void SetPlaceholderMessage(string msg)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xC5BEB8", Offset = "0xC5BEB8", VA = "0xC5BEB8")]
		[IteratorStateMachine(typeof(<DoSetPlaceholderMessage>d__53))]
		private IEnumerator DoSetPlaceholderMessage(string msg)
		{
			return null;
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xC5BF70", Offset = "0xC5BF70", VA = "0xC5BF70")]
		public void ShowValidationMessage(string message)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xC5BFD4", Offset = "0xC5BFD4", VA = "0xC5BFD4")]
		public void ShowInfoMessage(string message)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xC5C038", Offset = "0xC5C038", VA = "0xC5C038")]
		public void ShowSuccessMessage(string message)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xC5C09C", Offset = "0xC5C09C", VA = "0xC5C09C")]
		public void HideValidationMessage()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xC5C0BC", Offset = "0xC5C0BC", VA = "0xC5C0BC")]
		public void HideInfoMessage()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xC5C0DC", Offset = "0xC5C0DC", VA = "0xC5C0DC")]
		public void HideSuccessMessage()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xC5C0FC", Offset = "0xC5C0FC", VA = "0xC5C0FC")]
		[IteratorStateMachine(typeof(<SetupKeys>d__60))]
		private IEnumerator SetupKeys()
		{
			return null;
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xC5B83C", Offset = "0xC5B83C", VA = "0xC5B83C")]
		private void UpdateDisplayText()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xC5B90C", Offset = "0xC5B90C", VA = "0xC5B90C")]
		private void PlaceholderVisibility()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xC5C198", Offset = "0xC5C198", VA = "0xC5C198")]
		public Keyboard()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class Layout
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string placeholderMessage;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string spaceButtonLabel;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string enterButtonLabel;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string cancelButtonLabel;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string shiftButtonLabel;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string backspaceButtonLabel;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string clearButtonLabel;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] row1Keys;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] row1Shift;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string[] row2Keys;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string[] row2Shift;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string[] row3Keys;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string[] row3Shift;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] row4Keys;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string[] row4Shift;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float row1Offset;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float row2Offset;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float row3Offset;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float row4Offset;

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xC5D86C", Offset = "0xC5D86C", VA = "0xC5D86C")]
		public int TotalKeys()
		{
			return default(int);
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xC5D908", Offset = "0xC5D908", VA = "0xC5D908")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public enum KeyboardLayout
	{
		[Token(Token = "0x4001905")]
		Qwerty,
		[Token(Token = "0x4001906")]
		French,
		[Token(Token = "0x4001907")]
		Dvorak
	}
	[Token(Token = "0x2000548")]
	public static class LayoutList
	{
		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xC5C848", Offset = "0xC5C848", VA = "0xC5C848")]
		public static Layout GetLayout(KeyboardLayout layout)
		{
			return null;
		}
	}
	[Token(Token = "0x2000549")]
	public class LetterKey : Key
	{
		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TextMeshPro shiftedLabel;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string character;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string shiftedChar;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _shifted;

		[Token(Token = "0x170001CA")]
		public bool shifted
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0xC64578", Offset = "0xC64578", VA = "0xC64578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xC5BBD4", Offset = "0xC5BBD4", VA = "0xC5BBD4")]
			set
			{
			}
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xC64580", Offset = "0xC64580", VA = "0xC64580")]
		public string GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xC6459C", Offset = "0xC6459C", VA = "0xC6459C", Slot = "17")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xC645E4", Offset = "0xC645E4", VA = "0xC645E4")]
		public LetterKey()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class Mallet : MonoBehaviour
	{
		[Token(Token = "0x200054B")]
		public enum MalletHand
		{
			[Token(Token = "0x4001914")]
			Left,
			[Token(Token = "0x4001915")]
			Right,
			[Token(Token = "0x4001916")]
			Both,
			[Token(Token = "0x4001917")]
			None
		}

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clipToPlay;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MalletHand hand;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandCollider handCollider;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isMovingDownward;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Controller controller;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 prevPos;

		[Token(Token = "0x170001CB")]
		public bool isMovingDownward
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xC64648", Offset = "0xC64648", VA = "0xC64648")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0xC64650", Offset = "0xC64650", VA = "0xC64650")]
			private set
			{
			}
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xC6465C", Offset = "0xC6465C", VA = "0xC6465C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xC646EC", Offset = "0xC646EC", VA = "0xC646EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xC6475C", Offset = "0xC6475C", VA = "0xC6475C")]
		public void HandleTriggerEnter(Key key)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xC64834", Offset = "0xC64834", VA = "0xC64834")]
		public Controller Controller()
		{
			return null;
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xC6483C", Offset = "0xC6483C", VA = "0xC6483C")]
		public Mallet()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class Placement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200054D")]
		public class PlacementSettings
		{
			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion rotation;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 scale;

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xC65224", Offset = "0xC65224", VA = "0xC65224")]
			public PlacementSettings()
			{
			}
		}

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minScale;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxScale;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mallet leftMallet;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mallet rightMallet;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandCollider leftHandCollider;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HandCollider rightHandCollider;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlacementSettings settings;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Keyboard keyboard;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mallet.MalletHand positioningHand;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 previousPosition;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float previousRotationX;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 initialScale;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float applyScale;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float initialHandDistance;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float initialApplyScale;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string prefsKey;

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xC6489C", Offset = "0xC6489C", VA = "0xC6489C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xC649F0", Offset = "0xC649F0", VA = "0xC649F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xC64D20", Offset = "0xC64D20", VA = "0xC64D20")]
		private void PositionWith(Vector3 handPosition, Quaternion handRotation, Mallet.MalletHand hand)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xC64F54", Offset = "0xC64F54", VA = "0xC64F54")]
		private void Resize()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xC64D08", Offset = "0xC64D08", VA = "0xC64D08")]
		private void ResetState()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xC650D8", Offset = "0xC650D8", VA = "0xC650D8")]
		private void SaveChanges()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xC651AC", Offset = "0xC651AC", VA = "0xC651AC")]
		public Placement()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class ShiftKey : Key
	{
		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool shifted;

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xC6522C", Offset = "0xC6522C", VA = "0xC6522C", Slot = "17")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xC6524C", Offset = "0xC6524C", VA = "0xC6524C", Slot = "19")]
		public override void Enable()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xC5BC48", Offset = "0xC5BC48", VA = "0xC5BC48")]
		public void Toggle(bool shift)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xC65288", Offset = "0xC65288", VA = "0xC65288", Slot = "20")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xC652B4", Offset = "0xC652B4", VA = "0xC652B4")]
		public ShiftKey()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class SpaceKey : Key
	{
		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xC652B8", Offset = "0xC652B8", VA = "0xC652B8", Slot = "17")]
		public override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xC65320", Offset = "0xC65320", VA = "0xC65320", Slot = "20")]
		public override void UpdateLayout(Layout translation)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xC6534C", Offset = "0xC6534C", VA = "0xC6534C")]
		public SpaceKey()
		{
		}
	}
}
namespace VRKeys.Layouts
{
	[Token(Token = "0x2000550")]
	public class Dvorak : Layout
	{
		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xC62250", Offset = "0xC62250", VA = "0xC62250")]
		public Dvorak()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class French : Layout
	{
		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xC5FD60", Offset = "0xC5FD60", VA = "0xC5FD60")]
		public French()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000552")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x400192D")]
		NONE = 0u,
		[Token(Token = "0x400192E")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x400192F")]
		STAGE = 2u,
		[Token(Token = "0x4001930")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4001931")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x2000553")]
	[HelpURL("https://liv.tv/sdk-unity-docs")]
	[AddComponentMenu("LIV/LIV")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x2000554")]
		[CompilerGenerated]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x170001DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018F5")]
				[Address(RVA = "0xC669FC", Offset = "0xC669FC", VA = "0xC669FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018F7")]
				[Address(RVA = "0xC66A44", Offset = "0xC66A44", VA = "0xC66A44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018F2")]
			[Address(RVA = "0xC65E54", Offset = "0xC65E54", VA = "0xC65E54")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x60018F3")]
			[Address(RVA = "0xC66850", Offset = "0xC66850", VA = "0xC66850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xC66854", Offset = "0xC66854", VA = "0xC66854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xC66A04", Offset = "0xC66A04", VA = "0xC66A04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[FormerlySerializedAs("TrackedSpaceOrigin")]
		[Tooltip("This is the topmost transform of your VR rig.")]
		private Transform _stage;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("This transform is an additional wrapper to the user’s playspace.")]
		[FormerlySerializedAs("StageTransform")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("This is the camera responsible for rendering the user’s HMD.")]
		[FormerlySerializedAs("HMDCamera")]
		[SerializeField]
		private Camera _HMDCamera;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[FormerlySerializedAs("MRCameraPrefab")]
		[Tooltip("Camera prefab for customized rendering.")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("This option disables all standard Unity assets for the Mixed Reality rendering.")]
		[FormerlySerializedAs("DisableStandardAssets")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("The layer mask defines exactly which object layers should be rendered in MR.")]
		[FormerlySerializedAs("SpectatorLayerMask")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("This is for removing unwanted scripts from the cloned MR camera.")]
		[FormerlySerializedAs("ExcludeBehaviours")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Recovers corrupted alpha channel when using post-effects.")]
		[FormerlySerializedAs("FixPostEffectsAlpha")]
		[SerializeField]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x170001CC")]
		public Transform stage
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xC65350", Offset = "0xC65350", VA = "0xC65350")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xC653E0", Offset = "0xC653E0", VA = "0xC653E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		[Obsolete("Use stage instead")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0xC654E4", Offset = "0xC654E4", VA = "0xC654E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xC654E8", Offset = "0xC654E8", VA = "0xC654E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x60018CF")]
			[Address(RVA = "0xC654EC", Offset = "0xC654EC", VA = "0xC654EC")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001CF")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xC655E4", Offset = "0xC655E4", VA = "0xC655E4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001D0")]
		public Transform stageTransform
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xC656DC", Offset = "0xC656DC", VA = "0xC656DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xC656E4", Offset = "0xC656E4", VA = "0xC656E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public Camera HMDCamera
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xC656EC", Offset = "0xC656EC", VA = "0xC656EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xC656F4", Offset = "0xC656F4", VA = "0xC656F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xC657F8", Offset = "0xC657F8", VA = "0xC657F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0xC65800", Offset = "0xC65800", VA = "0xC65800")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xC6589C", Offset = "0xC6589C", VA = "0xC6589C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xC658A4", Offset = "0xC658A4", VA = "0xC658A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xC658B0", Offset = "0xC658B0", VA = "0xC658B0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xC658B8", Offset = "0xC658B8", VA = "0xC658B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xC658C0", Offset = "0xC658C0", VA = "0xC658C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xC658C8", Offset = "0xC658C8", VA = "0xC658C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xC65908", Offset = "0xC65908", VA = "0xC65908")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xC65910", Offset = "0xC65910", VA = "0xC65910")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public bool isValid
		{
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xC6591C", Offset = "0xC6591C", VA = "0xC6591C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public bool isActive
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0xC65A7C", Offset = "0xC65A7C", VA = "0xC65A7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		private bool _isReady
		{
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xC65A84", Offset = "0xC65A84", VA = "0xC65A84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DA")]
		public SDKRender render
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xC65B90", Offset = "0xC65B90", VA = "0xC65B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xC65B98", Offset = "0xC65B98", VA = "0xC65B98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xC65C44", Offset = "0xC65C44", VA = "0xC65C44")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xC65DD8", Offset = "0xC65DD8", VA = "0xC65DD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xC65DE0", Offset = "0xC65DE0", VA = "0xC65DE0")]
		[IteratorStateMachine(typeof(<WaitForUnityEndOfFrame>d__68))]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xC65C00", Offset = "0xC65C00", VA = "0xC65C00")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xC65E7C", Offset = "0xC65E7C", VA = "0xC65E7C")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xC65E88", Offset = "0xC65E88", VA = "0xC65E88")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xC65F34", Offset = "0xC65F34", VA = "0xC65F34")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xC661B8", Offset = "0xC661B8", VA = "0xC661B8")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xC662A4", Offset = "0xC662A4", VA = "0xC662A4")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xC66228", Offset = "0xC66228", VA = "0xC66228")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xC66260", Offset = "0xC66260", VA = "0xC66260")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xC65FD0", Offset = "0xC65FD0", VA = "0xC65FD0")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xC65C5C", Offset = "0xC65C5C", VA = "0xC65C5C")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xC665F8", Offset = "0xC665F8", VA = "0xC665F8")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public static class SDKBridge
	{
		[Token(Token = "0x2000556")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x170001DD")]
		public static bool IsActive
		{
			[Token(Token = "0x600190A")]
			[Address(RVA = "0xC65AF8", Offset = "0xC65AF8", VA = "0xC65AF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xC66A4C", Offset = "0xC66A4C", VA = "0xC66A4C")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xC66A54", Offset = "0xC66A54", VA = "0xC66A54")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xC66A5C", Offset = "0xC66A5C", VA = "0xC66A5C")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xC66A64", Offset = "0xC66A64", VA = "0xC66A64")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xC66A6C", Offset = "0xC66A6C", VA = "0xC66A6C")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xC66A74", Offset = "0xC66A74", VA = "0xC66A74")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xC66AA4", Offset = "0xC66AA4", VA = "0xC66AA4")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xC66AD4", Offset = "0xC66AD4", VA = "0xC66AD4")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xC66ADC", Offset = "0xC66ADC", VA = "0xC66ADC")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xC66AE4", Offset = "0xC66AE4", VA = "0xC66AE4")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xC66B14", Offset = "0xC66B14", VA = "0xC66B14")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xC66B44", Offset = "0xC66B44", VA = "0xC66B44")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xC66B74", Offset = "0xC66B74", VA = "0xC66B74")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xC66B7C", Offset = "0xC66B7C", VA = "0xC66B7C")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xC66C00", Offset = "0xC66C00", VA = "0xC66C00")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xC66CFC", Offset = "0xC66CFC", VA = "0xC66CFC")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xC66DBC", Offset = "0xC66DBC", VA = "0xC66DBC")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xC66E18", Offset = "0xC66E18", VA = "0xC66E18")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xC66E74", Offset = "0xC66E74", VA = "0xC66E74")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xC66408", Offset = "0xC66408", VA = "0xC66408")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x600190D")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600190E")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600190F")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001910")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001911")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xC66F14", Offset = "0xC66F14", VA = "0xC66F14")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xC671CC", Offset = "0xC671CC", VA = "0xC671CC")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xC67378", Offset = "0xC67378", VA = "0xC67378")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xC674A8", Offset = "0xC674A8", VA = "0xC674A8")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xC67610", Offset = "0xC67610", VA = "0xC67610")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xC676B0", Offset = "0xC676B0", VA = "0xC676B0")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000557")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x170001DE")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0xC67B24", Offset = "0xC67B24", VA = "0xC67B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DF")]
		private bool interlacedRendering
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0xC67B70", Offset = "0xC67B70", VA = "0xC67B70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E0")]
		private bool canRenderBackground
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0xC67B80", Offset = "0xC67B80", VA = "0xC67B80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E1")]
		private bool canRenderForeground
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0xC67C24", Offset = "0xC67C24", VA = "0xC67C24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E2")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x600191F")]
			[Address(RVA = "0xC67CDC", Offset = "0xC67CDC", VA = "0xC67CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		public LIV liv
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xC6A214", Offset = "0xC6A214", VA = "0xC6A214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xC6A21C", Offset = "0xC6A21C", VA = "0xC6A21C")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x170001E5")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0xC6A22C", Offset = "0xC6A22C", VA = "0xC6A22C")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x170001E6")]
		public SDKResolution resolution
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0xC6A23C", Offset = "0xC6A23C", VA = "0xC6A23C")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x170001E7")]
		public Camera cameraInstance
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0xC6A244", Offset = "0xC6A244", VA = "0xC6A244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		public Camera cameraReference
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0xC69F90", Offset = "0xC69F90", VA = "0xC69F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public Camera hmdCamera
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0xC6A24C", Offset = "0xC6A24C", VA = "0xC6A24C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public Transform stage
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0xC6A268", Offset = "0xC6A268", VA = "0xC6A268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xC6A280", Offset = "0xC6A280", VA = "0xC6A280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xC6A29C", Offset = "0xC6A29C", VA = "0xC6A29C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001ED")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xC69CA8", Offset = "0xC69CA8", VA = "0xC69CA8")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001EE")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xC69D6C", Offset = "0xC69D6C", VA = "0xC69D6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EF")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0xC69F04", Offset = "0xC69F04", VA = "0xC69F04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F0")]
		public bool canSetPose
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xC6A394", Offset = "0xC6A394", VA = "0xC6A394")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xC67984", Offset = "0xC67984", VA = "0xC67984")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xC67A88", Offset = "0xC67A88", VA = "0xC67A88")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xC662D4", Offset = "0xC662D4", VA = "0xC662D4")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xC66930", Offset = "0xC66930", VA = "0xC66930")]
		public void Render()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xC689C4", Offset = "0xC689C4", VA = "0xC689C4")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xC68D04", Offset = "0xC68D04", VA = "0xC68D04")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xC69724", Offset = "0xC69724", VA = "0xC69724")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xC67D60", Offset = "0xC67D60", VA = "0xC67D60")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xC6A01C", Offset = "0xC6A01C", VA = "0xC6A01C")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xC663C0", Offset = "0xC663C0", VA = "0xC663C0", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xC6A3B4", Offset = "0xC6A3B4", VA = "0xC6A3B4")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xC6A6E0", Offset = "0xC6A6E0", VA = "0xC6A6E0")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xC6A894", Offset = "0xC6A894", VA = "0xC6A894")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xC6A90C", Offset = "0xC6A90C", VA = "0xC6A90C")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xC6A1B0", Offset = "0xC6A1B0", VA = "0xC6A1B0")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xC68538", Offset = "0xC68538", VA = "0xC68538")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xC68590", Offset = "0xC68590", VA = "0xC68590")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xC6898C", Offset = "0xC6898C", VA = "0xC6898C")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xC69C70", Offset = "0xC69C70", VA = "0xC69C70")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xC69D8C", Offset = "0xC69D8C", VA = "0xC69D8C")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xC69ECC", Offset = "0xC69ECC", VA = "0xC69ECC")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xC69F20", Offset = "0xC69F20", VA = "0xC69F20")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xC69F58", Offset = "0xC69F58", VA = "0xC69F58")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xC6AAAC", Offset = "0xC6AAAC", VA = "0xC6AAAC")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xC6AB44", Offset = "0xC6AB44", VA = "0xC6AB44")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xC6ABDC", Offset = "0xC6ABDC", VA = "0xC6ABDC")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xC6AC74", Offset = "0xC6AC74", VA = "0xC6AC74")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xC686CC", Offset = "0xC686CC", VA = "0xC686CC")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xC69DC4", Offset = "0xC69DC4", VA = "0xC69DC4")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x2000558")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x400197A")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x400197B")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x400197C")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x400197D")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x400197E")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x400197F")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4001980")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4001981")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4001982")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4001983")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4001984")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xC6AD0C", Offset = "0xC6AD0C", VA = "0xC6AD0C")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xC6AD50", Offset = "0xC6AD50", VA = "0xC6AD50")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xC6AD94", Offset = "0xC6AD94", VA = "0xC6AD94")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xC6ADD8", Offset = "0xC6ADD8", VA = "0xC6ADD8")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xC6AE1C", Offset = "0xC6AE1C", VA = "0xC6AE1C")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xC6AE60", Offset = "0xC6AE60", VA = "0xC6AE60")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public struct SDKConstants
	{
		[Token(Token = "0x4001985")]
		public const string SDK_ID = "DOU2XXNOO7QSGW6J9FY8AM8LPEEULBKP";

		[Token(Token = "0x4001986")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4001987")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x200055A")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4001989")]
		NONE = 0,
		[Token(Token = "0x400198A")]
		GAME = 63
	}
	[Token(Token = "0x200055B")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x400198C")]
		NONE = 0uL,
		[Token(Token = "0x400198D")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x400198E")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x400198F")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4001990")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4001991")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4001992")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4001993")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4001994")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4001995")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4001996")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4001997")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x200055C")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4001999")]
		UNDEFINED = 0u,
		[Token(Token = "0x400199A")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x400199B")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x400199C")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x200055D")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x400199E")]
		UNDEFINED,
		[Token(Token = "0x400199F")]
		COLOR_BUFFER
	}
	[Token(Token = "0x200055E")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x40019A1")]
		UNDEFINED = 0u,
		[Token(Token = "0x40019A2")]
		ARGB32 = 10u
	}
	[Token(Token = "0x200055F")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x40019A4")]
		UNDEFINED,
		[Token(Token = "0x40019A5")]
		RAW,
		[Token(Token = "0x40019A6")]
		DIRECTX,
		[Token(Token = "0x40019A7")]
		OPENGL,
		[Token(Token = "0x40019A8")]
		VULKAN,
		[Token(Token = "0x40019A9")]
		METAL
	}
	[Token(Token = "0x2000560")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x40019AB")]
		UNDEFINED,
		[Token(Token = "0x40019AC")]
		LINEAR,
		[Token(Token = "0x40019AD")]
		SRGB
	}
	[Token(Token = "0x2000561")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x40019AF")]
		UNDEFINED,
		[Token(Token = "0x40019B0")]
		FORWARD,
		[Token(Token = "0x40019B1")]
		DEFERRED,
		[Token(Token = "0x40019B2")]
		VERTEX_LIT,
		[Token(Token = "0x40019B3")]
		UNIVERSAL,
		[Token(Token = "0x40019B4")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x2000562")]
	public struct SDKResolution
	{
		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x170001F1")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0xC6AF6C", Offset = "0xC6AF6C", VA = "0xC6AF6C")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xC6AF74", Offset = "0xC6AF74", VA = "0xC6AF74", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000563")]
	public struct SDKVector3
	{
		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x170001F2")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0xC6B014", Offset = "0xC6B014", VA = "0xC6B014")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170001F3")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0xC6B024", Offset = "0xC6B024", VA = "0xC6B024")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170001F4")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6001954")]
			[Address(RVA = "0xC6B034", Offset = "0xC6B034", VA = "0xC6B034")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170001F5")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0xC6B044", Offset = "0xC6B044", VA = "0xC6B044")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170001F6")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6001956")]
			[Address(RVA = "0xC6B054", Offset = "0xC6B054", VA = "0xC6B054")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xC6B064", Offset = "0xC6B064", VA = "0xC6B064")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xC6B068", Offset = "0xC6B068", VA = "0xC6B068")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xC6B06C", Offset = "0xC6B06C", VA = "0xC6B06C")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xC6B07C", Offset = "0xC6B07C", VA = "0xC6B07C")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xC6B08C", Offset = "0xC6B08C", VA = "0xC6B08C")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xC6B09C", Offset = "0xC6B09C", VA = "0xC6B09C")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xC6B0AC", Offset = "0xC6B0AC", VA = "0xC6B0AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000564")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x170001F7")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xC6B170", Offset = "0xC6B170", VA = "0xC6B170")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xC6B184", Offset = "0xC6B184", VA = "0xC6B184")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xC6B188", Offset = "0xC6B188", VA = "0xC6B188")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xC6B18C", Offset = "0xC6B18C", VA = "0xC6B18C")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xC6B240", Offset = "0xC6B240", VA = "0xC6B240")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xC6B2B4", Offset = "0xC6B2B4", VA = "0xC6B2B4")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xC6B358", Offset = "0xC6B358", VA = "0xC6B358", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000565")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x170001F8")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xC6B534", Offset = "0xC6B534", VA = "0xC6B534")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xC6B560", Offset = "0xC6B560", VA = "0xC6B560")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xC6B5A4", Offset = "0xC6B5A4", VA = "0xC6B5A4")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xC6B5E8", Offset = "0xC6B5E8", VA = "0xC6B5E8")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xC6B694", Offset = "0xC6B694", VA = "0xC6B694")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xC6B7A0", Offset = "0xC6B7A0", VA = "0xC6B7A0")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xC6B7F8", Offset = "0xC6B7F8", VA = "0xC6B7F8")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xC6B834", Offset = "0xC6B834", VA = "0xC6B834")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xC6B8C8", Offset = "0xC6B8C8", VA = "0xC6B8C8")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xC6B8F4", Offset = "0xC6B8F4", VA = "0xC6B8F4")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xC6B9D8", Offset = "0xC6B9D8", VA = "0xC6B9D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000566")]
	public struct SDKPlane
	{
		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x170001F9")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0xC6BFA0", Offset = "0xC6BFA0", VA = "0xC6BFA0")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xC6BF44", Offset = "0xC6BF44", VA = "0xC6BF44")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xC6BFB4", Offset = "0xC6BFB4", VA = "0xC6BFB4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000567")]
	public struct SDKPriority
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x170001FA")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0xC6C078", Offset = "0xC6C078", VA = "0xC6C078")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xC6C084", Offset = "0xC6C084", VA = "0xC6C084", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000568")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x170001FB")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0xC6C344", Offset = "0xC6C344", VA = "0xC6C344")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xC6C4A4", Offset = "0xC6C4A4", VA = "0xC6C4A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000569")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x170001FC")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0xC6C754", Offset = "0xC6C754", VA = "0xC6C754")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xC6C950", Offset = "0xC6C950", VA = "0xC6C950")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xC6C960", Offset = "0xC6C960", VA = "0xC6C960")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xC6C974", Offset = "0xC6C974", VA = "0xC6C974", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200056A")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x170001FD")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0xC6CD10", Offset = "0xC6CD10", VA = "0xC6CD10")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xC6CDD4", Offset = "0xC6CDD4", VA = "0xC6CDD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200056B")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x170001FE")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xC6CD70", Offset = "0xC6CD70", VA = "0xC6CD70")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xC6CE98", Offset = "0xC6CE98", VA = "0xC6CE98", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200056C")]
	public struct SDKTexture
	{
		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x170001FF")]
		public static SDKTexture empty
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0xC6D118", Offset = "0xC6D118", VA = "0xC6D118")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xC6D160", Offset = "0xC6D160", VA = "0xC6D160", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200056D")]
	public struct SDKTransform
	{
		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x17000200")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0xC6C93C", Offset = "0xC6C93C", VA = "0xC6C93C")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xC6D57C", Offset = "0xC6D57C", VA = "0xC6D57C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200056E")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x17000201")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6001983")]
			[Address(RVA = "0xC6C908", Offset = "0xC6C908", VA = "0xC6C908")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xC6D664", Offset = "0xC6D664", VA = "0xC6D664", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200056F")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x17000202")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6001985")]
			[Address(RVA = "0xC6D870", Offset = "0xC6D870", VA = "0xC6D870")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xC6D8BC", Offset = "0xC6D8BC", VA = "0xC6D8BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000570")]
	public struct SDKPose
	{
		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x17000203")]
		public static SDKPose empty
		{
			[Token(Token = "0x6001987")]
			[Address(RVA = "0xC6C898", Offset = "0xC6C898", VA = "0xC6C898")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xC6DC9C", Offset = "0xC6DC9C", VA = "0xC6DC9C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000571")]
	public static class SDKUtils
	{
		[Token(Token = "0x17000204")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xC6E430", Offset = "0xC6E430", VA = "0xC6E430")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xC6DF5C", Offset = "0xC6DF5C", VA = "0xC6DF5C")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xC6E418", Offset = "0xC6E418", VA = "0xC6E418")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xC6E45C", Offset = "0xC6E45C", VA = "0xC6E45C")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xC6E4E8", Offset = "0xC6E4E8", VA = "0xC6E4E8")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xC6E508", Offset = "0xC6E508", VA = "0xC6E508")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xC6E56C", Offset = "0xC6E56C", VA = "0xC6E56C")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xC6E578", Offset = "0xC6E578", VA = "0xC6E578")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xC6E58C", Offset = "0xC6E58C", VA = "0xC6E58C")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xC6E768", Offset = "0xC6E768", VA = "0xC6E768")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xC6EAEC", Offset = "0xC6EAEC", VA = "0xC6EAEC")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xC6E604", Offset = "0xC6E604", VA = "0xC6E604")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xC6ED38", Offset = "0xC6ED38", VA = "0xC6ED38")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x6001996")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6001997")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xC6EFB4", Offset = "0xC6EFB4", VA = "0xC6EFB4")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xC6F134", Offset = "0xC6F134", VA = "0xC6F134")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xC6F1DC", Offset = "0xC6F1DC", VA = "0xC6F1DC")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xC6F2D4", Offset = "0xC6F2D4", VA = "0xC6F2D4")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xC6F468", Offset = "0xC6F468", VA = "0xC6F468")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xC6F474", Offset = "0xC6F474", VA = "0xC6F474")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xC6F614", Offset = "0xC6F614", VA = "0xC6F614")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xC6F69C", Offset = "0xC6F69C", VA = "0xC6F69C")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace HighlightPlus
{
	[Token(Token = "0x2000572")]
	public delegate bool OnObjectHighlightStartEvent(GameObject obj);
	[Token(Token = "0x2000573")]
	public delegate void OnObjectHighlightEndEvent(GameObject obj);
	[Token(Token = "0x2000574")]
	public delegate bool OnRendererHighlightEvent(Renderer renderer);
	[Token(Token = "0x2000575")]
	public delegate void OnTargetAnimatesEvent(ref Vector3 center, ref Quaternion rotation, ref Vector3 scale, float t);
	[Token(Token = "0x2000576")]
	public enum NormalsOption
	{
		[Token(Token = "0x4001A14")]
		Smooth,
		[Token(Token = "0x4001A15")]
		PreserveOriginal,
		[Token(Token = "0x4001A16")]
		Reorient
	}
	[Token(Token = "0x2000577")]
	public enum SeeThroughMode
	{
		[Token(Token = "0x4001A18")]
		WhenHighlighted,
		[Token(Token = "0x4001A19")]
		AlwaysWhenOccluded,
		[Token(Token = "0x4001A1A")]
		Never
	}
	[Token(Token = "0x2000578")]
	public enum QualityLevel
	{
		[Token(Token = "0x4001A1C")]
		Fastest,
		[Token(Token = "0x4001A1D")]
		High,
		[Token(Token = "0x4001A1E")]
		Highest,
		[Token(Token = "0x4001A1F")]
		Medium
	}
	[Token(Token = "0x2000579")]
	public static class QualityLevelExtensions
	{
		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xC6FE94", Offset = "0xC6FE94", VA = "0xC6FE94")]
		public static bool UsesMultipleOffsets(this QualityLevel qualityLevel)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200057A")]
	public enum TargetOptions
	{
		[Token(Token = "0x4001A21")]
		Children,
		[Token(Token = "0x4001A22")]
		OnlyThisObject,
		[Token(Token = "0x4001A23")]
		RootToChildren,
		[Token(Token = "0x4001A24")]
		LayerInScene,
		[Token(Token = "0x4001A25")]
		LayerInChildren,
		[Token(Token = "0x4001A26")]
		Scripting
	}
	[Token(Token = "0x200057B")]
	public enum Visibility
	{
		[Token(Token = "0x4001A28")]
		Normal,
		[Token(Token = "0x4001A29")]
		AlwaysOnTop,
		[Token(Token = "0x4001A2A")]
		OnlyWhenOccluded
	}
	[Serializable]
	[Token(Token = "0x200057C")]
	public struct GlowPassData
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float offset;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float alpha;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;
	}
	[Token(Token = "0x200057D")]
	[ExecuteInEditMode]
	public class HighlightEffect : MonoBehaviour
	{
		[Token(Token = "0x200057E")]
		private struct ModelMaterials
		{
			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool render;

			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool bakedTransform;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 currentPosition;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 currentRotation;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 currentScale;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool renderWasVisibleDuringSetup;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh mesh;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Mesh originalMesh;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Renderer renderer;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool isSkinnedMesh;

			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public NormalsOption normalsOption;

			[Token(Token = "0x4001AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material[] fxMatMask;

			[Token(Token = "0x4001AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Material[] fxMatSolidColor;

			[Token(Token = "0x4001AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Material[] fxMatSeeThroughInner;

			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Material[] fxMatSeeThroughBorder;

			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Material[] fxMatOverlay;

			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Material[] fxMatInnerGlow;

			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Matrix4x4 renderingMatrix;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public bool isCombined;

			[Token(Token = "0x1700020D")]
			public bool preserveOriginalMesh
			{
				[Token(Token = "0x60019F4")]
				[Address(RVA = "0xC7CEBC", Offset = "0xC7CEBC", VA = "0xC7CEBC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60019F5")]
			[Address(RVA = "0xC7CEDC", Offset = "0xC7CEDC", VA = "0xC7CEDC")]
			public void Init()
			{
			}
		}

		[Token(Token = "0x200057F")]
		private enum FadingState
		{
			[Token(Token = "0x4001AEC")]
			FadingOut = -1,
			[Token(Token = "0x4001AED")]
			NoFading,
			[Token(Token = "0x4001AEE")]
			FadingIn
		}

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightProfile profile;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("If enabled, settings will be synced with profile.")]
		public bool profileSync;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool previewInEditor;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TargetOptions effectGroup;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The layer that contains the affected objects by this effect when effectGroup is set to LayerMask.")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Only include objects whose names contains this text.")]
		public string effectNameFilter;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Combine meshes of all objects in this group affected by Highlight Effect reducing draw calls.")]
		public bool combineMeshes;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("The alpha threshold for transparent cutout objects. Pixels with alpha below this value will be discarded.")]
		[Range(0f, 1f)]
		public float alphaCutOff;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("If back facing triangles are ignored.Backfaces triangles are not visible but you may set this property to false to force highlight effects to act on those triangles as well.")]
		public bool cullBackFaces;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[Tooltip("Show highlight effects even if the object is not visible. If this object or its children use GPU Instancing tools, the MeshRenderer can be disabled although the object is visible. In this case, this option is useful to enable highlighting.")]
		public bool ignoreObjectVisibility;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[Tooltip("Support reflection probes. Enable only if you want the effects to be visible in reflections.")]
		public bool reflectionProbes;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[Tooltip("Enables GPU instancing. Reduces draw calls in outline and outer glow effects on platforms that support GPU instancing. Should be enabled by default.")]
		public bool GPUInstancing;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("Enables depth buffer clipping. Only applies to outline or outer glow in High Quality mode.")]
		public bool depthClip;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Normals handling option.")]
		public NormalsOption normalsOption;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Ignore highlighting on this object.")]
		public bool ignore;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool _highlighted;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float fadeInDuration;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float fadeOutDuration;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool flipY;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[Tooltip("Keeps the outline/glow size unaffected by object distance.")]
		public bool constantWidth;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("Mask to include or exclude certain submeshes. By default, all submeshes are included.")]
		public int subMeshMask;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 1f)]
		public float overlay;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[ColorUsage(true, true)]
		public Color overlayColor;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Range(0f, 1f)]
		public float overlayMinIntensity;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Range(0f, 1f)]
		public float overlayBlending;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(0f, 1f)]
		public float outline;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[ColorUsage(true, true)]
		public Color outlineColor;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float outlineWidth;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(1f, 8f)]
		public int outlineDownsampling;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Visibility outlineVisibility;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool outlineOptimalBlit;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool outlineBlitDebug;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public bool outlineIndependent;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Range(0f, 5f)]
		public float glow;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float glowWidth;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[Range(1f, 8f)]
		public int glowDownsampling;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[ColorUsage(true, true)]
		public Color glowHQColor;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Tooltip("When enabled, outer glow renders with dithering. When disabled, glow appears as a solid color.")]
		public bool glowDithering;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[Tooltip("Seed for the dithering effect")]
		public float glowMagicNumber1;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Tooltip("Another seed for the dithering effect that combines with first seed to create different patterns")]
		public float glowMagicNumber2;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float glowAnimationSpeed;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Visibility glowVisibility;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Tooltip("Performs a blit to screen only over the affected area, instead of a full-screen pass")]
		public bool glowOptimalBlit;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool glowBlitDebug;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		[Tooltip("Blends glow passes one after another. If this option is disabled, glow passes won't overlap (in this case, make sure the glow pass 1 has a smaller offset than pass 2, etc.)")]
		public bool glowBlendPasses;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Range(0f, 5f)]
		public float innerGlow;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[Range(0f, 2f)]
		public float innerGlowWidth;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[ColorUsage(true, true)]
		public Color innerGlowColor;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool targetFX;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[ColorUsage(true, true)]
		public Color targetFXColor;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform targetFXCenter;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float targetFXInitialScale;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float targetFXEndScale;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float targetFXStayDuration;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public LayerMask seeThroughOccluderMask;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[Range(0.01f, 0.6f)]
		public float seeThroughOccluderThreshold;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float seeThroughOccluderCheckInterval;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[Range(0f, 5f)]
		public float seeThroughIntensity;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[Range(0f, 1f)]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[Range(0f, 1f)]
		public float seeThroughNoise;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[Range(0f, 1f)]
		public float seeThroughBorder;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Color seeThroughBorderColor;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float seeThroughBorderWidth;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		[SerializeField]
		private ModelMaterials[] rms;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		[SerializeField]
		private int rmsCount;

		[NonSerialized]
		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Transform target;

		[NonSerialized]
		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float highlightStartTime;

		[NonSerialized]
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float targetFxStartTime;

		[Token(Token = "0x4001A80")]
		private const float TAU = 0.70711f;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material fxMatMask;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material fxMatSolidColor;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material fxMatSeeThroughInner;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material fxMatSeeThroughBorder;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Material fxMatOverlay;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Material fxMatClearStencil;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Material fxMatGlowRef;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Material fxMatInnerGlow;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Material fxMatOutlineRef;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Material fxMatTargetRef;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Material fxMatComposeGlowRef;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Material fxMatComposeOutlineRef;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Material fxMatBlurGlowRef;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Material fxMatBlurOutlineRef;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Material _fxMatOutline;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material _fxMatGlow;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Material _fxMatTarget;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Material _fxMatComposeGlow;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Material _fxMatComposeOutline;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Material _fxMatBlurGlow;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Material _fxMatBlurOutline;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Vector4[] offsets;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float fadeStartTime;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private FadingState fading;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private CommandBuffer cbMask;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private CommandBuffer cbSeeThrough;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private CommandBuffer cbGlow;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CommandBuffer cbOutline;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private CommandBuffer cbOverlay;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private CommandBuffer cbInnerGlow;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private CommandBuffer cbSmoothBlend;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int[] mipGlowBuffers;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private int[] mipOutlineBuffers;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private int glowRT;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private int outlineRT;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static Mesh quadMesh;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int sourceRT;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Matrix4x4 quadGlowMatrix;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Matrix4x4 quadOutlineMatrix;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Vector3[] corners;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private RenderTextureDescriptor sourceDesc;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private Color debugColor;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private Color blackColor;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private Visibility lastOutlineVisibility;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private bool requireUpdateMaterial;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x341")]
		private bool usingPipeline;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private float occlusionCheckLastTime;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private bool lastOcclusionTestResult;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
		private bool useGPUInstancing;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private MaterialPropertyBlock glowPropertyBlock;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private MaterialPropertyBlock outlinePropertyBlock;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static readonly List<Vector4> matDataDirection;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static readonly List<Vector4> matDataGlow;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static readonly List<Vector4> matDataColor;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static Matrix4x4[] matrices;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly List<HighlightEffect> effects;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private bool skipThisFrame;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		private int outlineOffsetsMin;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private int outlineOffsetsMax;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int glowOffsetsMin;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private int glowOffsetsMax;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private static CombineInstance[] combineInstances;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private Matrix4x4 matrix4X4Identity;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private List<Renderer> tempRR;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static List<Vector3> vertices;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static List<Vector3> normals;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static Vector3[] newNormals;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static int[] matches;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private static readonly Dictionary<Vector3, int> vv;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private static readonly Dictionary<int, Mesh> smoothMeshes;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private static readonly Dictionary<int, Mesh> reorientedMeshes;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private static readonly Dictionary<int, Mesh> combinedMeshes;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private static readonly List<Material> rendererSharedMaterials;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private int combinedMeshesHashId;

		[Token(Token = "0x4001ACB")]
		private const int MAX_VERTEX_COUNT = 65535;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private float hitInitialIntensity;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private float hitStartTime;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		private float hitFadeOutDuration;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private Color hitColor;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private bool hitActive;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private static List<HighlightSeeThroughOccluder> occluders;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private static Dictionary<Camera, int> occludersFrameCount;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private static CommandBuffer cbOccluder;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private static Material fxMatOccluder;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private static RaycastHit[] hits;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E1")]
		private bool cancelSeeThroughThisFrame;

		[Token(Token = "0x17000205")]
		public bool highlighted
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xC6FEA4", Offset = "0xC6FEA4", VA = "0xC6FEA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0xC6FEAC", Offset = "0xC6FEAC", VA = "0xC6FEAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		private Material fxMatOutline
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xC705C0", Offset = "0xC705C0", VA = "0xC705C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private Material fxMatGlow
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0xC70718", Offset = "0xC70718", VA = "0xC70718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		private Material fxMatTarget
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xC70870", Offset = "0xC70870", VA = "0xC70870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private Material fxMatComposeGlow
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xC709A0", Offset = "0xC709A0", VA = "0xC709A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private Material fxMatComposeOutline
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0xC70AD0", Offset = "0xC70AD0", VA = "0xC70AD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private Material fxMatBlurGlow
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0xC70C00", Offset = "0xC70C00", VA = "0xC70C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private Material fxMatBlurOutline
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xC70D30", Offset = "0xC70D30", VA = "0xC70D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000002")]
		public event OnObjectHighlightStartEvent OnObjectHighlightStart
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xC700C0", Offset = "0xC700C0", VA = "0xC700C0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0xC70160", Offset = "0xC70160", VA = "0xC70160")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public event OnObjectHighlightEndEvent OnObjectHighlightEnd
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xC70200", Offset = "0xC70200", VA = "0xC70200")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0xC702A0", Offset = "0xC702A0", VA = "0xC702A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public event OnRendererHighlightEvent OnRendererHighlightStart
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0xC70340", Offset = "0xC70340", VA = "0xC70340")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xC703E0", Offset = "0xC703E0", VA = "0xC703E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event OnTargetAnimatesEvent OnTargetAnimates
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xC70480", Offset = "0xC70480", VA = "0xC70480")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xC70520", Offset = "0xC70520", VA = "0xC70520")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xC70E60", Offset = "0xC70E60", VA = "0xC70E60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xC71E00", Offset = "0xC71E00", VA = "0xC71E00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xC73170", Offset = "0xC73170", VA = "0xC73170")]
		private void SRPAfterCameraRenders(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xC76A68", Offset = "0xC76A68", VA = "0xC76A68")]
		private void Reset()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xC76A6C", Offset = "0xC76A6C", VA = "0xC76A6C")]
		private void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xC76AF4", Offset = "0xC76AF4", VA = "0xC76AF4")]
		private void DestroyMaterialArray(Material[] mm)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xC76B4C", Offset = "0xC76B4C", VA = "0xC76B4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xC76DF8", Offset = "0xC76DF8", VA = "0xC76DF8")]
		public static void DrawEffectsNow([Optional] Camera cam)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xC76F90", Offset = "0xC76F90", VA = "0xC76F90")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xC76FC0", Offset = "0xC76FC0", VA = "0xC76FC0")]
		public void ProfileLoad(HighlightProfile profile)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xC77054", Offset = "0xC77054", VA = "0xC77054")]
		public void ProfileReload()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xC770DC", Offset = "0xC770DC", VA = "0xC770DC")]
		public void ProfileSaveChanges(HighlightProfile profile)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xC77170", Offset = "0xC77170", VA = "0xC77170")]
		public void ProfileSaveChanges()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xC771F8", Offset = "0xC771F8", VA = "0xC771F8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xC73210", Offset = "0xC73210", VA = "0xC73210")]
		private void DoOnRenderObject(Camera cam)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xC78500", Offset = "0xC78500", VA = "0xC78500")]
		private bool ComputeSmoothQuadMatrix(Camera cam, Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xC79B68", Offset = "0xC79B68", VA = "0xC79B68")]
		private void BuildMatrix(Camera cam, Vector3 scrMin, Vector3 scrMax, int border, ref Matrix4x4 quadMatrix)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xC788B8", Offset = "0xC788B8", VA = "0xC788B8")]
		private void SmoothGlow(int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xC78ED8", Offset = "0xC78ED8", VA = "0xC78ED8")]
		private void SmoothOutline(int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xC794F8", Offset = "0xC794F8", VA = "0xC794F8")]
		private void ComposeSmoothBlend(Visibility smoothGlowVisibility, Visibility smoothOutlineVisibility)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xC79DB4", Offset = "0xC79DB4", VA = "0xC79DB4")]
		private void InitMaterial(ref Material material, string shaderName)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xC79F44", Offset = "0xC79F44", VA = "0xC79F44")]
		public void SetTarget(Transform transform)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xC7A018", Offset = "0xC7A018", VA = "0xC7A018")]
		public void SetTargets(Transform transform, Renderer[] renderers)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xC6FEB4", Offset = "0xC6FEB4", VA = "0xC6FEB4")]
		public void SetHighlighted(bool state)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xC71A58", Offset = "0xC71A58", VA = "0xC71A58")]
		private void SetupMaterial()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xC7A0D0", Offset = "0xC7A0D0", VA = "0xC7A0D0")]
		private void SetupMaterial(Renderer[] rr)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xC7A8E4", Offset = "0xC7A8E4", VA = "0xC7A8E4")]
		private Renderer[] FindRenderersWithLayerInScene(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xC7AB1C", Offset = "0xC7AB1C", VA = "0xC7AB1C")]
		private Renderer[] FindRenderersWithLayerInChildren(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xC71780", Offset = "0xC71780", VA = "0xC71780")]
		private void CheckGeometrySupportDependencies()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xC7C5B0", Offset = "0xC7C5B0", VA = "0xC7C5B0")]
		private void CheckRequiredCommandBuffers()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xC7AD38", Offset = "0xC7AD38", VA = "0xC7AD38")]
		private void CheckCommandBuffers()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xC78458", Offset = "0xC78458", VA = "0xC78458")]
		private void CheckBlurCommandBuffer()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xC7AF5C", Offset = "0xC7AF5C", VA = "0xC7AF5C")]
		private void Fork(Material mat, ref Material[] mats, Mesh mesh)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xC78030", Offset = "0xC78030", VA = "0xC78030")]
		private void BakeTransform(int objIndex, bool duplicateMesh)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xC7C658", Offset = "0xC7C658", VA = "0xC7C658")]
		public void UpdateMaterialProperties(bool forceNow = false)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xC71EAC", Offset = "0xC71EAC", VA = "0xC71EAC")]
		private void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xC79D94", Offset = "0xC79D94", VA = "0xC79D94")]
		private int GetZTestValue(Visibility param)
		{
			return default(int);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xC7148C", Offset = "0xC7148C", VA = "0xC7148C")]
		private void BuildQuad()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xC77BE8", Offset = "0xC77BE8", VA = "0xC77BE8")]
		private bool CheckOcclusion(Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xC7C68C", Offset = "0xC7C68C", VA = "0xC7C68C")]
		public bool Includes(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xC7B708", Offset = "0xC7B708", VA = "0xC7B708")]
		private void AverageNormals(int objIndex)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xC7B120", Offset = "0xC7B120", VA = "0xC7B120")]
		private void ReorientNormals(int objIndex)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xC7BFFC", Offset = "0xC7BFFC", VA = "0xC7BFFC")]
		private void CombineMeshes()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xC7C758", Offset = "0xC7C758", VA = "0xC7C758")]
		public void HitFX(Color color, float fadeOutDuration, float initialIntensity = 1f)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xC7C7C0", Offset = "0xC7C7C0", VA = "0xC7C7C0")]
		public void TargetFX()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xC7C814", Offset = "0xC7C814", VA = "0xC7C814")]
		public static void RegisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xC7C93C", Offset = "0xC7C93C", VA = "0xC7C93C")]
		public static void UnregisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xC77220", Offset = "0xC77220", VA = "0xC77220")]
		public void RenderOccluders(Camera cam)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xC7CA0C", Offset = "0xC7CA0C", VA = "0xC7CA0C")]
		public HighlightEffect()
		{
		}
	}
	[Token(Token = "0x2000580")]
	[RequireComponent(typeof(HighlightEffect))]
	public class HighlightManager : MonoBehaviour
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Max Distance for target. 0 = infinity")]
		public float maxDistance;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HighlightEffect baseEffect;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HighlightEffect currentEffect;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentObject;

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xC7CF90", Offset = "0xC7CF90", VA = "0xC7CF90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xC7D248", Offset = "0xC7D248", VA = "0xC7D248")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xC7D4C8", Offset = "0xC7D4C8", VA = "0xC7D4C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xC7D250", Offset = "0xC7D250", VA = "0xC7D250")]
		private void SwitchesCollider(Transform newObject)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xC7D1A0", Offset = "0xC7D1A0", VA = "0xC7D1A0")]
		public static Camera GetCamera()
		{
			return null;
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xC7D738", Offset = "0xC7D738", VA = "0xC7D738")]
		public HighlightManager()
		{
		}
	}
	[Token(Token = "0x2000581")]
	[CreateAssetMenu(menuName = "Highlight Plus Profile", fileName = "Highlight Plus Profile", order = 100)]
	public class HighlightProfile : ScriptableObject
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetOptions effectGroup;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string effectNameFilter;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool combineMeshes;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 1f)]
		public float alphaCutOff;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullBackFaces;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool depthClip;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public NormalsOption normalsOption;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeInDuration;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fadeOutDuration;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool constantWidth;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 1f)]
		public float overlay;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ColorUsage(true, true)]
		public Color overlayColor;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0f, 1f)]
		public float overlayMinIntensity;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 1f)]
		public float overlayBlending;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Range(0f, 1f)]
		public float outline;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ColorUsage(true, true)]
		public Color outlineColor;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float outlineWidth;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(1f, 8f)]
		public int outlineDownsampling;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool outlineOptimalBlit;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Visibility outlineVisibility;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool outlineIndependent;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(0f, 5f)]
		public float glow;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float glowWidth;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(1f, 8f)]
		public int glowDownsampling;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ColorUsage(true, true)]
		public Color glowHQColor;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool glowDithering;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool glowOptimalBlit;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float glowMagicNumber1;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float glowMagicNumber2;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float glowAnimationSpeed;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Visibility glowVisibility;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool glowBlendPasses;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Range(0f, 5f)]
		public float innerGlow;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[Range(0f, 2f)]
		public float innerGlowWidth;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[ColorUsage(true, true)]
		public Color innerGlowColor;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool targetFX;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[ColorUsage(true, true)]
		public Color targetFXColor;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float targetFXInitialScale;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float targetFXEndScale;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float targetFXStayDuration;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public LayerMask seeThroughOccluderMask;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[Range(0.01f, 0.9f)]
		public float seeThroughOccluderThreshold;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float seeThroughOccluderCheckInterval;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[Range(0f, 5f)]
		public float seeThroughIntensity;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Range(0f, 1f)]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[Range(0f, 1f)]
		public float seeThroughNoise;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Range(0f, 1f)]
		public float seeThroughBorder;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public Color seeThroughBorderColor;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float seeThroughBorderWidth;

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xC7D760", Offset = "0xC7D760", VA = "0xC7D760")]
		public void Load(HighlightEffect effect)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xC7D9F4", Offset = "0xC7D9F4", VA = "0xC7D9F4")]
		public void Save(HighlightEffect effect)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xC7D920", Offset = "0xC7D920", VA = "0xC7D920")]
		private GlowPassData[] GetGlowPassesCopy(GlowPassData[] glowPasses)
		{
			return null;
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xC7DB9C", Offset = "0xC7DB9C", VA = "0xC7DB9C")]
		public HighlightProfile()
		{
		}
	}
	[Token(Token = "0x2000582")]
	public struct MeshData
	{
		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshCount;
	}
	[Token(Token = "0x2000583")]
	public enum DetectionMethod
	{
		[Token(Token = "0x4001B35")]
		Stencil,
		[Token(Token = "0x4001B36")]
		RayCast
	}
	[Token(Token = "0x2000584")]
	[ExecuteInEditMode]
	public class HighlightSeeThroughOccluder : MonoBehaviour
	{
		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DetectionMethod detectionMethod;

		[NonSerialized]
		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshData[] meshData;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Renderer> rr;

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xC7DCC0", Offset = "0xC7DCC0", VA = "0xC7DCC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xC7DCF8", Offset = "0xC7DCF8", VA = "0xC7DCF8")]
		private void Init()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xC7E144", Offset = "0xC7E144", VA = "0xC7E144")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xC7E19C", Offset = "0xC7E19C", VA = "0xC7E19C")]
		public HighlightSeeThroughOccluder()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public enum TriggerMode
	{
		[Token(Token = "0x4001B3B")]
		ColliderEventsOnlyOnThisObject,
		[Token(Token = "0x4001B3C")]
		RaycastOnThisObjectAndChildren,
		[Token(Token = "0x4001B3D")]
		Volume
	}
	[Token(Token = "0x2000586")]
	public enum RayCastSource
	{
		[Token(Token = "0x4001B3F")]
		MousePosition,
		[Token(Token = "0x4001B40")]
		CameraDirection
	}
	[Token(Token = "0x2000587")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(HighlightEffect))]
	public class HighlightTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000588")]
		[CompilerGenerated]
		private sealed class <DoRayCast>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightTrigger <>4__this;

			[Token(Token = "0x1700020E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A13")]
				[Address(RVA = "0xC7EC4C", Offset = "0xC7EC4C", VA = "0xC7EC4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A15")]
				[Address(RVA = "0xC7EC94", Offset = "0xC7EC94", VA = "0xC7EC94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xC7E590", Offset = "0xC7E590", VA = "0xC7E590")]
			[DebuggerHidden]
			public <DoRayCast>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xC7E900", Offset = "0xC7E900", VA = "0xC7E900", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xC7E904", Offset = "0xC7E904", VA = "0xC7E904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xC7EC54", Offset = "0xC7EC54", VA = "0xC7EC54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Used to trigger automatic highlighting including children objects.")]
		public TriggerMode triggerMode;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxDistance;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask volumeLayerMask;

		[Token(Token = "0x4001B46")]
		private const int MAX_RAYCAST_HITS = 100;

		[NonSerialized]
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider[] colliders;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider currentCollider;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] hits;

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xC7E1A4", Offset = "0xC7E1A4", VA = "0xC7E1A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xC7E278", Offset = "0xC7E278", VA = "0xC7E278")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xC7E51C", Offset = "0xC7E51C", VA = "0xC7E51C")]
		[IteratorStateMachine(typeof(<DoRayCast>d__11))]
		private IEnumerator DoRayCast()
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xC7E5B8", Offset = "0xC7E5B8", VA = "0xC7E5B8")]
		private void SwitchCollider(Collider newCollider)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xC7E764", Offset = "0xC7E764", VA = "0xC7E764")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xC7E798", Offset = "0xC7E798", VA = "0xC7E798")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xC7E7CC", Offset = "0xC7E7CC", VA = "0xC7E7CC")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xC7E644", Offset = "0xC7E644", VA = "0xC7E644")]
		private void Highlight(bool state)
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xC7E1A8", Offset = "0xC7E1A8", VA = "0xC7E1A8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xC7E800", Offset = "0xC7E800", VA = "0xC7E800")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xC7E87C", Offset = "0xC7E87C", VA = "0xC7E87C")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xC7E8F8", Offset = "0xC7E8F8", VA = "0xC7E8F8")]
		public HighlightTrigger()
		{
		}
	}
	[Token(Token = "0x2000589")]
	public static class ShaderParams
	{
		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int StereoRendering;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int Cull;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int BlurScale;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int Speed;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int ConstantWidth;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int CutOff;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int ZTest;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int Flip;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int Debug;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int Color;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int MainTex;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int OutlineWidth;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int OutlineZTest;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int OutlineDirection;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int OutlineColor;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int GlowZTest;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int GlowStencilOp;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int GlowDirection;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static int Glow;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static int GlowColor;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static int Glow2;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static int SeeThrough;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static int SeeThroughNoise;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static int SeeThroughBorderWidth;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static int SeeThroughBorderConstantWidth;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static int SeeThroughTintColor;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static int SeeThroughBorderColor;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static int InnerGlowWidth;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static int InnerGlowZTest;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static int OverlayData;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static int OverlayBackColor;

		[Token(Token = "0x4001B6C")]
		public const string SKW_ALPHACLIP = "HP_ALPHACLIP";

		[Token(Token = "0x4001B6D")]
		public const string SKW_DEPTHCLIP = "HP_DEPTHCLIP";
	}
}
namespace HighlightPlus.Demos
{
	[Token(Token = "0x200058A")]
	public class SphereHighlightEventExample : MonoBehaviour
	{
		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HighlightEffect effect;

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xC7F24C", Offset = "0xC7F24C", VA = "0xC7F24C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xC7F314", Offset = "0xC7F314", VA = "0xC7F314")]
		private bool ValidateHighlightObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xC7F31C", Offset = "0xC7F31C", VA = "0xC7F31C")]
		private void HighlightStart()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xC7F384", Offset = "0xC7F384", VA = "0xC7F384")]
		private void HighlightEnd()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xC7F3EC", Offset = "0xC7F3EC", VA = "0xC7F3EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xC7F43C", Offset = "0xC7F43C", VA = "0xC7F43C")]
		public SphereHighlightEventExample()
		{
		}
	}
}
namespace DynamicFogAndMist2
{
	[Token(Token = "0x200058B")]
	public enum MASK_TEXTURE_BRUSH_MODE
	{
		[Token(Token = "0x4001B70")]
		AddFog,
		[Token(Token = "0x4001B71")]
		RemoveFog,
		[Token(Token = "0x4001B72")]
		ColorFog
	}
	[Token(Token = "0x200058C")]
	[ExecuteInEditMode]
	public class DynamicFog : MonoBehaviour
	{
		[Token(Token = "0x200058D")]
		private struct FogOfWarTransition
		{
			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int x;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int y;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startTime;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float startDelay;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float duration;

			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int initialAlpha;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int targetAlpha;
		}

		[Token(Token = "0x200058E")]
		private static class ShaderParams
		{
			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int MainTex;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static int SunDir;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static int LightColor;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static int GradientTex;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static int Dithering;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static int WindDirection;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static int Density;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static int LightDiffusionPower;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static int LightDiffusionIntensity;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static int Color;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static int SecondColor;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public static int BoundsCenter;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static int BoundsExtents;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public static int Geom;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static int NoiseData;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public static int FogOfWarTex;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static int FogOfWarCenter;

			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public static int FogOfWarCenterAdjusted;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static int FogOfWarSize;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public static int TurbulenceAmount;

			[Token(Token = "0x4001BC1")]
			public const string SKW_FOW = "DF2_FOW";

			[Token(Token = "0x4001BC2")]
			public const string SKW_BOX_PROJECTION = "DF2_BOX_PROJECTION";

			[Token(Token = "0x4001BC3")]
			public const string SKW_DEPTH_CLIP = "DF2_DEPTH_CLIP";
		}

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableFogOfWar;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 fogOfWarCenter;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 fogOfWarSize;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(32f, 2048f)]
		public int fogOfWarTextureSize;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 100f)]
		public float fogOfWarRestoreDelay;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0f, 25f)]
		public float fogOfWarRestoreDuration;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(0f, 1f)]
		public float fogOfWarSmoothness;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool fogOfWarBlur;

		[Token(Token = "0x4001B7B")]
		private const int MAX_SIMULTANEOUS_TRANSITIONS = 10000;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool canDestroyFOWTexture;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool maskEditorEnabled;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MASK_TEXTURE_BRUSH_MODE maskBrushMode;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color maskBrushColor;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(1f, 128f)]
		public int maskBrushWidth;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 1f)]
		public float maskBrushFuzziness;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Range(0f, 1f)]
		public float maskBrushOpacity;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Texture2D _fogOfWarTexture;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FogOfWarTransition[] fowTransitionList;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastTransitionPos;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<int, int> fowTransitionIndices;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool requiresTextureUpload;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material fowBlur;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture fowBlur1;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture fowBlur2;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public DynamicFogProfile profile;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Tooltip("Fades in/out fog effect or blends with sub-volumes when reference object enters the fog volume.")]
		public bool enableFade;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float fadeDistance;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Tooltip("The controller (player or camera) to check if enters the fog volume.")]
		public Transform fadeController;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Tooltip("Enable sub-volume blending.")]
		public bool enableSubVolumes;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Tooltip("Allowed subVolumes. If no subvolume is specified, any subvolume entered by this controller will affect this fog volume.")]
		public List<DynamicFogSubVolume> subVolumes;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Tooltip("Shows the fog volume boundary in Game View")]
		public bool showBoundary;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Renderer r;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material fogMat;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material turbulenceMat;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material fogMat2D;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material turbulenceMat2D;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture rtTurbulence;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float turbAcum;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float windAcum;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 sunDir;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float dayLight;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D noiseTex;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Texture2D gradientTex;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Mesh debugMesh;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Material fogDebugMat;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private DynamicFogProfile activeProfile;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private DynamicFogProfile lerpProfile;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 lastControllerPosition;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float alphaMultiplier;

		[Token(Token = "0x17000210")]
		public Texture2D fogOfWarTexture
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xC7F444", Offset = "0xC7F444", VA = "0xC7F444")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xC7F44C", Offset = "0xC7F44C", VA = "0xC7F44C")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public Color32[] fogOfWarTextureData
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xC812B4", Offset = "0xC812B4", VA = "0xC812B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xC812BC", Offset = "0xC812BC", VA = "0xC812BC")]
			set
			{
			}
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xC7F674", Offset = "0xC7F674", VA = "0xC7F674")]
		private void FogOfWarInit()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xC7F984", Offset = "0xC7F984", VA = "0xC7F984")]
		private void FogOfWarDestroy()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xC7F594", Offset = "0xC7F594", VA = "0xC7F594")]
		public void ReloadFogOfWarTexture()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xC7F7EC", Offset = "0xC7F7EC", VA = "0xC7F7EC")]
		private void FogOfWarUpdateTexture()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xC7FA68", Offset = "0xC7FA68", VA = "0xC7FA68")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xC7FC3C", Offset = "0xC7FC3C", VA = "0xC7FC3C")]
		public void UpdateFogOfWar(bool forceUpload = false)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xC800DC", Offset = "0xC800DC", VA = "0xC800DC")]
		private void SetFowBlurTexture()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xC8038C", Offset = "0xC8038C", VA = "0xC8038C")]
		private void CreateFoWBlurRTs()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xC80588", Offset = "0xC80588", VA = "0xC80588")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xC805B4", Offset = "0xC805B4", VA = "0xC805B4")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xC80954", Offset = "0xC80954", VA = "0xC80954")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xC805DC", Offset = "0xC805DC", VA = "0xC805DC")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xC80978", Offset = "0xC80978", VA = "0xC80978")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xC80DB4", Offset = "0xC80DB4", VA = "0xC80DB4")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xC809B0", Offset = "0xC809B0", VA = "0xC809B0")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xC80DE8", Offset = "0xC80DE8", VA = "0xC80DE8")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xC8100C", Offset = "0xC8100C", VA = "0xC8100C")]
		public void ResetFogOfWarAlpha(Bounds bounds)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xC812A4", Offset = "0xC812A4", VA = "0xC812A4")]
		public void ResetFogOfWarAlpha(Vector3 position, Vector3 size)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xC81084", Offset = "0xC81084", VA = "0xC81084")]
		public void ResetFogOfWarAlpha(Vector3 position, float extentsX, float extentsZ)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xC7FAA8", Offset = "0xC7FAA8", VA = "0xC7FAA8")]
		public void ResetFogOfWar(byte alpha = byte.MaxValue)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xC7FE84", Offset = "0xC7FE84", VA = "0xC7FE84")]
		private void AddFogOfWarTransitionSlot(int x, int y, byte initialAlpha, byte targetAlpha, float delay, float duration)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xC813B4", Offset = "0xC813B4", VA = "0xC813B4")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xC81560", Offset = "0xC81560", VA = "0xC81560")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xC81B18", Offset = "0xC81B18", VA = "0xC81B18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xC81D28", Offset = "0xC81D28", VA = "0xC81D28")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xC81D2C", Offset = "0xC81D2C", VA = "0xC81D2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xC81E10", Offset = "0xC81E10", VA = "0xC81E10")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xC81EA4", Offset = "0xC81EA4", VA = "0xC81EA4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xC82AA0", Offset = "0xC82AA0", VA = "0xC82AA0")]
		private void UpdateNoise()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xC81648", Offset = "0xC81648", VA = "0xC81648")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xC824EC", Offset = "0xC824EC", VA = "0xC824EC")]
		private void ComputeActiveProfile()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xC83550", Offset = "0xC83550", VA = "0xC83550")]
		private float ComputeVolumeFade(Transform transform, float fadeDistance)
		{
			return default(float);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xC82DB0", Offset = "0xC82DB0", VA = "0xC82DB0")]
		private void ApplyProfileSettings()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xC838A4", Offset = "0xC838A4", VA = "0xC838A4")]
		public DynamicFog()
		{
		}
	}
	[Token(Token = "0x200058F")]
	public delegate void OnSettingsChanged();
	[Token(Token = "0x2000590")]
	[CreateAssetMenu(menuName = "Dynamic Fog \u008b& Mist/Fog Profile", fileName = "DynamicFogProfile", order = 1001)]
	public class DynamicFogProfile : ScriptableObject
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Appearance")]
		public float baseAltitude;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float densityLinear;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float densityExponential;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxHeight;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distanceMax;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color tintColor;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Gradient verticalGradient;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool boxProjection;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[Tooltip("Hides fog behing opaque objects")]
		public bool depthClip;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Header("Noise")]
		[Range(0f, 1f)]
		public float noiseColorBlend;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color noiseColor;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Horizontal scale of the noise/turbulences")]
		public float scale;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Range(-1f, 1f)]
		[Tooltip("Noise shift")]
		public float shift;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(0f, 1f)]
		[Tooltip("Attenuates noise with distance")]
		public float noiseDistanceAtten;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Header("Wind")]
		public float turbulence;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float speed;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("Wind direction")]
		public Vector3 direction;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(0f, 128f)]
		[Header("Directional Light")]
		public float lightDiffusionPower;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Range(0f, 1f)]
		public float lightDiffusionIntensity;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float brightness;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Header("Rendering")]
		[Range(0f, 2f)]
		public float dithering;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("The render queue for this renderer. By default, all transparent objects use a render queue of 3000. Use a lower value to render before all transparent objects.")]
		public int renderQueue;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Tooltip("Optional sorting layer Id (number) for this renderer. By default 0. Usually used to control the order with other transparent renderers, like Sprite Renderer.")]
		public int sortingLayerID;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("Optional sorting order for this renderer. Used to control the order with other transparent renderers, like Sprite Renderer.")]
		public int sortingOrder;

		[NonSerialized]
		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color[] gradientColors;

		[Token(Token = "0x4001BDE")]
		public const int GRADIENT_TEXTURE_WIDTH = 256;

		[Token(Token = "0x14000006")]
		public event OnSettingsChanged onSettingsChanged
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xC832A8", Offset = "0xC832A8", VA = "0xC832A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xC81C8C", Offset = "0xC81C8C", VA = "0xC81C8C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xC83D0C", Offset = "0xC83D0C", VA = "0xC83D0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xC83D10", Offset = "0xC83D10", VA = "0xC83D10")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xC83344", Offset = "0xC83344", VA = "0xC83344")]
		public void ValidateSettings()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xC8363C", Offset = "0xC8363C", VA = "0xC8363C")]
		public void Lerp(DynamicFogProfile p1, DynamicFogProfile p2, float t)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xC83D40", Offset = "0xC83D40", VA = "0xC83D40")]
		public DynamicFogProfile()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class DynamicFogSubVolume : MonoBehaviour
	{
		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DynamicFogProfile profile;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeDistance;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<DynamicFogSubVolume> subVolumes;

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xC83DA0", Offset = "0xC83DA0", VA = "0xC83DA0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xC83E34", Offset = "0xC83E34", VA = "0xC83E34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xC83F5C", Offset = "0xC83F5C", VA = "0xC83F5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xC8402C", Offset = "0xC8402C", VA = "0xC8402C")]
		public DynamicFogSubVolume()
		{
		}
	}
	[Token(Token = "0x2000592")]
	[ExecuteInEditMode]
	public class DynamicFogManager : MonoBehaviour, IDynamicFogManager
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFogManager _instance;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera mainCamera;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light sun;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Flip depth texture. Use only as a workaround to a bug in URP if the depth shows inverted in GameView. Alternatively you can enable MSAA or HDR instead of using this option.")]
		public bool flipDepthTexture;

		[Token(Token = "0x4001BE6")]
		private const string SKW_FLIP_DEPTH_TEXTURE = "DF2_FLIP_DEPTH_TEXTURE";

		[Token(Token = "0x17000212")]
		public string managerName
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xC840D4", Offset = "0xC840D4", VA = "0xC840D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public static DynamicFogManager instance
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xC829D0", Offset = "0xC829D0", VA = "0xC829D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xC8422C", Offset = "0xC8422C", VA = "0xC8422C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xC84474", Offset = "0xC84474", VA = "0xC84474")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xC8424C", Offset = "0xC8424C", VA = "0xC8424C")]
		private void SetupCamera()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xC84314", Offset = "0xC84314", VA = "0xC84314")]
		private void SetupLights()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xC84428", Offset = "0xC84428", VA = "0xC84428")]
		private void SetupDepthPrePass()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xC845F8", Offset = "0xC845F8", VA = "0xC845F8")]
		public static GameObject CreateFogVolume(string name)
		{
			return null;
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xC846C8", Offset = "0xC846C8", VA = "0xC846C8")]
		public static GameObject CreateFogSubVolume(string name)
		{
			return null;
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xC84798", Offset = "0xC84798", VA = "0xC84798")]
		public DynamicFogManager()
		{
		}
	}
	[Token(Token = "0x2000593")]
	public interface IDynamicFogManager
	{
		[Token(Token = "0x17000214")]
		string managerName
		{
			[Token(Token = "0x6001A5E")]
			get;
		}
	}
	[Token(Token = "0x2000594")]
	public static class Tools
	{
		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color ColorBlack;

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xC84478", Offset = "0xC84478", VA = "0xC84478")]
		public static void CheckCamera(ref Camera cam)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xC84114", Offset = "0xC84114", VA = "0xC84114")]
		public static DynamicFogManager CheckMainManager()
		{
			return null;
		}

		[Token(Token = "0x6001A61")]
		public static void CheckManager<T>(ref T manager) where T : Component
		{
		}
	}
}
namespace BzKovSoft.ObjectSlicerSamples
{
	[Token(Token = "0x2000595")]
	public class AdderSliceableAsync : MonoBehaviour
	{
		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xC847F0", Offset = "0xC847F0", VA = "0xC847F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xC84B10", Offset = "0xC84B10", VA = "0xC84B10")]
		public AdderSliceableAsync()
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class BzKnife : MonoBehaviour
	{
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandController handController;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _pos;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action onCut;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 _origin;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 _direction;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool droch;

		[Token(Token = "0x17000215")]
		public int SliceID
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xC84B18", Offset = "0xC84B18", VA = "0xC84B18")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xC84B20", Offset = "0xC84B20", VA = "0xC84B20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public Vector3 Origin
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xC84B84", Offset = "0xC84B84", VA = "0xC84B84")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000217")]
		public Vector3 BladeDirection
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xC84C20", Offset = "0xC84C20", VA = "0xC84C20")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000218")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0xC84D44", Offset = "0xC84D44", VA = "0xC84D44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000219")]
		public Vector3 RealMoveVector
		{
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0xC84E80", Offset = "0xC84E80", VA = "0xC84E80")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700021A")]
		public Vector3 MoveVector
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xC84F28", Offset = "0xC84F28", VA = "0xC84F28")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xC84B28", Offset = "0xC84B28", VA = "0xC84B28")]
		public void Cut()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xC84B44", Offset = "0xC84B44", VA = "0xC84B44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xC85014", Offset = "0xC85014", VA = "0xC85014")]
		public void BeginNewSlice()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xC85038", Offset = "0xC85038", VA = "0xC85038")]
		public BzKnife()
		{
		}
	}
	[Token(Token = "0x2000597")]
	[DisallowMultipleComponent]
	public class KnifeSliceableAsync : MonoBehaviour
	{
		[Token(Token = "0x2000598")]
		[CompilerGenerated]
		private sealed class <AddForceProcess>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KnifeSliceableAsync <>4__this;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Plane slicePlane;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Rigidbody> posRbs;

			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<Rigidbody> negRbs;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Rigidbody> slidedPosRbs;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Rigidbody> slidedNegRbs;

			[Token(Token = "0x1700021B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A7B")]
				[Address(RVA = "0xC864C4", Offset = "0xC864C4", VA = "0xC864C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A7D")]
				[Address(RVA = "0xC8650C", Offset = "0xC8650C", VA = "0xC8650C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A78")]
			[Address(RVA = "0xC85E28", Offset = "0xC85E28", VA = "0xC85E28")]
			[DebuggerHidden]
			public <AddForceProcess>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xC85E68", Offset = "0xC85E68", VA = "0xC85E68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0xC85E6C", Offset = "0xC85E6C", VA = "0xC85E6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xC864CC", Offset = "0xC864CC", VA = "0xC864CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IBzSliceableAsync _sliceableAsync;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterSlicerSampleFast _characterSlicerSampleFast;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EnemyMelee main;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool canCut;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 collisionPoint;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float minV;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform bladePoint;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 bladeVector;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform cutDirection;

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xC850CC", Offset = "0xC850CC", VA = "0xC850CC")]
		public void SetCanCut(bool state)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xC850D8", Offset = "0xC850D8", VA = "0xC850D8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xC859DC", Offset = "0xC859DC", VA = "0xC859DC")]
		private void Slice(BzKnife knife)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xC85B34", Offset = "0xC85B34", VA = "0xC85B34")]
		public void SetBodyParts(List<Rigidbody> slidedPosRbs, List<Rigidbody> slidedNegRbs, List<Rigidbody> notSlidedPosRbs, List<Rigidbody> notSlidedNegRbs, Plane slicePlane)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xC85D2C", Offset = "0xC85D2C", VA = "0xC85D2C")]
		[IteratorStateMachine(typeof(<AddForceProcess>d__12))]
		private IEnumerator AddForceProcess(List<Rigidbody> slidedPosRbs, List<Rigidbody> slidedNegRbs, List<Rigidbody> posRbs, List<Rigidbody> negRbs, Plane slicePlane)
		{
			return null;
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xC849F0", Offset = "0xC849F0", VA = "0xC849F0")]
		public void Set(IBzSliceableAsync sliceableAsync)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xC853BC", Offset = "0xC853BC", VA = "0xC853BC")]
		private void Check(BzKnife blade)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xC85E50", Offset = "0xC85E50", VA = "0xC85E50")]
		public KnifeSliceableAsync()
		{
		}
	}
	[Token(Token = "0x2000599")]
	public class MoveCamera : MonoBehaviour
	{
		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TurnSpeed;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MoveSpeed;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float yaw;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float pitch;

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xC86514", Offset = "0xC86514", VA = "0xC86514")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xC8691C", Offset = "0xC8691C", VA = "0xC8691C")]
		public MoveCamera()
		{
		}
	}
	[Token(Token = "0x200059A")]
	public class ObjectSlicerSample : BzSliceableObjectBase
	{
		[Token(Token = "0x200059B")]
		private class ResultData
		{
			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int vertexCount;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stopwatch stopwatch;

			[Token(Token = "0x6001A84")]
			[Address(RVA = "0xC86B50", Offset = "0xC86B50", VA = "0xC86B50")]
			public ResultData()
			{
			}
		}

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string drawText;

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xC8692C", Offset = "0xC8692C", VA = "0xC8692C", Slot = "9")]
		protected override BzSliceTryData PrepareData(Plane plane)
		{
			return null;
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xC86B58", Offset = "0xC86B58", VA = "0xC86B58", Slot = "10")]
		protected override void OnSliceFinished(BzSliceTryResult result)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xC86F20", Offset = "0xC86F20", VA = "0xC86F20")]
		public ObjectSlicerSample()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class SampleKnifeSlicer : MonoBehaviour
	{
		[Token(Token = "0x200059D")]
		[CompilerGenerated]
		private sealed class <SwingSword>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SampleKnifeSlicer <>4__this;

			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <transformB>5__2;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <f>5__3;

			[Token(Token = "0x1700021D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A8B")]
				[Address(RVA = "0xC87258", Offset = "0xC87258", VA = "0xC87258", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A8D")]
				[Address(RVA = "0xC872A0", Offset = "0xC872A0", VA = "0xC872A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A88")]
			[Address(RVA = "0xC8700C", Offset = "0xC8700C", VA = "0xC8700C")]
			[DebuggerHidden]
			public <SwingSword>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001A89")]
			[Address(RVA = "0xC8703C", Offset = "0xC8703C", VA = "0xC8703C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xC87040", Offset = "0xC87040", VA = "0xC87040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0xC87260", Offset = "0xC87260", VA = "0xC87260", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _blade;

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xC86F94", Offset = "0xC86F94", VA = "0xC86F94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xC86F98", Offset = "0xC86F98", VA = "0xC86F98")]
		[IteratorStateMachine(typeof(<SwingSword>d__2))]
		private IEnumerator SwingSword()
		{
			return null;
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xC87034", Offset = "0xC87034", VA = "0xC87034")]
		public SampleKnifeSlicer()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class SampleMouseSlicer : MonoBehaviour
	{
		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _sliceId;

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xC872A8", Offset = "0xC872A8", VA = "0xC872A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xC875E8", Offset = "0xC875E8", VA = "0xC875E8")]
		public SampleMouseSlicer()
		{
		}
	}
}
namespace BzKovSoft.ObjectSlicer
{
	[Token(Token = "0x200059F")]
	public class BzMeshData
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> Vertices;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> Normals;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Color> Colors;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Color32> Colors32;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector2> UV;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector2> UV2;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Vector2> UV3;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Vector2> UV4;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Vector4> Tangents;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<BoneWeight> BoneWeights;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly Matrix4x4[] Bindposes;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int[][] SubMeshes;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material[] Materials;

		[Token(Token = "0x1700021F")]
		public bool NormalsExists
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0xC875F0", Offset = "0xC875F0", VA = "0xC875F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		public bool ColorsExists
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0xC87600", Offset = "0xC87600", VA = "0xC87600")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000221")]
		public bool Colors32Exists
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0xC87610", Offset = "0xC87610", VA = "0xC87610")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000222")]
		public bool UVExists
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0xC87620", Offset = "0xC87620", VA = "0xC87620")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000223")]
		public bool UV2Exists
		{
			[Token(Token = "0x6001A94")]
			[Address(RVA = "0xC87630", Offset = "0xC87630", VA = "0xC87630")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000224")]
		public bool UV3Exists
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xC87640", Offset = "0xC87640", VA = "0xC87640")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000225")]
		public bool UV4Exists
		{
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0xC87650", Offset = "0xC87650", VA = "0xC87650")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000226")]
		public bool TangentsExists
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xC87660", Offset = "0xC87660", VA = "0xC87660")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000227")]
		public bool BoneWeightsExists
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0xC87670", Offset = "0xC87670", VA = "0xC87670")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000228")]
		public bool MaterialsExists
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xC87680", Offset = "0xC87680", VA = "0xC87680")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xC87690", Offset = "0xC87690", VA = "0xC87690")]
		public BzMeshData(Mesh initFrom, Material[] materials)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xC87CC8", Offset = "0xC87CC8", VA = "0xC87CC8")]
		public Mesh GenerateMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x20005A0")]
	public class BzMeshDataDissector
	{
		[Token(Token = "0x4001C1C")]
		private const float MinWidth = 0.001f;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IBzSliceAddapter _adapter;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Plane _plane;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _defaultSliceMaterial;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _sliced;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BzMeshData _meshDataNeg;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BzMeshData _meshDataPos;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[][] _subMeshes;

		[Token(Token = "0x17000229")]
		public Material DefaultSliceMaterial
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0xC87E8C", Offset = "0xC87E8C", VA = "0xC87E8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xC87E94", Offset = "0xC87E94", VA = "0xC87E94")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public BzMeshData SliceResultNeg
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xC87E9C", Offset = "0xC87E9C", VA = "0xC87E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public BzMeshData SliceResultPos
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0xC87EA4", Offset = "0xC87EA4", VA = "0xC87EA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public BzSliceConfiguration Configuration
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0xC87EAC", Offset = "0xC87EAC", VA = "0xC87EAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xC87EB4", Offset = "0xC87EB4", VA = "0xC87EB4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public List<PolyMeshData> CapsNeg
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0xC87EBC", Offset = "0xC87EBC", VA = "0xC87EBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xC87EC4", Offset = "0xC87EC4", VA = "0xC87EC4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public List<PolyMeshData> CapsPos
		{
			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0xC87ECC", Offset = "0xC87ECC", VA = "0xC87ECC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xC87ED4", Offset = "0xC87ED4", VA = "0xC87ED4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xC87EDC", Offset = "0xC87EDC", VA = "0xC87EDC")]
		public BzMeshDataDissector(Mesh mesh, Plane plane, Material[] materials, IBzSliceAddapter adapter, BzSliceConfiguration configuration)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xC8814C", Offset = "0xC8814C", VA = "0xC8814C")]
		public SliceResult Slice()
		{
			return default(SliceResult);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xC88310", Offset = "0xC88310", VA = "0xC88310")]
		private SliceResult SliceMesh(Material sectionViewMaterial)
		{
			return default(SliceResult);
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xC88BDC", Offset = "0xC88BDC", VA = "0xC88BDC")]
		private static void OptimizeEdgeTriangles(BzMeshDataEditor meshEditor, BzMeshData meshData, List<BzTriangle> bzTriangles)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xC8A314", Offset = "0xC8A314", VA = "0xC8A314")]
		public void RebuildNegMesh(Renderer meshRenderer)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xC8A3EC", Offset = "0xC8A3EC", VA = "0xC8A3EC")]
		public void RebuildPosMesh(Renderer meshRenderer)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xC8A16C", Offset = "0xC8A16C", VA = "0xC8A16C")]
		private static void EmptyRedundantIndex(int indexMiddle, int indexNext, List<BzTriangle> bzTriangles, bool[] trToDelete)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xC89DC0", Offset = "0xC89DC0", VA = "0xC89DC0")]
		private bool CheckNewMesh(BzMeshData meshData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xC8A4C4", Offset = "0xC8A4C4", VA = "0xC8A4C4")]
		private bool CheckMinWidth(BzMeshData meshData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xC89120", Offset = "0xC89120", VA = "0xC89120")]
		private static int[] MakeTriangleToList(List<BzTriangle> bzTriangles, List<BzTriangle> bzTrianglesExtra)
		{
			return null;
		}
	}
	[Token(Token = "0x20005A2")]
	internal class BzMeshDataEditor
	{
		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IndexVector> CapEdges;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IBzSliceAddapter _adapter;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Plane _planeLocal;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<IndexVector, int> _chashedOuterLines;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly BzMeshData _meshData;

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xC88AA8", Offset = "0xC88AA8", VA = "0xC88AA8")]
		public BzMeshDataEditor(BzMeshData meshData, Plane planeLocal, IBzSliceAddapter adapter)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xC8A6C0", Offset = "0xC8A6C0", VA = "0xC8A6C0")]
		public int GetIndexFor(int from, int to)
		{
			return default(int);
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xC8B794", Offset = "0xC8B794", VA = "0xC8B794")]
		private static void AddValue(List<Vector2> vectors, int from, int to, float ratioL)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xC892C0", Offset = "0xC892C0", VA = "0xC892C0")]
		public List<PolyMeshData> CapSlice(Material capMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xC896E4", Offset = "0xC896E4", VA = "0xC896E4")]
		public void DeleteUnusedVertices()
		{
		}

		[Token(Token = "0x6001AB8")]
		private static void DeleteUnusedItem<T>(bool[] used, List<T> elements)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xC8CCC8", Offset = "0xC8CCC8", VA = "0xC8CCC8")]
		private static bool TryAttachEdgeToList(IndexVector segment, LinkedLoop<int> toList)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xC8B8CC", Offset = "0xC8B8CC", VA = "0xC8B8CC")]
		internal List<LinkedLoop<int>> GetEdgeLoops()
		{
			return null;
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xC8CDAC", Offset = "0xC8CDAC", VA = "0xC8CDAC")]
		internal void EdgeLoops_JoinBySameValue(LinkedList<LinkedLoop<int>> edgeLoops)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xC89F7C", Offset = "0xC89F7C", VA = "0xC89F7C")]
		public LinkedList<LinkedLoop<int>> GetEdgeLoopsByIndex()
		{
			return null;
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xC8C420", Offset = "0xC8C420", VA = "0xC8C420")]
		private void AddMeshes(List<PolyMeshData> meshes)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xC8D16C", Offset = "0xC8D16C", VA = "0xC8D16C")]
		private void AddVertex(Vector3 vertex, Vector3? normal, Color? color, Color32? color32, Vector2? uv, Vector2? uv2, Vector2? uv3, Vector2? uv4, Vector4? tangent, BoneWeight? boneWeight)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xC8C9A8", Offset = "0xC8C9A8", VA = "0xC8C9A8")]
		private void DeleteEmptySubmeshes()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xC8B588", Offset = "0xC8B588", VA = "0xC8B588")]
		private float CalcGetRatio(int i1, int i2)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20005A4")]
	internal struct IndexVector : IEquatable<IndexVector>
	{
		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int From;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int To;

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xC8B580", Offset = "0xC8B580", VA = "0xC8B580")]
		public IndexVector(int from, int to)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xC8D818", Offset = "0xC8D818", VA = "0xC8D818", Slot = "4")]
		public bool Equals(IndexVector obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xC8D838", Offset = "0xC8D838", VA = "0xC8D838", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005A5")]
	internal class BzPoly
	{
		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LinkedLoop<int> _edgeLoop;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2[] _polyVertices2D;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly BzMeshData _meshData;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> _newTriangles;

		[Token(Token = "0x1700022F")]
		public bool Created
		{
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xC8DA48", Offset = "0xC8DA48", VA = "0xC8DA48")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0xC8DA50", Offset = "0xC8DA50", VA = "0xC8DA50")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xC8BB68", Offset = "0xC8BB68", VA = "0xC8BB68")]
		public BzPoly(BzMeshData meshData, LinkedLoop<int> edgeLoop, Vector3 normal, IBzSliceAddapter adapter)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xC8DC48", Offset = "0xC8DC48", VA = "0xC8DC48")]
		private List<int> MakeMesh(bool right)
		{
			return null;
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xC8DA5C", Offset = "0xC8DA5C", VA = "0xC8DA5C")]
		private Vector2[] ConvertV3ToV2(IBzSliceAddapter adapter, Vector3 normal)
		{
			return null;
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xC8E4E0", Offset = "0xC8E4E0", VA = "0xC8E4E0")]
		private static void CreateTriangle(List<int> triangles, int i1, int i2, int i3, bool right)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xC8E37C", Offset = "0xC8E37C", VA = "0xC8E37C")]
		private bool IsAllowedToCreateTriangle(LinkedLoop<int> linkList, int i1, int i2, int i3, bool right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xC8E7A4", Offset = "0xC8E7A4", VA = "0xC8E7A4")]
		private static float SideOfLine(ref Vector2 p, ref Vector2 a, ref Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xC8E704", Offset = "0xC8E704", VA = "0xC8E704")]
		private static bool PointInTriangle(ref Vector2 pt, ref Vector2 v1, ref Vector2 v2, ref Vector2 v3)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xC8BC94", Offset = "0xC8BC94", VA = "0xC8BC94")]
		public PolyMeshData GetMeshData()
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xC8EAEC", Offset = "0xC8EAEC", VA = "0xC8EAEC")]
		private Vector3 Normalize(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xC8E7CC", Offset = "0xC8E7CC", VA = "0xC8E7CC")]
		private void OptimizeData(out Vector2[] polyVertices2D, out int[] edgeValues, out int[] triangles)
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class PolyMeshData
	{
		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2[] uv;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] triangles;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoneWeight[] boneWeights;

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xC8FB1C", Offset = "0xC8FB1C", VA = "0xC8FB1C")]
		public PolyMeshData()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	[DisallowMultipleComponent]
	public abstract class BzSliceableBase : MonoBehaviour, IBzSliceableAsync
	{
		[Token(Token = "0x20005A8")]
		protected class AdapterAndMesh
		{
			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IBzSliceAddapter adapter;

			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0xC91304", Offset = "0xC91304", VA = "0xC91304")]
			public AdapterAndMesh()
			{
			}
		}

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform hips;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private int _sliceId;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[SerializeField]
		private float _lastSliceTime;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material _defaultSliceMaterial;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _asynchronously;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _delayBetweenSlices;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<SliceTry> _sliceTrys;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KnifeSliceableAsync ksa;

		[Token(Token = "0x17000230")]
		public Material DefaultSliceMaterial
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xC8FB24", Offset = "0xC8FB24", VA = "0xC8FB24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0xC8FB2C", Offset = "0xC8FB2C", VA = "0xC8FB2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public bool Asynchronously
		{
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xC8FB34", Offset = "0xC8FB34", VA = "0xC8FB34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xC8FB3C", Offset = "0xC8FB3C", VA = "0xC8FB3C")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xC8FB48", Offset = "0xC8FB48", VA = "0xC8FB48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xC8FBC4", Offset = "0xC8FBC4", VA = "0xC8FBC4")]
		private void StartSlice(BzSliceTryData sliceTryData, Action<BzSliceTryResult> callBack)
		{
		}

		[Token(Token = "0x6001ADB")]
		protected abstract AdapterAndMesh GetAdapterAndMesh(Renderer renderer);

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xC90278", Offset = "0xC90278", VA = "0xC90278", Slot = "6")]
		protected virtual void StartWorker(Action<object> method, object obj)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xC90308", Offset = "0xC90308", VA = "0xC90308")]
		private void WorkForWorker(object obj)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xC8FFB0", Offset = "0xC8FFB0", VA = "0xC8FFB0")]
		private void Work(SliceTry sliceTry)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xC9045C", Offset = "0xC9045C", VA = "0xC9045C", Slot = "7")]
		protected virtual void OnSliceFinishedWorkerThread(bool sliced, object addData)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xC90460", Offset = "0xC90460", VA = "0xC90460")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xC90134", Offset = "0xC90134", VA = "0xC90134")]
		private void SliceTryFinished(SliceTry sliceTry)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xC908E4", Offset = "0xC908E4", VA = "0xC908E4")]
		private void InvokeEvents(GameObject resultNeg, GameObject resultPos)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xC90538", Offset = "0xC90538", VA = "0xC90538")]
		private BzSliceTryResult ApplyChanges(SliceTry sliceTry)
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xC90DFC", Offset = "0xC90DFC", VA = "0xC90DFC", Slot = "8")]
		protected virtual void GetNewObjects(out GameObject resultObjNeg, out GameObject resultObjPos)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xC90D34", Offset = "0xC90D34", VA = "0xC90D34")]
		private static void DeleteRenderer(Renderer renderer)
		{
		}

		[Token(Token = "0x6001AE6")]
		protected abstract BzSliceTryData PrepareData(Plane plane);

		[Token(Token = "0x6001AE7")]
		protected abstract void OnSliceFinished(BzSliceTryResult result);

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xC90F74", Offset = "0xC90F74", VA = "0xC90F74", Slot = "4")]
		public void Slice(Plane plane, int sliceId, Action<BzSliceTryResult> callBack, KnifeSliceableAsync ksa)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xC90488", Offset = "0xC90488", VA = "0xC90488")]
		private SliceTry GetFinishedTask()
		{
			return null;
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xC90A88", Offset = "0xC90A88", VA = "0xC90A88")]
		private static BzMeshSliceResult GetItemResult(SliceTryItem sliceTryItem, Renderer rendererNeg, Renderer rendererPos)
		{
			return null;
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xC8FF50", Offset = "0xC8FF50", VA = "0xC8FF50")]
		private Renderer[] GetRenderers(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xC912C8", Offset = "0xC912C8", VA = "0xC912C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xC912EC", Offset = "0xC912EC", VA = "0xC912EC")]
		protected BzSliceableBase()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	[Obsolete("This component is obsolete, use BzSliceableObjectBase implementations")]
	[DisallowMultipleComponent]
	public class BzSliceableCollider : MonoBehaviour, IBzSliceable
	{
		[Token(Token = "0x20005AA")]
		private struct ColliderSliceResult
		{
			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Collider OriginalCollider;

			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BzMeshDataDissector MeshDissector;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SliceResult SliceResult;
		}

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material SectionViewMaterial;

		[Token(Token = "0x17000232")]
		public GameObject[] OutObjectsPositive
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xC9130C", Offset = "0xC9130C", VA = "0xC9130C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xC91314", Offset = "0xC91314", VA = "0xC91314")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public GameObject[] OutObjectsNegative
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xC9131C", Offset = "0xC9131C", VA = "0xC9131C", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xC91324", Offset = "0xC91324", VA = "0xC91324")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xC9132C", Offset = "0xC9132C", VA = "0xC9132C", Slot = "4")]
		public bool Slice(Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xC920A4", Offset = "0xC920A4", VA = "0xC920A4")]
		private void ReplaceColliders(ColliderSliceResult[] colliders, GameObject duplicate)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xC923E8", Offset = "0xC923E8", VA = "0xC923E8")]
		private static void AddCollider(Mesh mesh, PhysicMaterial material, GameObject go)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xC922C8", Offset = "0xC922C8", VA = "0xC922C8")]
		private void InvokeEvents(GameObject original, GameObject extra)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xC919BC", Offset = "0xC919BC", VA = "0xC919BC")]
		private ColliderSliceResult[] SliceColliders(Plane plane)
		{
			return null;
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xC92CAC", Offset = "0xC92CAC", VA = "0xC92CAC")]
		private ColliderSliceResult TrySliceCollider(Vector3 locPos, Collider collider, Mesh mesh, Plane plane)
		{
			return default(ColliderSliceResult);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xC91750", Offset = "0xC91750", VA = "0xC91750")]
		private bool CheckBounds(Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xC951F0", Offset = "0xC951F0", VA = "0xC951F0")]
		public BzSliceableCollider()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public abstract class BzSliceableObjectBase : BzSliceableBase
	{
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xC951F8", Offset = "0xC951F8", VA = "0xC951F8", Slot = "5")]
		protected override AdapterAndMesh GetAdapterAndMesh(Renderer renderer)
		{
			return null;
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xC953A0", Offset = "0xC953A0", VA = "0xC953A0")]
		protected BzSliceableObjectBase()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	[Obsolete("This component is obsolete, use BzSliceableObjectBase implementations")]
	[DisallowMultipleComponent]
	public class BzSliceableSimple : MonoBehaviour, IBzSliceable
	{
		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material SectionViewMaterial;

		[Token(Token = "0x17000234")]
		public GameObject[] OutObjectsPositive
		{
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xC953B8", Offset = "0xC953B8", VA = "0xC953B8", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0xC953C0", Offset = "0xC953C0", VA = "0xC953C0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public GameObject[] OutObjectsNegative
		{
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0xC953C8", Offset = "0xC953C8", VA = "0xC953C8", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0xC953D0", Offset = "0xC953D0", VA = "0xC953D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xC953D8", Offset = "0xC953D8", VA = "0xC953D8", Slot = "4")]
		public bool Slice(Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xC95A34", Offset = "0xC95A34", VA = "0xC95A34")]
		private void InvokeEvents(GameObject original, GameObject duplicate)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xC957C8", Offset = "0xC957C8", VA = "0xC957C8")]
		private bool CheckBounds(Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xC95B54", Offset = "0xC95B54", VA = "0xC95B54")]
		public BzSliceableSimple()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	internal class BzSliceColliderAddapter : IBzSliceAddapter
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Matrix4x4 _ltw;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] _vertices;

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xC95174", Offset = "0xC95174", VA = "0xC95174")]
		public BzSliceColliderAddapter(Vector3[] vertices, GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xC95B5C", Offset = "0xC95B5C", VA = "0xC95B5C", Slot = "4")]
		public Vector3 GetWorldPos(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xC95BA0", Offset = "0xC95BA0", VA = "0xC95BA0", Slot = "5")]
		public Vector3 GetWorldPos(BzMeshData meshData, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xC95C18", Offset = "0xC95C18", VA = "0xC95C18", Slot = "6")]
		public bool Check(BzMeshData meshData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xC95C20", Offset = "0xC95C20", VA = "0xC95C20", Slot = "7")]
		public void RebuildMesh(Mesh mesh, Material[] materials, Renderer meshRenderer)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xC95C60", Offset = "0xC95C60", VA = "0xC95C60", Slot = "8")]
		public Vector3 GetObjectCenterInWorldSpace()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005AE")]
	[DisallowMultipleComponent]
	public class BzSliceConfiguration : MonoBehaviour
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SliceType SliceType;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material SliceMaterial;

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xC95CB8", Offset = "0xC95CB8", VA = "0xC95CB8")]
		public BzSliceConfiguration()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public enum SliceType
	{
		[Token(Token = "0x4001C55")]
		Slice,
		[Token(Token = "0x4001C56")]
		Duplicate,
		[Token(Token = "0x4001C57")]
		KeepOne
	}
	[Token(Token = "0x20005B0")]
	internal class BzSliceMeshFilterAddapter : IBzSliceAddapter
	{
		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Matrix4x4 _ltw;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] _vertices;

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xC92028", Offset = "0xC92028", VA = "0xC92028")]
		public BzSliceMeshFilterAddapter(Vector3[] vertices, GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xC95CC0", Offset = "0xC95CC0", VA = "0xC95CC0", Slot = "4")]
		public Vector3 GetWorldPos(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xC95D04", Offset = "0xC95D04", VA = "0xC95D04", Slot = "5")]
		public Vector3 GetWorldPos(BzMeshData meshData, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xC95D7C", Offset = "0xC95D7C", VA = "0xC95D7C", Slot = "6")]
		public bool Check(BzMeshData meshData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xC95D84", Offset = "0xC95D84", VA = "0xC95D84", Slot = "7")]
		public void RebuildMesh(Mesh mesh, Material[] materials, Renderer meshRenderer)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xC95E10", Offset = "0xC95E10", VA = "0xC95E10", Slot = "8")]
		public Vector3 GetObjectCenterInWorldSpace()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005B1")]
	internal static class BzSlicerHelper
	{
		[Token(Token = "0x6001B12")]
		public static T GetSameComponentForDuplicate<T>(T c, GameObject original, GameObject duplicate) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x20005B2")]
	public class BzSliceTryData
	{
		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IComponentManager componentManager;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Plane plane;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public object addData;

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xC95E68", Offset = "0xC95E68", VA = "0xC95E68")]
		public BzSliceTryData()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class BzSliceTryResult
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BzMeshSliceResult[] meshItems;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool sliced;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly object addData;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject outObjectNeg;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject outObjectPos;

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xC908AC", Offset = "0xC908AC", VA = "0xC908AC")]
		public BzSliceTryResult(bool sliced, object addData)
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class BzMeshSliceResult
	{
		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BzSliceEdgeResult[] sliceEdgesNeg;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer rendererNeg;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BzSliceEdgeResult[] sliceEdgesPos;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer rendererPos;

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xC912B8", Offset = "0xC912B8", VA = "0xC912B8")]
		public BzMeshSliceResult()
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public class BzSliceEdgeResult
	{
		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PolyMeshData capsData;

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xC912C0", Offset = "0xC912C0", VA = "0xC912C0")]
		public BzSliceEdgeResult()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	internal struct BzTriangle
	{
		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int i1;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int i2;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int i3;

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xC95E70", Offset = "0xC95E70", VA = "0xC95E70")]
		public BzTriangle(int i1, int i2, int i3)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xC95E7C", Offset = "0xC95E7C", VA = "0xC95E7C")]
		public void DivideByPlane(BzMeshDataEditor meshDataEditorNeg, BzMeshDataEditor meshDataEditorPos, List<BzTriangle> trianglesNegSliced, List<BzTriangle> trianglesPosSliced, bool _side1, bool _side2, bool _side3)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xC95FE8", Offset = "0xC95FE8", VA = "0xC95FE8")]
		private static void CalculateOneTr(BzMeshDataEditor meshDataEditor, int neg, int rightA, int rightB, List<BzTriangle> trianglesSliced)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xC96178", Offset = "0xC96178", VA = "0xC96178")]
		private static void CalculateTwoTr(BzMeshDataEditor meshDataEditor, int pos, int negA, int negB, List<BzTriangle> trianglesSliced)
		{
		}
	}
	[Token(Token = "0x20005B7")]
	internal class ConvexSetResult
	{
		[Token(Token = "0x17000236")]
		public bool Success
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xC9637C", Offset = "0xC9637C", VA = "0xC9637C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0xC96384", Offset = "0xC96384", VA = "0xC96384")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xC96390", Offset = "0xC96390", VA = "0xC96390")]
		public void SetConvex(MeshCollider collider)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xC964C0", Offset = "0xC964C0", VA = "0xC964C0")]
		private void MessageHandler(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xC964C8", Offset = "0xC964C8", VA = "0xC964C8")]
		public ConvexSetResult()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class FallingObjGC : MonoBehaviour
	{
		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _enableLog;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _delaySec;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minPosY;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _nextTime;

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xC964D0", Offset = "0xC964D0", VA = "0xC964D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xC966EC", Offset = "0xC966EC", VA = "0xC966EC")]
		public FallingObjGC()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public interface IBzSliceable
	{
		[Token(Token = "0x17000237")]
		GameObject[] OutObjectsPositive
		{
			[Token(Token = "0x6001B23")]
			get;
		}

		[Token(Token = "0x17000238")]
		GameObject[] OutObjectsNegative
		{
			[Token(Token = "0x6001B24")]
			get;
		}

		[Token(Token = "0x6001B22")]
		bool Slice(Plane plane);
	}
	[Token(Token = "0x20005BA")]
	public interface IBzSliceableAsync
	{
		[Token(Token = "0x6001B25")]
		void Slice(Plane plane, int slicdId, Action<BzSliceTryResult> callBack, KnifeSliceableAsync ksa);
	}
	[Token(Token = "0x20005BB")]
	public interface IBzSliceAddapter
	{
		[Token(Token = "0x6001B26")]
		Vector3 GetWorldPos(int index);

		[Token(Token = "0x6001B27")]
		Vector3 GetWorldPos(BzMeshData meshData, int index);

		[Token(Token = "0x6001B28")]
		bool Check(BzMeshData meshData);

		[Token(Token = "0x6001B29")]
		void RebuildMesh(Mesh mesh, Material[] materials, Renderer meshRenderer);

		[Token(Token = "0x6001B2A")]
		Vector3 GetObjectCenterInWorldSpace();
	}
	[Token(Token = "0x20005BC")]
	public interface IComponentManager
	{
		[Token(Token = "0x17000239")]
		bool Success
		{
			[Token(Token = "0x6001B2B")]
			get;
		}

		[Token(Token = "0x6001B2C")]
		void OnSlicedWorkerThread(SliceTryItem[] items);

		[Token(Token = "0x6001B2D")]
		void OnSlicedMainThread(GameObject resultObjNeg, GameObject resultObjPos, Renderer[] renderersNeg, Renderer[] renderersPos, Transform hipsBone, [Optional] KnifeSliceableAsync ksa);
	}
	[Token(Token = "0x20005BD")]
	[DisallowMultipleComponent]
	public class LazyActionRunner : MonoBehaviour
	{
		[Token(Token = "0x20005BE")]
		[CompilerGenerated]
		private sealed class <ProcessSlicePostponeActions>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Action> actions;

			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LazyActionRunner <>4__this;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700023A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B36")]
				[Address(RVA = "0xC96A2C", Offset = "0xC96A2C", VA = "0xC96A2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B38")]
				[Address(RVA = "0xC96A74", Offset = "0xC96A74", VA = "0xC96A74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xC96814", Offset = "0xC96814", VA = "0xC96814")]
			[DebuggerHidden]
			public <ProcessSlicePostponeActions>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xC96910", Offset = "0xC96910", VA = "0xC96910", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xC96914", Offset = "0xC96914", VA = "0xC96914", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B37")]
			[Address(RVA = "0xC96A34", Offset = "0xC96A34", VA = "0xC96A34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Action> _postponeActions;

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xC96708", Offset = "0xC96708", VA = "0xC96708")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xC90A20", Offset = "0xC90A20", VA = "0xC90A20")]
		public void RunLazyActions()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xC96784", Offset = "0xC96784", VA = "0xC96784")]
		[IteratorStateMachine(typeof(<ProcessSlicePostponeActions>d__3))]
		private IEnumerator ProcessSlicePostponeActions(List<Action> actions)
		{
			return null;
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xC9683C", Offset = "0xC9683C", VA = "0xC9683C")]
		public void AddLazyAction(Action action)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xC96908", Offset = "0xC96908", VA = "0xC96908")]
		public LazyActionRunner()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class LinkedLoop<T>
	{
		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int size;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoopNode<T> first;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoopNode<T> last;

		[Token(Token = "0x6001B39")]
		public LinkedLoop()
		{
		}

		[Token(Token = "0x6001B3A")]
		public LinkedLoop(List<T> list)
		{
		}

		[Token(Token = "0x6001B3B")]
		public void AddFirst(LoopNode<T> node)
		{
		}

		[Token(Token = "0x6001B3C")]
		public void AddLast(LoopNode<T> node)
		{
		}

		[Token(Token = "0x6001B3D")]
		public void AddFirst(T value)
		{
		}

		[Token(Token = "0x6001B3E")]
		public void AddLast(T value)
		{
		}

		[Token(Token = "0x6001B3F")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001B40")]
		public void Reverse()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	public static class LinkedLoop
	{
		[Token(Token = "0x6001B41")]
		public static LinkedLoop<T> ConcatList<T>(LinkedLoop<T> listA, LinkedLoop<T> listB)
		{
			return null;
		}
	}
	[Token(Token = "0x20005C1")]
	public class LoopNode<T>
	{
		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal LinkedLoop<T> list;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T value;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoopNode<T> previous;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoopNode<T> next;

		[Token(Token = "0x6001B42")]
		public LoopNode(LinkedLoop<T> list, T value)
		{
		}

		[Token(Token = "0x6001B43")]
		public void Remove()
		{
		}

		[Token(Token = "0x6001B44")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005C2")]
	public class ObjectSlicerInitializer : MonoBehaviour
	{
		[Token(Token = "0x20005C3")]
		private class ObjectSlicerInitializerObj : BzSliceableObjectBase
		{
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xC96D18", Offset = "0xC96D18", VA = "0xC96D18", Slot = "9")]
			protected override BzSliceTryData PrepareData(Plane plane)
			{
				return null;
			}

			[Token(Token = "0x6001B49")]
			[Address(RVA = "0xC96EC4", Offset = "0xC96EC4", VA = "0xC96EC4", Slot = "10")]
			protected override void OnSliceFinished(BzSliceTryResult result)
			{
			}

			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0xC96EC8", Offset = "0xC96EC8", VA = "0xC96EC8")]
			public ObjectSlicerInitializerObj()
			{
			}
		}

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xC96A7C", Offset = "0xC96A7C", VA = "0xC96A7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xC96ADC", Offset = "0xC96ADC", VA = "0xC96ADC")]
		private static void Init()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xC96D10", Offset = "0xC96D10", VA = "0xC96D10")]
		public ObjectSlicerInitializer()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public enum SliceResult
	{
		[Token(Token = "0x4001C80")]
		Neg,
		[Token(Token = "0x4001C81")]
		Pos,
		[Token(Token = "0x4001C82")]
		Sliced,
		[Token(Token = "0x4001C83")]
		Duplicate
	}
	[Token(Token = "0x20005C6")]
	internal class SliceTry
	{
		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SliceTryItem[] items;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _finished;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BzSliceTryData sliceData;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<BzSliceTryResult> callBack;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool sliced;

		[Token(Token = "0x1700023C")]
		public bool Finished
		{
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0xC9129C", Offset = "0xC9129C", VA = "0xC9129C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0xC9044C", Offset = "0xC9044C", VA = "0xC9044C")]
			set
			{
			}
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xC8FFA8", Offset = "0xC8FFA8", VA = "0xC8FFA8")]
		public SliceTry()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class SliceTryItem
	{
		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BzMeshDataDissector meshDissector;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer meshRenderer;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SliceResult SliceResult;

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xC8FFA0", Offset = "0xC8FFA0", VA = "0xC8FFA0")]
		public SliceTryItem()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	internal class StaticComponentManager : IComponentManager
	{
		[Token(Token = "0x20005C9")]
		protected class ColliderSliceResult
		{
			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider OriginalCollider;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BzMeshDataDissector meshDissector;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SliceResult SliceResult;

			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0xC98214", Offset = "0xC98214", VA = "0xC98214")]
			public ColliderSliceResult()
			{
			}
		}

		[Token(Token = "0x20005CA")]
		protected class MeshColliderConf
		{
			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Mesh Mesh;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly PhysicMaterial Material;

			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0xC97F48", Offset = "0xC97F48", VA = "0xC97F48")]
			public MeshColliderConf(Mesh mesh, PhysicMaterial material)
			{
			}
		}

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly GameObject _originalObject;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly Plane _plane;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly ColliderSliceResult[] _colliderResults;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane slicePlane;

		[Token(Token = "0x1700023D")]
		public bool Success
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xC9700C", Offset = "0xC9700C", VA = "0xC9700C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xC96E40", Offset = "0xC96E40", VA = "0xC96E40")]
		public StaticComponentManager(GameObject go, Plane plane, Collider[] colliders)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xC9763C", Offset = "0xC9763C", VA = "0xC9763C", Slot = "5")]
		public void OnSlicedWorkerThread(SliceTryItem[] items)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xC976B4", Offset = "0xC976B4", VA = "0xC976B4", Slot = "6")]
		public void OnSlicedMainThread(GameObject resultObjNeg, GameObject resultObjPos, Renderer[] renderersNeg, Renderer[] renderersPos, Transform hips, KnifeSliceableAsync ksa)
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xC97770", Offset = "0xC97770", VA = "0xC97770")]
		protected void RepairColliders(GameObject resultNeg, GameObject resultPos, List<Collider> collidersNeg, List<Collider> collidersPos, KnifeSliceableAsync ksa)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xC97F8C", Offset = "0xC97F8C", VA = "0xC97F8C")]
		private static void AddCollider(MeshColliderConf colliderConf, GameObject go, LazyActionRunner lazyRunner, Collider originalCollider)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xC9701C", Offset = "0xC9701C", VA = "0xC9701C")]
		private static ColliderSliceResult[] SliceColliders(Plane plane, Collider[] colliders)
		{
			return null;
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xC980B0", Offset = "0xC980B0", VA = "0xC980B0")]
		protected static ColliderSliceResult PrepareSliceCollider(Vector3 locPos, Collider collider, Mesh mesh, Plane plane)
		{
			return null;
		}
	}
}
namespace BzKovSoft.ObjectSlicer.MeshGenerator
{
	[Token(Token = "0x20005CC")]
	public class Capsule
	{
		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xC94910", Offset = "0xC94910", VA = "0xC94910")]
		public static Mesh Create(float radius, float height, int direction, Vector3 center, int nbLong = 12, int nbLat = 4)
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xC98360", Offset = "0xC98360", VA = "0xC98360")]
		public static SliceResult IntersectsPlane(Transform transform, float radius, float height, int direction, Vector3 center, Plane plane)
		{
			return default(SliceResult);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xC984DC", Offset = "0xC984DC", VA = "0xC984DC")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	internal static class Cube
	{
		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xC9247C", Offset = "0xC9247C", VA = "0xC9247C")]
		public static Mesh Create(Vector3 size, Vector3 center)
		{
			return null;
		}
	}
	[Token(Token = "0x20005CE")]
	public static class IcoSphere
	{
		[Token(Token = "0x20005CF")]
		private struct TriangleIndices
		{
			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int V1;

			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly int V2;

			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly int V3;

			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xC984E4", Offset = "0xC984E4", VA = "0xC984E4")]
			public TriangleIndices(int v1, int v2, int v3)
			{
			}
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xC92E18", Offset = "0xC92E18", VA = "0xC92E18")]
		public static Mesh Create(float radius, Vector3 center, int recursionLevel = 1)
		{
			return null;
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xC984F0", Offset = "0xC984F0", VA = "0xC984F0")]
		private static int GetMiddlePoint(int p1, int p2, ref List<Vector3> vertices, ref Dictionary<long, int> cache, float radius)
		{
			return default(int);
		}
	}
}
namespace BzKovSoft.ObjectSlicer.EventHandlers
{
	[Token(Token = "0x20005D0")]
	[DisallowMultipleComponent]
	internal class BzDeleteSecondJoint : MonoBehaviour, IBzObjectSlicedEvent
	{
		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xC98778", Offset = "0xC98778", VA = "0xC98778", Slot = "4")]
		public void ObjectSliced(GameObject original, GameObject resultNeg, GameObject resultPos)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xC98A8C", Offset = "0xC98A8C", VA = "0xC98A8C")]
		public BzDeleteSecondJoint()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	[DisallowMultipleComponent]
	internal class BzFixMass : MonoBehaviour, IBzObjectSlicedEvent
	{
		[Token(Token = "0x20005D2")]
		[CompilerGenerated]
		private sealed class <NextFrame>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject resultNeg;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject resultPos;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public BzFixMass <>4__this;

			[Token(Token = "0x1700023E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B6E")]
				[Address(RVA = "0xC98F2C", Offset = "0xC98F2C", VA = "0xC98F2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B70")]
				[Address(RVA = "0xC98F74", Offset = "0xC98F74", VA = "0xC98F74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xC98B60", Offset = "0xC98B60", VA = "0xC98B60")]
			[DebuggerHidden]
			public <NextFrame>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0xC98C48", Offset = "0xC98C48", VA = "0xC98C48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xC98C4C", Offset = "0xC98C4C", VA = "0xC98C4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xC98F34", Offset = "0xC98F34", VA = "0xC98F34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xC98A94", Offset = "0xC98A94", VA = "0xC98A94", Slot = "4")]
		public void ObjectSliced(GameObject original, GameObject resultNeg, GameObject resultPos)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xC98ABC", Offset = "0xC98ABC", VA = "0xC98ABC")]
		[IteratorStateMachine(typeof(<NextFrame>d__1))]
		private IEnumerator NextFrame(GameObject resultNeg, GameObject resultPos)
		{
			return null;
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xC98B88", Offset = "0xC98B88", VA = "0xC98B88")]
		private Vector3 CalculateCenterOfMass(Mesh mesh)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xC98C40", Offset = "0xC98C40", VA = "0xC98C40")]
		public BzFixMass()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	[DisallowMultipleComponent]
	internal class BzFixMassSmart : MonoBehaviour, IBzObjectSlicedEvent
	{
		[Token(Token = "0x20005D4")]
		[CompilerGenerated]
		private sealed class <NextFrame>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject original;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject resultNeg;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject resultPos;

			[Token(Token = "0x17000240")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B7C")]
				[Address(RVA = "0xC998B0", Offset = "0xC998B0", VA = "0xC998B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B7E")]
				[Address(RVA = "0xC998F8", Offset = "0xC998F8", VA = "0xC998F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xC99040", Offset = "0xC99040", VA = "0xC99040")]
			[DebuggerHidden]
			public <NextFrame>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xC996D8", Offset = "0xC996D8", VA = "0xC996D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xC996DC", Offset = "0xC996DC", VA = "0xC996DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xC998B8", Offset = "0xC998B8", VA = "0xC998B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xC98F7C", Offset = "0xC98F7C", VA = "0xC98F7C", Slot = "4")]
		public void ObjectSliced(GameObject original, GameObject resultNeg, GameObject resultPos)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xC98F9C", Offset = "0xC98F9C", VA = "0xC98F9C")]
		[IteratorStateMachine(typeof(<NextFrame>d__1))]
		private IEnumerator NextFrame(GameObject original, GameObject resultNeg, GameObject resultPos)
		{
			return null;
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xC99068", Offset = "0xC99068", VA = "0xC99068")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xC991C0", Offset = "0xC991C0", VA = "0xC991C0")]
		private static float VolumeOfMesh(GameObject gameObject, out Vector3 center)
		{
			return default(float);
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xC993EC", Offset = "0xC993EC", VA = "0xC993EC")]
		private static float VolumeOfMesh(Mesh mesh, out Vector3 center)
		{
			return default(float);
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xC9969C", Offset = "0xC9969C", VA = "0xC9969C")]
		private static Vector3 GetTetrahedronCenter(Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xC99634", Offset = "0xC99634", VA = "0xC99634")]
		private static float SignedVolumeOfTriangle(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(float);
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xC996D0", Offset = "0xC996D0", VA = "0xC996D0")]
		public BzFixMassSmart()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	[DisallowMultipleComponent]
	internal class BzReaplyForce : MonoBehaviour, IBzObjectSlicedEvent
	{
		[Token(Token = "0x20005D6")]
		[CompilerGenerated]
		private sealed class <NextFrame>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject original;

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject resultNeg;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject resultPos;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B85")]
				[Address(RVA = "0xC99B70", Offset = "0xC99B70", VA = "0xC99B70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B87")]
				[Address(RVA = "0xC99BB8", Offset = "0xC99BB8", VA = "0xC99BB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xC999C4", Offset = "0xC999C4", VA = "0xC999C4")]
			[DebuggerHidden]
			public <NextFrame>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001B83")]
			[Address(RVA = "0xC999F4", Offset = "0xC999F4", VA = "0xC999F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xC999F8", Offset = "0xC999F8", VA = "0xC999F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xC99B78", Offset = "0xC99B78", VA = "0xC99B78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xC99900", Offset = "0xC99900", VA = "0xC99900", Slot = "4")]
		public void ObjectSliced(GameObject original, GameObject resultNeg, GameObject resultPos)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xC99920", Offset = "0xC99920", VA = "0xC99920")]
		[IteratorStateMachine(typeof(<NextFrame>d__1))]
		private IEnumerator NextFrame(GameObject original, GameObject resultNeg, GameObject resultPos)
		{
			return null;
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xC999EC", Offset = "0xC999EC", VA = "0xC999EC")]
		public BzReaplyForce()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public interface IBzObjectSlicedEvent
	{
		[Token(Token = "0x6001B88")]
		void ObjectSliced(GameObject original, GameObject resutlNeg, GameObject resultPos);
	}
}
namespace BzKovSoft.CharacterSlicerSamples
{
	[Token(Token = "0x20005D8")]
	public class CharacterSlicerSampleFast : BzSliceableCharacterBase, IDeadable
	{
		[Token(Token = "0x20005D9")]
		private class ResultData
		{
			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stopwatch stopwatch;

			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xC99D74", Offset = "0xC99D74", VA = "0xC99D74")]
			public ResultData()
			{
			}
		}

		[Token(Token = "0x20005DA")]
		[CompilerGenerated]
		private sealed class <SmoothDepenetration>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 velocityContinue;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 angularVelocityContinue;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Rigidbody[] <rigids>5__2;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float[] <maxVelocitys>5__3;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <t>5__4;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B9A")]
				[Address(RVA = "0xC9B324", Offset = "0xC9B324", VA = "0xC9B324", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B9C")]
				[Address(RVA = "0xC9B36C", Offset = "0xC9B36C", VA = "0xC9B36C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B97")]
			[Address(RVA = "0xC9AF8C", Offset = "0xC9AF8C", VA = "0xC9AF8C")]
			[DebuggerHidden]
			public <SmoothDepenetration>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001B98")]
			[Address(RVA = "0xC9B060", Offset = "0xC9B060", VA = "0xC9B060", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B99")]
			[Address(RVA = "0xC9B064", Offset = "0xC9B064", VA = "0xC9B064", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0xC9B32C", Offset = "0xC9B32C", VA = "0xC9B32C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int _maxSliceCount;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _bloodPrefub;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3 _prefubDirection;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool _convertToRagdoll;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[SerializeField]
		private bool _alignPrefSize;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action onEndSlice;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HighlightEffect highlightEffect;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string drawText;

		[Token(Token = "0x17000244")]
		public bool IsDead
		{
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xC99BC0", Offset = "0xC99BC0", VA = "0xC99BC0", Slot = "11")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0xC99BC8", Offset = "0xC99BC8", VA = "0xC99BC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xC99BD4", Offset = "0xC99BD4", VA = "0xC99BD4", Slot = "9")]
		protected override BzSliceTryData PrepareData(Plane plane)
		{
			return null;
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xC99D80", Offset = "0xC99D80", VA = "0xC99D80", Slot = "7")]
		protected override void OnSliceFinishedWorkerThread(bool sliced, object addData)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xC99E08", Offset = "0xC99E08", VA = "0xC99E08", Slot = "10")]
		protected override void OnSliceFinished(BzSliceTryResult result)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xC9A32C", Offset = "0xC9A32C", VA = "0xC9A32C")]
		private void ConvertToRagdoll(GameObject resultNeg, GameObject resultPos, LazyActionRunner lazyRunnerNeg, LazyActionRunner lazyRunnerPos)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xC9A22C", Offset = "0xC9A22C", VA = "0xC9A22C")]
		private void AddBlood(BzSliceTryResult result)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xC9A6DC", Offset = "0xC9A6DC", VA = "0xC9A6DC")]
		private void SetBleedingObjects(PolyMeshData meshData, Renderer renderer)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xC9AE28", Offset = "0xC9AE28", VA = "0xC9AE28")]
		private static Vector3 AVG(Vector3[] vertices)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xC9A488", Offset = "0xC9A488", VA = "0xC9A488")]
		private void ConvertToRagdoll(GameObject go, Vector3 velocityContinue, Vector3 angularVelocityContinue, LazyActionRunner lazyRunner)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xC9AEDC", Offset = "0xC9AEDC", VA = "0xC9AEDC")]
		[IteratorStateMachine(typeof(<SmoothDepenetration>d__19))]
		private static IEnumerator SmoothDepenetration(GameObject go, Vector3 velocityContinue, Vector3 angularVelocityContinue)
		{
			return null;
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xC9AFB4", Offset = "0xC9AFB4", VA = "0xC9AFB4")]
		public CharacterSlicerSampleFast()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	public class EnemyManager : MonoBehaviour
	{
		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _enemyPrefab;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _attachEnemiesTo;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IDeadable _enemy;

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xC9B374", Offset = "0xC9B374", VA = "0xC9B374")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xC9B43C", Offset = "0xC9B43C", VA = "0xC9B43C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xC9B658", Offset = "0xC9B658", VA = "0xC9B658")]
		public EnemyManager()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public interface IDeadable
	{
		[Token(Token = "0x17000247")]
		bool IsDead
		{
			[Token(Token = "0x6001BA0")]
			get;
		}
	}
}
namespace BzKovSoft.CharacterSlicer
{
	[Token(Token = "0x20005DD")]
	public abstract class BzSliceableCharacterBase : BzSliceableBase
	{
		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xC9B660", Offset = "0xC9B660", VA = "0xC9B660")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xC9B760", Offset = "0xC9B760", VA = "0xC9B760", Slot = "5")]
		protected override AdapterAndMesh GetAdapterAndMesh(Renderer renderer)
		{
			return null;
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xC9AFDC", Offset = "0xC9AFDC", VA = "0xC9AFDC")]
		protected BzSliceableCharacterBase()
		{
		}
	}
	[Token(Token = "0x20005DE")]
	internal class BzSliceSkinnedMeshAddapter : IBzSliceAddapter
	{
		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _position;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] _vertices;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Matrix4x4[] _charToW;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly BoneWeight[] _boneWeights;

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xC9B9E0", Offset = "0xC9B9E0", VA = "0xC9B9E0")]
		public BzSliceSkinnedMeshAddapter(SkinnedMeshRenderer renderer)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xC9BC6C", Offset = "0xC9BC6C", VA = "0xC9BC6C", Slot = "4")]
		public Vector3 GetWorldPos(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xC9BF5C", Offset = "0xC9BF5C", VA = "0xC9BF5C", Slot = "5")]
		public Vector3 GetWorldPos(BzMeshData meshData, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xC9C290", Offset = "0xC9C290", VA = "0xC9C290", Slot = "6")]
		public bool Check(BzMeshData meshData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xC9C298", Offset = "0xC9C298", VA = "0xC9C298", Slot = "7")]
		public void RebuildMesh(Mesh mesh, Material[] materials, Renderer meshRenderer)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xC9C340", Offset = "0xC9C340", VA = "0xC9C340", Slot = "8")]
		public Vector3 GetObjectCenterInWorldSpace()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005DF")]
	public static class CenterOfMassColliderBasedHelper
	{
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xC9C34C", Offset = "0xC9C34C", VA = "0xC9C34C")]
		public static bool CalculateCenter(Rigidbody rigidbody, List<Collider> possibleColliders, Rigidbody[] possibleRigids)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xC9C5D0", Offset = "0xC9C5D0", VA = "0xC9C5D0")]
		private static Vector3 GetColliderCenter(Collider collider)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xC9C538", Offset = "0xC9C538", VA = "0xC9C538")]
		private static List<Collider> GetColliders(Transform transform, List<Collider> possibleColliders, Rigidbody[] possibleRigids)
		{
			return null;
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xC9C860", Offset = "0xC9C860", VA = "0xC9C860")]
		private static void GetCollidersRec(Transform transform, List<Collider> colliders, List<Collider> possibleColliders, Rigidbody[] possibleRigids)
		{
		}

		[Token(Token = "0x6001BAE")]
		private static T GetComponent<T>(Transform child, T[] possibleComponents) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x20005E0")]
	internal class CharacterComponentManagerFast : StaticComponentManager, IComponentManager
	{
		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xC99D7C", Offset = "0xC99D7C", VA = "0xC99D7C")]
		public CharacterComponentManagerFast(GameObject go, Plane plane, Collider[] colliders)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xC9CA7C", Offset = "0xC9CA7C", VA = "0xC9CA7C", Slot = "6")]
		public new void OnSlicedMainThread(GameObject resultObjNeg, GameObject resultObjPos, Renderer[] renderersNeg, Renderer[] renderersPos, Transform hipsBone, KnifeSliceableAsync ksa)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xC9CB64", Offset = "0xC9CB64", VA = "0xC9CB64")]
		private static void OnCompletePerSide(List<Collider> colliders, GameObject go, Transform hips)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xC9D860", Offset = "0xC9D860", VA = "0xC9D860")]
		private static bool IsAlreadyConnected(Transform from, Transform to, List<Joint> joints, HashSet<Transform> ocupied)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xC9D6D0", Offset = "0xC9D6D0", VA = "0xC9D6D0")]
		private static bool RigidHaveColliders(Transform tr, List<Collider> colliders)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xC9DBE4", Offset = "0xC9DBE4", VA = "0xC9DBE4")]
		private static Joint CreateJoint(Transform itemA, Transform itemB)
		{
			return null;
		}
	}
	[Token(Token = "0x20005E1")]
	public class CharacterSlicerInitializer : MonoBehaviour
	{
		[Token(Token = "0x20005E2")]
		private class CharacterSlicerInitializerObj : BzSliceableCharacterBase
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xC9E714", Offset = "0xC9E714", VA = "0xC9E714", Slot = "9")]
			protected override BzSliceTryData PrepareData(Plane plane)
			{
				return null;
			}

			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xC9E82C", Offset = "0xC9E82C", VA = "0xC9E82C", Slot = "10")]
			protected override void OnSliceFinished(BzSliceTryResult result)
			{
			}

			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xC9E830", Offset = "0xC9E830", VA = "0xC9E830")]
			public CharacterSlicerInitializerObj()
			{
			}
		}

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xC9DEF0", Offset = "0xC9DEF0", VA = "0xC9DEF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xC9DEF4", Offset = "0xC9DEF4", VA = "0xC9DEF4")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xC9E3E4", Offset = "0xC9E3E4", VA = "0xC9E3E4")]
		private static Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xC9E70C", Offset = "0xC9E70C", VA = "0xC9E70C")]
		public CharacterSlicerInitializer()
		{
		}
	}
}
namespace VOO
{
	[Token(Token = "0x20005E4")]
	public class Inspect : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Inspect Parameters")]
		public float scrollSpeed;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 sensitivityRot;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 sensitivityMove;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 limitRotX;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 limitRotY;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 limitRotZ;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 limitPosX;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Light")]
		public GameObject lightScene;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slider lightSlider;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Menu")]
		public Animator menuAnimator;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Slider itemRotSlider;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider lightIntensitySlider;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject[] hidingObjects;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Toggle hideIcons;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("DEBUG")]
		public GameObject vspModel;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 modelPosition;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool isActive;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Inspect instance;

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xC9E984", Offset = "0xC9E984", VA = "0xC9E984")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xC9EA38", Offset = "0xC9EA38", VA = "0xC9EA38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xC9ED50", Offset = "0xC9ED50", VA = "0xC9ED50")]
		public void ExitGame()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xC9ED58", Offset = "0xC9ED58", VA = "0xC9ED58", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xC9ED64", Offset = "0xC9ED64", VA = "0xC9ED64", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xC9ED6C", Offset = "0xC9ED6C", VA = "0xC9ED6C")]
		public void UpdateMenuPosition()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xC9EE64", Offset = "0xC9EE64", VA = "0xC9EE64")]
		public void UpdateLightRotation()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xC9EF14", Offset = "0xC9EF14", VA = "0xC9EF14")]
		public void UpdateItemRotation()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xC9EF84", Offset = "0xC9EF84", VA = "0xC9EF84")]
		public void UpdateLightIntensity()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xC9F004", Offset = "0xC9F004", VA = "0xC9F004")]
		public void UpdateVisibleIcons()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xC9EA48", Offset = "0xC9EA48", VA = "0xC9EA48")]
		private void Update3DView()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xC9F07C", Offset = "0xC9F07C", VA = "0xC9F07C")]
		private Quaternion ClampRotationAroundAxis(Quaternion q, Vector2 limitRotation, int axisIndex)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xC9F188", Offset = "0xC9F188", VA = "0xC9F188")]
		public Inspect()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class RandomlyItemsSpawnInScene : MonoBehaviour
	{
		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rootSpawnItemsInScene;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] items;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitForSeconds;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rotationSpeed;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationAnglePerFrame;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject item;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentID;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RandomlyItemsSpawnInScene instance;

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xC9F210", Offset = "0xC9F210", VA = "0xC9F210")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xC9F538", Offset = "0xC9F538", VA = "0xC9F538")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xC9F674", Offset = "0xC9F674", VA = "0xC9F674")]
		public void BackItem()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xC9F6D4", Offset = "0xC9F6D4", VA = "0xC9F6D4")]
		public void NextItem()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xC9F274", Offset = "0xC9F274", VA = "0xC9F274")]
		private void SpawnItem(int id)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xC9F53C", Offset = "0xC9F53C", VA = "0xC9F53C")]
		private void UpdateItemRotation()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xC9F710", Offset = "0xC9F710", VA = "0xC9F710")]
		private int GetNextIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xC9F690", Offset = "0xC9F690", VA = "0xC9F690")]
		private int GetPreviousIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xC9F750", Offset = "0xC9F750", VA = "0xC9F750")]
		public RandomlyItemsSpawnInScene()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class SwayCamera : MonoBehaviour
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("ATTRIBUTES")]
		[SerializeField]
		private float amount;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float maxAmount;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float smoothMouseLook;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startPosition;

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xC9F76C", Offset = "0xC9F76C", VA = "0xC9F76C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xC9F79C", Offset = "0xC9F79C", VA = "0xC9F79C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xC9F920", Offset = "0xC9F920", VA = "0xC9F920")]
		public SwayCamera()
		{
		}
	}
}
