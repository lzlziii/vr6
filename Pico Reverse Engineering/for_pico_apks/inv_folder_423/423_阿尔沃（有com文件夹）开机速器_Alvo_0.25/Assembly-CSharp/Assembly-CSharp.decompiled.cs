using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Alvo;
using Alvo.AISystem;
using Alvo.Audio;
using Alvo.BodySystem;
using Alvo.DarkAudio;
using Alvo.Friends;
using Alvo.Hardpoint;
using Alvo.Missions;
using Alvo.Missions.UI;
using Alvo.Networking;
using Alvo.OculusAPI;
using Alvo.Party;
using Alvo.Perks;
using Alvo.Platforms;
using Alvo.Presence;
using Alvo.PrivateMatch;
using Alvo.Ranks;
using Alvo.SeasonalEvent;
using Alvo.TacticalGear;
using Alvo.Testing;
using Alvo.Tutorial;
using Alvo.UI;
using Alvo.UserInterface;
using Alvo.Utils;
using Alvo.Weapons;
using Alvo.Zombies;
using Alvo.Zombies.Scoring;
using Alvo.Zombies.UI;
using AzureDatabase;
using CameraFading;
using CurvedUI;
using DG.Tweening;
using ExitGames.Client.Photon;
using ExitGames.Client.Photon.LoadBalancing;
using ExitGames.Client.Photon.Voice;
using Il2CppDummyDll;
using Koenigz.PerfectCulling;
using Malee;
using NSL.LanguageTexts;
using Oculus.Platform;
using Oculus.Platform.Models;
using POpusCodec.Enums;
using Photon;
using Photon.Chat;
using Photon.Realtime;
using PlayStationVRExample;
using RootMotion.FinalIK;
using Sony.NP;
using TMPro;
using ThirdPersonCamera;
using UGUIMiniMap;
using Unity.Collections;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.XR;
using VolumetricLines;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class DogManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000003")]
	[CompilerGenerated]
	private sealed class <DogIntro>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DogManager <>4__this;

		[Token(Token = "0x400000A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Random <random>5__2;

		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <count>5__3;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600000D")]
			[Address(RVA = "0xCA205C", Offset = "0xCA205C", VA = "0xCA205C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000F")]
			[Address(RVA = "0xCA20A4", Offset = "0xCA20A4", VA = "0xCA20A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0xCA1BE8", Offset = "0xCA1BE8", VA = "0xCA1BE8")]
		[DebuggerHidden]
		public <DogIntro>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0xCA1E90", Offset = "0xCA1E90", VA = "0xCA1E90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0xCA1E94", Offset = "0xCA1E94", VA = "0xCA1E94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000E")]
		[Address(RVA = "0xCA2064", Offset = "0xCA2064", VA = "0xCA2064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000004")]
	[CompilerGenerated]
	private sealed class <DogIntroLocal>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DogManager <>4__this;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] positions;

		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public object[][] dataArray;

		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private System.Random <random>5__2;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <count>5__3;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000013")]
			[Address(RVA = "0xCA2398", Offset = "0xCA2398", VA = "0xCA2398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000015")]
			[Address(RVA = "0xCA23E0", Offset = "0xCA23E0", VA = "0xCA23E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0xCA1CAC", Offset = "0xCA1CAC", VA = "0xCA1CAC")]
		[DebuggerHidden]
		public <DogIntroLocal>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0xCA20AC", Offset = "0xCA20AC", VA = "0xCA20AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000012")]
		[Address(RVA = "0xCA20B0", Offset = "0xCA20B0", VA = "0xCA20B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000014")]
		[Address(RVA = "0xCA23A0", Offset = "0xCA23A0", VA = "0xCA23A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] m_Audioclips;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource[] m_AudioSource;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds delay;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds delay2;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AttackDog> m_AllAttackDogs;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xCA18B0", Offset = "0xCA18B0", VA = "0xCA18B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xCA19B0", Offset = "0xCA19B0", VA = "0xCA19B0")]
	public void PlayDogIntro()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xCA1A38", Offset = "0xCA1A38", VA = "0xCA1A38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xCA1B7C", Offset = "0xCA1B7C", VA = "0xCA1B7C")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xCA19D0", Offset = "0xCA19D0", VA = "0xCA19D0")]
	[IteratorStateMachine(typeof(<DogIntro>d__10))]
	private IEnumerator DogIntro()
	{
		return null;
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCA1C10", Offset = "0xCA1C10", VA = "0xCA1C10")]
	public void DogLocalPlayer(Vector3[] positions, object[][] dataArray)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xCA1C30", Offset = "0xCA1C30", VA = "0xCA1C30")]
	[IteratorStateMachine(typeof(<DogIntroLocal>d__12))]
	private IEnumerator DogIntroLocal(Vector3[] positions, object[][] dataArray)
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xCA1CD4", Offset = "0xCA1CD4", VA = "0xCA1CD4")]
	public void SetAudioVolume()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xCA1DC0", Offset = "0xCA1DC0", VA = "0xCA1DC0")]
	public DogManager()
	{
	}
}
[Token(Token = "0x2000005")]
public class NextPrefab : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_PrefabList;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_CurrentElementIndex;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_CurrentParticleIndex;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] m_CurrentElementList;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_CurrentParticle;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text m_ParticleName;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xCA23E8", Offset = "0xCA23E8", VA = "0xCA23E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xCA2578", Offset = "0xCA2578", VA = "0xCA2578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xCA2414", Offset = "0xCA2414", VA = "0xCA2414")]
	private void ShowParticle()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xCA25E4", Offset = "0xCA25E4", VA = "0xCA25E4")]
	public NextPrefab()
	{
	}
}
[Token(Token = "0x2000006")]
public class Rotator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ForwardX;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool ForwardY;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool ForwardZ;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool ReverseX;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ReverseY;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool ReverseZ;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xCA25F4", Offset = "0xCA25F4", VA = "0xCA25F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xCA27B4", Offset = "0xCA27B4", VA = "0xCA27B4")]
	public Rotator()
	{
	}
}
[Token(Token = "0x2000007")]
public class UserCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float targetHeight;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offsetFromWall;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxDistance;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minDistance;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float xSpeed;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ySpeed;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float yMinLimit;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float yMaxLimit;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float zoomRate;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rotationDampening;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float zoomDampening;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LayerMask collisionLayers;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool lockToRearOfTarget;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool allowMouseInputX;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool allowMouseInputY;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float desiredDistance;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float correctedDistance;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject userModel;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool inFirstPerson;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xCA27BC", Offset = "0xCA27BC", VA = "0xCA27BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xCA2894", Offset = "0xCA2894", VA = "0xCA2894")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xCA2950", Offset = "0xCA2950", VA = "0xCA2950")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xCA2EAC", Offset = "0xCA2EAC", VA = "0xCA2EAC")]
	private void ClampAngle(float angle)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xCA2EF8", Offset = "0xCA2EF8", VA = "0xCA2EF8")]
	public UserCamera()
	{
	}
}
[Token(Token = "0x2000008")]
public class play_anim_on_ui_button : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button Text;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip sound;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator ani;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas yourcanvas;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xCA2F48", Offset = "0xCA2F48", VA = "0xCA2F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xCA2FC8", Offset = "0xCA2FC8", VA = "0xCA2FC8")]
	public void Press()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xCA3090", Offset = "0xCA3090", VA = "0xCA3090")]
	public play_anim_on_ui_button()
	{
	}
}
[Token(Token = "0x2000009")]
public class ExplosionDemoGUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float reactivateTime;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Sun;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentNomber;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentInstance;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float sunIntensity;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float dpiScale;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xCA3098", Offset = "0xCA3098", VA = "0xCA3098")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xCA3278", Offset = "0xCA3278", VA = "0xCA3278")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xCA3570", Offset = "0xCA3570", VA = "0xCA3570")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xCA3710", Offset = "0xCA3710", VA = "0xCA3710")]
	public ExplosionDemoGUI()
	{
	}
}
[Token(Token = "0x200000A")]
public class ExplosionDemoReactivator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xCA3780", Offset = "0xCA3780", VA = "0xCA3780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xCA37D4", Offset = "0xCA37D4", VA = "0xCA37D4")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xCA389C", Offset = "0xCA389C", VA = "0xCA389C")]
	public ExplosionDemoReactivator()
	{
	}
}
[Token(Token = "0x200000B")]
public class ExplosionPlatformActivator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Effect;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DefaultRepeatTime;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float NearRepeatTime;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentTime;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentRepeatTime;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canUpdate;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xCA38AC", Offset = "0xCA38AC", VA = "0xCA38AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xCA3904", Offset = "0xCA3904", VA = "0xCA3904")]
	private void Init()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xCA3930", Offset = "0xCA3930", VA = "0xCA3930")]
	private void Update()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xCA3A00", Offset = "0xCA3A00", VA = "0xCA3A00")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xCA3A0C", Offset = "0xCA3A0C", VA = "0xCA3A0C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xCA3A18", Offset = "0xCA3A18", VA = "0xCA3A18")]
	public ExplosionPlatformActivator()
	{
	}
}
[Token(Token = "0x200000C")]
public class ExplosionsFPS : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xCA3A2C", Offset = "0xCA3A2C", VA = "0xCA3A2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xCA3A7C", Offset = "0xCA3A7C", VA = "0xCA3A7C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCA3B74", Offset = "0xCA3B74", VA = "0xCA3B74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCA3BC8", Offset = "0xCA3BC8", VA = "0xCA3BC8")]
	public ExplosionsFPS()
	{
	}
}
[Token(Token = "0x200000D")]
public class ExplosionsBillboard : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera Camera;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Active;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoInitCamera;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject myContainer;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform camT;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform contT;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCA3C30", Offset = "0xCA3C30", VA = "0xCA3C30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCA3E20", Offset = "0xCA3E20", VA = "0xCA3E20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xCA3FA4", Offset = "0xCA3FA4", VA = "0xCA3FA4")]
	public ExplosionsBillboard()
	{
	}
}
[Token(Token = "0x200000E")]
public class ExplosionsDeactivateRendererByTime : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelay;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xCA3FB4", Offset = "0xCA3FB4", VA = "0xCA3FB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xCA4004", Offset = "0xCA4004", VA = "0xCA4004")]
	private void DeactivateRenderer()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xCA4024", Offset = "0xCA4024", VA = "0xCA4024")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xCA408C", Offset = "0xCA408C", VA = "0xCA408C")]
	public ExplosionsDeactivateRendererByTime()
	{
	}
}
[Token(Token = "0x200000F")]
public class ExplosionsLightCurves : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canUpdate;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xCA409C", Offset = "0xCA409C", VA = "0xCA409C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xCA4118", Offset = "0xCA4118", VA = "0xCA4118")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xCA413C", Offset = "0xCA413C", VA = "0xCA413C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xCA41B0", Offset = "0xCA41B0", VA = "0xCA41B0")]
	public ExplosionsLightCurves()
	{
	}
}
[Token(Token = "0x2000010")]
[ExecuteInEditMode]
public class ExplosionsParticleSystemScaler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float particlesScale;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldScale;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xCA41EC", Offset = "0xCA41EC", VA = "0xCA41EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xCA41F8", Offset = "0xCA41F8", VA = "0xCA41F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xCA41FC", Offset = "0xCA41FC", VA = "0xCA41FC")]
	public ExplosionsParticleSystemScaler()
	{
	}
}
[Token(Token = "0x2000011")]
public class ExplosionsScaleCurves : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve ScaleCurveX;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ScaleCurveY;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve ScaleCurveZ;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 GraphTimeMultiplier;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 GraphScaleMultiplier;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startTime;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform t;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float evalX;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float evalY;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float evalZ;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xCA420C", Offset = "0xCA420C", VA = "0xCA420C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xCA4228", Offset = "0xCA4228", VA = "0xCA4228")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xCA424C", Offset = "0xCA424C", VA = "0xCA424C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xCA4310", Offset = "0xCA4310", VA = "0xCA4310")]
	public ExplosionsScaleCurves()
	{
	}
}
[Token(Token = "0x2000012")]
public class ExplosionsShaderColorGradient : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient Color;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeMultiplier;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canUpdate;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material matInstance;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int propertyID;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color oldColor;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xCA43E4", Offset = "0xCA43E4", VA = "0xCA43E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xCA4568", Offset = "0xCA4568", VA = "0xCA4568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xCA458C", Offset = "0xCA458C", VA = "0xCA458C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xCA4614", Offset = "0xCA4614", VA = "0xCA4614")]
	public ExplosionsShaderColorGradient()
	{
	}
}
[Token(Token = "0x2000013")]
public class ExplosionsShaderFloatCurves : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FloatPropertyCurve;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GraphScaleMultiplier;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material matInstance;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propertyID;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startTime;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xCA46A8", Offset = "0xCA46A8", VA = "0xCA46A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xCA480C", Offset = "0xCA480C", VA = "0xCA480C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xCA4830", Offset = "0xCA4830", VA = "0xCA4830")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xCA48A8", Offset = "0xCA48A8", VA = "0xCA48A8")]
	public ExplosionsShaderFloatCurves()
	{
	}
}
[Token(Token = "0x2000014")]
public class ExplosionsShaderQueue : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int AddQueue;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xCA491C", Offset = "0xCA491C", VA = "0xCA491C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xCA4A1C", Offset = "0xCA4A1C", VA = "0xCA4A1C")]
	private void SetProjectorQueue()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xCA4A98", Offset = "0xCA4A98", VA = "0xCA4A98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xCA4B2C", Offset = "0xCA4B2C", VA = "0xCA4B2C")]
	public ExplosionsShaderQueue()
	{
	}
}
[Token(Token = "0x2000015")]
internal class ExplosionsSpriteSheetAnimation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000016")]
	[CompilerGenerated]
	private sealed class <UpdateCorutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosionsSpriteSheetAnimation <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0xCA5480", Offset = "0xCA5480", VA = "0xCA5480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000063")]
			[Address(RVA = "0xCA54C8", Offset = "0xCA54C8", VA = "0xCA54C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0xCA4F70", Offset = "0xCA4F70", VA = "0xCA4F70")]
		[DebuggerHidden]
		public <UpdateCorutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0xCA5328", Offset = "0xCA5328", VA = "0xCA5328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0xCA532C", Offset = "0xCA532C", VA = "0xCA532C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000062")]
		[Address(RVA = "0xCA5488", Offset = "0xCA5488", VA = "0xCA5488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AnimationFPS;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int StartFrameOffset;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float StartDelay;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isInizialised;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int index;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int count;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int allCount;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float animationLifeTime;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isVisible;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isCorutineStarted;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer currentRenderer;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentInterpolatedTime;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float animationStartTime;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool animationStoped;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xCA4B3C", Offset = "0xCA4B3C", VA = "0xCA4B3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xCA4BA4", Offset = "0xCA4BA4", VA = "0xCA4BA4")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xCA4DCC", Offset = "0xCA4DCC", VA = "0xCA4DCC")]
	private void Play()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xCA4EC4", Offset = "0xCA4EC4", VA = "0xCA4EC4")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xCA4EE4", Offset = "0xCA4EE4", VA = "0xCA4EE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xCA4F14", Offset = "0xCA4F14", VA = "0xCA4F14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xCA4E5C", Offset = "0xCA4E5C", VA = "0xCA4E5C")]
	[IteratorStateMachine(typeof(<UpdateCorutine>d__26))]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xCA4F98", Offset = "0xCA4F98", VA = "0xCA4F98")]
	private void UpdateFrame()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xCA50BC", Offset = "0xCA50BC", VA = "0xCA50BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xCA5250", Offset = "0xCA5250", VA = "0xCA5250")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xCA52DC", Offset = "0xCA52DC", VA = "0xCA52DC")]
	public ExplosionsSpriteSheetAnimation()
	{
	}
}
[Token(Token = "0x2000017")]
public class FPSDemoGUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform muzzleFlashPoint;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Gun;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reactivateTime;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsMobile;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentNomber;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject currentInstance;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sunIntensity;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float dpiScale;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xCA54D0", Offset = "0xCA54D0", VA = "0xCA54D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xCA56E8", Offset = "0xCA56E8", VA = "0xCA56E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xCA593C", Offset = "0xCA593C", VA = "0xCA593C")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xCA5C24", Offset = "0xCA5C24", VA = "0xCA5C24")]
	private void Reactivator()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xCA5C5C", Offset = "0xCA5C5C", VA = "0xCA5C5C")]
	public FPSDemoGUI()
	{
	}
}
[Token(Token = "0x2000018")]
public class FPSDemoReactivator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartDelay;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xCA5CCC", Offset = "0xCA5CCC", VA = "0xCA5CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xCA5D1C", Offset = "0xCA5D1C", VA = "0xCA5D1C")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xCA5D60", Offset = "0xCA5D60", VA = "0xCA5D60")]
	public FPSDemoReactivator()
	{
	}
}
[Token(Token = "0x2000019")]
public class FPSFireManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200001A")]
	public class ImpactInfo
	{
		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialType.MaterialTypeEnum MaterialType;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ImpactEffect;

		[Token(Token = "0x600006F")]
		[Address(RVA = "0xCA6164", Offset = "0xCA6164", VA = "0xCA6164")]
		public ImpactInfo()
		{
		}
	}

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ImpactInfo[] ImpactElemets;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public float BulletDistance;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ImpactEffect;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xCA5D70", Offset = "0xCA5D70", VA = "0xCA5D70")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xCA6018", Offset = "0xCA6018", VA = "0xCA6018")]
	private GameObject GetImpactEffect(GameObject impactedGameObject)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xCA6104", Offset = "0xCA6104", VA = "0xCA6104")]
	public FPSFireManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class FPS_MouseLook
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lockCursor;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_cursorIsLocked;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xCA616C", Offset = "0xCA616C", VA = "0xCA616C")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xCA61BC", Offset = "0xCA61BC", VA = "0xCA61BC")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xCA658C", Offset = "0xCA658C", VA = "0xCA658C")]
	public void SetCursorLock(bool value)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xCA657C", Offset = "0xCA657C", VA = "0xCA657C")]
	public void UpdateCursorLock()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xCA65C0", Offset = "0xCA65C0", VA = "0xCA65C0")]
	private void InternalLockUpdate()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xCA6518", Offset = "0xCA6518", VA = "0xCA6518")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xCA6638", Offset = "0xCA6638", VA = "0xCA6638")]
	public FPS_MouseLook()
	{
	}
}
[Token(Token = "0x200001C")]
[RequireComponent(typeof(Rigidbody))]
[RequireComponent(typeof(CapsuleCollider))]
public class FPS_RigidbodyFirstPersonController : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200001D")]
	public class MovementSettings
	{
		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ForwardSpeed;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BackwardSpeed;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float StrafeSpeed;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RunMultiplier;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode RunKey;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float JumpForce;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve SlopeCurveModifier;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float CurrentTargetSpeed;

		[Token(Token = "0x6000084")]
		[Address(RVA = "0xCA74A8", Offset = "0xCA74A8", VA = "0xCA74A8")]
		public void UpdateDesiredTargetSpeed(Vector2 input)
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0xCA7664", Offset = "0xCA7664", VA = "0xCA7664")]
		public MovementSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200001E")]
	public class AdvancedSettings
	{
		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float groundCheckDistance;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float stickToGroundHelperDistance;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowDownRate;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool airControl;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("set it to 0.1 or more if you get stuck in wall")]
		public float shellOffset;

		[Token(Token = "0x6000086")]
		[Address(RVA = "0xCA7814", Offset = "0xCA7814", VA = "0xCA7814")]
		public AdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementSettings movementSettings;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AdvancedSettings advancedSettings;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody m_RigidBody;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CapsuleCollider m_Capsule;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_YRotation;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_GroundContactNormal;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_Jump;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_PreviouslyGrounded;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool m_Jumping;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool m_IsGrounded;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FPS_MouseLook mouseLook;

	[Token(Token = "0x17000007")]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0xCA666C", Offset = "0xCA666C", VA = "0xCA666C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000008")]
	public bool Grounded
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0xCA6688", Offset = "0xCA6688", VA = "0xCA6688")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000009")]
	public bool Jumping
	{
		[Token(Token = "0x6000079")]
		[Address(RVA = "0xCA6690", Offset = "0xCA6690", VA = "0xCA6690")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000A")]
	public bool Running
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0xCA6698", Offset = "0xCA6698", VA = "0xCA6698")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xCA66A0", Offset = "0xCA66A0", VA = "0xCA66A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xCA6758", Offset = "0xCA6758", VA = "0xCA6758")]
	private void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xCA693C", Offset = "0xCA693C", VA = "0xCA693C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xCA6FFC", Offset = "0xCA6FFC", VA = "0xCA6FFC")]
	private float SlopeMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xCA715C", Offset = "0xCA715C", VA = "0xCA715C")]
	private void StickToGroundHelper()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xCA6F58", Offset = "0xCA6F58", VA = "0xCA6F58")]
	private Vector2 GetInput()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xCA67C0", Offset = "0xCA67C0", VA = "0xCA67C0")]
	private void RotateView()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xCA6D8C", Offset = "0xCA6D8C", VA = "0xCA6D8C")]
	private void GroundCheck()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xCA7560", Offset = "0xCA7560", VA = "0xCA7560")]
	public FPS_RigidbodyFirstPersonController()
	{
	}
}
[Token(Token = "0x200001F")]
public class FPSLightCurves : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canUpdate;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xCA7830", Offset = "0xCA7830", VA = "0xCA7830")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xCA78AC", Offset = "0xCA78AC", VA = "0xCA78AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xCA78E4", Offset = "0xCA78E4", VA = "0xCA78E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xCA7974", Offset = "0xCA7974", VA = "0xCA7974")]
	public FPSLightCurves()
	{
	}
}
[Token(Token = "0x2000020")]
public class FPSRandomRotateAngle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RotateX;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RotateY;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RotateZ;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xCA79B0", Offset = "0xCA79B0", VA = "0xCA79B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xCA79CC", Offset = "0xCA79CC", VA = "0xCA79CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xCA7AA0", Offset = "0xCA7AA0", VA = "0xCA7AA0")]
	public FPSRandomRotateAngle()
	{
	}
}
[Token(Token = "0x2000021")]
public class FPSShaderColorGradient : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000022")]
	public enum RFX4_ShaderProperties
	{
		[Token(Token = "0x40000E3")]
		_TintColor,
		[Token(Token = "0x40000E4")]
		_Cutoff,
		[Token(Token = "0x40000E5")]
		_Color,
		[Token(Token = "0x40000E6")]
		_EmissionColor,
		[Token(Token = "0x40000E7")]
		_MaskPow,
		[Token(Token = "0x40000E8")]
		_Cutout,
		[Token(Token = "0x40000E9")]
		_Speed,
		[Token(Token = "0x40000EA")]
		_BumpAmt,
		[Token(Token = "0x40000EB")]
		_MainColor,
		[Token(Token = "0x40000EC")]
		_Distortion,
		[Token(Token = "0x40000ED")]
		_FresnelColor
	}

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int propertyID;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color startColor;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string shaderProperty;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer rend;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xCA7AB0", Offset = "0xCA7AB0", VA = "0xCA7AB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xCA7BF0", Offset = "0xCA7BF0", VA = "0xCA7BF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xCA7CCC", Offset = "0xCA7CCC", VA = "0xCA7CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xCA7D90", Offset = "0xCA7D90", VA = "0xCA7D90")]
	public FPSShaderColorGradient()
	{
	}
}
[Token(Token = "0x2000023")]
public class FPSShaderFloatCurves : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FloatPropertyCurve;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GraphScaleMultiplier;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material matInstance;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propertyID;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startTime;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xCA7E00", Offset = "0xCA7E00", VA = "0xCA7E00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xCA80B0", Offset = "0xCA80B0", VA = "0xCA80B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xCA80D4", Offset = "0xCA80D4", VA = "0xCA80D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xCA814C", Offset = "0xCA814C", VA = "0xCA814C")]
	public FPSShaderFloatCurves()
	{
	}
}
[Token(Token = "0x2000024")]
[ExecuteInEditMode]
public class FPS_Decal : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ScreenSpaceDecals;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float randomScalePercent;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer rend;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startScale;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xCA81C0", Offset = "0xCA81C0", VA = "0xCA81C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xCA81F0", Offset = "0xCA81F0", VA = "0xCA81F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xCA844C", Offset = "0xCA844C", VA = "0xCA844C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xCA8610", Offset = "0xCA8610", VA = "0xCA8610")]
	public FPS_Decal()
	{
	}
}
[Token(Token = "0x2000025")]
public class MaterialType : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000026")]
	public enum MaterialTypeEnum
	{
		[Token(Token = "0x40000FE")]
		Plaster,
		[Token(Token = "0x40000FF")]
		Metall,
		[Token(Token = "0x4000100")]
		Folliage,
		[Token(Token = "0x4000101")]
		Rock,
		[Token(Token = "0x4000102")]
		Wood,
		[Token(Token = "0x4000103")]
		Brick,
		[Token(Token = "0x4000104")]
		Concrete,
		[Token(Token = "0x4000105")]
		Dirt,
		[Token(Token = "0x4000106")]
		Glass,
		[Token(Token = "0x4000107")]
		Water
	}

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialTypeEnum TypeOfMaterial;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xCA8628", Offset = "0xCA8628", VA = "0xCA8628")]
	public MaterialType()
	{
	}
}
[Token(Token = "0x2000027")]
[ExecuteInEditMode]
public class FPS_CustomLight : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xCA8630", Offset = "0xCA8630", VA = "0xCA8630")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xCA89AC", Offset = "0xCA89AC", VA = "0xCA89AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xCA9594", Offset = "0xCA9594", VA = "0xCA9594")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xCA9714", Offset = "0xCA9714", VA = "0xCA9714")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xCA8BD4", Offset = "0xCA8BD4", VA = "0xCA8BD4")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xCA8E2C", Offset = "0xCA8E2C", VA = "0xCA8E2C")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xCA8870", Offset = "0xCA8870", VA = "0xCA8870")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xCA9984", Offset = "0xCA9984", VA = "0xCA9984")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xCA90B8", Offset = "0xCA90B8", VA = "0xCA90B8")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xCA875C", Offset = "0xCA875C", VA = "0xCA875C")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xCA9CC8", Offset = "0xCA9CC8", VA = "0xCA9CC8")]
	public FPS_CustomLight()
	{
	}
}
[Token(Token = "0x2000028")]
public class FPS_UseLight : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xCA9D1C", Offset = "0xCA9D1C", VA = "0xCA9D1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xCA9E14", Offset = "0xCA9E14", VA = "0xCA9E14")]
	public FPS_UseLight()
	{
	}
}
[Token(Token = "0x2000029")]
public class KeyboardManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("User defined")]
	[Tooltip("If the character is uppercase at the initialization")]
	public bool isUppercase;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Essentials")]
	public Transform keys;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InputField target;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Key[] keyList;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool capslockFlag;

	[Token(Token = "0x1700000B")]
	public static InputField Target
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xCA9E1C", Offset = "0xCA9E1C", VA = "0xCA9E1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xCA9F80", Offset = "0xCA9F80", VA = "0xCA9F80")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	private string Input
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xCA9FCC", Offset = "0xCA9FCC", VA = "0xCA9FCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0xCAA064", Offset = "0xCAA064", VA = "0xCAA064")]
		set
		{
		}
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xCAA118", Offset = "0xCAA118", VA = "0xCAA118")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xCAA174", Offset = "0xCAA174", VA = "0xCAA174")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xCAA494", Offset = "0xCAA494", VA = "0xCAA494")]
	public void Backspace()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xCAA4EC", Offset = "0xCAA4EC", VA = "0xCAA4EC")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xCAA3C0", Offset = "0xCAA3C0", VA = "0xCAA3C0")]
	public void CapsLock()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xCAA52C", Offset = "0xCAA52C", VA = "0xCAA52C")]
	public void Shift()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xCAA5F0", Offset = "0xCAA5F0", VA = "0xCAA5F0")]
	public void GenerateInput(string s)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xCAA694", Offset = "0xCAA694", VA = "0xCAA694")]
	public void ClickTest()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xCAA6FC", Offset = "0xCAA6FC", VA = "0xCAA6FC")]
	public KeyboardManager()
	{
	}
}
[Token(Token = "0x200002A")]
public class Alphabet : Key
{
	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xCAA704", Offset = "0xCAA704", VA = "0xCAA704", Slot = "5")]
	public override void CapsLock(bool isUppercase)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xCAA768", Offset = "0xCAA768", VA = "0xCAA768")]
	public Alphabet()
	{
	}
}
[Token(Token = "0x200002B")]
public class InputFocusHelper : UnityEngine.MonoBehaviour, ISelectHandler, IEventSystemHandler
{
	[Token(Token = "0x200002C")]
	[CompilerGenerated]
	private sealed class <ActivateInputFieldWithCaret>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputFocusHelper <>4__this;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BF")]
			[Address(RVA = "0xCAAA68", Offset = "0xCAAA68", VA = "0xCAAA68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C1")]
			[Address(RVA = "0xCAAAB0", Offset = "0xCAAAB0", VA = "0xCAAAB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0xCAA8EC", Offset = "0xCAA8EC", VA = "0xCAA8EC")]
		[DebuggerHidden]
		public <ActivateInputFieldWithCaret>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xCAA91C", Offset = "0xCAA91C", VA = "0xCAA91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xCAA920", Offset = "0xCAA920", VA = "0xCAA920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xCAAA70", Offset = "0xCAAA70", VA = "0xCAAA70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputField input;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xCAA778", Offset = "0xCAA778", VA = "0xCAA778")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xCAA7C8", Offset = "0xCAA7C8", VA = "0xCAA7C8", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xCAA884", Offset = "0xCAA884", VA = "0xCAA884")]
	[IteratorStateMachine(typeof(<ActivateInputFieldWithCaret>d__3))]
	private IEnumerator ActivateInputFieldWithCaret()
	{
		return null;
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xCAA914", Offset = "0xCAA914", VA = "0xCAA914")]
	public InputFocusHelper()
	{
	}
}
[Token(Token = "0x200002D")]
public class Key : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200002E")]
	public delegate void OnKeyClickedHandler(string key);

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Text key;

	[Token(Token = "0x14000001")]
	public event OnKeyClickedHandler OnKeyClicked
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xCAA324", Offset = "0xCAA324", VA = "0xCAA324")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xCAAAB8", Offset = "0xCAAAB8", VA = "0xCAAAB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xCAAB54", Offset = "0xCAAB54", VA = "0xCAAB54", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xCAAC58", Offset = "0xCAAC58", VA = "0xCAAC58", Slot = "5")]
	public virtual void CapsLock(bool isUppercase)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xCAAC5C", Offset = "0xCAAC5C", VA = "0xCAAC5C", Slot = "6")]
	public virtual void ShiftKey()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xCAA770", Offset = "0xCAA770", VA = "0xCAA770")]
	public Key()
	{
	}
}
[Token(Token = "0x200002F")]
public class Number : Key
{
	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xCAACE4", Offset = "0xCAACE4", VA = "0xCAACE4")]
	public Number()
	{
	}
}
[Token(Token = "0x2000030")]
public class Shift : Key
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text subscript;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xCAACEC", Offset = "0xCAACEC", VA = "0xCAACEC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xCAAD78", Offset = "0xCAAD78", VA = "0xCAAD78", Slot = "6")]
	public override void ShiftKey()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xCAAE04", Offset = "0xCAAE04", VA = "0xCAAE04")]
	public Shift()
	{
	}
}
[Token(Token = "0x2000031")]
public class Symbol : Key
{
	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xCAAE0C", Offset = "0xCAAE0C", VA = "0xCAAE0C")]
	public Symbol()
	{
	}
}
[Token(Token = "0x2000032")]
public class NL_AttachCargo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000033")]
	public enum ConnectionType
	{
		[Token(Token = "0x4000126")]
		FixedJoint,
		[Token(Token = "0x4000127")]
		ConfigurableJoint
	}

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rbCurrent;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rbTarget;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ConfigurableJoint confJoint;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FixedJoint fixedJoint;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CapsuleCollider trigger;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody connectPoint;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider[] excludeTriggers;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool excludedTrigger;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool inZone;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode attachKey;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ConnectionType connectionType;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("When using a Configurable Joint connection type this value will be used as an offset for the connection point.")]
	public float connectPointOffset;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float posY;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool isAttached;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xCAAE14", Offset = "0xCAAE14", VA = "0xCAAE14")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xCAAFDC", Offset = "0xCAAFDC", VA = "0xCAAFDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xCAB438", Offset = "0xCAB438", VA = "0xCAB438")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xCAB570", Offset = "0xCAB570", VA = "0xCAB570")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xCAB698", Offset = "0xCAB698", VA = "0xCAB698")]
	public NL_AttachCargo()
	{
	}
}
[Token(Token = "0x2000034")]
public class AlvoCalculations : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xCAB6B8", Offset = "0xCAB6B8", VA = "0xCAB6B8")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xCAB6F4", Offset = "0xCAB6F4", VA = "0xCAB6F4")]
	public AlvoCalculations()
	{
	}
}
[Token(Token = "0x2000035")]
public class AttackDog : PunBehaviour
{
	[Token(Token = "0x2000036")]
	[CompilerGenerated]
	private sealed class <PlayIntro>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttackDog <>4__this;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Random <random>5__2;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0xCAD17C", Offset = "0xCAD17C", VA = "0xCAD17C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F1")]
			[Address(RVA = "0xCAD1C4", Offset = "0xCAD1C4", VA = "0xCAD1C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xCABE20", Offset = "0xCABE20", VA = "0xCABE20")]
		[DebuggerHidden]
		public <PlayIntro>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xCACF8C", Offset = "0xCACF8C", VA = "0xCACF8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xCACF90", Offset = "0xCACF90", VA = "0xCACF90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xCAD184", Offset = "0xCAD184", VA = "0xCAD184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000037")]
	[CompilerGenerated]
	private sealed class <KillDelay>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttackDog <>4__this;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <delay>5__2;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F5")]
			[Address(RVA = "0xCAD378", Offset = "0xCAD378", VA = "0xCAD378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F7")]
			[Address(RVA = "0xCAD3C0", Offset = "0xCAD3C0", VA = "0xCAD3C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xCAC538", Offset = "0xCAC538", VA = "0xCAC538")]
		[DebuggerHidden]
		public <KillDelay>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xCAD1CC", Offset = "0xCAD1CC", VA = "0xCAD1CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xCAD1D0", Offset = "0xCAD1D0", VA = "0xCAD1D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xCAD380", Offset = "0xCAD380", VA = "0xCAD380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000038")]
	[CompilerGenerated]
	private sealed class <AttackAnimTiming>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttackDog <>4__this;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FB")]
			[Address(RVA = "0xCAD4F0", Offset = "0xCAD4F0", VA = "0xCAD4F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000FD")]
			[Address(RVA = "0xCAD538", Offset = "0xCAD538", VA = "0xCAD538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xCAC560", Offset = "0xCAC560", VA = "0xCAC560")]
		[DebuggerHidden]
		public <AttackAnimTiming>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xCAD3C8", Offset = "0xCAD3C8", VA = "0xCAD3C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xCAD3CC", Offset = "0xCAD3CC", VA = "0xCAD3CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xCAD4F8", Offset = "0xCAD4F8", VA = "0xCAD4F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000039")]
	[CompilerGenerated]
	private sealed class <KillDogTiming>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttackDog <>4__this;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0xCAD610", Offset = "0xCAD610", VA = "0xCAD610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0xCAD658", Offset = "0xCAD658", VA = "0xCAD658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xCAC610", Offset = "0xCAC610", VA = "0xCAC610")]
		[DebuggerHidden]
		public <KillDogTiming>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xCAD540", Offset = "0xCAD540", VA = "0xCAD540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xCAD544", Offset = "0xCAD544", VA = "0xCAD544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xCAD618", Offset = "0xCAD618", VA = "0xCAD618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LevelManager.SpawnedTargetData> myTargets;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_ID;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_Dead;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_Timer;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_HitPoints;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceFromPlayer;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform eyeLevel;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask m_ShootMask;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool init;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float soundTimer;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_ScanTimer;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator m_Animator;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NavMeshAgent m_NavMeshAgent;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LevelManager m_LevelManager;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AttackDogFSM m_FSM;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource introAS;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds delay;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaitForSeconds killWait;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int State;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xCAB6FC", Offset = "0xCAB6FC", VA = "0xCAB6FC", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xCABDB8", Offset = "0xCABDB8", VA = "0xCABDB8")]
	[IteratorStateMachine(typeof(<PlayIntro>d__18))]
	private IEnumerator PlayIntro()
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xCABE48", Offset = "0xCABE48", VA = "0xCABE48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xCABF40", Offset = "0xCABF40", VA = "0xCABF40")]
	public void Damage(float damage)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xCAC22C", Offset = "0xCAC22C", VA = "0xCAC22C")]
	private void OnFSMChanged(AttackDogFSM.State state)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xCAC2C0", Offset = "0xCAC2C0", VA = "0xCAC2C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xCAC4B0", Offset = "0xCAC4B0", VA = "0xCAC4B0")]
	[PunRPC]
	private void AttackAnim()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xCAC258", Offset = "0xCAC258", VA = "0xCAC258")]
	[IteratorStateMachine(typeof(<KillDelay>d__24))]
	private IEnumerator KillDelay()
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xCAC470", Offset = "0xCAC470", VA = "0xCAC470")]
	private void PlayRandomSound()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xCAC4D0", Offset = "0xCAC4D0", VA = "0xCAC4D0")]
	[IteratorStateMachine(typeof(<AttackAnimTiming>d__26))]
	private IEnumerator AttackAnimTiming()
	{
		return null;
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xCAC0DC", Offset = "0xCAC0DC", VA = "0xCAC0DC")]
	[PunRPC]
	private void DamageDog(float damage)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xCAC588", Offset = "0xCAC588", VA = "0xCAC588")]
	[PunRPC]
	private void KillDog()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xCAC5A8", Offset = "0xCAC5A8", VA = "0xCAC5A8")]
	[IteratorStateMachine(typeof(<KillDogTiming>d__31))]
	private IEnumerator KillDogTiming()
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xCAC46C", Offset = "0xCAC46C", VA = "0xCAC46C")]
	private void DestroyDog()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xCAC638", Offset = "0xCAC638", VA = "0xCAC638")]
	private void NetDestroy()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xCAC780", Offset = "0xCAC780", VA = "0xCAC780")]
	private bool FindTarget(float rangeCanEngage, out Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xCABB14", Offset = "0xCABB14", VA = "0xCABB14")]
	private void SetupTeamMask(LevelManager levelManager, int team)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xCACE40", Offset = "0xCACE40", VA = "0xCACE40")]
	public AttackDog()
	{
	}
}
[Token(Token = "0x200003A")]
public class Drone : PunBehaviour
{
	[Token(Token = "0x200003B")]
	[CompilerGenerated]
	private sealed class <KillDelay>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerData data;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Drone <>4__this;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <delay>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0xCAF9D4", Offset = "0xCAF9D4", VA = "0xCAF9D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011C")]
			[Address(RVA = "0xCAFA1C", Offset = "0xCAFA1C", VA = "0xCAFA1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0xCAF200", Offset = "0xCAF200", VA = "0xCAF200")]
		[DebuggerHidden]
		public <KillDelay>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0xCAF8E8", Offset = "0xCAF8E8", VA = "0xCAF8E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0xCAF8EC", Offset = "0xCAF8EC", VA = "0xCAF8EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0xCAF9DC", Offset = "0xCAF9DC", VA = "0xCAF9DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003C")]
	[CompilerGenerated]
	private sealed class <DestroyTiming>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Drone <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000120")]
			[Address(RVA = "0xCAFA84", Offset = "0xCAFA84", VA = "0xCAFA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000122")]
			[Address(RVA = "0xCAFACC", Offset = "0xCAFACC", VA = "0xCAFACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0xCAF468", Offset = "0xCAF468", VA = "0xCAF468")]
		[DebuggerHidden]
		public <DestroyTiming>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0xCAFA24", Offset = "0xCAFA24", VA = "0xCAFA24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0xCAFA28", Offset = "0xCAFA28", VA = "0xCAFA28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0xCAFA8C", Offset = "0xCAFA8C", VA = "0xCAFA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LevelManager m_LevelManager;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SpawnedTarget> m_NewTargets;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavMeshPath m_PendingPath;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NavMeshAgent m_NavMeshAgent;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_Init;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool m_HasTarget;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_Transform;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_TargetTransform;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerData m_currentTarget;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] m_Blades;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_RotationSpeed;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 m_LocalVelocity;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 m_PreviousVelocity;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float m_TemporaryHeight;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_Timer;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform m_BodyAxis;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float zMinLimit;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float zMaxLimit;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float xMinLimit;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float xMaxLimit;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float rotationZAxis;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float rotationXAxis;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float curDir;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float vertSpeed;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 curNormal;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Range(0.2f, 25f)]
	public float m_TurnSpeed;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_BodyPositionLerp;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_HideObject;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_Explosion;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float m_KillTimer;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[HideInInspector]
	public bool m_Stop;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	public bool m_Dead;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LayerMask l;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform[] at;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSource AudioSource;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioSource ExplosionAudioSource;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 m_DefaultBodyLocalPos;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 m_CurrentBodyPos;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float scanTimer;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float tim;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private WaitForSeconds waitDestroy;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<LevelManager.SpawnedTargetData> myTargets;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float m_HitPoints;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xCAD660", Offset = "0xCAD660", VA = "0xCAD660", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xCADBA4", Offset = "0xCADBA4", VA = "0xCADBA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xCADC9C", Offset = "0xCADC9C", VA = "0xCADC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xCAF09C", Offset = "0xCAF09C", VA = "0xCAF09C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xCAF164", Offset = "0xCAF164", VA = "0xCAF164")]
	public void su(float t, LevelManager l)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xCAE3D8", Offset = "0xCAE3D8", VA = "0xCAE3D8")]
	private void Blades()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xCAE100", Offset = "0xCAE100", VA = "0xCAE100")]
	private void Turning()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xCAE494", Offset = "0xCAE494", VA = "0xCAE494")]
	private void c()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xCAF18C", Offset = "0xCAF18C", VA = "0xCAF18C")]
	[IteratorStateMachine(typeof(<KillDelay>d__48))]
	private IEnumerator KillDelay(PlayerData data)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xCAE844", Offset = "0xCAE844", VA = "0xCAE844")]
	public void Explode()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xCAF228", Offset = "0xCAF228", VA = "0xCAF228")]
	[PunRPC]
	private void ExplodeDroneMsg()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xCADB58", Offset = "0xCADB58", VA = "0xCADB58")]
	private void UnExplode()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xCAF400", Offset = "0xCAF400", VA = "0xCAF400")]
	[IteratorStateMachine(typeof(<DestroyTiming>d__53))]
	private IEnumerator DestroyTiming()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xCAF490", Offset = "0xCAF490", VA = "0xCAF490")]
	private void NetDestroy()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xCAE96C", Offset = "0xCAE96C", VA = "0xCAE96C")]
	public Transform GetTarget(LayerMask targetMask, PlayerData myPlayerData)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xCAD99C", Offset = "0xCAD99C", VA = "0xCAD99C")]
	public void SetupTeamMask(LevelManager levelManager, int team)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xCAF4FC", Offset = "0xCAF4FC", VA = "0xCAF4FC")]
	public void Damage(float damage)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xCAF6DC", Offset = "0xCAF6DC", VA = "0xCAF6DC")]
	[PunRPC]
	private void DameDrone(float damage)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xCAF778", Offset = "0xCAF778", VA = "0xCAF778")]
	public Drone()
	{
	}
}
[Serializable]
[Token(Token = "0x200003E")]
public class KillStreakBehaviors
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_Name;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_ID;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_Used;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int slot;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xCAFB64", Offset = "0xCAFB64", VA = "0xCAFB64")]
	public static byte[] S(KillStreakBehaviors k)
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xCAFC48", Offset = "0xCAFC48", VA = "0xCAFC48")]
	public static KillStreakBehaviors D(byte[] b)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xCAFD50", Offset = "0xCAFD50", VA = "0xCAFD50")]
	public KillStreakBehaviors()
	{
	}
}
[Token(Token = "0x200003F")]
public class KillStreakManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000040")]
	public enum Streak
	{
		[Token(Token = "0x400018F")]
		None = -1,
		[Token(Token = "0x4000190")]
		Radar,
		[Token(Token = "0x4000191")]
		FirstAid,
		[Token(Token = "0x4000192")]
		Drone,
		[Token(Token = "0x4000193")]
		RCCar,
		[Token(Token = "0x4000194")]
		AttackDogs,
		[Token(Token = "0x4000195")]
		Turret,
		[Token(Token = "0x4000196")]
		Bazooka
	}

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrKillstreakUISetter killstreaksUI;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Streak m_CurrentKillStreak;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_CurrentKillCount;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_DroneTimer;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_RadarTimer;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_RadarTimeLeft;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_RadarSoundTimer;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<KillStreakBehaviors> m_AvailableKillStreaks;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public KillStreakBehaviors m_KillStreak1;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public KillStreakBehaviors m_KillStreak2;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public KillStreakBehaviors m_KillStreak3;

	[Token(Token = "0x1700001B")]
	private Transform playerTransform
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0xCAFD58", Offset = "0xCAFD58", VA = "0xCAFD58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xCAFD84", Offset = "0xCAFD84", VA = "0xCAFD84")]
	private void Start()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xCAFF10", Offset = "0xCAFF10", VA = "0xCAFF10")]
	public void AddKillStreak()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xCAFDAC", Offset = "0xCAFDAC", VA = "0xCAFDAC")]
	public void ResetKillstreaks()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xCB0260", Offset = "0xCB0260", VA = "0xCB0260")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xCB0ADC", Offset = "0xCB0ADC", VA = "0xCB0ADC")]
	private Streak GetKillstreak()
	{
		return default(Streak);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xCB0580", Offset = "0xCB0580", VA = "0xCB0580")]
	public void ActivateKillStreak(Streak testStreak = Streak.None)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xCB0E30", Offset = "0xCB0E30", VA = "0xCB0E30")]
	private Vector3 TryGetPositionOnNavMesh(Vector3 sourcePosition, string navigationArea = "")
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xCB0BD4", Offset = "0xCB0BD4", VA = "0xCB0BD4")]
	public void SpawnRC()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xCB0CEC", Offset = "0xCB0CEC", VA = "0xCB0CEC")]
	public void SpawnTurret()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xCB1024", Offset = "0xCB1024", VA = "0xCB1024")]
	private void ActivateBazooka()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xCB1048", Offset = "0xCB1048", VA = "0xCB1048")]
	private object[] DataToSend(float autoDestroyTimer = 30f, int team = -1)
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xCB0F18", Offset = "0xCB0F18", VA = "0xCB0F18")]
	public void ActivateRadar()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xCB1180", Offset = "0xCB1180", VA = "0xCB1180")]
	public KillStreakManager()
	{
	}
}
[Token(Token = "0x2000041")]
public class LocalVelocity : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_LocalVelocity;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_PreviousVelocity;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_Parent;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_Child;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float zMinLimit;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float zMaxLimit;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float xMinLimit;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float xMaxLimit;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float rotationZAxis;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float rotationXAxis;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xCB119C", Offset = "0xCB119C", VA = "0xCB119C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xCB11D8", Offset = "0xCB11D8", VA = "0xCB11D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xCB14FC", Offset = "0xCB14FC", VA = "0xCB14FC")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xCB1538", Offset = "0xCB1538", VA = "0xCB1538")]
	public LocalVelocity()
	{
	}
}
[Token(Token = "0x2000042")]
public class ScreenNoise : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000043")]
	[CompilerGenerated]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenNoise <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000144")]
			[Address(RVA = "0xCB1938", Offset = "0xCB1938", VA = "0xCB1938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000146")]
			[Address(RVA = "0xCB1980", Offset = "0xCB1980", VA = "0xCB1980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0xCB15B4", Offset = "0xCB15B4", VA = "0xCB15B4")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0xCB18C4", Offset = "0xCB18C4", VA = "0xCB18C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0xCB18C8", Offset = "0xCB18C8", VA = "0xCB18C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000145")]
		[Address(RVA = "0xCB1940", Offset = "0xCB1940", VA = "0xCB1940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[CompilerGenerated]
	private sealed class <TurnOnSequence>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenNoise <>4__this;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <counter>5__2;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014A")]
			[Address(RVA = "0xCB2B7C", Offset = "0xCB2B7C", VA = "0xCB2B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014C")]
			[Address(RVA = "0xCB2BC4", Offset = "0xCB2BC4", VA = "0xCB2BC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0xCB2988", Offset = "0xCB2988", VA = "0xCB2988")]
		[DebuggerHidden]
		public <TurnOnSequence>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0xCB29B0", Offset = "0xCB29B0", VA = "0xCB29B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0xCB29B4", Offset = "0xCB29B4", VA = "0xCB29B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0xCB2B84", Offset = "0xCB2B84", VA = "0xCB2B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000045")]
	[CompilerGenerated]
	private sealed class <TurnOff>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenNoise <>4__this;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <counter>5__2;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000150")]
			[Address(RVA = "0xCB2D78", Offset = "0xCB2D78", VA = "0xCB2D78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000152")]
			[Address(RVA = "0xCB2DC0", Offset = "0xCB2DC0", VA = "0xCB2DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0xCB2BCC", Offset = "0xCB2BCC", VA = "0xCB2BCC")]
		[DebuggerHidden]
		public <TurnOff>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xCB2BF4", Offset = "0xCB2BF4", VA = "0xCB2BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0xCB2BF8", Offset = "0xCB2BF8", VA = "0xCB2BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0xCB2D80", Offset = "0xCB2D80", VA = "0xCB2D80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image m_NoiseFrame;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Speed;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image m_Frame;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] m_OnFrames;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds m_delay;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds m_Runtime;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_Broadcast;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_Details;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text m_TimerLabel;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private double m_AddTimer;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_TestCamera;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForSeconds waitStart;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xCB154C", Offset = "0xCB154C", VA = "0xCB154C")]
	[IteratorStateMachine(typeof(<Start>d__12))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xCB15DC", Offset = "0xCB15DC", VA = "0xCB15DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xCB1688", Offset = "0xCB1688", VA = "0xCB1688")]
	private void AddTimer()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xCB173C", Offset = "0xCB173C", VA = "0xCB173C")]
	[IteratorStateMachine(typeof(<TurnOnSequence>d__15))]
	private IEnumerator TurnOnSequence()
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xCB17A4", Offset = "0xCB17A4", VA = "0xCB17A4")]
	[IteratorStateMachine(typeof(<TurnOff>d__16))]
	private IEnumerator TurnOff()
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xCB180C", Offset = "0xCB180C", VA = "0xCB180C")]
	public ScreenNoise()
	{
	}
}
[Token(Token = "0x2000046")]
public class RCCar : PunBehaviour
{
	[Serializable]
	[Token(Token = "0x2000047")]
	public class AlvoWheel
	{
		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_Parent;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_LocalParentInit;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_AxisOffset;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_Radius;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_FrontTire;

		[Token(Token = "0x600016A")]
		[Address(RVA = "0xCB570C", Offset = "0xCB570C", VA = "0xCB570C")]
		public AlvoWheel()
		{
		}
	}

	[Token(Token = "0x2000049")]
	[CompilerGenerated]
	private sealed class <KillDelay>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerData data;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RCCar <>4__this;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <delay>5__2;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000171")]
			[Address(RVA = "0xCB5890", Offset = "0xCB5890", VA = "0xCB5890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000173")]
			[Address(RVA = "0xCB58D8", Offset = "0xCB58D8", VA = "0xCB58D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0xCB4EC4", Offset = "0xCB4EC4", VA = "0xCB4EC4")]
		[DebuggerHidden]
		public <KillDelay>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xCB57A4", Offset = "0xCB57A4", VA = "0xCB57A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0xCB57A8", Offset = "0xCB57A8", VA = "0xCB57A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0xCB5898", Offset = "0xCB5898", VA = "0xCB5898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004A")]
	[CompilerGenerated]
	private sealed class <DestroyTiming>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RCCar <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000177")]
			[Address(RVA = "0xCB5940", Offset = "0xCB5940", VA = "0xCB5940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000179")]
			[Address(RVA = "0xCB5988", Offset = "0xCB5988", VA = "0xCB5988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xCB5114", Offset = "0xCB5114", VA = "0xCB5114")]
		[DebuggerHidden]
		public <DestroyTiming>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xCB58E0", Offset = "0xCB58E0", VA = "0xCB58E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xCB58E4", Offset = "0xCB58E4", VA = "0xCB58E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0xCB5948", Offset = "0xCB5948", VA = "0xCB5948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AlvoWheel[] m_Wheels;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_Root;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_Meshes;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_Body;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float zMinLimit;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float zMaxLimit;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float xMinLimit;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float xMaxLimit;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotationZAxis;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float rotationXAxis;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LayerMask m_HitLayers;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] m_Offset;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_SuspensionRate;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float m_SuspensionMaxDistance;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_SuspensionDistance;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_MaxTurnAngle;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_WheelTurnSpeed;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float m_WheelAngleInit;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_CurrentTurnAngle;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_CurrentSpeed;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 m_PreviousVelocity;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 m_LocalVelocity;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float curDir;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float vertSpeed;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 m_CurrentNormal;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CharacterController m_Controller;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_TurnSpeed;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_DriveSpeed;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_Gravity;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public Vector3 updatedPosition;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public Vector3 updatedRotation;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool m_Stop;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_HideObject;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_Explosion;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float m_KillTimer;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<SpawnedTarget> m_NewTargets;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private NavMeshPath m_PendingPath;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public NavMeshAgent m_NavMeshAgent;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool m_Init;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	public bool m_HasTarget;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform m_Transform;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform m_TargetTransform;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private PlayerData m_currentTarget;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public LayerMask l;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool Test;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject[] go;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float tim;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float st;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Vector3 gotoPosition;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private WaitForSeconds waitDestroy;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioSource m_Audio;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioSource m_ExplosionAudio;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool m_Dead;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float m_HitPoints;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xCB2DC8", Offset = "0xCB2DC8", VA = "0xCB2DC8", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xCB3BBC", Offset = "0xCB3BBC", VA = "0xCB3BBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xCB3B40", Offset = "0xCB3B40", VA = "0xCB3B40")]
	public AlvoWheel InitWheel(AlvoWheel alvoWheel)
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xCB3CB4", Offset = "0xCB3CB4", VA = "0xCB3CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xCB32A0", Offset = "0xCB32A0", VA = "0xCB32A0")]
	public void SetupTeamMask(LevelManager levelManager, int team)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xCB3438", Offset = "0xCB3438", VA = "0xCB3438")]
	public Transform GetTarget(LayerMask targetMask, PlayerData myPlayerData)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xCB4028", Offset = "0xCB4028", VA = "0xCB4028")]
	private void c()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xCB4E50", Offset = "0xCB4E50", VA = "0xCB4E50")]
	[IteratorStateMachine(typeof(<KillDelay>d__57))]
	private IEnumerator KillDelay(PlayerData data)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xCB4AB4", Offset = "0xCB4AB4", VA = "0xCB4AB4")]
	private void RotateWheels()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xCB4548", Offset = "0xCB4548", VA = "0xCB4548")]
	private void PositionWheels()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xCB4994", Offset = "0xCB4994", VA = "0xCB4994")]
	private void CalculateVelocity()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xCB4E4C", Offset = "0xCB4E4C", VA = "0xCB4E4C")]
	private void Drive()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xCB4C3C", Offset = "0xCB4C3C", VA = "0xCB4C3C")]
	private void Body()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xCB4420", Offset = "0xCB4420", VA = "0xCB4420")]
	public void Explode()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xCB4EEC", Offset = "0xCB4EEC", VA = "0xCB4EEC")]
	[PunRPC]
	private void ExplodeMessage()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xCB50AC", Offset = "0xCB50AC", VA = "0xCB50AC")]
	[IteratorStateMachine(typeof(<DestroyTiming>d__67))]
	private IEnumerator DestroyTiming()
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xCB513C", Offset = "0xCB513C", VA = "0xCB513C")]
	private void NetDestroy()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xCB51A8", Offset = "0xCB51A8", VA = "0xCB51A8")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xCB3FE8", Offset = "0xCB3FE8", VA = "0xCB3FE8")]
	private void EngineNoise()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xCB527C", Offset = "0xCB527C", VA = "0xCB527C")]
	public void Damage(float d)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xCB543C", Offset = "0xCB543C", VA = "0xCB543C")]
	[PunRPC]
	private void DamageRC(float damage)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xCB5468", Offset = "0xCB5468", VA = "0xCB5468")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xCB55D0", Offset = "0xCB55D0", VA = "0xCB55D0")]
	public RCCar()
	{
	}
}
[Token(Token = "0x200004B")]
public class SimpleCarController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AxleInfo> axleInfos;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxMotorTorque;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSteeringAngle;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float motor;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xCB5990", Offset = "0xCB5990", VA = "0xCB5990")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xCB5BD4", Offset = "0xCB5BD4", VA = "0xCB5BD4")]
	public SimpleCarController()
	{
	}
}
[Serializable]
[Token(Token = "0x200004C")]
public class AxleInfo
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WheelCollider leftWheel;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WheelCollider rightWheel;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool motor;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool steering;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xCB5BDC", Offset = "0xCB5BDC", VA = "0xCB5BDC")]
	public AxleInfo()
	{
	}
}
[Token(Token = "0x200004D")]
public class Turret : PunBehaviour
{
	[Token(Token = "0x200004E")]
	[CompilerGenerated]
	private sealed class <EjectShells>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600019B")]
			[Address(RVA = "0xCB8018", Offset = "0xCB8018", VA = "0xCB8018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019D")]
			[Address(RVA = "0xCB8060", Offset = "0xCB8060", VA = "0xCB8060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xCB70A0", Offset = "0xCB70A0", VA = "0xCB70A0")]
		[DebuggerHidden]
		public <EjectShells>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0xCB7DD0", Offset = "0xCB7DD0", VA = "0xCB7DD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xCB7DD4", Offset = "0xCB7DD4", VA = "0xCB7DD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xCB8020", Offset = "0xCB8020", VA = "0xCB8020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004F")]
	[CompilerGenerated]
	private sealed class <FireTiming>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0xCB8204", Offset = "0xCB8204", VA = "0xCB8204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A3")]
			[Address(RVA = "0xCB824C", Offset = "0xCB824C", VA = "0xCB824C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xCB70C8", Offset = "0xCB70C8", VA = "0xCB70C8")]
		[DebuggerHidden]
		public <FireTiming>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xCB8068", Offset = "0xCB8068", VA = "0xCB8068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xCB806C", Offset = "0xCB806C", VA = "0xCB806C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xCB820C", Offset = "0xCB820C", VA = "0xCB820C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000050")]
	[CompilerGenerated]
	private sealed class <FireTiming2>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool test;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0xCB86FC", Offset = "0xCB86FC", VA = "0xCB86FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A9")]
			[Address(RVA = "0xCB8744", Offset = "0xCB8744", VA = "0xCB8744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xCB7190", Offset = "0xCB7190", VA = "0xCB7190")]
		[DebuggerHidden]
		public <FireTiming2>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xCB8254", Offset = "0xCB8254", VA = "0xCB8254", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xCB8258", Offset = "0xCB8258", VA = "0xCB8258", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xCB8704", Offset = "0xCB8704", VA = "0xCB8704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000051")]
	[CompilerGenerated]
	private sealed class <GetNextTarget>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AD")]
			[Address(RVA = "0xCB87FC", Offset = "0xCB87FC", VA = "0xCB87FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AF")]
			[Address(RVA = "0xCB8844", Offset = "0xCB8844", VA = "0xCB8844", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xCB77B4", Offset = "0xCB77B4", VA = "0xCB77B4")]
		[DebuggerHidden]
		public <GetNextTarget>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xCB874C", Offset = "0xCB874C", VA = "0xCB874C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xCB8750", Offset = "0xCB8750", VA = "0xCB8750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xCB8804", Offset = "0xCB8804", VA = "0xCB8804", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000052")]
	[CompilerGenerated]
	private sealed class <NetworkDestroy>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B3")]
			[Address(RVA = "0xCB88AC", Offset = "0xCB88AC", VA = "0xCB88AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B5")]
			[Address(RVA = "0xCB88F4", Offset = "0xCB88F4", VA = "0xCB88F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xCB7AB8", Offset = "0xCB7AB8", VA = "0xCB7AB8")]
		[DebuggerHidden]
		public <NetworkDestroy>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xCB884C", Offset = "0xCB884C", VA = "0xCB884C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xCB8850", Offset = "0xCB8850", VA = "0xCB8850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xCB88B4", Offset = "0xCB88B4", VA = "0xCB88B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_Transform;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_MachineGun;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public Transform m_XAxis;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_YAxis;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_Stop;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool m_Dead;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LevelManager m_LevelManager;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource reloadAS;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip reloadAudioClip;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Fire")]
	public Transform m_ShellEjectionLocation;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Rigidbody[] m_Shells;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_FireRate;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 m_Recoil;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform physicalFiringPoint;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int shellCounter;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int fireDamage;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_FireRateTimer;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 m_OriginalLocalPosition;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LayerMask m_ShootMask;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public LayerMask m_ShootMaskTeam1;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LayerMask m_ShootMaskTeam2;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool fireRequestStarted;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Damage")]
	public GameObject[] colliders;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float m_HitPoints;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Sounds")]
	public AudioSource m_AudioSource;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource explosionAudioSource;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip m_AudioClip;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ParticleSystem m_Gunfire;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Header("Explosion")]
	public GameObject m_HideObject;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_Explosion;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_KillTimer;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float currentKillTimer;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Header("Anti-clipping")]
	public float radius;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Header("Target lookup")]
	public Transform eyeLevel;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<LevelManager.SpawnedTargetData> myTargets;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Coroutine lookingForAnotherTarget;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int currentTargetIndex;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int receivedTargetId;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int currentReceivedTargetId;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float lookatYOffset;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float validationYOffset;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float crouchedLookatYOffset;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float crouchedValidationYOffset;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float proneYOffset;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float proneLookatYOffset;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool TargetSuccessfullyVisible;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WaitForSeconds shellEjectionDelay;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private WaitForSeconds fireTimingDelay;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private WaitForSeconds GetNextTargetDelay;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private WaitForSeconds delay;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 defaultXAxisPos;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 defaultyAxisPos;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Quaternion defaultXAxisRot;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Quaternion defaultYAxisRot;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private PlayerData myPlayerData;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private WaitForSeconds waitDestroy;

	[Token(Token = "0x17000026")]
	private bool targetSucessfullyVisible
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0xCB5BE4", Offset = "0xCB5BE4", VA = "0xCB5BE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0xCB5BEC", Offset = "0xCB5BEC", VA = "0xCB5BEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	private LevelManager.SpawnedTargetData currentTarget
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0xCB5D00", Offset = "0xCB5D00", VA = "0xCB5D00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xCB5D84", Offset = "0xCB5D84", VA = "0xCB5D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xCB5E2C", Offset = "0xCB5E2C", VA = "0xCB5E2C", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xCB62EC", Offset = "0xCB62EC", VA = "0xCB62EC")]
	private void SetDamageMask(int team)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xCB63D0", Offset = "0xCB63D0", VA = "0xCB63D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xCB6540", Offset = "0xCB6540", VA = "0xCB6540")]
	private void Update()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xCB6DA0", Offset = "0xCB6DA0", VA = "0xCB6DA0")]
	private void UpdateRotation(int targetId)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xCB6A40", Offset = "0xCB6A40", VA = "0xCB6A40")]
	private void _UpdateRotation(Vector3 targetPos, float offset)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xCB6EA0", Offset = "0xCB6EA0", VA = "0xCB6EA0")]
	private Quaternion LookAtTargetX(Vector3 currentTargetPosition, Vector3 transformLocalPosition, Quaternion transformRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xCB6BC8", Offset = "0xCB6BC8", VA = "0xCB6BC8")]
	private void TurretFire()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xCB7038", Offset = "0xCB7038", VA = "0xCB7038")]
	[IteratorStateMachine(typeof(<EjectShells>d__69))]
	private IEnumerator EjectShells()
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xCB6FD0", Offset = "0xCB6FD0", VA = "0xCB6FD0")]
	[IteratorStateMachine(typeof(<FireTiming>d__70))]
	private IEnumerator FireTiming()
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xCB70F0", Offset = "0xCB70F0", VA = "0xCB70F0")]
	[PunRPC]
	private void StartFireTiming2()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xCB7114", Offset = "0xCB7114", VA = "0xCB7114")]
	[IteratorStateMachine(typeof(<FireTiming2>d__72))]
	private IEnumerator FireTiming2(bool test = false)
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xCB67A0", Offset = "0xCB67A0", VA = "0xCB67A0")]
	public bool IsTargetVisible(LayerMask targetMask, bool calculateTargets)
	{
		return default(bool);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xCB6B60", Offset = "0xCB6B60", VA = "0xCB6B60")]
	[IteratorStateMachine(typeof(<GetNextTarget>d__74))]
	private IEnumerator GetNextTarget()
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xCB71B8", Offset = "0xCB71B8", VA = "0xCB71B8")]
	public void CalculateTargets()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xCB77DC", Offset = "0xCB77DC", VA = "0xCB77DC")]
	public void Damage(float damage)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xCB7948", Offset = "0xCB7948", VA = "0xCB7948")]
	[PunRPC]
	private void DamageTurret(float damage)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xCB6BE8", Offset = "0xCB6BE8", VA = "0xCB6BE8")]
	[PunRPC]
	public void ExplodeTurret()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xCB7A50", Offset = "0xCB7A50", VA = "0xCB7A50")]
	[IteratorStateMachine(typeof(<NetworkDestroy>d__80))]
	private IEnumerator NetworkDestroy()
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xCB7AE0", Offset = "0xCB7AE0", VA = "0xCB7AE0")]
	private void NetDestroy()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xCB7B4C", Offset = "0xCB7B4C", VA = "0xCB7B4C")]
	[PunRPC]
	private void TellOthersVisibilityOfTarget(bool isVisible)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xCB7B58", Offset = "0xCB7B58", VA = "0xCB7B58")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xCB7C40", Offset = "0xCB7C40", VA = "0xCB7C40")]
	public Turret()
	{
	}
}
[Token(Token = "0x2000053")]
public class Wheel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WheelCollider wheelC;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 wheelCCenter;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RaycastHit hit;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform m_Transform;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xCB88FC", Offset = "0xCB88FC", VA = "0xCB88FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xCB8AF4", Offset = "0xCB8AF4", VA = "0xCB8AF4")]
	private void UpdateWheelPose(WheelCollider _collider, Transform _transform)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xCB8BA0", Offset = "0xCB8BA0", VA = "0xCB8BA0")]
	public Wheel()
	{
	}
}
[Token(Token = "0x2000054")]
public class FlyCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float XSensitivity;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float YSensitivity;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinimumX;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaximumX;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lockCursor;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_cursorIsLocked;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_MoveDir;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_WalkSpeed;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 m_Input;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera m_Camera;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 m_OriginalCameraPosition;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xCB8BA8", Offset = "0xCB8BA8", VA = "0xCB8BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xCB8C18", Offset = "0xCB8C18", VA = "0xCB8C18")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xCB8C7C", Offset = "0xCB8C7C", VA = "0xCB8C7C")]
	private void InternalLockUpdate()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xCB8CF4", Offset = "0xCB8CF4", VA = "0xCB8CF4")]
	public void UpdateCursorLock()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xCB8D04", Offset = "0xCB8D04", VA = "0xCB8D04")]
	private void GetInput(out float speed)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xCB8E58", Offset = "0xCB8E58", VA = "0xCB8E58")]
	private void UpdateCameraPosition(float speed)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xCB8EA0", Offset = "0xCB8EA0", VA = "0xCB8EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xCB8FD0", Offset = "0xCB8FD0", VA = "0xCB8FD0")]
	public void LookRotation()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xCB9244", Offset = "0xCB9244", VA = "0xCB9244")]
	public FlyCamera()
	{
	}
}
[Token(Token = "0x2000055")]
public class LargeScreenShot : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000056")]
	[CompilerGenerated]
	private sealed class <take>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C9")]
			[Address(RVA = "0xCB9600", Offset = "0xCB9600", VA = "0xCB9600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001CB")]
			[Address(RVA = "0xCB9648", Offset = "0xCB9648", VA = "0xCB9648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xCB9530", Offset = "0xCB9530", VA = "0xCB9530")]
		[DebuggerHidden]
		public <take>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xCB956C", Offset = "0xCB956C", VA = "0xCB956C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xCB9570", Offset = "0xCB9570", VA = "0xCB9570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xCB9608", Offset = "0xCB9608", VA = "0xCB9608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D ScreenShot;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture rt;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int res;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int res2;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xCB92C4", Offset = "0xCB92C4", VA = "0xCB92C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xCB9394", Offset = "0xCB9394", VA = "0xCB9394")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xCB94D0", Offset = "0xCB94D0", VA = "0xCB94D0")]
	[IteratorStateMachine(typeof(<take>d__6))]
	private IEnumerator take()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xCB9558", Offset = "0xCB9558", VA = "0xCB9558")]
	public LargeScreenShot()
	{
	}
}
[Token(Token = "0x2000057")]
public class LightFlickerSpark : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem m_particleSystem;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Light m_light;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material m_emissiveMaterial;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_normalFliclerTime;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_isFlickering;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_flickerDuration;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource m_audioSource;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color m_originalEmmisionColor;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentTimer;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float durationTimer;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color m_offColor;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_isLightOn;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xCB9650", Offset = "0xCB9650", VA = "0xCB9650")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xCB96DC", Offset = "0xCB96DC", VA = "0xCB96DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xCB98FC", Offset = "0xCB98FC", VA = "0xCB98FC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xCB9958", Offset = "0xCB9958", VA = "0xCB9958")]
	public LightFlickerSpark()
	{
	}
}
[Token(Token = "0x2000058")]
public class RainDrop : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem m_particleSystem;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rippleEffect;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xCB9974", Offset = "0xCB9974", VA = "0xCB9974")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xCB9B34", Offset = "0xCB9B34", VA = "0xCB9B34")]
	public RainDrop()
	{
	}
}
[Token(Token = "0x2000059")]
[ExecuteInEditMode]
public class NM_Wind : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Wind Speed in Kilometers per hour")]
	[Header("General Parameters")]
	public float WindSpeed;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 2f)]
	[Tooltip("Wind Turbulence in percentage of wind Speed")]
	public float Turbulence;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Texture used for wind turbulence")]
	[Header("Noise Parameters")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Size of one world tiling patch of the Noise Texture, for bending trees")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Size of one world tiling patch of the Noise Texture, for leaf shivering")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Gust Parameters")]
	[Tooltip("Texture used for wind gusts")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Size of one world tiling patch of the Gust Texture, for leaf shivering")]
	public float GustWorldSize;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Wind Gust Speed in Kilometers per hour")]
	public float GustSpeed;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Wind Gust Influence on trees")]
	public float GustScale;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xCB9BB0", Offset = "0xCB9BB0", VA = "0xCB9BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xCB9D74", Offset = "0xCB9D74", VA = "0xCB9D74")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xCB9D78", Offset = "0xCB9D78", VA = "0xCB9D78")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xCB9BB4", Offset = "0xCB9BB4", VA = "0xCB9BB4")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xCB9D7C", Offset = "0xCB9D7C", VA = "0xCB9D7C")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xCB9E80", Offset = "0xCB9E80", VA = "0xCB9E80")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x200005A")]
[RequireComponent(typeof(MeshRenderer))]
[RequireComponent(typeof(MeshFilter))]
public class Decal : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite sprite;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAngle;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pushDistance;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask affectedLayers;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xCB9EB4", Offset = "0xCB9EB4", VA = "0xCB9EB4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xCB9F98", Offset = "0xCB9F98", VA = "0xCB9F98")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xCBA1F0", Offset = "0xCBA1F0", VA = "0xCBA1F0")]
	public Decal()
	{
	}
}
[Token(Token = "0x200005B")]
[RequireComponent(typeof(Collider))]
[RequireComponent(typeof(MeshFilter))]
public class Door : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200005C")]
	public enum rotOrient
	{
		[Token(Token = "0x4000290")]
		Y_Axis_Up,
		[Token(Token = "0x4000291")]
		Z_Axis_Up,
		[Token(Token = "0x4000292")]
		X_Axis_Up
	}

	[Token(Token = "0x200005D")]
	public enum rotFixAxis
	{
		[Token(Token = "0x4000294")]
		Y,
		[Token(Token = "0x4000295")]
		Z
	}

	[Token(Token = "0x200005E")]
	[CompilerGenerated]
	private sealed class <delayedCloseAudio>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Door <>4__this;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E3")]
			[Address(RVA = "0xCBAA74", Offset = "0xCBAA74", VA = "0xCBAA74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E5")]
			[Address(RVA = "0xCBAABC", Offset = "0xCBAABC", VA = "0xCBAABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xCBA8E4", Offset = "0xCBA8E4", VA = "0xCBA8E4")]
		[DebuggerHidden]
		public <delayedCloseAudio>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xCBA9A4", Offset = "0xCBA9A4", VA = "0xCBA9A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xCBA9A8", Offset = "0xCBA9A8", VA = "0xCBA9A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xCBAA7C", Offset = "0xCBAA7C", VA = "0xCBAA7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200005F")]
	[CompilerGenerated]
	private sealed class <moveDoor>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion target;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E9")]
			[Address(RVA = "0xCBAC64", Offset = "0xCBAC64", VA = "0xCBAC64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EB")]
			[Address(RVA = "0xCBACAC", Offset = "0xCBACAC", VA = "0xCBACAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xCBA90C", Offset = "0xCBA90C", VA = "0xCBA90C")]
		[DebuggerHidden]
		public <moveDoor>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xCBAAC4", Offset = "0xCBAAC4", VA = "0xCBAAC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xCBAAC8", Offset = "0xCBAAC8", VA = "0xCBAAC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xCBAC6C", Offset = "0xCBAC6C", VA = "0xCBAC6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rotOrient rotationOrientation;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool applyRotationFix;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rotFixAxis rotationAxisFix;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float doorOpenAngle;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(1f, 15f)]
	public float speed;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip doorOpenSound;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip doorCloseSound;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion doorOpen;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion doorClosed;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool doorStatus;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xCBA224", Offset = "0xCBA224", VA = "0xCBA224")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xCBA5E0", Offset = "0xCBA5E0", VA = "0xCBA5E0")]
	public void InteractWithThisDoor()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xCBA86C", Offset = "0xCBA86C", VA = "0xCBA86C")]
	[IteratorStateMachine(typeof(<delayedCloseAudio>d__14))]
	private IEnumerator delayedCloseAudio(float delay)
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xCBA7DC", Offset = "0xCBA7DC", VA = "0xCBA7DC")]
	[IteratorStateMachine(typeof(<moveDoor>d__15))]
	private IEnumerator moveDoor(Quaternion target)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xCBA934", Offset = "0xCBA934", VA = "0xCBA934")]
	public Door()
	{
	}
}
[Token(Token = "0x2000060")]
public class GarageDoor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip garageDoorSound;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xCBACB4", Offset = "0xCBACB4", VA = "0xCBACB4")]
	public void ToggleDoor()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xCBADD4", Offset = "0xCBADD4", VA = "0xCBADD4")]
	public GarageDoor()
	{
	}
}
[Token(Token = "0x2000061")]
public class Interactions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(1f, 5f)]
	public float rayDistance;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D crosshair;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D eButton;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int crossHairStatus;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xCBADDC", Offset = "0xCBADDC", VA = "0xCBADDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xCBAEF8", Offset = "0xCBAEF8", VA = "0xCBAEF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xCBB0C4", Offset = "0xCBB0C4", VA = "0xCBB0C4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xCBB2D0", Offset = "0xCBB2D0", VA = "0xCBB2D0")]
	public Interactions()
	{
	}
}
[Token(Token = "0x2000062")]
public class FreeflightCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedNormal;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedFast;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseSensitivityX;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensitivityY;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotY;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xCBB2D8", Offset = "0xCBB2D8", VA = "0xCBB2D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xCBB394", Offset = "0xCBB394", VA = "0xCBB394")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xCBB694", Offset = "0xCBB694", VA = "0xCBB694")]
	public FreeflightCamera()
	{
	}
}
[Token(Token = "0x2000063")]
public class TruckColor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color car_color;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material car_main_color;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer car_renderer;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int mat_index;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xCBB6A8", Offset = "0xCBB6A8", VA = "0xCBB6A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xCBB88C", Offset = "0xCBB88C", VA = "0xCBB88C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xCBB928", Offset = "0xCBB928", VA = "0xCBB928")]
	public TruckColor()
	{
	}
}
[Token(Token = "0x2000064")]
internal static class CustomTypes
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly byte[] memVector3;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memVector2;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly byte[] memQuarternion;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly byte[] memPlayer;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xCBB930", Offset = "0xCBB930", VA = "0xCBB930")]
	internal static void Register()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xCBBC7C", Offset = "0xCBBC7C", VA = "0xCBBC7C")]
	private static short SerializeVector3(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xCBBE8C", Offset = "0xCBBE8C", VA = "0xCBBE8C")]
	private static object DeserializeVector3(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xCBC0A0", Offset = "0xCBC0A0", VA = "0xCBC0A0")]
	private static short SerializeVector2(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xCBC290", Offset = "0xCBC290", VA = "0xCBC290")]
	private static object DeserializeVector2(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xCBC474", Offset = "0xCBC474", VA = "0xCBC474")]
	private static short SerializeQuaternion(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xCBC6A0", Offset = "0xCBC6A0", VA = "0xCBC6A0")]
	private static object DeserializeQuaternion(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xCBC8C4", Offset = "0xCBC8C4", VA = "0xCBC8C4")]
	private static short SerializePhotonPlayer(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xCBCAA4", Offset = "0xCBCAA4", VA = "0xCBCAA4")]
	private static object DeserializePhotonPlayer(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x2000065")]
public enum PhotonNetworkingMessage
{
	[Token(Token = "0x40002B2")]
	OnConnectedToPhoton,
	[Token(Token = "0x40002B3")]
	OnLeftRoom,
	[Token(Token = "0x40002B4")]
	OnMasterClientSwitched,
	[Token(Token = "0x40002B5")]
	OnPhotonCreateRoomFailed,
	[Token(Token = "0x40002B6")]
	OnPhotonJoinRoomFailed,
	[Token(Token = "0x40002B7")]
	OnCreatedRoom,
	[Token(Token = "0x40002B8")]
	OnJoinedLobby,
	[Token(Token = "0x40002B9")]
	OnLeftLobby,
	[Token(Token = "0x40002BA")]
	OnDisconnectedFromPhoton,
	[Token(Token = "0x40002BB")]
	OnConnectionFail,
	[Token(Token = "0x40002BC")]
	OnFailedToConnectToPhoton,
	[Token(Token = "0x40002BD")]
	OnReceivedRoomListUpdate,
	[Token(Token = "0x40002BE")]
	OnJoinedRoom,
	[Token(Token = "0x40002BF")]
	OnPhotonPlayerConnected,
	[Token(Token = "0x40002C0")]
	OnPhotonPlayerDisconnected,
	[Token(Token = "0x40002C1")]
	OnPhotonRandomJoinFailed,
	[Token(Token = "0x40002C2")]
	OnConnectedToMaster,
	[Token(Token = "0x40002C3")]
	OnPhotonSerializeView,
	[Token(Token = "0x40002C4")]
	OnPhotonInstantiate,
	[Token(Token = "0x40002C5")]
	OnPhotonMaxCccuReached,
	[Token(Token = "0x40002C6")]
	OnPhotonCustomRoomPropertiesChanged,
	[Token(Token = "0x40002C7")]
	OnPhotonPlayerPropertiesChanged,
	[Token(Token = "0x40002C8")]
	OnUpdatedFriendList,
	[Token(Token = "0x40002C9")]
	OnCustomAuthenticationFailed,
	[Token(Token = "0x40002CA")]
	OnCustomAuthenticationResponse,
	[Token(Token = "0x40002CB")]
	OnWebRpcResponse,
	[Token(Token = "0x40002CC")]
	OnOwnershipRequest,
	[Token(Token = "0x40002CD")]
	OnLobbyStatisticsUpdate,
	[Token(Token = "0x40002CE")]
	OnPhotonPlayerActivityChanged,
	[Token(Token = "0x40002CF")]
	OnOwnershipTransfered
}
[Token(Token = "0x2000066")]
public enum PhotonLogLevel
{
	[Token(Token = "0x40002D1")]
	ErrorsOnly,
	[Token(Token = "0x40002D2")]
	Informational,
	[Token(Token = "0x40002D3")]
	Full
}
[Token(Token = "0x2000067")]
public enum PhotonTargets
{
	[Token(Token = "0x40002D5")]
	All,
	[Token(Token = "0x40002D6")]
	Others,
	[Token(Token = "0x40002D7")]
	MasterClient,
	[Token(Token = "0x40002D8")]
	AllBuffered,
	[Token(Token = "0x40002D9")]
	OthersBuffered,
	[Token(Token = "0x40002DA")]
	AllViaServer,
	[Token(Token = "0x40002DB")]
	AllBufferedViaServer
}
[Token(Token = "0x2000068")]
public enum CloudRegionCode
{
	[Token(Token = "0x40002DD")]
	eu = 0,
	[Token(Token = "0x40002DE")]
	us = 1,
	[Token(Token = "0x40002DF")]
	asia = 2,
	[Token(Token = "0x40002E0")]
	jp = 3,
	[Token(Token = "0x40002E1")]
	au = 5,
	[Token(Token = "0x40002E2")]
	usw = 6,
	[Token(Token = "0x40002E3")]
	sa = 7,
	[Token(Token = "0x40002E4")]
	cae = 8,
	[Token(Token = "0x40002E5")]
	kr = 9,
	[Token(Token = "0x40002E6")]
	@in = 10,
	[Token(Token = "0x40002E7")]
	ru = 11,
	[Token(Token = "0x40002E8")]
	rue = 12,
	[Token(Token = "0x40002E9")]
	none = 4
}
[Token(Token = "0x2000069")]
[Flags]
public enum CloudRegionFlag
{
	[Token(Token = "0x40002EB")]
	eu = 1,
	[Token(Token = "0x40002EC")]
	us = 2,
	[Token(Token = "0x40002ED")]
	asia = 4,
	[Token(Token = "0x40002EE")]
	jp = 8,
	[Token(Token = "0x40002EF")]
	au = 0x10,
	[Token(Token = "0x40002F0")]
	usw = 0x20,
	[Token(Token = "0x40002F1")]
	sa = 0x40,
	[Token(Token = "0x40002F2")]
	cae = 0x80,
	[Token(Token = "0x40002F3")]
	kr = 0x100,
	[Token(Token = "0x40002F4")]
	@in = 0x200,
	[Token(Token = "0x40002F5")]
	ru = 0x400,
	[Token(Token = "0x40002F6")]
	rue = 0x800
}
[Token(Token = "0x200006A")]
public enum ConnectionState
{
	[Token(Token = "0x40002F8")]
	Disconnected,
	[Token(Token = "0x40002F9")]
	Connecting,
	[Token(Token = "0x40002FA")]
	Connected,
	[Token(Token = "0x40002FB")]
	Disconnecting,
	[Token(Token = "0x40002FC")]
	InitializingApplication
}
[Token(Token = "0x200006B")]
public enum EncryptionMode
{
	[Token(Token = "0x40002FE")]
	PayloadEncryption = 0,
	[Token(Token = "0x40002FF")]
	DatagramEncryption = 10
}
[Token(Token = "0x200006C")]
public static class EncryptionDataParameters
{
	[Token(Token = "0x4000300")]
	public const byte Mode = 0;

	[Token(Token = "0x4000301")]
	public const byte Secret1 = 1;

	[Token(Token = "0x4000302")]
	public const byte Secret2 = 2;
}
[Token(Token = "0x200006D")]
public static class Extensions
{
	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MethodInfo, ParameterInfo[]> ParametersOfMethods;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xCBCDA4", Offset = "0xCBCDA4", VA = "0xCBCDA4")]
	public static ParameterInfo[] GetCachedParemeters(this MethodInfo mo)
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xCBCEA4", Offset = "0xCBCEA4", VA = "0xCBCEA4")]
	public static PhotonView[] GetPhotonViewsInChildren(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xCBCEF8", Offset = "0xCBCEF8", VA = "0xCBCEF8")]
	public static PhotonView GetPhotonView(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xCBCF48", Offset = "0xCBCF48", VA = "0xCBCF48")]
	public static bool AlmostEquals(this Vector3 target, Vector3 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xCBCF74", Offset = "0xCBCF74", VA = "0xCBCF74")]
	public static bool AlmostEquals(this Vector2 target, Vector2 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xCBCF94", Offset = "0xCBCF94", VA = "0xCBCF94")]
	public static bool AlmostEquals(this Quaternion target, Quaternion second, float maxAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xCBD004", Offset = "0xCBD004", VA = "0xCBD004")]
	public static bool AlmostEquals(this float target, float second, float floatDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xCBD014", Offset = "0xCBD014", VA = "0xCBD014")]
	public static void Merge(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xCBD454", Offset = "0xCBD454", VA = "0xCBD454")]
	public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xCBD8BC", Offset = "0xCBD8BC", VA = "0xCBD8BC")]
	public static string ToStringFull(this IDictionary origin)
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xCBD918", Offset = "0xCBD918", VA = "0xCBD918")]
	public static string ToStringFull(this object[] data)
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xCBDA60", Offset = "0xCBDA60", VA = "0xCBDA60")]
	public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this IDictionary original)
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xCBDE84", Offset = "0xCBDE84", VA = "0xCBDE84")]
	public static void StripKeysWithNullValues(this IDictionary original)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xCBE3C4", Offset = "0xCBE3C4", VA = "0xCBE3C4")]
	public static bool Contains(this int[] target, int nr)
	{
		return default(bool);
	}
}
[Token(Token = "0x200006E")]
public static class GameObjectExtensions
{
	[Token(Token = "0x6000211")]
	[Address(RVA = "0xCBE4A4", Offset = "0xCBE4A4", VA = "0xCBE4A4")]
	public static bool GetActive(this GameObject target)
	{
		return default(bool);
	}
}
[Token(Token = "0x200006F")]
public class FriendInfo
{
	[Token(Token = "0x17000038")]
	[Obsolete("Use UserId.")]
	public string Name
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0xCBE4B8", Offset = "0xCBE4B8", VA = "0xCBE4B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000039")]
	public string UserId
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xCBE4C0", Offset = "0xCBE4C0", VA = "0xCBE4C0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xCBE4C8", Offset = "0xCBE4C8", VA = "0xCBE4C8")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public bool IsOnline
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xCBE4D0", Offset = "0xCBE4D0", VA = "0xCBE4D0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0xCBE4D8", Offset = "0xCBE4D8", VA = "0xCBE4D8")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public string Room
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xCBE4E4", Offset = "0xCBE4E4", VA = "0xCBE4E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xCBE4EC", Offset = "0xCBE4EC", VA = "0xCBE4EC")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public bool IsInRoom
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xCBE4F4", Offset = "0xCBE4F4", VA = "0xCBE4F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xCBE51C", Offset = "0xCBE51C", VA = "0xCBE51C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xCBE5D8", Offset = "0xCBE5D8", VA = "0xCBE5D8")]
	public FriendInfo()
	{
	}
}
[Token(Token = "0x2000070")]
internal class LoadBalancingPeer : PhotonPeer
{
	[Token(Token = "0x2000071")]
	private enum RoomOptionBit
	{
		[Token(Token = "0x4000309")]
		CheckUserOnJoin = 1,
		[Token(Token = "0x400030A")]
		DeleteCacheOnLeave = 2,
		[Token(Token = "0x400030B")]
		SuppressRoomEvents = 4,
		[Token(Token = "0x400030C")]
		PublishUserId = 8,
		[Token(Token = "0x400030D")]
		DeleteNullProps = 0x10,
		[Token(Token = "0x400030E")]
		BroadcastPropsChangeToAll = 0x20
	}

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly Dictionary<byte, object> opParameters;

	[Token(Token = "0x1700003D")]
	internal bool IsProtocolSecure
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xCBE5E0", Offset = "0xCBE5E0", VA = "0xCBE5E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xCBE600", Offset = "0xCBE600", VA = "0xCBE600")]
	public LoadBalancingPeer(ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xCBE6B0", Offset = "0xCBE6B0", VA = "0xCBE6B0")]
	public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xCBE720", Offset = "0xCBE720", VA = "0xCBE720", Slot = "16")]
	public virtual bool OpGetRegions(string appId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xCBE808", Offset = "0xCBE808", VA = "0xCBE808", Slot = "17")]
	public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xCBEA24", Offset = "0xCBEA24", VA = "0xCBEA24", Slot = "18")]
	public virtual bool OpLeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xCBEB3C", Offset = "0xCBEB3C", VA = "0xCBEB3C")]
	private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xCBF024", Offset = "0xCBF024", VA = "0xCBF024", Slot = "19")]
	public virtual bool OpCreateRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xCBF304", Offset = "0xCBF304", VA = "0xCBF304", Slot = "20")]
	public virtual bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xCBF654", Offset = "0xCBF654", VA = "0xCBF654", Slot = "21")]
	public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xCBF9BC", Offset = "0xCBF9BC", VA = "0xCBF9BC", Slot = "22")]
	public virtual bool OpLeaveRoom(bool becomeInactive)
	{
		return default(bool);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xCBFAEC", Offset = "0xCBFAEC", VA = "0xCBFAEC", Slot = "23")]
	public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xCBFDF4", Offset = "0xCBFDF4", VA = "0xCBFDF4", Slot = "24")]
	public virtual bool OpFindFriends(string[] friendsToFind, [Optional] FindFriendsOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xCBFF88", Offset = "0xCBFF88", VA = "0xCBFF88")]
	public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xCC0004", Offset = "0xCC0004", VA = "0xCC0004")]
	protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xCC033C", Offset = "0xCC033C", VA = "0xCC033C")]
	protected internal void OpSetPropertyOfRoom(byte propCode, object value)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xCC0650", Offset = "0xCC0650", VA = "0xCC0650")]
	[Obsolete("Use the other overload method")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, bool broadcast, byte channelId)
	{
		return default(bool);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xCC06C4", Offset = "0xCC06C4", VA = "0xCC06C4")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xCC03FC", Offset = "0xCC03FC", VA = "0xCC03FC")]
	protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xCC0754", Offset = "0xCC0754", VA = "0xCC0754", Slot = "25")]
	public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
	{
		return default(bool);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xCC0BBC", Offset = "0xCC0BBC", VA = "0xCC0BBC", Slot = "26")]
	public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
	{
		return default(bool);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xCC0FF8", Offset = "0xCC0FF8", VA = "0xCC0FF8", Slot = "27")]
	public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xCC11A4", Offset = "0xCC11A4", VA = "0xCC11A4", Slot = "28")]
	public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xCC1430", Offset = "0xCC1430", VA = "0xCC1430", Slot = "29")]
	public virtual bool OpSettings(bool receiveLobbyStats)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000072")]
internal class OpJoinRandomRoomParams
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte ExpectedMaxPlayers;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public MatchmakingMode MatchingType;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby TypedLobby;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SqlLobbyFilter;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xCC1610", Offset = "0xCC1610", VA = "0xCC1610")]
	public OpJoinRandomRoomParams()
	{
	}
}
[Token(Token = "0x2000073")]
internal class EnterRoomParams
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string RoomName;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomOptions RoomOptions;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby Lobby;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExitGames.Client.Photon.Hashtable PlayerProperties;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool OnGameServer;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool CreateIfNotExists;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool RejoinOnly;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xCC1618", Offset = "0xCC1618", VA = "0xCC1618")]
	public EnterRoomParams()
	{
	}
}
[Token(Token = "0x2000074")]
public class ErrorCode
{
	[Token(Token = "0x400031D")]
	public const int Ok = 0;

	[Token(Token = "0x400031E")]
	public const int OperationNotAllowedInCurrentState = -3;

	[Token(Token = "0x400031F")]
	[Obsolete("Use InvalidOperation.")]
	public const int InvalidOperationCode = -2;

	[Token(Token = "0x4000320")]
	public const int InvalidOperation = -2;

	[Token(Token = "0x4000321")]
	public const int InternalServerError = -1;

	[Token(Token = "0x4000322")]
	public const int InvalidAuthentication = 32767;

	[Token(Token = "0x4000323")]
	public const int GameIdAlreadyExists = 32766;

	[Token(Token = "0x4000324")]
	public const int GameFull = 32765;

	[Token(Token = "0x4000325")]
	public const int GameClosed = 32764;

	[Token(Token = "0x4000326")]
	[Obsolete("No longer used, cause random matchmaking is no longer a process.")]
	public const int AlreadyMatched = 32763;

	[Token(Token = "0x4000327")]
	public const int ServerFull = 32762;

	[Token(Token = "0x4000328")]
	public const int UserBlocked = 32761;

	[Token(Token = "0x4000329")]
	public const int NoRandomMatchFound = 32760;

	[Token(Token = "0x400032A")]
	public const int GameDoesNotExist = 32758;

	[Token(Token = "0x400032B")]
	public const int MaxCcuReached = 32757;

	[Token(Token = "0x400032C")]
	public const int InvalidRegion = 32756;

	[Token(Token = "0x400032D")]
	public const int CustomAuthenticationFailed = 32755;

	[Token(Token = "0x400032E")]
	public const int AuthenticationTicketExpired = 32753;

	[Token(Token = "0x400032F")]
	public const int PluginReportedError = 32752;

	[Token(Token = "0x4000330")]
	public const int PluginMismatch = 32751;

	[Token(Token = "0x4000331")]
	public const int JoinFailedPeerAlreadyJoined = 32750;

	[Token(Token = "0x4000332")]
	public const int JoinFailedFoundInactiveJoiner = 32749;

	[Token(Token = "0x4000333")]
	public const int JoinFailedWithRejoinerNotFound = 32748;

	[Token(Token = "0x4000334")]
	public const int JoinFailedFoundExcludedUserId = 32747;

	[Token(Token = "0x4000335")]
	public const int JoinFailedFoundActiveJoiner = 32746;

	[Token(Token = "0x4000336")]
	public const int HttpLimitReached = 32745;

	[Token(Token = "0x4000337")]
	public const int ExternalHttpCallFailed = 32744;

	[Token(Token = "0x4000338")]
	public const int SlotError = 32742;

	[Token(Token = "0x4000339")]
	public const int InvalidEncryptionParameters = 32741;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xCC1628", Offset = "0xCC1628", VA = "0xCC1628")]
	public ErrorCode()
	{
	}
}
[Token(Token = "0x2000075")]
public class ActorProperties
{
	[Token(Token = "0x400033A")]
	public const byte PlayerName = byte.MaxValue;

	[Token(Token = "0x400033B")]
	public const byte IsInactive = 254;

	[Token(Token = "0x400033C")]
	public const byte UserId = 253;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xCC1630", Offset = "0xCC1630", VA = "0xCC1630")]
	public ActorProperties()
	{
	}
}
[Token(Token = "0x2000076")]
public class GamePropertyKey
{
	[Token(Token = "0x400033D")]
	public const byte MaxPlayers = byte.MaxValue;

	[Token(Token = "0x400033E")]
	public const byte IsVisible = 254;

	[Token(Token = "0x400033F")]
	public const byte IsOpen = 253;

	[Token(Token = "0x4000340")]
	public const byte PlayerCount = 252;

	[Token(Token = "0x4000341")]
	public const byte Removed = 251;

	[Token(Token = "0x4000342")]
	public const byte PropsListedInLobby = 250;

	[Token(Token = "0x4000343")]
	public const byte CleanupCacheOnLeave = 249;

	[Token(Token = "0x4000344")]
	public const byte MasterClientId = 248;

	[Token(Token = "0x4000345")]
	public const byte ExpectedUsers = 247;

	[Token(Token = "0x4000346")]
	public const byte PlayerTtl = 246;

	[Token(Token = "0x4000347")]
	public const byte EmptyRoomTtl = 245;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xCC1638", Offset = "0xCC1638", VA = "0xCC1638")]
	public GamePropertyKey()
	{
	}
}
[Token(Token = "0x2000077")]
public class EventCode
{
	[Token(Token = "0x4000348")]
	public const byte GameList = 230;

	[Token(Token = "0x4000349")]
	public const byte GameListUpdate = 229;

	[Token(Token = "0x400034A")]
	public const byte QueueState = 228;

	[Token(Token = "0x400034B")]
	public const byte Match = 227;

	[Token(Token = "0x400034C")]
	public const byte AppStats = 226;

	[Token(Token = "0x400034D")]
	public const byte LobbyStats = 224;

	[Token(Token = "0x400034E")]
	[Obsolete("TCP routing was removed after becoming obsolete.")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x400034F")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x4000350")]
	public const byte Leave = 254;

	[Token(Token = "0x4000351")]
	public const byte PropertiesChanged = 253;

	[Token(Token = "0x4000352")]
	[Obsolete("Use PropertiesChanged now.")]
	public const byte SetProperties = 253;

	[Token(Token = "0x4000353")]
	public const byte ErrorInfo = 251;

	[Token(Token = "0x4000354")]
	public const byte CacheSliceChanged = 250;

	[Token(Token = "0x4000355")]
	public const byte AuthEvent = 223;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xCC1640", Offset = "0xCC1640", VA = "0xCC1640")]
	public EventCode()
	{
	}
}
[Token(Token = "0x2000078")]
public class ParameterCode
{
	[Token(Token = "0x4000356")]
	public const byte SuppressRoomEvents = 237;

	[Token(Token = "0x4000357")]
	public const byte EmptyRoomTTL = 236;

	[Token(Token = "0x4000358")]
	public const byte PlayerTTL = 235;

	[Token(Token = "0x4000359")]
	public const byte EventForward = 234;

	[Token(Token = "0x400035A")]
	[Obsolete("Use: IsInactive")]
	public const byte IsComingBack = 233;

	[Token(Token = "0x400035B")]
	public const byte IsInactive = 233;

	[Token(Token = "0x400035C")]
	public const byte CheckUserOnJoin = 232;

	[Token(Token = "0x400035D")]
	public const byte ExpectedValues = 231;

	[Token(Token = "0x400035E")]
	public const byte Address = 230;

	[Token(Token = "0x400035F")]
	public const byte PeerCount = 229;

	[Token(Token = "0x4000360")]
	public const byte GameCount = 228;

	[Token(Token = "0x4000361")]
	public const byte MasterPeerCount = 227;

	[Token(Token = "0x4000362")]
	public const byte UserId = 225;

	[Token(Token = "0x4000363")]
	public const byte ApplicationId = 224;

	[Token(Token = "0x4000364")]
	public const byte Position = 223;

	[Token(Token = "0x4000365")]
	public const byte MatchMakingType = 223;

	[Token(Token = "0x4000366")]
	public const byte GameList = 222;

	[Token(Token = "0x4000367")]
	public const byte Secret = 221;

	[Token(Token = "0x4000368")]
	public const byte AppVersion = 220;

	[Token(Token = "0x4000369")]
	[Obsolete("TCP routing was removed after becoming obsolete.")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x400036A")]
	[Obsolete("TCP routing was removed after becoming obsolete.")]
	public const byte AzureLocalNodeId = 209;

	[Token(Token = "0x400036B")]
	[Obsolete("TCP routing was removed after becoming obsolete.")]
	public const byte AzureMasterNodeId = 208;

	[Token(Token = "0x400036C")]
	public const byte RoomName = byte.MaxValue;

	[Token(Token = "0x400036D")]
	public const byte Broadcast = 250;

	[Token(Token = "0x400036E")]
	public const byte ActorList = 252;

	[Token(Token = "0x400036F")]
	public const byte ActorNr = 254;

	[Token(Token = "0x4000370")]
	public const byte PlayerProperties = 249;

	[Token(Token = "0x4000371")]
	public const byte CustomEventContent = 245;

	[Token(Token = "0x4000372")]
	public const byte Data = 245;

	[Token(Token = "0x4000373")]
	public const byte Code = 244;

	[Token(Token = "0x4000374")]
	public const byte GameProperties = 248;

	[Token(Token = "0x4000375")]
	public const byte Properties = 251;

	[Token(Token = "0x4000376")]
	public const byte TargetActorNr = 253;

	[Token(Token = "0x4000377")]
	public const byte ReceiverGroup = 246;

	[Token(Token = "0x4000378")]
	public const byte Cache = 247;

	[Token(Token = "0x4000379")]
	public const byte CleanupCacheOnLeave = 241;

	[Token(Token = "0x400037A")]
	public const byte Group = 240;

	[Token(Token = "0x400037B")]
	public const byte Remove = 239;

	[Token(Token = "0x400037C")]
	public const byte PublishUserId = 239;

	[Token(Token = "0x400037D")]
	public const byte Add = 238;

	[Token(Token = "0x400037E")]
	public const byte Info = 218;

	[Token(Token = "0x400037F")]
	public const byte ClientAuthenticationType = 217;

	[Token(Token = "0x4000380")]
	public const byte ClientAuthenticationParams = 216;

	[Token(Token = "0x4000381")]
	public const byte JoinMode = 215;

	[Token(Token = "0x4000382")]
	public const byte ClientAuthenticationData = 214;

	[Token(Token = "0x4000383")]
	public const byte MasterClientId = 203;

	[Token(Token = "0x4000384")]
	public const byte FindFriendsRequestList = 1;

	[Token(Token = "0x4000385")]
	public const byte FindFriendsOptions = 2;

	[Token(Token = "0x4000386")]
	public const byte FindFriendsResponseOnlineList = 1;

	[Token(Token = "0x4000387")]
	public const byte FindFriendsResponseRoomIdList = 2;

	[Token(Token = "0x4000388")]
	public const byte LobbyName = 213;

	[Token(Token = "0x4000389")]
	public const byte LobbyType = 212;

	[Token(Token = "0x400038A")]
	public const byte LobbyStats = 211;

	[Token(Token = "0x400038B")]
	public const byte Region = 210;

	[Token(Token = "0x400038C")]
	public const byte UriPath = 209;

	[Token(Token = "0x400038D")]
	public const byte WebRpcParameters = 208;

	[Token(Token = "0x400038E")]
	public const byte WebRpcReturnCode = 207;

	[Token(Token = "0x400038F")]
	public const byte WebRpcReturnMessage = 206;

	[Token(Token = "0x4000390")]
	public const byte CacheSliceIndex = 205;

	[Token(Token = "0x4000391")]
	public const byte Plugins = 204;

	[Token(Token = "0x4000392")]
	public const byte NickName = 202;

	[Token(Token = "0x4000393")]
	public const byte PluginName = 201;

	[Token(Token = "0x4000394")]
	public const byte PluginVersion = 200;

	[Token(Token = "0x4000395")]
	public const byte Cluster = 196;

	[Token(Token = "0x4000396")]
	public const byte ExpectedProtocol = 195;

	[Token(Token = "0x4000397")]
	public const byte CustomInitData = 194;

	[Token(Token = "0x4000398")]
	public const byte EncryptionMode = 193;

	[Token(Token = "0x4000399")]
	public const byte EncryptionData = 192;

	[Token(Token = "0x400039A")]
	public const byte RoomOptionFlags = 191;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xCC1648", Offset = "0xCC1648", VA = "0xCC1648")]
	public ParameterCode()
	{
	}
}
[Token(Token = "0x2000079")]
public class OperationCode
{
	[Token(Token = "0x400039B")]
	[Obsolete("Exchanging encrpytion keys is done internally in the lib now. Don't expect this operation-result.")]
	public const byte ExchangeKeysForEncryption = 250;

	[Token(Token = "0x400039C")]
	[Obsolete]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x400039D")]
	public const byte AuthenticateOnce = 231;

	[Token(Token = "0x400039E")]
	public const byte Authenticate = 230;

	[Token(Token = "0x400039F")]
	public const byte JoinLobby = 229;

	[Token(Token = "0x40003A0")]
	public const byte LeaveLobby = 228;

	[Token(Token = "0x40003A1")]
	public const byte CreateGame = 227;

	[Token(Token = "0x40003A2")]
	public const byte JoinGame = 226;

	[Token(Token = "0x40003A3")]
	public const byte JoinRandomGame = 225;

	[Token(Token = "0x40003A4")]
	public const byte Leave = 254;

	[Token(Token = "0x40003A5")]
	public const byte RaiseEvent = 253;

	[Token(Token = "0x40003A6")]
	public const byte SetProperties = 252;

	[Token(Token = "0x40003A7")]
	public const byte GetProperties = 251;

	[Token(Token = "0x40003A8")]
	public const byte ChangeGroups = 248;

	[Token(Token = "0x40003A9")]
	public const byte FindFriends = 222;

	[Token(Token = "0x40003AA")]
	public const byte GetLobbyStats = 221;

	[Token(Token = "0x40003AB")]
	public const byte GetRegions = 220;

	[Token(Token = "0x40003AC")]
	public const byte WebRpc = 219;

	[Token(Token = "0x40003AD")]
	public const byte ServerSettings = 218;

	[Token(Token = "0x40003AE")]
	public const byte GetGameList = 217;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xCC1650", Offset = "0xCC1650", VA = "0xCC1650")]
	public OperationCode()
	{
	}
}
[Token(Token = "0x200007A")]
public enum JoinMode : byte
{
	[Token(Token = "0x40003B0")]
	Default,
	[Token(Token = "0x40003B1")]
	CreateIfNotExists,
	[Token(Token = "0x40003B2")]
	JoinOrRejoin,
	[Token(Token = "0x40003B3")]
	RejoinOnly
}
[Token(Token = "0x200007B")]
public enum MatchmakingMode : byte
{
	[Token(Token = "0x40003B5")]
	FillRoom,
	[Token(Token = "0x40003B6")]
	SerialMatching,
	[Token(Token = "0x40003B7")]
	RandomMatching
}
[Token(Token = "0x200007C")]
public enum ReceiverGroup : byte
{
	[Token(Token = "0x40003B9")]
	Others,
	[Token(Token = "0x40003BA")]
	All,
	[Token(Token = "0x40003BB")]
	MasterClient
}
[Token(Token = "0x200007D")]
public enum EventCaching : byte
{
	[Token(Token = "0x40003BD")]
	DoNotCache = 0,
	[Token(Token = "0x40003BE")]
	[Obsolete]
	MergeCache = 1,
	[Token(Token = "0x40003BF")]
	[Obsolete]
	ReplaceCache = 2,
	[Token(Token = "0x40003C0")]
	[Obsolete]
	RemoveCache = 3,
	[Token(Token = "0x40003C1")]
	AddToRoomCache = 4,
	[Token(Token = "0x40003C2")]
	AddToRoomCacheGlobal = 5,
	[Token(Token = "0x40003C3")]
	RemoveFromRoomCache = 6,
	[Token(Token = "0x40003C4")]
	RemoveFromRoomCacheForActorsLeft = 7,
	[Token(Token = "0x40003C5")]
	SliceIncreaseIndex = 10,
	[Token(Token = "0x40003C6")]
	SliceSetIndex = 11,
	[Token(Token = "0x40003C7")]
	SlicePurgeIndex = 12,
	[Token(Token = "0x40003C8")]
	SlicePurgeUpToIndex = 13
}
[Token(Token = "0x200007E")]
[Flags]
public enum PropertyTypeFlag : byte
{
	[Token(Token = "0x40003CA")]
	None = 0,
	[Token(Token = "0x40003CB")]
	Game = 1,
	[Token(Token = "0x40003CC")]
	Actor = 2,
	[Token(Token = "0x40003CD")]
	GameAndActor = 3
}
[Token(Token = "0x200007F")]
public class RoomOptions
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isVisibleField;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isOpenField;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public byte MaxPlayers;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int PlayerTtl;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int EmptyRoomTtl;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool cleanupCacheOnLeaveField;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExitGames.Client.Photon.Hashtable CustomRoomProperties;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] CustomRoomPropertiesForLobby;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] Plugins;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool suppressRoomEventsField;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool publishUserIdField;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool deleteNullPropertiesField;

	[Token(Token = "0x1700003E")]
	public bool IsVisible
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0xCC1658", Offset = "0xCC1658", VA = "0xCC1658")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0xCC1660", Offset = "0xCC1660", VA = "0xCC1660")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public bool IsOpen
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xCC166C", Offset = "0xCC166C", VA = "0xCC166C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xCC1674", Offset = "0xCC1674", VA = "0xCC1674")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public bool CleanupCacheOnLeave
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xCC1680", Offset = "0xCC1680", VA = "0xCC1680")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xCC1688", Offset = "0xCC1688", VA = "0xCC1688")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public bool SuppressRoomEvents
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xCC1694", Offset = "0xCC1694", VA = "0xCC1694")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000042")]
	public bool PublishUserId
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xCC169C", Offset = "0xCC169C", VA = "0xCC169C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xCC16A4", Offset = "0xCC16A4", VA = "0xCC16A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public bool DeleteNullProperties
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xCC16B0", Offset = "0xCC16B0", VA = "0xCC16B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xCC16B8", Offset = "0xCC16B8", VA = "0xCC16B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool isVisible
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xCC16C4", Offset = "0xCC16C4", VA = "0xCC16C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xCC16CC", Offset = "0xCC16CC", VA = "0xCC16CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool isOpen
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xCC16D8", Offset = "0xCC16D8", VA = "0xCC16D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xCC16E0", Offset = "0xCC16E0", VA = "0xCC16E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	[Obsolete("Use property with uppercase naming instead.")]
	public byte maxPlayers
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xCC16EC", Offset = "0xCC16EC", VA = "0xCC16EC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xCC16F4", Offset = "0xCC16F4", VA = "0xCC16F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool cleanupCacheOnLeave
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xCC16FC", Offset = "0xCC16FC", VA = "0xCC16FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xCC1704", Offset = "0xCC1704", VA = "0xCC1704")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	[Obsolete("Use property with uppercase naming instead.")]
	public ExitGames.Client.Photon.Hashtable customRoomProperties
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xCC1710", Offset = "0xCC1710", VA = "0xCC1710")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xCC1718", Offset = "0xCC1718", VA = "0xCC1718")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	[Obsolete("Use property with uppercase naming instead.")]
	public string[] customRoomPropertiesForLobby
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xCC1720", Offset = "0xCC1720", VA = "0xCC1720")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xCC1728", Offset = "0xCC1728", VA = "0xCC1728")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	[Obsolete("Use property with uppercase naming instead.")]
	public string[] plugins
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0xCC1730", Offset = "0xCC1730", VA = "0xCC1730")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xCC1738", Offset = "0xCC1738", VA = "0xCC1738")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool suppressRoomEvents
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xCC1740", Offset = "0xCC1740", VA = "0xCC1740")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004C")]
	[Obsolete("Use property with uppercase naming instead.")]
	public bool publishUserId
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xCC1748", Offset = "0xCC1748", VA = "0xCC1748")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xCC1750", Offset = "0xCC1750", VA = "0xCC1750")]
		set
		{
		}
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xCBEF60", Offset = "0xCBEF60", VA = "0xCBEF60")]
	public RoomOptions()
	{
	}
}
[Token(Token = "0x2000080")]
public class RaiseEventOptions
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RaiseEventOptions Default;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventCaching CachingOption;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte InterestGroup;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] TargetActors;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReceiverGroup Receivers;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte SequenceChannel;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool ForwardToWebhook;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool Encrypt;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xCC175C", Offset = "0xCC175C", VA = "0xCC175C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xCC17F8", Offset = "0xCC17F8", VA = "0xCC17F8")]
	public RaiseEventOptions()
	{
	}
}
[Token(Token = "0x2000081")]
public enum LobbyType : byte
{
	[Token(Token = "0x40003E3")]
	Default = 0,
	[Token(Token = "0x40003E4")]
	SqlLobby = 2,
	[Token(Token = "0x40003E5")]
	AsyncRandomLobby = 3
}
[Token(Token = "0x2000082")]
public class TypedLobby
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyType Type;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly TypedLobby Default;

	[Token(Token = "0x1700004D")]
	public bool IsDefault
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xCBEA08", Offset = "0xCBEA08", VA = "0xCBEA08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xCC1864", Offset = "0xCC1864", VA = "0xCC1864")]
	public TypedLobby()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xCC18C4", Offset = "0xCC18C4", VA = "0xCC18C4")]
	public TypedLobby(string name, LobbyType type)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xCC18F4", Offset = "0xCC18F4", VA = "0xCC18F4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000083")]
public class TypedLobbyInfo : TypedLobby
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PlayerCount;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RoomCount;

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xCC19E0", Offset = "0xCC19E0", VA = "0xCC19E0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xCC1B8C", Offset = "0xCC1B8C", VA = "0xCC1B8C")]
	public TypedLobbyInfo()
	{
	}
}
[Token(Token = "0x2000084")]
public enum AuthModeOption
{
	[Token(Token = "0x40003EC")]
	Auth,
	[Token(Token = "0x40003ED")]
	AuthOnce,
	[Token(Token = "0x40003EE")]
	AuthOnceWss
}
[Token(Token = "0x2000085")]
public enum CustomAuthenticationType : byte
{
	[Token(Token = "0x40003F0")]
	Custom = 0,
	[Token(Token = "0x40003F1")]
	Steam = 1,
	[Token(Token = "0x40003F2")]
	Facebook = 2,
	[Token(Token = "0x40003F3")]
	Oculus = 3,
	[Token(Token = "0x40003F4")]
	PlayStation = 4,
	[Token(Token = "0x40003F5")]
	Xbox = 5,
	[Token(Token = "0x40003F6")]
	Viveport = 10,
	[Token(Token = "0x40003F7")]
	NintendoSwitch = 11,
	[Token(Token = "0x40003F8")]
	None = byte.MaxValue
}
[Token(Token = "0x2000086")]
public class AuthenticationValues
{
	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomAuthenticationType authType;

	[Token(Token = "0x1700004E")]
	public CustomAuthenticationType AuthType
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xCC1BE0", Offset = "0xCC1BE0", VA = "0xCC1BE0")]
		get
		{
			return default(CustomAuthenticationType);
		}
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xCC1BE8", Offset = "0xCC1BE8", VA = "0xCC1BE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public string AuthGetParameters
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xCC1BF0", Offset = "0xCC1BF0", VA = "0xCC1BF0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xCC1BF8", Offset = "0xCC1BF8", VA = "0xCC1BF8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public object AuthPostData
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0xCC1C00", Offset = "0xCC1C00", VA = "0xCC1C00")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xCC1C08", Offset = "0xCC1C08", VA = "0xCC1C08")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public string Token
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0xCC1C10", Offset = "0xCC1C10", VA = "0xCC1C10")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xCC1C18", Offset = "0xCC1C18", VA = "0xCC1C18")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public string UserId
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xCC1C20", Offset = "0xCC1C20", VA = "0xCC1C20")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xCC1C28", Offset = "0xCC1C28", VA = "0xCC1C28")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xCC1C30", Offset = "0xCC1C30", VA = "0xCC1C30")]
	public AuthenticationValues()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xCC1C40", Offset = "0xCC1C40", VA = "0xCC1C40")]
	public AuthenticationValues(string userId)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xCC1C70", Offset = "0xCC1C70", VA = "0xCC1C70", Slot = "4")]
	public virtual void SetAuthPostData(string stringData)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xCC1CAC", Offset = "0xCC1CAC", VA = "0xCC1CAC", Slot = "5")]
	public virtual void SetAuthPostData(byte[] byteData)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xCC1CB4", Offset = "0xCC1CB4", VA = "0xCC1CB4", Slot = "6")]
	public virtual void SetAuthPostData(Dictionary<string, object> dictData)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xCC1CBC", Offset = "0xCC1CBC", VA = "0xCC1CBC", Slot = "7")]
	public virtual void AddAuthParameter(string key, string value)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xCC1E88", Offset = "0xCC1E88", VA = "0xCC1E88", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000087")]
public class FindFriendsOptions
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool CreatedOnGs;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool Visible;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool Open;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xCBFF60", Offset = "0xCBFF60", VA = "0xCBFF60")]
	internal int ToIntFlags()
	{
		return default(int);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xCC1F20", Offset = "0xCC1F20", VA = "0xCC1F20")]
	public FindFriendsOptions()
	{
	}
}
[Token(Token = "0x2000088")]
public enum ClientState
{
	[Token(Token = "0x4000402")]
	Uninitialized,
	[Token(Token = "0x4000403")]
	PeerCreated,
	[Token(Token = "0x4000404")]
	Queued,
	[Token(Token = "0x4000405")]
	Authenticated,
	[Token(Token = "0x4000406")]
	JoinedLobby,
	[Token(Token = "0x4000407")]
	DisconnectingFromMasterserver,
	[Token(Token = "0x4000408")]
	ConnectingToGameserver,
	[Token(Token = "0x4000409")]
	ConnectedToGameserver,
	[Token(Token = "0x400040A")]
	Joining,
	[Token(Token = "0x400040B")]
	Joined,
	[Token(Token = "0x400040C")]
	Leaving,
	[Token(Token = "0x400040D")]
	DisconnectingFromGameserver,
	[Token(Token = "0x400040E")]
	ConnectingToMasterserver,
	[Token(Token = "0x400040F")]
	QueuedComingFromGameserver,
	[Token(Token = "0x4000410")]
	Disconnecting,
	[Token(Token = "0x4000411")]
	Disconnected,
	[Token(Token = "0x4000412")]
	ConnectedToMaster,
	[Token(Token = "0x4000413")]
	ConnectingToNameServer,
	[Token(Token = "0x4000414")]
	ConnectedToNameServer,
	[Token(Token = "0x4000415")]
	DisconnectingFromNameServer,
	[Token(Token = "0x4000416")]
	Authenticating
}
[Token(Token = "0x2000089")]
internal enum JoinType
{
	[Token(Token = "0x4000418")]
	CreateRoom,
	[Token(Token = "0x4000419")]
	JoinRoom,
	[Token(Token = "0x400041A")]
	JoinRandomRoom,
	[Token(Token = "0x400041B")]
	JoinOrCreateRoom
}
[Token(Token = "0x200008A")]
public enum DisconnectCause
{
	[Token(Token = "0x400041D")]
	DisconnectByServerUserLimit = 1042,
	[Token(Token = "0x400041E")]
	ExceptionOnConnect = 1023,
	[Token(Token = "0x400041F")]
	DisconnectByServerTimeout = 1041,
	[Token(Token = "0x4000420")]
	DisconnectByServerLogic = 1043,
	[Token(Token = "0x4000421")]
	Exception = 1026,
	[Token(Token = "0x4000422")]
	InvalidAuthentication = 32767,
	[Token(Token = "0x4000423")]
	MaxCcuReached = 32757,
	[Token(Token = "0x4000424")]
	InvalidRegion = 32756,
	[Token(Token = "0x4000425")]
	SecurityExceptionOnConnect = 1022,
	[Token(Token = "0x4000426")]
	DisconnectByClientTimeout = 1040,
	[Token(Token = "0x4000427")]
	InternalReceiveException = 1039,
	[Token(Token = "0x4000428")]
	AuthenticationTicketExpired = 32753
}
[Token(Token = "0x200008B")]
public enum ServerConnection
{
	[Token(Token = "0x400042A")]
	MasterServer,
	[Token(Token = "0x400042B")]
	GameServer,
	[Token(Token = "0x400042C")]
	NameServer
}
[Token(Token = "0x200008C")]
internal class NetworkingPeer : LoadBalancingPeer, IPhotonPeerListener
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected internal string AppId;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string tokenCache;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AuthModeOption AuthMode;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public EncryptionMode EncryptionMode;

	[Token(Token = "0x4000433")]
	public const string NameServerHost = "ns.exitgames.com";

	[Token(Token = "0x4000434")]
	public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool IsInitialConnect;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool insideLobby;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected internal List<TypedLobbyInfo> LobbyStatistics;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Dictionary<string, RoomInfo> mGameList;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public RoomInfo[] mGameListCopy;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string playername;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool mPlayernameHasToBeUpdated;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Room currentRoom;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private JoinType lastJoinType;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected internal EnterRoomParams enterRoomParamsCache;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool didAuthenticate;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string[] friendListRequested;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int friendListTimestamp;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool isFetchingFriendList;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private string cloudCluster;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public string CurrentCluster;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Dictionary<int, PhotonPlayer> mActors;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public PhotonPlayer[] mOtherPlayerListCopy;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public PhotonPlayer[] mPlayerListCopy;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool hasSwitchedMC;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private HashSet<byte> allowedReceivingGroups;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private HashSet<byte> blockSendingGroups;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	protected internal Dictionary<int, PhotonView> photonViewList;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private readonly PhotonStream readStream;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private readonly PhotonStream pStream;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupReliable;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupUnreliable;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected internal short currentLevelPrefix;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
	protected internal bool loadingLevelAndPausedNetwork;

	[Token(Token = "0x400045E")]
	protected internal const string CurrentSceneProperty = "curScn";

	[Token(Token = "0x400045F")]
	protected internal const string CurrentScenePropertyLoadAsync = "curScnLa";

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool UsePrefabCache;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	internal IPunPrefabPool ObjectPool;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Dictionary<Type, List<MethodInfo>> monoRPCMethodsCache;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private readonly Dictionary<string, int> rpcShortcuts;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string OnPhotonInstantiateString;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private string cachedServerAddress;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private string cachedApplicationName;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private ServerConnection cachedServerType;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private AsyncOperation _AsyncLevelLoadingOperation;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private RaiseEventOptions _levelReloadEventOptions;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private bool _isReconnecting;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private readonly Type typePunRPC;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private readonly Type typePhotonMessageInfo;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private readonly object keyByteZero;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private readonly object keyByteOne;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private readonly object keyByteTwo;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private readonly object keyByteThree;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private readonly object keyByteFour;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private readonly object keyByteFive;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private readonly object[] emptyObjectArray;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private readonly Type[] emptyTypeArray;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Dictionary<int, object[]> tempInstantiationData;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private readonly ExitGames.Client.Photon.Hashtable reusedRpcEvent;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int ObjectsInOneUpdate;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private RaiseEventOptions options;

	[Token(Token = "0x400047A")]
	public const int SyncViewId = 0;

	[Token(Token = "0x400047B")]
	public const int SyncCompressed = 1;

	[Token(Token = "0x400047C")]
	public const int SyncNullValues = 2;

	[Token(Token = "0x400047D")]
	public const int SyncFirstValue = 3;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public bool IsReloadingLevel;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D9")]
	public bool AsynchLevelLoadCall;

	[Token(Token = "0x17000053")]
	protected internal string AppVersion
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xCC1F28", Offset = "0xCC1F28", VA = "0xCC1F28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public AuthenticationValues AuthValues
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xCC1FE4", Offset = "0xCC1FE4", VA = "0xCC1FE4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xCC1FEC", Offset = "0xCC1FEC", VA = "0xCC1FEC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	private string TokenForInit
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xCC1FF4", Offset = "0xCC1FF4", VA = "0xCC1FF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000056")]
	public bool IsUsingNameServer
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xCC2014", Offset = "0xCC2014", VA = "0xCC2014")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xCC201C", Offset = "0xCC201C", VA = "0xCC201C")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public string NameServerAddress
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xCC2028", Offset = "0xCC2028", VA = "0xCC2028")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public string MasterServerAddress
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xCC2204", Offset = "0xCC2204", VA = "0xCC2204")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xCC220C", Offset = "0xCC220C", VA = "0xCC220C")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public string GameServerAddress
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xCC2214", Offset = "0xCC2214", VA = "0xCC2214")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xCC221C", Offset = "0xCC221C", VA = "0xCC221C")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	protected internal ServerConnection Server
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xCC2224", Offset = "0xCC2224", VA = "0xCC2224")]
		[CompilerGenerated]
		get
		{
			return default(ServerConnection);
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xCC222C", Offset = "0xCC222C", VA = "0xCC222C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public ClientState State
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xCC2234", Offset = "0xCC2234", VA = "0xCC2234")]
		[CompilerGenerated]
		get
		{
			return default(ClientState);
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xCC223C", Offset = "0xCC223C", VA = "0xCC223C")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public TypedLobby lobby
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xCC2244", Offset = "0xCC2244", VA = "0xCC2244")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xCC224C", Offset = "0xCC224C", VA = "0xCC224C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	private bool requestLobbyStatistics
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xCC2254", Offset = "0xCC2254", VA = "0xCC2254")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public string PlayerName
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xCC22C4", Offset = "0xCC22C4", VA = "0xCC22C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xCC22CC", Offset = "0xCC22CC", VA = "0xCC22CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public Room CurrentRoom
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xCC234C", Offset = "0xCC234C", VA = "0xCC234C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xCC2464", Offset = "0xCC2464", VA = "0xCC2464")]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xCC246C", Offset = "0xCC246C", VA = "0xCC246C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xCC2474", Offset = "0xCC2474", VA = "0xCC2474")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public int PlayersOnMasterCount
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xCC247C", Offset = "0xCC247C", VA = "0xCC247C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xCC2484", Offset = "0xCC2484", VA = "0xCC2484")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public int PlayersInRoomsCount
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xCC248C", Offset = "0xCC248C", VA = "0xCC248C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xCC2494", Offset = "0xCC2494", VA = "0xCC2494")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public int RoomsCount
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xCC249C", Offset = "0xCC249C", VA = "0xCC249C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xCC24A4", Offset = "0xCC24A4", VA = "0xCC24A4")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000064")]
	protected internal int FriendListAge
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xCC24AC", Offset = "0xCC24AC", VA = "0xCC24AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000065")]
	public bool IsAuthorizeSecretAvailable
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xCC24E4", Offset = "0xCC24E4", VA = "0xCC24E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public List<Region> AvailableRegions
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xCC250C", Offset = "0xCC250C", VA = "0xCC250C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xCC2514", Offset = "0xCC2514", VA = "0xCC2514")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public CloudRegionCode CloudRegion
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xCC251C", Offset = "0xCC251C", VA = "0xCC251C")]
		[CompilerGenerated]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xCC2524", Offset = "0xCC2524", VA = "0xCC2524")]
		[CompilerGenerated]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public int mMasterClientId
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xCC252C", Offset = "0xCC252C", VA = "0xCC252C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xCC25EC", Offset = "0xCC25EC", VA = "0xCC25EC")]
		private set
		{
		}
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xCC2604", Offset = "0xCC2604", VA = "0xCC2604")]
	public NetworkingPeer(string playername, ConnectionProtocol connectionProtocol)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xCC202C", Offset = "0xCC202C", VA = "0xCC202C")]
	private string GetNameServerAddress()
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xCC2E74", Offset = "0xCC2E74", VA = "0xCC2E74", Slot = "6")]
	public override bool Connect(string serverAddress, string applicationName)
	{
		return default(bool);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xCC2EE4", Offset = "0xCC2EE4", VA = "0xCC2EE4")]
	public bool ReconnectToMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xCC31CC", Offset = "0xCC31CC", VA = "0xCC31CC")]
	public bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xCC2FAC", Offset = "0xCC2FAC", VA = "0xCC2FAC")]
	public bool Connect(string serverAddress, ServerConnection type)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xCC391C", Offset = "0xCC391C", VA = "0xCC391C")]
	private bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xCC3A08", Offset = "0xCC3A08", VA = "0xCC3A08")]
	public bool ConnectToNameServer()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xCC3B48", Offset = "0xCC3B48", VA = "0xCC3B48")]
	public bool ConnectToRegionMaster(CloudRegionCode region, [Optional] string specificCluster)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xCC32C8", Offset = "0xCC32C8", VA = "0xCC32C8")]
	protected internal void SetupProtocol(ServerConnection serverType)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xCC3F08", Offset = "0xCC3F08", VA = "0xCC3F08", Slot = "8")]
	public override void Disconnect()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xCC3CE4", Offset = "0xCC3CE4", VA = "0xCC3CE4")]
	private bool CallAuthenticate()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xCC4010", Offset = "0xCC4010", VA = "0xCC4010")]
	private void DisconnectToReconnect()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xCC4038", Offset = "0xCC4038", VA = "0xCC4038")]
	public bool GetRegions()
	{
		return default(bool);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xCC407C", Offset = "0xCC407C", VA = "0xCC407C", Slot = "24")]
	public override bool OpFindFriends(string[] friendsToFind, [Optional] FindFriendsOptions findFriendsOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xCC409C", Offset = "0xCC409C", VA = "0xCC409C")]
	public bool OpCreateGame(EnterRoomParams enterRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xCC41F4", Offset = "0xCC41F4", VA = "0xCC41F4", Slot = "20")]
	public override bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xCC4234", Offset = "0xCC4234", VA = "0xCC4234", Slot = "21")]
	public override bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xCC42CC", Offset = "0xCC42CC", VA = "0xCC42CC", Slot = "28")]
	public override bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xCC43A8", Offset = "0xCC43A8", VA = "0xCC43A8")]
	private void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable pActorProperties, int targetActorNr)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xCC4A3C", Offset = "0xCC4A3C", VA = "0xCC4A3C")]
	private ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, int actorNr)
	{
		return null;
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xCC50A0", Offset = "0xCC50A0", VA = "0xCC50A0")]
	public void ChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xCC5448", Offset = "0xCC5448", VA = "0xCC5448")]
	private void LeftLobbyCleanup()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xCC557C", Offset = "0xCC557C", VA = "0xCC557C")]
	private void LeftRoomCleanup()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xCC58A0", Offset = "0xCC58A0", VA = "0xCC58A0")]
	protected internal void LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xCC6100", Offset = "0xCC6100", VA = "0xCC6100")]
	private void GameEnteredOnGameServer(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xCC2D58", Offset = "0xCC2D58", VA = "0xCC2D58")]
	private void AddNewPlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xCC6BE4", Offset = "0xCC6BE4", VA = "0xCC6BE4")]
	private void RemovePlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xCC5264", Offset = "0xCC5264", VA = "0xCC5264")]
	private void RebuildPlayerListCopies()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xCC6C6C", Offset = "0xCC6C6C", VA = "0xCC6C6C")]
	private void ResetPhotonViewsOnSerialize()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xCC6DD0", Offset = "0xCC6DD0", VA = "0xCC6DD0")]
	private void HandleEventLeave(int actorID, EventData evLeave)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xCC6968", Offset = "0xCC6968", VA = "0xCC6968")]
	private void CheckMasterClient(int leavingPlayerId)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xCC73BC", Offset = "0xCC73BC", VA = "0xCC73BC")]
	protected internal void UpdateMasterClient()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xCC798C", Offset = "0xCC798C", VA = "0xCC798C")]
	private static int ReturnLowestPlayerId(PhotonPlayer[] players, int playerIdToIgnore)
	{
		return default(int);
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xCC79F4", Offset = "0xCC79F4", VA = "0xCC79F4")]
	protected internal bool SetMasterClient(int playerId, bool sync)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xCC7C0C", Offset = "0xCC7C0C", VA = "0xCC7C0C")]
	public bool SetMasterClient(int nextMasterId)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xCC49CC", Offset = "0xCC49CC", VA = "0xCC49CC")]
	protected internal PhotonPlayer GetPlayerWithId(int number)
	{
		return null;
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xCC236C", Offset = "0xCC236C", VA = "0xCC236C")]
	private void SendPlayerName()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xCC40F0", Offset = "0xCC40F0", VA = "0xCC40F0")]
	private ExitGames.Client.Photon.Hashtable GetLocalActorProperties()
	{
		return null;
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xCC7D78", Offset = "0xCC7D78", VA = "0xCC7D78", Slot = "30")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xCC7EAC", Offset = "0xCC7EAC", VA = "0xCC7EAC", Slot = "31")]
	public void OnOperationResponse(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xCCAB6C", Offset = "0xCCAB6C", VA = "0xCCAB6C", Slot = "32")]
	public void OnStatusChanged(StatusCode statusCode)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xCCBA90", Offset = "0xCCBA90", VA = "0xCCBA90", Slot = "33")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xCD0A14", Offset = "0xCD0A14", VA = "0xCD0A14")]
	public void OnMessage(object messages)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xCCA86C", Offset = "0xCCA86C", VA = "0xCCA86C")]
	private void SetupEncryption(Dictionary<byte, object> encryptionData)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xCC6830", Offset = "0xCC6830", VA = "0xCC6830")]
	protected internal void UpdatedActorList(int[] actorsInRoom)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xCD0A18", Offset = "0xCD0A18", VA = "0xCD0A18")]
	private void SendVacantViewIds()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xCC4B3C", Offset = "0xCC4B3C", VA = "0xCC4B3C")]
	public static void SendMonoMessage(PhotonNetworkingMessage methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xCCDF00", Offset = "0xCCDF00", VA = "0xCCDF00")]
	protected internal void ExecuteRpc(ExitGames.Client.Photon.Hashtable rpcData, int senderID = 0)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xCD0F58", Offset = "0xCD0F58", VA = "0xCD0F58")]
	private bool CheckTypeMatch(ParameterInfo[] methodParameters, Type[] callParameterTypes)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xCD1100", Offset = "0xCD1100", VA = "0xCD1100")]
	internal ExitGames.Client.Photon.Hashtable SendInstantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, int[] viewIDs, object[] data, bool isGlobalObject)
	{
		return null;
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xCCFE48", Offset = "0xCCFE48", VA = "0xCCFE48")]
	internal GameObject DoInstantiate(ExitGames.Client.Photon.Hashtable evData, PhotonPlayer photonPlayer, GameObject resourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xCD15AC", Offset = "0xCD15AC", VA = "0xCD15AC")]
	private void StoreInstantiationData(int instantiationId, object[] instantiationData)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xCD166C", Offset = "0xCD166C", VA = "0xCD166C")]
	public object[] FetchInstantiationData(int instantiationId)
	{
		return null;
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xCD1614", Offset = "0xCD1614", VA = "0xCD1614")]
	private void RemoveInstantiationData(int instantiationId)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xCC74A4", Offset = "0xCC74A4", VA = "0xCC74A4")]
	public void DestroyPlayerObjects(int playerId, bool localOnly)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xCD09E8", Offset = "0xCD09E8", VA = "0xCD09E8")]
	public void DestroyAll(bool localOnly)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xCC5C5C", Offset = "0xCC5C5C", VA = "0xCC5C5C")]
	protected internal void RemoveInstantiatedGO(GameObject go, bool localOnly)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xCD1AE4", Offset = "0xCD1AE4", VA = "0xCD1AE4")]
	private void ServerCleanInstantiateAndDestroy(int instantiateId, int creatorId, bool isRuntimeInstantiated)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xCD1878", Offset = "0xCD1878", VA = "0xCD1878")]
	private void SendDestroyOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xCD19F8", Offset = "0xCD19F8", VA = "0xCD19F8")]
	private void SendDestroyOfAll()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xCD16E8", Offset = "0xCD16E8", VA = "0xCD16E8")]
	private void OpRemoveFromServerInstantiationsOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xCD1F04", Offset = "0xCD1F04", VA = "0xCD1F04")]
	protected internal void RequestOwnership(int viewID, int fromOwner)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xCD21F8", Offset = "0xCD21F8", VA = "0xCD21F8")]
	protected internal void TransferOwnership(int viewID, int playerID)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xCD1D78", Offset = "0xCD1D78", VA = "0xCD1D78")]
	public bool LocalCleanPhotonView(PhotonView view)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xCD0D60", Offset = "0xCD0D60", VA = "0xCD0D60")]
	public PhotonView GetPhotonView(int viewID)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xCD24EC", Offset = "0xCD24EC", VA = "0xCD24EC")]
	public void RegisterPhotonView(PhotonView netView)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xCD17B0", Offset = "0xCD17B0", VA = "0xCD17B0")]
	public void OpCleanRpcBuffer(int actorNumber)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xCD27AC", Offset = "0xCD27AC", VA = "0xCD27AC")]
	public void OpRemoveCompleteCacheOfPlayer(int actorNumber)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xCD196C", Offset = "0xCD196C", VA = "0xCD196C")]
	public void OpRemoveCompleteCache()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xCD2874", Offset = "0xCD2874", VA = "0xCD2874")]
	private void RemoveCacheOfLeftPlayers()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xCD29B4", Offset = "0xCD29B4", VA = "0xCD29B4")]
	public void CleanRpcBufferIfMine(PhotonView view)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xCD1DDC", Offset = "0xCD1DDC", VA = "0xCD1DDC")]
	public void OpCleanRpcBuffer(PhotonView view)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xCD2AF8", Offset = "0xCD2AF8", VA = "0xCD2AF8")]
	public void RemoveRPCsInGroup(int group)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xCD2C70", Offset = "0xCD2C70", VA = "0xCD2C70")]
	public void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xCD2C78", Offset = "0xCD2C78", VA = "0xCD2C78")]
	internal void RPC(PhotonView view, string methodName, PhotonTargets target, PhotonPlayer player, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xCD36C4", Offset = "0xCD36C4", VA = "0xCD36C4")]
	public void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xCD39E0", Offset = "0xCD39E0", VA = "0xCD39E0")]
	public void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xCD3A74", Offset = "0xCD3A74", VA = "0xCD3A74")]
	public void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xCD3B78", Offset = "0xCD3B78", VA = "0xCD3B78")]
	public void NewSceneLoaded()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xCD3F58", Offset = "0xCD3F58", VA = "0xCD3F58")]
	public void RunViewUpdate()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xCD4E80", Offset = "0xCD4E80", VA = "0xCD4E80")]
	private object[] OnSerializeWrite(PhotonView view)
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xCCF7F4", Offset = "0xCCF7F4", VA = "0xCCF7F4")]
	private void OnSerializeRead(object[] data, PhotonPlayer sender, int networkTime, short correctPrefix)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xCD5198", Offset = "0xCD5198", VA = "0xCD5198")]
	private object[] DeltaCompressionWrite(object[] previousContent, object[] currentContent)
	{
		return null;
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xCD5468", Offset = "0xCD5468", VA = "0xCD5468")]
	private object[] DeltaCompressionRead(object[] lastOnSerializeDataReceived, object[] incomingData)
	{
		return null;
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xCD50F4", Offset = "0xCD50F4", VA = "0xCD50F4")]
	private bool AlmostEquals(object[] lastData, object[] currentContent)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xCD5608", Offset = "0xCD5608", VA = "0xCD5608")]
	private bool AlmostEquals(object one, object two)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xCD59B4", Offset = "0xCD59B4", VA = "0xCD59B4")]
	protected internal static bool GetMethod(UnityEngine.MonoBehaviour monob, string methodType, out MethodInfo mi)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xCC4D98", Offset = "0xCC4D98", VA = "0xCC4D98")]
	protected internal void LoadLevelIfSynced()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xCD5B24", Offset = "0xCD5B24", VA = "0xCD5B24")]
	protected internal void SetLevelInPropsIfSynced(object levelId, bool initiatingCall, bool asyncLoading = false)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xCD6014", Offset = "0xCD6014", VA = "0xCD6014")]
	private void SendLevelReloadEvent()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xCD60CC", Offset = "0xCD60CC", VA = "0xCD60CC")]
	public void SetApp(string appId, string gameVersion)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xCD61A8", Offset = "0xCD61A8", VA = "0xCD61A8")]
	public bool WebRpc(string uriPath, object parameters)
	{
		return default(bool);
	}
}
[Token(Token = "0x200008E")]
public interface IPunObservable
{
	[Token(Token = "0x60002FC")]
	void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info);
}
[Token(Token = "0x200008F")]
public interface IPunCallbacks
{
	[Token(Token = "0x60002FD")]
	void OnConnectedToPhoton();

	[Token(Token = "0x60002FE")]
	void OnLeftRoom();

	[Token(Token = "0x60002FF")]
	void OnMasterClientSwitched(PhotonPlayer newMasterClient);

	[Token(Token = "0x6000300")]
	void OnPhotonCreateRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x6000301")]
	void OnPhotonJoinRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x6000302")]
	void OnCreatedRoom();

	[Token(Token = "0x6000303")]
	void OnJoinedLobby();

	[Token(Token = "0x6000304")]
	void OnLeftLobby();

	[Token(Token = "0x6000305")]
	void OnFailedToConnectToPhoton(DisconnectCause cause);

	[Token(Token = "0x6000306")]
	void OnConnectionFail(DisconnectCause cause);

	[Token(Token = "0x6000307")]
	void OnDisconnectedFromPhoton();

	[Token(Token = "0x6000308")]
	void OnPhotonInstantiate(PhotonMessageInfo info);

	[Token(Token = "0x6000309")]
	void OnReceivedRoomListUpdate();

	[Token(Token = "0x600030A")]
	void OnJoinedRoom();

	[Token(Token = "0x600030B")]
	void OnPhotonPlayerConnected(PhotonPlayer newPlayer);

	[Token(Token = "0x600030C")]
	void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer);

	[Token(Token = "0x600030D")]
	void OnPhotonRandomJoinFailed(object[] codeAndMsg);

	[Token(Token = "0x600030E")]
	void OnConnectedToMaster();

	[Token(Token = "0x600030F")]
	void OnPhotonMaxCccuReached();

	[Token(Token = "0x6000310")]
	void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

	[Token(Token = "0x6000311")]
	void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps);

	[Token(Token = "0x6000312")]
	void OnUpdatedFriendList();

	[Token(Token = "0x6000313")]
	void OnCustomAuthenticationFailed(string debugMessage);

	[Token(Token = "0x6000314")]
	void OnCustomAuthenticationResponse(Dictionary<string, object> data);

	[Token(Token = "0x6000315")]
	void OnWebRpcResponse(OperationResponse response);

	[Token(Token = "0x6000316")]
	void OnOwnershipRequest(object[] viewAndPlayer);

	[Token(Token = "0x6000317")]
	void OnLobbyStatisticsUpdate();

	[Token(Token = "0x6000318")]
	void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer);

	[Token(Token = "0x6000319")]
	void OnOwnershipTransfered(object[] viewAndPlayers);
}
[Token(Token = "0x2000090")]
public interface IPunPrefabPool
{
	[Token(Token = "0x600031A")]
	GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation);

	[Token(Token = "0x600031B")]
	void Destroy(GameObject gameObject);
}
[Token(Token = "0x2000091")]
public struct PhotonMessageInfo
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly int timeInt;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly PhotonPlayer sender;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly PhotonView photonView;

	[Token(Token = "0x17000069")]
	public double timestamp
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0xDA421C", Offset = "0xDA421C", VA = "0xDA421C")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xDA4210", Offset = "0xDA4210", VA = "0xDA4210")]
	public PhotonMessageInfo(PhotonPlayer player, int timestamp, PhotonView view)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xDA4234", Offset = "0xDA4234", VA = "0xDA4234", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000092")]
internal class PunEvent
{
	[Token(Token = "0x4000484")]
	public const byte RPC = 200;

	[Token(Token = "0x4000485")]
	public const byte SendSerialize = 201;

	[Token(Token = "0x4000486")]
	public const byte Instantiation = 202;

	[Token(Token = "0x4000487")]
	public const byte CloseConnection = 203;

	[Token(Token = "0x4000488")]
	public const byte Destroy = 204;

	[Token(Token = "0x4000489")]
	public const byte RemoveCachedRPCs = 205;

	[Token(Token = "0x400048A")]
	public const byte SendSerializeReliable = 206;

	[Token(Token = "0x400048B")]
	public const byte DestroyPlayer = 207;

	[Token(Token = "0x400048C")]
	public const byte AssignMaster = 208;

	[Token(Token = "0x400048D")]
	public const byte OwnershipRequest = 209;

	[Token(Token = "0x400048E")]
	public const byte OwnershipTransfer = 210;

	[Token(Token = "0x400048F")]
	public const byte VacantViewIds = 211;

	[Token(Token = "0x4000490")]
	public const byte levelReload = 212;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xDA42CC", Offset = "0xDA42CC", VA = "0xDA42CC")]
	public PunEvent()
	{
	}
}
[Token(Token = "0x2000093")]
public class PhotonStream
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool write;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<object> writeData;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object[] readData;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal byte currentItem;

	[Token(Token = "0x1700006A")]
	public bool isWriting
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xDA43D8", Offset = "0xDA43D8", VA = "0xDA43D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006B")]
	public bool isReading
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xDA43E0", Offset = "0xDA43E0", VA = "0xDA43E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006C")]
	public int Count
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xDA43F0", Offset = "0xDA43F0", VA = "0xDA43F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xDA42D4", Offset = "0xDA42D4", VA = "0xDA42D4")]
	public PhotonStream(bool write, object[] incomingData)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xDA4378", Offset = "0xDA4378", VA = "0xDA4378")]
	public void SetReadStream(object[] incomingData, byte pos = 0)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xDA4388", Offset = "0xDA4388", VA = "0xDA4388")]
	internal void ResetWriteStream()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xDA4450", Offset = "0xDA4450", VA = "0xDA4450")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xDA4500", Offset = "0xDA4500", VA = "0xDA4500")]
	public object PeekNext()
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xDA45A8", Offset = "0xDA45A8", VA = "0xDA45A8")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xDA4654", Offset = "0xDA4654", VA = "0xDA4654")]
	public object[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xDA46BC", Offset = "0xDA46BC", VA = "0xDA46BC")]
	public void Serialize(ref bool myBool)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xDA47C4", Offset = "0xDA47C4", VA = "0xDA47C4")]
	public void Serialize(ref int myInt)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xDA48C4", Offset = "0xDA48C4", VA = "0xDA48C4")]
	public void Serialize(ref string value)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xDA49A8", Offset = "0xDA49A8", VA = "0xDA49A8")]
	public void Serialize(ref char value)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xDA4AA8", Offset = "0xDA4AA8", VA = "0xDA4AA8")]
	public void Serialize(ref short value)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xDA4BA8", Offset = "0xDA4BA8", VA = "0xDA4BA8")]
	public void Serialize(ref float obj)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xDA4CA8", Offset = "0xDA4CA8", VA = "0xDA4CA8")]
	public void Serialize(ref PhotonPlayer obj)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xDA4DC4", Offset = "0xDA4DC4", VA = "0xDA4DC4")]
	public void Serialize(ref Vector3 obj)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xDA4ED4", Offset = "0xDA4ED4", VA = "0xDA4ED4")]
	public void Serialize(ref Vector2 obj)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xDA4FD4", Offset = "0xDA4FD4", VA = "0xDA4FD4")]
	public void Serialize(ref Quaternion obj)
	{
	}
}
[Token(Token = "0x2000094")]
public class SceneManagerHelper
{
	[Token(Token = "0x1700006D")]
	public static string ActiveSceneName
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0xDA50D4", Offset = "0xDA50D4", VA = "0xDA50D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public static int ActiveSceneBuildIndex
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xDA513C", Offset = "0xDA513C", VA = "0xDA513C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xDA51A4", Offset = "0xDA51A4", VA = "0xDA51A4")]
	public SceneManagerHelper()
	{
	}
}
[Token(Token = "0x2000095")]
public class WebRpcResponse
{
	[Token(Token = "0x1700006F")]
	public string Name
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xDA51AC", Offset = "0xDA51AC", VA = "0xDA51AC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xDA51B4", Offset = "0xDA51B4", VA = "0xDA51B4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public int ReturnCode
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xDA51BC", Offset = "0xDA51BC", VA = "0xDA51BC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600033A")]
		[Address(RVA = "0xDA51C4", Offset = "0xDA51C4", VA = "0xDA51C4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public string DebugMessage
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xDA51CC", Offset = "0xDA51CC", VA = "0xDA51CC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xDA51D4", Offset = "0xDA51D4", VA = "0xDA51D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public Dictionary<string, object> Parameters
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xDA51DC", Offset = "0xDA51DC", VA = "0xDA51DC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xDA51E4", Offset = "0xDA51E4", VA = "0xDA51E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xDA51EC", Offset = "0xDA51EC", VA = "0xDA51EC")]
	public WebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xDA539C", Offset = "0xDA539C", VA = "0xDA539C")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000096")]
internal class PhotonHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000098")]
	[CompilerGenerated]
	private sealed class <PingAvailableRegionsCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonHandler <>4__this;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool connectToBest;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PhotonPingManager <pingManager>5__2;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000357")]
			[Address(RVA = "0xDA7848", Offset = "0xDA7848", VA = "0xDA7848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000359")]
			[Address(RVA = "0xDA7890", Offset = "0xDA7890", VA = "0xDA7890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0xDA6AA4", Offset = "0xDA6AA4", VA = "0xDA6AA4")]
		[DebuggerHidden]
		public <PingAvailableRegionsCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xDA6C70", Offset = "0xDA6C70", VA = "0xDA6C70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0xDA6C74", Offset = "0xDA6C74", VA = "0xDA6C74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0xDA7850", Offset = "0xDA7850", VA = "0xDA7850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonHandler SP;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int updateIntervalOnSerialize;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nextSendTickCount;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nextSendTickCountOnSerialize;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected internal static bool AppQuits;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected internal static Type PingImplementation;

	[Token(Token = "0x40004A2")]
	private const string PlayerPrefsKey = "PUNCloudBestRegion";

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds waitPingFinish;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds waitPingDone;

	[Token(Token = "0x17000073")]
	internal static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0xDA66F8", Offset = "0xDA66F8", VA = "0xDA66F8")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x600034D")]
		[Address(RVA = "0xDA6914", Offset = "0xDA6914", VA = "0xDA6914")]
		set
		{
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xDA5538", Offset = "0xDA5538", VA = "0xDA5538")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xDA58A8", Offset = "0xDA58A8", VA = "0xDA58A8")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xDA59A0", Offset = "0xDA59A0", VA = "0xDA59A0")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xDA5BF4", Offset = "0xDA5BF4", VA = "0xDA5BF4")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xDA5CFC", Offset = "0xDA5CFC", VA = "0xDA5CFC")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xDA5D44", Offset = "0xDA5D44", VA = "0xDA5D44")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xDA61F4", Offset = "0xDA61F4", VA = "0xDA61F4")]
	protected void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xDA6258", Offset = "0xDA6258", VA = "0xDA6258")]
	protected void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xDA57B4", Offset = "0xDA57B4", VA = "0xDA57B4")]
	public static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xDA5A3C", Offset = "0xDA5A3C", VA = "0xDA5A3C")]
	public static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xDA62D0", Offset = "0xDA62D0", VA = "0xDA62D0")]
	public static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xDA69C0", Offset = "0xDA69C0", VA = "0xDA69C0")]
	protected internal static void PingAvailableRegionsAndConnectToBest()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xDA6A28", Offset = "0xDA6A28", VA = "0xDA6A28")]
	[IteratorStateMachine(typeof(<PingAvailableRegionsCoroutine>d__27))]
	internal IEnumerator PingAvailableRegionsCoroutine(bool connectToBest)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xDA6ACC", Offset = "0xDA6ACC", VA = "0xDA6ACC")]
	public PhotonHandler()
	{
	}
}
[Token(Token = "0x2000099")]
public class PhotonLagSimulationGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect WindowRect;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WindowId;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool Visible;

	[Token(Token = "0x17000076")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x600035A")]
		[Address(RVA = "0xDA7898", Offset = "0xDA7898", VA = "0xDA7898")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600035B")]
		[Address(RVA = "0xDA78A0", Offset = "0xDA78A0", VA = "0xDA78A0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xDA78A8", Offset = "0xDA78A8", VA = "0xDA78A8")]
	public void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xDA7908", Offset = "0xDA7908", VA = "0xDA7908")]
	private void NetSimHasNoPeerWindow(int windowId)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xDA79A0", Offset = "0xDA79A0", VA = "0xDA79A0")]
	private void NetSimWindow(int windowId)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xDA8080", Offset = "0xDA8080", VA = "0xDA8080")]
	public PhotonLagSimulationGui()
	{
	}
}
[Token(Token = "0x200009A")]
public static class PhotonNetwork
{
	[Token(Token = "0x200009B")]
	public delegate void EventCallback(byte eventCode, object content, int senderId);

	[Token(Token = "0x40004B0")]
	public const string versionPUN = "1.101";

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static readonly PhotonHandler photonMono;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static NetworkingPeer networkingPeer;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int MAX_VIEW_IDS;

	[Token(Token = "0x40004B5")]
	internal const string serverSettingsAssetFile = "PhotonServerSettings";

	[Token(Token = "0x40004B6")]
	internal const string serverSettingsChinaAssetFile = "PhotonServerSettingsChina";

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ServerSettings PhotonServerSettings;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool InstantiateInRoomOnly;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static PhotonLogLevel logLevel;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float precisionForVectorSynchronization;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float precisionForQuaternionSynchronization;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float precisionForFloatSynchronization;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool UseRpcMonoBehaviourCache;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public static bool UsePrefabCache;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static HashSet<GameObject> SendMonoMessageTargets;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Type SendMonoMessageTargetType;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool StartRpcsAsCoroutine;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private static bool isOfflineMode;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Room offlineModeRoom;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Obsolete("Used for compatibility with Unity networking only.")]
	public static int maxConnections;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static bool _mAutomaticallySyncScene;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private static bool m_autoCleanUpPlayerObjects;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int sendInterval;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static int sendIntervalOnSerialize;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static bool m_isMessageQueueRunning;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static Stopwatch startupStopwatch;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float BackgroundTimeout;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal static int lastUsedViewSubId;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	internal static int lastUsedViewSubIdStatic;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	internal static List<int> manuallyAllocatedViewIds;

	[Token(Token = "0x17000077")]
	public static string gameVersion
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xDA80E4", Offset = "0xDA80E4", VA = "0xDA80E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000361")]
		[Address(RVA = "0xDA813C", Offset = "0xDA813C", VA = "0xDA813C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public static string ServerAddress
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xDA8198", Offset = "0xDA8198", VA = "0xDA8198")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000079")]
	public static CloudRegionCode CloudRegion
	{
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xDA8240", Offset = "0xDA8240", VA = "0xDA8240")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x1700007A")]
	public static string CurrentCluster
	{
		[Token(Token = "0x6000364")]
		[Address(RVA = "0xDA82FC", Offset = "0xDA82FC", VA = "0xDA82FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public static bool connected
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xDA6578", Offset = "0xDA6578", VA = "0xDA6578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007C")]
	public static bool connecting
	{
		[Token(Token = "0x6000366")]
		[Address(RVA = "0xDA8384", Offset = "0xDA8384", VA = "0xDA8384")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007D")]
	public static bool connectedAndReady
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xDA8444", Offset = "0xDA8444", VA = "0xDA8444")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007E")]
	public static ConnectionState connectionState
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0xDA8544", Offset = "0xDA8544", VA = "0xDA8544")]
		get
		{
			return default(ConnectionState);
		}
	}

	[Token(Token = "0x1700007F")]
	public static ClientState connectionStateDetailed
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xDA60F4", Offset = "0xDA60F4", VA = "0xDA60F4")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x17000080")]
	public static ServerConnection Server
	{
		[Token(Token = "0x600036A")]
		[Address(RVA = "0xDA7474", Offset = "0xDA7474", VA = "0xDA7474")]
		get
		{
			return default(ServerConnection);
		}
	}

	[Token(Token = "0x17000081")]
	public static AuthenticationValues AuthValues
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0xDA8644", Offset = "0xDA8644", VA = "0xDA8644")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xDA86CC", Offset = "0xDA86CC", VA = "0xDA86CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public static Room room
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xDA8750", Offset = "0xDA8750", VA = "0xDA8750")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000083")]
	public static PhotonPlayer player
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xDA87F4", Offset = "0xDA87F4", VA = "0xDA87F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000084")]
	public static PhotonPlayer masterClient
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xDA887C", Offset = "0xDA887C", VA = "0xDA887C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	public static string playerName
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0xDA898C", Offset = "0xDA898C", VA = "0xDA898C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000371")]
		[Address(RVA = "0xDA89F0", Offset = "0xDA89F0", VA = "0xDA89F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public static PhotonPlayer[] playerList
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0xDA8A5C", Offset = "0xDA8A5C", VA = "0xDA8A5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000087")]
	public static PhotonPlayer[] otherPlayers
	{
		[Token(Token = "0x6000373")]
		[Address(RVA = "0xDA8B04", Offset = "0xDA8B04", VA = "0xDA8B04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000088")]
	public static List<FriendInfo> Friends
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0xDA8BAC", Offset = "0xDA8BAC", VA = "0xDA8BAC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000375")]
		[Address(RVA = "0xDA8C04", Offset = "0xDA8C04", VA = "0xDA8C04")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public static int FriendsListAge
	{
		[Token(Token = "0x6000376")]
		[Address(RVA = "0xDA8C60", Offset = "0xDA8C60", VA = "0xDA8C60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008A")]
	public static IPunPrefabPool PrefabPool
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0xDA8CF4", Offset = "0xDA8CF4", VA = "0xDA8CF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000378")]
		[Address(RVA = "0xDA8D58", Offset = "0xDA8D58", VA = "0xDA8D58")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public static bool offlineMode
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0xDA8DC0", Offset = "0xDA8DC0", VA = "0xDA8DC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0xDA8E18", Offset = "0xDA8E18", VA = "0xDA8E18")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public static bool automaticallySyncScene
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0xDA9058", Offset = "0xDA9058", VA = "0xDA9058")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xDA90B0", Offset = "0xDA90B0", VA = "0xDA90B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public static bool autoCleanUpPlayerObjects
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xDA9168", Offset = "0xDA9168", VA = "0xDA9168")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037E")]
		[Address(RVA = "0xDA91C0", Offset = "0xDA91C0", VA = "0xDA91C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public static bool autoJoinLobby
	{
		[Token(Token = "0x600037F")]
		[Address(RVA = "0xDA9284", Offset = "0xDA9284", VA = "0xDA9284")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000380")]
		[Address(RVA = "0xDA92E8", Offset = "0xDA92E8", VA = "0xDA92E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public static bool EnableLobbyStatistics
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0xDA9354", Offset = "0xDA9354", VA = "0xDA9354")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000382")]
		[Address(RVA = "0xDA93B8", Offset = "0xDA93B8", VA = "0xDA93B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public static List<TypedLobbyInfo> LobbyStatistics
	{
		[Token(Token = "0x6000383")]
		[Address(RVA = "0xDA9424", Offset = "0xDA9424", VA = "0xDA9424")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000384")]
		[Address(RVA = "0xDA9488", Offset = "0xDA9488", VA = "0xDA9488")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public static bool insideLobby
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0xDA94F0", Offset = "0xDA94F0", VA = "0xDA94F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000092")]
	public static TypedLobby lobby
	{
		[Token(Token = "0x6000386")]
		[Address(RVA = "0xDA9554", Offset = "0xDA9554", VA = "0xDA9554")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000387")]
		[Address(RVA = "0xDA95B8", Offset = "0xDA95B8", VA = "0xDA95B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public static int sendRate
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0xDA56F4", Offset = "0xDA56F4", VA = "0xDA56F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000389")]
		[Address(RVA = "0xDA9620", Offset = "0xDA9620", VA = "0xDA9620")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public static int sendRateOnSerialize
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0xDA5754", Offset = "0xDA5754", VA = "0xDA5754")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600038B")]
		[Address(RVA = "0xDA972C", Offset = "0xDA972C", VA = "0xDA972C")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public static bool isMessageQueueRunning
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0xDA9870", Offset = "0xDA9870", VA = "0xDA9870")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xDA98C8", Offset = "0xDA98C8", VA = "0xDA98C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public static double time
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0xDA9948", Offset = "0xDA9948", VA = "0xDA9948")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000097")]
	public static int ServerTimestamp
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0xDA99A8", Offset = "0xDA99A8", VA = "0xDA99A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000098")]
	public static bool isMasterClient
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0xDA9A88", Offset = "0xDA9A88", VA = "0xDA9A88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public static bool inRoom
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0xDA9B5C", Offset = "0xDA9B5C", VA = "0xDA9B5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009A")]
	public static bool isNonMasterClientInRoom
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xDA9BB4", Offset = "0xDA9BB4", VA = "0xDA9BB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009B")]
	public static int countOfPlayersOnMaster
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0xDA9C2C", Offset = "0xDA9C2C", VA = "0xDA9C2C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009C")]
	public static int countOfPlayersInRooms
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0xDA9C90", Offset = "0xDA9C90", VA = "0xDA9C90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009D")]
	public static int countOfPlayers
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0xDA9CF4", Offset = "0xDA9CF4", VA = "0xDA9CF4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009E")]
	public static int countOfRooms
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0xDA9D60", Offset = "0xDA9D60", VA = "0xDA9D60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009F")]
	public static bool NetworkStatisticsEnabled
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0xDA9DC4", Offset = "0xDA9DC4", VA = "0xDA9DC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xDA9E28", Offset = "0xDA9E28", VA = "0xDA9E28")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public static int ResentReliableCommands
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0xDA9E94", Offset = "0xDA9E94", VA = "0xDA9E94")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A1")]
	public static bool CrcCheckEnabled
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xDA9EF8", Offset = "0xDA9EF8", VA = "0xDA9EF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0xDA9F5C", Offset = "0xDA9F5C", VA = "0xDA9F5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public static int PacketLossByCrcCheck
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0xDAA0A8", Offset = "0xDAA0A8", VA = "0xDAA0A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A3")]
	public static int MaxResendsBeforeDisconnect
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0xDAA10C", Offset = "0xDAA10C", VA = "0xDAA10C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600039E")]
		[Address(RVA = "0xDAA170", Offset = "0xDAA170", VA = "0xDAA170")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public static int QuickResends
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0xDAA1F0", Offset = "0xDAA1F0", VA = "0xDAA1F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xDAA25C", Offset = "0xDAA25C", VA = "0xDAA25C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public static bool UseAlternativeUdpPorts
	{
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xDAA2D8", Offset = "0xDAA2D8", VA = "0xDAA2D8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xDAA330", Offset = "0xDAA330", VA = "0xDAA330")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event EventCallback OnEventCall
	{
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xDAA38C", Offset = "0xDAA38C", VA = "0xDAA38C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xDAA468", Offset = "0xDAA468", VA = "0xDAA468")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xDAA544", Offset = "0xDAA544", VA = "0xDAA544")]
	static PhotonNetwork()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xDAAA28", Offset = "0xDAAA28", VA = "0xDAAA28")]
	public static void SwitchToProtocol(ConnectionProtocol cp)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xDAAA90", Offset = "0xDAAA90", VA = "0xDAAA90")]
	public static bool ConnectUsingSettings(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xDAB2E8", Offset = "0xDAB2E8", VA = "0xDAB2E8")]
	public static bool ConnectToMaster(string masterServerAddress, int port, string appID, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xDAB628", Offset = "0xDAB628", VA = "0xDAB628")]
	public static bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xDAB91C", Offset = "0xDAB91C", VA = "0xDAB91C")]
	public static bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xDAB088", Offset = "0xDAB088", VA = "0xDAB088")]
	public static bool ConnectToBestCloudServer(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xDABC50", Offset = "0xDABC50", VA = "0xDABC50")]
	public static bool ConnectToRegion(CloudRegionCode region, string gameVersion, [Optional] string cluster)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xDABF58", Offset = "0xDABF58", VA = "0xDABF58")]
	public static void OverrideBestCloudServer(CloudRegionCode region)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xDABF5C", Offset = "0xDABF5C", VA = "0xDABF5C")]
	public static void RefreshCloudServerRating()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xDABFAC", Offset = "0xDABFAC", VA = "0xDABFAC")]
	public static void NetworkStatisticsReset()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xDAC010", Offset = "0xDAC010", VA = "0xDAC010")]
	public static string NetworkStatisticsToString()
	{
		return null;
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xDAC104", Offset = "0xDAC104", VA = "0xDAC104")]
	[Obsolete("Used for compatibility with Unity networking only. Encryption is automatically initialized while connecting.")]
	public static void InitializeSecurity()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xDAC108", Offset = "0xDAC108", VA = "0xDAC108")]
	private static bool VerifyCanUseNetwork()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xDA5A84", Offset = "0xDA5A84", VA = "0xDA5A84")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xDAC1AC", Offset = "0xDAC1AC", VA = "0xDAC1AC")]
	public static bool FindFriends(string[] friendsToFind, [Optional] FindFriendsOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xDAC27C", Offset = "0xDAC27C", VA = "0xDAC27C")]
	public static bool CreateRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xDAC53C", Offset = "0xDAC53C", VA = "0xDAC53C")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xDAC2DC", Offset = "0xDAC2DC", VA = "0xDAC2DC")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xDAC78C", Offset = "0xDAC78C", VA = "0xDAC78C")]
	public static bool JoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xDAC7E4", Offset = "0xDAC7E4", VA = "0xDAC7E4")]
	public static bool JoinRoom(string roomName, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xDACA14", Offset = "0xDACA14", VA = "0xDACA14")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xDACA84", Offset = "0xDACA84", VA = "0xDACA84")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xDACD38", Offset = "0xDACD38", VA = "0xDACD38")]
	public static bool JoinRandomRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xDAD034", Offset = "0xDAD034", VA = "0xDAD034")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xDACD9C", Offset = "0xDACD9C", VA = "0xDACD9C")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchingType, TypedLobby typedLobby, string sqlLobbyFilter, [Optional] string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xDAD0A8", Offset = "0xDAD0A8", VA = "0xDAD0A8")]
	public static bool ReJoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xDAC5AC", Offset = "0xDAC5AC", VA = "0xDAC5AC")]
	private static void EnterOfflineRoom(string roomName, RoomOptions roomOptions, bool createdRoom)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xDAD34C", Offset = "0xDAD34C", VA = "0xDAD34C")]
	public static bool JoinLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xDAD39C", Offset = "0xDAD39C", VA = "0xDAD39C")]
	public static bool JoinLobby(TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xDAD4AC", Offset = "0xDAD4AC", VA = "0xDAD4AC")]
	public static bool LeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xDAD558", Offset = "0xDAD558", VA = "0xDAD558")]
	public static bool LeaveRoom(bool becomeInactive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xDAD7E8", Offset = "0xDAD7E8", VA = "0xDAD7E8")]
	public static bool GetCustomRoomList(TypedLobby typedLobby, string sqlLobbyFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xDAD86C", Offset = "0xDAD86C", VA = "0xDAD86C")]
	public static RoomInfo[] GetRoomList()
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xDAD960", Offset = "0xDAD960", VA = "0xDAD960")]
	public static void SetPlayerCustomProperties(ExitGames.Client.Photon.Hashtable customProperties)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xDAE0FC", Offset = "0xDAE0FC", VA = "0xDAE0FC")]
	public static void RemovePlayerCustomProperties(string[] customPropertiesToDelete)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xDAE28C", Offset = "0xDAE28C", VA = "0xDAE28C")]
	public static bool RaiseEvent(byte eventCode, object eventContent, bool sendReliable, RaiseEventOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xDAE3A8", Offset = "0xDAE3A8", VA = "0xDAE3A8")]
	public static int AllocateViewID()
	{
		return default(int);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xDAE784", Offset = "0xDAE784", VA = "0xDAE784")]
	public static int AllocateSceneViewID()
	{
		return default(int);
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xDAE48C", Offset = "0xDAE48C", VA = "0xDAE48C")]
	private static int AllocateViewID(int ownerId)
	{
		return default(int);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xDAE8C4", Offset = "0xDAE8C4", VA = "0xDAE8C4")]
	private static int[] AllocateSceneViewIDs(int countOfNewViews)
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xDAE988", Offset = "0xDAE988", VA = "0xDAE988")]
	public static void UnAllocateViewID(int viewID)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xDAEB28", Offset = "0xDAEB28", VA = "0xDAEB28")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group)
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xDAEBE8", Offset = "0xDAEBE8", VA = "0xDAEBE8")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xDAF110", Offset = "0xDAF110", VA = "0xDAF110")]
	public static GameObject InstantiateSceneObject(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xDAF650", Offset = "0xDAF650", VA = "0xDAF650")]
	public static int GetPing()
	{
		return default(int);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xDAF6B4", Offset = "0xDAF6B4", VA = "0xDAF6B4")]
	public static void FetchServerTimestamp()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xDAF748", Offset = "0xDAF748", VA = "0xDAF748")]
	public static void SendOutgoingCommands()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xDAF7D0", Offset = "0xDAF7D0", VA = "0xDAF7D0")]
	public static bool CloseConnection(PhotonPlayer kickPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xDAF9F0", Offset = "0xDAF9F0", VA = "0xDAF9F0")]
	public static bool SetMasterClient(PhotonPlayer masterClientPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xDAFD1C", Offset = "0xDAFD1C", VA = "0xDAFD1C")]
	public static void Destroy(PhotonView targetView)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xDAFE30", Offset = "0xDAFE30", VA = "0xDAFE30")]
	public static void Destroy(GameObject targetGo)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xDAFEAC", Offset = "0xDAFEAC", VA = "0xDAFEAC")]
	public static void DestroyPlayerObjects(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xDAFF68", Offset = "0xDAFF68", VA = "0xDAFF68")]
	public static void DestroyPlayerObjects(int targetPlayerId)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xDB00D0", Offset = "0xDB00D0", VA = "0xDB00D0")]
	public static void DestroyAll()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xDB019C", Offset = "0xDB019C", VA = "0xDB019C")]
	public static void RemoveRPCs(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xDB029C", Offset = "0xDB029C", VA = "0xDB029C")]
	public static void RemoveRPCs(PhotonView targetPhotonView)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xDB032C", Offset = "0xDB032C", VA = "0xDB032C")]
	public static void RemoveRPCsInGroup(int targetGroup)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xDB03BC", Offset = "0xDB03BC", VA = "0xDB03BC")]
	internal static void RPC(PhotonView view, string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xDB0614", Offset = "0xDB0614", VA = "0xDB0614")]
	internal static void RPC(PhotonView view, string methodName, PhotonPlayer targetPlayer, bool encrpyt, params object[] parameters)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xDB0850", Offset = "0xDB0850", VA = "0xDB0850")]
	public static void CacheSendMonoMessageTargets(Type type)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xDB090C", Offset = "0xDB090C", VA = "0xDB090C")]
	public static HashSet<GameObject> FindGameObjectsWithComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xDB0A98", Offset = "0xDB0A98", VA = "0xDB0A98")]
	[Obsolete("Use SetInterestGroups(byte group, bool enabled) instead.")]
	public static void SetReceivingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xDB0B24", Offset = "0xDB0B24", VA = "0xDB0B24")]
	public static void SetInterestGroups(byte group, bool enabled)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xDB0C10", Offset = "0xDB0C10", VA = "0xDB0C10")]
	[Obsolete("Use SetInterestGroups(byte[] disableGroups, byte[] enableGroups) instead. Mind the parameter order!")]
	public static void SetReceivingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xDB0D28", Offset = "0xDB0D28", VA = "0xDB0D28")]
	public static void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xDB0DCC", Offset = "0xDB0DCC", VA = "0xDB0DCC")]
	[Obsolete("Use SetSendingEnabled(byte group, bool enabled). Interest Groups have a byte-typed ID. Mind the parameter order.")]
	public static void SetSendingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xDB0E30", Offset = "0xDB0E30", VA = "0xDB0E30")]
	public static void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xDB0ED4", Offset = "0xDB0ED4", VA = "0xDB0ED4")]
	[Obsolete("Use SetSendingEnabled(byte group, bool enabled). Interest Groups have a byte-typed ID. Mind the parameter order.")]
	public static void SetSendingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xDB0FAC", Offset = "0xDB0FAC", VA = "0xDB0FAC")]
	public static void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xDB1050", Offset = "0xDB1050", VA = "0xDB1050")]
	public static void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xDB10D0", Offset = "0xDB10D0", VA = "0xDB10D0")]
	public static void LoadLevel(int levelNumber)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xDB1234", Offset = "0xDB1234", VA = "0xDB1234")]
	public static AsyncOperation LoadLevelAsync(int levelNumber)
	{
		return null;
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xDB139C", Offset = "0xDB139C", VA = "0xDB139C")]
	public static void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xDB14CC", Offset = "0xDB14CC", VA = "0xDB14CC")]
	public static AsyncOperation LoadLevelAsync(string levelName)
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xDB1608", Offset = "0xDB1608", VA = "0xDB1608")]
	public static bool WebRpc(string name, object parameters)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xDB1684", Offset = "0xDB1684", VA = "0xDB1684")]
	public static bool CallEvent(byte eventCode, object content, int senderId)
	{
		return default(bool);
	}
}
[Token(Token = "0x200009D")]
public class PhotonPlayer : IComparable<PhotonPlayer>, IComparable<int>, IEquatable<PhotonPlayer>, IEquatable<int>
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int actorID;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string nameField;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool IsLocal;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public object TagObject;

	[Token(Token = "0x170000A6")]
	public int ID
	{
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xDB19B0", Offset = "0xDB19B0", VA = "0xDB19B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A7")]
	public string NickName
	{
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xDB19B8", Offset = "0xDB19B8", VA = "0xDB19B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xDB19C0", Offset = "0xDB19C0", VA = "0xDB19C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public string UserId
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xDB1AA8", Offset = "0xDB1AA8", VA = "0xDB1AA8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xDB1AB0", Offset = "0xDB1AB0", VA = "0xDB1AB0")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public bool IsMasterClient
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xDAF978", Offset = "0xDAF978", VA = "0xDAF978")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AA")]
	public bool IsInactive
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xDB1AB8", Offset = "0xDB1AB8", VA = "0xDB1AB8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000400")]
		[Address(RVA = "0xDB1AC0", Offset = "0xDB1AC0", VA = "0xDB1AC0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0xDB1ACC", Offset = "0xDB1ACC", VA = "0xDB1ACC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xDB1AD4", Offset = "0xDB1AD4", VA = "0xDB1AD4")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public ExitGames.Client.Photon.Hashtable AllProperties
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xDB1ADC", Offset = "0xDB1ADC", VA = "0xDB1ADC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	[Obsolete("Please use NickName (updated case for naming).")]
	public string name
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xDB2640", Offset = "0xDB2640", VA = "0xDB2640")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0xDB2648", Offset = "0xDB2648", VA = "0xDB2648")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	[Obsolete("Please use UserId (updated case for naming).")]
	public string userId
	{
		[Token(Token = "0x6000418")]
		[Address(RVA = "0xDB264C", Offset = "0xDB264C", VA = "0xDB264C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000419")]
		[Address(RVA = "0xDB2654", Offset = "0xDB2654", VA = "0xDB2654")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	[Obsolete("Please use IsLocal (updated case for naming).")]
	public bool isLocal
	{
		[Token(Token = "0x600041A")]
		[Address(RVA = "0xDB265C", Offset = "0xDB265C", VA = "0xDB265C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B0")]
	[Obsolete("Please use IsMasterClient (updated case for naming).")]
	public bool isMasterClient
	{
		[Token(Token = "0x600041B")]
		[Address(RVA = "0xDB2664", Offset = "0xDB2664", VA = "0xDB2664")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B1")]
	[Obsolete("Please use IsInactive (updated case for naming).")]
	public bool isInactive
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0xDB2668", Offset = "0xDB2668", VA = "0xDB2668")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600041D")]
		[Address(RVA = "0xDB2670", Offset = "0xDB2670", VA = "0xDB2670")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	[Obsolete("Please use CustomProperties (updated case for naming).")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x600041E")]
		[Address(RVA = "0xDB267C", Offset = "0xDB267C", VA = "0xDB267C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600041F")]
		[Address(RVA = "0xDB2684", Offset = "0xDB2684", VA = "0xDB2684")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	[Obsolete("Please use AllProperties (updated case for naming).")]
	public ExitGames.Client.Photon.Hashtable allProperties
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0xDB268C", Offset = "0xDB268C", VA = "0xDB268C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xDB1BB8", Offset = "0xDB1BB8", VA = "0xDB1BB8")]
	public PhotonPlayer(bool isLocal, int actorID, string name)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xDB1C74", Offset = "0xDB1C74", VA = "0xDB1C74")]
	protected internal PhotonPlayer(bool isLocal, int actorID, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xDB1D34", Offset = "0xDB1D34", VA = "0xDB1D34", Slot = "0")]
	public override bool Equals(object p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xDB1DE8", Offset = "0xDB1DE8", VA = "0xDB1DE8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xDB1DF0", Offset = "0xDB1DF0", VA = "0xDB1DF0")]
	internal void InternalChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xDADE90", Offset = "0xDADE90", VA = "0xDADE90")]
	internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xDADBF8", Offset = "0xDADBF8", VA = "0xDADBF8")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xDB1E78", Offset = "0xDB1E78", VA = "0xDB1E78")]
	public static PhotonPlayer Find(int ID)
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xDB1F14", Offset = "0xDB1F14", VA = "0xDB1F14")]
	public PhotonPlayer Get(int id)
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xDB1F1C", Offset = "0xDB1F1C", VA = "0xDB1F1C")]
	public PhotonPlayer GetNext()
	{
		return null;
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xDB21A0", Offset = "0xDB21A0", VA = "0xDB21A0")]
	public PhotonPlayer GetNextFor(PhotonPlayer currentPlayer)
	{
		return null;
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xDB1F24", Offset = "0xDB1F24", VA = "0xDB1F24")]
	public PhotonPlayer GetNextFor(int currentPlayerId)
	{
		return null;
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xDB21B4", Offset = "0xDB21B4", VA = "0xDB21B4", Slot = "4")]
	public int CompareTo(PhotonPlayer other)
	{
		return default(int);
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xDB220C", Offset = "0xDB220C", VA = "0xDB220C", Slot = "5")]
	public int CompareTo(int other)
	{
		return default(int);
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xDB2248", Offset = "0xDB2248", VA = "0xDB2248", Slot = "6")]
	public bool Equals(PhotonPlayer other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xDB22A4", Offset = "0xDB22A4", VA = "0xDB22A4", Slot = "7")]
	public bool Equals(int other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xDB22E4", Offset = "0xDB22E4", VA = "0xDB22E4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xDB246C", Offset = "0xDB246C", VA = "0xDB246C")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x200009E")]
public class PhotonStatsGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool statsWindowOn;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool statsOn;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool healthStatsVisible;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool trafficStatsOn;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool buttonsOn;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect statsRect;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int WindowId;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xDB2690", Offset = "0xDB2690", VA = "0xDB2690")]
	public void Start()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xDB26F0", Offset = "0xDB26F0", VA = "0xDB26F0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xDB2734", Offset = "0xDB2734", VA = "0xDB2734")]
	public void TrafficStatsWindow(int windowID)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xDB35E0", Offset = "0xDB35E0", VA = "0xDB35E0")]
	public PhotonStatsGui()
	{
	}
}
[Token(Token = "0x200009F")]
public class PhotonStreamQueue
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_SampleRate;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int m_SampleCount;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_ObjectsPerSample;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_LastSampleTime;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_LastFrameCount;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_NextObjectIndex;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<object> m_Objects;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsWriting;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xDB3648", Offset = "0xDB3648", VA = "0xDB3648")]
	public PhotonStreamQueue(int sampleRate)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xDB36E8", Offset = "0xDB36E8", VA = "0xDB36E8")]
	private void BeginWritePackage()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xDB3A6C", Offset = "0xDB3A6C", VA = "0xDB3A6C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xDB3AEC", Offset = "0xDB3AEC", VA = "0xDB3AEC")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xDB3BC4", Offset = "0xDB3BC4", VA = "0xDB3BC4")]
	public bool HasQueuedObjects()
	{
		return default(bool);
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xDB3BD4", Offset = "0xDB3BD4", VA = "0xDB3BD4")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xDB3C6C", Offset = "0xDB3C6C", VA = "0xDB3C6C")]
	public void Serialize(PhotonStream stream)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xDB3DB0", Offset = "0xDB3DB0", VA = "0xDB3DB0")]
	public void Deserialize(PhotonStream stream)
	{
	}
}
[Token(Token = "0x20000A0")]
public enum ViewSynchronization
{
	[Token(Token = "0x40004EB")]
	Off,
	[Token(Token = "0x40004EC")]
	ReliableDeltaCompressed,
	[Token(Token = "0x40004ED")]
	Unreliable,
	[Token(Token = "0x40004EE")]
	UnreliableOnChange
}
[Token(Token = "0x20000A1")]
public enum OnSerializeTransform
{
	[Token(Token = "0x40004F0")]
	OnlyPosition,
	[Token(Token = "0x40004F1")]
	OnlyRotation,
	[Token(Token = "0x40004F2")]
	OnlyScale,
	[Token(Token = "0x40004F3")]
	PositionAndRotation,
	[Token(Token = "0x40004F4")]
	All
}
[Token(Token = "0x20000A2")]
public enum OnSerializeRigidBody
{
	[Token(Token = "0x40004F6")]
	OnlyVelocity,
	[Token(Token = "0x40004F7")]
	OnlyAngularVelocity,
	[Token(Token = "0x40004F8")]
	All
}
[Token(Token = "0x20000A3")]
public enum OwnershipOption
{
	[Token(Token = "0x40004FA")]
	Fixed,
	[Token(Token = "0x40004FB")]
	Takeover,
	[Token(Token = "0x40004FC")]
	Request
}
[Token(Token = "0x20000A4")]
[AddComponentMenu("Photon Networking/Photon View")]
public class PhotonView : Photon.MonoBehaviour
{
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ownerId;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte group;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	protected internal bool mixedModeIsReliable;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool OwnerShipWasTransfered;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int prefixBackup;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal object[] instantiationDataField;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected internal object[] lastOnSerializeDataSent;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected internal object[] lastOnSerializeDataReceived;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ViewSynchronization synchronization;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public OnSerializeTransform onSerializeTransformOption;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnSerializeRigidBody onSerializeRigidBodyOption;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public OwnershipOption ownershipTransfer;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Component> ObservedComponents;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Component, MethodInfo> m_OnSerializeMethodInfos;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int viewIdField;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int instantiationId;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentMasterID;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected internal bool didAwake;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	protected internal bool isRuntimeInstantiated;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	protected internal bool removedFromLocalViewList;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal UnityEngine.MonoBehaviour[] RpcMonoBehaviours;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MethodInfo OnSerializeMethodInfo;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool failedToFindOnSerialize;

	[Token(Token = "0x170000B4")]
	public int prefix
	{
		[Token(Token = "0x600042D")]
		[Address(RVA = "0xDB3F68", Offset = "0xDB3F68", VA = "0xDB3F68")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xDB4004", Offset = "0xDB4004", VA = "0xDB4004")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public object[] instantiationData
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xDB400C", Offset = "0xDB400C", VA = "0xDB400C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000430")]
		[Address(RVA = "0xDB4090", Offset = "0xDB4090", VA = "0xDB4090")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public int viewID
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0xDB4098", Offset = "0xDB4098", VA = "0xDB4098")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000432")]
		[Address(RVA = "0xDB40A0", Offset = "0xDB40A0", VA = "0xDB40A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public bool isSceneView
	{
		[Token(Token = "0x6000433")]
		[Address(RVA = "0xDB416C", Offset = "0xDB416C", VA = "0xDB416C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B8")]
	public PhotonPlayer owner
	{
		[Token(Token = "0x6000434")]
		[Address(RVA = "0xDB41E8", Offset = "0xDB41E8", VA = "0xDB41E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B9")]
	public int OwnerActorNr
	{
		[Token(Token = "0x6000435")]
		[Address(RVA = "0xDB41F0", Offset = "0xDB41F0", VA = "0xDB41F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BA")]
	public bool isOwnerActive
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0xDB41F8", Offset = "0xDB41F8", VA = "0xDB41F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BB")]
	public int CreatorActorNr
	{
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xDB4184", Offset = "0xDB4184", VA = "0xDB4184")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BC")]
	public bool isMine
	{
		[Token(Token = "0x6000438")]
		[Address(RVA = "0xDB4298", Offset = "0xDB4298", VA = "0xDB4298")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xDB4338", Offset = "0xDB4338", VA = "0xDB4338")]
	protected internal void Awake()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xDB43D8", Offset = "0xDB43D8", VA = "0xDB43D8")]
	public void RequestOwnership()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xDB4448", Offset = "0xDB4448", VA = "0xDB4448")]
	public void TransferOwnership(PhotonPlayer newOwner)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xDB4460", Offset = "0xDB4460", VA = "0xDB4460")]
	public void TransferOwnership(int newOwnerId)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xDB44E4", Offset = "0xDB44E4", VA = "0xDB44E4")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xDB4548", Offset = "0xDB4548", VA = "0xDB4548")]
	protected internal void OnDestroy()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xDB46B0", Offset = "0xDB46B0", VA = "0xDB46B0")]
	public void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xDB4C4C", Offset = "0xDB4C4C", VA = "0xDB4C4C")]
	public void DeserializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xDB4D14", Offset = "0xDB4D14", VA = "0xDB4D14")]
	protected internal void DeserializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xDB4778", Offset = "0xDB4778", VA = "0xDB4778")]
	protected internal void SerializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xDB5328", Offset = "0xDB5328", VA = "0xDB5328")]
	protected internal void ExecuteComponentOnSerialize(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xDB56FC", Offset = "0xDB56FC", VA = "0xDB56FC")]
	public void RefreshRpcMonoBehaviourCache()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xDB574C", Offset = "0xDB574C", VA = "0xDB574C")]
	public void RPC(string methodName, PhotonTargets target, params object[] parameters)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xDB57CC", Offset = "0xDB57CC", VA = "0xDB57CC")]
	public void RpcSecure(string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xDB5850", Offset = "0xDB5850", VA = "0xDB5850")]
	public void RPC(string methodName, PhotonPlayer targetPlayer, params object[] parameters)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xDB58D0", Offset = "0xDB58D0", VA = "0xDB58D0")]
	public void RpcSecure(string methodName, PhotonPlayer targetPlayer, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xDB5954", Offset = "0xDB5954", VA = "0xDB5954")]
	public static PhotonView Get(Component component)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xDB59A4", Offset = "0xDB59A4", VA = "0xDB59A4")]
	public static PhotonView Get(GameObject gameObj)
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xDB59F4", Offset = "0xDB59F4", VA = "0xDB59F4")]
	public static PhotonView Find(int viewID)
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xDB5A60", Offset = "0xDB5A60", VA = "0xDB5A60", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xDB5CB4", Offset = "0xDB5CB4", VA = "0xDB5CB4")]
	public PhotonView()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PhotonPingManager
{
	[Token(Token = "0x20000A6")]
	[CompilerGenerated]
	private sealed class <PingSocket>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Region region;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhotonPingManager <>4__this;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Photon.Realtime.PhotonPing <ping>5__2;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <rttSum>5__3;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <replyCount>5__4;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <regionAddress>5__5;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool <overtime>5__7;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch <sw>5__8;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000457")]
			[Address(RVA = "0xDB6654", Offset = "0xDB6654", VA = "0xDB6654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000459")]
			[Address(RVA = "0xDB669C", Offset = "0xDB669C", VA = "0xDB669C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xDB5D4C", Offset = "0xDB5D4C", VA = "0xDB5D4C")]
		[DebuggerHidden]
		public <PingSocket>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xDB6044", Offset = "0xDB6044", VA = "0xDB6044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0xDB6048", Offset = "0xDB6048", VA = "0xDB6048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xDB665C", Offset = "0xDB665C", VA = "0xDB665C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseNative;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Attempts;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IgnoreInitialAttempt;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int MaxMilliseconsPerPing;

	[Token(Token = "0x4000518")]
	private const string wssProtocolString = "wss://";

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int PingsRunning;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaitForSeconds waitPing;

	[Token(Token = "0x170000BD")]
	public Region BestRegion
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xDA75F0", Offset = "0xDA75F0", VA = "0xDA75F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	public bool Done
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0xDA75E0", Offset = "0xDA75E0", VA = "0xDA75E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xDA756C", Offset = "0xDA756C", VA = "0xDA756C")]
	[IteratorStateMachine(typeof(<PingSocket>d__11))]
	public IEnumerator PingSocket(Region region)
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xDB5D74", Offset = "0xDB5D74", VA = "0xDB5D74")]
	public static string ResolveHost(string hostName)
	{
		return null;
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xDA74FC", Offset = "0xDA74FC", VA = "0xDA74FC")]
	public PhotonPingManager()
	{
	}
}
[Token(Token = "0x20000A7")]
public class Room : RoomInfo
{
	[Token(Token = "0x170000C1")]
	public new string Name
	{
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xDB66A4", Offset = "0xDB66A4", VA = "0xDB66A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xDB66AC", Offset = "0xDB66AC", VA = "0xDB66AC")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public new bool IsOpen
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xDB66B4", Offset = "0xDB66B4", VA = "0xDB66B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xDB66BC", Offset = "0xDB66BC", VA = "0xDB66BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public new bool IsVisible
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xDB68CC", Offset = "0xDB68CC", VA = "0xDB68CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xDB68D4", Offset = "0xDB68D4", VA = "0xDB68D4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public string[] PropertiesListedInLobby
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xDB6B44", Offset = "0xDB6B44", VA = "0xDB6B44")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xDB6B4C", Offset = "0xDB6B4C", VA = "0xDB6B4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public bool AutoCleanUp
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xDB6B54", Offset = "0xDB6B54", VA = "0xDB6B54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C6")]
	public new int MaxPlayers
	{
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xDB6B5C", Offset = "0xDB6B5C", VA = "0xDB6B5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xDB6B64", Offset = "0xDB6B64", VA = "0xDB6B64")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public new int PlayerCount
	{
		[Token(Token = "0x6000465")]
		[Address(RVA = "0xDB6DE4", Offset = "0xDB6DE4", VA = "0xDB6DE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C8")]
	public string[] ExpectedUsers
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xDB6E58", Offset = "0xDB6E58", VA = "0xDB6E58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C9")]
	public int PlayerTtl
	{
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xDB6E60", Offset = "0xDB6E60", VA = "0xDB6E60")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000468")]
		[Address(RVA = "0xDB6E68", Offset = "0xDB6E68", VA = "0xDB6E68")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public int EmptyRoomTtl
	{
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xDB6FDC", Offset = "0xDB6FDC", VA = "0xDB6FDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xDB6FE4", Offset = "0xDB6FE4", VA = "0xDB6FE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	protected internal int MasterClientId
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xDB7158", Offset = "0xDB7158", VA = "0xDB7158")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xDB7160", Offset = "0xDB7160", VA = "0xDB7160")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	[Obsolete("Please use Name (updated case for naming).")]
	public new string name
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0xDB8378", Offset = "0xDB8378", VA = "0xDB8378")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xDB8380", Offset = "0xDB8380", VA = "0xDB8380")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	[Obsolete("Please use IsOpen (updated case for naming).")]
	public new bool open
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xDB8388", Offset = "0xDB8388", VA = "0xDB8388")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xDB8390", Offset = "0xDB8390", VA = "0xDB8390")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	[Obsolete("Please use IsVisible (updated case for naming).")]
	public new bool visible
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0xDB8398", Offset = "0xDB8398", VA = "0xDB8398")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000479")]
		[Address(RVA = "0xDB83A0", Offset = "0xDB83A0", VA = "0xDB83A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	[Obsolete("Please use PropertiesListedInLobby (updated case for naming).")]
	public string[] propertiesListedInLobby
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0xDB83A8", Offset = "0xDB83A8", VA = "0xDB83A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047B")]
		[Address(RVA = "0xDB83B0", Offset = "0xDB83B0", VA = "0xDB83B0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	[Obsolete("Please use AutoCleanUp (updated case for naming).")]
	public bool autoCleanUp
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0xDB83B8", Offset = "0xDB83B8", VA = "0xDB83B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D1")]
	[Obsolete("Please use MaxPlayers (updated case for naming).")]
	public new int maxPlayers
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xDB83C0", Offset = "0xDB83C0", VA = "0xDB83C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600047E")]
		[Address(RVA = "0xDB83C8", Offset = "0xDB83C8", VA = "0xDB83C8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	[Obsolete("Please use PlayerCount (updated case for naming).")]
	public new int playerCount
	{
		[Token(Token = "0x600047F")]
		[Address(RVA = "0xDB83CC", Offset = "0xDB83CC", VA = "0xDB83CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D3")]
	[Obsolete("Please use ExpectedUsers (updated case for naming).")]
	public string[] expectedUsers
	{
		[Token(Token = "0x6000480")]
		[Address(RVA = "0xDB83D0", Offset = "0xDB83D0", VA = "0xDB83D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	[Obsolete("Please use MasterClientId (updated case for naming).")]
	protected internal int masterClientId
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0xDB83D8", Offset = "0xDB83D8", VA = "0xDB83D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000482")]
		[Address(RVA = "0xDB83E0", Offset = "0xDB83E0", VA = "0xDB83E0")]
		set
		{
		}
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xDAD298", Offset = "0xDAD298", VA = "0xDAD298")]
	internal Room(string roomName, RoomOptions options)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xDB7864", Offset = "0xDB7864", VA = "0xDB7864")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xDB7B3C", Offset = "0xDB7B3C", VA = "0xDB7B3C")]
	public void SetPropertiesListedInLobby(string[] propsListedInLobby)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xDB7C34", Offset = "0xDB7C34", VA = "0xDB7C34")]
	public void ClearExpectedUsers()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xDB7D88", Offset = "0xDB7D88", VA = "0xDB7D88")]
	public void SetExpectedUsers(string[] expectedUsers)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xDB7EB8", Offset = "0xDB7EB8", VA = "0xDB7EB8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xDB80E4", Offset = "0xDB80E4", VA = "0xDB80E4")]
	public new string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x20000A8")]
public class RoomInfo
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExitGames.Client.Photon.Hashtable customPropertiesField;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected byte maxPlayersField;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int emptyRoomTtlField;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int playerTtlField;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected string[] expectedUsersField;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool openField;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool visibleField;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	protected bool autoCleanUpField;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected string nameField;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal int masterClientIdField;

	[Token(Token = "0x170000D5")]
	public bool removedFromList
	{
		[Token(Token = "0x6000483")]
		[Address(RVA = "0xDB83E8", Offset = "0xDB83E8", VA = "0xDB83E8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000484")]
		[Address(RVA = "0xDB83F0", Offset = "0xDB83F0", VA = "0xDB83F0")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	protected internal bool serverSideMasterClient
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0xDB83FC", Offset = "0xDB83FC", VA = "0xDB83FC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000486")]
		[Address(RVA = "0xDB8404", Offset = "0xDB8404", VA = "0xDB8404")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0xDB8410", Offset = "0xDB8410", VA = "0xDB8410")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D8")]
	public string Name
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xDB8418", Offset = "0xDB8418", VA = "0xDB8418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D9")]
	public int PlayerCount
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0xDB8420", Offset = "0xDB8420", VA = "0xDB8420")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xDB8428", Offset = "0xDB8428", VA = "0xDB8428")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public bool IsLocalClientInside
	{
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xDB8430", Offset = "0xDB8430", VA = "0xDB8430")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xDB8438", Offset = "0xDB8438", VA = "0xDB8438")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public byte MaxPlayers
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xDB8444", Offset = "0xDB8444", VA = "0xDB8444")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000DC")]
	public bool IsOpen
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0xDB844C", Offset = "0xDB844C", VA = "0xDB844C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DD")]
	public bool IsVisible
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0xDB8454", Offset = "0xDB8454", VA = "0xDB8454")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DE")]
	[Obsolete("Please use CustomProperties (updated case for naming).")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x6000496")]
		[Address(RVA = "0xDB89CC", Offset = "0xDB89CC", VA = "0xDB89CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	[Obsolete("Please use Name (updated case for naming).")]
	public string name
	{
		[Token(Token = "0x6000497")]
		[Address(RVA = "0xDB89D4", Offset = "0xDB89D4", VA = "0xDB89D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E0")]
	[Obsolete("Please use PlayerCount (updated case for naming).")]
	public int playerCount
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xDB89DC", Offset = "0xDB89DC", VA = "0xDB89DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xDB89E4", Offset = "0xDB89E4", VA = "0xDB89E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	[Obsolete("Please use IsLocalClientInside (updated case for naming).")]
	public bool isLocalClientInside
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0xDB89EC", Offset = "0xDB89EC", VA = "0xDB89EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600049B")]
		[Address(RVA = "0xDB89F4", Offset = "0xDB89F4", VA = "0xDB89F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	[Obsolete("Please use MaxPlayers (updated case for naming).")]
	public byte maxPlayers
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xDB8A00", Offset = "0xDB8A00", VA = "0xDB8A00")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000E3")]
	[Obsolete("Please use IsOpen (updated case for naming).")]
	public bool open
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0xDB8A08", Offset = "0xDB8A08", VA = "0xDB8A08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E4")]
	[Obsolete("Please use IsVisible (updated case for naming).")]
	public bool visible
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xDB8A10", Offset = "0xDB8A10", VA = "0xDB8A10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xDB7168", Offset = "0xDB7168", VA = "0xDB7168")]
	protected internal RoomInfo(string roomName, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xDB845C", Offset = "0xDB845C", VA = "0xDB845C", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xDB84FC", Offset = "0xDB84FC", VA = "0xDB84FC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xDB851C", Offset = "0xDB851C", VA = "0xDB851C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xDB8744", Offset = "0xDB8744", VA = "0xDB8744")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xDB7260", Offset = "0xDB7260", VA = "0xDB7260")]
	protected internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
	{
	}
}
[Token(Token = "0x20000A9")]
public class PunRPC : Attribute
{
	[Token(Token = "0x600049F")]
	[Address(RVA = "0xDB8A18", Offset = "0xDB8A18", VA = "0xDB8A18")]
	public PunRPC()
	{
	}
}
[Token(Token = "0x20000AA")]
public class Region
{
	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CloudRegionCode Code;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Cluster;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string HostAndPort;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Ping;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xDB8A20", Offset = "0xDB8A20", VA = "0xDB8A20")]
	public Region(CloudRegionCode code)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xDB8AA4", Offset = "0xDB8AA4", VA = "0xDB8AA4")]
	public Region(CloudRegionCode code, string regionCodeString, string address)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xDA677C", Offset = "0xDA677C", VA = "0xDA677C")]
	public static CloudRegionCode Parse(string codeAsString)
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xDB8AE0", Offset = "0xDB8AE0", VA = "0xDB8AE0")]
	internal static CloudRegionFlag ParseFlag(CloudRegionCode region)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xDB8C90", Offset = "0xDB8C90", VA = "0xDB8C90")]
	[Obsolete]
	internal static CloudRegionFlag ParseFlag(string codeAsString)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xDB8DF4", Offset = "0xDB8DF4", VA = "0xDB8DF4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000AB")]
public class ServerSettings : ScriptableObject
{
	[Token(Token = "0x20000AC")]
	public enum HostingOption
	{
		[Token(Token = "0x400054B")]
		NotSet,
		[Token(Token = "0x400054C")]
		PhotonCloud,
		[Token(Token = "0x400054D")]
		SelfHosted,
		[Token(Token = "0x400054E")]
		OfflineMode,
		[Token(Token = "0x400054F")]
		BestRegion
	}

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AppID;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string VoiceAppID;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ChatAppID;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HostingOption HostType;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CloudRegionCode PreferredRegion;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CloudRegionFlag EnabledRegions;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ConnectionProtocol Protocol;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ServerAddress;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int ServerPort;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VoiceServerPort;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool JoinLobby;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool EnableLobbyStatistics;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public PhotonLogLevel PunLogging;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DebugLevel NetworkLogging;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RunInBackground;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> RpcList;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool DisableAutoOpenWizard;

	[Token(Token = "0x170000E5")]
	public static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xDB8FD0", Offset = "0xDB8FD0", VA = "0xDB8FD0")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xDB8E84", Offset = "0xDB8E84", VA = "0xDB8E84")]
	public void UseCloudBestRegion(string cloudAppid)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xDB8E94", Offset = "0xDB8E94", VA = "0xDB8E94")]
	public void UseCloud(string cloudAppid)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xDB8EA4", Offset = "0xDB8EA4", VA = "0xDB8EA4")]
	public void UseCloud(string cloudAppid, CloudRegionCode code)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xDB8EB4", Offset = "0xDB8EB4", VA = "0xDB8EB4")]
	public void UseMyServer(string serverAddress, int serverPort, string application)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xDB8F30", Offset = "0xDB8F30", VA = "0xDB8F30")]
	public static bool IsAppId(string val)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xDB8FD4", Offset = "0xDB8FD4", VA = "0xDB8FD4")]
	public static void ResetBestRegionCodeInPreferences()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xDB8FDC", Offset = "0xDB8FDC", VA = "0xDB8FDC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xDB9090", Offset = "0xDB9090", VA = "0xDB9090")]
	public ServerSettings()
	{
	}
}
[Token(Token = "0x20000AD")]
[RequireComponent(typeof(Animator))]
[RequireComponent(typeof(PhotonView))]
[AddComponentMenu("Photon Networking/Photon Animator View")]
public class PhotonAnimatorView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x20000AE")]
	public enum ParameterType
	{
		[Token(Token = "0x400055C")]
		Float = 1,
		[Token(Token = "0x400055D")]
		Int = 3,
		[Token(Token = "0x400055E")]
		Bool = 4,
		[Token(Token = "0x400055F")]
		Trigger = 9
	}

	[Token(Token = "0x20000AF")]
	public enum SynchronizeType
	{
		[Token(Token = "0x4000561")]
		Disabled,
		[Token(Token = "0x4000562")]
		Discrete,
		[Token(Token = "0x4000563")]
		Continuous
	}

	[Serializable]
	[Token(Token = "0x20000B0")]
	public class SynchronizedParameter
	{
		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterType Type;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xDBA248", Offset = "0xDBA248", VA = "0xDBA248")]
		public SynchronizedParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000B1")]
	public class SynchronizedLayer
	{
		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LayerIndex;

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xDBA040", Offset = "0xDBA040", VA = "0xDBA040")]
		public SynchronizedLayer()
		{
		}
	}

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonStreamQueue m_StreamQueue;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private bool ShowLayerWeightsInspector;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	[HideInInspector]
	private bool ShowParameterInspector;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private List<SynchronizedParameter> m_SynchronizeParameters;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<SynchronizedLayer> m_SynchronizeLayers;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_ReceiverPosition;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_LastDeserializeTime;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_WasSynchronizeTypeChanged;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_raisedDiscreteTriggersCache;

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xDB9154", Offset = "0xDB9154", VA = "0xDB9154")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xDB9204", Offset = "0xDB9204", VA = "0xDB9204")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xDB95E4", Offset = "0xDB95E4", VA = "0xDB95E4")]
	public void CacheDiscreteTriggers()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xDB9A14", Offset = "0xDB9A14", VA = "0xDB9A14")]
	public bool DoesLayerSynchronizeTypeExist(int layerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xDB9B04", Offset = "0xDB9B04", VA = "0xDB9B04")]
	public bool DoesParameterSynchronizeTypeExist(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xDB9BF4", Offset = "0xDB9BF4", VA = "0xDB9BF4")]
	public List<SynchronizedLayer> GetSynchronizedLayers()
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xDB9BFC", Offset = "0xDB9BFC", VA = "0xDB9BFC")]
	public List<SynchronizedParameter> GetSynchronizedParameters()
	{
		return null;
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xDB9C04", Offset = "0xDB9C04", VA = "0xDB9C04")]
	public SynchronizeType GetLayerSynchronizeType(int layerIndex)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xDB9D2C", Offset = "0xDB9D2C", VA = "0xDB9D2C")]
	public SynchronizeType GetParameterSynchronizeType(string name)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xDB9E54", Offset = "0xDB9E54", VA = "0xDB9E54")]
	public void SetLayerSynchronized(int layerIndex, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xDBA048", Offset = "0xDBA048", VA = "0xDBA048")]
	public void SetParameterSynchronized(string name, ParameterType type, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xDB9314", Offset = "0xDB9314", VA = "0xDB9314")]
	private void SerializeDataContinuously()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xDB972C", Offset = "0xDB972C", VA = "0xDB972C")]
	private void DeserializeDataContinuously()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xDBA250", Offset = "0xDBA250", VA = "0xDBA250")]
	private void SerializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xDBA530", Offset = "0xDBA530", VA = "0xDBA530")]
	private void DeserializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xDBA8C0", Offset = "0xDBA8C0", VA = "0xDBA8C0")]
	private void SerializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xDBAA4C", Offset = "0xDBAA4C", VA = "0xDBAA4C")]
	private void DeserializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xDBABD4", Offset = "0xDBABD4", VA = "0xDBABD4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xDBAD00", Offset = "0xDBAD00", VA = "0xDBAD00")]
	public PhotonAnimatorView()
	{
	}
}
[Token(Token = "0x20000B8")]
[RequireComponent(typeof(PhotonView))]
[AddComponentMenu("Photon Networking/Photon Rigidbody 2D View")]
[RequireComponent(typeof(Rigidbody2D))]
public class PhotonRigidbody2DView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody2D m_Body;

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xDBAEEC", Offset = "0xDBAEEC", VA = "0xDBAEEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xDBAF3C", Offset = "0xDBAF3C", VA = "0xDBAF3C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xDBB0C0", Offset = "0xDBB0C0", VA = "0xDBB0C0")]
	public PhotonRigidbody2DView()
	{
	}
}
[Token(Token = "0x20000B9")]
[RequireComponent(typeof(PhotonView))]
[AddComponentMenu("Photon Networking/Photon Rigidbody View")]
[RequireComponent(typeof(Rigidbody))]
public class PhotonRigidbodyView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_Body;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xDBB0D0", Offset = "0xDBB0D0", VA = "0xDBB0D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xDBB120", Offset = "0xDBB120", VA = "0xDBB120", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xDBB2A0", Offset = "0xDBB2A0", VA = "0xDBB2A0")]
	public PhotonRigidbodyView()
	{
	}
}
[Token(Token = "0x20000BA")]
[AddComponentMenu("Photon Networking/Photon Transform View")]
[RequireComponent(typeof(PhotonView))]
public class PhotonTransformView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonTransformViewPositionControl m_PositionControl;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonTransformViewRotationControl m_RotationControl;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonTransformViewScaleControl m_ScaleControl;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_firstTake;

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xDBB2B0", Offset = "0xDBB2B0", VA = "0xDBB2B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xDBB518", Offset = "0xDBB518", VA = "0xDBB518")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xDBB524", Offset = "0xDBB524", VA = "0xDBB524")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xDBB5EC", Offset = "0xDBB5EC", VA = "0xDBB5EC")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xDBB670", Offset = "0xDBB670", VA = "0xDBB670")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xDBB6F4", Offset = "0xDBB6F4", VA = "0xDBB6F4")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xDBBFEC", Offset = "0xDBBFEC", VA = "0xDBBFEC")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xDBC018", Offset = "0xDBC018", VA = "0xDBC018", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xDBC48C", Offset = "0xDBC48C", VA = "0xDBC48C")]
	private void DoDrawEstimatedPositionError()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xDBC70C", Offset = "0xDBC70C", VA = "0xDBC70C")]
	public PhotonTransformView()
	{
	}
}
[Token(Token = "0x20000BB")]
public class PhotonTransformViewPositionControl
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewPositionModel m_Model;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_CurrentSpeed;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double m_LastSerializeTime;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_SynchronizedSpeed;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_SynchronizedTurnSpeed;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Vector3> m_OldNetworkPositions;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_UpdatedPositionAfterOnSerialize;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xDBB3AC", Offset = "0xDBB3AC", VA = "0xDBB3AC")]
	public PhotonTransformViewPositionControl(PhotonTransformViewPositionModel model)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xDBCA50", Offset = "0xDBCA50", VA = "0xDBCA50")]
	private Vector3 GetOldestStoredNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xDBC00C", Offset = "0xDBC00C", VA = "0xDBC00C")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xDBB778", Offset = "0xDBB778", VA = "0xDBB778")]
	public Vector3 UpdatePosition(Vector3 currentPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xDBCD68", Offset = "0xDBCD68", VA = "0xDBCD68")]
	public Vector3 GetNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xDBCAC8", Offset = "0xDBCAC8", VA = "0xDBCAC8")]
	public Vector3 GetExtrapolatedPositionOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xDBC1F0", Offset = "0xDBC1F0", VA = "0xDBC1F0")]
	public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xDBCD74", Offset = "0xDBCD74", VA = "0xDBCD74")]
	private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xDBCE90", Offset = "0xDBCE90", VA = "0xDBCE90")]
	private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20000BC")]
public class PhotonTransformViewPositionModel
{
	[Token(Token = "0x20000BD")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4000595")]
		Disabled,
		[Token(Token = "0x4000596")]
		FixedSpeed,
		[Token(Token = "0x4000597")]
		EstimatedSpeed,
		[Token(Token = "0x4000598")]
		SynchronizeValues,
		[Token(Token = "0x4000599")]
		Lerp
	}

	[Token(Token = "0x20000BE")]
	public enum ExtrapolateOptions
	{
		[Token(Token = "0x400059B")]
		Disabled,
		[Token(Token = "0x400059C")]
		SynchronizeValues,
		[Token(Token = "0x400059D")]
		EstimateSpeedAndTurn,
		[Token(Token = "0x400059E")]
		FixedSpeed
	}

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool TeleportEnabled;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TeleportIfDistanceGreaterThan;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float InterpolateMoveTowardsAcceleration;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float InterpolateMoveTowardsDeceleration;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve InterpolateSpeedCurve;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExtrapolateOptions ExtrapolateOption;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ExtrapolateSpeed;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ExtrapolateIncludingRoundTripTime;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ExtrapolateNumberOfStoredPositions;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DrawErrorGizmo;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xDBC7EC", Offset = "0xDBC7EC", VA = "0xDBC7EC")]
	public PhotonTransformViewPositionModel()
	{
	}
}
[Token(Token = "0x20000BF")]
public class PhotonTransformViewRotationControl
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewRotationModel m_Model;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xDBB484", Offset = "0xDBB484", VA = "0xDBB484")]
	public PhotonTransformViewRotationControl(PhotonTransformViewRotationModel model)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xDBD068", Offset = "0xDBD068", VA = "0xDBD068")]
	public Quaternion GetNetworkRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xDBBCD0", Offset = "0xDBBCD0", VA = "0xDBBCD0")]
	public Quaternion GetRotation(Quaternion currentRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xDBC2B0", Offset = "0xDBC2B0", VA = "0xDBC2B0")]
	public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20000C0")]
public class PhotonTransformViewRotationModel
{
	[Token(Token = "0x20000C1")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x40005A6")]
		Disabled,
		[Token(Token = "0x40005A7")]
		RotateTowards,
		[Token(Token = "0x40005A8")]
		Lerp
	}

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateRotateTowardsSpeed;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xDBCA24", Offset = "0xDBCA24", VA = "0xDBCA24")]
	public PhotonTransformViewRotationModel()
	{
	}
}
[Token(Token = "0x20000C2")]
public class PhotonTransformViewScaleControl
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewScaleModel m_Model;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_NetworkScale;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xDBB4AC", Offset = "0xDBB4AC", VA = "0xDBB4AC")]
	public PhotonTransformViewScaleControl(PhotonTransformViewScaleModel model)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xDBD074", Offset = "0xDBD074", VA = "0xDBD074")]
	public Vector3 GetNetworkScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xDBBE64", Offset = "0xDBBE64", VA = "0xDBBE64")]
	public Vector3 GetScale(Vector3 currentScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xDBC39C", Offset = "0xDBC39C", VA = "0xDBC39C")]
	public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20000C3")]
public class PhotonTransformViewScaleModel
{
	[Token(Token = "0x20000C4")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x40005B0")]
		Disabled,
		[Token(Token = "0x40005B1")]
		MoveTowards,
		[Token(Token = "0x40005B2")]
		Lerp
	}

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xDBCA40", Offset = "0xDBCA40", VA = "0xDBCA40")]
	public PhotonTransformViewScaleModel()
	{
	}
}
[Token(Token = "0x20000C5")]
public class ConnectAndJoinRandom : Photon.MonoBehaviour
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoConnect;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte Version;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool ConnectInUpdate;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xDBD080", Offset = "0xDBD080", VA = "0xDBD080", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xDBD0D0", Offset = "0xDBD0D0", VA = "0xDBD0D0", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xDBD1F8", Offset = "0xDBD1F8", VA = "0xDBD1F8", Slot = "6")]
	public virtual void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xDBD288", Offset = "0xDBD288", VA = "0xDBD288", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xDBD318", Offset = "0xDBD318", VA = "0xDBD318", Slot = "8")]
	public virtual void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xDBD3EC", Offset = "0xDBD3EC", VA = "0xDBD3EC", Slot = "9")]
	public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xDBD4B8", Offset = "0xDBD4B8", VA = "0xDBD4B8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xDBD520", Offset = "0xDBD520", VA = "0xDBD520")]
	public ConnectAndJoinRandom()
	{
	}
}
[Token(Token = "0x20000C6")]
[HelpURL("https://doc.photonengine.com/en-us/pun/current/demos-and-tutorials/package-demos/culling-demo")]
public class CullArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005B6")]
	private const int MAX_NUMBER_OF_ALLOWED_CELLS = 250;

	[Token(Token = "0x40005B7")]
	public const int MAX_NUMBER_OF_SUBDIVISIONS = 3;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly byte FIRST_GROUP_ID;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int[] SUBDIVISION_FIRST_LEVEL_ORDER;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly int[] SUBDIVISION_SECOND_LEVEL_ORDER;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly int[] SUBDIVISION_THIRD_LEVEL_ORDER;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 Center;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 Size;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2[] Subdivisions;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfSubdivisions;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool YIsUpAxis;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool RecreateCellHierarchy;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private byte idCounter;

	[Token(Token = "0x170000E6")]
	public int CellCount
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xDBD538", Offset = "0xDBD538", VA = "0xDBD538")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xDBD540", Offset = "0xDBD540", VA = "0xDBD540")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public CellTree CellTree
	{
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xDBD548", Offset = "0xDBD548", VA = "0xDBD548")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xDBD550", Offset = "0xDBD550", VA = "0xDBD550")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public Dictionary<int, GameObject> Map
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0xDBD558", Offset = "0xDBD558", VA = "0xDBD558")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000501")]
		[Address(RVA = "0xDBD560", Offset = "0xDBD560", VA = "0xDBD560")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xDBD568", Offset = "0xDBD568", VA = "0xDBD568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xDBD998", Offset = "0xDBD998", VA = "0xDBD998")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xDBD574", Offset = "0xDBD574", VA = "0xDBD574")]
	private void CreateCellHierarchy()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xDBDAC0", Offset = "0xDBDAC0", VA = "0xDBDAC0")]
	private void CreateChildCells(CellTreeNode parent, int cellLevelInHierarchy)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xDBD9E4", Offset = "0xDBD9E4", VA = "0xDBD9E4")]
	private void DrawCells()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xDBDA0C", Offset = "0xDBDA0C", VA = "0xDBDA0C")]
	private bool IsCellCountAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xDBDD38", Offset = "0xDBDD38", VA = "0xDBDD38")]
	public List<byte> GetActiveCells(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xDBDDF8", Offset = "0xDBDDF8", VA = "0xDBDDF8")]
	public CullArea()
	{
	}
}
[Token(Token = "0x20000C7")]
public class CellTree
{
	[Token(Token = "0x170000E9")]
	public CellTreeNode RootNode
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0xE87254", Offset = "0xE87254", VA = "0xE87254")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600050B")]
		[Address(RVA = "0xE8725C", Offset = "0xE8725C", VA = "0xE8725C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xE87264", Offset = "0xE87264", VA = "0xE87264")]
	public CellTree()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xE8726C", Offset = "0xE8726C", VA = "0xE8726C")]
	public CellTree(CellTreeNode root)
	{
	}
}
[Token(Token = "0x20000C8")]
public class CellTreeNode
{
	[Token(Token = "0x20000C9")]
	public enum ENodeType
	{
		[Token(Token = "0x40005D1")]
		Root,
		[Token(Token = "0x40005D2")]
		Node,
		[Token(Token = "0x40005D3")]
		Leaf
	}

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte Id;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Center;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Size;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 TopLeft;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 BottomRight;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ENodeType NodeType;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellTreeNode Parent;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CellTreeNode> Childs;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maxDistance;

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xE87294", Offset = "0xE87294", VA = "0xE87294")]
	public CellTreeNode()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xE8729C", Offset = "0xE8729C", VA = "0xE8729C")]
	public CellTreeNode(byte id, ENodeType nodeType, CellTreeNode parent)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xE872DC", Offset = "0xE872DC", VA = "0xE872DC")]
	public void AddChild(CellTreeNode child)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xE873D0", Offset = "0xE873D0", VA = "0xE873D0")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xE873D4", Offset = "0xE873D4", VA = "0xE873D4")]
	public void GetActiveCells(List<byte> activeCells, bool yIsUpAxis, Vector3 position)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xE876CC", Offset = "0xE876CC", VA = "0xE876CC")]
	public bool IsPointInsideCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xE8766C", Offset = "0xE8766C", VA = "0xE8766C")]
	public bool IsPointNearCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CA")]
public class InputToEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject lastGo;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 inputHitPos;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DetectPointedAtGameObject;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 pressedPosition;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currentPos;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Dragging;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera m_Camera;

	[Token(Token = "0x170000EA")]
	public static GameObject goPointedAt
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0xE8772C", Offset = "0xE8772C", VA = "0xE8772C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000516")]
		[Address(RVA = "0xE87774", Offset = "0xE87774", VA = "0xE87774")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public Vector2 DragVector
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0xE877C0", Offset = "0xE877C0", VA = "0xE877C0")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xE8781C", Offset = "0xE8781C", VA = "0xE8781C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xE8786C", Offset = "0xE8786C", VA = "0xE8786C")]
	private void Update()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xE87B64", Offset = "0xE87B64", VA = "0xE87B64")]
	private void Press(Vector2 screenPos)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xE87C38", Offset = "0xE87C38", VA = "0xE87C38")]
	private void Release(Vector2 screenPos)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xE87A74", Offset = "0xE87A74", VA = "0xE87A74")]
	private GameObject RaycastObject(Vector2 screenPos)
	{
		return null;
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xE87D8C", Offset = "0xE87D8C", VA = "0xE87D8C")]
	public InputToEvent()
	{
	}
}
[Token(Token = "0x20000CB")]
[RequireComponent(typeof(PhotonView))]
public class InRoomChat : Photon.MonoBehaviour
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect GuiRect;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsVisible;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool AlignBottom;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> messages;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string inputLine;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 scrollPos;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ChatRPC;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xE87DF0", Offset = "0xE87DF0", VA = "0xE87DF0")]
	public void Start()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xE87E44", Offset = "0xE87E44", VA = "0xE87E44")]
	[PunRPC]
	public void Chat(string newLine, PhotonMessageInfo mi)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xE87FA0", Offset = "0xE87FA0", VA = "0xE87FA0")]
	public void AddLine(string newLine)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xE88048", Offset = "0xE88048", VA = "0xE88048")]
	public InRoomChat()
	{
	}
}
[Token(Token = "0x20000CC")]
[RequireComponent(typeof(PhotonView))]
public class ManualPhotonViewAllocator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xE881B8", Offset = "0xE881B8", VA = "0xE881B8")]
	public void AllocateManualPhotonView()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xE883AC", Offset = "0xE883AC", VA = "0xE883AC")]
	[PunRPC]
	public void InstantiateRpc(int viewID)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xE88560", Offset = "0xE88560", VA = "0xE88560")]
	public ManualPhotonViewAllocator()
	{
	}
}
[Token(Token = "0x20000CD")]
[RequireComponent(typeof(PhotonView))]
public class MoveByKeys : Photon.MonoBehaviour
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float JumpForce;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float JumpTimeout;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isSprite;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float jumpingTime;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody body;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody2D body2d;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xE88568", Offset = "0xE88568", VA = "0xE88568")]
	public void Start()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xE88648", Offset = "0xE88648", VA = "0xE88648")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xE88A2C", Offset = "0xE88A2C", VA = "0xE88A2C")]
	public MoveByKeys()
	{
	}
}
[Token(Token = "0x20000CE")]
[RequireComponent(typeof(PhotonView))]
public class NetworkCullingHandler : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int orderIndex;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CullArea cullArea;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> previousActiveCells;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> activeCells;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonView pView;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lastPosition;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 currentPosition;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xE88A48", Offset = "0xE88A48", VA = "0xE88A48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xE88BD4", Offset = "0xE88BD4", VA = "0xE88BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xE88D08", Offset = "0xE88D08", VA = "0xE88D08")]
	private void Update()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xE88DB0", Offset = "0xE88DB0", VA = "0xE88DB0")]
	private bool HaveActiveCellsChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xE88F70", Offset = "0xE88F70", VA = "0xE88F70")]
	private void UpdateInterestGroups()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xE89230", Offset = "0xE89230", VA = "0xE89230", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xE893A0", Offset = "0xE893A0", VA = "0xE893A0")]
	public NetworkCullingHandler()
	{
	}
}
[Token(Token = "0x20000CF")]
[RequireComponent(typeof(PhotonView))]
public class OnClickDestroy : Photon.MonoBehaviour
{
	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <DestroyRpc>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnClickDestroy <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000536")]
			[Address(RVA = "0xE89680", Offset = "0xE89680", VA = "0xE89680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000538")]
			[Address(RVA = "0xE896C8", Offset = "0xE896C8", VA = "0xE896C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xE8952C", Offset = "0xE8952C", VA = "0xE8952C")]
		[DebuggerHidden]
		public <DestroyRpc>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xE8955C", Offset = "0xE8955C", VA = "0xE8955C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xE89560", Offset = "0xE89560", VA = "0xE89560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xE89688", Offset = "0xE89688", VA = "0xE89688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DestroyByRpc;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xE893A8", Offset = "0xE893A8", VA = "0xE893A8")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xE894C4", Offset = "0xE894C4", VA = "0xE894C4")]
	[PunRPC]
	[IteratorStateMachine(typeof(<DestroyRpc>d__2))]
	public IEnumerator DestroyRpc()
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xE89554", Offset = "0xE89554", VA = "0xE89554")]
	public OnClickDestroy()
	{
	}
}
[Token(Token = "0x20000D1")]
public class OnClickInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int InstantiateType;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] InstantiateTypeNames;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showGui;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xE896D0", Offset = "0xE896D0", VA = "0xE896D0")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xE89918", Offset = "0xE89918", VA = "0xE89918")]
	public OnClickInstantiate()
	{
	}
}
[Token(Token = "0x20000D2")]
public class OnJoinedInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SpawnPosition;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PositionOffset;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] PrefabsToInstantiate;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xE89A08", Offset = "0xE89A08", VA = "0xE89A08")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xE89D38", Offset = "0xE89D38", VA = "0xE89D38")]
	public OnJoinedInstantiate()
	{
	}
}
[Token(Token = "0x20000D3")]
public class OnStartDelete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600053D")]
	[Address(RVA = "0xE89D48", Offset = "0xE89D48", VA = "0xE89D48")]
	private void Start()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xE89DB4", Offset = "0xE89DB4", VA = "0xE89DB4")]
	public OnStartDelete()
	{
	}
}
[Token(Token = "0x20000D4")]
[RequireComponent(typeof(PhotonView))]
public class PickupItem : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnTrigger;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool PickupIsMine;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.MonoBehaviour OnPickedUpCall;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SentPickup;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double TimeOfRespawn;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<PickupItem> DisabledPickupItems;

	[Token(Token = "0x170000EE")]
	public int ViewID
	{
		[Token(Token = "0x600053F")]
		[Address(RVA = "0xE89DBC", Offset = "0xE89DBC", VA = "0xE89DBC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xE89DDC", Offset = "0xE89DDC", VA = "0xE89DDC")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xE89F80", Offset = "0xE89F80", VA = "0xE89F80", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xE89E9C", Offset = "0xE89E9C", VA = "0xE89E9C")]
	public void Pickup()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xE8A0BC", Offset = "0xE8A0BC", VA = "0xE8A0BC")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xE8A198", Offset = "0xE8A198", VA = "0xE8A198")]
	public void Drop(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xE8A2C0", Offset = "0xE8A2C0", VA = "0xE8A2C0")]
	[PunRPC]
	public void PunPickup(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xE8A6C0", Offset = "0xE8A6C0", VA = "0xE8A6C0")]
	internal void PickedUp(float timeUntilRespawn)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xE8A7E4", Offset = "0xE8A7E4", VA = "0xE8A7E4")]
	[PunRPC]
	internal void PunRespawn(Vector3 pos)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xE8A8A8", Offset = "0xE8A8A8", VA = "0xE8A8A8")]
	[PunRPC]
	internal void PunRespawn()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xE8A9A4", Offset = "0xE8A9A4", VA = "0xE8A9A4")]
	public PickupItem()
	{
	}
}
[Token(Token = "0x20000D5")]
[RequireComponent(typeof(PhotonView))]
public class PickupItemSimple : Photon.MonoBehaviour
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnCollide;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool SentPickup;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xE8AA40", Offset = "0xE8AA40", VA = "0xE8AA40")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xE8AB00", Offset = "0xE8AB00", VA = "0xE8AB00")]
	public void Pickup()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xE8ABE4", Offset = "0xE8ABE4", VA = "0xE8ABE4")]
	[PunRPC]
	public void PunPickupSimple(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xE8AD9C", Offset = "0xE8AD9C", VA = "0xE8AD9C")]
	public void RespawnAfter()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xE8AE3C", Offset = "0xE8AE3C", VA = "0xE8AE3C")]
	public PickupItemSimple()
	{
	}
}
[Token(Token = "0x20000D6")]
[RequireComponent(typeof(PhotonView))]
public class PickupItemSyncer : Photon.MonoBehaviour
{
	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsWaitingForPickupInit;

	[Token(Token = "0x4000608")]
	private const float TimeDeltaToIgnore = 0.2f;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xE8AE4C", Offset = "0xE8AE4C", VA = "0xE8AE4C")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xE8B734", Offset = "0xE8B734", VA = "0xE8B734")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xE8B8B0", Offset = "0xE8B8B0", VA = "0xE8B8B0")]
	public void AskForPickupItemSpawnTimes()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xE8BAF0", Offset = "0xE8BAF0", VA = "0xE8BAF0")]
	[PunRPC]
	[Obsolete("Use RequestForPickupItems(PhotonMessageInfo msgInfo) with corrected typing instead.")]
	public void RequestForPickupTimes(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xE8BB1C", Offset = "0xE8BB1C", VA = "0xE8BB1C")]
	[PunRPC]
	public void RequestForPickupItems(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xE8AECC", Offset = "0xE8AECC", VA = "0xE8AECC")]
	private void SendPickedUpItems(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xE8BBA4", Offset = "0xE8BBA4", VA = "0xE8BBA4")]
	[PunRPC]
	public void PickupItemInit(double timeBase, float[] inactivePickupsAndTimes)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xE8BF70", Offset = "0xE8BF70", VA = "0xE8BF70")]
	public PickupItemSyncer()
	{
	}
}
[Token(Token = "0x20000D7")]
[RequireComponent(typeof(InputToEvent))]
public class PointedAtGameObjectInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000558")]
	[Address(RVA = "0xE8BF78", Offset = "0xE8BF78", VA = "0xE8BF78")]
	public PointedAtGameObjectInfo()
	{
	}
}
[Token(Token = "0x20000D8")]
public class PunPlayerScores : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000609")]
	public const string PlayerScoreProp = "score";

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xE8BF80", Offset = "0xE8BF80", VA = "0xE8BF80")]
	public PunPlayerScores()
	{
	}
}
[Token(Token = "0x20000D9")]
public static class ScoreExtensions
{
	[Token(Token = "0x600055A")]
	[Address(RVA = "0xE8BF88", Offset = "0xE8BF88", VA = "0xE8BF88")]
	public static void SetScore(this PhotonPlayer player, int newScore)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xE8C060", Offset = "0xE8C060", VA = "0xE8C060")]
	public static void AddScore(this PhotonPlayer player, int scoreToAddToCurrent)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xE8C14C", Offset = "0xE8C14C", VA = "0xE8C14C")]
	public static int GetScore(this PhotonPlayer player)
	{
		return default(int);
	}
}
[Token(Token = "0x20000DA")]
public class PunTeams : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	public enum Team : byte
	{
		[Token(Token = "0x400060D")]
		none,
		[Token(Token = "0x400060E")]
		red,
		[Token(Token = "0x400060F")]
		blue
	}

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Team, List<PhotonPlayer>> PlayersPerTeam;

	[Token(Token = "0x400060B")]
	public const string TeamPlayerProp = "team";

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xE8C210", Offset = "0xE8C210", VA = "0xE8C210")]
	public void Start()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xE8C644", Offset = "0xE8C644", VA = "0xE8C644")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xE8C6D0", Offset = "0xE8C6D0", VA = "0xE8C6D0")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xE8CB9C", Offset = "0xE8CB9C", VA = "0xE8CB9C")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xE8CBA0", Offset = "0xE8CBA0", VA = "0xE8CBA0")]
	public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xE8CBA4", Offset = "0xE8CBA4", VA = "0xE8CBA4")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xE8CBA8", Offset = "0xE8CBA8", VA = "0xE8CBA8")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xE8C6D4", Offset = "0xE8C6D4", VA = "0xE8C6D4")]
	public void UpdateTeams()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xE8CC70", Offset = "0xE8CC70", VA = "0xE8CC70")]
	public PunTeams()
	{
	}
}
[Token(Token = "0x20000DC")]
public static class TeamExtensions
{
	[Token(Token = "0x6000566")]
	[Address(RVA = "0xE8CBAC", Offset = "0xE8CBAC", VA = "0xE8CBAC")]
	public static PunTeams.Team GetTeam(this PhotonPlayer player)
	{
		return default(PunTeams.Team);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xE8CC78", Offset = "0xE8CC78", VA = "0xE8CC78")]
	public static void SetTeam(this PhotonPlayer player, PunTeams.Team team)
	{
	}
}
[Token(Token = "0x20000DD")]
public class PunTurnManager : PunBehaviour
{
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TurnDuration;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IPunTurnManagerCallbacks TurnManagerListener;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly HashSet<PhotonPlayer> finishedPlayers;

	[Token(Token = "0x4000613")]
	public const byte TurnManagerEventOffset = 0;

	[Token(Token = "0x4000614")]
	public const byte EvMove = 1;

	[Token(Token = "0x4000615")]
	public const byte EvFinalMove = 2;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOverCallProcessed;

	[Token(Token = "0x170000EF")]
	public int Turn
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0xE8CE74", Offset = "0xE8CE74", VA = "0xE8CE74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0xE8D004", Offset = "0xE8D004", VA = "0xE8D004")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public float ElapsedTimeInTurn
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0xE8D224", Offset = "0xE8D224", VA = "0xE8D224")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F1")]
	public float RemainingSecondsInTurn
	{
		[Token(Token = "0x600056B")]
		[Address(RVA = "0xE8D3D8", Offset = "0xE8D3D8", VA = "0xE8D3D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F2")]
	public bool IsCompletedByAll
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0xE8D400", Offset = "0xE8D400", VA = "0xE8D400")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F3")]
	public bool IsFinishedByMe
	{
		[Token(Token = "0x600056D")]
		[Address(RVA = "0xE8D4B8", Offset = "0xE8D4B8", VA = "0xE8D4B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F4")]
	public bool IsOver
	{
		[Token(Token = "0x600056E")]
		[Address(RVA = "0xE8D53C", Offset = "0xE8D53C", VA = "0xE8D53C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xE8D56C", Offset = "0xE8D56C", VA = "0xE8D56C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xE8D610", Offset = "0xE8D610", VA = "0xE8D610")]
	private void Update()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xE8D710", Offset = "0xE8D710", VA = "0xE8D710")]
	public void BeginTurn()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xE8D72C", Offset = "0xE8D72C", VA = "0xE8D72C")]
	public void SendMove(object move, bool finished)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xE8DE98", Offset = "0xE8DE98", VA = "0xE8DE98")]
	public bool GetPlayerFinishedTurn(PhotonPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xE8DB10", Offset = "0xE8DB10", VA = "0xE8DB10")]
	public void OnEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xE8DF04", Offset = "0xE8DF04", VA = "0xE8DF04", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xE8E028", Offset = "0xE8E028", VA = "0xE8E028")]
	public PunTurnManager()
	{
	}
}
[Token(Token = "0x20000DE")]
public interface IPunTurnManagerCallbacks
{
	[Token(Token = "0x6000577")]
	void OnTurnBegins(int turn);

	[Token(Token = "0x6000578")]
	void OnTurnCompleted(int turn);

	[Token(Token = "0x6000579")]
	void OnPlayerMove(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x600057A")]
	void OnPlayerFinished(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x600057B")]
	void OnTurnTimeEnds(int turn);
}
[Token(Token = "0x20000DF")]
public static class TurnExtensions
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TurnPropKey;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string TurnStartPropKey;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string FinishedTurnPropKey;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xE8D0A4", Offset = "0xE8D0A4", VA = "0xE8D0A4")]
	public static void SetTurn(this Room room, int turn, bool setStartTime = false)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xE8CEF8", Offset = "0xE8CEF8", VA = "0xE8CEF8")]
	public static int GetTurn(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xE8D2CC", Offset = "0xE8D2CC", VA = "0xE8D2CC")]
	public static int GetTurnStart(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xE8E0AC", Offset = "0xE8E0AC", VA = "0xE8E0AC")]
	public static int GetFinishedTurn(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xE8D9B0", Offset = "0xE8D9B0", VA = "0xE8D9B0")]
	public static void SetFinishedTurn(this PhotonPlayer player, int turn)
	{
	}
}
[Token(Token = "0x20000E0")]
public class QuitOnEscapeOrBack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000582")]
	[Address(RVA = "0xE8E2C8", Offset = "0xE8E2C8", VA = "0xE8E2C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xE8E2F0", Offset = "0xE8E2F0", VA = "0xE8E2F0")]
	public QuitOnEscapeOrBack()
	{
	}
}
[Token(Token = "0x20000E1")]
public class ShowStatusWhenConnecting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xE8E2F8", Offset = "0xE8E2F8", VA = "0xE8E2F8")]
	private string GetConnectingDots()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xE8E3EC", Offset = "0xE8E3EC", VA = "0xE8E3EC")]
	public ShowStatusWhenConnecting()
	{
	}
}
[Token(Token = "0x20000E2")]
[RequireComponent(typeof(PhotonView))]
public class SmoothSyncMovement : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothingDelay;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xE8E3F4", Offset = "0xE8E3F4", VA = "0xE8E3F4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xE8E5F8", Offset = "0xE8E5F8", VA = "0xE8E5F8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xE8E760", Offset = "0xE8E760", VA = "0xE8E760")]
	public void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xE8E8F8", Offset = "0xE8E8F8", VA = "0xE8E8F8")]
	public SmoothSyncMovement()
	{
	}
}
[Token(Token = "0x20000E3")]
public class SupportLogger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xE8E998", Offset = "0xE8E998", VA = "0xE8E998")]
	public void Start()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xE8EAA8", Offset = "0xE8EAA8", VA = "0xE8EAA8")]
	public SupportLogger()
	{
	}
}
[Token(Token = "0x20000E4")]
public class SupportLogging : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xE8EAB8", Offset = "0xE8EAB8", VA = "0xE8EAB8")]
	public void Start()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xE8EB20", Offset = "0xE8EB20", VA = "0xE8EB20")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xE8EC2C", Offset = "0xE8EC2C", VA = "0xE8EC2C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xE8EC34", Offset = "0xE8EC34", VA = "0xE8EC34")]
	public void LogStats()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xE8ECFC", Offset = "0xE8ECFC", VA = "0xE8ECFC")]
	private void LogBasics()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xE8EF74", Offset = "0xE8EF74", VA = "0xE8EF74")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xE8F028", Offset = "0xE8F028", VA = "0xE8F028")]
	public void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xE8F118", Offset = "0xE8F118", VA = "0xE8F118")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xE8F1F8", Offset = "0xE8F1F8", VA = "0xE8F1F8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xE8F470", Offset = "0xE8F470", VA = "0xE8F470")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xE8F6E8", Offset = "0xE8F6E8", VA = "0xE8F6E8")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xE8F750", Offset = "0xE8F750", VA = "0xE8F750")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xE8F7B8", Offset = "0xE8F7B8", VA = "0xE8F7B8")]
	public SupportLogging()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ChatSettings : ScriptableObject
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AppId;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ChatSettings instance;

	[Token(Token = "0x170000F5")]
	public static ChatSettings Instance
	{
		[Token(Token = "0x6000599")]
		[Address(RVA = "0xE8F7C0", Offset = "0xE8F7C0", VA = "0xE8F7C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xE8F85C", Offset = "0xE8F85C", VA = "0xE8F85C")]
	public static ChatSettings Load()
	{
		return null;
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xE8F98C", Offset = "0xE8F98C", VA = "0xE8F98C")]
	private static ChatSettings Create()
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xE8FA1C", Offset = "0xE8FA1C", VA = "0xE8FA1C")]
	public ChatSettings()
	{
	}
}
[Token(Token = "0x20000E6")]
public class ChannelSelector : UnityEngine.MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xE8FA24", Offset = "0xE8FA24", VA = "0xE8FA24")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xE8FA98", Offset = "0xE8FA98", VA = "0xE8FA98", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xE8FA9C", Offset = "0xE8FA9C", VA = "0xE8FA9C")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20000E7")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xE8FAA4", Offset = "0xE8FAA4", VA = "0xE8FAA4")]
	public void Update()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xE8FB94", Offset = "0xE8FB94", VA = "0xE8FB94")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20000E8")]
public class ChatGui : UnityEngine.MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected internal ChatSettings chatAppSettings;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x170000F6")]
	public string UserName
	{
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xE8FB9C", Offset = "0xE8FB9C", VA = "0xE8FB9C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xE8FBA4", Offset = "0xE8FBA4", VA = "0xE8FBA4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xE8FBAC", Offset = "0xE8FBAC", VA = "0xE8FBAC")]
	public void Start()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xE8FE4C", Offset = "0xE8FE4C", VA = "0xE8FE4C")]
	public void Connect()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xE8FFE4", Offset = "0xE8FFE4", VA = "0xE8FFE4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xE8FFF8", Offset = "0xE8FFF8", VA = "0xE8FFF8")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xE9000C", Offset = "0xE9000C", VA = "0xE9000C")]
	public void Update()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xE900DC", Offset = "0xE900DC", VA = "0xE900DC")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xE90BB4", Offset = "0xE90BB4", VA = "0xE90BB4")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xE90170", Offset = "0xE90170", VA = "0xE90170")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xE90C64", Offset = "0xE90C64", VA = "0xE90C64")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xE90F90", Offset = "0xE90F90", VA = "0xE90F90", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xE91038", Offset = "0xE91038", VA = "0xE91038", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xE91374", Offset = "0xE91374", VA = "0xE91374", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xE91394", Offset = "0xE91394", VA = "0xE91394", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xE91428", Offset = "0xE91428", VA = "0xE91428", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xE915BC", Offset = "0xE915BC", VA = "0xE915BC")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xE9121C", Offset = "0xE9121C", VA = "0xE9121C")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xE9179C", Offset = "0xE9179C", VA = "0xE9179C", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xE91BE0", Offset = "0xE91BE0", VA = "0xE91BE0", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xE91C20", Offset = "0xE91C20", VA = "0xE91C20", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xE91D34", Offset = "0xE91D34", VA = "0xE91D34", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xE92074", Offset = "0xE92074", VA = "0xE92074", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xE92178", Offset = "0xE92178", VA = "0xE92178", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xE9227C", Offset = "0xE9227C", VA = "0xE9227C")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xE90D08", Offset = "0xE90D08", VA = "0xE90D08")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xE92368", Offset = "0xE92368", VA = "0xE92368")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xE923AC", Offset = "0xE923AC", VA = "0xE923AC")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20000E9")]
public class FriendItem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x170000F7")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xE92500", Offset = "0xE92500", VA = "0xE92500")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xE91778", Offset = "0xE91778", VA = "0xE91778")]
		set
		{
		}
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xE92524", Offset = "0xE92524", VA = "0xE92524")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xE91EF4", Offset = "0xE91EF4", VA = "0xE91EF4")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xE92588", Offset = "0xE92588", VA = "0xE92588")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20000EA")]
public class IgnoreUiRaycastWhenInactive : UnityEngine.MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xE92590", Offset = "0xE92590", VA = "0xE92590", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xE925B0", Offset = "0xE925B0", VA = "0xE925B0")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20000EB")]
[RequireComponent(typeof(ChatGui))]
public class NamePickGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400063F")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xE925B8", Offset = "0xE925B8", VA = "0xE925B8")]
	public void Start()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xE92678", Offset = "0xE92678", VA = "0xE92678")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xE926B4", Offset = "0xE926B4", VA = "0xE926B4")]
	public void StartChat()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xE92780", Offset = "0xE92780", VA = "0xE92780")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20000EC")]
public class VRPostReprojection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject busySpinner;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xE92788", Offset = "0xE92788", VA = "0xE92788")]
	public VRPostReprojection()
	{
	}
}
[Serializable]
[Token(Token = "0x20000ED")]
public class MouseLookHelper
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xE92790", Offset = "0xE92790", VA = "0xE92790")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xE927E0", Offset = "0xE927E0", VA = "0xE927E0")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xE92B20", Offset = "0xE92B20", VA = "0xE92B20")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xE92B84", Offset = "0xE92B84", VA = "0xE92B84")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x20000EE")]
public class SoundsForJoinAndLeave : PunBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xE92BB0", Offset = "0xE92BB0", VA = "0xE92BB0", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xE92C98", Offset = "0xE92C98", VA = "0xE92C98", Slot = "48")]
	public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xE92D80", Offset = "0xE92D80", VA = "0xE92D80")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x20000EF")]
[DisallowMultipleComponent]
public class PhotonVoiceHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nextSendTickCount;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xE92D88", Offset = "0xE92D88", VA = "0xE92D88")]
	private static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xE92E7C", Offset = "0xE92E7C", VA = "0xE92E7C")]
	private static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xE92EC4", Offset = "0xE92EC4", VA = "0xE92EC4")]
	private static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xE9319C", Offset = "0xE9319C", VA = "0xE9319C")]
	[RuntimeInitializeOnLoadMethod]
	private static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xE93300", Offset = "0xE93300", VA = "0xE93300")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xE936B0", Offset = "0xE936B0", VA = "0xE936B0")]
	protected void Update()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xE938F8", Offset = "0xE938F8", VA = "0xE938F8")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xE93A00", Offset = "0xE93A00", VA = "0xE93A00")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xE93A48", Offset = "0xE93A48", VA = "0xE93A48")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xE93AC8", Offset = "0xE93AC8", VA = "0xE93AC8")]
	public PhotonVoiceHandler()
	{
	}
}
[Token(Token = "0x20000F0")]
[DisallowMultipleComponent]
public class PhotonVoiceNetwork : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceNetwork _instance;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object instanceLock;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool destroyed;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float BackgroundTimeout;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal UnityVoiceFrontend client;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string unityMicrophoneDevice;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioInEnumerator photonMicEnumerator;

	[Token(Token = "0x170000F8")]
	internal static PhotonVoiceNetwork instance
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xE933DC", Offset = "0xE933DC", VA = "0xE933DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xE93AD0", Offset = "0xE93AD0", VA = "0xE93AD0")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public static Func<PhotonVoiceRecorder, IAudioSource> AudioSourceFactory
	{
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xE94210", Offset = "0xE94210", VA = "0xE94210")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xE94268", Offset = "0xE94268", VA = "0xE94268")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public static UnityVoiceFrontend Client
	{
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xE930DC", Offset = "0xE930DC", VA = "0xE930DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FB")]
	public static VoiceClient VoiceClient
	{
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xE94758", Offset = "0xE94758", VA = "0xE94758")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FC")]
	public static ExitGames.Client.Photon.LoadBalancing.ClientState ClientState
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xE947BC", Offset = "0xE947BC", VA = "0xE947BC")]
		get
		{
			return default(ExitGames.Client.Photon.LoadBalancing.ClientState);
		}
	}

	[Token(Token = "0x170000FD")]
	public static string CurrentRoomName
	{
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xE94820", Offset = "0xE94820", VA = "0xE94820")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FE")]
	public static AudioInEnumerator PhotonMicrophoneEnumerator
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xE948D0", Offset = "0xE948D0", VA = "0xE948D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FF")]
	public static string MicrophoneDevice
	{
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xE9492C", Offset = "0xE9492C", VA = "0xE9492C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xE94988", Offset = "0xE94988", VA = "0xE94988")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public static int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xE94F6C", Offset = "0xE94F6C", VA = "0xE94F6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xE94FC8", Offset = "0xE94FC8", VA = "0xE94FC8")]
		set
		{
		}
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xE93DB0", Offset = "0xE93DB0", VA = "0xE93DB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xE93E94", Offset = "0xE93E94", VA = "0xE93E94")]
	private PhotonVoiceNetwork()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xE94138", Offset = "0xE94138", VA = "0xE94138")]
	[RuntimeInitializeOnLoadMethod]
	public static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xE941BC", Offset = "0xE941BC", VA = "0xE941BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xE942C4", Offset = "0xE942C4", VA = "0xE942C4")]
	public static bool Connect()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xE93138", Offset = "0xE93138", VA = "0xE93138")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xE953B8", Offset = "0xE953B8", VA = "0xE953B8")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xE95448", Offset = "0xE95448", VA = "0xE95448")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xE9544C", Offset = "0xE9544C", VA = "0xE9544C")]
	private void ResetEverything()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xE954DC", Offset = "0xE954DC", VA = "0xE954DC")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xE955A0", Offset = "0xE955A0", VA = "0xE955A0")]
	protected void Update()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xE95AA0", Offset = "0xE95AA0", VA = "0xE95AA0")]
	public void SetMicRecorder()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xE95B80", Offset = "0xE95B80", VA = "0xE95B80")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xE95D90", Offset = "0xE95D90", VA = "0xE95D90")]
	private void OnLeftRoom()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xE95F08", Offset = "0xE95F08", VA = "0xE95F08")]
	private void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xE96080", Offset = "0xE96080", VA = "0xE96080")]
	internal static void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xE96528", Offset = "0xE96528", VA = "0xE96528")]
	internal static void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}
}
[Token(Token = "0x20000F1")]
public class UnityVoiceFrontend : LoadBalancingFrontend
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<KeyValuePair<int, byte>, PhotonVoiceSpeaker> voiceSpeakers;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool reconnect;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float volumeSpeaker;

	[Token(Token = "0x17000101")]
	public Action<int, byte, VoiceInfo> OnRemoteVoiceInfoAction
	{
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xE96B28", Offset = "0xE96B28", VA = "0xE96B28")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xE96B30", Offset = "0xE96B30", VA = "0xE96B30")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public Action<int, byte> OnRemoteVoiceRemoveAction
	{
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xE96B38", Offset = "0xE96B38", VA = "0xE96B38")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xE96B40", Offset = "0xE96B40", VA = "0xE96B40")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public Action<int, byte, float[]> OnAudioFrameAction
	{
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xE96B48", Offset = "0xE96B48", VA = "0xE96B48")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000600")]
		[Address(RVA = "0xE96B50", Offset = "0xE96B50", VA = "0xE96B50")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public new Action<ExitGames.Client.Photon.LoadBalancing.ClientState> OnStateChangeAction
	{
		[Token(Token = "0x6000601")]
		[Address(RVA = "0xE96B58", Offset = "0xE96B58", VA = "0xE96B58")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000602")]
		[Address(RVA = "0xE96B60", Offset = "0xE96B60", VA = "0xE96B60")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public new Action<OperationResponse> OnOpResponseAction
	{
		[Token(Token = "0x6000603")]
		[Address(RVA = "0xE96B68", Offset = "0xE96B68", VA = "0xE96B68")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000604")]
		[Address(RVA = "0xE96B70", Offset = "0xE96B70", VA = "0xE96B70")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xE93F38", Offset = "0xE93F38", VA = "0xE93F38")]
	internal UnityVoiceFrontend(ConnectionProtocol connetProtocol)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xE95D14", Offset = "0xE95D14", VA = "0xE95D14")]
	public void Reconnect()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xE96B78", Offset = "0xE96B78", VA = "0xE96B78", Slot = "14")]
	public override void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xE96CE8", Offset = "0xE96CE8", VA = "0xE96CE8")]
	public void OnOpResponse(OperationResponse resp)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xE96D04", Offset = "0xE96D04", VA = "0xE96D04")]
	private void linkVoice(int playerId, byte voiceId, VoiceInfo voiceInfo, PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xE97138", Offset = "0xE97138", VA = "0xE97138")]
	public void OnRemoteVoiceInfo(int channelId, int playerId, byte voiceId, VoiceInfo voiceInfo, ref RemoteVoiceOptions options)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xE96170", Offset = "0xE96170", VA = "0xE96170")]
	public void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xE975CC", Offset = "0xE975CC", VA = "0xE975CC")]
	public void OnRemoteVoiceRemove(int playerId, byte voiceId)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xE97854", Offset = "0xE97854", VA = "0xE97854")]
	private bool unlinkSpeaker(KeyValuePair<int, byte> key)
	{
		return default(bool);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xE965B8", Offset = "0xE965B8", VA = "0xE965B8")]
	public void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xE97900", Offset = "0xE97900", VA = "0xE97900")]
	public void OnAudioFrame(int playerId, byte voiceId, float[] frame)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xE97B3C", Offset = "0xE97B3C", VA = "0xE97B3C")]
	public void OnStateChange(ExitGames.Client.Photon.LoadBalancing.ClientState state)
	{
	}
}
[Token(Token = "0x20000F3")]
[DisallowMultipleComponent]
[RequireComponent(typeof(PhotonVoiceSpeaker))]
[AddComponentMenu("Photon Voice/Photon Voice Recorder")]
public class PhotonVoiceRecorder : Photon.MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	public enum AudioSource
	{
		[Token(Token = "0x4000672")]
		Microphone,
		[Token(Token = "0x4000673")]
		AudioClip,
		[Token(Token = "0x4000674")]
		Factory
	}

	[Token(Token = "0x20000F5")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x4000676")]
		Settings,
		[Token(Token = "0x4000677")]
		Unity,
		[Token(Token = "0x4000678")]
		Photon
	}

	[Token(Token = "0x20000F6")]
	public enum SampleTypeConv
	{
		[Token(Token = "0x400067A")]
		None,
		[Token(Token = "0x400067B")]
		Short,
		[Token(Token = "0x400067C")]
		ShortAuto
	}

	[Token(Token = "0x20000F7")]
	public class PhotonVoiceCreatedParams
	{
		[Token(Token = "0x17000111")]
		public LocalVoice Voice
		{
			[Token(Token = "0x6000630")]
			[Address(RVA = "0xE99FB4", Offset = "0xE99FB4", VA = "0xE99FB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000631")]
			[Address(RVA = "0xE99FBC", Offset = "0xE99FBC", VA = "0xE99FBC")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public IAudioSource AudioSource
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xE99FC4", Offset = "0xE99FC4", VA = "0xE99FC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000633")]
			[Address(RVA = "0xE99FCC", Offset = "0xE99FCC", VA = "0xE99FCC")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xE9996C", Offset = "0xE9996C", VA = "0xE9996C")]
		public PhotonVoiceCreatedParams()
		{
		}
	}

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocalVoice voice;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string microphoneDevice;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IAudioSource audioSource;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource Source;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SampleTypeConv TypeConvert;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool forceShort;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip AudioClip;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool LoopAudioClip;

	[Token(Token = "0x17000106")]
	protected ILocalVoiceAudio voiceAudio
	{
		[Token(Token = "0x6000614")]
		[Address(RVA = "0xE97E24", Offset = "0xE97E24", VA = "0xE97E24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000107")]
	public AudioUtil.IVoiceDetector VoiceDetector
	{
		[Token(Token = "0x6000615")]
		[Address(RVA = "0xE97E90", Offset = "0xE97E90", VA = "0xE97E90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000108")]
	public string MicrophoneDevice
	{
		[Token(Token = "0x6000616")]
		[Address(RVA = "0xE97F64", Offset = "0xE97F64", VA = "0xE97F64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000617")]
		[Address(RVA = "0xE94E88", Offset = "0xE94E88", VA = "0xE94E88")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x6000618")]
		[Address(RVA = "0xE98488", Offset = "0xE98488", VA = "0xE98488")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000619")]
		[Address(RVA = "0xE952A0", Offset = "0xE952A0", VA = "0xE952A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public byte AudioGroup
	{
		[Token(Token = "0x600061B")]
		[Address(RVA = "0xE95A84", Offset = "0xE95A84", VA = "0xE95A84")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600061C")]
		[Address(RVA = "0xE98C74", Offset = "0xE98C74", VA = "0xE98C74")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public bool IsTransmitting
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0xE95A68", Offset = "0xE95A68", VA = "0xE95A68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010C")]
	public AudioUtil.ILevelMeter LevelMeter
	{
		[Token(Token = "0x600061E")]
		[Address(RVA = "0xE98C90", Offset = "0xE98C90", VA = "0xE98C90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010D")]
	public bool Transmit
	{
		[Token(Token = "0x6000625")]
		[Address(RVA = "0xE99A6C", Offset = "0xE99A6C", VA = "0xE99A6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000626")]
		[Address(RVA = "0xE99A88", Offset = "0xE99A88", VA = "0xE99A88")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public bool Detect
	{
		[Token(Token = "0x6000627")]
		[Address(RVA = "0xE99AA8", Offset = "0xE99AA8", VA = "0xE99AA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000628")]
		[Address(RVA = "0xE99BC4", Offset = "0xE99BC4", VA = "0xE99BC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public bool DebugEchoMode
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0xE98490", Offset = "0xE98490", VA = "0xE98490")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600062A")]
		[Address(RVA = "0xE984AC", Offset = "0xE984AC", VA = "0xE984AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public bool VoiceDetectorCalibrating
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0xE99DC8", Offset = "0xE99DC8", VA = "0xE99DC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xE97F6C", Offset = "0xE97F6C", VA = "0xE97F6C")]
	public void UpdateAudioSource()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xE98D3C", Offset = "0xE98D3C", VA = "0xE98D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xE984CC", Offset = "0xE984CC", VA = "0xE984CC")]
	private LocalVoice createLocalVoiceAudioAndSource()
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xE99090", Offset = "0xE99090", VA = "0xE99090", Slot = "4")]
	protected virtual LocalVoice createLocalVoiceAudio(VoiceInfo voiceInfo, IAudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xE998C0", Offset = "0xE998C0", VA = "0xE998C0", Slot = "5")]
	protected virtual void sendPhotonVoiceCreatedMessage()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xE99974", Offset = "0xE99974", VA = "0xE99974")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xE99A68", Offset = "0xE99A68", VA = "0xE99A68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xE99CEC", Offset = "0xE99CEC", VA = "0xE99CEC")]
	public void VoiceDetectorCalibrate(int durationMs)
	{
	}

	[Token(Token = "0x600062D")]
	private string tostr<T>(T[] x, int lim = 10)
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xE99E74", Offset = "0xE99E74", VA = "0xE99E74")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xE99F3C", Offset = "0xE99F3C", VA = "0xE99F3C")]
	public PhotonVoiceRecorder()
	{
	}
}
[Token(Token = "0x20000FA")]
[DisallowMultipleComponent]
public class PhotonVoiceSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20000FB")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x4000693")]
		Unity,
		[Token(Token = "0x4000694")]
		Photon
	}

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool WorkInOfflineMode;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool AutoConnect;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AutoDisconnect;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool AutoDisconnectNameServer;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool AutoTransmit;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SamplingRate SamplingRate;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OpusCodec.FrameDuration FrameDuration;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Bitrate;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool VoiceDetection;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float VoiceDetectionThreshold;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int PlayDelayMs;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int DebugLostPercent;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool DebugInfo;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool Encrypt;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceSettings instance;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object instanceLock;

	[Token(Token = "0x17000113")]
	public static PhotonVoiceSettings Instance
	{
		[Token(Token = "0x6000639")]
		[Address(RVA = "0xE94C24", Offset = "0xE94C24", VA = "0xE94C24")]
		get
		{
			return null;
		}
		[Token(Token = "0x600063A")]
		[Address(RVA = "0xE9A084", Offset = "0xE9A084", VA = "0xE9A084")]
		private set
		{
		}
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xE9A304", Offset = "0xE9A304", VA = "0xE9A304")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xE9A358", Offset = "0xE9A358", VA = "0xE9A358")]
	public PhotonVoiceSettings()
	{
	}
}
[Token(Token = "0x20000FC")]
[AddComponentMenu("Photon Voice/Photon Voice Speaker")]
[RequireComponent(typeof(AudioSource))]
[DisallowMultipleComponent]
public class PhotonVoiceSpeaker : Photon.MonoBehaviour
{
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IAudioOut player;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool started;

	[Token(Token = "0x17000114")]
	public long LastRecvTime
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0xE9A40C", Offset = "0xE9A40C", VA = "0xE9A40C")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600063F")]
		[Address(RVA = "0xE9A414", Offset = "0xE9A414", VA = "0xE9A414")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0xE9A41C", Offset = "0xE9A41C", VA = "0xE9A41C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000116")]
	public IAudioOut Player
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0xE9A4BC", Offset = "0xE9A4BC", VA = "0xE9A4BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000117")]
	public int CurrentBufferLag
	{
		[Token(Token = "0x6000642")]
		[Address(RVA = "0xE9A4C4", Offset = "0xE9A4C4", VA = "0xE9A4C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000118")]
	public bool IsVoiceLinked
	{
		[Token(Token = "0x6000643")]
		[Address(RVA = "0xE9A568", Offset = "0xE9A568", VA = "0xE9A568")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xE9A588", Offset = "0xE9A588", VA = "0xE9A588")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xE9A66C", Offset = "0xE9A66C", VA = "0xE9A66C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xE9A670", Offset = "0xE9A670", VA = "0xE9A670")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xE97058", Offset = "0xE97058", VA = "0xE97058")]
	internal void OnVoiceLinked(int frequency, int channels, int frameSamplesPerChannel, int playDelayMs)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xE978FC", Offset = "0xE978FC", VA = "0xE978FC")]
	internal void OnVoiceUnlinked()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xE9A770", Offset = "0xE9A770", VA = "0xE9A770")]
	private void Update()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xE9A814", Offset = "0xE9A814", VA = "0xE9A814")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xE9A870", Offset = "0xE9A870", VA = "0xE9A870")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xE9A6C4", Offset = "0xE9A6C4", VA = "0xE9A6C4")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xE97A40", Offset = "0xE97A40", VA = "0xE97A40")]
	internal void OnAudioFrame(float[] frame)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xE9A874", Offset = "0xE9A874", VA = "0xE9A874")]
	public PhotonVoiceSpeaker()
	{
	}
}
[Token(Token = "0x20000FD")]
internal class DelayProcessor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	private abstract class Processor<T> : LocalVoiceFramed<T>.IProcessor, IDisposable
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float factor;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] prevBuf;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBufPosWrite;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBufPosRead;

		[Token(Token = "0x6000651")]
		public Processor(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6000652")]
		protected abstract void mix(float factor, T[] buf, T[] prevBuf, ref int prevBufPosRead);

		[Token(Token = "0x6000653")]
		public T[] Process(T[] buf)
		{
			return null;
		}

		[Token(Token = "0x6000654")]
		public void Dispose()
		{
		}
	}

	[Token(Token = "0x20000FF")]
	private class ProcessorFloat : Processor<float>
	{
		[Token(Token = "0x6000655")]
		[Address(RVA = "0xE9ACBC", Offset = "0xE9ACBC", VA = "0xE9ACBC")]
		public ProcessorFloat(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xE9AD94", Offset = "0xE9AD94", VA = "0xE9AD94", Slot = "6")]
		protected override void mix(float factor, float[] buf, float[] prevBuf, ref int prevBufPosRead)
		{
		}
	}

	[Token(Token = "0x2000100")]
	private class ProcessorShort : Processor<short>
	{
		[Token(Token = "0x6000657")]
		[Address(RVA = "0xE9AD24", Offset = "0xE9AD24", VA = "0xE9AD24")]
		public ProcessorShort(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xE9AE18", Offset = "0xE9AE18", VA = "0xE9AE18", Slot = "6")]
		protected override void mix(float factor, short[] buf, short[] prevBuf, ref int prevBufPosRead)
		{
		}
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xE9A87C", Offset = "0xE9A87C", VA = "0xE9A87C")]
	private void PhotonVoiceCreated(PhotonVoiceRecorder.PhotonVoiceCreatedParams p)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xE9AD8C", Offset = "0xE9AD8C", VA = "0xE9AD8C")]
	public DelayProcessor()
	{
	}
}
[Token(Token = "0x2000101")]
public class Gui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float dataRateNextTime;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int prevInBytes;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int prevOutBytes;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int dataRateIn;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int dataRateOut;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xE9AEC0", Offset = "0xE9AEC0", VA = "0xE9AEC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xE9B128", Offset = "0xE9B128", VA = "0xE9B128")]
	public Gui()
	{
	}
}
[Token(Token = "0x2000103")]
public class HighlightRecorder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonVoiceRecorder recorder;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rendererComp;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xE9B2C8", Offset = "0xE9B2C8", VA = "0xE9B2C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xE9B3D4", Offset = "0xE9B3D4", VA = "0xE9B3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xE9B46C", Offset = "0xE9B46C", VA = "0xE9B46C")]
	public HighlightRecorder()
	{
	}
}
[Token(Token = "0x2000104")]
public class HighlightSpeaker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonVoiceSpeaker speaker;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rendererComp;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xE9B474", Offset = "0xE9B474", VA = "0xE9B474")]
	private void Start()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xE9B580", Offset = "0xE9B580", VA = "0xE9B580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xE9B618", Offset = "0xE9B618", VA = "0xE9B618")]
	public HighlightSpeaker()
	{
	}
}
[Token(Token = "0x2000105")]
public class RejoinScript : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000665")]
	[Address(RVA = "0xE9B620", Offset = "0xE9B620", VA = "0xE9B620")]
	private void OnConnectionFail(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xE9B788", Offset = "0xE9B788", VA = "0xE9B788")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xE9B78C", Offset = "0xE9B78C", VA = "0xE9B78C")]
	public RejoinScript()
	{
	}
}
[Token(Token = "0x2000106")]
internal class ToneAudioReader : IAudioReader<float>, IDataReader<float>, IDisposable, IAudioSource
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private double k;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private long timeSamples;

	[Token(Token = "0x17000119")]
	public int Channels
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xE9B7C8", Offset = "0xE9B7C8", VA = "0xE9B7C8", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011A")]
	public int SamplingRate
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xE9B7C0", Offset = "0xE9B7C0", VA = "0xE9B7C0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xE9B794", Offset = "0xE9B794", VA = "0xE9B794")]
	public ToneAudioReader()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xE9B7D0", Offset = "0xE9B7D0", VA = "0xE9B7D0", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xE9B7D4", Offset = "0xE9B7D4", VA = "0xE9B7D4", Slot = "4")]
	public bool Read(float[] buf)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000107")]
public class ViewDrag : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 hit_position;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 current_position;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 camera_position;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool invert;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool yBecomesZ;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speed;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xE9BA64", Offset = "0xE9BA64", VA = "0xE9BA64")]
	private void Start()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xE9BA68", Offset = "0xE9BA68", VA = "0xE9BA68")]
	private void Update()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xE9BAE8", Offset = "0xE9BAE8", VA = "0xE9BAE8")]
	private void LeftMouseDrag()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xE9BBE0", Offset = "0xE9BBE0", VA = "0xE9BBE0")]
	public ViewDrag()
	{
	}
}
[Token(Token = "0x2000108")]
public class TestShake : PunBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float speed;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float amount;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 shake;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xE9BC78", Offset = "0xE9BC78", VA = "0xE9BC78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xE9BC7C", Offset = "0xE9BC7C", VA = "0xE9BC7C")]
	public TestShake()
	{
	}
}
[Token(Token = "0x2000109")]
public class AI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200010A")]
	[CompilerGenerated]
	private sealed class <SpawnNPC>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AI <>4__this;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0xE9EC60", Offset = "0xE9EC60", VA = "0xE9EC60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0xE9ECA8", Offset = "0xE9ECA8", VA = "0xE9ECA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xE9C41C", Offset = "0xE9C41C", VA = "0xE9C41C")]
		[DebuggerHidden]
		public <SpawnNPC>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xE9E848", Offset = "0xE9E848", VA = "0xE9E848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xE9E84C", Offset = "0xE9E84C", VA = "0xE9E84C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xE9EC68", Offset = "0xE9EC68", VA = "0xE9EC68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010B")]
	[CompilerGenerated]
	private sealed class <StandWatch>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AI <>4__this;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0xE9F2B4", Offset = "0xE9F2B4", VA = "0xE9F2B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0xE9F2FC", Offset = "0xE9F2FC", VA = "0xE9F2FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xE9CB78", Offset = "0xE9CB78", VA = "0xE9CB78")]
		[DebuggerHidden]
		public <StandWatch>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xE9ECB0", Offset = "0xE9ECB0", VA = "0xE9ECB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xE9ECB4", Offset = "0xE9ECB4", VA = "0xE9ECB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xE9F2BC", Offset = "0xE9F2BC", VA = "0xE9F2BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010C")]
	[CompilerGenerated]
	private sealed class <Patrol>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AI <>4__this;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0xEEA654", Offset = "0xEEA654", VA = "0xEEA654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069A")]
			[Address(RVA = "0xEEA69C", Offset = "0xEEA69C", VA = "0xEEA69C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xEE99A8", Offset = "0xEE99A8", VA = "0xEE99A8")]
		[DebuggerHidden]
		public <Patrol>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xEE99D0", Offset = "0xEE99D0", VA = "0xEE99D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xEE99D4", Offset = "0xEE99D4", VA = "0xEE99D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xEEA65C", Offset = "0xEEA65C", VA = "0xEEA65C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010D")]
	[CompilerGenerated]
	private sealed class <Shoot>d__139 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AI <>4__this;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0xEEA94C", Offset = "0xEEA94C", VA = "0xEEA94C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0xEEA994", Offset = "0xEEA994", VA = "0xEEA994", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xEEA6A4", Offset = "0xEEA6A4", VA = "0xEEA6A4")]
		[DebuggerHidden]
		public <Shoot>d__139(int <>1__state)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xEEA6CC", Offset = "0xEEA6CC", VA = "0xEEA6CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xEEA6D0", Offset = "0xEEA6D0", VA = "0xEEA6D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xEEA954", Offset = "0xEEA954", VA = "0xEEA954", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010E")]
	[CompilerGenerated]
	private sealed class <AttackTarget>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AI <>4__this;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0xEEB318", Offset = "0xEEB318", VA = "0xEEB318", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A6")]
			[Address(RVA = "0xEEB360", Offset = "0xEEB360", VA = "0xEEB360", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xEEA99C", Offset = "0xEEA99C", VA = "0xEEA99C")]
		[DebuggerHidden]
		public <AttackTarget>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xEEA9C4", Offset = "0xEEA9C4", VA = "0xEEA9C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xEEA9C8", Offset = "0xEEA9C8", VA = "0xEEA9C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xEEB320", Offset = "0xEEB320", VA = "0xEEB320", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010F")]
	[CompilerGenerated]
	private sealed class <RotateTowards>d__142 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AI <>4__this;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool attacking;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotationSpeed;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float turnTimer;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <turnTime>5__2;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006AA")]
			[Address(RVA = "0xEEB6D4", Offset = "0xEEB6D4", VA = "0xEEB6D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0xEEB71C", Offset = "0xEEB71C", VA = "0xEEB71C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xEEB368", Offset = "0xEEB368", VA = "0xEEB368")]
		[DebuggerHidden]
		public <RotateTowards>d__142(int <>1__state)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xEEB390", Offset = "0xEEB390", VA = "0xEEB390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xEEB394", Offset = "0xEEB394", VA = "0xEEB394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xEEB6DC", Offset = "0xEEB6DC", VA = "0xEEB6DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000110")]
	[CompilerGenerated]
	private sealed class <UpdateModelYaw>d__143 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AI <>4__this;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B0")]
			[Address(RVA = "0xEEB844", Offset = "0xEEB844", VA = "0xEEB844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0xEEB88C", Offset = "0xEEB88C", VA = "0xEEB88C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xEEB724", Offset = "0xEEB724", VA = "0xEEB724")]
		[DebuggerHidden]
		public <UpdateModelYaw>d__143(int <>1__state)
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xEEB74C", Offset = "0xEEB74C", VA = "0xEEB74C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xEEB750", Offset = "0xEEB750", VA = "0xEEB750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xEEB84C", Offset = "0xEEB84C", VA = "0xEEB84C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000111")]
	[CompilerGenerated]
	private sealed class <PlayFootSteps>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AI <>4__this;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B6")]
			[Address(RVA = "0xEEB9C4", Offset = "0xEEB9C4", VA = "0xEEB9C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0xEEBA0C", Offset = "0xEEBA0C", VA = "0xEEBA0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xEEB894", Offset = "0xEEB894", VA = "0xEEB894")]
		[DebuggerHidden]
		public <PlayFootSteps>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xEEB8BC", Offset = "0xEEB8BC", VA = "0xEEB8BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xEEB8C0", Offset = "0xEEB8C0", VA = "0xEEB8C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xEEB9CC", Offset = "0xEEB9CC", VA = "0xEEB9CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool spawned;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject playerObj;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Transform playerTransform;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject NPCMgrObj;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject weaponObj;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public FPSRigidBodyWalker FPSWalker;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public NPCAttack NPCAttackComponent;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public CharacterDamage TargetCharacterDamageComponent;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public CharacterDamage CharacterDamageComponent;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public NPCSpawner NPCSpawnerComponent;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public NPCRegistry NPCRegistryComponent;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public AI TargetAIComponent;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public NavMeshAgent agent;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Collider[] colliders;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool collisionState;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Animation AnimationComponent;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public Animator AnimatorComponent;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float animSpeed;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public bool recycleNpcObjOnDeath;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("The object with the Animation/Animator component which will be accessed by AI.cs to play NPC animations. If none, this root object will be checked for the Animator/Animations component.")]
	public Transform objectWithAnims;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("Chance between 0 and 1 that NPC will spawn. Used to randomize NPC locations and surprise the player.")]
	[Range(0f, 1f)]
	public float randomSpawnChance;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Tooltip("Running speed of the NPC.")]
	public float runSpeed;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("Walking speed of the NPC.")]
	public float walkSpeed;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[Tooltip("Speed of running animation.")]
	public float walkAnimSpeed;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Tooltip("Speed of walking animation.")]
	public float runAnimSpeed;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float speedAmt;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float lastRunTime;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Tooltip("NPC yaw angle offset when standing.")]
	public float idleYaw;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("NPC yaw angle offset when moving.")]
	public float movingYaw;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float yawAmt;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Sets the alignment of this NPC. 1 = friendly to player and hostile to factions 2 and 3, 2 = hostile to player and factions 1 and 3, 3 = hostile to player and factions 1 and 2.")]
	public int factionNum;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[Tooltip("If false, NPC will attack any character that attacks it, regardless of faction.")]
	public bool ignoreFriendlyFire;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	[HideInInspector]
	public bool playerAttacked;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public float attackedTime;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public Transform myTransform;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 upVec;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[Tooltip("True if NPC will hunt player accross map without needing to detect player first.")]
	public bool huntPlayer;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	[Tooltip("True if NPC should only follow patrol waypoints once.")]
	public bool patrolOnce;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
	[Tooltip("True if NPC should walk on patrol, will run on patrol if false.")]
	public bool walkOnPatrol;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform curWayPoint;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Tooltip("Drag the parent waypoint object with the WaypointGroup.cs script attached here. If none, NPC will stand watch instead of patrolling.")]
	public WaypointGroup waypointGroup;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Tooltip("The number of the waypoint in the waypoint group which should be followed first.")]
	public int firstWaypoint;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[Tooltip("True if NPC should stand in one place and not patrol waypoint path.")]
	public bool standWatch;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	[Tooltip("True if NPC is following player.")]
	public bool followPlayer;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
	[Tooltip("True if NPC can be activated with the use button and start following the player.")]
	public bool followOnUse;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x127")]
	[Tooltip("True if this NPC wants player to follow them (wont take move orders from player, only from MoveTrigger.cs).")]
	public bool leadPlayer;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public bool orderedMove;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[HideInInspector]
	public bool playerFollow;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool animInit;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	private bool animInitialized;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float commandedTime;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float talkedTime;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool countBackwards;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Tooltip("Minimum distance to destination waypoint that NPC will consider their destination as reached.")]
	public float pickNextDestDist;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 startPosition;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float spawnTime;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[Tooltip("Volume of NPC's vocal sound effects.")]
	public float vocalVol;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Tooltip("Sound to play when player commands NPC to stop following.")]
	public AudioClip stayFx1;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Tooltip("Sound to play when player commands NPC to stop following.")]
	public AudioClip stayFx2;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[Tooltip("Sound to play when player commands NPC to start following.")]
	public AudioClip followFx1;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Tooltip("Sound to play when player commands NPC to start following.")]
	public AudioClip followFx2;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[Tooltip("Sound to play when player commands NPC to move to position.")]
	public AudioClip moveToFx1;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[Tooltip("Sound to play when player commands NPC to move to position.")]
	public AudioClip moveToFx2;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Tooltip("Sound to play when NPC has been activated more than joke activate times.")]
	public AudioClip jokeFx;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Tooltip("Sound to play when NPC has been activated more than joke activate times.")]
	public AudioClip jokeFx2;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[Tooltip("Number of consecutive use button presses that activates joke fx.")]
	public int jokeActivate;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float jokePlaying;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int jokeCount;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[Tooltip("Sound effects to play when pursuing player.")]
	public AudioClip[] tauntSnds;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Tooltip("True if taunt sound shouldn't be played when attacking.")]
	public bool cancelAttackTaunt;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float lastTauntTime;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[Tooltip("Delay between times to check if taunt sound should be played.")]
	public float tauntDelay;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[Range(0f, 1f)]
	[Tooltip("Chance that a taunt sound will play after taunt delay.")]
	public float tauntChance;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[Tooltip("Volume of taunt sound effects.")]
	public float tauntVol;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[Tooltip("Sound effects to play when NPC discovers player.")]
	public AudioClip[] alertSnds;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[Tooltip("Volume of alert sound effects.")]
	public float alertVol;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool alertTaunt;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[HideInInspector]
	public AudioSource vocalFx;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private AudioSource footstepsFx;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[Tooltip("Sound effects to play for NPC footsteps.")]
	public AudioClip[] footSteps;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[Tooltip("Volume of footstep sound effects.")]
	public float footStepVol;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	[Tooltip("Time between footstep sound effects when walking (sync with anim).")]
	public float walkStepTime;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[Tooltip("Time between footstep sound effects when running (sync with anim).")]
	public float runStepTime;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float stepInterval;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float stepTime;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	[Tooltip("Minimum range to target to start attack.")]
	public float shootRange;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Tooltip("Range that NPC will start chasing target until they are within shoot range.")]
	public float attackRange;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	[Tooltip("Range that NPC will hear player attacks.")]
	public float listenRange;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[Tooltip("Time between shots (longer for burst weapons).")]
	public float shotDuration;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	[Tooltip("Speed of attack animation.")]
	public float shootAnimSpeed;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[HideInInspector]
	public float attackRangeAmt;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	[Tooltip("Percentage to reduce enemy search range if player is crouching.")]
	public float sneakRangeMod;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float shootAngle;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	[Tooltip("Time before atack starts, to allow weapon to be raised before firing.")]
	public float delayShootTime;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[Tooltip("Random delay between NPC attacks.")]
	public float randShotDelay;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	[Tooltip("Height of rayCast origin which detects targets (can be raised if NPC origin is at their feet).")]
	public float eyeHeight;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[Tooltip("Draws spheres in editor for position and eye height.")]
	public bool drawDebugGizmos;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[HideInInspector]
	public Transform target;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[HideInInspector]
	public bool targetVisible;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private float lastVisibleTime;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Vector3 targetPos;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	[HideInInspector]
	public float targetRadius;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[HideInInspector]
	public float attackTime;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private bool attackFinished;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x255")]
	private bool turning;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x256")]
	[HideInInspector]
	public bool cancelRotate;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x257")]
	[HideInInspector]
	public bool followed;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float targetDistance;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private Vector3 targetDirection;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private RaycastHit[] hits;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private bool sightBlocked;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
	[HideInInspector]
	public bool playerIsBehind;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	[HideInInspector]
	public float targetEyeHeight;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private bool pursueTarget;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	[HideInInspector]
	public Vector3 lastVisibleTargetPosition;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[HideInInspector]
	public float timeout;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	[HideInInspector]
	public bool heardPlayer;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28D")]
	[HideInInspector]
	public bool heardTarget;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28E")]
	[HideInInspector]
	public bool damaged;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28F")]
	private bool damagedState;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public float lastDamageTime;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	[HideInInspector]
	public LayerMask searchMask;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public RaycastHit attackHit;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private WaitForSeconds delayShootWaitTime;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private WaitForSeconds waitForAiTime;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private WaitForSeconds waitForInitTime;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private WaitForSeconds waitStepIntervalTime;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int AnimState;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Attack;

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xE9BC8C", Offset = "0xE9BC8C", VA = "0xE9BC8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xE9BEB0", Offset = "0xE9BEB0", VA = "0xE9BEB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xE9C3B4", Offset = "0xE9C3B4", VA = "0xE9C3B4")]
	[IteratorStateMachine(typeof(<SpawnNPC>d__133))]
	public IEnumerator SpawnNPC()
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xE9C444", Offset = "0xE9C444", VA = "0xE9C444")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xE9CAEC", Offset = "0xE9CAEC", VA = "0xE9CAEC")]
	private void InitializeAnim()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xE9CB10", Offset = "0xE9CB10", VA = "0xE9CB10")]
	[IteratorStateMachine(typeof(<StandWatch>d__136))]
	private IEnumerator StandWatch()
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xE9CBA0", Offset = "0xE9CBA0", VA = "0xE9CBA0")]
	[IteratorStateMachine(typeof(<Patrol>d__137))]
	private IEnumerator Patrol()
	{
		return null;
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xE9CC08", Offset = "0xE9CC08", VA = "0xE9CC08")]
	private void CanSeeTarget()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xE9DAAC", Offset = "0xE9DAAC", VA = "0xE9DAAC")]
	[IteratorStateMachine(typeof(<Shoot>d__139))]
	private IEnumerator Shoot()
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xE9DB14", Offset = "0xE9DB14", VA = "0xE9DB14")]
	[IteratorStateMachine(typeof(<AttackTarget>d__140))]
	private IEnumerator AttackTarget()
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xE9DB7C", Offset = "0xE9DB7C", VA = "0xE9DB7C")]
	private void SearchTarget(Vector3 position)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xE9DD1C", Offset = "0xE9DD1C", VA = "0xE9DD1C")]
	[IteratorStateMachine(typeof(<RotateTowards>d__142))]
	public IEnumerator RotateTowards(Vector3 position, float rotationSpeed, float turnTimer, bool attacking = true)
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xE9DDD0", Offset = "0xE9DDD0", VA = "0xE9DDD0")]
	[IteratorStateMachine(typeof(<UpdateModelYaw>d__143))]
	private IEnumerator UpdateModelYaw()
	{
		return null;
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xE9DCB8", Offset = "0xE9DCB8", VA = "0xE9DCB8")]
	private void TravelToPoint(Vector3 position)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xE9DF80", Offset = "0xE9DF80", VA = "0xE9DF80")]
	private Transform PickNextWaypoint(Transform currentWaypoint, int curWaypointNumber)
	{
		return null;
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xE9DE38", Offset = "0xE9DE38", VA = "0xE9DE38")]
	private void SetSpeed(float speed)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xE9E058", Offset = "0xE9E058", VA = "0xE9E058")]
	[IteratorStateMachine(typeof(<PlayFootSteps>d__147))]
	private IEnumerator PlayFootSteps()
	{
		return null;
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xE9E0C0", Offset = "0xE9E0C0", VA = "0xE9E0C0")]
	public void CommandNPC()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xE9E5F0", Offset = "0xE9E5F0", VA = "0xE9E5F0")]
	public void GoToPosition(Vector3 position, bool runToPos)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xE9E610", Offset = "0xE9E610", VA = "0xE9E610")]
	public void ChangeFaction(int factionChange)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xE9E61C", Offset = "0xE9E61C", VA = "0xE9E61C")]
	public AI()
	{
	}
}
[Token(Token = "0x2000112")]
public class CharacterDamage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <ApplyForce>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterDamage <>4__this;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody body;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0xEEDA64", Offset = "0xEEDA64", VA = "0xEEDA64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0xEEDAAC", Offset = "0xEEDAAC", VA = "0xEEDAAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xEED388", Offset = "0xEED388", VA = "0xEED388")]
		[DebuggerHidden]
		public <ApplyForce>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xEED7F8", Offset = "0xEED7F8", VA = "0xEED7F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xEED7FC", Offset = "0xEED7FC", VA = "0xEED7FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xEEDA6C", Offset = "0xEEDA6C", VA = "0xEEDA6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onDie;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AI AIComponent;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RemoveBody RemoveBodyComponent;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Number of hitpoints for this character or body part.")]
	public float hitPoints;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float initialHitPoints;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Force to apply to this collider when NPC is killed.")]
	public float attackForce;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Item to spawn when NPC is killed.")]
	public GameObject gunItem;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Weapon mesh to hide when NPC dies (replaced with usable gun item).")]
	public Transform gunObj;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject gunInst;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Rotation of spawed gun object after NPC death.")]
	public Vector3 gunItemRotation;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody[] bodies;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("True if ragdoll mode is active for this NPC.")]
	public bool ragdollActive;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool ragdollState;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("If NPC only has one capsule collider for hit detection, replace the NPC's character mesh with a ragdoll, instead of transitioning instantly to ragdoll.")]
	public Transform deadReplacement;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform dead;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("Sound effect to play when NPC dies.")]
	public AudioClip dieSound;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Determine if this object or parent should be removed on death. This is to allow for different hit detection collider types as children of NPC parent.")]
	public bool notParent;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[Tooltip("Should this NPC's body be removed after Body Stay Time?")]
	public bool removeBody;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Tooltip("Time for body to stay in the scene before it is removed.")]
	public float bodyStayTime;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Time for dropped weapon item to stay in scene before it is removed.")]
	public float gunStayTime;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[Tooltip("Chance between 0 and 1 that death of this NPC will trigger slow motion for a few seconds (regardless of the body part hit).")]
	[Range(0f, 1f)]
	public float sloMoDeathChance;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("True if backstabbing this NPC should trigger slow motion for the duration of slo mo backstab time.")]
	public bool sloMoBackstab;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[Tooltip("Duration of slow motion time in seconds if slo mo death chance check is successful.")]
	public float sloMoDeathTime;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Duration of slow motion time in seconds if this NPC is backstabbed.")]
	public float sloMoBackstabTime;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 attackerPos2;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 attackDir2;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform myTransform;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool explosionCheck;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private LayerMask raymask;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WaitForSeconds waitApplyForce;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xEEBA14", Offset = "0xEEBA14", VA = "0xEEBA14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xEEBB44", Offset = "0xEEBB44", VA = "0xEEBB44")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xEEBFBC", Offset = "0xEEBFBC", VA = "0xEEBFBC")]
	public void ApplyDamage(float damage, Vector3 attackDir, Vector3 attackerPos, Transform attacker, bool isPlayer, bool isExplosion, [Optional] Rigidbody hitBody, float bodyForce = 0f)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xEECBE4", Offset = "0xEECBE4", VA = "0xEECBE4")]
	private void RagDollDie(Rigidbody hitBody, float bodyForce)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xEED314", Offset = "0xEED314", VA = "0xEED314")]
	[IteratorStateMachine(typeof(<ApplyForce>d__34))]
	public IEnumerator ApplyForce(Rigidbody body, float force)
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xEEC35C", Offset = "0xEEC35C", VA = "0xEEC35C")]
	private void Die()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xEED3B0", Offset = "0xEED3B0", VA = "0xEED3B0")]
	private static void CopyTransformsRecurse(Transform src, Transform dst)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xEED730", Offset = "0xEED730", VA = "0xEED730")]
	public CharacterDamage()
	{
	}
}
[Token(Token = "0x2000114")]
public class LocationDamage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Set to Ai.cs component in main NPC object (drag main object from hierachry window into this field).")]
	public AI AIComponent;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Amount to increase or decrease base damage of weapon hit on this collider (increase for head shots, decrease for limb hits).")]
	public float damageMultiplier;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Amount of physics force to apply with weapon hit on this collider.")]
	public float damageForce;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Sound effect to use for a hit on this collider (doesn't have to be a head shot).")]
	public AudioClip headShot;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool headShotState;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	[Tooltip("Chance between 0 and 1 that killing an NPC with a shot to this collider will trigger slow motion for a few seconds.")]
	public float sloMoKillChance;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Duration of slow motion time in seconds if slo mo kill chance check is successful.")]
	public float sloMoTime;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform myTransform;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody thisRigidBody;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xEEDAB4", Offset = "0xEEDAB4", VA = "0xEEDAB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xEEDB1C", Offset = "0xEEDB1C", VA = "0xEEDB1C")]
	public void ApplyDamage(float damage, Vector3 attackDir, Vector3 attackerPos, Transform attacker, bool isPlayer, bool isExplosion)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xEEDE78", Offset = "0xEEDE78", VA = "0xEEDE78")]
	private void OnCollisionEnter(Collision hit)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xEEDF98", Offset = "0xEEDF98", VA = "0xEEDF98")]
	public LocationDamage()
	{
	}
}
[Token(Token = "0x2000115")]
public class MonsterItemTrap : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("NPC objects to deactivate on level load and activate when player picks up this item.")]
	public GameObject[] npcsToTrigger;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xEEDFB8", Offset = "0xEEDFB8", VA = "0xEEDFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xEEE084", Offset = "0xEEE084", VA = "0xEEE084")]
	private void ActivateObject()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xEEE150", Offset = "0xEEE150", VA = "0xEEE150")]
	public MonsterItemTrap()
	{
	}
}
[Token(Token = "0x2000116")]
public class MonsterTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("NPC objects to deactivate on level load and activate when player walks into trigger.")]
	public GameObject[] npcsToTrigger;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xEEE158", Offset = "0xEEE158", VA = "0xEEE158")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xEEE224", Offset = "0xEEE224", VA = "0xEEE224")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xEEE37C", Offset = "0xEEE37C", VA = "0xEEE37C")]
	public MonsterTrigger()
	{
	}
}
[Token(Token = "0x2000117")]
public class MoveTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The NPC to move when the Player enters this trigger.")]
	public AI npcToMove;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The position to move the NPC to.")]
	public Transform movePosition;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("True if NPC should run to the move position, false if they should walk.")]
	public bool runToGoal;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool moved;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool rotated;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The next MoveTrigger.cs component to activate after this one.")]
	public MoveTrigger nextMoveTrigger;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("True if this trigger should be active at scene start, instead of waiting to be activated by other MoveTrigger.cs components when NPC reaches goal.")]
	public bool isStartingTrigger;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Sound effects to play when NPC starts traveling to move position (following vocals).")]
	public AudioClip[] followSnds;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Volume of follow sound effects.")]
	public float followVol;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xEEE384", Offset = "0xEEE384", VA = "0xEEE384")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xEEE420", Offset = "0xEEE420", VA = "0xEEE420")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xEEE678", Offset = "0xEEE678", VA = "0xEEE678")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xEEE7D8", Offset = "0xEEE7D8", VA = "0xEEE7D8")]
	public MoveTrigger()
	{
	}
}
[Token(Token = "0x2000118")]
public class NPCAttack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AI AIComponent;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WeaponEffects WeaponEffectsComponent;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FPSRigidBodyWalker FPSWalker;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject playerObj;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetPos;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Maximum range of NPC attack.")]
	public float range;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Random range in units around target that NPC attack will hit (so NPCs won't have perfect aim).")]
	public float inaccuracy;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("Fire rate of NPC attack.")]
	public float fireRate;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Number of attacks to fire in quick succession during NPC attack (for automatic weapons).")]
	public int burstShots;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("Maximum number of random shots to add to end of attack (so automatic weapons will fire different number of bullets per attack).")]
	public int randomShots;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Physics force to apply to collider hit by NPC attack.")]
	public float force;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Damage to inflict per NPC attack.")]
	public float damage;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("True if this is a melee attack (so actions like blocking can identify attack type).")]
	public bool isMeleeAttack;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float damageAmt;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool doneShooting;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int shotsFired;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool randBurstState;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int randShotsAmt;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool shooting;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool reloading;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool mFlashState;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 rayOrigin;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 targetDir;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RaycastHit[] hits;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool hitObject;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Tooltip("Muzzle flash object to display during NPC attacks.")]
	public Renderer muzzleFlash;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform muzzleFlashTransform;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("Sound effect for NPC attack.")]
	public AudioClip firesnd;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("Random pitch chosen between this value and 1.0 for NPC attack sound variety.")]
	public float fireFxRandPitch;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSource aSource;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float shootStartTime;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xEEE7EC", Offset = "0xEEE7EC", VA = "0xEEE7EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xEEE98C", Offset = "0xEEE98C", VA = "0xEEE98C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xEEEB2C", Offset = "0xEEEB2C", VA = "0xEEEB2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xEEA8D0", Offset = "0xEEA8D0", VA = "0xEEA8D0")]
	public void Fire()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xEEEC08", Offset = "0xEEEC08", VA = "0xEEEC08")]
	private void FireOneShot()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xEF0108", Offset = "0xEF0108", VA = "0xEF0108")]
	public NPCAttack()
	{
	}
}
[Token(Token = "0x2000119")]
public class NPCRegistry : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FPSRigidBodyWalker FPSWalker;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("List containing references to all NPCs' AI.cs components, for use in other scripts (populated automatically at runtime).")]
	public List<AI> Npcs;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject playerObj;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform playerTransform;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float nearestNpcDist;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float NpcDist;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float playerDist;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float playerDistMod;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit hit;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xEF0148", Offset = "0xEF0148", VA = "0xEF0148")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xEED0A4", Offset = "0xEED0A4", VA = "0xEED0A4")]
	public void UnregisterNPC(AI NpcAI)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xEF0228", Offset = "0xEF0228", VA = "0xEF0228")]
	public void MoveFolowingNpcs(Vector3 position)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xEEA220", Offset = "0xEEA220", VA = "0xEEA220")]
	public void FindClosestTarget(GameObject NPC, AI NpcAIcomponent, Vector3 myPos, float distance, int myFaction)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xEF0588", Offset = "0xEF0588", VA = "0xEF0588")]
	public NPCRegistry()
	{
	}
}
[Token(Token = "0x200011A")]
public class NPCSpawner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Set to the wave manager object if this spawner should be controled by the wave manager")]
	public WaveManager WaveManager;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If not linked to a wave manager to spawn NPC waves, this is the NPC prefab that will be spawned")]
	public GameObject NPCPrefab;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Delay until spawning next NPC from this spawner.")]
	public float spawnDelay;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float spawnTime;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject NPCInstance;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AI> Npcs;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeLeft;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The waypoint group that this NPC should patrol after spawning.")]
	public WaypointGroup waypointGroup;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("The number of the waypoint in the waypoint group that should be traveled to first.")]
	public int firstWaypoint;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AI AIcomponent;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("True if spawner should continuously spawn NPCs.")]
	public bool unlimitedSpawning;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[Tooltip("True if this NPC should hunt the player across the map")]
	public bool huntPlayer;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Maximuim number of NPCs from this spawner that can be active in the scene at a time.")]
	public int maxActiveNpcs;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("The number of NPCs to spawn if not spawning unlimited NPCs.")]
	public int NpcsToSpawn;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public int spawnedNpcAmt;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool pauseSpawning;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xEF0604", Offset = "0xEF0604", VA = "0xEF0604")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xEF0610", Offset = "0xEF0610", VA = "0xEF0610")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xEF06B8", Offset = "0xEF06B8", VA = "0xEF06B8")]
	private void Spawn(GameObject NpcPrefab)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xEED1A0", Offset = "0xEED1A0", VA = "0xEED1A0")]
	public void UnregisterSpawnedNPC(AI NpcAI)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xEF09F8", Offset = "0xEF09F8", VA = "0xEF09F8")]
	public NPCSpawner()
	{
	}
}
[Token(Token = "0x200011B")]
public class RemoveBody : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float startTime;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float bodyStayTime;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Weapon item pickup that should be spawned after NPC dies (used for single capsule collider NPCs which instantiate ragdoll on death).")]
	public GameObject GunPickup;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xEF0A94", Offset = "0xEF0A94", VA = "0xEF0A94")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xEF0AB0", Offset = "0xEF0AB0", VA = "0xEF0AB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xEF0C98", Offset = "0xEF0C98", VA = "0xEF0C98")]
	public RemoveBody()
	{
	}
}
[Serializable]
[Token(Token = "0x200011C")]
public class MultiDimensionalInt
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Total number of NPCs to spawn for this wave.")]
	public int[] NpcCounts;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Maximum number of NPCs from the spawner that can be active in the scene at once.")]
	public int[] NpcLoads;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Delay between spawning of NPCs for this wave.")]
	public float[] NpcDelay;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The NPC Prefabs that will be spawned for this wave.")]
	public GameObject[] NpcTypes;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xEF0CA8", Offset = "0xEF0CA8", VA = "0xEF0CA8")]
	public MultiDimensionalInt()
	{
	}
}
[Token(Token = "0x200011D")]
public class WaveManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200011E")]
	[CompilerGenerated]
	private sealed class <StartWave>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveManager <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0xEF16A8", Offset = "0xEF16A8", VA = "0xEF16A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0xEF16F0", Offset = "0xEF16F0", VA = "0xEF16F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xEF0F2C", Offset = "0xEF0F2C", VA = "0xEF0F2C")]
		[DebuggerHidden]
		public <StartWave>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xEF106C", Offset = "0xEF106C", VA = "0xEF106C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xEF1070", Offset = "0xEF1070", VA = "0xEF1070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xEF16B0", Offset = "0xEF16B0", VA = "0xEF16B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011F")]
	[CompilerGenerated]
	private sealed class <FadeWarmupText>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveManager <>4__this;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0xEF1874", Offset = "0xEF1874", VA = "0xEF1874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0xEF18BC", Offset = "0xEF18BC", VA = "0xEF18BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xEF0FBC", Offset = "0xEF0FBC", VA = "0xEF0FBC")]
		[DebuggerHidden]
		public <FadeWarmupText>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xEF16F8", Offset = "0xEF16F8", VA = "0xEF16F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xEF16FC", Offset = "0xEF16FC", VA = "0xEF16FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xEF187C", Offset = "0xEF187C", VA = "0xEF187C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The NPC Spawner objects that the Wave Manager will spawn NPC's from. The Waves list parameters correspond the order of these spawners from top to bottom.")]
	public List<NPCSpawner> NpcSpawners;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This list contains information for NPC wave spawning. The array sizes and order correspond with the Npc Spawners list. The Waves list can be expanded to add new waves of varying combinations of NPCs and parameters.")]
	public MultiDimensionalInt[] waves;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Time before wave begins.")]
	public float warmupTime;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float countDown;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public int NpcsToSpawn;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public int killedNpcs;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public int waveNumber;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Sound FX played when wave starts.")]
	public AudioClip waveStartFx;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Sound FX played when wave ends.")]
	public AudioClip waveEndFx;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource asource;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool fxPlayed;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool fxPlayed2;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool lastWave;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public WaveText WaveText;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public WaveText WaveTextShadow;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public WarmupText WarmupText;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public WarmupText WarmupTextShadow;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color tempColor;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color tempColor2;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Text WarmupUIText1;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Text WarmupUIText2;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 warmupTextPos1Orig;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector2 warmupTextPos2Orig;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector2 warmupTextPos1;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector2 warmupTextPos2;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xEF0CB0", Offset = "0xEF0CB0", VA = "0xEF0CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xEF0EF0", Offset = "0xEF0EF0", VA = "0xEF0EF0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xEF0990", Offset = "0xEF0990", VA = "0xEF0990")]
	[IteratorStateMachine(typeof(<StartWave>d__29))]
	public IEnumerator StartWave()
	{
		return null;
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xEF0F54", Offset = "0xEF0F54", VA = "0xEF0F54")]
	[IteratorStateMachine(typeof(<FadeWarmupText>d__30))]
	private IEnumerator FadeWarmupText()
	{
		return null;
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xEF0FE4", Offset = "0xEF0FE4", VA = "0xEF0FE4")]
	public WaveManager()
	{
	}
}
[Token(Token = "0x2000120")]
public class WaypointGroup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("True if waypoints in this group and lines between them should be drawn in editor.")]
	public bool drawWaypoints;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<Transform> wayPoints;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform myTransform;

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xEF18C4", Offset = "0xEF18C4", VA = "0xEF18C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xEF19F4", Offset = "0xEF19F4", VA = "0xEF19F4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xEF1DA0", Offset = "0xEF1DA0", VA = "0xEF1DA0")]
	public WaypointGroup()
	{
	}
}
[Token(Token = "0x2000121")]
public class CamAndWeapAnims : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 camPosAnim;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 camAngleAnim;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 weapPosAnim;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 weapAngleAnim;

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xEF1E24", Offset = "0xEF1E24", VA = "0xEF1E24")]
	public CamAndWeapAnims()
	{
	}
}
[Token(Token = "0x2000122")]
public class CameraControl : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerObj;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody playerRigidBody;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject weaponObj;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Ironsights IronsightsComponent;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SmoothMouseLook MouseLookComponent;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WorldRecenter WorldRecenterComponent;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InputControl InputComponent;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GunSway GunSwayComponent;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CamAndWeapAnims CamAndWeapAnimsComponent;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animation AnimationComponent;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator AnimatorComponent;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WeaponBehavior CurrentWeaponBehaviorComponent;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject PlayerCharacterObj;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PlayerCharacter PlayerCharacterComponent;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool constantLooking;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 CameraAnglesAnim;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 bobAngles;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion tempCamAngles;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float deltaAmt;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float returnSpeedAmt;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool landState;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float landStartTime;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float landTime;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float landAmt;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float landValue;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float gunDown;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float dampOriginX;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float dampOriginY;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[Tooltip("True if third person mode is allowed.")]
	public bool allowThirdPerson;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	[Tooltip("True if first person mode is allowed.")]
	public bool allowFirstPerson;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
	[Tooltip("True third person mode is active, otherwise, first person mode is active.")]
	public bool thirdPersonActive;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 dampVel;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[Tooltip("Speed to smooth the camera angles in third person mode.")]
	public float camSmoothSpeed;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float lerpSpeedAmt;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Transform playerObjTransform;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform mainCameraTransform;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float movingTime;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Vector3 targetPos;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 targetPos2;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Vector3 camPos;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 tempLerpPos;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float rollAmt;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float lookRollAmt;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[Tooltip("Horizontal input speed for rotating the camera in third person mode.")]
	public float horizontalRotateSpeed;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Tooltip("Vertical input speed for rotating the camera in third person mode.")]
	public float verticalRotateSpeed;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[Tooltip("Amount to offset the camera from the player in third person mode (horizontal, vertical).")]
	public Vector2 offset;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector2 offsetAmt;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[Tooltip("Minumum allowed distance to zoom the camera in third person mode.")]
	public float minZoom;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Tooltip("Maximum allowed distance to zoom the camera in third person mode.")]
	public float maxZoom;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float vertical;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float horizontal;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[Tooltip("Minumum allowed vertical camera angle in third person mode.")]
	public float verticalMin;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[Tooltip("Maximum allowed vertical camera angle in third person mode.")]
	public float verticalMax;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool angleState;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
	private bool tpState;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float tpPressTime;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool tpPressState;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	public bool rotating;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	private bool idleRotating;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19F")]
	private bool rotated;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float zoomDistance;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float previousZoomDist;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool zoomState;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[Tooltip("Radius of sphere collider for detecting collisions with camera in third person mode.")]
	public float sphereSizeTpCol;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[Tooltip("Distance behind camera to check for obstacles in third person mode (for fine tuning to preventing clipping into scene geometry).")]
	public float rayTestPadding;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float smoothedDistance;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float targetDistance;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float currentDistance;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private RaycastHit hit;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Vector3 direction;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Quaternion camRotation;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool tpSwitching;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	private bool tpScopeState;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	[Tooltip("Height to zoom to and from in transition to third person mode.")]
	public float fpZoomHeadHeight;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[Tooltip("Distance to zoom to and from in transition to third person mode.")]
	public float tpModeSwitchZoomDist;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float distanceVelocity;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float dampVelocity;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float dampOrg;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float stancePos;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float stancePosAmt;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public bool viewUnderwater;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	[Tooltip("Layers that the camera will collide with in third person mode.")]
	public LayerMask clipMask;

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xEF1E2C", Offset = "0xEF1E2C", VA = "0xEF1E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xEF211C", Offset = "0xEF211C", VA = "0xEF211C")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xEF219C", Offset = "0xEF219C", VA = "0xEF219C")]
	private float AdjustLineOfSight(Vector3 target, Vector3 direction)
	{
		return default(float);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xEF2314", Offset = "0xEF2314", VA = "0xEF2314")]
	public CameraControl()
	{
	}
}
[Token(Token = "0x2000123")]
public class DragRigidbody : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ironsights IronsightsComponent;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputControl InputComponent;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float spring;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float damper;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float drag;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float angularDrag;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float distance;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Max distance to drag objects.")]
	public float reachDistance;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float reachDistanceAmt;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("Physics force to apply to thrown objects.")]
	public float throwForce;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool attachToCenterOfMass;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpringJoint springJoint;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float oldDrag;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float oldAngularDrag;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool dragState;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 dragDirRayCast;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 dragDirRay;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Tooltip("If true, dragged object will be dropped if it contacts player object to prevent pushing or lifting player.")]
	public bool dropOnPlayerCollision;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Only check these layers for draggable objects.")]
	public LayerMask layersToDrag;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform mainCamTransform;

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xEF2450", Offset = "0xEF2450", VA = "0xEF2450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xEF2584", Offset = "0xEF2584", VA = "0xEF2584")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xEF26C0", Offset = "0xEF26C0", VA = "0xEF26C0")]
	private void DropObject()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xEF274C", Offset = "0xEF274C", VA = "0xEF274C")]
	public DragRigidbody()
	{
	}
}
[Token(Token = "0x2000124")]
public class MovePlayerAndCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Position and angles of main camera will be set to this one's when toggling main camera.")]
	public GameObject CinemaCameraObj;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Position that player will be teleported to.")]
	public Transform movePos;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Pitch to set camera to after moving player.")]
	public float moveCamPitch;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Yaw to set camera to after moving player.")]
	public float moveCamYaw;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool toggleState;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool toggleGuiState;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool noCrosshair;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject FPSWeaponsObj;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject FPSPlayerObj;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public GameObject FPSCameraObj;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject MainCameraObj;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public GameObject PlayerCharacterObj;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public PlayerCharacter PlayerCharacterComponent;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CameraControl CameraControlComponent;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SmoothMouseLook MouseLookComponent;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Ironsights IronsightsComponent;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool playerModelToggleState;

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xEF2790", Offset = "0xEF2790", VA = "0xEF2790")]
	public MovePlayerAndCamera()
	{
	}
}
[Token(Token = "0x2000125")]
public class PlayAtPosLimiter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TempAudioTimer> sources;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(2f, 8f)]
	public int maxAudioSources;

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xEF2798", Offset = "0xEF2798", VA = "0xEF2798")]
	public void PlayClipAt(AudioClip clip, Vector3 pos, float vol, float blend = 1f, float pitch = 1f, float minDist = 1f, float maxDist = 250f, [Optional] double? scheduledAt, bool picoSpatial = false)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xEF27B0", Offset = "0xEF27B0", VA = "0xEF27B0")]
	public void SetSource(TempAudioTimer source)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xEF2970", Offset = "0xEF2970", VA = "0xEF2970")]
	public PlayAtPosLimiter()
	{
	}
}
[Token(Token = "0x2000126")]
public static class PlayAudioAtPos
{
	[Token(Token = "0x600070A")]
	[Address(RVA = "0xEECE5C", Offset = "0xEECE5C", VA = "0xEECE5C")]
	public static AudioSource PlayClipAt(AudioClip clip, Vector3 pos, float vol, float blend = 1f, float pitch = 1f, float minDist = 1f, float maxDist = 250f, [Optional] double? scheduledAt, bool picoSpatial = false, [Optional] PlayAtPosLimiter limiter)
	{
		return null;
	}
}
[Token(Token = "0x2000127")]
public class SmoothMouseLook : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputControl InputComponent;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject playerObj;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Mouse look sensitivity/camera move speed.")]
	public float sensitivity;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float sensitivityAmt;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float minimumX;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maximumX;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Minumum pitch of camera for mouselook.")]
	public float minimumY;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Maximum pitch of camera for mouselook.")]
	public float maximumY;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public float rotationX;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public float rotationY;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Quaternion xQuaternion;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Quaternion yQuaternion;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public float inputY;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float horizontalDelta;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Smooth speed of camera angles for mouse look.")]
	public float smoothSpeed;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public float playerMovedTime;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Quaternion originalRotation;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Transform myTransform;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public float recoilX;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public float recoilY;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public bool dzAiming;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[Tooltip("Reverse vertical input for mouselook.")]
	public bool invertVerticalLook;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	[HideInInspector]
	public bool thirdPerson;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	[HideInInspector]
	public bool tpIdleCamRotate;

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xEF2AC4", Offset = "0xEF2AC4", VA = "0xEF2AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xEF2CCC", Offset = "0xEF2CCC", VA = "0xEF2CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xEF341C", Offset = "0xEF341C", VA = "0xEF341C")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xEF349C", Offset = "0xEF349C", VA = "0xEF349C")]
	public SmoothMouseLook()
	{
	}
}
[Token(Token = "0x2000128")]
public class TempAudioTimer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000129")]
	[CompilerGenerated]
	private sealed class <PlayAudio>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double? scheduledAt;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TempAudioTimer <>4__this;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0xEF36BC", Offset = "0xEF36BC", VA = "0xEF36BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071C")]
			[Address(RVA = "0xEF3704", Offset = "0xEF3704", VA = "0xEF3704", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xEF35A0", Offset = "0xEF35A0", VA = "0xEF35A0")]
		[DebuggerHidden]
		public <PlayAudio>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xEF35F8", Offset = "0xEF35F8", VA = "0xEF35F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xEF35FC", Offset = "0xEF35FC", VA = "0xEF35FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xEF36C4", Offset = "0xEF36C4", VA = "0xEF36C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012A")]
	[CompilerGenerated]
	private sealed class <DeactivateTimer>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TempAudioTimer <>4__this;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xEF37DC", Offset = "0xEF37DC", VA = "0xEF37DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xEF3824", Offset = "0xEF3824", VA = "0xEF3824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xEF35C8", Offset = "0xEF35C8", VA = "0xEF35C8")]
		[DebuggerHidden]
		public <DeactivateTimer>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xEF370C", Offset = "0xEF370C", VA = "0xEF370C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xEF3710", Offset = "0xEF3710", VA = "0xEF3710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xEF37E4", Offset = "0xEF37E4", VA = "0xEF37E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource aSource;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject obj;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayAtPosLimiter limiter;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xEF34C8", Offset = "0xEF34C8", VA = "0xEF34C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xEF34F4", Offset = "0xEF34F4", VA = "0xEF34F4")]
	public void OnAttachSource()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xEF34F8", Offset = "0xEF34F8", VA = "0xEF34F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xEF3524", Offset = "0xEF3524", VA = "0xEF3524")]
	[IteratorStateMachine(typeof(<PlayAudio>d__6))]
	public IEnumerator PlayAudio(double? scheduledAt)
	{
		return null;
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xEF2A5C", Offset = "0xEF2A5C", VA = "0xEF2A5C")]
	[IteratorStateMachine(typeof(<DeactivateTimer>d__7))]
	public IEnumerator DeactivateTimer()
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xEF29F4", Offset = "0xEF29F4", VA = "0xEF29F4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xEF2934", Offset = "0xEF2934", VA = "0xEF2934")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xEF35F0", Offset = "0xEF35F0", VA = "0xEF35F0")]
	public TempAudioTimer()
	{
	}
}
[Token(Token = "0x200012B")]
public class FadeOutDecals : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float startTime;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("How long should this mark stay in the scene before fading.")]
	public int markDuration;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer RendererComponent;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Color tempColor;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject parentObj;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform parentObjTransform;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Transform myTransform;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xEF382C", Offset = "0xEF382C", VA = "0xEF382C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xEF38C4", Offset = "0xEF38C4", VA = "0xEF38C4")]
	public void InitializeDecal()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xEF393C", Offset = "0xEF393C", VA = "0xEF393C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xEF3A64", Offset = "0xEF3A64", VA = "0xEF3A64")]
	public FadeOutDecals()
	{
	}
}
[Token(Token = "0x200012C")]
public class LevelLoadFade : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200012D")]
	[CompilerGenerated]
	private sealed class <DoFadeIn>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0xEF3BAC", Offset = "0xEF3BAC", VA = "0xEF3BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0xEF3BF4", Offset = "0xEF3BF4", VA = "0xEF3BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xEF3AD8", Offset = "0xEF3AD8", VA = "0xEF3AD8")]
		[DebuggerHidden]
		public <DoFadeIn>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xEF3B90", Offset = "0xEF3B90", VA = "0xEF3B90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xEF3B94", Offset = "0xEF3B94", VA = "0xEF3B94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xEF3BB4", Offset = "0xEF3BB4", VA = "0xEF3BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012E")]
	[CompilerGenerated]
	private sealed class <DoFadeOut>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0xEF3C18", Offset = "0xEF3C18", VA = "0xEF3C18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0xEF3C60", Offset = "0xEF3C60", VA = "0xEF3C60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xEF3B60", Offset = "0xEF3B60", VA = "0xEF3B60")]
		[DebuggerHidden]
		public <DoFadeOut>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xEF3BFC", Offset = "0xEF3BFC", VA = "0xEF3BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xEF3C00", Offset = "0xEF3C00", VA = "0xEF3C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xEF3C20", Offset = "0xEF3C20", VA = "0xEF3C20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public GameObject LevelLoadFadeobj;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Image fadeImage;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xEF3A74", Offset = "0xEF3A74", VA = "0xEF3A74")]
	public void FadeAndLoadLevel(Color color, float fadeLength, bool fadeIn)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xEF3A78", Offset = "0xEF3A78", VA = "0xEF3A78")]
	[IteratorStateMachine(typeof(<DoFadeIn>d__3))]
	private IEnumerator DoFadeIn(float fadeLength)
	{
		return null;
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xEF3B00", Offset = "0xEF3B00", VA = "0xEF3B00")]
	[IteratorStateMachine(typeof(<DoFadeOut>d__4))]
	private IEnumerator DoFadeOut(float fadeLength)
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xEF3B88", Offset = "0xEF3B88", VA = "0xEF3B88")]
	public LevelLoadFade()
	{
	}
}
[Token(Token = "0x200012F")]
public class PainFade : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000130")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PainFade <>4__this;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeLength;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <tempColor>5__2;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <time>5__3;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073D")]
			[Address(RVA = "0xEF3ED8", Offset = "0xEF3ED8", VA = "0xEF3ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073F")]
			[Address(RVA = "0xEF3F20", Offset = "0xEF3F20", VA = "0xEF3F20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xEF3D58", Offset = "0xEF3D58", VA = "0xEF3D58")]
		[DebuggerHidden]
		public <FadeIn>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xEF3D88", Offset = "0xEF3D88", VA = "0xEF3D88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xEF3D8C", Offset = "0xEF3D8C", VA = "0xEF3D8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xEF3EE0", Offset = "0xEF3EE0", VA = "0xEF3EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Image painImageComponent;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xEF3C68", Offset = "0xEF3C68", VA = "0xEF3C68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xEF3CB8", Offset = "0xEF3CB8", VA = "0xEF3CB8")]
	[IteratorStateMachine(typeof(<FadeIn>d__2))]
	public IEnumerator FadeIn(Color color, float fadeLength)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xEF3D80", Offset = "0xEF3D80", VA = "0xEF3D80")]
	public PainFade()
	{
	}
}
[Token(Token = "0x2000131")]
public class WeaponEffects : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000132")]
	public enum ExplosionSize
	{
		[Token(Token = "0x40008D9")]
		Small,
		[Token(Token = "0x40008DA")]
		Medium,
		[Token(Token = "0x40008DB")]
		Large
	}

	[Serializable]
	[Token(Token = "0x2000133")]
	private class ImpEff
	{
		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform wrap;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem[] particles;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] sounds;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip[] meleeSounds;

		[Token(Token = "0x1700013B")]
		public AudioClip sound
		{
			[Token(Token = "0x600074D")]
			[Address(RVA = "0xEF46A4", Offset = "0xEF46A4", VA = "0xEF46A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		public AudioClip meleeSound
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0xEF47EC", Offset = "0xEF47EC", VA = "0xEF47EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xEF5284", Offset = "0xEF5284", VA = "0xEF5284")]
		public ImpEff()
		{
		}
	}

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject weaponObj;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Particle effect to use for explosions.")]
	public GameObject explosion;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Only enabled if the explosion happens near objects/walls/floors.")]
	public GameObject explosionDebris;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject explosionObj;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Particle effect to use for water splashes.")]
	public GameObject waterSplash;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Particles emitted around player treading water.")]
	public ParticleSystem rippleEffect;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Particles emitted underwater for ambient bubbles/particles.")]
	public ParticleSystem bubblesEffect;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Particles to emit when player is swimming on water surface.")]
	public ParticleSystem splashTrail;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int impactObjID;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject impactObj;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Particle effect to use for NPC tracers.")]
	public ParticleSystem npcTracerParticles;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("Particle effect to use for player tracers.")]
	public ParticleSystem playerTracerParticles;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Particle effect to use for underwater tracers.")]
	public ParticleSystem bubbleParticles;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Index in the object pool of dirt mark objects.")]
	public int[] dirtMarksID;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("Index in the object pool of metal mark objects.")]
	public int[] metalMarksID;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Index in the object pool of wood mark objects.")]
	public int[] woodMarksID;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Tooltip("Index in the object pool of glass mark objects.")]
	public int[] glassMarksID;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("Index in the object pool of stone mark objects.")]
	public int[] stoneMarksID;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("Index in the object pool of dirt mark objects for melee weapons.")]
	public int[] dirtMarksMeleeID;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("Index in the object pool of metal mark objects for melee weapons.")]
	public int[] metalMarksMeleeID;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Tooltip("Index in the object pool of wood mark objects for melee weapons.")]
	public int[] woodMarksMeleeID;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int markObjID;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Space]
	[Range(0f, 1f)]
	public float defaultImpactVolume;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Texture altBloodTexture;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private AudioClip hitSound;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float hitVolumeAmt;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ParticleSystem partSys;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ParticleSystem tracerParticles;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ParticleSystem.Particle[] activeParticles;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int numparticles;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int numParticlesAlive;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool rotateParticle;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float randvel;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private VrAudioManager audioManager;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AzuObjectPool objectPool;

	[NonSerialized]
	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Space]
	[Header("Networked Impacts")]
	public ImpactType currentImpactType;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float impactSoundsMaxDist;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float flybyMaxDist;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AudioClip[] flybySounds;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private List<ImpEff> m_ImpactEffects;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 bulletMarkScale;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int MainTexArray;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xEF3F28", Offset = "0xEF3F28", VA = "0xEF3F28")]
	public void Start()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xEF41A8", Offset = "0xEF41A8", VA = "0xEF41A8")]
	public void NetworkedBulletEffects(Vector3 start, Vector3 end, byte type)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xEF4520", Offset = "0xEF4520", VA = "0xEF4520")]
	private Vector3 ClosestPoint(Vector3 point, Vector3 start, Vector3 end)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xEF4448", Offset = "0xEF4448", VA = "0xEF4448")]
	public void PlayImpactSound(Vector3 hitpoint, byte type)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xEF46E4", Offset = "0xEF46E4", VA = "0xEF46E4")]
	[ContextMenu("Rename impact effect array")]
	private void RenameEffectArray()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xEEFA0C", Offset = "0xEEFA0C", VA = "0xEEFA0C")]
	public bool ImpactEffects(Collider hitCol, Vector3 hitPoint, bool npcAttack, bool meleeAttack, Vector3 rayNormal, bool playSound, WeaponBehavior weaponBehavior)
	{
		return default(bool);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xEF482C", Offset = "0xEF482C", VA = "0xEF482C")]
	public void EmitRotatedParticle(ParticleSystem partSysToRotate, Vector3 direction)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xEF4B6C", Offset = "0xEF4B6C", VA = "0xEF4B6C")]
	public void BulletMarks(RaycastHit? hit, bool meleeAttack, [Optional] Collider darkCollider, [Optional] Vector3 darkHitPoint, [Optional] Vector3 darkNormal)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xEEFA08", Offset = "0xEEFA08", VA = "0xEEFA08")]
	public void BulletTracers(Vector3 direction, Vector3 position, float tracerDist = 0f, float tracerDistSwim = 0f, bool isPlayer = true)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xEF5038", Offset = "0xEF5038", VA = "0xEF5038")]
	public void ExplosionEffect(Vector3 position, ExplosionSize explosionType)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xEF40C0", Offset = "0xEF40C0", VA = "0xEF40C0")]
	private void SetAlternativeBloodTexture()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xEF5174", Offset = "0xEF5174", VA = "0xEF5174")]
	public WeaponEffects()
	{
	}
}
[Token(Token = "0x2000134")]
public class AmmoText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int ammoGui;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int ammoGui2;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool showMags;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[HideInInspector]
	public bool m_Colorize;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool m_oldColorize;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int oldAmmo;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int oldAmmo2;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Color of GUIText.")]
	public Color textColor;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public TextMeshProUGUI uiAmmoText;

	[Token(Token = "0x40008EA")]
	private const string colorizedPart1 = "<color=red>";

	[Token(Token = "0x40008EB")]
	private const string colorizedPart2 = "</color>";

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xEF528C", Offset = "0xEF528C", VA = "0xEF528C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xEF5298", Offset = "0xEF5298", VA = "0xEF5298")]
	private void Update()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xEF54E8", Offset = "0xEF54E8", VA = "0xEF54E8")]
	public AmmoText()
	{
	}
}
[Token(Token = "0x2000135")]
public class HealthText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float healthGui;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldHealthGui;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Color of GUIText.")]
	public Color textColor;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("True if negative HP should be shown, otherwise, clamp at zero.")]
	public bool showNegativeHP;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text guiTextComponent;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xEF5500", Offset = "0xEF5500", VA = "0xEF5500")]
	private void Start()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xEF5578", Offset = "0xEF5578", VA = "0xEF5578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xEF5654", Offset = "0xEF5654", VA = "0xEF5654")]
	public HealthText()
	{
	}
}
[Token(Token = "0x2000136")]
public class HelpText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Color of GUIText.")]
	public Color textColor;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Offset from total screen width to position GUIText.")]
	public float horizontalOffset;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool helpTextState;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool helpTextEnabled;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startTime;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialHide;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool moveState;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool F1pressed;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	private bool fadeState;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float moveTime;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float fadeTime;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject playerObj;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text uiTextComponent;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xEF566C", Offset = "0xEF566C", VA = "0xEF566C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xEF5784", Offset = "0xEF5784", VA = "0xEF5784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xEF5A48", Offset = "0xEF5A48", VA = "0xEF5A48")]
	public HelpText()
	{
	}
}
[Token(Token = "0x2000137")]
public class HungerText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float hungerGui;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldHungerGui;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Color of GUIText.")]
	public Color textColor;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text uiTextComponent;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xEF5A74", Offset = "0xEF5A74", VA = "0xEF5A74")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xEF5AEC", Offset = "0xEF5AEC", VA = "0xEF5AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xEF5B88", Offset = "0xEF5B88", VA = "0xEF5B88")]
	public HungerText()
	{
	}
}
[Token(Token = "0x2000138")]
public class MainMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("True if the menu should be activated by pressing the main menu button (default esc key).")]
	public bool useMainMenu;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[Tooltip("True if the menu size should scale with screen size.")]
	public bool scaleWithScreenSize;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The NPC parent objects to enable/disable for game modes in the order of: single player, faction war, wave survival.")]
	public GameObject[] NpcGroups;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Font font;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color GuiTint;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Color of normal button text.")]
	public Color btnTextColor;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Color of text for buttons with active states.")]
	public Color btnActiveTextColor;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool initSyles;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float fontSizeScaled;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float titleFontSizeScaled;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int fontSize;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int titleFontSize;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float menuPosV;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float menuPosH;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float buttonHeight;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float buttonWidth;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float buttonHeightScaled;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float buttonWidthScaled;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float buttonHeightAmt;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float buttonWidthAmt;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float buttonSpacing;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float buttonV;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float buttonH;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool menuDisplayed;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool resumePress;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool dzState;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool dzButtonState;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool invulButtonState;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool giveAllButtonState;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AudioSource aSource;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip buttonClickFx;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float buttonFxVol;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip invulClickFx;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float invulFxVol;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip giveAllClickFx;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float giveAllFxVol;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip beepClickFx;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float beepFxVol;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GUIStyleState buttonActive;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GUIStyleState buttonInActive;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GUIStyle toggleButtonStyle1;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GUIStyle toggleButtonStyle2;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GUIStyle toggleButtonStyle3;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GUIStyle mainButtonSyle;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GUIStyle mapButtonStyle;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool npcGoupsNull;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GUIStyle titleStyle;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xEF5B98", Offset = "0xEF5B98", VA = "0xEF5B98")]
	private void Start()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xEF5E3C", Offset = "0xEF5E3C", VA = "0xEF5E3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xEF5E94", Offset = "0xEF5E94", VA = "0xEF5E94")]
	private void PlayButtonFx(AudioClip clip, float vol)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xEF5EE4", Offset = "0xEF5EE4", VA = "0xEF5EE4")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x2000139")]
public class ThirstText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float thirstGui;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldThirstGui;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Color of GUIText.")]
	public Color textColor;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text uiTextComponent;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xEF5F3C", Offset = "0xEF5F3C", VA = "0xEF5F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xEF5FB4", Offset = "0xEF5FB4", VA = "0xEF5FB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xEF6050", Offset = "0xEF6050", VA = "0xEF6050")]
	public ThirstText()
	{
	}
}
[Token(Token = "0x200013A")]
public class WarmupText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float warmupGui;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldWarmup;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Color of GUIText.")]
	public Color textColor;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool waveBegins;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool waveComplete;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text uiTextComponent;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xEF6060", Offset = "0xEF6060", VA = "0xEF6060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xEF60B8", Offset = "0xEF60B8", VA = "0xEF60B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xEF6260", Offset = "0xEF6260", VA = "0xEF6260")]
	public WarmupText()
	{
	}
}
[Token(Token = "0x200013B")]
public class WaveText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int waveGui;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int waveGui2;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int oldWave;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int oldWave2;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Color of GUIText.")]
	public Color textColor;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text uiTextComponent;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xEF6270", Offset = "0xEF6270", VA = "0xEF6270")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xEF62C8", Offset = "0xEF62C8", VA = "0xEF62C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xEF63C8", Offset = "0xEF63C8", VA = "0xEF63C8")]
	public WaveText()
	{
	}
}
[Token(Token = "0x200013C")]
public class AmmoPickup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000769")]
	[Address(RVA = "0xEF63D8", Offset = "0xEF63D8", VA = "0xEF63D8")]
	public AmmoPickup()
	{
	}
}
[Token(Token = "0x200013D")]
public class AppleFall : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xEF63E0", Offset = "0xEF63E0", VA = "0xEF63E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xEEFFF0", Offset = "0xEEFFF0", VA = "0xEEFFF0")]
	public void ApplyDamage(float damage)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xEF63FC", Offset = "0xEF63FC", VA = "0xEF63FC")]
	public void OnCollisionEnter()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xEF6514", Offset = "0xEF6514", VA = "0xEF6514")]
	public AppleFall()
	{
	}
}
[Token(Token = "0x200013E")]
public class HealthPickup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Amount of health this pickup should restore on use.")]
	public float healthToAdd;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("True if this pickup should disappear when used/activated by player.")]
	public bool removeOnUse;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Sound to play when picking up this item.")]
	public AudioClip pickupSound;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Sound to play when health is full and item cannot be used.")]
	public AudioClip fullSound;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("If not null, this texture used for the pick up crosshair of this item.")]
	public Sprite healthPickupReticle;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xEF651C", Offset = "0xEF651C", VA = "0xEF651C")]
	private void Start()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xEF6600", Offset = "0xEF6600", VA = "0xEF6600")]
	private void PickUpItem(GameObject user)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xEF67B4", Offset = "0xEF67B4", VA = "0xEF67B4")]
	private void FreePooledObjects()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xEF69A4", Offset = "0xEF69A4", VA = "0xEF69A4")]
	public HealthPickup()
	{
	}
}
[Token(Token = "0x200013F")]
public class WeaponPickup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000772")]
	[Address(RVA = "0xEF69BC", Offset = "0xEF69BC", VA = "0xEF69BC")]
	public WeaponPickup()
	{
	}
}
[Token(Token = "0x2000140")]
public class WeaponSpawn : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Pickup item to spawn repeatedly with this script.")]
	public GameObject gunPrefab;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Delay between item spawns from spawner.")]
	public float spawnTime;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public GameObject gunInstance;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeLeft;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xEF69C4", Offset = "0xEF69C4", VA = "0xEF69C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xEF69CC", Offset = "0xEF69CC", VA = "0xEF69CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xEF6AAC", Offset = "0xEF6AAC", VA = "0xEF6AAC")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xEF6BC0", Offset = "0xEF6BC0", VA = "0xEF6BC0")]
	public WeaponSpawn()
	{
	}
}
[Token(Token = "0x2000141")]
public class EdgeClimbTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Force that pulls the player upwards when they enter the vault trigger when jumping.")]
	public float upwardPullForce;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject playerObj;

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xEF6BD0", Offset = "0xEF6BD0", VA = "0xEF6BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xEF6C40", Offset = "0xEF6C40", VA = "0xEF6C40")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xEF6D44", Offset = "0xEF6D44", VA = "0xEF6D44")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xEF6E38", Offset = "0xEF6E38", VA = "0xEF6E38")]
	public EdgeClimbTrigger()
	{
	}
}
[Token(Token = "0x2000142")]
public class EdgeClimbTriggerActivate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The box collider to reactivate (set in inspector by dragging trigger object over this field).")]
	public BoxCollider triggerToActivate;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xEF6E4C", Offset = "0xEF6E4C", VA = "0xEF6E4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xEF6E6C", Offset = "0xEF6E6C", VA = "0xEF6E6C")]
	public EdgeClimbTriggerActivate()
	{
	}
}
[Token(Token = "0x2000143")]
public class Ladder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inTrigger;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] grabTargets;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] movementTargets;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int upTarget;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int downTarget;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 dir;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("If false, climbing footstep sounds won't be played.")]
	public bool playClimbingAudio;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int closestNode;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] nodesY;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float targetOffset;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 primaryAxis;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float player;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InputControl InputComponent;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool init;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 offSet;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VrPlayerController playerController;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xEF6E74", Offset = "0xEF6E74", VA = "0xEF6E74")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xEF7A3C", Offset = "0xEF7A3C", VA = "0xEF7A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xEF7B3C", Offset = "0xEF7B3C", VA = "0xEF7B3C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xEF7CE4", Offset = "0xEF7CE4", VA = "0xEF7CE4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xEF7E30", Offset = "0xEF7E30", VA = "0xEF7E30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xEF801C", Offset = "0xEF801C", VA = "0xEF801C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xEF7300", Offset = "0xEF7300", VA = "0xEF7300")]
	private int FindClosestNode(Transform go)
	{
		return default(int);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xEF74B8", Offset = "0xEF74B8", VA = "0xEF74B8")]
	private void TargetManagment()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xEF80D8", Offset = "0xEF80D8", VA = "0xEF80D8")]
	public Ladder()
	{
	}
}
[Token(Token = "0x2000144")]
public class BreakableObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000145")]
	[CompilerGenerated]
	private sealed class <DetectBroken>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BreakableObject <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xEF88A0", Offset = "0xEF88A0", VA = "0xEF88A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0xEF88E8", Offset = "0xEF88E8", VA = "0xEF88E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xEF824C", Offset = "0xEF824C", VA = "0xEF824C")]
		[DebuggerHidden]
		public <DetectBroken>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xEF85D4", Offset = "0xEF85D4", VA = "0xEF85D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xEF85D8", Offset = "0xEF85D8", VA = "0xEF85D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xEF88A8", Offset = "0xEF88A8", VA = "0xEF88A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("When hitpoints are depleted, object is destroyed.")]
	public float hitPoints;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem breakParticles;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool broken;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds detectWaitDelay;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xEF8180", Offset = "0xEF8180", VA = "0xEF8180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xEF81E4", Offset = "0xEF81E4", VA = "0xEF81E4")]
	[IteratorStateMachine(typeof(<DetectBroken>d__6))]
	private IEnumerator DetectBroken()
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xEF8274", Offset = "0xEF8274", VA = "0xEF8274")]
	public void ApplyDamage(float damage)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xEF855C", Offset = "0xEF855C", VA = "0xEF855C")]
	public BreakableObject()
	{
	}
}
[Token(Token = "0x2000146")]
public enum EXPLOSIVE_TYPE
{
	[Token(Token = "0x400096B")]
	fragGrenade,
	[Token(Token = "0x400096C")]
	smokeGrenade,
	[Token(Token = "0x400096D")]
	flashGranade,
	[Token(Token = "0x400096E")]
	bazooka,
	[Token(Token = "0x400096F")]
	molotov,
	[Token(Token = "0x4000970")]
	stickyGrenade
}
[Token(Token = "0x2000147")]
public class ExplosiveObject : PunBehaviour
{
	[Token(Token = "0x2000148")]
	[CompilerGenerated]
	private sealed class <DetectDestroyed>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveObject <>4__this;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0xEF9AF4", Offset = "0xEF9AF4", VA = "0xEF9AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0xEF9B3C", Offset = "0xEF9B3C", VA = "0xEF9B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xEF8C10", Offset = "0xEF8C10", VA = "0xEF8C10")]
		[DebuggerHidden]
		public <DetectDestroyed>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xEF99A8", Offset = "0xEF99A8", VA = "0xEF99A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xEF99AC", Offset = "0xEF99AC", VA = "0xEF99AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xEF9AFC", Offset = "0xEF9AFC", VA = "0xEF9AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000149")]
	[CompilerGenerated]
	private sealed class <DetonateFrag>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveObject <>4__this;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private short <syncNum>5__2;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <explosionMultiplier>5__3;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0xEFADDC", Offset = "0xEFADDC", VA = "0xEFADDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0xEFAE24", Offset = "0xEFAE24", VA = "0xEFAE24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xEF8CA4", Offset = "0xEF8CA4", VA = "0xEF8CA4")]
		[DebuggerHidden]
		public <DetonateFrag>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xEF9B44", Offset = "0xEF9B44", VA = "0xEF9B44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xEF9B48", Offset = "0xEF9B48", VA = "0xEF9B48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xEFADE4", Offset = "0xEFADE4", VA = "0xEFADE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private sealed class <DetonateSmoke>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveObject <>4__this;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0xEFB36C", Offset = "0xEFB36C", VA = "0xEFB36C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0xEFB3B4", Offset = "0xEFB3B4", VA = "0xEFB3B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xEF8D34", Offset = "0xEF8D34", VA = "0xEF8D34")]
		[DebuggerHidden]
		public <DetonateSmoke>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xEFAE2C", Offset = "0xEFAE2C", VA = "0xEFAE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xEFAE30", Offset = "0xEFAE30", VA = "0xEFAE30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xEFB374", Offset = "0xEFB374", VA = "0xEFB374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[CompilerGenerated]
	private sealed class <DetonateFlash>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveObject <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0xEFB5B8", Offset = "0xEFB5B8", VA = "0xEFB5B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0xEFB600", Offset = "0xEFB600", VA = "0xEFB600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xEF8DC4", Offset = "0xEF8DC4", VA = "0xEF8DC4")]
		[DebuggerHidden]
		public <DetonateFlash>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xEFB3BC", Offset = "0xEFB3BC", VA = "0xEFB3BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xEFB3C0", Offset = "0xEFB3C0", VA = "0xEFB3C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xEFB5C0", Offset = "0xEFB5C0", VA = "0xEFB5C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014C")]
	[CompilerGenerated]
	private sealed class <DetonateMolotov>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveObject <>4__this;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0xEFB928", Offset = "0xEFB928", VA = "0xEFB928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0xEFB970", Offset = "0xEFB970", VA = "0xEFB970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xEF9408", Offset = "0xEF9408", VA = "0xEF9408")]
		[DebuggerHidden]
		public <DetonateMolotov>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xEFB608", Offset = "0xEFB608", VA = "0xEFB608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xEFB60C", Offset = "0xEFB60C", VA = "0xEFB60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xEFB930", Offset = "0xEFB930", VA = "0xEFB930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool contactGrenade;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public EXPLOSIVE_TYPE explosiveType;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] explosionSounds;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public bool useOwnEffect;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem explosionEffect;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	public bool playDebrisSounds;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] debrisSounds;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource aSourceDebris;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject meshParent;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform effectReferencePoint;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip hitSound;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Rigidbody rigidBody;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public int team;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GrenadeObject grenadeObject;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Flash Granade")]
	[Space]
	public float fullForceFlashDistance;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public LayerMask flashLayerMask;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject LigthFlashGo;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float flashEffectDelay;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip flashStunSound;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WeaponEffects WeaponEffectsComponent;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("When hit points of object are depleted, object will explode.")]
	[Space]
	public float hitPoints;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float initialHitPoints;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("Maximum damage dealt at center of explosion (damage decreases from center).")]
	public float explosionDamage;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Tooltip("Delay before this object applies explosion force and damage to other objects;.")]
	public float damageDelay;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float explosionDamageAmt;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[Tooltip("Explosive physics force applied to objects in blast radius.")]
	public float blastForce;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Tooltip("Radius of explosion.")]
	public float radius;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[Tooltip("The fuse will be decresed to this ammount after contact (If the number is higher).")]
	public float timeAfterContact;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Layers that will be hit by explosion.")]
	public LayerMask blastMask;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Tooltip("Layers that will block explosion blast.")]
	public LayerMask obstructionMask;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform myTransform;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool detonated;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool audioPlayed;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int objectPoolIndex;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioSource aSource;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSource aSourceImpact;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Collider hitCollider;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Rigidbody hitRigidbody;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int m_WorldNumberAttacker;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool owner;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private WaitForSeconds wait02;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private WaitForSeconds waitDamageDelay;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private WaitForSeconds waitFlashDelay;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private WaitForSeconds wait3;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3 rayOffset;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[Header("Haptics")]
	[Space]
	public bool useHaptics;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float maxDistance;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float minDistance;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float hapticsDuration;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int frequency;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject smokeGo;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float angle;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3 rayDirection;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 dirFromHeadset;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private RaycastHit hit;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 flashLigthPos;

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xEF88F0", Offset = "0xEF88F0", VA = "0xEF88F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xEF8964", Offset = "0xEF8964", VA = "0xEF8964")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xEF89F8", Offset = "0xEF89F8", VA = "0xEF89F8", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xEF8BA8", Offset = "0xEF8BA8", VA = "0xEF8BA8")]
	[IteratorStateMachine(typeof(<DetectDestroyed>d__54))]
	private IEnumerator DetectDestroyed()
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xEF8C38", Offset = "0xEF8C38", VA = "0xEF8C38")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xEF8C3C", Offset = "0xEF8C3C", VA = "0xEF8C3C")]
	[IteratorStateMachine(typeof(<DetonateFrag>d__56))]
	private IEnumerator DetonateFrag()
	{
		return null;
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xEF8CCC", Offset = "0xEF8CCC", VA = "0xEF8CCC")]
	[IteratorStateMachine(typeof(<DetonateSmoke>d__58))]
	private IEnumerator DetonateSmoke()
	{
		return null;
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xEF8D5C", Offset = "0xEF8D5C", VA = "0xEF8D5C")]
	[IteratorStateMachine(typeof(<DetonateFlash>d__64))]
	private IEnumerator DetonateFlash()
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xEF8DEC", Offset = "0xEF8DEC", VA = "0xEF8DEC")]
	private void FlashGranadeEffect()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xEF93A0", Offset = "0xEF93A0", VA = "0xEF93A0")]
	[IteratorStateMachine(typeof(<DetonateMolotov>d__66))]
	private IEnumerator DetonateMolotov()
	{
		return null;
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xEF9430", Offset = "0xEF9430", VA = "0xEF9430")]
	public void PlayExplosionSound()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xEF9540", Offset = "0xEF9540", VA = "0xEF9540")]
	private void Haptics()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xEF88F4", Offset = "0xEF88F4", VA = "0xEF88F4")]
	private void ResetExplosiveObject()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xEF9760", Offset = "0xEF9760", VA = "0xEF9760")]
	public void ApplyDamage(float damage)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xEF97F8", Offset = "0xEF97F8", VA = "0xEF97F8")]
	public ExplosiveObject()
	{
	}
}
[Token(Token = "0x200014D")]
public class MineExplosion : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200014E")]
	[CompilerGenerated]
	private sealed class <DetectDestroyed>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0xEFC0D8", Offset = "0xEFC0D8", VA = "0xEFC0D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0xEFC120", Offset = "0xEFC120", VA = "0xEFC120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xEFBEAC", Offset = "0xEFBEAC", VA = "0xEFBEAC")]
		[DebuggerHidden]
		public <DetectDestroyed>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xEFC0A0", Offset = "0xEFC0A0", VA = "0xEFC0A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xEFC0A4", Offset = "0xEFC0A4", VA = "0xEFC0A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xEFC0E0", Offset = "0xEFC0E0", VA = "0xEFC0E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014F")]
	[CompilerGenerated]
	private sealed class <Detonate>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MineExplosion <>4__this;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0xEFCC18", Offset = "0xEFCC18", VA = "0xEFCC18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0xEFCC60", Offset = "0xEFCC60", VA = "0xEFCC60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xEFBF3C", Offset = "0xEFBF3C", VA = "0xEFBF3C")]
		[DebuggerHidden]
		public <Detonate>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xEFC128", Offset = "0xEFC128", VA = "0xEFC128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xEFC12C", Offset = "0xEFC12C", VA = "0xEFC12C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xEFCC20", Offset = "0xEFCC20", VA = "0xEFCC20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WeaponEffects WeaponEffectsComponent;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Damage dealt by explosion.")]
	public float explosionDamage;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Delay before this object applies explosion force and damage to other objects;.")]
	public float damageDelay;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Explosive physics force applied to objects in blast radius.")]
	public float blastForce;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Explosion sound effect.")]
	public AudioClip explosionFX;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("mine trigger sound effect.")]
	public AudioClip beepFx;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Radius of explosion.")]
	private float radius;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("True if object is the mine detection radius object (used only for triggering mine, not explosion effects).")]
	public bool isRadiusCollider;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Layers that will be hit by explosion.")]
	public LayerMask blastMask;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Layers that mine will auto-align angles to surface on scene start.")]
	public LayerMask initPosMask;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform myTransform;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool audioPlayed;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool triggered;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool detonated;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool inPosition;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hit;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RaycastHit hitInit;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 explodePos;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Range(0f, 1f)]
	[Tooltip("Chance between 0 and 1 that NPC will spawn. Used to randomize NPC locations and surprise the player.")]
	public float randomSpawnChance;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WaitForSeconds waitDamageDelay;

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xEFB978", Offset = "0xEFB978", VA = "0xEFB978")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xEFBAF0", Offset = "0xEFBAF0", VA = "0xEFBAF0")]
	private void AlignToGround()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xEFBC5C", Offset = "0xEFBC5C", VA = "0xEFBC5C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xEFBE4C", Offset = "0xEFBE4C", VA = "0xEFBE4C")]
	[IteratorStateMachine(typeof(<DetectDestroyed>d__23))]
	private IEnumerator DetectDestroyed()
	{
		return null;
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xEFBED4", Offset = "0xEFBED4", VA = "0xEFBED4")]
	[IteratorStateMachine(typeof(<Detonate>d__24))]
	private IEnumerator Detonate()
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xEFBF64", Offset = "0xEFBF64", VA = "0xEFBF64")]
	public void ApplyDamage(float damage)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xEFC014", Offset = "0xEFC014", VA = "0xEFC014")]
	public MineExplosion()
	{
	}
}
[Token(Token = "0x2000150")]
public class ElevatorCrushCollider : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Sound effect to play when player is crushed under elevator.")]
	public AudioClip squishSnd;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool fxPlayed;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float crushTime;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xEFCC68", Offset = "0xEFCC68", VA = "0xEFCC68")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xEFCDA8", Offset = "0xEFCDA8", VA = "0xEFCDA8")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xEFCE44", Offset = "0xEFCE44", VA = "0xEFCE44")]
	public ElevatorCrushCollider()
	{
	}
}
[Token(Token = "0x2000151")]
public class MovingElevator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000152")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovingElevator <>4__this;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0xEFD250", Offset = "0xEFD250", VA = "0xEFD250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0xEFD298", Offset = "0xEFD298", VA = "0xEFD298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xEFCEB4", Offset = "0xEFCEB4", VA = "0xEFCEB4")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xEFD120", Offset = "0xEFD120", VA = "0xEFD120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xEFD124", Offset = "0xEFD124", VA = "0xEFD124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xEFD258", Offset = "0xEFD258", VA = "0xEFD258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Destination point for elevator to cycle to.")]
	public Transform pointB;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 pointA;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Speed of elevator movement.")]
	public float speed;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float direction;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xEFCE4C", Offset = "0xEFCE4C", VA = "0xEFCE4C")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xEFCEDC", Offset = "0xEFCEDC", VA = "0xEFCEDC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xEFD110", Offset = "0xEFD110", VA = "0xEFD110")]
	public MovingElevator()
	{
	}
}
[Token(Token = "0x2000153")]
public class MovingPlatform : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000154")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovingPlatform <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0xEFD584", Offset = "0xEFD584", VA = "0xEFD584", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0xEFD5CC", Offset = "0xEFD5CC", VA = "0xEFD5CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xEFD308", Offset = "0xEFD308", VA = "0xEFD308")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xEFD464", Offset = "0xEFD464", VA = "0xEFD464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xEFD468", Offset = "0xEFD468", VA = "0xEFD468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xEFD58C", Offset = "0xEFD58C", VA = "0xEFD58C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Destination point for elevator to cycle to.")]
	public Transform pointB;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Destination point for elevator to cycle to.")]
	public Transform pointA;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Speed of elevator movement.")]
	public float speed;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float direction;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xEFD2A0", Offset = "0xEFD2A0", VA = "0xEFD2A0")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xEFD330", Offset = "0xEFD330", VA = "0xEFD330")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xEFD454", Offset = "0xEFD454", VA = "0xEFD454")]
	public MovingPlatform()
	{
	}
}
[Serializable]
[Token(Token = "0x2000155")]
public class MultiDimensionalPool
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The gameobject used to create an object pool.")]
	public GameObject prefab;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Number of this type of object to store in object pool.")]
	public int poolSize;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("True if spawned pooled object should ignore collision with player.")]
	public bool ignorePlayerCollision;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("List of pooled game objects (should never have any missing list entries at runtime).")]
	public List<GameObject> pooledObjs;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int nextActive;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xEFD5D4", Offset = "0xEFD5D4", VA = "0xEFD5D4")]
	public MultiDimensionalPool()
	{
	}
}
[Serializable]
[Token(Token = "0x2000156")]
public class AzuObjectPool : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AzuObjectPool instance;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Audio Source Limiters")]
	public PlayAtPosLimiter weaponFireLimiter;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayAtPosLimiter shellLimiter;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayAtPosLimiter impactLimiter;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Audio prefab to use on pico spatial audio")]
	[Header("Pico Spatial")]
	public MultiDimensionalPool spatialAudioObject;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public int spatialAudioIndex;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("List of object pools that are active in the scene. Index numbers of pools in this list are used by other scripts to identify which pooled objects to spawn.")]
	public List<MultiDimensionalPool> objRegistry;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> m_ignoredGameobjects;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, object> m_cachedPoolItems;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider FPSWalkerCapsule;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform myTransform;

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xEFD650", Offset = "0xEFD650", VA = "0xEFD650")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xEFD69C", Offset = "0xEFD69C", VA = "0xEFD69C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xEFDA64", Offset = "0xEFDA64", VA = "0xEFDA64")]
	public void PreventFromReusing(int ID)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xEFDB38", Offset = "0xEFDB38", VA = "0xEFDB38")]
	public void AllowReusing(int ID)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xEFAF70", Offset = "0xEFAF70", VA = "0xEFAF70")]
	public GameObject SpawnPooledObj(int objRegIndex, Vector3 spawnPosition, Quaternion spawnRotation)
	{
		return null;
	}

	[Token(Token = "0x60007EC")]
	public T SpawnPooledObjAndReturnComponent<T>(int objRegIndex, Vector3 spawnPosition, Quaternion spawnRotation)
	{
		return (T)null;
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xEFD000", Offset = "0xEFD000", VA = "0xEFD000")]
	public GameObject RecyclePooledObj(int objRegIndex, GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xEFDBC8", Offset = "0xEFDBC8", VA = "0xEFDBC8")]
	public AzuObjectPool()
	{
	}
}
[Token(Token = "0x2000157")]
public class DamageZone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Amount of damage to apply to player while in damage trigger.")]
	public float damage;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Amount of damage to gradually apply to NPCs while in damage trigger.")]
	public float NpcDamage;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Delay before player is damaged again by this damage zone.")]
	public float delay;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float damageTime;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xEFDCCC", Offset = "0xEFDCCC", VA = "0xEFDCCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xEFDD50", Offset = "0xEFDD50", VA = "0xEFDD50")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xEFDF38", Offset = "0xEFDF38", VA = "0xEFDF38")]
	public DamageZone()
	{
	}
}
[Token(Token = "0x2000158")]
public class FenceRustle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Sound effects to play when player runs up against this object.")]
	public AudioClip[] fenceRustles;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Volume of sound effects when player runs up against this object.")]
	public float rustleVol;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastRustleTime;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xEFDF50", Offset = "0xEFDF50", VA = "0xEFDF50")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xEFE068", Offset = "0xEFE068", VA = "0xEFE068")]
	public FenceRustle()
	{
	}
}
[Token(Token = "0x2000159")]
public class FoliageRustle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource rustleFx;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Footsteps FootstepsComponent;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xEFE078", Offset = "0xEFE078", VA = "0xEFE078")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xEFE1AC", Offset = "0xEFE1AC", VA = "0xEFE1AC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xEFE2A0", Offset = "0xEFE2A0", VA = "0xEFE2A0")]
	public FoliageRustle()
	{
	}
}
[Token(Token = "0x200015A")]
public class InstantDeathCollider : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("True if this instant death collider should kill an invulnerable player.")]
	public bool killInvulnerable;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xEFE2A8", Offset = "0xEFE2A8", VA = "0xEFE2A8")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xEFE3D4", Offset = "0xEFE3D4", VA = "0xEFE3D4")]
	private void Reset()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xEFE4C0", Offset = "0xEFE4C0", VA = "0xEFE4C0")]
	public InstantDeathCollider()
	{
	}
}
[Token(Token = "0x200015B")]
public class ObjRandomSpawnChance : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Chance between 0 and 1 that object will spawn. Used to randomize object locations and surprise the player.")]
	[Range(0f, 1f)]
	public float randomSpawnChance;

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xEFE4D0", Offset = "0xEFE4D0", VA = "0xEFE4D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xEFE56C", Offset = "0xEFE56C", VA = "0xEFE56C")]
	public ObjRandomSpawnChance()
	{
	}
}
[Token(Token = "0x200015C")]
public class WaterZone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Footsteps FootstepsComponent;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WeaponEffects WeaponEffectsComponent;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject playerObj;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject weaponObj;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool swimTimeState;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioSource;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Sound effect to play underwater.")]
	public AudioClip underwaterSound;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Above-water ambient audio sources to pause when submerged.")]
	public AudioSource[] aboveWaterAudioSources;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("The mesh to use for the water surface plane (if flip water plane is false, this will just be used for underwater surface plane).")]
	public Transform waterPlane;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float underwaterYpos;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("The top water surface plane (is deactivated when camera is underwater).")]
	public Transform waterPlaneTop;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 waterPlaneRot;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Particles emitted around player treading water.")]
	private ParticleSystem rippleEffect;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float rippleEmitTime;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float rippleEmitDelay;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("Particles emitted underwater for ambient bubbles/particles.")]
	private ParticleSystem bubblesEffect;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float particlesYPos;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float particleForwardPos;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Tooltip("Splash particles effect to play when object enter water.")]
	private GameObject waterSplash;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 splashPos;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float lastSplashTime;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("Particles to emit when player is swimming on water surface.")]
	private ParticleSystem splashTrail;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 trailPos;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float splashTrailTime;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("True if sunlight color should be changed when underwater.")]
	public bool changeSunlightColor;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Sun/directional light that  should be changed to underwaterSunightColor when player is submerged .")]
	public Light SunlightObj;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Color of sunlight when underwater.")]
	public Color underwaterSunightColor;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Color origSunightColor;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Tooltip("True if scene ambient lighting is changed when underwater.")]
	public bool underwaterLightEnabled;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[Tooltip("Color of underwater scene ambient lighting.")]
	public Color underwaterLightColor;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[Tooltip("True if spotlight with underwter caustics (shimmery lighting) should be active when underwater.")]
	public bool useCausticsLight;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[Tooltip("Spotlight with caustics cookie to activate when underwater.")]
	public Light causticsLight;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int index;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[Tooltip("Frames per second of underwater caustics animation.")]
	public int fps;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Tooltip("Frames of underwater caustic animation.")]
	public Texture2D[] frames;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool effectsState;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[Tooltip("True if underwater fog settings will be applied when submerged.")]
	public bool underwaterFogEnabled;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[Tooltip("Fog mode when underwater.")]
	public FogMode underwaterFogMode;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Tooltip("Fog color when underwater.")]
	public Color underwaterFogColor;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Tooltip("Underwater exponential fog density (if exponential mode is selected).")]
	public float underwaterFogDensity;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[Tooltip("Underwater linear fog start distance.")]
	public float underwaterLinearFogStart;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[Tooltip("Underwater linerar fog end distance.")]
	public float underwaterLinearFogEnd;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool fogEnabled;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private FogMode origFogMode;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Color origFogColor;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Color origLightColor;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float origFogDensity;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float origLinearFogStart;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float origLinearFogEnd;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Transform myTransform;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Transform mainCamTransform;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xEFE57C", Offset = "0xEFE57C", VA = "0xEFE57C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xEFEB3C", Offset = "0xEFEB3C", VA = "0xEFEB3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xEFF4F8", Offset = "0xEFF4F8", VA = "0xEFF4F8")]
	private void NextFrame()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xEFF5C8", Offset = "0xEFF5C8", VA = "0xEFF5C8")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xEFFC84", Offset = "0xEFFC84", VA = "0xEFFC84")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xEFF5CC", Offset = "0xEFF5CC", VA = "0xEFF5CC")]
	private void EnterWater(Collider col)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xF00500", Offset = "0xF00500", VA = "0xF00500")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xEFEF20", Offset = "0xEFEF20", VA = "0xEFEF20")]
	private void StartUnderwaterEffects()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xEFEC78", Offset = "0xEFEC78", VA = "0xEFEC78")]
	private void StopUnderwaterEffects()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xF00590", Offset = "0xF00590", VA = "0xF00590")]
	public WaterZone()
	{
	}
}
[Token(Token = "0x200015D")]
public class WorldRecenter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.Object[] objects;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Re-center objects if player moves further than this distance from scene origin (prevents floating point imprecision and model jitter in large scenes, but currently incompatible with navmesh and static objects).")]
	public float threshold;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Refresh terrain to update tree colliders (can cause momentary hiccup on large terrains).")]
	public bool refreshTerrain;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float worldRecenterTime;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] emitterParticles;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numParticlesAlive;

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xF00610", Offset = "0xF00610", VA = "0xF00610")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xF00A90", Offset = "0xF00A90", VA = "0xF00A90")]
	public WorldRecenter()
	{
	}
}
[Token(Token = "0x200015E")]
public class Footsteps : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputControl InputComponent;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject playerObj;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public string materialType;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float volumeAmt;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioClip footStepClip;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Index number of the terrain texture currently beneath the player, which the various terrain index numbers below can be set to, for footstep sound effects on terrain.")]
	public int terrainIndex;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool onTerrain;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Terrain index number to use for dirt footstep sounds (-1 will play no sounds).")]
	public int dirtTerrainIndex1;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("Terrain index number to use for dirt footstep sounds (-1 will play no sounds).")]
	public int dirtTerrainIndex2;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Terrain index number to use for dirt footstep sounds (-1 will play no sounds).")]
	public int dirtTerrainIndex3;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Volume of dirt footstep sounds.")]
	public float dirtStepVol;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Array containing sound effects to be used for dirt footsteps.")]
	public AudioClip[] dirtSteps;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Terrain index number to use for stone footstep sounds (-1 will play no sounds).")]
	public int stoneTerrainIndex1;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Terrain index number to use for stone footstep sounds (-1 will play no sounds).")]
	public int stoneTerrainIndex2;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Terrain index number to use for stone footstep sounds (-1 will play no sounds).")]
	public int stoneTerrainIndex3;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Tooltip("Volume of stone footstep sounds.")]
	public float stoneStepVol;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Array containing sound effects to be used for stone footsteps.")]
	public AudioClip[] stoneSteps;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("Terrain index number to use for grass footstep sounds (-1 will play no sounds).")]
	public int grassTerrainIndex1;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Tooltip("Terrain index number to use for grass footstep sounds (-1 will play no sounds).")]
	public int grassTerrainIndex2;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Terrain index number to use for grass footstep sounds (-1 will play no sounds).")]
	public int grassTerrainIndex3;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Tooltip("Volume of grass footstep sounds.")]
	public float grassStepVol;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Array containing sound effects to be used for grass footsteps.")]
	public AudioClip[] grassSteps;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("Terrain index number to use for gravel footstep sounds (-1 will play no sounds).")]
	public int gravelTerrainIndex1;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[Tooltip("Terrain index number to use for gravel footstep sounds (-1 will play no sounds).")]
	public int gravelTerrainIndex2;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Terrain index number to use for gravel footstep sounds (-1 will play no sounds).")]
	public int gravelTerrainIndex3;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[Tooltip("Volume of gravel footstep sounds.")]
	public float gravelStepVol;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Tooltip("Array containing sound effects to be used for gravel footsteps.")]
	public AudioClip[] gravelSteps;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("Terrain index number to use for sand footstep sounds (-1 will play no sounds).")]
	public int sandTerrainIndex1;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Tooltip("Terrain index number to use for sand footstep sounds (-1 will play no sounds).")]
	public int sandTerrainIndex2;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("Terrain index number to use for sand footstep sounds (-1 will play no sounds).")]
	public int sandTerrainIndex3;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Tooltip("Volume of sand footstep sounds.")]
	public float sandStepVol;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("Array containing sound effects to be used for sand footsteps.")]
	public AudioClip[] sandSteps;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Tooltip("Volume of default footstep sounds.")]
	public float defaultStepVol;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Array containing sound effects to be used for default footsteps.")]
	public AudioClip[] defaultSteps;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("Volume of wood footstep sounds.")]
	public float woodStepVol;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Array containing sound effects to be used for wood footsteps.")]
	public AudioClip[] woodSteps;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Volume of metal footstep sounds.")]
	public float metalStepVol;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Tooltip("Array containing sound effects to be used for metal footsteps.")]
	public AudioClip[] metalSteps;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Tooltip("Volume of water footstep sounds.")]
	public float waterSoundVol;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Tooltip("Array containing sound effects to be used for water footsteps.")]
	public AudioClip[] waterSounds;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Tooltip("Volume of ladder footstep sounds.")]
	public float climbSoundVol;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Tooltip("Array containing sound effects to be used for ladder footsteps.")]
	public AudioClip[] climbSounds;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Tooltip("Volume of prone shuffle sounds.")]
	public float proneStepVol;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[Tooltip("Array containing sound effects to be used for prone shuffling.")]
	public AudioClip[] proneSteps;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Tooltip("Sound for landing on a dirt surface.")]
	public AudioClip dirtLand;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Tooltip("Sound for landing on a dirt surface.")]
	public AudioClip metalLand;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Tooltip("Sound for landing on a metal surface.")]
	public AudioClip woodLand;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Tooltip("Sound for landing on a water surface.")]
	public AudioClip waterLand;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Tooltip("Sound for landing on a stone surface.")]
	public AudioClip stoneLand;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Tooltip("Volume of foliage rustle sounds.")]
	public float foliageRustleVol;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[Tooltip("Array containing sound effects to be used for foliage rustling.")]
	public AudioClip[] foliageRustles;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AudioSource aSource;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Terrain terrain;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private TerrainData terrainData;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 terrainPos;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool m_Disable;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xF00AF8", Offset = "0xF00AF8", VA = "0xF00AF8")]
	public void FootstepSfx()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xF00AFC", Offset = "0xF00AFC", VA = "0xF00AFC")]
	public Footsteps()
	{
	}
}
[Token(Token = "0x200015F")]
public class FPSPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000160")]
	[CompilerGenerated]
	private sealed class <ActivateBulletTime>d__158 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FPSPlayer <>4__this;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startTime>5__2;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0xF02AE0", Offset = "0xF02AE0", VA = "0xF02AE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0xF02B28", Offset = "0xF02B28", VA = "0xF02B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xF02414", Offset = "0xF02414", VA = "0xF02414")]
		[DebuggerHidden]
		public <ActivateBulletTime>d__158(int <>1__state)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xF02A28", Offset = "0xF02A28", VA = "0xF02A28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xF02A2C", Offset = "0xF02A2C", VA = "0xF02A2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xF02AE8", Offset = "0xF02AE8", VA = "0xF02AE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioListener m_AudioListener;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Ironsights IronsightsComponent;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public InputControl InputComponent;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public WorldRecenter WorldRecenterComponent;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public SmoothMouseLook MouseLookComponent;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public WeaponEffects WeaponEffectsComponent;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public WeaponPivot WeaponPivotComponent;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public CameraControl CameraControlComponent;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public NPCRegistry NPCRegistryComponent;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public GameObject NPCMgrObj;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AI AIComponent;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public GameObject[] children;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public GameObject weaponCameraObj;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public GameObject weaponObj;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public WeaponEffects WeaponEffectsComp;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Reference to the UI Canvas object.")]
	public GameObject canvasObj;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Tooltip("Object reference to the GUITexture object in the project library that renders pain effects on screen.")]
	public GameObject painFadeObj;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PainFade painFadeComponent;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Image painFadeImage;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject levelLoadFadeObj;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private LevelLoadFade levelLoadFadeRef;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Object reference to the Text object in the project library that renders health amounts on screen.")]
	public GameObject healthUiObj;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("Object reference to the Text object in the project library that renders health amounts on screen.")]
	public GameObject healthUiObjShadow;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Object reference to the Text object in the project library that renders ammo amounts on screen.")]
	public GameObject ammoUiObj;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Object reference to the Text object in the project library that renders ammo amounts on screen.")]
	public GameObject ammoUiObjShadow;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Tooltip("Object reference to the Text object in the project library that renders help text on screen.")]
	public GameObject helpGuiObj;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Tooltip("Object reference to the Text object in the project library that renders help text on screen.")]
	public GameObject helpGuiObjShadow;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Tooltip("Object reference to the Text object in the project library that renders hhelp amounts on screen.")]
	public GameObject waveUiObj;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Tooltip("Object reference to the Text object in the project library that renders wave text on screen.")]
	public GameObject waveUiObjShadow;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Tooltip("Object reference to the Text object in the project library that renders wave amounts on screen.")]
	public GameObject warmupUiObj;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Tooltip("Object reference to the Text object in the project library that renders warmup text on screen.")]
	public GameObject warmupUiObjShadow;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[Tooltip("Object reference to the Text object in the project library that renders warmup text on screen.")]
	public GameObject crosshairUiObj;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Image crosshairUiImage;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public RectTransform crosshairUiRect;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Tooltip("Object reference to the GUITexture object in the project library that renders crosshair on screen.")]
	public GameObject hitmarkerUiObj;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public Image hitmarkerUiImage;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public RectTransform hitmarkerUiRect;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private HealthText HealthText;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private HealthText HealthText2;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Text healthUiText;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public float crosshairWidth;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[Tooltip("Size of crosshair relative to screen size.")]
	public float crosshairSize;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float oldWidth;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[HideInInspector]
	public float hitTime;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[HideInInspector]
	public bool hitMarkerState;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Transform mainCamTransform;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[Tooltip("True if the prefab parent object will be removed on scene load.")]
	public bool removePrefabRoot;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float hitPoints;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float maximumHitPoints;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[Tooltip("True if player's health should be displayed on the screen.")]
	public bool showHealth;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	[Tooltip("True if player's ammo should be displayed on the screen.")]
	public bool showAmmo;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	[Tooltip("True if negative hitpoint values should be shown.")]
	public bool showHpUnderZero;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19F")]
	[Tooltip("True if player cannot take damage.")]
	public bool invulnerable;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[Tooltip("True if the player regenerates their health after health regen delay elapses without player taking damage.")]
	public bool regenerateHealth;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[Tooltip("The maximum amount of hitpoints that should be regenerated.")]
	public float maxRegenHealth;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Tooltip("Delay after being damaged that the player should start to regenerate health.")]
	public float healthRegenDelay;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[Tooltip("Rate at which the player should regenerate health.")]
	public float healthRegenRate;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float timeLastDamaged;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float m_reviveDistance;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float m_reviveDelay;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float reviveOthersTime;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float reviveSelfTime;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Canvas m_reviveIconCanvas;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private PlayerData m_playerToRevive;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool m_holdingRevive;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private double m_pressStart;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[Tooltip("True if player can activate bullet time by pressing button (default T).")]
	public bool allowBulletTime;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	[Tooltip("True if help text should be displayed.")]
	public bool showHelpText;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
	[Tooltip("True if pause (default: Tab) should hide cursor.")]
	public bool pauseHidesCursor;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float gotHitTimer;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Color PainColor;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Color painFadeColor;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[Tooltip("Amount to kick the player's camera view when damaged.")]
	public float painScreenKickAmt;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	[Tooltip("Percentage of normal time to use when in bullet time.")]
	[Range(0f, 1f)]
	public float bulletTimeSpeed;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[Tooltip("Movement multiplier during bullet time.")]
	public float sloMoMoveSpeed;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float pausedTime;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[HideInInspector]
	public bool bulletTimeActive;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	[HideInInspector]
	public float backstabBtTime;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[HideInInspector]
	public bool backstabBtState;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float initialFixedTime;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[HideInInspector]
	public float usePressTime;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	[HideInInspector]
	public float useReleaseTime;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool useState;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
	[HideInInspector]
	public bool pressButtonUpState;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[HideInInspector]
	public Collider objToPickup;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private bool zoomBtnState;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float zoomStopTime;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[HideInInspector]
	public bool zoomed;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	[HideInInspector]
	public float zoomStart;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[HideInInspector]
	public bool zoomStartState;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	[HideInInspector]
	public float zoomEnd;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[HideInInspector]
	public bool zoomEndState;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private float zoomDelay;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[HideInInspector]
	public bool dzAiming;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
	[Tooltip("Enable or disable the aiming reticle.")]
	public bool crosshairEnabled;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26A")]
	private bool crosshairVisibleState;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26B")]
	private bool crosshairTextureState;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	[Tooltip("Set to true to display swap reticle when item under reticle will replace current weapon.")]
	public bool useSwapReticle;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[Tooltip("The texture used for the aiming crosshair.")]
	public Sprite aimingReticle;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[Tooltip("The texture used for the hitmarker.")]
	public Sprite hitmarkerReticle;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[Tooltip("The texture used for the pick up crosshair.")]
	public Sprite pickupReticle;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[Tooltip("The texture used for when the weapon under reticle will replace current weapon.")]
	public Sprite swapReticle;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[Tooltip("The texture used for showing that weapon under reticle cannot be picked up.")]
	public Sprite noPickupReticle;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[Tooltip("The texture used for the pick up crosshair.")]
	private Sprite pickupTex;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Color pickupReticleColor;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[HideInInspector]
	public Color reticleColor;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Color initialReticleColor;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private Color hitmarkerColor;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[Tooltip("Layers to include for crosshair raycast in hit detection.")]
	public LayerMask rayMask;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	[Tooltip("Distance that player can pickup and activate items.")]
	public float reachDistance;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private RaycastHit hit;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private RaycastHit hit2;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private Vector3 camCrosshairPos;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	[HideInInspector]
	public bool raycastCrosshair;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34D")]
	private bool pickUpBtnState;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34E")]
	[HideInInspector]
	public bool restarting;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public AudioClip painLittle;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public AudioClip painBig;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public AudioClip painDrown;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public AudioClip gasp;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public AudioClip catchBreath;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public AudioClip die;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public AudioClip dieDrown;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public AudioClip jumpfx;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public AudioClip enterBulletTimeFx;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public AudioClip exitBulletTimeFx;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public AudioClip hitMarker;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	[Tooltip("Particle effect to play when player blocks attack.")]
	public GameObject blockParticles;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	[Tooltip("Distance from camera to emit blocking particle effect.")]
	public float blockParticlesPos;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private ParticleSystem blockParticleSys;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private AudioSource[] aSources;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	[HideInInspector]
	public AudioSource otherfx;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	[HideInInspector]
	public AudioSource hitmarkfx;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private bool bullettimefxstate;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D9")]
	[HideInInspector]
	public bool blockState;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	[HideInInspector]
	public float blockAngle;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	[HideInInspector]
	public bool canBackstab;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
	private float moveCommandedTime;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	[HideInInspector]
	public bool menuDisplayed;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
	[HideInInspector]
	public float menuTime;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	[HideInInspector]
	public float pauseTime;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
	[HideInInspector]
	public bool paused;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private MainMenu MainMenuComponent;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public Transform myTransform;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public VrGranadeController m_GrenadeController;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public bool m_Ready;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public AudioSource[] AudioSources;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	private ZombieScoringManager m_ZombieScoringManager;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private WaitForSeconds waitBulletTime;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xF00B54", Offset = "0xF00B54", VA = "0xF00B54")]
	private void Start()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xF0129C", Offset = "0xF0129C", VA = "0xF0129C")]
	private void Update()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xF021F4", Offset = "0xF021F4", VA = "0xF021F4")]
	public void UpdateReticle(bool reticleType)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xF02290", Offset = "0xF02290", VA = "0xF02290")]
	private void UpdateHitmarker()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xF0237C", Offset = "0xF0237C", VA = "0xF0237C")]
	public void UpdateHitTime()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xF0239C", Offset = "0xF0239C", VA = "0xF0239C")]
	[IteratorStateMachine(typeof(<ActivateBulletTime>d__158))]
	public IEnumerator ActivateBulletTime(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xF0243C", Offset = "0xF0243C", VA = "0xF0243C")]
	public void HealPlayer(float healAmt, bool isHungryThirsty = false)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xEFCC14", Offset = "0xEFCC14", VA = "0xEFCC14")]
	public void ApplyDamage(float damage, [Optional] Transform attacker, bool isMeleeAttack = false)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xF02680", Offset = "0xF02680", VA = "0xF02680")]
	public void ApplyDamageEmerald(object[] DamageArray)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xF0278C", Offset = "0xF0278C", VA = "0xF0278C")]
	private void Die()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xF02850", Offset = "0xF02850", VA = "0xF02850")]
	public void RestartMap()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xF028D0", Offset = "0xF028D0", VA = "0xF028D0")]
	public Vector3 GetAudioListenerPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xF028F8", Offset = "0xF028F8", VA = "0xF028F8")]
	public FPSPlayer()
	{
	}
}
[Token(Token = "0x2000161")]
public class FPSRigidBodyWalker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000162")]
	public enum sprintType
	{
		[Token(Token = "0x4000BD3")]
		hold,
		[Token(Token = "0x4000BD4")]
		toggle,
		[Token(Token = "0x4000BD5")]
		both
	}

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SmoothMouseLook SmoothMouseLookComponent;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public InputControl InputComponent;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Footsteps FootstepsComponent;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject mainObj;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public GameObject weaponObj;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject CameraObj;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform myTransform;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 upVec;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 myUpVec;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform mainCamTransform;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Animator CameraAnimatorComponent;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public CameraControl CameraControlComponent;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Rigidbody RigidbodyComponent;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool playerParented;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public GameObject PlayerCharacterObj;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public PlayerCharacter PlayerCharacterComponent;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float inputXSmoothed;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public float inputYSmoothed;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public float inputX;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public float inputY;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float InputYLerpSpeed;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float InputXLerpSpeed;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float InputLerpSpeed;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[Header("Movement Speeds", order = 0)]
	[Tooltip("Speed that player moves when walking.")]
	[Space(10f, order = 1)]
	public float walkSpeed;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Tooltip("Speed that player moves when sprinting.")]
	public float sprintSpeed;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[Tooltip("Speed that player moves when swimming.")]
	public float swimSpeed;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Vertical speed of player jump.")]
	public float jumpSpeed;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Tooltip("Speed that player moves vertically when climbing.")]
	public float climbSpeed;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public float moveSpeedMult;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float limitStrafeSpeed;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Percentage to decrease movement speed when strafing diagonally.")]
	public float diagonalStrafeAmt;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[Tooltip("Percentage to decrease movement speed when moving backwards.")]
	public float backwardSpeedPercentage;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Percentage to decrease movement speed when crouching.")]
	public float crouchSpeedPercentage;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float crouchSpeedAmt;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Tooltip("Percentage to decrease movement speed when prone.")]
	public float proneSpeedPercentage;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float proneSpeedAmt;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Tooltip("Percentage to decrease movement speed when strafing directly left or right.")]
	public float strafeSpeedPercentage;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float speedAmtY;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float speedAmtX;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public bool zoomSpeed;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Tooltip("Percentage to decrease movement speed when zoomed.")]
	public float zoomSpeedPercentage;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float zoomSpeedAmt;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float speed;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[Tooltip("True if player should be allowed to sprint.")]
	[Space(10f, order = 3)]
	[Header("Sprinting", order = 2)]
	public bool allowSprinting;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Tooltip("User may set sprint mode to toggle, hold, or both (toggle on sprint button press, hold on sprint button hold).")]
	public sprintType sprintMode;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float sprintDelay;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[Tooltip("True if player should run only while staminaForSprint > 0.")]
	public bool limitedSprint;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[Tooltip("True if player should wait for stamina to fully regenerate before sprinting.")]
	public bool sprintRegenWait;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[Tooltip("Time it takes to fully regenerate stamina if sprintRegenWait is true.")]
	public float sprintRegenTime;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool breathFxState;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[Tooltip("Duration allowed for sprinting when limitedSprint is true.")]
	public float staminaForSprint;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float staminaForSprintAmt;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public bool catchBreathSound;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool staminaDepleted;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	[Tooltip("True if player should cancel sprint when strafing directly left or right.")]
	public bool forwardSprintOnly;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13F")]
	[Tooltip("True if player can reload while sprinting.")]
	public bool sprintReload;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Tooltip("True if player can Jump while sprinting and not cancel sprint.")]
	public bool jumpCancelsSprint;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[Header("Movement Options", order = 4)]
	[Space(10f, order = 5)]
	[Tooltip("True if player is allowed to use prone stance.")]
	public bool allowProne;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[Tooltip("True if player should be allowed to jump.")]
	public bool allowJumping;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[Tooltip("True if player should be allowed to crouch.")]
	public bool allowCrouch;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[Tooltip("True if player should be allowed to lean.")]
	public bool allowLeaning;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Tooltip("Distance left or right the player can lean.")]
	public float leanDistance;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[Tooltip("Pecentage the player can lean while standing.")]
	public float standLeanAmt;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Tooltip("Pecentage the player can lean while crouching.")]
	public float crouchLeanAmt;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float leanFactorAmt;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[HideInInspector]
	public GameObject leanObj;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public CapsuleCollider leanCol;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public float leanAmt;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[HideInInspector]
	public float leanPos;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float leanVel;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector3 leanCheckPos;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 leanCheckPos2;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[HideInInspector]
	public bool leanState;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
	[Tooltip("If true, gun will be lowered when climbing surfaces.")]
	public bool lowerGunForClimb;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
	[Tooltip("If true, gun will be lowered when swimming.")]
	public bool lowerGunForSwim;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18F")]
	[Tooltip("If true, gun will be lowered when holding object.")]
	public bool lowerGunForHold;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[HideInInspector]
	public bool holdingObject;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[HideInInspector]
	public float dropTime;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[Tooltip("If true, jumping animations will be played for weapon model.")]
	public bool jumpingAnims;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[Tooltip("Amount of time before player starts drowning.")]
	public float holdBreathDuration;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[Tooltip("Rate of damage to player while drowning.")]
	public float drownDamage;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[Tooltip("Angle of ground surface that player won't be allowed to move over.")]
	[Range(0f, 90f)]
	public int slopeLimit;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Tooltip("Maximum height of step that will be climbed.")]
	public float maxStepHeight;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[Tooltip("Amount to move player vertically over stairs for each step.")]
	public float stepHeight;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[Tooltip("Delay between step detections.")]
	public float stepDelay;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float lastStepTime;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float stepDist;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float cameraSmoothSpeedAmt;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private RaycastHit stepHit2;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private RaycastHit stepHit;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[Tooltip("True if player capsule friction should be reduced when moving to allow easier climbing up stairs. If false, player will jump over obstacles less, but will need invisible ramp colliders to go up stairs.")]
	public bool lowerMoveFriction;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	private bool frictionState;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	[Tooltip("Maximum allowed upward vertical speed of player.")]
	public float verticalSpeedLimit;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[HideInInspector]
	public bool grounded;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
	[HideInInspector]
	public bool rayTooSteep;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
	[HideInInspector]
	public bool capsuleTooSteep;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	[HideInInspector]
	public Vector3 velocity;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[HideInInspector]
	public CapsuleCollider capsule;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[HideInInspector]
	public SphereCollider sphereCol;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Vector3 sweepHeight;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private bool parentState;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24D")]
	[HideInInspector]
	public bool inWater;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24E")]
	[HideInInspector]
	public bool holdingBreath;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24F")]
	[HideInInspector]
	public bool belowWater;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[HideInInspector]
	public bool swimming;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
	[HideInInspector]
	public bool canWaterJump;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private float swimmingVerticalSpeed;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[HideInInspector]
	public float swimStartTime;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	[HideInInspector]
	public float diveStartTime;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[HideInInspector]
	public bool drowning;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private float drownStartTime;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Vector3 sweepBase;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	[HideInInspector]
	public float airTime;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private bool airTimeState;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	[Tooltip("Number of units the player can fall before taking damage.")]
	public float fallDamageThreshold;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[Tooltip("Multiplier of unit distance fallen to convert to hitpoint damage for the player.")]
	public float fallDamageMultiplier;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private float fallStartLevel;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[HideInInspector]
	public float fallingDistance;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private bool falling;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28D")]
	[HideInInspector]
	public bool climbing;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28E")]
	[HideInInspector]
	public bool noClimbingSfx;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public float verticalSpeedAmt;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	[Tooltip("Time in seconds allowed between player jumps.")]
	public float antiBunnyHopFactor;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public bool jumping;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float jumpTimer;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[HideInInspector]
	public bool jumpfxstate;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	[HideInInspector]
	public bool jumpBtn;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	[HideInInspector]
	public float landStartTime;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[HideInInspector]
	public bool canRun;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	[HideInInspector]
	public bool sprintActive;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AA")]
	private bool sprintBtnState;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private float sprintStartTime;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float sprintStart;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	[HideInInspector]
	public float sprintEnd;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool sprintEndState;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B9")]
	private bool sprintStartState;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BA")]
	[HideInInspector]
	public bool cancelSprint;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	[HideInInspector]
	public float sprintStopTime;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private bool sprintStopState;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	[HideInInspector]
	public float midPos;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[HideInInspector]
	public bool crouched;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C9")]
	[HideInInspector]
	public bool crouchRisen;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CA")]
	[HideInInspector]
	public bool crouchState;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float lastCrouchTime;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float crouchDelay;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	[HideInInspector]
	public bool prone;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D5")]
	[HideInInspector]
	public bool proneRisen;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D6")]
	[HideInInspector]
	public bool proneState;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D7")]
	[HideInInspector]
	public bool proneMove;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float lastProneTime;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public float proneDelay;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[HideInInspector]
	public bool moving;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	[HideInInspector]
	public float camDampSpeed;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private float lowpos;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[HideInInspector]
	public AudioClip landfx;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[HideInInspector]
	public bool landState;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	[Tooltip("Mask of layers that player will detect collisions with.")]
	public LayerMask clipMask;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[HideInInspector]
	public PhysicMaterial playerPhysicMaterial;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private RaycastHit rayHit;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private RaycastHit capHit;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private RaycastHit hit2;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	private Vector3 p1;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private Vector3 p2;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	[Header("Camera and Capsule Collider Heights", order = 6)]
	[Space(10f, order = 7)]
	[Tooltip("Vertical height of player eyes/face (used for player swimming/holding breath detection).")]
	public float eyeHeight;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	[HideInInspector]
	public Vector3 eyePos;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	[Tooltip("Y position/height of camera when standing.")]
	public float standingCamHeight;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	[Tooltip("Y position/height of camera when crouched.")]
	public float crouchingCamHeight;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	[Tooltip("Y position/height of camera when prone.")]
	public float proneCamHeight;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	[Tooltip("Height of player capsule while standing.")]
	public float standingCapsuleheight;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
	[Tooltip("Height of player capsule while crouching.")]
	public float crouchingCapsuleHeight;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public float capsuleCastHeight;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	private float capsuleCastDist;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private float rayCastHeight;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	[HideInInspector]
	public float playerHeightMod;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private float capsuleCheckRadius;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	private Vector3 checkDirection;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private int maxVelocityChange;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
	[HideInInspector]
	public Vector3 moveDirection;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private Vector3 velocityChange;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
	public Vector3 m_CrouchingCenter;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
	private bool m_Crouch;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41D")]
	private bool m_Sprint;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41E")]
	public bool m_Locked;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xF02B30", Offset = "0xF02B30", VA = "0xF02B30")]
	public FPSRigidBodyWalker()
	{
	}
}
[Token(Token = "0x2000163")]
public class InputControl : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VrInput vrInput;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	private float directionTresholdToReload;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[Space]
	public static bool m_Jump;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public bool fireHold;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[HideInInspector]
	public bool firePress;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[HideInInspector]
	public bool firePress2;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	[HideInInspector]
	public bool fireHold2;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool reloadPress;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool alternativeReload;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[HideInInspector]
	public bool fireModePress;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[HideInInspector]
	public bool jumpHold;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool jumpPress;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool crouchHold;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool crouchPress;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool crouchShortPress;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool crouchLongPress;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool proneHold;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[HideInInspector]
	public bool sprintHold;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[HideInInspector]
	public bool zoomHold;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool zoomPress;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool leanLeftHold;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[HideInInspector]
	public bool leanRightHold;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	[HideInInspector]
	public bool useHold;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool usePress;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[HideInInspector]
	public bool usePressUp;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	[HideInInspector]
	public bool toggleCameraHold;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	[HideInInspector]
	public bool toggleCameraDown;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool grenadeHold;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[HideInInspector]
	public bool deadzonePress;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[HideInInspector]
	public bool meleePress;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	[HideInInspector]
	public bool flashlightPress;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool holsterPress;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool dropPress;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[HideInInspector]
	public bool bulletTimePress;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	[HideInInspector]
	public bool moveHold;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool movePress;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[HideInInspector]
	public bool throwHold;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	[HideInInspector]
	public bool helpPress;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	[HideInInspector]
	public bool menuPress;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool pausePress;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[HideInInspector]
	public bool selectNextPress;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[HideInInspector]
	public bool selectPrevPress;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	[HideInInspector]
	public bool selectGrenPress;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool selectWeap1Press;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[HideInInspector]
	public bool selectWeap2Press;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	[HideInInspector]
	public bool selectWeap3Press;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	[HideInInspector]
	public bool selectWeap4Press;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool selectWeap5Press;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[HideInInspector]
	public bool selectWeap6Press;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[HideInInspector]
	public bool selectWeap7Press;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[HideInInspector]
	public bool selectWeap8Press;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool selectWeap9Press;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	[HideInInspector]
	public bool selectWeap0Press;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float mouseWheel;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool leftHold;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[HideInInspector]
	public bool rightHold;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[HideInInspector]
	public bool forwardHold;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[HideInInspector]
	public bool backHold;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float moveXButton;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public float moveYButton;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Minimum input amount to ignore (helps with worn-out joysticks that don't return to center).")]
	public float deadzone;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector2 moveInput;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector2 lookInput;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public float moveX;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public float moveY;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public float lookX;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public float lookY;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public bool xboxDpadLeftHold;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	[HideInInspector]
	public bool xboxDpadRightHold;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	[HideInInspector]
	public bool xboxDpadUpHold;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
	[HideInInspector]
	public bool xboxDpadDownHold;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool xboxDpadLeftPress;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	public bool xboxDpadRightPress;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[HideInInspector]
	public bool xboxDpadUpPress;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	[HideInInspector]
	public bool xboxDpadDownPress;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool xbdpLstate;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool xbdpRstate;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	private bool xbdpUstate;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	private bool xbdpDstate;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float crouchPressCount;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool crouchContinousPress;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool m_Locked;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	public bool m_AllowRotation;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
	private bool m_CombatLocked;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_CombatUnlockTime;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 grabPosition;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 currentPos;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float relativeDir;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isReloading;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int m_GrabGunLastModified;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_grabGunLastModifiedInSecs;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Action<bool> m_OnGrabGunModified;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public System.Action OnUsePress;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public System.Action OnFirePress;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public System.Action OnZWeaponSwitch;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public float doubleTapElapsedTime;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float doubleTapTimeLimit;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float doubleTapTimeLimit2;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int tapCount;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float holdingBtnTime;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool holdingBtn;

	[Token(Token = "0x17000153")]
	public static InputControl Instance
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xF02D38", Offset = "0xF02D38", VA = "0xF02D38")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xF02D80", Offset = "0xF02D80", VA = "0xF02D80")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public bool CombatLocked
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xF02DCC", Offset = "0xF02DCC", VA = "0xF02DCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xF02DD4", Offset = "0xF02DD4", VA = "0xF02DD4")]
	public void LockCombat(float duration)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xF02E0C", Offset = "0xF02E0C", VA = "0xF02E0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xF02FFC", Offset = "0xF02FFC", VA = "0xF02FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xF0304C", Offset = "0xF0304C", VA = "0xF0304C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xF04024", Offset = "0xF04024", VA = "0xF04024")]
	private float AccelerateInput(float input)
	{
		return default(float);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xF0406C", Offset = "0xF0406C", VA = "0xF0406C")]
	public void ResetAllInput()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xF03084", Offset = "0xF03084", VA = "0xF03084")]
	private void VrInputControl()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xF0438C", Offset = "0xF0438C", VA = "0xF0438C")]
	public void DoubleTapGrab()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xF04834", Offset = "0xF04834", VA = "0xF04834")]
	public void CheckDoubleTapGrenade()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xF04C44", Offset = "0xF04C44", VA = "0xF04C44")]
	public InputControl()
	{
	}
}
[Token(Token = "0x2000164")]
public class LeanColliderDamage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xF04C70", Offset = "0xF04C70", VA = "0xF04C70")]
	private void Start()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xF04CF4", Offset = "0xF04CF4", VA = "0xF04CF4")]
	public void ApplyDamage(float damage)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xF04D0C", Offset = "0xF04D0C", VA = "0xF04D0C")]
	public LeanColliderDamage()
	{
	}
}
[Token(Token = "0x2000165")]
public class PlayerCharacter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform headBone;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform chestBone;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform spineBone;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Animator shotgunAnimComponent;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject playerObj;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform playerTransform;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject weaponObj;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputControl InputComponent;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FPSRigidBodyWalker walkerComponent;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SmoothMouseLook SmoothMouseLookComponent;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CameraControl CameraControlComponent;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GunSway GunSwayComponent;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform myTransform;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public SkinnedMeshRenderer[] AllSkinnedMeshes;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public MeshRenderer[] AllMeshRenderers;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public GameObject fpBodyObj;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform fpBodyTransform;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Animator fpBodyAnim;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SkinnedMeshRenderer fpBodySkinnedMesh;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Tooltip("True if the visible body should be displayed in first person mode.")]
	public bool displayVisibleBody;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("The animator controller needed to animated the first person visible body.")]
	public RuntimeAnimatorController fpBodyController;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("Alternate material to use for the first person visible body.")]
	public Material alternateBodyMaterial;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Index number of character skinned mesh material to replace with alternate body material.")]
	public int materialToReplace;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Reference to the ThirdPersonWeapons.cs script for third person weapons (assigned automatically).")]
	public ThirdPersonWeapons weaponModels;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Tooltip("Angles of the third person weapon parent object.")]
	public Vector3 weaponModelParentAngles;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float bodyAng;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float bodyAngAmt;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float bodyAngSpeed;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 tempBodyAngles;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[Tooltip("Speed to rotate the player model's bones.")]
	public float boneSpeed;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float boneSpeedAmt;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float boneAng1;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float boneAng1Amt;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[Tooltip("Speed to rotate the player model's yaw angle.")]
	public float slerpSpeed;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float slerpSpeedAmt;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float idleTime;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float moveTime;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector2 moveInputs;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[Tooltip("Amount to offset the player's aiming angle.")]
	public float aimOffset;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float aimOffsetAmt;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[Tooltip("Amount to offset the player's aiming angle when swimming.")]
	public float swimFireAng;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float swimFireAngAmt;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 dampvel;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public Vector3 tempBodyPosition;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 tempSmoothedPos;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[Tooltip("Scale of model while standing.")]
	public float modelStandScale;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[Tooltip("Scale of model while crouching.")]
	public float modelCrouchScale;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float modelScaleAmt;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[Tooltip("Scale of player model in third person mode.")]
	public float tpMeshScale;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Tooltip("Amount to offset the player's yaw angle when moving forward.")]
	public float forwardYawAng;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[Tooltip("Amount to offset the player's yaw angle.")]
	public float idleYawAng;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[Tooltip("Amount to offset the player's yaw angle when unarmed.")]
	public float idleYawAngUnarmed;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[Tooltip("Amount to offset the player's yaw angle when unarmed and crouched.")]
	public float yawAngUnarmedCrouchStrafe;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float idleYawAngAmt;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[Tooltip("Pitch angle of visible body in first person mode.")]
	public float modelPitch;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[Tooltip("Pitch angle of visible body in first person mode when crouched.")]
	public float modelPitchCrouch;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[Tooltip("Pitch angle of visible body when sprinting in first person mode.")]
	public float modelPitchRun;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public float modelPitchAmt;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[Tooltip("Amount to add to forward position of visible player model when standing in first person mode.")]
	public float modelForward;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[Tooltip("Amount to add to forward position of visible player model when sprinting in first person mode.")]
	public float modelForwardSprint;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[Tooltip("Amount to add to forward position of visible player model when crouching in first person mode.")]
	public float modelForwardCrouch;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[Tooltip("Amount to add to forward position of visible player model when swimming in first person mode.")]
	public float modelForwardDown;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float sprintStrafeRight;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float modelForwardAmt;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	[HideInInspector]
	public float modelRightAmt;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[Tooltip("Amount to add to upward position of visible player model when standing in first person mode.")]
	public float modelUpFP;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	[Tooltip("Amount to add to upward position of FP shadow and third person player model when standing.")]
	public float modelUp;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[Tooltip("Amount to add to upward position of FP shadow and third person player model when crouching.")]
	public float modelUpCrouch;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[Tooltip("Amount to add to upward position of FP shadow and third person player model when crouching and unarmed.")]
	public float modelUpCrouchUnarmed;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[Tooltip("Amount to add to upward position of FP shadow and third person player model when sprinting.")]
	public float modelUpRun;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	[HideInInspector]
	public float modelUpAmt;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[HideInInspector]
	public float verticalPos;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float rotAngleAmt;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float facingAngleDelta;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Vector2 moveSmoothed;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float inputSmoothingSpeed;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[HideInInspector]
	public float fireTime;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	[Tooltip("Time to keep the weapon raised after firing.")]
	public float fireUpTime;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Tooltip("Time to keep the weapon raised when firing a single shot.")]
	public float fireShotTime;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private float forwardSpeedAmt;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float sprintTime;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float proneMoveTime;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool proneState;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float proneStanceTime;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private int proneTransition;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	[Tooltip("Duration of prone stance change transition.")]
	public float proneTransitionLength;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float weapDownTime;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int moveDir;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int moveState;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	[Tooltip("The xyz amounts of mouse input to apply to chest angles to make the player model look up or down.")]
	public Vector3 mLookAng;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[Tooltip("The xyz amounts of mouse input to apply to spine angles to make the player model look up or down.")]
	public Vector3 mLookAng2;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	[Tooltip("The xyz amounts of mouse input to apply to chest angles to make the player model look up or down when prone.")]
	public Vector3 mLookAngProne;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[Tooltip("The xyz amounts of mouse input to apply to spine angles to make the player model look up or down when prone.")]
	public Vector3 mLookAngProne2;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	[Tooltip("The xyz amounts of mouse input to apply to chest angles to make the player model look up or down when aiming bow.")]
	public Vector3 mLookAngBow;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[Tooltip("The xyz amounts of mouse input to apply to spine angles to make the player model look up or down when aiming bow.")]
	public Vector3 mLookAngBow2;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	[Tooltip("True if player model should always aim in first person mode (shadow will always aim in look direction).")]
	public bool fpTorsoAlwaysAims;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float torsoLayerWeight;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private float torsoLayerWeight2;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 chestAngles;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private Vector3 spineAngles;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Vector3 chestAnglesAmt;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private Vector3 spineAnglesAmt;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[Tooltip("Amount to rotate player's head to face forward when moving.")]
	public float headRotation;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	[Tooltip("Amount to rotate player's head to face forward when crouched.")]
	public float headRotationCrouch;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool reloadStartTimeState;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	[HideInInspector]
	public float reloadStartTime;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float reloadDurationAmt;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	[Tooltip("The duration of the reloading animation for rifles.")]
	public float reloadDurationRifle;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[Tooltip("The duration of the reloading animation for pistols.")]
	public float reloadDurationPistol;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	[Tooltip("The duration of the reloading animation for shotguns.")]
	public float reloadDurationShotgun;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float swimBlendAmt;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float swimBlend;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[Tooltip("The duration of the weapon switching animation.")]
	public float switchDuration;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	[HideInInspector]
	public int lastWeapon;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private float angOffset;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private bool meleeMove;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private float fireDelay;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	[Tooltip("The duration of the offhand melee animation.")]
	public float offhandMeleeTime;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[Tooltip("Delay before making arrow object visible after firing.")]
	public float arrowVisibleDelay;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	private bool offhandState;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F5")]
	private bool rotateHead;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F6")]
	private bool tpModeState;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F7")]
	private bool deadState;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private float turnTimer;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private Transform mainCamTransform;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[HideInInspector]
	public float tpswitchTime;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private float modelPosSmoothSpeed;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xF04D14", Offset = "0xF04D14", VA = "0xF04D14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xF0550C", Offset = "0xF0550C", VA = "0xF0550C")]
	public PlayerCharacter()
	{
	}
}
[Token(Token = "0x2000166")]
public class ReconfigurePrefab : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("True if dual camera setup for player prefab should be used, false to use single camera setup. Dual cameras are better for large scenes, and the single camera setup is better for small scenes.")]
	public bool TwoCameraSetup;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraControl CameraControlComponent;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Reference to weapon camera object.")]
	public GameObject WeaponCamera;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject MainCamera;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject WeaponObj;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Scale of weapons for the dual camera setup. Larger scale reduces jittering of models farther from scene origin.")]
	public float twoCamWeaponScale;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Scale of weapons for the single camera setup. Smaller scale allows weapon models to fit in player collider and receive scene shadows.")]
	public float oneCamWeaponScale;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Near clip plane for the single camera setup. Lower value prevents clipping of smaller weapon models, but increases z fighting.")]
	public float oneCamNearPlane;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("Near clip plane for the dual camera setup. Larger value decreases z fighting.")]
	public float twoCamNearPlane;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Near clip plane for the weapon camera. Larger value decreases z fighting.")]
	public float weaponCamNearPlane;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("True if the albedo color of the weapon model materials should should be dimmed to simulate shadows from geometry obstructing the sun (weapon models don't receive scene shadows with dual camera setup).")]
	public bool shadeWeaponByRaycast;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WeaponBehavior[] WeaponBehaviorComponents;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Layers for the main camera to render using dual camera setup (excludes gun and GUI layers).")]
	public LayerMask mainTwoCamMask;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Layers for the main camera to render using single camera setup (renders everything).")]
	public LayerMask mainOneCamMask;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool TwoCamState;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool OneCamState;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xF055F8", Offset = "0xF055F8", VA = "0xF055F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xF0571C", Offset = "0xF0571C", VA = "0xF0571C")]
	public ReconfigurePrefab()
	{
	}
}
[Token(Token = "0x2000167")]
public class sgs_Variables : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string emptyString;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float deltaTimeRealTime;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool isPaused;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool vrMode;

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xF05748", Offset = "0xF05748", VA = "0xF05748")]
	private void Update()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xF057B4", Offset = "0xF057B4", VA = "0xF057B4")]
	public sgs_Variables()
	{
	}
}
[Token(Token = "0x2000168")]
public class AlvoMeeleWeapon : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Swing configuration")]
	public float colliderActiveTime;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float requiredSpeed;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minSpeed;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeaponBehavior weaponBehaviour;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform t;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource aSource;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] soundFX;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioClip[] originalSoundFX;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CapsuleCollider triggerCollider;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Audio")]
	public float baseVolume;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float volumeMultiplier;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentSpeed;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool triggerActive;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float triggerActiveTime;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int m_otherHandLayer;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xF05828", Offset = "0xF05828", VA = "0xF05828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xF05860", Offset = "0xF05860", VA = "0xF05860")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xF0586C", Offset = "0xF0586C", VA = "0xF0586C")]
	public void SwitchSoundFX(AudioClip[] newClips)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xF05880", Offset = "0xF05880", VA = "0xF05880")]
	public void ResetSoundFX()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xF05894", Offset = "0xF05894", VA = "0xF05894")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xF05BD4", Offset = "0xF05BD4", VA = "0xF05BD4")]
	private void PlaySoundFX()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xF05DA8", Offset = "0xF05DA8", VA = "0xF05DA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xF064E4", Offset = "0xF064E4", VA = "0xF064E4")]
	public AlvoMeeleWeapon()
	{
	}
}
[Token(Token = "0x2000169")]
public class ArrowObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Rigidbody myRigidbody;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer myMeshRenderer;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool hit;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool falling;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Base damage of arrow without damage add amount.")]
	public float damage;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Maximum additional damage of arrow to inflict with full strength pull.")]
	public float damageAdd;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Force to apply to rigidbody that is hit with arrow.")]
	public float force;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float damageAddAmt;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AmmoPickup AmmoPickupComponent;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float hitTime;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float startTime;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool startState;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("Time that arrow object stays in scene after hitting object.")]
	public float waitDuration;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int objectPoolIndex;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider hitCol;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public BoxCollider myBoxCol;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject emptyObject;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Scale of the arrow object.")]
	public Vector3 scale;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Tooltip("Initial size of the arrow collider (increased after hit to make pick up easier).")]
	public Vector3 initialColSize;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("True if helper gizmos for arrow object should be shown to assist setting script values.")]
	public bool drawHelperGizmos;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public RaycastHit arrowRayHit;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("Distance in front of arrow to check for hits (scaled up at higher velocities).")]
	public float hitCheckDist;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[Tooltip("Layers that the arrow will collide with.")]
	public LayerMask rayMask;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public float velFactor;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public float visibleDelay;

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xF06508", Offset = "0xF06508", VA = "0xF06508")]
	private void Start()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xF065A4", Offset = "0xF065A4", VA = "0xF065A4")]
	public void InitializeProjectile()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xF067A4", Offset = "0xF067A4", VA = "0xF067A4")]
	public void DeleteEmptyObj()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xF0688C", Offset = "0xF0688C", VA = "0xF0688C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xF069D4", Offset = "0xF069D4", VA = "0xF069D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xF06D84", Offset = "0xF06D84", VA = "0xF06D84")]
	private void HitTarget()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xF07A78", Offset = "0xF07A78", VA = "0xF07A78")]
	public ArrowObject()
	{
	}
}
[Token(Token = "0x200016A")]
public class Bayonete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200016B")]
	[CompilerGenerated]
	private sealed class <waitForNewCollision>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bayonete <>4__this;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0xF09808", Offset = "0xF09808", VA = "0xF09808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0xF09850", Offset = "0xF09850", VA = "0xF09850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xF09708", Offset = "0xF09708", VA = "0xF09708")]
		[DebuggerHidden]
		public <waitForNewCollision>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xF0979C", Offset = "0xF0979C", VA = "0xF0979C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xF097A0", Offset = "0xF097A0", VA = "0xF097A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xF09810", Offset = "0xF09810", VA = "0xF09810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponBehavior weaponBehaviour;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool canCollide;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds waitConnection;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xF08AA8", Offset = "0xF08AA8", VA = "0xF08AA8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xF08AB4", Offset = "0xF08AB4", VA = "0xF08AB4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xF096A0", Offset = "0xF096A0", VA = "0xF096A0")]
	[IteratorStateMachine(typeof(<waitForNewCollision>d__5))]
	private IEnumerator waitForNewCollision()
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xF09730", Offset = "0xF09730", VA = "0xF09730")]
	public Bayonete()
	{
	}
}
[Token(Token = "0x200016C")]
public class GrenadeObject : PunBehaviour
{
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float fuseTimeAmt;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float startTime;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExplosiveObject ExplosiveObjectComponent;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected LevelManager levelManager;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected int collisionCount;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool beep;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	protected bool detonated;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float darkTimer;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float beepAtTime;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float beepPitch;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected AudioClip beepClip;

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xF09858", Offset = "0xF09858", VA = "0xF09858")]
	private void Start()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xF0985C", Offset = "0xF0985C", VA = "0xF0985C", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xF09908", Offset = "0xF09908", VA = "0xF09908", Slot = "62")]
	public virtual void SetupGrenade(Vector3 velocity, int worldNumber, int team, float fuse, bool isVr, bool beep)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xF09BB4", Offset = "0xF09BB4", VA = "0xF09BB4", Slot = "63")]
	protected virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xF09E38", Offset = "0xF09E38", VA = "0xF09E38", Slot = "64")]
	[PunRPC]
	protected virtual void EnableBeeping()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xF09E80", Offset = "0xF09E80", VA = "0xF09E80", Slot = "65")]
	public virtual void StopBeeping()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xF09EA8", Offset = "0xF09EA8", VA = "0xF09EA8", Slot = "66")]
	protected virtual void OnBeeped()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xF09EAC", Offset = "0xF09EAC", VA = "0xF09EAC", Slot = "67")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xF0A0C0", Offset = "0xF0A0C0", VA = "0xF0A0C0", Slot = "68")]
	[PunRPC]
	protected virtual void DetonateGrenade()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xF0A0E8", Offset = "0xF0A0E8", VA = "0xF0A0E8")]
	public GrenadeObject()
	{
	}
}
[Token(Token = "0x200016D")]
public class GunSway : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ironsights IronsightsComponent;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputControl InputComponent;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CameraControl CameraControlComponent;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public GameObject cameraObj;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject playerObj;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform myTransform;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float dampSpeed;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float dampVelocity1;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float dampVelocity2;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float dampVelocity6;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float dampVelocity7;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public Vector3 targetRotation;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Vector3 targetRotation2;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public float targetRotationRoll;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public float targetRotationPitch;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public Vector3 tempEulerAngles;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public float localSide;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public float localRaise;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float swingAmt;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float swingSpeed;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float localRoll;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public float localPitch;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float rollSpeed;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float zAxis1;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float zAxis2;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float gunBobRoll;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float gunBobYaw;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[Tooltip("Amount to sway weapon with mouse movement.")]
	public float swayAmount;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float swayVal;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[Tooltip("Amount to sway weapon roll angle with mouse movement.")]
	public float rollSwayAmount;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Amount to bob weapon yaw angles when player is walking.")]
	public float walkBobYawAmount;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Tooltip("Amount to bob weapon roll angles when player is walking.")]
	public float walkBobRollAmount;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("Amount to bob weapon yaw angles when player is sprinting.")]
	public float sprintBobYawAmount;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[Tooltip("Amount to bob weapon roll angles when player is sprinting.")]
	public float sprintBobRollAmount;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public bool dzAiming;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float zDampVel;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float zDamp;

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xF0A0F0", Offset = "0xF0A0F0", VA = "0xF0A0F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xF0A2C4", Offset = "0xF0A2C4", VA = "0xF0A2C4")]
	public GunSway()
	{
	}
}
[Token(Token = "0x200016E")]
public class Ironsights : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200016F")]
	public enum zoomType
	{
		[Token(Token = "0x4000D98")]
		hold,
		[Token(Token = "0x4000D99")]
		toggle,
		[Token(Token = "0x4000D9A")]
		both
	}

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public SmoothMouseLook SmoothMouseLook;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CamAndWeapAnims CamAndWeapAnimsComponent;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Animator CamAndWeapAnimator;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FPSRigidBodyWalker FPSWalker;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputControl InputComponent;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public WeaponPivot WeaponPivotComponent;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animation GunAnimationComponent;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CameraControl CameraControlComponent;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public GameObject playerObj;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public GameObject weaponObj;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public GameObject CameraObj;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Camera WeapCameraObj;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public float zPosRecNext;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public float zPosRec;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float recZDamp;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public Vector3 nextPos;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Vector3 newPos;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 bobPos;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 dampVel;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public Vector3 tempGunPos;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Tooltip("Default camera field of view value.")]
	public float defaultFov;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[Tooltip("Default camera field of view value while sprinting.")]
	public float sprintFov;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Amount to subtract from main camera FOV for weapon camera FOV.")]
	public float weaponCamFovDiff;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[HideInInspector]
	public float nextFov;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public float newFov;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float FovSmoothSpeed;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float dampFOV;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[HideInInspector]
	public bool dzAiming;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("User may set zoom mode to toggle, hold, or both (toggle on zoom button press, hold on zoom button hold).")]
	public zoomType zoomMode;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[Tooltip("Percentage to reduce mouse sensitivity when zoomed.")]
	public float zoomSensitivity;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip sightsUpSnd;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip sightsDownSnd;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public bool zoomSfxState;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[Header("Bobbing Speeds and Amounts", order = 0)]
	[Space(10f, order = 1)]
	[Tooltip("Camera position bobbing amount when walking (X = horizontal, Y = vertical).")]
	public Vector2 walkPositionBob;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[Tooltip("Camera angle bobbing amount when walking (yaw, pitch, roll).")]
	public Vector3 walkAngleBob;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Tooltip("Camera and weapon bobbing speed when walking.")]
	public float walkBobSpeed;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[Tooltip("Camera position bobbing amount when sprinting (X = horizontal, Y = vertical).")]
	public Vector2 sprintPositionBob;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[Tooltip("Camera angle bobbing amount when sprinting (yaw, pitch, roll).")]
	public Vector3 sprintAngleBob;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Tooltip("Camera and weapon bobbing speed when sprinting.")]
	public float sprintBobSpeed;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[Tooltip("Camera position bobbing amount when crouching (X = horizontal, Y = vertical).")]
	public Vector2 crouchPositionBob;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[Tooltip("Camera angle bobbing amount when crouching (yaw, pitch, roll).")]
	public Vector3 crouchAngleBob;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Tooltip("Camera and weapon bobbing speed when crouching.")]
	public float crouchBobSpeed;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[Tooltip("Camera position bobbing amount when prone (X = horizontal, Y = vertical).")]
	public Vector2 pronePositionBob;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[Tooltip("Camera angle bobbing amount when prone (yaw, pitch, roll).")]
	public Vector3 proneAngleBob;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Tooltip("Camera and weapon bobbing speed when prone.")]
	public float proneBobSpeed;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[Tooltip("Camera position bobbing amount when zoomed (X = horizontal, Y = vertical).")]
	public Vector2 zoomPositionBob;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[Tooltip("Camera angle bobbing amount when zoomed (yaw, pitch, roll).")]
	public Vector3 zoomAngleBob;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Tooltip("Camera and weapon bobbing speed when zoomed.")]
	public float zoomBobSpeed;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[Tooltip("Camera and weapon bobbing speed when zoomed and crouched.")]
	public float zoomBobSpeedCrouch;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Tooltip("Camera and weapon bobbing speed multiplier when swimming.")]
	public float swimBobSpeedFactor;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float swimBobSpeedAmt;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float moveInputAmt;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float moveInputSpeed;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[HideInInspector]
	public Vector2 camPositionBobAmt;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[HideInInspector]
	public Vector3 camAngleBobAmt;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[HideInInspector]
	public Vector3 weapPositionBobAmt;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public Vector3 weapAngleBobAmt;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	[Tooltip("Amount to roll the screen left or right when strafing and sprinting.")]
	public float sprintStrafeRoll;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[Tooltip("Amount to roll the screen left or right when strafing and walking.")]
	public float walkStrafeRoll;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	[Tooltip("Amount to roll the screen left or right when moving view horizontally.")]
	public float lookRoll;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[Tooltip("Amount to roll the screen left or right when moving view horizontally during bullet time.")]
	public float btLookRoll;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[Tooltip("Amount to roll the screen left or right when moving view horizontally and underwater.")]
	public float swimLookRoll;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[Tooltip("Speed to return to neutral roll values when above water.")]
	public float rollReturnSpeed;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	[Tooltip("Speed to return to neutral roll values when underwater.")]
	public float rollReturnSpeedSwim;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[Tooltip("Amount the camera should bob vertically to simulate player breathing.")]
	public float idleBobAmt;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[Tooltip("Amount the camera should bob vertically to simulate floating in water.")]
	public float swimBobAmt;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float strafeSideAmt;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float pivotBobAmt;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float horizontalGunPosAmt;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float sprintXPositionAmt;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float gunup;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float gunRunUp;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float yDampSpeed;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private float yDampSpeedAmt;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float zDampSpeed;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public float bobDampSpeed;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float bobMove;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float sideMove;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[HideInInspector]
	public float switchMove;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	[HideInInspector]
	public float climbMove;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float jumpmove;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	[HideInInspector]
	public float jumpAmt;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float idleX;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float idleY;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[HideInInspector]
	public float side;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	[HideInInspector]
	public float raise;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private AudioSource aSource;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[Tooltip("Point to rotate weapon models for vertical bobbing effect.")]
	public Transform pivot;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private float pivotAmt;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float dampVel2;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float rotateAmtNeutral;

	[Token(Token = "0x17000157")]
	public bool reloading
	{
		[Token(Token = "0x600085B")]
		[Address(RVA = "0xF0A300", Offset = "0xF0A300", VA = "0xF0A300")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xF0A3B8", Offset = "0xF0A3B8", VA = "0xF0A3B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xF0A69C", Offset = "0xF0A69C", VA = "0xF0A69C")]
	private void PlayWalkingAnim()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xF0A74C", Offset = "0xF0A74C", VA = "0xF0A74C")]
	private void PlaySprintingAnim()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xF0A7FC", Offset = "0xF0A7FC", VA = "0xF0A7FC")]
	private void PlayIdleAnim()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xF0A8AC", Offset = "0xF0A8AC", VA = "0xF0A8AC")]
	public Ironsights()
	{
	}
}
[Token(Token = "0x2000170")]
public class PlayerWeapons : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000171")]
	public enum SwitchState
	{
		[Token(Token = "0x4000DD0")]
		None,
		[Token(Token = "0x4000DD1")]
		ToSecondary,
		[Token(Token = "0x4000DD2")]
		ToPrimary
	}

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public System.Action m_WeaponStateChanged;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject playerObj;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputControl InputComponent;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public WeaponBehavior CurrentWeaponBehaviorComponent;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public WeaponBehavior CurrentSecondaryWeaponBehaviorComponent;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public CameraControl CameraControlComponent;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VrGranadeController grenadeController;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RespawnProtectMaterial m_RespawnProtectMaterial;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int firstWeapon;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int maxWeapons;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int backupWeapon;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public int totalWeapons;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public int currentWeapon;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] weaponOrder;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] secondaryWeaponOrder;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public WeaponBehavior[] weaponBehaviors;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public WeaponBehavior[] secondaryWeaponBehaviours;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform mainCamTransform;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Color waterMuzzleFlashColor;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float switchTime;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public bool m_IsSwitchingWpn;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip changesnd;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSource[] aSources;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AudioSource aSource;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Tooltip("Directional sun light object checked by raycast for weapon shading in shadows.")]
	public Transform sunLightObj;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Amount of time for bullet shell to stay parented to weapon object (causes shell to inherit weapon angular velocity, decrease value if shells stick with weapon model too long).")]
	public float shellParentTime;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Tooltip("Amount of time for bullet shell to stay parented to weapon object when deadzone aiming (causes shell to inherit weapon angular velocity, decrease value if shells stick with weapon model too long).")]
	public float shellDzParentTime;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("Amount of time for bullet shell to stay parented to weapon object when bullet time is active (causes shell to inherit weapon angular velocity, decrease value if shells stick with weapon model too long).")]
	public float shellBtParentTime;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ModSkins[] m_Modskins;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public CanvasClass m_CanvasClass;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	public Loadout m_CurrentLoadoutATM;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Loadout m_ModifiedLoadout;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ZombiesLoadout m_ZombiesLoadout;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int defaultMeeleId;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[HideInInspector]
	public bool secondarySelected;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public VrSettings settings;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public PlayerManager playerManager;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public DualWieldtypes primaryHandType;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public DualWieldtypes secondaryHandType;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public DualWieldtypes lastHandType;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int m_currentWeaponIndex;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public WeaponInformation defaultMeele;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	public WeaponInformation defaultWeapon;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public WeaponInformation bombWpn;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
	public WeaponInformation bazookaWpn;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private WeaponInformation wpnData;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private object[] emptyObj;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public KillstreakGun m_ActiveKillstreak;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private PlayerLocalData playerLocalData;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public ZombieSpecialBullet z_specialBullet;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool m_ChangeSoundMuted;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xF0ACDC", Offset = "0xF0ACDC", VA = "0xF0ACDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xF0B5C4", Offset = "0xF0B5C4", VA = "0xF0B5C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xF0B668", Offset = "0xF0B668", VA = "0xF0B668")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xF0B70C", Offset = "0xF0B70C", VA = "0xF0B70C")]
	private void OnControlersChange(int value, bool reset)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xF0B918", Offset = "0xF0B918", VA = "0xF0B918")]
	private void Update()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xF0BBC0", Offset = "0xF0BBC0", VA = "0xF0BBC0")]
	public void SwitchWeapon()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xF0BCFC", Offset = "0xF0BCFC", VA = "0xF0BCFC")]
	public void SwitchDualWieldWeapon(bool primary)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xF0C01C", Offset = "0xF0C01C", VA = "0xF0C01C")]
	public void EnableSecondaryMelee()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xF0BFC0", Offset = "0xF0BFC0", VA = "0xF0BFC0")]
	public void InstantOneHandSwitch(WeaponInformation wpn, bool primary = true)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xF0BC9C", Offset = "0xF0BC9C", VA = "0xF0BC9C")]
	public void SwitchToSecondary()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xF0BC40", Offset = "0xF0BC40", VA = "0xF0BC40")]
	public void SwitchToPrimary()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xF0C73C", Offset = "0xF0C73C", VA = "0xF0C73C")]
	public void SwitchToBomb()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xF0C754", Offset = "0xF0C754", VA = "0xF0C754")]
	public void SwitchToBazooka()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xF0C9C0", Offset = "0xF0C9C0", VA = "0xF0C9C0")]
	public void SwitchToId(int id)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xF0B87C", Offset = "0xF0B87C", VA = "0xF0B87C")]
	public void InstantWeaponSpawn()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xF0B490", Offset = "0xF0B490", VA = "0xF0B490")]
	private void SelectWeapon(WeaponInformation wpn, bool isPrimary, bool testSwitch = false)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xF0C0D4", Offset = "0xF0C0D4", VA = "0xF0C0D4")]
	private void DeActivateWeapons(bool primary, bool both = false)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xF0C1A0", Offset = "0xF0C1A0", VA = "0xF0C1A0")]
	private void ActivateWeapon(WeaponInformation wpn, bool primary)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xF0D290", Offset = "0xF0D290", VA = "0xF0D290")]
	public object[] GetCurrentWeaponData(bool secondaryDualWield = false)
	{
		return null;
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xF0D380", Offset = "0xF0D380", VA = "0xF0D380")]
	public object[] GetWeaponData(bool secondaryDualWield = false)
	{
		return null;
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xF0C020", Offset = "0xF0C020", VA = "0xF0C020")]
	public void PlayChangeSound()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xF0B28C", Offset = "0xF0B28C", VA = "0xF0B28C")]
	public void UpdateTotalWeapons()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xF0D400", Offset = "0xF0D400", VA = "0xF0D400")]
	public void ShowRespawnProtection(bool show, float hideDelay)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xF0D4F0", Offset = "0xF0D4F0", VA = "0xF0D4F0")]
	public void LockWeapons(bool lockweapon)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xF0D5DC", Offset = "0xF0D5DC", VA = "0xF0D5DC")]
	public void UpdateWeapons(bool secondary = false)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xF0D654", Offset = "0xF0D654", VA = "0xF0D654")]
	public bool GiveAmmo(int ammoAmmount, bool isSecondary = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xF0D804", Offset = "0xF0D804", VA = "0xF0D804")]
	public bool SetAmmo(int ammoAmount, bool isSecondary = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xF0D898", Offset = "0xF0D898", VA = "0xF0D898")]
	public int GetAmmo(bool isSecondary = false)
	{
		return default(int);
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xF0D908", Offset = "0xF0D908", VA = "0xF0D908")]
	public int GetBulletsLeft(bool isSecondary = false)
	{
		return default(int);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xF0DA40", Offset = "0xF0DA40", VA = "0xF0DA40")]
	public bool SetBulletsLeft(int bulletsleft, bool isSecondary = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xF0B060", Offset = "0xF0B060", VA = "0xF0B060")]
	public void SetLoadout()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xF0B368", Offset = "0xF0B368", VA = "0xF0B368")]
	public void GiveAllWeaponsAndAmmo()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xF0DBD8", Offset = "0xF0DBD8", VA = "0xF0DBD8")]
	public void OnMaxAmmoPerkChange(bool maxAmmoEquipped)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xF0DD1C", Offset = "0xF0DD1C", VA = "0xF0DD1C")]
	public void RefillAmmo()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xF0DE8C", Offset = "0xF0DE8C", VA = "0xF0DE8C")]
	public void ForceHalfAmmo()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xF0DFD8", Offset = "0xF0DFD8", VA = "0xF0DFD8")]
	public void ForceNeedToCock()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xF0E080", Offset = "0xF0E080", VA = "0xF0E080")]
	public void RefillHalfAmmo()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xF0E1B4", Offset = "0xF0E1B4", VA = "0xF0E1B4")]
	public void SetupTeamMask(LevelManager levelManager, int team)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xF0E2D4", Offset = "0xF0E2D4", VA = "0xF0E2D4")]
	public PlayerWeapons()
	{
	}
}
[Token(Token = "0x2000172")]
[Obsolete("Class is not in use and should not be referenced")]
public class LightFinder
{
	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Light[] lights;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xF0E3C4", Offset = "0xF0E3C4", VA = "0xF0E3C4")]
	public static void ClearLights()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xF0E40C", Offset = "0xF0E40C", VA = "0xF0E40C")]
	[Obsolete("Class is not in use and should not be referenced")]
	public static Light[] GetLights()
	{
		return null;
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xF0E524", Offset = "0xF0E524", VA = "0xF0E524")]
	public LightFinder()
	{
	}
}
[Token(Token = "0x2000173")]
public enum DualWieldtypes
{
	[Token(Token = "0x4000DD5")]
	Weapon,
	[Token(Token = "0x4000DD6")]
	Meele,
	[Token(Token = "0x4000DD7")]
	Grenade
}
[Token(Token = "0x2000174")]
public class ShellEjection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000175")]
	[CompilerGenerated]
	private sealed class <CalcShellPos>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShellEjection <>4__this;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0xF0ED1C", Offset = "0xF0ED1C", VA = "0xF0ED1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0xF0ED64", Offset = "0xF0ED64", VA = "0xF0ED64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xF0E8EC", Offset = "0xF0E8EC", VA = "0xF0E8EC")]
		[DebuggerHidden]
		public <CalcShellPos>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xF0EA78", Offset = "0xF0EA78", VA = "0xF0EA78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xF0EA7C", Offset = "0xF0EA7C", VA = "0xF0EA7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xF0ED24", Offset = "0xF0ED24", VA = "0xF0ED24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody RigidbodyComponent;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Rigidbody PlayerRigidbodyComponent;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterController charController;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject playerObj;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public GameObject gunObj;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform gunObjTransform;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Transform lerpShell;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 tempPos;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 tempRot;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool rotated;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform myTransform;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform FPSMainTransform;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("Sound effects to play when shell lands on a surface")]
	public AudioClip[] shellSounds;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool parentState;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool soundState;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public float shellRotateUp;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float shellRotateSide;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float shellRemovalTime;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public int shellDuration;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float startTime;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public int shellPoolIndex;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public int RBPoolIndex;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public bool dzAiming;

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xF0E52C", Offset = "0xF0E52C", VA = "0xF0E52C")]
	private void Start()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xF0E5C8", Offset = "0xF0E5C8", VA = "0xF0E5C8")]
	public void InitializeShell()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xF0E850", Offset = "0xF0E850", VA = "0xF0E850")]
	private void Update()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xF0E7E8", Offset = "0xF0E7E8", VA = "0xF0E7E8")]
	[IteratorStateMachine(typeof(<CalcShellPos>d__30))]
	private IEnumerator CalcShellPos()
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xF0E914", Offset = "0xF0E914", VA = "0xF0E914")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xF0EA68", Offset = "0xF0EA68", VA = "0xF0EA68")]
	public ShellEjection()
	{
	}
}
[Serializable]
[Token(Token = "0x2000176")]
public class MultiDimensionalWeapons
{
	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Main weapon object that player holds in third person for this weapon.")]
	public GameObject weaponObject;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Weapon object that player holds in their left hand in third person.")]
	public GameObject weaponObject2;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Weapon object that player holds on their back when in third person.")]
	public GameObject weaponObjectBack;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The muzzle flash object to display for this weapon in third person when firing.")]
	public Renderer muzzleFlashRenderer;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The position to emit smoke effects for this weapon.")]
	public Transform muzzleSmokePos;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("The position to emit shells for this weapon.")]
	public Transform shellEjectPos;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xF0ED6C", Offset = "0xF0ED6C", VA = "0xF0ED6C")]
	public MultiDimensionalWeapons()
	{
	}
}
[Token(Token = "0x2000177")]
public class ThirdPersonWeapons : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("List of weapon objects that correspond with the Weapon Order list of PlayerWeapons.cs.")]
	public List<MultiDimensionalWeapons> thirdPersonWeaponModels;

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xF0ED74", Offset = "0xF0ED74", VA = "0xF0ED74")]
	public ThirdPersonWeapons()
	{
	}
}
[Token(Token = "0x2000178")]
public class WeaponBehavior : GunInteractable
{
	[Token(Token = "0x2000179")]
	[CompilerGenerated]
	private sealed class <FireOneShot>d__370 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponBehavior <>4__this;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0xF15AE0", Offset = "0xF15AE0", VA = "0xF15AE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0xF15B28", Offset = "0xF15B28", VA = "0xF15B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xF1222C", Offset = "0xF1222C", VA = "0xF1222C")]
		[DebuggerHidden]
		public <FireOneShot>d__370(int <>1__state)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xF151D8", Offset = "0xF151D8", VA = "0xF151D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xF151DC", Offset = "0xF151DC", VA = "0xF151DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xF15AE8", Offset = "0xF15AE8", VA = "0xF15AE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017B")]
	[CompilerGenerated]
	private sealed class <MuzzFlash>d__385 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponBehavior <>4__this;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0xF1631C", Offset = "0xF1631C", VA = "0xF1631C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xF16364", Offset = "0xF16364", VA = "0xF16364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xF13C48", Offset = "0xF13C48", VA = "0xF13C48")]
		[DebuggerHidden]
		public <MuzzFlash>d__385(int <>1__state)
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xF15C74", Offset = "0xF15C74", VA = "0xF15C74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xF15C78", Offset = "0xF15C78", VA = "0xF15C78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xF16324", Offset = "0xF16324", VA = "0xF16324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017C")]
	[CompilerGenerated]
	private sealed class <BarrelSmoke>d__386 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponBehavior <>4__this;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <barrelSmokeTime>5__2;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xF17518", Offset = "0xF17518", VA = "0xF17518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xF17560", Offset = "0xF17560", VA = "0xF17560", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xF1736C", Offset = "0xF1736C", VA = "0xF1736C")]
		[DebuggerHidden]
		public <BarrelSmoke>d__386(int <>1__state)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xF17394", Offset = "0xF17394", VA = "0xF17394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xF17398", Offset = "0xF17398", VA = "0xF17398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xF17520", Offset = "0xF17520", VA = "0xF17520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017D")]
	[CompilerGenerated]
	private sealed class <SpawnShell>d__387 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponBehavior <>4__this;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0xF17A2C", Offset = "0xF17A2C", VA = "0xF17A2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0xF17A74", Offset = "0xF17A74", VA = "0xF17A74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xF17568", Offset = "0xF17568", VA = "0xF17568")]
		[DebuggerHidden]
		public <SpawnShell>d__387(int <>1__state)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xF17590", Offset = "0xF17590", VA = "0xF17590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xF17594", Offset = "0xF17594", VA = "0xF17594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xF17A34", Offset = "0xF17A34", VA = "0xF17A34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017E")]
	[CompilerGenerated]
	private sealed class <Reload>d__388 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponBehavior <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0xF182FC", Offset = "0xF182FC", VA = "0xF182FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0xF18344", Offset = "0xF18344", VA = "0xF18344", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xF17A7C", Offset = "0xF17A7C", VA = "0xF17A7C")]
		[DebuggerHidden]
		public <Reload>d__388(int <>1__state)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xF17AA4", Offset = "0xF17AA4", VA = "0xF17AA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xF17AA8", Offset = "0xF17AA8", VA = "0xF17AA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xF18304", Offset = "0xF18304", VA = "0xF18304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017F")]
	[CompilerGenerated]
	private sealed class <VrRecoverCounter>d__400 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponBehavior <>4__this;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xF183E0", Offset = "0xF183E0", VA = "0xF183E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0xF18428", Offset = "0xF18428", VA = "0xF18428", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xF1834C", Offset = "0xF1834C", VA = "0xF1834C")]
		[DebuggerHidden]
		public <VrRecoverCounter>d__400(int <>1__state)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xF18374", Offset = "0xF18374", VA = "0xF18374", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xF18378", Offset = "0xF18378", VA = "0xF18378", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xF183E8", Offset = "0xF183E8", VA = "0xF183E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int m_WeaponId;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[Tooltip("Weapon switch is managed different for these weapons")]
	public bool m_KillstreakSpecial;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool m_IsSniper;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool m_IsLocked;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	public bool m_IsUsable;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool m_IsGrenade;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	public bool m_IsMelee;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	[Tooltip("Should this weapon be null/unarmed? (true for first weapon in Weapon Order array of PlayerWeapons.cs).")]
	public bool m_Unarmed;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
	public bool m_UseWpnStats;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public WeaponStat m_WpnStats;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public WeaponInformation m_Wpn;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ModSkins m_ModSkins;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject m_LeftHand;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[Tooltip("Weapon Mesh object which will be animated and positioned by this script.")]
	public GameObject m_WeaponMesh;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Animator m_AnimatorComponent;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Animator m_WeaponAnimatorComponent;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public System.Action OnReloaded;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject m_StaticMagazine;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public RechargeSliderInteractable m_RechargeSlider;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Dock m_Dock;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool m_CockAfterEachShot;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	public bool m_BulletInChamber;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AnimatorOverrideController m_MotionController;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public AudioClipList m_MotionFireSfx;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[Space]
	public bool m_ManualReload;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	public bool m_CurrentManualReload;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
	public bool m_ContinueManualReload;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private MeshRenderer m_staticMagazineMeshR;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public DualWieldtypes m_DualWieldType;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public bool m_DualWield;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FD")]
	public bool m_SecondaryDw;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FE")]
	public bool m_DisplayBullets;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Transform m_DwBulletsTransform;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public TMP_Text m_DwBulletsLbl;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Image m_DwSpecialBulletImg;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public float m_AlternativeReloadPauseTime;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public bool m_AlternativeReload;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public HandsSetup m_HandsSetup;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public bool m_PistolTracking;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject m_MagazineGo;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Vector3 m_RightHandedLocalPosition;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public Vector3 m_RightHandedLocalRotation;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Vector3 m_LeftHandedLocalPosition;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public Vector3 m_LeftHandedLocalRotation;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public float m_MirrorScale;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Transform[] m_ExtraMirrorTransforms;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float[] m_ExtraMirrorScale;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[HideInInspector]
	public GameObject m_AmmoUiObj;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[HideInInspector]
	public GameObject m_AmmoUiObjShadow;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private AmmoText m_ammoText1;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private AmmoText m_ammoText2;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject m_GrenadeParent;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject m_FragGrenadeGo;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject m_FlashGrenadeGo;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject m_SmokeGrenadeGo;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject m_StickyGrenadeGo;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject m_MolotovGrenadeGo;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject m_SwitchTextGo;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public TMP_Text m_GrenadeText;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public VrGranadeController m_GrenadeController;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private GameObject m_lastActivatedGrenade;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[Tooltip("Should we use recoild with this gun")]
	public bool m_UseRecoilVr;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Transform m_VrAmmoUiPosition;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public Transform m_VrLeftGunSidePosition;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public Transform m_VrRigthGunSidePosition;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Transform m_VrMenuRotationPoint;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[Tooltip("Recoil pattern follow after every shoot. We only use x and y, z its used as a reference for the current y rotation")]
	[Space(10f)]
	public Vector3[] m_RecoilPattern;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[Tooltip("Base multiplier for recoil")]
	public float m_RecoilMultiplier;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	[Tooltip("Not Moving Recoil Multiplier")]
	public float m_WalkingRecoilMultiplier;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[Tooltip("Crouching recoil multiplier")]
	public float m_CrouchMultiplier;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	[Tooltip("Running recoil multiplier")]
	public float m_SprintMultiplier;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	[Tooltip("One hand recoil multiplier")]
	public float m_OneHandMultiplier;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public float m_SteveRecoilMultiplier;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[Tooltip("Sliding recoil multiplier")]
	[Space(10f)]
	public float m_SlidingMultiplier;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	[Tooltip("Multiplier for when the gun is supported on a collider")]
	public float m_SuportingMultiplier;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	[Tooltip("Time afterone firing to reset the gun pos")]
	public float m_RecoverTimeVr;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	[Tooltip("Speed for recover interpolation")]
	public float m_RecoilRecoverSpeedVr;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	[Tooltip("Speed of the recoil movement")]
	public float m_RecoilMovementSpeed;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public Transform m_RecoilTargetVr;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public Transform m_GunAnchorVr;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[Space(10f)]
	[Tooltip("Amount that shot accuracy will decrease over time.")]
	public float m_ShotSpread;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	[Tooltip("True if weapon accuracy should decrease with sustained fire.")]
	public bool m_UseRecoilIncrease;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	[Tooltip("Number of shots before weapon recoil increases with sustained fire.")]
	public int m_ShotsBeforeRecoil;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	[Tooltip("Growth Rate of sustained fire recoil for weapon accuracy.")]
	public float m_AimDirRecoilIncrease;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public int m_CollisionCount;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	public bool m_UseSidetoSideShake;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public float m_ShakeAmmount;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	public float m_ShakeSpeed;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private float m_shotSpreadAmt;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	private int m_patternIndex;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private Coroutine m_recoverCounterCoroutine;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private bool m_rotating;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	private float m_burstTimeCount;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private bool m_waitingForBurst;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private float m_applySpeed;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private bool m_shakeDirection;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	private Vector3 m_shakePosVector;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public System.Action OnThisWeaponFired;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public float m_DistanceOne;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	public float m_DistanceTwo;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private float m_distanceDamageMultiplier;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
	[Header("Inventory and Ammo")]
	public bool m_Reloading;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C5")]
	[Tooltip("True if player has this weapon in their inventory.")]
	public bool m_HaveWeapon;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C6")]
	[Tooltip("Should this weapon be selected in normal wepaon selection cycle? (false for grenades and offhand weapons).")]
	public bool m_CycleSelect;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C7")]
	[Tooltip("Can this weapon be dropped? False for un-droppable weapons like fists or sidearm.")]
	public bool m_Droppable;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	[Tooltip("Does this weapon count toward weapon total? False for weapons like fists or sidearm.")]
	public bool m_AddsToTotalWeaps;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	[HideInInspector]
	public int m_WeaponNumber;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private MagazineInteractable m_currentDockedMagazine;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private int _ammo;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	private List<string> m_registeredDockedMagazines;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	[HideInInspector]
	public int _bulletsLeft;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
	[Tooltip("Maximum amount of bullets per magazine.")]
	public int m_BulletsPerClip;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	[Tooltip("Number of bullets to reload per reload cycle (when < bulletsPerClip, allows reloading one or more bullets at a time).")]
	public int m_BulletsToReload;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
	[Tooltip("Maximum ammo amount player's inventory can hold for this weapon.")]
	public int m_MaxAmmo;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public Transform m_VRRayOriginDefault;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public Transform m_VRRaycOriginCurrent;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	[Tooltip("/Damage to inflict on objects with ApplyDamage(); function.")]
	public int m_Damage;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
	[Tooltip("Amount of physics push to apply to rigidbodies on contact.")]
	public int m_Force;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public float m_KillForceMultiplier;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
	[Tooltip("Range that weapon can hit targets.")]
	public float m_Range;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	[Tooltip("Time between shots.")]
	public float m_FireRate;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
	private float m_headShotMultiplier;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	private float m_limbMultiplier;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
	private int m_damageAmt;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	[Header("Shooting")]
	[Tooltip("Amount of projectiles to be fired per shot ( > 1 for shotguns).")]
	public int m_ProjectileCount;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
	[Tooltip("True if weapon should fire after releasing fire button.")]
	public bool m_FireOnRelease;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42D")]
	[HideInInspector]
	public bool m_FireOnReleaseState;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42E")]
	[HideInInspector]
	public bool m_DoReleaseFire;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private int m_hitCount;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
	public float m_PullBackAmt;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	[HideInInspector]
	public float m_FireHoldTimer;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
	[HideInInspector]
	public float m_FireHoldMult;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	[HideInInspector]
	public bool m_PullAnimState;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x441")]
	[HideInInspector]
	public bool m_ReleaseAnimState;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
	[HideInInspector]
	public float m_FuseTime;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	[Tooltip("True if weapon can switch between burst and semi-auto.")]
	public bool m_FireModeSelectable;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x449")]
	[Tooltip("True when weapon is in semi-auto mode.")]
	public bool m_SemiAuto;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44A")]
	[Tooltip("True when weapon is in burst mode.")]
	public bool m_BurstFire;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44B")]
	[Tooltip("If true, weapon will cycle all three burst modes.")]
	public bool m_BurstAndAuto;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
	[Tooltip("Amount of bullets to fire per burst.")]
	public int m_BurstShots;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	[Tooltip("If true, enemies will not hear weapon shooting.")]
	public bool m_SilentShots;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x451")]
	[Tooltip("True if weapon can be fired underwater.")]
	public bool m_FireableUnderwater;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x452")]
	[HideInInspector]
	public bool m_BurstState;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
	[HideInInspector]
	public int m_BurstShotsFired;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	private bool m_fireModeState;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x459")]
	private bool m_semiState;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45A")]
	private bool m_burstHold;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45B")]
	private bool m_initialSilentShots;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
	[Tooltip("False if weapon only needs ammo to fire, for grenades and other disposable, one-shot weapons.")]
	public bool m_DoReload;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45D")]
	[Tooltip("This weapon does not reload (doReload = false) but a weapon is still needed to fire ammo (like bow & arrow).")]
	public bool m_NonReloadWeapon;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45E")]
	[HideInInspector]
	public bool m_SwingSide;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	[HideInInspector]
	public float m_ShootStartTime;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
	[Tooltip("Delay after firing to check for hit, to simulate time taken for melee weapon to reach target (this weapon will be treated as a melee weapon when this value is > 0).")]
	public float m_MeleeSwingDelay;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	[Tooltip("Delay after firing to check for hit, to simulate time taken for melee weapon to reach target (this weapon will be treated as a melee weapon when this value is > 0).")]
	public float m_TpMeleeSwingDelay;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
	[Tooltip("True if this weapon has an offhand melee attack like pistol whip.")]
	public bool m_OffhandMeleeAttack;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	[Tooltip("Total time of offhand melee attack untill another can be done.")]
	public float m_MeleeAttackTime;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
	[Tooltip("Delay between offhand melee start time and hit time.")]
	public float m_OffhandMeleeDelay;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	[Tooltip("Range of offhand melee attack.")]
	public float m_OffhandMeleeRange;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
	[Tooltip("True if a melee attack should be performed with fire button if this is a ranged weapon without ammo.")]
	public bool m_MeleeIfNoAmmo;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	[HideInInspector]
	public float m_LastMeleeTime;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
	[HideInInspector]
	public bool m_MeleeActive;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	private int m_offhandMeleeDamage;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
	private int m_bayonetteDamage;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	private bool m_meleeBlendState;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
	[Space(10f, order = 13)]
	[Header("Animation Timings and Effects", order = 12)]
	public float m_ExtraSwitchTime;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	[Tooltip("Number than indicates the type of third person weapon animations to use. 0 = unarmed, 1 = one handed melee, 2 = two handed melee, 3 = pistol, 4 = shotgun (unused), 5 = automatic rifle, 6 = bow, 7 = grenade")]
	public int m_TpWeaponAnimType;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
	[Tooltip("True if weapon model in third person should animate shotgun pump")]
	public bool m_TpUseShotgunAnims;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49D")]
	[Tooltip("True if player model in third person should play sheild bash animation for offhand melee attack.")]
	public bool m_TpOffhandMeleeIsBash;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	[Tooltip("Time to play the left hand melee weapon animation in third person mode.")]
	public float m_TpSwingTimeL;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
	[Tooltip("Time to play the right hand melee weapon animation in third person mode.")]
	public float m_TpSwingTimeR;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	[Tooltip("Only layers to include in bullet hit detection (for efficiency).")]
	public LayerMask m_BulletMask;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
	private LayerMask m_liquidMask;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	[HideInInspector]
	public bool m_Shooting;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
	[HideInInspector]
	public float m_RecoveryTime;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	private bool m_canShoot;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
	[Tooltip("Time per reload cycle, should be shorter if reloading one bullet at a time and longer if reloading magazine.")]
	public float m_ReloadTime;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	[Tooltip("Amount of time needed to finish the ready anim after weapon has just been switched to/selected.")]
	private float m_readyTime;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
	[Tooltip("Percentage of total ready time for offhand throw (usually shorter than ready time).")]
	public float m_OffhandThrowReadyMod;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	[Tooltip("PS5 trigger force required to fire. 1 is the softest, 10 is the hardest.")]
	public int m_TriggerHapticsForce;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
	[HideInInspector]
	public int m_BulletsReloaded;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	[HideInInspector]
	public bool m_ReloadState;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
	[HideInInspector]
	public float m_ReadyTimeAmt;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	[HideInInspector]
	public bool m_IsOffhandThrow;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
	[HideInInspector]
	public float m_RecoveryTimeAmt;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	[HideInInspector]
	public float m_StartTime;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E4")]
	[HideInInspector]
	public float m_ReloadLastTime;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	[HideInInspector]
	public float m_ReloadLastStartTime;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4EC")]
	[HideInInspector]
	public bool m_LastReload;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public Transform m_ShotOrigin;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public Transform m_GrenadePoint;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	[Tooltip("Distance from muzzle flash to start shot (closer if using two cameras and weapon models are larger than player capsule).")]
	public float m_ShotOriginDist;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x504")]
	[HideInInspector]
	public Vector3 m_Origin;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	[HideInInspector]
	public Vector3 m_Direction;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
	[HideInInspector]
	public Vector3 m_DirectionAmt;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	private bool m_cantFireState;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52C")]
	private int m_bulletsNeeded;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	private float m_reloadStartTime;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x534")]
	private float m_reloadEndTime;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	[Tooltip("The game object that will be used as a muzzle flash.")]
	public Transform m_MuzzleFlash;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public Light[] m_MuzzleLights;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	[Tooltip("Time to wait until the muzzle light starts fading out.")]
	public float m_MuzzleLightDelay;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
	public float m_MuzzleLightReduction;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public Transform m_SilencerMuzzleFlashPosition;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	private Vector3 m_originalMuzzleFlashPosition;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
	[HideInInspector]
	public Color m_MuzzleFlashColor;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	[HideInInspector]
	public Renderer m_PmuzzleRenderer;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	[HideInInspector]
	public Transform m_ThirdPersonSmokePos;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	[HideInInspector]
	public bool m_FireActive;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x589")]
	[HideInInspector]
	public bool m_MuzzActive;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58C")]
	private float m_muzzleFlashReduction;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	private Renderer m_fPmuzzleRenderer;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	private Renderer m_muzzleSmokeComponent;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	private Renderer m_muzzleRendererComponent;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	private bool m_disableFiring;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	private Tween[] m_muzzleLightsTween;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	[Tooltip("True if barrel smoke should be emitted (long trail from end of barrel).")]
	public bool m_UseBarrelSmoke;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5BC")]
	[Tooltip("Number of consecutive shots required for barrel smoke to emit.")]
	public int m_BarrelSmokeShots;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	[Tooltip("Distance forward to emit smoke effects.")]
	public float m_SmokeForward;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	[Tooltip("Particle effect for smoke rising from barrel after firing more bullets than barrelSmokeShots amount.")]
	public ParticleSystem m_BarrelSmokeParticles;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	[Tooltip("Horizontal and vertical offset for emitting barrel smoke.")]
	public Vector3 m_BarrelSmokeOffset;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5DC")]
	[Tooltip("Duration of barrel smoke particle emission.")]
	public float m_BarrelSmokeDuration;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	private int m_bulletsJustFired;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E4")]
	private bool m_emitBarrelSmoke;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	private float m_barrelSmokeTime;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5EC")]
	private bool m_barrelSmokeActive;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5ED")]
	[Tooltip("True if muzzle smoke should be emitted (short cloud from end of barrel).")]
	public bool m_UseMuzzleSmoke;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	[Tooltip("Particle effect for puff of smoke when firing.")]
	public ParticleSystem m_MuzzleSmokeParticles;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	[Tooltip("Horizontal and vertical offset for emitting muzzle smoke.")]
	public Vector3 m_MuzzleSmokeOffset;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x604")]
	[Tooltip("Alpha transparency of muzzle smoke.")]
	public float m_MuzzleSmokeAlpha;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	[Tooltip("Offset from shot origin to emit tracers.")]
	public Vector3 m_TracerOffset;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x614")]
	[Tooltip("Distance from shot origin to emit tracers.")]
	public float m_TracerDist;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	[Tooltip("Distance from shot origin to emit tracers when swimming.")]
	public float m_TracerSwimDist;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61C")]
	[Tooltip("Distance from shot origin to emit tracers when in third person mode.")]
	public float m_TracerDistTp;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	private Vector3 m_tracerOrigin;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62C")]
	private Color m_muzzleSmokeColor;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63C")]
	[Tooltip("True if weapon should eject shell casing when firing.")]
	public bool m_SpawnShell;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	[Tooltip("Object pool index for the shell object with rigidbody (physics for ejected shell).")]
	public int m_ShellRbPoolIndex;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	[Tooltip("Position shell is ejected from when not zoomed.")]
	public Transform m_ShellEjectPosition;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	[Tooltip("Scale of shell, can be used to make different shaped shells from one model.")]
	public Vector3 m_ShellScale;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65C")]
	[Tooltip("Delay before ejecting shell (used for bolt action rifles and pump shotguns).")]
	public float m_ShellEjectDelay;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	[Tooltip("Overall movement force of ejected shell.")]
	public float m_ShellForce;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x664")]
	[Tooltip("Vertical amount to apply to shellForce.")]
	public float m_ShellUp;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	[Tooltip("Horizontal amount to apply to shellForce.")]
	public float m_ShellSide;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66C")]
	[Tooltip("Forward amount to apply to shellForce.")]
	public float m_ShellForward;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	[Tooltip("Amount of vertical shell rotation.")]
	public float m_ShellRotateUp;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x674")]
	[Tooltip("Amount of horizontal shell rotation.")]
	public float m_ShellRotateSide;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
	[Tooltip("Time in seconds that shells persist in the world before being removed.")]
	public int m_ShellDuration;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	private GameObject m_shell;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	private GameObject m_shell2;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	private Transform m_shellEjectPos;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	private Transform m_shellEjectPositionTp;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	private Vector3 m_shellEjectDirection;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
	private AudioSource[] m_aSources;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
	[Tooltip("Offhand melee attack sound effect.")]
	public AudioClip m_MeleeSnd;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	[Tooltip("Volume of firing sound effect.")]
	public float m_FireVol;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C4")]
	[Tooltip("Volume of gun sound effects.")]
	public float m_OtherVol;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
	[Tooltip("Weapon reloading sound effect.")]
	public AudioClip m_ReloadSnd;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	[Tooltip("Usually shell reload sound + shotgun pump or rifle chambering sound.")]
	public AudioClip m_ReloadLastSnd;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
	[Tooltip("Sound effect for when weapon has no ammo.")]
	public AudioClip m_NoammoSnd;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	[Tooltip("Sound effect for wepaon readying animation.")]
	public AudioClip m_ReadySnd;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
	[Tooltip("Sound effect for pulling weapon back if firing on release of fire button.")]
	public AudioClip m_PullSnd;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	[Tooltip("Sound effect for blocking of attack.")]
	public AudioClip m_BlockSound;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
	[Tooltip("Sound effect for collecting ammo")]
	public AudioClip m_AmmoPickUpSound;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
	public AudioClip m_GrabGunSound;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
	public AudioClip m_ReleaseGunSound;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
	public AudioClip m_ReloadActivatedSound;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
	public AudioClip m_AmmoFullPickUp;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
	[Range(1f, 2f)]
	[Space]
	public float m_ExtraFireVolume;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
	[Reorderable]
	public AudioClipList m_FireSounds;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
	public AudioClipList m_SilencedFireSounds;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
	[Reorderable]
	public AudioClipList m_ReloadSounds;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
	public AudioClip m_BoltActionSound;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
	public bool m_UseBoltActionSound;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
	public AudioSource m_AutoFireSrc1;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
	public AudioSource m_AutoFireSrc2;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
	public AudioSource m_BoltAction;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
	public AudioSource m_Foleyfx;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
	public AudioSource m_Firefx;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
	public AudioSource m_Otherfx;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
	private AudioSource m_autoFireAsource1;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
	private AudioSource m_autoFireAsource2;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
	private bool m_curAutofireAsource;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x794")]
	private float m_firePitch;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
	private int m_lastFireSndIndex;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79C")]
	private int m_lastReloadSndIndex;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
	private double m_nextFireTime;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
	private double m_schedulingTime;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
	private double m_lastFireTime;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
	private double m_firingPauseMinimumTime;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
	private double m_time;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
	private double m_oldTime;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
	private float m_oldTimeChecked;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D4")]
	private bool m_audioDisabled;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D5")]
	private bool m_firePressInput;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D6")]
	public bool m_fireHoldInput;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D8")]
	private float m_rangeAmt;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DC")]
	private float m_shotDistance;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
	private float m_aimDown;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E4")]
	private int m_dwAmmo;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
	private int m_dwBulletsLeft;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
	[HideInInspector]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F8")]
	[HideInInspector]
	public Ironsights m_IronSightsComponent;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
	[HideInInspector]
	public WeaponEffects m_WeaponEffectsComponent;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x808")]
	[HideInInspector]
	public PlayerWeapons m_PlayerWeaponsComponent;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
	[HideInInspector]
	public AlvoMeeleWeapon m_MeleeWeaponComponent;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x818")]
	[HideInInspector]
	public Animator m_PlayerModelAnim;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
	[HideInInspector]
	public Rigidbody m_PlayerRigidBody;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
	private VrInput m_vrInputWb;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
	private AzuObjectPool m_objectPool;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x838")]
	private InputControl m_inputComponent;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
	private FPSPlayer m_fpsPlayerComponent;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x848")]
	private VrPlayerController m_vrPlayerController;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
	private FPSRigidBodyWalker m_fpsWalkerComponent;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
	private Transform m_rightHandController;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
	private Transform m_myTransform;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x868")]
	private Transform m_mainCamTransform;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
	private AudioClipList m_originalFireSounds;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x878")]
	private RuntimeAnimatorController m_originalController;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
	private WaitForSeconds m_waitMeleeSwing;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x888")]
	private WaitForSeconds m_waitShellEject;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
	private WaitForSeconds m_waitReloadTime;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x898")]
	private WaitForSeconds m_waitBarrelSmoke;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
	private WaitForSeconds m_waitReloadDelta;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A8")]
	private WaitForSeconds m_waitRecoverTimeVr;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
	private WaitForSeconds m_waitOffhandMeleeSwing;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B8")]
	private WaitForSeconds m_waitAlternativeReload;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int TintColor;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Reload2;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int Reload1;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int Fire1;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int Neutral;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int Idle;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int MeleeSwingRight;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int SwingRight;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int MeleeSwingLeft;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int SwingLeft;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int Melee;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int OffhandMelee;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int ReloadLast;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int ReloadSingle;

	[Token(Token = "0x1700015A")]
	public MagazineInteractable CurrentDockedMagazine
	{
		[Token(Token = "0x6000899")]
		[Address(RVA = "0xF0EDF0", Offset = "0xF0EDF0", VA = "0xF0EDF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600089A")]
		[Address(RVA = "0xF0EDF8", Offset = "0xF0EDF8", VA = "0xF0EDF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	[Tooltip("Ammo amount for this weapon in player's inventory.")]
	public int Ammo
	{
		[Token(Token = "0x600089B")]
		[Address(RVA = "0xF0EE44", Offset = "0xF0EE44", VA = "0xF0EE44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600089C")]
		[Address(RVA = "0xF0D6F0", Offset = "0xF0D6F0", VA = "0xF0D6F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	private bool IsMotionReload
	{
		[Token(Token = "0x600089D")]
		[Address(RVA = "0xF0EE4C", Offset = "0xF0EE4C", VA = "0xF0EE4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015D")]
	public bool NeedsCocking
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0xF0EF0C", Offset = "0xF0EF0C", VA = "0xF0EF0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015E")]
	[Tooltip("Bullets left in magazine.")]
	public int BulletsLeft
	{
		[Token(Token = "0x600089F")]
		[Address(RVA = "0xF0D978", Offset = "0xF0D978", VA = "0xF0D978")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xF0DAB4", Offset = "0xF0DAB4", VA = "0xF0DAB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	[HideInInspector]
	public bool CanFire
	{
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xF0F11C", Offset = "0xF0F11C", VA = "0xF0F11C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xF0F1E0", Offset = "0xF0F1E0", VA = "0xF0F1E0")]
	private new void Awake()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xF0F358", Offset = "0xF0F358", VA = "0xF0F358")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xF0F7D0", Offset = "0xF0F7D0", VA = "0xF0F7D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xF102D0", Offset = "0xF102D0", VA = "0xF102D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xF0C9E0", Offset = "0xF0C9E0", VA = "0xF0C9E0")]
	public void InitializeWeapon()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xF0F604", Offset = "0xF0F604", VA = "0xF0F604")]
	public void CheckWeaponMagazine()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xF10680", Offset = "0xF10680", VA = "0xF10680")]
	public void SetStaticMagazine()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xF0FE7C", Offset = "0xF0FE7C", VA = "0xF0FE7C")]
	public void SetLeftHandiness()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xF10958", Offset = "0xF10958", VA = "0xF10958")]
	public void DebugSetLeftHandedMirror()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xF10A9C", Offset = "0xF10A9C", VA = "0xF10A9C")]
	public void DebugRevertLeftHandedMirror()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xF10234", Offset = "0xF10234", VA = "0xF10234")]
	public void ShowHideBulletText()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xF0F354", Offset = "0xF0F354", VA = "0xF0F354")]
	public void PicoSpatialSetup()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xF10BDC", Offset = "0xF10BDC", VA = "0xF10BDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xF10E88", Offset = "0xF10E88", VA = "0xF10E88")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xF11B0C", Offset = "0xF11B0C", VA = "0xF11B0C")]
	private void Fire()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xF121C4", Offset = "0xF121C4", VA = "0xF121C4")]
	[IteratorStateMachine(typeof(<FireOneShot>d__370))]
	private IEnumerator FireOneShot()
	{
		return null;
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xF0F110", Offset = "0xF0F110", VA = "0xF0F110")]
	public void StopBurst()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xF08DC8", Offset = "0xF08DC8", VA = "0xF08DC8")]
	public bool HitObjectTrigger(Collider other, Vector3 point, WFilter wf = WFilter.Melee, float damageMultiplier = 1f, bool useWeaponDamage = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xF122C8", Offset = "0xF122C8", VA = "0xF122C8")]
	private void HitObject(RaycastHit hit, Vector3 directionArg, bool isSecondCast = false)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xF13754", Offset = "0xF13754", VA = "0xF13754")]
	private void DoHitObject(int localSoundID, RaycastHit hit, bool isHeadshot)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xF12254", Offset = "0xF12254", VA = "0xF12254")]
	private void DoHitObjectTrigger(int localSoundID, Vector3 point, bool isHeadShot)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xF137E0", Offset = "0xF137E0", VA = "0xF137E0")]
	public void EnableDisableSecondaryUI(bool enable = true)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xF1389C", Offset = "0xF1389C", VA = "0xF1389C")]
	public void HideLeftHand(bool enable)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xF0E128", Offset = "0xF0E128", VA = "0xF0E128")]
	public void PickUpAmmo(bool fillClip = true)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xF0DC90", Offset = "0xF0DC90", VA = "0xF0DC90")]
	public void MaxAmmoPerkChanged(bool maxAmmoEquipped)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xF0DB60", Offset = "0xF0DB60", VA = "0xF0DB60")]
	public void SetStats()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xF1208C", Offset = "0xF1208C", VA = "0xF1208C")]
	public void PlayerAltAutoFireSources(double playTime)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xF13AE8", Offset = "0xF13AE8", VA = "0xF13AE8")]
	private AudioClip GetNextFireSound()
	{
		return null;
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xF13B78", Offset = "0xF13B78", VA = "0xF13B78")]
	private AudioClip GetNextReloadSound()
	{
		return null;
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xF13938", Offset = "0xF13938", VA = "0xF13938")]
	public void PlayFoley(int index)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xF13BE0", Offset = "0xF13BE0", VA = "0xF13BE0")]
	[IteratorStateMachine(typeof(<MuzzFlash>d__385))]
	private IEnumerator MuzzFlash()
	{
		return null;
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xF13C70", Offset = "0xF13C70", VA = "0xF13C70")]
	[IteratorStateMachine(typeof(<BarrelSmoke>d__386))]
	private IEnumerator BarrelSmoke()
	{
		return null;
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xF13CD8", Offset = "0xF13CD8", VA = "0xF13CD8")]
	[IteratorStateMachine(typeof(<SpawnShell>d__387))]
	private IEnumerator SpawnShell()
	{
		return null;
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xF13D40", Offset = "0xF13D40", VA = "0xF13D40")]
	[IteratorStateMachine(typeof(<Reload>d__388))]
	private IEnumerator Reload()
	{
		return null;
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xF13DA8", Offset = "0xF13DA8", VA = "0xF13DA8")]
	public bool CheckForReload()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xF13E58", Offset = "0xF13E58", VA = "0xF13E58")]
	public void HideAllGrenadesVR()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xF14074", Offset = "0xF14074", VA = "0xF14074")]
	public void HideGrenadesVr()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xF14170", Offset = "0xF14170", VA = "0xF14170")]
	public void HideGrenade(int index)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xF1426C", Offset = "0xF1426C", VA = "0xF1426C")]
	public void ShowGrenade(int index, string grenadeName)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xF145D4", Offset = "0xF145D4", VA = "0xF145D4")]
	private Vector3 SprayDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xF10490", Offset = "0xF10490", VA = "0xF10490")]
	private void CancelWeaponPull(bool neutralAnim = false)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xF10538", Offset = "0xF10538", VA = "0xF10538")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xF11914", Offset = "0xF11914", VA = "0xF11914")]
	private void UpdateAmmoUI()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xF146B8", Offset = "0xF146B8", VA = "0xF146B8")]
	private void ModifyAmmoText(int bulletsLeft, int ammo)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xF14774", Offset = "0xF14774", VA = "0xF14774")]
	private void VrFireRecoil()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xF149D8", Offset = "0xF149D8", VA = "0xF149D8")]
	[IteratorStateMachine(typeof(<VrRecoverCounter>d__400))]
	private IEnumerator VrRecoverCounter()
	{
		return null;
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xF10428", Offset = "0xF10428", VA = "0xF10428")]
	private void ResetGunPosition()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xF10BEC", Offset = "0xF10BEC", VA = "0xF10BEC")]
	private void InterpolateGunRecoil()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xF14A40", Offset = "0xF14A40", VA = "0xF14A40")]
	public bool RegisterMagazine(string hash)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xF14B1C", Offset = "0xF14B1C", VA = "0xF14B1C")]
	public bool MagazineRegistered(string hash)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xF0DE20", Offset = "0xF0DE20", VA = "0xF0DE20")]
	public void ClearRegisteredMagazines()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xF14B74", Offset = "0xF14B74", VA = "0xF14B74", Slot = "10")]
	public override bool CompatibleInteractableGun()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xF14B7C", Offset = "0xF14B7C", VA = "0xF14B7C")]
	public WeaponBehavior()
	{
	}
}
[Token(Token = "0x2000180")]
public class WeaponPivot : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GunSway GunSwayComponent;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FPSRigidBodyWalker FPSWalkerComponent;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WeaponBehavior WeaponBehaviorComponent;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SmoothMouseLook SmoothMouseLookComponent;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InputControl InputComponent;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerWeapons PlayerWeaponsComponent;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ironsights IronsightsComponent;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject playerObj;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Prevent deadzone aiming with this weapon.")]
	public bool noDeadzoneAiming;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[Tooltip("True if weapon should aim with deadzone (free/unlocked aiming).")]
	public bool deadzoneLooking;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[Tooltip("True if weapon should zoom with deadzone (free/unlocked zooming).")]
	public bool deadzoneZooming;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[Tooltip("True if weapon should sway towards view movement direction.")]
	public bool swayLeadingMode;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool wasDeadzoneZooming;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Tooltip("True if crosshair should follow weapon when swaying.")]
	public bool swayLeadingFollowCrosshair;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Vertical speed of deadzone aiming.")]
	public float verticalSpeed;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Horizontal speed of deadzone aiming.")]
	public float horizontalSpeed;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Amount of weapon sway in leading mode.")]
	public float swayAmount;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Speed that weapon returns to center position after swaying or deadzone zooming.")]
	public float neutralSpeed;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Pivot point to rotate weapon around in deadzone aiming mode.")]
	public Transform pivot;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Transform childTransform;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public Transform myTransform;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float cameraParentYaw;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public Vector3 rotateAmtNeutral;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Vector3 mouseOffsetTarg;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public Vector3 animOffsetTarg;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float animSpeed;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 velocity2;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float velocity3;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Animator PivotAnimatorComponent;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public float y;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float yTarg;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float sumY;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[HideInInspector]
	public float x;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float xTarg;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float sumX;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool init;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool dzSprintState;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool dzProneState;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	private bool dzClimbState;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool dzAimState;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool dzZoomState;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float swayAmt;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector2 inputSmoothDampVel;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float leadRoll;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float leadPitch;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[Tooltip("Max camera zoom FOV that weapon can free aim with (allows sniper rifles to zoom normally in free aiming mode)")]
	public float maxFreeAimFOV;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int WeaponJump;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int WeaponLand;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xF18430", Offset = "0xF18430", VA = "0xF18430")]
	private void Start()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xF1864C", Offset = "0xF1864C", VA = "0xF1864C")]
	private void HorizontalLook()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xF18710", Offset = "0xF18710", VA = "0xF18710")]
	private void VerticalLook()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xF18764", Offset = "0xF18764", VA = "0xF18764")]
	public void PlayJumpAnim()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xF187F0", Offset = "0xF187F0", VA = "0xF187F0")]
	public void PlayLandAnim()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xF1887C", Offset = "0xF1887C", VA = "0xF1887C")]
	public void ToggleDeadzoneZooming()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xF188E8", Offset = "0xF188E8", VA = "0xF188E8")]
	public void ToggleSwayLeadingMode()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xF188F8", Offset = "0xF188F8", VA = "0xF188F8")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xF18978", Offset = "0xF18978", VA = "0xF18978")]
	public WeaponPivot()
	{
	}
}
[Token(Token = "0x2000181")]
public class AIManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000182")]
	[CompilerGenerated]
	private sealed class <RespawnShooterBot>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIManager <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0xF1AEEC", Offset = "0xF1AEEC", VA = "0xF1AEEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0xF1AF34", Offset = "0xF1AF34", VA = "0xF1AF34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xF1A66C", Offset = "0xF1A66C", VA = "0xF1A66C")]
		[DebuggerHidden]
		public <RespawnShooterBot>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xF1AC60", Offset = "0xF1AC60", VA = "0xF1AC60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xF1AC64", Offset = "0xF1AC64", VA = "0xF1AC64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xF1AEF4", Offset = "0xF1AEF4", VA = "0xF1AEF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager levelManager;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AIShooterBotManager m_AIShooterBotManager;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float singlePlayerSpawnRange;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SpawnedTarget> allTargets;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask playerTargetMask;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask playerTargetMaskWithObstacles;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask deathMatchTargets;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask m_Team1;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask m_Team2;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask m_Team1L;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask m_team2L;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float timeToCheckDistance;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float distanceCheckTimer;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float gotoPointRange;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeToUpdateWave;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float waveTimer;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<ShooterBots> allShooterBots;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int spawnBot;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float respawnTimer;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isSurvival;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float fovAngle;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[Space]
	private LayerMask m_ObstructionMaskForBotSpawn;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SpawnArea[] m_FFAPoints;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SpawnArea[] m_TDMPointsTeam1;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SpawnArea[] m_TDMPointsTeam2;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xF18A40", Offset = "0xF18A40", VA = "0xF18A40")]
	public GameObject SpawnAI(string aiToSpawn, Transform spawnPosition)
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xF18BE4", Offset = "0xF18BE4", VA = "0xF18BE4")]
	public bool IsTargetInFOV(Transform eyeTransform, Vector3 lookDirection, Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xF18D44", Offset = "0xF18D44", VA = "0xF18D44")]
	public PlayerProfile CreateBotData()
	{
		return null;
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xF18DD8", Offset = "0xF18DD8", VA = "0xF18DD8")]
	public AlvoSocialManager.RandomBotData GetRandomBot(List<PlayerProfile> currentPlayers)
	{
		return default(AlvoSocialManager.RandomBotData);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xF18F74", Offset = "0xF18F74", VA = "0xF18F74")]
	public void SpawnBotNetwork(int worldNumber, int team)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xF193D0", Offset = "0xF193D0", VA = "0xF193D0")]
	private void SpawnBot(object[] data, int team, string spawnName, Vector3 spawnPosition)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xF19A68", Offset = "0xF19A68", VA = "0xF19A68")]
	public void UpdateAI()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xF1A604", Offset = "0xF1A604", VA = "0xF1A604")]
	[IteratorStateMachine(typeof(<RespawnShooterBot>d__32))]
	private IEnumerator RespawnShooterBot()
	{
		return null;
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xF18B78", Offset = "0xF18B78", VA = "0xF18B78")]
	public bool GetSpawnPoint(Vector3 center, float sampleRange, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xF1A7C0", Offset = "0xF1A7C0", VA = "0xF1A7C0")]
	public bool GetMovePoint(Vector3 center, float sampleRange, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xF1A694", Offset = "0xF1A694", VA = "0xF1A694")]
	private Vector3 NavmeshRandomPosition(Vector3 center, float sampleRange, bool checkForObstructions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xF1A82C", Offset = "0xF1A82C", VA = "0xF1A82C")]
	public Quaternion LookAtTarget(Vector3 currentTargetPosition, Vector3 transformLocalPosition, Quaternion transformRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xF1A95C", Offset = "0xF1A95C", VA = "0xF1A95C")]
	public Vector3 SamplePosition(Transform transform, Vector3 nextPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xF198F0", Offset = "0xF198F0", VA = "0xF198F0")]
	private byte[] GetRandomEquipment()
	{
		return null;
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xF1AA44", Offset = "0xF1AA44", VA = "0xF1AA44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xF1AB60", Offset = "0xF1AB60", VA = "0xF1AB60")]
	public void RespawnAllShooterBots()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xF1AB64", Offset = "0xF1AB64", VA = "0xF1AB64")]
	public AIManager()
	{
	}
}
[Token(Token = "0x2000183")]
public class AIShooterBotManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000184")]
	public struct ShooterBotWave
	{
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float gotoPositionX;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float gotoPositionY;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float gotoPositionZ;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float curPositionX;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curPositionY;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float curPositionZ;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int targetID;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float activeTimers;
	}

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager levelManager;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AIManager m_AIManager;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeToCheckDistance;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distanceCheckTimer;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gotoPointRange;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int botBaseDamage;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float weaponRange;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ShooterBotWave individualAIWave;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<ShooterBotWave> individualAIWaveList;

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xF1AF3C", Offset = "0xF1AF3C", VA = "0xF1AF3C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xF19BA0", Offset = "0xF19BA0", VA = "0xF19BA0")]
	public void UpdateShooterBots()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xF1B36C", Offset = "0xF1B36C", VA = "0xF1B36C")]
	private void Firearm(int i, short weaponNum, Vector3 muzzleFlashPosition, float inaccuracy, int worldNumber)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xF1BA78", Offset = "0xF1BA78", VA = "0xF1BA78")]
	public static byte[] SerializeAIWave(float[] x, float[] y, float[] z, float[] timer, float[] cx1, float[] cx2, float[] cx3, int[] shooterBotTargetIDs)
	{
		return null;
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xF1BD18", Offset = "0xF1BD18", VA = "0xF1BD18")]
	public void ReceiveWave(byte[] byteArray)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xF1C7F8", Offset = "0xF1C7F8", VA = "0xF1C7F8")]
	private void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xF1C9D8", Offset = "0xF1C9D8", VA = "0xF1C9D8")]
	public AIShooterBotManager()
	{
	}
}
[Token(Token = "0x2000185")]
public class BotFirePos : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform gunFirePos;

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xF1CA98", Offset = "0xF1CA98", VA = "0xF1CA98")]
	public BotFirePos()
	{
	}
}
[Serializable]
[Token(Token = "0x2000186")]
public class ShooterBots : Photon.MonoBehaviour
{
	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerData playerData;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float actionTimer;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float actionTimeReset;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 gotoPosition;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 localVelocity;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 previousVelocity;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isRunning;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float walkSpeed;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float runSpeed;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ragdoll;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AIManager aIManager;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int hitPoints;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform currentTarget;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float distanceFromPlayer;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool alerted;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform eyeLevel;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float fireRate;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float fireTimer;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int bullets;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private byte bodyType;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float targetingTimer;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float targetingTimerReset;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<SpawnedTarget> m_NewTargets;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fireRateTimerReset;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float inaccuracy;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int respawnTimer;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public double LastDeathTime;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float t;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xF1CAA0", Offset = "0xF1CAA0", VA = "0xF1CAA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xF1CDCC", Offset = "0xF1CDCC", VA = "0xF1CDCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xF1CE28", Offset = "0xF1CE28", VA = "0xF1CE28")]
	public void AlertAI()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xF1CE34", Offset = "0xF1CE34", VA = "0xF1CE34")]
	private void AlertAIMessage()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xF1B104", Offset = "0xF1B104", VA = "0xF1B104")]
	public bool HasTarget(float rangeCanEngage, float weaponRange, LayerMask targetMask)
	{
		return default(bool);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xF1C2BC", Offset = "0xF1C2BC", VA = "0xF1C2BC")]
	public void SortTargetsShooterBots()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xF1B8B0", Offset = "0xF1B8B0", VA = "0xF1B8B0")]
	public void ub()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xF1CE40", Offset = "0xF1CE40", VA = "0xF1CE40")]
	public ShooterBots()
	{
	}
}
[Token(Token = "0x2000188")]
public class AnimatorHash : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int leftHandStance;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int rightHandStance;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int LeftHanded;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int j;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int g;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int DualWield;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int melee;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int crouch;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int slide;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int run;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int reload;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int stance;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int water;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int prone;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int turnDirection;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int x;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int y;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int z;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int playerDown;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int playerUp;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int vel;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int attack;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int grenade;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int state;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int Bar;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static int Kar98;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int PPSH41;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static int STG;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int Lewis;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static int Luger;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int Luftwaffe;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xF1CF88", Offset = "0xF1CF88", VA = "0xF1CF88")]
	public AnimatorHash()
	{
	}
}
[Token(Token = "0x2000189")]
public class RequestStatsTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerLocalData localData;

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xF1D540", Offset = "0xF1D540", VA = "0xF1D540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xF1D5B0", Offset = "0xF1D5B0", VA = "0xF1D5B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xF1D654", Offset = "0xF1D654", VA = "0xF1D654")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xF1D6F8", Offset = "0xF1D6F8", VA = "0xF1D6F8")]
	private void ReceivePlayerStats(AzureRequestTypes type, string received, int requId)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xF1D930", Offset = "0xF1D930", VA = "0xF1D930")]
	public RequestStatsTest()
	{
	}
}
[Token(Token = "0x200018A")]
public struct RayCastWithMags
{
	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RaycastHit hit;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distanceFromCamera;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distanceFromTarget;
}
[Token(Token = "0x200018B")]
public class SortRayCastsTarget : IComparer<RayCastWithMags>
{
	[Token(Token = "0x600093C")]
	[Address(RVA = "0xF1D938", Offset = "0xF1D938", VA = "0xF1D938", Slot = "4")]
	public int Compare(RayCastWithMags a, RayCastWithMags b)
	{
		return default(int);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xF1D958", Offset = "0xF1D958", VA = "0xF1D958")]
	public SortRayCastsTarget()
	{
	}
}
[Token(Token = "0x200018C")]
public class SortRayCastsCamera : IComparer<RayCastWithMags>
{
	[Token(Token = "0x600093E")]
	[Address(RVA = "0xF1D960", Offset = "0xF1D960", VA = "0xF1D960", Slot = "4")]
	public int Compare(RayCastWithMags a, RayCastWithMags b)
	{
		return default(int);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xF1D980", Offset = "0xF1D980", VA = "0xF1D980")]
	public SortRayCastsCamera()
	{
	}
}
[Token(Token = "0x200018D")]
[RequireComponent(typeof(Camera))]
public class CameraController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200018E")]
	[CompilerGenerated]
	private sealed class <UpdateSkinnedMeshRenderersTiming>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraController <>4__this;

		[Token(Token = "0x1700016F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0xF202B4", Offset = "0xF202B4", VA = "0xF202B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0xF202FC", Offset = "0xF202FC", VA = "0xF202FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xF1DE98", Offset = "0xF1DE98", VA = "0xF1DE98")]
		[DebuggerHidden]
		public <UpdateSkinnedMeshRenderersTiming>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xF201AC", Offset = "0xF201AC", VA = "0xF201AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xF201B0", Offset = "0xF201B0", VA = "0xF201B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xF202BC", Offset = "0xF202BC", VA = "0xF202BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offsetVector;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform mTran;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 m_FirstPersonOffsetStanding;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_FirstPersonOffsetCrouch;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 standingOffset;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 crouchOffset;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 currentOffset;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool smartPivot;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool occlusionCheck;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	public bool thicknessCheck;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float desiredDistance;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float collisionDistance;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float maxThickness;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int maxThicknessIterations;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float zoomOutStepValue;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float zoomOutStepValuePerFrame;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LayerMask collisionLayer;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int playerLayer;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool playerCollision;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	public bool cameraNormalMode;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[HideInInspector]
	public bool bGroundHit;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public float startingY;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private bool initDone;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 prevTargetPos;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 prevPosition;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SkinnedMeshRenderer[] smrs;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float distance;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float thickness;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 targetPosWithOffset;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 dirToTarget;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 dirToTargetSmartPivot;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 thicknessStartPoint;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 thicknessEndPoint;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private RaycastHit? occlusionHit;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private RaycastHit groundHit;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private RaycastHit thicknessHit;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private RaycastHit hitSmartPivot;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private RaycastHit offsetTest;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private int currentIterations;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Dictionary<string, RaycastHit> thicknessStarts;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Dictionary<string, RaycastHit> thicknessEnds;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private List<RayCastWithMags> rcms;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private SortRayCastsCamera sortMethodCamera;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private SortRayCastsTarget sortMethodTarget;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool stop;

	[Token(Token = "0x1700016E")]
	public float Distance
	{
		[Token(Token = "0x6000940")]
		[Address(RVA = "0xF1D988", Offset = "0xF1D988", VA = "0xF1D988")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xF1D990", Offset = "0xF1D990", VA = "0xF1D990")]
	private void Awake1()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xF1DAF4", Offset = "0xF1DAF4", VA = "0xF1DAF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xF1DAFC", Offset = "0xF1DAFC", VA = "0xF1DAFC")]
	public void InitializeCamera(Transform t)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xF1DC84", Offset = "0xF1DC84", VA = "0xF1DC84")]
	public void InitializeCameraDeath(Transform t, Transform targetRenderers)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xF1DE10", Offset = "0xF1DE10", VA = "0xF1DE10")]
	public void UpdateSkinnedMeshRenderers()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xF1DE30", Offset = "0xF1DE30", VA = "0xF1DE30")]
	[IteratorStateMachine(typeof(<UpdateSkinnedMeshRenderersTiming>d__53))]
	private IEnumerator UpdateSkinnedMeshRenderersTiming()
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xF1DEC0", Offset = "0xF1DEC0", VA = "0xF1DEC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xF1FEBC", Offset = "0xF1FEBC", VA = "0xF1FEBC")]
	public void RotateTo(Quaternion targetRotation, float timeModifier)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xF1FF38", Offset = "0xF1FF38", VA = "0xF1FF38")]
	public float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
	{
		return default(float);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xF1FFA8", Offset = "0xF1FFA8", VA = "0xF1FFA8")]
	public void InitSmartPivot()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xF1FFF8", Offset = "0xF1FFF8", VA = "0xF1FFF8")]
	public void DisableSmartPivot()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xF20078", Offset = "0xF20078", VA = "0xF20078")]
	public void PauseCamera()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xF20104", Offset = "0xF20104", VA = "0xF20104")]
	private void CameraPause()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xF20164", Offset = "0xF20164", VA = "0xF20164")]
	public CameraController()
	{
	}
}
[Token(Token = "0x200018F")]
public class CharacterReviver : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float respawnTime;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float respawnTimeRate;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inRespawnRange;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject bodyReference;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentTimer;

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xF20304", Offset = "0xF20304", VA = "0xF20304")]
	public void OnTriggerEnter(Collider _col)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xF203C4", Offset = "0xF203C4", VA = "0xF203C4")]
	public void OnTriggerStay(Collider _col)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xF20544", Offset = "0xF20544", VA = "0xF20544")]
	public void OnTriggerExit(Collider _col)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xF205D4", Offset = "0xF205D4", VA = "0xF205D4")]
	public CharacterReviver()
	{
	}
}
[Token(Token = "0x2000190")]
public class RespwanPrompt : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FPSPlayer m_playerRef;

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xF205DC", Offset = "0xF205DC", VA = "0xF205DC")]
	public RespwanPrompt()
	{
	}
}
[Serializable]
[Token(Token = "0x2000191")]
public class Clothing
{
	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_ItemName;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_ID;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public byte m_Index;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_ItemType;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte m_MaterialIndex;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_Material;

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xF205E4", Offset = "0xF205E4", VA = "0xF205E4")]
	public Clothing()
	{
	}
}
[Token(Token = "0x2000192")]
public class ClothingCustomization : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartupManager m_StartupManager;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerCustomization m_PlayerCustomization;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIPlayerWeaponMount m_UIPlayerWeaponMount;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_HeadCounter;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_HatsCounter;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_SuitsCounter;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_EyesCounter;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_BaclavaCounter;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Vr Stuff")]
	[Space]
	public bool isVr;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIIkHandler ikHandler;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject PrimaryWeapon;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject SecondayrWeapon;

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xF205EC", Offset = "0xF205EC", VA = "0xF205EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xF205F0", Offset = "0xF205F0", VA = "0xF205F0")]
	public void SetupWeapons()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xF205F4", Offset = "0xF205F4", VA = "0xF205F4")]
	public void UpdatePrimaryWeapon()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xF205F8", Offset = "0xF205F8", VA = "0xF205F8")]
	public void UpdateAttachments()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xF205FC", Offset = "0xF205FC", VA = "0xF205FC")]
	public void UpdateSecondaryWeapon()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xF20600", Offset = "0xF20600", VA = "0xF20600")]
	public void SwitchHeads(bool forward)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xF20604", Offset = "0xF20604", VA = "0xF20604")]
	public void SwitchHats(bool forward)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xF20608", Offset = "0xF20608", VA = "0xF20608")]
	public void SwitchSuits(bool forward)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xF2060C", Offset = "0xF2060C", VA = "0xF2060C")]
	public void SwitchBaclava(bool forward)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xF20610", Offset = "0xF20610", VA = "0xF20610")]
	public void SwitchGlasses(bool forward)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xF20614", Offset = "0xF20614", VA = "0xF20614")]
	public void SetClothes()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xF20618", Offset = "0xF20618", VA = "0xF20618")]
	private int Forward(bool forward, int counter, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xF2063C", Offset = "0xF2063C", VA = "0xF2063C")]
	private void SpawnAndAttachWeapon(short itemNumber, Transform attachTransform, int layerNumber, byte skin, bool onHand = false)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xF20640", Offset = "0xF20640", VA = "0xF20640")]
	public ClothingCustomization()
	{
	}
}
[Token(Token = "0x2000193")]
public class CustomizationManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerLocalData m_LocalData;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SelectionManager m_SelectionManager;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Skins> m_SkinCache;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ModWeapon m_ModWeapon;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image m_PrimaryLoadoutImage;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image m_SecondaryLoadoutImage;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image m_PrimaryImage;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image m_SecondaryImage;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite[] m_PrimaryImages;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite[] m_SecondaryImages;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xF20648", Offset = "0xF20648", VA = "0xF20648")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xF206BC", Offset = "0xF206BC", VA = "0xF206BC")]
	public void SwitchLoadouts()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xF20928", Offset = "0xF20928", VA = "0xF20928")]
	public void SetPrimaryImage()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xF20A80", Offset = "0xF20A80", VA = "0xF20A80")]
	public void OpenSkinsPrimary()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xF20CFC", Offset = "0xF20CFC", VA = "0xF20CFC")]
	public void UpdateSkinPrimary()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xF20F6C", Offset = "0xF20F6C", VA = "0xF20F6C")]
	public void OpenSkinsSecondary()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xF211E4", Offset = "0xF211E4", VA = "0xF211E4")]
	public void UpdateSkinSecondary()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xF21454", Offset = "0xF21454", VA = "0xF21454")]
	public void SwitchPrimary(int value, int imagePosition)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xF215BC", Offset = "0xF215BC", VA = "0xF215BC")]
	public void SwitchSecondary(int value, int imagePosition)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xF21704", Offset = "0xF21704", VA = "0xF21704")]
	public CustomizationManager()
	{
	}
}
[Token(Token = "0x2000194")]
public class Doghit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AttackDog a;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_Head;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xF2170C", Offset = "0xF2170C", VA = "0xF2170C")]
	public void Damage(float d)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xF2173C", Offset = "0xF2173C", VA = "0xF2173C")]
	public Doghit()
	{
	}
}
[Token(Token = "0x2000195")]
public class BulletTrail : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000196")]
	[CompilerGenerated]
	private sealed class <InitTiming>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BulletTrail <>4__this;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0xF21A68", Offset = "0xF21A68", VA = "0xF21A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0xF21AB0", Offset = "0xF21AB0", VA = "0xF21AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xF21934", Offset = "0xF21934", VA = "0xF21934")]
		[DebuggerHidden]
		public <InitTiming>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xF219CC", Offset = "0xF219CC", VA = "0xF219CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xF219D0", Offset = "0xF219D0", VA = "0xF219D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xF21A70", Offset = "0xF21A70", VA = "0xF21A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform mTran;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 destination;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 currentPosition;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 fordward;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TrailRenderer trailRenderer;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool stop;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForEndOfFrame delay;

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xF21744", Offset = "0xF21744", VA = "0xF21744")]
	public void InitBullet(Vector3 startPos, Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xF21844", Offset = "0xF21844", VA = "0xF21844")]
	public void UpdateTrail(float dt)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xF217DC", Offset = "0xF217DC", VA = "0xF217DC")]
	[IteratorStateMachine(typeof(<InitTiming>d__10))]
	private IEnumerator InitTiming()
	{
		return null;
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xF2195C", Offset = "0xF2195C", VA = "0xF2195C")]
	public BulletTrail()
	{
	}
}
[Token(Token = "0x2000197")]
public class AlvoEndGameSelect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000198")]
	[CompilerGenerated]
	private sealed class <NextMatchCountdown>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoEndGameSelect <>4__this;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <counter>5__2;

		[Token(Token = "0x17000173")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0xF24F0C", Offset = "0xF24F0C", VA = "0xF24F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0xF24F54", Offset = "0xF24F54", VA = "0xF24F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xF24A80", Offset = "0xF24A80", VA = "0xF24A80")]
		[DebuggerHidden]
		public <NextMatchCountdown>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xF24E4C", Offset = "0xF24E4C", VA = "0xF24E4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xF24E50", Offset = "0xF24E50", VA = "0xF24E50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xF24F14", Offset = "0xF24F14", VA = "0xF24F14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasClass m_CanvasClass;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool matchEnded;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text m_MapCountdownTimer;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text m_AlvoCoins;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text m_ExperiencePoints;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Obsolete]
	public Text m_WinLossLabel;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image m_Rank;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AlvoPartySystemUI m_AlvoPartySystemUI;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_Voted;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool m_ModeVoted;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] m_MapVotes;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text[] m_MapVotesLabels;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CanvasGroup m_MapVotingCanvas;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] m_MapVoteBtns;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int m_NextMapToLoad;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Space]
	[Header("Game Mode Voting")]
	public bool allowGameModevoting;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int[] currentModeVotes;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameMode m_NextGameMode;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject m_NextGameObjectParent;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI m_NextGameObjectText;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Space]
	[Header("Modes Voting UI")]
	public TMP_Text[] m_ModeVotesLbls;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CanvasGroup m_ModeVotingCanvas;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] gameModeBtns;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LanguageText[] gameModeNames;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Space]
	[SerializeField]
	private MissionProgressEndgameData m_MissionProgressEndgame;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool m_EndGameTransition;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_MapSelectionTimer;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_ModeSelectionTimer;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float m_MapSelectionCounter;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool m_LoadedNewLevel;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private UITimedMovement m_RewardsTimedMovement;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private EnableUIOnDelay m_VotingPanelEnableDelay;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject nextMatchGo;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TMP_Text nextMapName;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TMP_Text nextMapModeLbl;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TMP_Text nextMatchCounter;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Image nextMapImg;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 offset;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VrSettings settings;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool votesReceived;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WaitForSeconds waitASecond;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int prevTimerValue;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public byte[] mapsForNextRound;

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xF21AB8", Offset = "0xF21AB8", VA = "0xF21AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xF21DAC", Offset = "0xF21DAC", VA = "0xF21DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xF22130", Offset = "0xF22130", VA = "0xF22130")]
	public void SetMapsForNextRound(byte[] maps)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xF22220", Offset = "0xF22220", VA = "0xF22220")]
	public void SelectMapsForNextRound()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xF221BC", Offset = "0xF221BC", VA = "0xF221BC")]
	private void DisableAllMaps()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xF225B4", Offset = "0xF225B4", VA = "0xF225B4")]
	private void SaveData()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xF22608", Offset = "0xF22608", VA = "0xF22608")]
	public void OpenEndGameFFA()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xF2338C", Offset = "0xF2338C", VA = "0xF2338C")]
	public void OpenEndGameTeamDM()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xF2395C", Offset = "0xF2395C", VA = "0xF2395C")]
	public void OpenEndGameSND()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xF23C40", Offset = "0xF23C40", VA = "0xF23C40")]
	public void OpenEndGameZombies()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xF23DAC", Offset = "0xF23DAC", VA = "0xF23DAC")]
	public void OpenEndGameHP()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xF23F60", Offset = "0xF23F60", VA = "0xF23F60")]
	public void OpenEndGameWaitingRoom()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xF22B44", Offset = "0xF22B44", VA = "0xF22B44")]
	private void OpenEndGame(GameObject _scoreOfGameMode, bool showRewards)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xF232D0", Offset = "0xF232D0", VA = "0xF232D0")]
	private void DisplayPrivateMatchUI()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xF23EC0", Offset = "0xF23EC0", VA = "0xF23EC0")]
	private void DisplayRewards()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xF236E4", Offset = "0xF236E4", VA = "0xF236E4")]
	private void MapAndModeVotingEndFadeTransition()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xF22E24", Offset = "0xF22E24", VA = "0xF22E24")]
	private void MapVotingEndFadeTransition(float initialDelay)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xF22FD8", Offset = "0xF22FD8", VA = "0xF22FD8")]
	private void UpdatePlayerStats()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xF242AC", Offset = "0xF242AC", VA = "0xF242AC")]
	public void ResetVar()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xF2435C", Offset = "0xF2435C", VA = "0xF2435C")]
	public void ChooseMap(int value)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xF24734", Offset = "0xF24734", VA = "0xF24734")]
	public void ChooseGameMode(int value)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xF24848", Offset = "0xF24848", VA = "0xF24848")]
	public void UpdateModeVotes(int value)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xF244C4", Offset = "0xF244C4", VA = "0xF244C4")]
	public void UpdateMapVotes(int value)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xF248EC", Offset = "0xF248EC", VA = "0xF248EC")]
	public void SetNextMatchUI(AlvoLevels level, int gameType)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xF24A18", Offset = "0xF24A18", VA = "0xF24A18")]
	[IteratorStateMachine(typeof(<NextMatchCountdown>d__67))]
	private IEnumerator NextMatchCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xF21F88", Offset = "0xF21F88", VA = "0xF21F88")]
	public void LoadNewLevel()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xF24AA8", Offset = "0xF24AA8", VA = "0xF24AA8")]
	public void ForceLoadNewLevel(int value)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xF23F9C", Offset = "0xF23F9C", VA = "0xF23F9C")]
	public void SetVotingLbls()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xF24C78", Offset = "0xF24C78", VA = "0xF24C78")]
	public AlvoEndGameSelect()
	{
	}
}
[Token(Token = "0x2000199")]
public class ControlsSelector : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200019A")]
	public struct PlatformControl
	{
		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Platform platform;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject wrap;
	}

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformControl[] platformControls;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite m_PicoNeoSprite;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite m_PicoPhoenixSprite;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image m_PicoImage;

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xF24F5C", Offset = "0xF24F5C", VA = "0xF24F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xF250D0", Offset = "0xF250D0", VA = "0xF250D0")]
	public void CloseControls()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xF25178", Offset = "0xF25178", VA = "0xF25178")]
	public ControlsSelector()
	{
	}
}
[Token(Token = "0x200019B")]
public class DarkControls : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200019C")]
	public enum ControllerItem
	{
		[Token(Token = "0x40010A4")]
		Unselected,
		[Token(Token = "0x40010A5")]
		LeftAnalog,
		[Token(Token = "0x40010A6")]
		LeftUpperButton,
		[Token(Token = "0x40010A7")]
		LeftDownyButton,
		[Token(Token = "0x40010A8")]
		LeftSettingsButton,
		[Token(Token = "0x40010A9")]
		LeftCompanyButton,
		[Token(Token = "0x40010AA")]
		LeftGrab,
		[Token(Token = "0x40010AB")]
		LeftTrigger,
		[Token(Token = "0x40010AC")]
		RightAnalog,
		[Token(Token = "0x40010AD")]
		RightUpperButton,
		[Token(Token = "0x40010AE")]
		RightDownyButton,
		[Token(Token = "0x40010AF")]
		RightSettingsButton,
		[Token(Token = "0x40010B0")]
		RightCompanyButton,
		[Token(Token = "0x40010B1")]
		RightGrab,
		[Token(Token = "0x40010B2")]
		RightTrigger,
		[Token(Token = "0x40010B3")]
		LeftAnalogPress,
		[Token(Token = "0x40010B4")]
		RightAnalogPress,
		[Token(Token = "0x40010B5")]
		Settings,
		[Token(Token = "0x40010B6")]
		Triangle,
		[Token(Token = "0x40010B7")]
		Circle,
		[Token(Token = "0x40010B8")]
		Cross,
		[Token(Token = "0x40010B9")]
		Square,
		[Token(Token = "0x40010BA")]
		L1,
		[Token(Token = "0x40010BB")]
		L2,
		[Token(Token = "0x40010BC")]
		R1,
		[Token(Token = "0x40010BD")]
		R2,
		[Token(Token = "0x40010BE")]
		TriangleSecondary,
		[Token(Token = "0x40010BF")]
		CircleSecondary,
		[Token(Token = "0x40010C0")]
		CrossSecondary,
		[Token(Token = "0x40010C1")]
		SquareSecondary,
		[Token(Token = "0x40010C2")]
		Move,
		[Token(Token = "0x40010C3")]
		MoveSecondary
	}

	[Serializable]
	[Token(Token = "0x200019D")]
	public struct LHSwap
	{
		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControllerItem item;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ControllerItem item2;
	}

	[Serializable]
	[Token(Token = "0x200019E")]
	public struct ControllerItemLocalization
	{
		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControllerItem m_ControllerItem;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Space]
		public LanguageText m_motionLanguageText;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageText m_staticLanguageText;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageText m_dualLanguageText;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space]
		public TextMeshProUGUI m_tmpro;
	}

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected LHSwap[] m_LeftHandedMotionSwaps;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected LHSwap[] m_LeftHandedStaticSwaps;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected LHSwap[] m_leftHandedDualSwaps;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Space]
	protected ControllerItemLocalization[] m_controllerItems;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Toggle[] m_selectionToggle;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<ControllerItem, ControllerItemLocalization> m_controllerItemsDictionary;

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xF25180", Offset = "0xF25180", VA = "0xF25180", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xF253F8", Offset = "0xF253F8", VA = "0xF253F8")]
	protected void SetupControllerItemsDictionary()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xF25550", Offset = "0xF25550", VA = "0xF25550")]
	private void SetAllText(int setupIndex)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xF25844", Offset = "0xF25844", VA = "0xF25844")]
	public void ToggleSetup(int setupIndex)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xF25894", Offset = "0xF25894", VA = "0xF25894")]
	public DarkControls()
	{
	}
}
[Token(Token = "0x200019F")]
public class DarkPS4Controls : DarkControls
{
	[Serializable]
	[Token(Token = "0x20001A0")]
	private struct LeftHandedControllerSwap
	{
		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LHSwap[] m_LeftHandedMotionSwaps;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LHSwap[] m_LeftHandedStaticSwaps;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LHSwap[] m_leftHandedDualSwaps;
	}

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LeftHandedControllerSwap m_ds4LeftHandedSwaps;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private LeftHandedControllerSwap m_aimLeftHandedSwaps;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private LeftHandedControllerSwap m_movesLeftHandedSwaps;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Space]
	[SerializeField]
	private ControllerItemLocalization[] m_ds4ControllerItems;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ControllerItemLocalization[] m_aimControllerItems;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private ControllerItemLocalization[] m_movesControllerItems;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[Space]
	private GameObject m_ds4ControllerItemsWrap;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject m_aimControllerItemsWrap;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject m_movesControllerItemsWrap;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject m_lastActivatedController;

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xF2589C", Offset = "0xF2589C", VA = "0xF2589C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xF25B0C", Offset = "0xF25B0C", VA = "0xF25B0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xF2595C", Offset = "0xF2595C", VA = "0xF2595C")]
	private void ControllersHaveChanged(int index, bool recenterEvent)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xF25C98", Offset = "0xF25C98", VA = "0xF25C98")]
	public DarkPS4Controls()
	{
	}
}
[Token(Token = "0x20001A1")]
public class FirstTimeTipsUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainPnl;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button prevBtn;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button nextBtn;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text titleLbl;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text bodyLbl;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool showMenu;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int index;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly string key;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xF25CA0", Offset = "0xF25CA0", VA = "0xF25CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xF25F30", Offset = "0xF25F30", VA = "0xF25F30")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xF25E3C", Offset = "0xF25E3C", VA = "0xF25E3C")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xF26024", Offset = "0xF26024", VA = "0xF26024")]
	public void NextTip(bool next)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xF25F90", Offset = "0xF25F90", VA = "0xF25F90")]
	private void SetButtons()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xF2612C", Offset = "0xF2612C", VA = "0xF2612C")]
	public FirstTimeTipsUI()
	{
	}
}
[Token(Token = "0x20001A2")]
public class MenuCharacterDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_CharacterSpawnRoot;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TitleRoomManager titleRoomManager;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RuntimeAnimatorController m_AnimatorController;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Range(0.5f, 2f)]
	private float m_CharacterScale;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_FIDInt;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_FID;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerLocalData localData;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_CurrentCharacter;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_CurrentCharacterIndex;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool isLocalPlayer;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject UIParent;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text NameLbl;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image avatarImg;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image rankImg;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Slider xpSlider;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TMP_Text xpLbl;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image speakerIcon;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image slashIcon;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private PlayerRankIcons rankIcons;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent CharacterLoadEvent;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Animator m_Animator;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LanguageText rankTxt;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform spawnOverride;

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xF2617C", Offset = "0xF2617C", VA = "0xF2617C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xF26234", Offset = "0xF26234", VA = "0xF26234")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xF262B4", Offset = "0xF262B4", VA = "0xF262B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xF26334", Offset = "0xF26334", VA = "0xF26334")]
	private void UpdateAvatar(int FID, Sprite sprite)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xF263DC", Offset = "0xF263DC", VA = "0xF263DC")]
	public void SetStagedPlayerCharacter(StagedPlayer stagedPlayer)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xF26690", Offset = "0xF26690", VA = "0xF26690")]
	public void RequestCharacter(int index)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xF26710", Offset = "0xF26710", VA = "0xF26710")]
	public void ReceiveAndDisplayCharacter(GameObject loadedCharacter, int index)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xF26944", Offset = "0xF26944", VA = "0xF26944")]
	public void ResetCharacterDisplay()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xF269F0", Offset = "0xF269F0", VA = "0xF269F0")]
	public MenuCharacterDisplay()
	{
	}
}
[Token(Token = "0x20001A3")]
public class MiniMapSetup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup m_RootAlpha;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform m_UIRoot;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform m_IconsParent;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image m_PlayerIcon;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<bl_MiniMapItem> m_MiniMapItems;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<bl_IconItem> m_IconItem;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xF26A0C", Offset = "0xF26A0C", VA = "0xF26A0C")]
	public void SetupItem(bl_MiniMapItem bl_MiniMapItem, int id, LevelManager levelManager)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xF26C10", Offset = "0xF26C10", VA = "0xF26C10")]
	public void RemoveItem(int id)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xF26D4C", Offset = "0xF26D4C", VA = "0xF26D4C")]
	public MiniMapSetup()
	{
	}
}
[Token(Token = "0x20001A4")]
public class OculusControls : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space]
	public string[] controlsTextTop;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] controlsTextBottom;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text[] buttonsText;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite DS4;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite AIM;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] controlsSprites;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite[] controlsSpritesLH;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text textTopLbl;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text textBottomLbl;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image mainImg;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle[] controlsToggles;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject activeControlsLbl;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject switchButtons;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isMainMenu;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int currentUse;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color ActiveColor;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color InactiveColor;

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xF26E0C", Offset = "0xF26E0C", VA = "0xF26E0C")]
	public void OnToggle(int idx)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xF271C4", Offset = "0xF271C4", VA = "0xF271C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xF27400", Offset = "0xF27400", VA = "0xF27400")]
	public void SetCurrentControls()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xF27694", Offset = "0xF27694", VA = "0xF27694")]
	public int GetCurrentSetup()
	{
		return default(int);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xF27780", Offset = "0xF27780", VA = "0xF27780")]
	public OculusControls()
	{
	}
}
[Token(Token = "0x20001A5")]
public class PlayerCharacterSelection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001A6")]
	[CompilerGenerated]
	private sealed class <ReceiveAndDisplay>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000175")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0xF28D1C", Offset = "0xF28D1C", VA = "0xF28D1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xF28D64", Offset = "0xF28D64", VA = "0xF28D64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xF28248", Offset = "0xF28248", VA = "0xF28248")]
		[DebuggerHidden]
		public <ReceiveAndDisplay>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xF28CE4", Offset = "0xF28CE4", VA = "0xF28CE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xF28CE8", Offset = "0xF28CE8", VA = "0xF28CE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xF28D24", Offset = "0xF28D24", VA = "0xF28D24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] buttonBackgrounds;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color32 selected;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color32 unSelected;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerLocalData m_LocalData;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MenuCharacterDisplay m_CharacterDisplay;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CharacterSkinStoreList m_CharacterList;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Space]
	private LoadoutCharacterSelectionPanel m_SelectionPanel;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LoadoutBuyingPanel m_BuyingPanel;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UINotification m_Notificator;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	[SerializeField]
	private Button m_NextPageBtn;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Button m_PrevPageBtn;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI m_PageText;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private LanguageText m_PurchaseMessage;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xF27790", Offset = "0xF27790", VA = "0xF27790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xF27B10", Offset = "0xF27B10", VA = "0xF27B10")]
	public void ShowSelectionPanel()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xF27BC8", Offset = "0xF27BC8", VA = "0xF27BC8")]
	public void ShowBuyPanel()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xF27C18", Offset = "0xF27C18", VA = "0xF27C18")]
	private void BuyCharacterRequest(int index)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xF27DA0", Offset = "0xF27DA0", VA = "0xF27DA0")]
	private void BuyCharacter(int index, int dummy)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xF27F14", Offset = "0xF27F14", VA = "0xF27F14")]
	private void BuyAndSelectCharacter(int index, int dummy)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xF27F3C", Offset = "0xF27F3C", VA = "0xF27F3C")]
	private void SetCurrentSkin(int index)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xF2804C", Offset = "0xF2804C", VA = "0xF2804C")]
	public void NextPage()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xF280D0", Offset = "0xF280D0", VA = "0xF280D0")]
	public void PreviousPage()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xF27970", Offset = "0xF27970", VA = "0xF27970")]
	private void UpdatePageNavigation(int currentPage, int totalPages)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xF28048", Offset = "0xF28048", VA = "0xF28048")]
	public void DisplayCurrentSelected(int index)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xF28154", Offset = "0xF28154", VA = "0xF28154")]
	private void RequestCharacter(int index)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xF281E8", Offset = "0xF281E8", VA = "0xF281E8")]
	[IteratorStateMachine(typeof(<ReceiveAndDisplay>d__25))]
	private IEnumerator ReceiveAndDisplay(GameObject character)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xF28270", Offset = "0xF28270", VA = "0xF28270")]
	private void PreloadCharacterMaterials(GameObject[] characters)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xF28CA0", Offset = "0xF28CA0", VA = "0xF28CA0")]
	public PlayerCharacterSelection()
	{
	}
}
[Token(Token = "0x20001A7")]
public class ProfileDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image m_Avatar;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text m_PlayerDisplayName;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text m_Console;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI m_XP;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI m_AlvoCoins;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI m_Level;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider m_ProgessBar;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image m_Rank;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_DefaultAvatar;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerRankIcons m_PlayerRankIcons;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LanguageText rankLT;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color fidColor;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VrManager m_VrManager;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlayerStats m_PlayerStats;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentRank;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int currentCoins;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xF28D6C", Offset = "0xF28D6C", VA = "0xF28D6C")]
	public void UpdateProfileDisplay(Texture2D image, string playerName, Platform platform, PlayerStats playerStats, VrManager vrManager)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xF29334", Offset = "0xF29334", VA = "0xF29334")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xF29428", Offset = "0xF29428", VA = "0xF29428")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xF29150", Offset = "0xF29150", VA = "0xF29150")]
	public void UpdateExp(int value)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xF292FC", Offset = "0xF292FC", VA = "0xF292FC")]
	public void UpdateCoins(int value)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xF29628", Offset = "0xF29628", VA = "0xF29628")]
	private void UpdateRankText()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xF296D8", Offset = "0xF296D8", VA = "0xF296D8")]
	public ProfileDisplay()
	{
	}
}
[Token(Token = "0x20001A8")]
public class TrainingMatchSelectionUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_TutorialReplayButton;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public Image[] HighLighs;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Levels[] availableLevels;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] difficultyLevels;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject tooManyGo;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SimpleUIPanel trainingUIPanel;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Levels selectedLevel;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle[] toggles;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int defaultDiff;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AlvoPhotonManager m_AlvoPhotonManager;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AlvoSocialManager m_AlvoSocialManager;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xF296E0", Offset = "0xF296E0", VA = "0xF296E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xF297F0", Offset = "0xF297F0", VA = "0xF297F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xF29A28", Offset = "0xF29A28", VA = "0xF29A28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xF29BB4", Offset = "0xF29BB4", VA = "0xF29BB4")]
	public void SelectMap(int id)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xF29CB8", Offset = "0xF29CB8", VA = "0xF29CB8")]
	public bool CheckPlayerNumbers()
	{
		return default(bool);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xF29D70", Offset = "0xF29D70", VA = "0xF29D70")]
	public void GoBack()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xF29DD0", Offset = "0xF29DD0", VA = "0xF29DD0")]
	public void StartTrainingMatch()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xF29E64", Offset = "0xF29E64", VA = "0xF29E64")]
	public void StartReplayTutorial()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xF29EF8", Offset = "0xF29EF8", VA = "0xF29EF8")]
	public void SelectDif0(bool on)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xF29F08", Offset = "0xF29F08", VA = "0xF29F08")]
	public void SelectDif1(bool on)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xF29F18", Offset = "0xF29F18", VA = "0xF29F18")]
	public void SelectDif2(bool on)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xF29B18", Offset = "0xF29B18", VA = "0xF29B18")]
	private void SetDifficulty(int difficulty)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xF29F28", Offset = "0xF29F28", VA = "0xF29F28")]
	public TrainingMatchSelectionUI()
	{
	}
}
[Token(Token = "0x20001A9")]
public class UISetup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text m_KillStreak;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xF29F38", Offset = "0xF29F38", VA = "0xF29F38")]
	public UISetup()
	{
	}
}
[Token(Token = "0x20001AA")]
public class ZombieMatchSelectionUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] HighLighs;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Levels[] availableLevels;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject tooManyGo;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SimpleUIPanel zombieUIPanel;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AlvoPhotonManager m_AlvoPhotonManager;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AlvoSocialManager m_AlvoSocialManager;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StartupManager m_StartupManager;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xF29F40", Offset = "0xF29F40", VA = "0xF29F40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xF2A04C", Offset = "0xF2A04C", VA = "0xF2A04C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xF2A304", Offset = "0xF2A304", VA = "0xF2A304")]
	public void SelectMap(int id)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xF2A41C", Offset = "0xF2A41C", VA = "0xF2A41C")]
	public bool CheckPlayerNumbers()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xF2A4D4", Offset = "0xF2A4D4", VA = "0xF2A4D4")]
	public void GoBack()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xF2A534", Offset = "0xF2A534", VA = "0xF2A534")]
	public void StartPrivateMatch()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xF2A5DC", Offset = "0xF2A5DC", VA = "0xF2A5DC")]
	public void FindOrCreatePublicRoom()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xF2A688", Offset = "0xF2A688", VA = "0xF2A688")]
	public ZombieMatchSelectionUI()
	{
	}
}
[Token(Token = "0x20001AB")]
public class AimIK : IK
{
	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IKSolverAim solver;

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xF2A690", Offset = "0xF2A690", VA = "0xF2A690", Slot = "7")]
	public override IKSolver GetIKSolver()
	{
		return null;
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xF2A698", Offset = "0xF2A698", VA = "0xF2A698")]
	public AimIK()
	{
	}
}
[Token(Token = "0x20001AC")]
public class AimPoser : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001AD")]
	public class Pose
	{
		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool visualize;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 direction;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yaw;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitch;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float angleBuffer;

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xF2A884", Offset = "0xF2A884", VA = "0xF2A884")]
		public bool IsInDirection(Vector3 d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xF2ADF4", Offset = "0xF2ADF4", VA = "0xF2ADF4")]
		public void SetAngleBuffer(float value)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xF2ADFC", Offset = "0xF2ADFC", VA = "0xF2ADFC")]
		public Pose()
		{
		}
	}

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float angleBuffer;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pose[] poses;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xF2A7B4", Offset = "0xF2A7B4", VA = "0xF2A7B4")]
	public Pose GetPose(Vector3 localDirection)
	{
		return null;
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xF2AD34", Offset = "0xF2AD34", VA = "0xF2AD34")]
	public void SetPoseActive(Pose pose)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xF2AD94", Offset = "0xF2AD94", VA = "0xF2AD94")]
	public AimPoser()
	{
	}
}
[Token(Token = "0x20001AE")]
public class Hierarchy
{
	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xF2AE18", Offset = "0xF2AE18", VA = "0xF2AE18")]
	public static bool HierarchyIsValid(Transform[] bones)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xF2AFCC", Offset = "0xF2AFCC", VA = "0xF2AFCC")]
	public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xF2AE9C", Offset = "0xF2AE9C", VA = "0xF2AE9C")]
	public static bool IsAncestor(Transform transform, Transform ancestor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xF2B0D8", Offset = "0xF2B0D8", VA = "0xF2B0D8")]
	public static bool ContainsChild(Transform transform, Transform child)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xF2B1E8", Offset = "0xF2B1E8", VA = "0xF2B1E8")]
	public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xF2B428", Offset = "0xF2B428", VA = "0xF2B428")]
	public static Transform GetAncestor(Transform transform, int minChildCount)
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xF2B51C", Offset = "0xF2B51C", VA = "0xF2B51C")]
	public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xF2B66C", Offset = "0xF2B66C", VA = "0xF2B66C")]
	public static Transform GetFirstCommonAncestor(Transform[] transforms)
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xF2B9D8", Offset = "0xF2B9D8", VA = "0xF2B9D8")]
	public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
	{
		return null;
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xF2B7D0", Offset = "0xF2B7D0", VA = "0xF2B7D0")]
	public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xF2BB60", Offset = "0xF2BB60", VA = "0xF2BB60")]
	public Hierarchy()
	{
	}
}
[Token(Token = "0x20001AF")]
public abstract class IK : SolverManager
{
	[Token(Token = "0x6000A0F")]
	public abstract IKSolver GetIKSolver();

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xF2BB68", Offset = "0xF2BB68", VA = "0xF2BB68", Slot = "5")]
	protected override void UpdateSolver()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xF2BC4C", Offset = "0xF2BC4C", VA = "0xF2BC4C", Slot = "4")]
	protected override void InitiateSolver()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xF2BDDC", Offset = "0xF2BDDC", VA = "0xF2BDDC", Slot = "6")]
	protected override void FixTransforms()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xF2A7A4", Offset = "0xF2A7A4", VA = "0xF2A7A4")]
	protected IK()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B0")]
public abstract class IKSolver
{
	[Serializable]
	[Token(Token = "0x20001B1")]
	public class Point
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float weight;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 solverPosition;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion solverRotation;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 defaultLocalPosition;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xF2C2CC", Offset = "0xF2C2CC", VA = "0xF2C2CC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xF2C310", Offset = "0xF2C310", VA = "0xF2C310")]
		public void FixTransform()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xF2C3F0", Offset = "0xF2C3F0", VA = "0xF2C3F0")]
		public void UpdateSolverPosition()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xF2C41C", Offset = "0xF2C41C", VA = "0xF2C41C")]
		public void UpdateSolverLocalPosition()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xF2C448", Offset = "0xF2C448", VA = "0xF2C448")]
		public void UpdateSolverState()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xF2C48C", Offset = "0xF2C48C", VA = "0xF2C48C")]
		public void UpdateSolverLocalState()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xF2C4D0", Offset = "0xF2C4D0", VA = "0xF2C4D0")]
		public Point()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001B2")]
	public class Bone : Point
	{
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float length;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float sqrMag;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 axis;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RotationLimit _rotationLimit;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isLimited;

		[Token(Token = "0x17000178")]
		public RotationLimit rotationLimit
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0xF2C530", Offset = "0xF2C530", VA = "0xF2C530")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0xF2C610", Offset = "0xF2C610", VA = "0xF2C610")]
			set
			{
			}
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xF2C688", Offset = "0xF2C688", VA = "0xF2C688")]
		public void Swing(Vector3 swingTarget, float weight = 1f)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xF2C8F4", Offset = "0xF2C8F4", VA = "0xF2C8F4")]
		public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xF2CBB0", Offset = "0xF2CBB0", VA = "0xF2CBB0")]
		public void Swing2D(Vector3 swingTarget, float weight = 1f)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xF2CDA4", Offset = "0xF2CDA4", VA = "0xF2CDA4")]
		public void SetToSolverPosition()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xF2CDCC", Offset = "0xF2CDCC", VA = "0xF2CDCC")]
		public Bone()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xF2CE38", Offset = "0xF2CE38", VA = "0xF2CE38")]
		public Bone(Transform transform)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xF2CEB0", Offset = "0xF2CEB0", VA = "0xF2CEB0")]
		public Bone(Transform transform, float weight)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001B3")]
	public class Node : Point
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float length;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float effectorPositionWeight;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float effectorRotationWeight;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 offset;

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xF2CF38", Offset = "0xF2CF38", VA = "0xF2CF38")]
		public Node()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xF2CF3C", Offset = "0xF2CF3C", VA = "0xF2CF3C")]
		public Node(Transform transform)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xF2CF60", Offset = "0xF2CF60", VA = "0xF2CF60")]
		public Node(Transform transform, float weight)
		{
		}
	}

	[Token(Token = "0x20001B4")]
	public delegate void UpdateDelegate();

	[Token(Token = "0x20001B5")]
	public delegate void IterationDelegate(int i);

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Vector3 IKPosition;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	[Tooltip("The positional or the master weight of the solver.")]
	public float IKPositionWeight;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UpdateDelegate OnPreInitiate;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UpdateDelegate OnPostInitiate;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UpdateDelegate OnPreUpdate;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UpdateDelegate OnPostUpdate;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool firstInitiation;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	protected Transform root;

	[Token(Token = "0x17000177")]
	public bool initiated
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xF2BEF4", Offset = "0xF2BEF4", VA = "0xF2BEF4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xF2BEFC", Offset = "0xF2BEFC", VA = "0xF2BEFC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xF2BE3C", Offset = "0xF2BE3C", VA = "0xF2BE3C")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A15")]
	public abstract bool IsValid(ref string message);

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xF2BCB8", Offset = "0xF2BCB8", VA = "0xF2BCB8")]
	public void Initiate(Transform root)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xF2BBDC", Offset = "0xF2BBDC", VA = "0xF2BBDC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xF2BEB0", Offset = "0xF2BEB0", VA = "0xF2BEB0", Slot = "5")]
	public virtual Vector3 GetIKPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xF2BEBC", Offset = "0xF2BEBC", VA = "0xF2BEBC")]
	public void SetIKPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xF2BEC8", Offset = "0xF2BEC8", VA = "0xF2BEC8")]
	public float GetIKPositionWeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xF2BED0", Offset = "0xF2BED0", VA = "0xF2BED0")]
	public void SetIKPositionWeight(float weight)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xF2BEEC", Offset = "0xF2BEEC", VA = "0xF2BEEC")]
	public Transform GetRoot()
	{
		return null;
	}

	[Token(Token = "0x6000A1F")]
	public abstract Point[] GetPoints();

	[Token(Token = "0x6000A20")]
	public abstract Point GetPoint(Transform transform);

	[Token(Token = "0x6000A21")]
	public abstract void FixTransforms();

	[Token(Token = "0x6000A22")]
	public abstract void StoreDefaultLocalState();

	[Token(Token = "0x6000A23")]
	protected abstract void OnInitiate();

	[Token(Token = "0x6000A24")]
	protected abstract void OnUpdate();

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xF2BF08", Offset = "0xF2BF08", VA = "0xF2BF08")]
	public static Transform ContainsDuplicateBone(Bone[] bones)
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xF2C02C", Offset = "0xF2C02C", VA = "0xF2C02C")]
	public static bool HierarchyIsValid(Bone[] bones)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xF2C0C0", Offset = "0xF2C0C0", VA = "0xF2C0C0")]
	protected static float PreSolveBones(ref Bone[] bones)
	{
		return default(float);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xF2C2B4", Offset = "0xF2C2B4", VA = "0xF2C2B4")]
	protected IKSolver()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B6")]
public class IKSolverAim : IKSolverHeuristic
{
	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform transform;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 axis;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 poleAxis;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 polePosition;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[Range(0f, 1f)]
	public float poleWeight;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform poleTarget;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Range(0f, 1f)]
	public float clampWeight;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Range(0f, 2f)]
	public int clampSmoothing;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IterationDelegate OnPreIteration;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float step;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 clampedIKPosition;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RotationLimit transformLimit;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform lastTransform;

	[Token(Token = "0x17000179")]
	public Vector3 transformAxis
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xF2D330", Offset = "0xF2D330", VA = "0xF2D330")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700017A")]
	public Vector3 transformPoleAxis
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xF2D360", Offset = "0xF2D360", VA = "0xF2D360")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700017B")]
	protected override int minBones
	{
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xF2DE84", Offset = "0xF2DE84", VA = "0xF2DE84", Slot = "12")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700017C")]
	protected override Vector3 localDirection
	{
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xF2E3C0", Offset = "0xF2E3C0", VA = "0xF2E3C0", Slot = "15")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xF2D1F8", Offset = "0xF2D1F8", VA = "0xF2D1F8")]
	public float GetAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xF2D390", Offset = "0xF2D390", VA = "0xF2D390", Slot = "10")]
	protected override void OnInitiate()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xF2D644", Offset = "0xF2D644", VA = "0xF2D644", Slot = "11")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xF2DDDC", Offset = "0xF2DDDC", VA = "0xF2DDDC")]
	private void Solve()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xF2DA78", Offset = "0xF2DA78", VA = "0xF2DA78")]
	private Vector3 GetClampedIKPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xF2DE8C", Offset = "0xF2DE8C", VA = "0xF2DE8C")]
	private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xF2A704", Offset = "0xF2A704", VA = "0xF2A704")]
	public IKSolverAim()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B7")]
public class IKSolverHeuristic : IKSolver
{
	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform target;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float tolerance;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int maxIterations;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useRotationLimits;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool XY;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Bone[] bones;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector3 lastLocalDirection;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float chainLength;

	[Token(Token = "0x1700017D")]
	protected virtual int minBones
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xF2ECB0", Offset = "0xF2ECB0", VA = "0xF2ECB0", Slot = "12")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700017E")]
	protected virtual bool boneLengthCanBeZero
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xF2ECB8", Offset = "0xF2ECB8", VA = "0xF2ECB8", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017F")]
	protected virtual bool allowCommonParent
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xF2ECC0", Offset = "0xF2ECC0", VA = "0xF2ECC0", Slot = "14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000180")]
	protected virtual Vector3 localDirection
	{
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xF2F0D4", Offset = "0xF2F0D4", VA = "0xF2F0D4", Slot = "15")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000181")]
	protected float positionOffset
	{
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xF2F190", Offset = "0xF2F190", VA = "0xF2F190")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xF2E494", Offset = "0xF2E494", VA = "0xF2E494")]
	public bool SetChain(Transform[] hierarchy, Transform root)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xF2E610", Offset = "0xF2E610", VA = "0xF2E610")]
	public void AddBone(Transform bone)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xF2E73C", Offset = "0xF2E73C", VA = "0xF2E73C", Slot = "9")]
	public override void StoreDefaultLocalState()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xF2E798", Offset = "0xF2E798", VA = "0xF2E798", Slot = "8")]
	public override void FixTransforms()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xF2E808", Offset = "0xF2E808", VA = "0xF2E808", Slot = "4")]
	public override bool IsValid(ref string message)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xF2EBCC", Offset = "0xF2EBCC", VA = "0xF2EBCC", Slot = "6")]
	public override Point[] GetPoints()
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xF2EBD4", Offset = "0xF2EBD4", VA = "0xF2EBD4", Slot = "7")]
	public override Point GetPoint(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xF2ECC8", Offset = "0xF2ECC8", VA = "0xF2ECC8", Slot = "10")]
	protected override void OnInitiate()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xF2ECCC", Offset = "0xF2ECCC", VA = "0xF2ECCC", Slot = "11")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xF2ECD0", Offset = "0xF2ECD0", VA = "0xF2ECD0")]
	protected void InitiateBones()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xF2F1D8", Offset = "0xF2F1D8", VA = "0xF2F1D8")]
	protected Vector3 GetSingularityOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xF2F584", Offset = "0xF2F584", VA = "0xF2F584")]
	private bool SingularityDetected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xF2E420", Offset = "0xF2E420", VA = "0xF2E420")]
	public IKSolverHeuristic()
	{
	}
}
[Token(Token = "0x20001B8")]
public abstract class RotationLimit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Quaternion defaultLocalRotation;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initiated;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool applicationQuit;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool defaultLocalRotationSet;

	[Token(Token = "0x17000182")]
	public Vector3 secondaryAxis
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xF2FB04", Offset = "0xF2FB04", VA = "0xF2FB04")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000183")]
	public Vector3 crossAxis
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xF2FB10", Offset = "0xF2FB10", VA = "0xF2FB10")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xF2F818", Offset = "0xF2F818", VA = "0xF2F818")]
	public void SetDefaultLocalRotation()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xF2F850", Offset = "0xF2F850", VA = "0xF2F850")]
	public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xF2DA14", Offset = "0xF2DA14", VA = "0xF2DA14")]
	public bool Apply()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xF2D618", Offset = "0xF2D618", VA = "0xF2D618")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000A67")]
	protected abstract Quaternion LimitRotation(Quaternion rotation);

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xF2FA08", Offset = "0xF2FA08", VA = "0xF2FA08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xF2FB40", Offset = "0xF2FB40", VA = "0xF2FB40")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xF2FB44", Offset = "0xF2FB44", VA = "0xF2FB44")]
	protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xF2FC18", Offset = "0xF2FC18", VA = "0xF2FC18")]
	protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xF2FE70", Offset = "0xF2FE70", VA = "0xF2FE70")]
	protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
	{
		return default(float);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xF2FFC4", Offset = "0xF2FFC4", VA = "0xF2FFC4")]
	protected RotationLimit()
	{
	}
}
[Token(Token = "0x20001B9")]
[HelpURL("http://www.root-motion.com/finalikdox/html/page12.html")]
[AddComponentMenu("Scripts/RootMotion.FinalIK/Rotation Limits/Rotation Limit Hinge")]
public class RotationLimitHinge : RotationLimit
{
	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool useLimits;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float min;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float max;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float zeroAxisDisplayOffset;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion lastRotation;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastAngle;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xF30024", Offset = "0xF30024", VA = "0xF30024")]
	[ContextMenu("User Manual")]
	private void OpenUserManual()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xF30068", Offset = "0xF30068", VA = "0xF30068")]
	[ContextMenu("Scrpt Reference")]
	private void OpenScriptReference()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xF300AC", Offset = "0xF300AC", VA = "0xF300AC")]
	[ContextMenu("Support Group")]
	private void SupportGroup()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xF300F0", Offset = "0xF300F0", VA = "0xF300F0")]
	[ContextMenu("Asset Store Thread")]
	private void ASThread()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xF30134", Offset = "0xF30134", VA = "0xF30134", Slot = "4")]
	protected override Quaternion LimitRotation(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xF30150", Offset = "0xF30150", VA = "0xF30150")]
	private Quaternion LimitHinge(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xF30398", Offset = "0xF30398", VA = "0xF30398")]
	public RotationLimitHinge()
	{
	}
}
[Token(Token = "0x20001BA")]
public class SimpleAimingSystem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("AimPoser is a tool that returns an animation name based on direction.")]
	public AimPoser aimPoser;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Reference to the AimIK component.")]
	public AimIK aim;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Reference to the Animator component.")]
	public Animator animator;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Time of cross-fading from pose to pose.")]
	public float crossfadeTime;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Will keep the aim target at a distance.")]
	public float minAimDistance;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AimPoser.Pose aimPose;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AimPoser.Pose lastPose;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xF303FC", Offset = "0xF303FC", VA = "0xF303FC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xF3047C", Offset = "0xF3047C", VA = "0xF3047C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xF30564", Offset = "0xF30564", VA = "0xF30564")]
	private void LimitAimTarget()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xF30748", Offset = "0xF30748", VA = "0xF30748")]
	private void DirectCrossFade(string state, float target)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xF307D8", Offset = "0xF307D8", VA = "0xF307D8")]
	public SimpleAimingSystem()
	{
	}
}
[Token(Token = "0x20001BB")]
public class SolverManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("If true, will fix all the Transforms used by the solver to their initial state in each Update. This prevents potential problems with unanimated bones and animator culling with a small cost of performance. Not recommended for CCD and FABRIK solvers.")]
	public bool fixTransforms;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animation legacy;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool updateFrame;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool componentInitiated;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool skipSolverUpdate;

	[Token(Token = "0x17000184")]
	private bool animatePhysics
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xF30908", Offset = "0xF30908", VA = "0xF30908")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000185")]
	private bool isAnimated
	{
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xF30BC8", Offset = "0xF30BC8", VA = "0xF30BC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xF307EC", Offset = "0xF307EC", VA = "0xF307EC")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xF30880", Offset = "0xF30880", VA = "0xF30880", Slot = "4")]
	protected virtual void InitiateSolver()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xF30884", Offset = "0xF30884", VA = "0xF30884", Slot = "5")]
	protected virtual void UpdateSolver()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xF30888", Offset = "0xF30888", VA = "0xF30888", Slot = "6")]
	protected virtual void FixTransforms()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xF3088C", Offset = "0xF3088C", VA = "0xF3088C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xF30904", Offset = "0xF30904", VA = "0xF30904")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xF308B4", Offset = "0xF308B4", VA = "0xF308B4")]
	private void Initiate()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xF30B8C", Offset = "0xF30B8C", VA = "0xF30B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xF309D4", Offset = "0xF309D4", VA = "0xF309D4")]
	private void FindAnimatorRecursive(Transform t, bool findInChildren)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xF30C60", Offset = "0xF30C60", VA = "0xF30C60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xF30CAC", Offset = "0xF30CAC", VA = "0xF30CAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xF30CF8", Offset = "0xF30CF8", VA = "0xF30CF8")]
	public void UpdateSolverExternal()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xF2BE2C", Offset = "0xF2BE2C", VA = "0xF2BE2C")]
	public SolverManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BC")]
public class Items
{
	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static short version;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public short m_ItemNumber;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public byte m_ItemType;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public WeaponType m_WeaponType;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public short m_MaxCount;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public short m_Count;

	[NonSerialized]
	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Items m_AttachedWeapon;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_ItemName;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LanguageText m_ItemNameLT;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_FireRate;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public byte m_Scope;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public byte m_Skin;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public byte m_Attachment;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public byte m_MaxSkinIndex;

	[NonSerialized]
	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float KillForceMultiplier;

	[Token(Token = "0x17000186")]
	public bool IsDualWield
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xF30D30", Offset = "0xF30D30", VA = "0xF30D30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000187")]
	public bool IsMelee
	{
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xF30D40", Offset = "0xF30D40", VA = "0xF30D40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xF30D50", Offset = "0xF30D50", VA = "0xF30D50")]
	public Items()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xF30D60", Offset = "0xF30D60", VA = "0xF30D60")]
	public Items(Items source)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xF30DF4", Offset = "0xF30DF4", VA = "0xF30DF4")]
	public Items(BinaryReader reader)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xF30EF0", Offset = "0xF30EF0", VA = "0xF30EF0")]
	public static Items DeserializeItem(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xF3121C", Offset = "0xF3121C", VA = "0xF3121C")]
	public static byte[] SerializeItem(Items items)
	{
		return null;
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xF31474", Offset = "0xF31474", VA = "0xF31474")]
	public void SerializeInto(BinaryWriter writer)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xF312FC", Offset = "0xF312FC", VA = "0xF312FC")]
	private static BinaryWriter WriteData(BinaryWriter writer, Items items, short currentVersion)
	{
		return null;
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xF3107C", Offset = "0xF3107C", VA = "0xF3107C")]
	private static Items ReadItems(BinaryReader reader, Items items)
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xF314E8", Offset = "0xF314E8", VA = "0xF314E8")]
	public static short[] RandomEquipment()
	{
		return null;
	}
}
[Token(Token = "0x20001BD")]
public enum WeaponType
{
	[Token(Token = "0x400119E")]
	PISTOL,
	[Token(Token = "0x400119F")]
	RIFLE,
	[Token(Token = "0x40011A0")]
	SNIPER,
	[Token(Token = "0x40011A1")]
	GRENADE,
	[Token(Token = "0x40011A2")]
	SHOTGUN,
	[Token(Token = "0x40011A3")]
	MELEE,
	[Token(Token = "0x40011A4")]
	DUAL,
	[Token(Token = "0x40011A5")]
	DUAL_SHOTGUN
}
[Token(Token = "0x20001BE")]
public class DroneHit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Drone m_Drone;

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xF31620", Offset = "0xF31620", VA = "0xF31620")]
	public void Damage(float d)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xF3163C", Offset = "0xF3163C", VA = "0xF3163C")]
	public DroneHit()
	{
	}
}
[Token(Token = "0x20001BF")]
public class KillstreakSelection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int[] m_counts;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image[] killstreakImages;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LoadoutIconList m_KillstreakIcons;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<List<KillStreakBehaviors>> killstreakSlot;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LanguageText killstreakText;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI[] m_KillStreakLabels;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerLocalData m_PlayerLocalData;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xF31644", Offset = "0xF31644", VA = "0xF31644")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xF3183C", Offset = "0xF3183C", VA = "0xF3183C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xF31B20", Offset = "0xF31B20", VA = "0xF31B20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xF31670", Offset = "0xF31670", VA = "0xF31670")]
	private void SetKillstreakSlots()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xF31C14", Offset = "0xF31C14", VA = "0xF31C14")]
	public void SelectKillStreak(int value)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xF31DD0", Offset = "0xF31DD0", VA = "0xF31DD0")]
	public void UpdateKillStreakIcons(int k1, int k2, int k3)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xF31934", Offset = "0xF31934", VA = "0xF31934")]
	public void UpdateKillstreakNames()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xF31F80", Offset = "0xF31F80", VA = "0xF31F80")]
	public KillstreakSelection()
	{
	}
}
[Token(Token = "0x20001C0")]
public class RCHit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RCCar m_RCCar;

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xF32004", Offset = "0xF32004", VA = "0xF32004")]
	public void Damage(float d)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xF32020", Offset = "0xF32020", VA = "0xF32020")]
	public RCHit()
	{
	}
}
[Token(Token = "0x20001C1")]
public class TurretHit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Turret m_Turret;

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xF32028", Offset = "0xF32028", VA = "0xF32028")]
	public void Damage(float d)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xF32044", Offset = "0xF32044", VA = "0xF32044")]
	public TurretHit()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C2")]
public class Loadout
{
	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_LoadoutName;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Items m_Primary;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Items m_Secondary;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Items m_Grenade;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Items m_GrenadeSecondary;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Items m_MeleePrimary;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Items m_MeleeSecondary;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ScriptableTacticalGear m_TacticalGear;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_Hat;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_Suit;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_Mask;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int m_Body;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_Glasses;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int m_Extra2;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_Extra3;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int m_Extra4;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int m_Extra5;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public byte[] m_Clothing;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public byte[] m_ClothingInit;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int m_K1;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int m_K2;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int m_K3;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_perk1;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_perk2;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xF3204C", Offset = "0xF3204C", VA = "0xF3204C")]
	public Loadout()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xF320B4", Offset = "0xF320B4", VA = "0xF320B4")]
	public static byte[] SerializeLoadouts(List<Loadout> loadouts, int version, int currentLoadout)
	{
		return null;
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xF32F88", Offset = "0xF32F88", VA = "0xF32F88")]
	public static List<Loadout> DeserializeLoadouts(byte[] bytes, ref int currentLoadout)
	{
		return null;
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xF32E88", Offset = "0xF32E88", VA = "0xF32E88")]
	private static BinaryWriter WriteBytes(BinaryWriter writer, byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xF33AF4", Offset = "0xF33AF4", VA = "0xF33AF4")]
	private static byte[] ReadBytes(BinaryReader binaryReader)
	{
		return null;
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xF33BA0", Offset = "0xF33BA0", VA = "0xF33BA0")]
	public void ModifyLoadout(Loadout loadout, Items primaryWpn, Items secondaryWpn)
	{
	}
}
[Token(Token = "0x20001C4")]
public class ModSkins : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001C5")]
	public struct GameObjectIdPair
	{
		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gameObject;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int id;
	}

	[Serializable]
	[Token(Token = "0x20001C6")]
	public class MeshGroup
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_MaterialIdIsAlsoRendererMaterialIndex;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int materialId;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer[] meshRenderers;

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xF33FD0", Offset = "0xF33FD0", VA = "0xF33FD0")]
		public MeshGroup()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C7")]
	public class AlvoIronSight
	{
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AlvoIronSightState m_StateWhenHidden;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion m_HiddenRotation;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion m_ShownRotation;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xF35278", Offset = "0xF35278", VA = "0xF35278")]
		public void Hide(bool value)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xF35428", Offset = "0xF35428", VA = "0xF35428")]
		public AlvoIronSight()
		{
		}
	}

	[Token(Token = "0x20001C8")]
	public enum AlvoIronSightState
	{
		[Token(Token = "0x40011ED")]
		None,
		[Token(Token = "0x40011EE")]
		RotateWhenHidden,
		[Token(Token = "0x40011EF")]
		DeactivateWhenHidden
	}

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_isFirstPersonWeapon;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] m_MeshRenderers;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Used to group meshes by index of material needed. Some guns use more than 1 material. The above variable MeshRenderers is automatically added as index 0 in this variable if possible. If weapon only uses 1 material throughout this can be left empty.")]
	public List<MeshGroup> m_MeshGroups;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer m_SkinnedMesh;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] m_MaterialIcons;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AlvoIronSight[] m_IronSights;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public GameObject m_Navtech;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_RedDot;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_OpticScope;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_LongRangeScope;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_RedDotTall;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_HoloBlueArrow;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_NavtechBlueSight;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Space]
	public GameObject m_LaserAttachment;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_FlashlightAttachment;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PlayerLoadoutAttachmentsAndScopes m_LoadoutAddons;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AttachmentController m_AttachmentController;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MeshRenderer[] m_RenderersExchangeables;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material[] m_ExchangeablesMaterials;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public short m_WeaponNumber;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int m_SkinIndex;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] gos;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material loadedMaterial;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int loadedMaterialIndex;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Items m_WeaponItem;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool firstPerson;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xF33C10", Offset = "0xF33C10", VA = "0xF33C10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xF33F5C", Offset = "0xF33F5C", VA = "0xF33F5C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xF33F60", Offset = "0xF33F60", VA = "0xF33F60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xF33D88", Offset = "0xF33D88", VA = "0xF33D88")]
	private void SetUpFirstMeshGroup()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xF33FD8", Offset = "0xF33FD8", VA = "0xF33FD8")]
	public void ModSkin(Skins skins)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xF342D0", Offset = "0xF342D0", VA = "0xF342D0")]
	public void ModSkin(short weaponNumber, byte skinIndex, byte scope)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xF348B8", Offset = "0xF348B8", VA = "0xF348B8")]
	public void ModSkin(short weaponNumber, byte skinIndex, byte scope, byte attachment)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xF34C1C", Offset = "0xF34C1C", VA = "0xF34C1C")]
	public void ModSkin(short weaponNumber, byte skinIndex)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xF34C2C", Offset = "0xF34C2C", VA = "0xF34C2C")]
	public void ModSkin(byte id)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xF342BC", Offset = "0xF342BC", VA = "0xF342BC")]
	private void SetupWeapon()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xF34C38", Offset = "0xF34C38", VA = "0xF34C38")]
	private void M16()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xF34CBC", Offset = "0xF34CBC", VA = "0xF34CBC")]
	private void SetMaterials()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xF34EB4", Offset = "0xF34EB4", VA = "0xF34EB4")]
	public void SetMaterials(Material mat, int index = 0, int secondaryIndex = 0)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xF34008", Offset = "0xF34008", VA = "0xF34008")]
	private void ResetScope()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xF344FC", Offset = "0xF344FC", VA = "0xF344FC")]
	public void SelectScope(int scope)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xF34924", Offset = "0xF34924", VA = "0xF34924")]
	private void ResetAttachment()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xF34A24", Offset = "0xF34A24", VA = "0xF34A24")]
	public void SelectAttachment(int attachment)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xF3531C", Offset = "0xF3531C", VA = "0xF3531C")]
	private GameObjectIdPair GetPairById(GameObjectIdPair[] arr, int id)
	{
		return default(GameObjectIdPair);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xF35370", Offset = "0xF35370", VA = "0xF35370")]
	public void SetLayers(bool localPlayer)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xF35420", Offset = "0xF35420", VA = "0xF35420")]
	public ModSkins()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C9")]
public class Skins
{
	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40011F1")]
	public const int SkinCost = 400;

	[Token(Token = "0x40011F2")]
	private const int m_Version = 3;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public short m_WeaponNumber;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Number for internal reference")]
	public byte m_SkinNumber;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Index for material array in ModSkins and purchases bit vector indexes, or at least that's the intended purpose, most stuff uses SkinNumber so if they are different it causes errors, can be fixed if needed")]
	public byte m_Index;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("How many materials does this skin use, most use only 1. Should never be 0.")]
	public byte m_MaterialCount;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool m_Purchased;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SeasonalEvents m_UnlockedOn;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_DisableOnSpecifiedPlatform;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Platform m_DisableFor;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_SkinName;

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xF35430", Offset = "0xF35430", VA = "0xF35430")]
	public static byte[] SerializeListSkins(List<Skins> skins)
	{
		return null;
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xF35534", Offset = "0xF35534", VA = "0xF35534")]
	private static BinaryWriter Serialize(BinaryWriter writer, Skins skins)
	{
		return null;
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xF355E0", Offset = "0xF355E0", VA = "0xF355E0")]
	public static byte[] Serialize(Skins skins)
	{
		return null;
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xF35688", Offset = "0xF35688", VA = "0xF35688")]
	public static List<Skins> DeserializeListSkins(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xF35934", Offset = "0xF35934", VA = "0xF35934")]
	public static Skins Deserialize(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xF35880", Offset = "0xF35880", VA = "0xF35880")]
	private static Skins Deserialize(BinaryReader reader, Skins skins)
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xF35870", Offset = "0xF35870", VA = "0xF35870")]
	public Skins()
	{
	}
}
[Token(Token = "0x20001CA")]
public class DebugNotification : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001CB")]
	[CompilerGenerated]
	private sealed class <NotificationTime>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugNotification <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xF35BF0", Offset = "0xF35BF0", VA = "0xF35BF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xF35C38", Offset = "0xF35C38", VA = "0xF35C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xF35AEC", Offset = "0xF35AEC", VA = "0xF35AEC")]
		[DebuggerHidden]
		public <NotificationTime>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xF35B80", Offset = "0xF35B80", VA = "0xF35B80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xF35B84", Offset = "0xF35B84", VA = "0xF35B84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xF35BF8", Offset = "0xF35BF8", VA = "0xF35BF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform t;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text notificationLbl;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup group;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds notificationWait;

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xF35A00", Offset = "0xF35A00", VA = "0xF35A00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xF35A08", Offset = "0xF35A08", VA = "0xF35A08")]
	public void SetNotification(string text)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xF35A84", Offset = "0xF35A84", VA = "0xF35A84")]
	[IteratorStateMachine(typeof(<NotificationTime>d__6))]
	private IEnumerator NotificationTime()
	{
		return null;
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xF35B14", Offset = "0xF35B14", VA = "0xF35B14")]
	public DebugNotification()
	{
	}
}
[Token(Token = "0x20001CC")]
public enum DebugNotificationTypes
{
	[Token(Token = "0x4001204")]
	none,
	[Token(Token = "0x4001205")]
	party
}
[Token(Token = "0x20001CD")]
public class DebugNotificationManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DebugNotification[] notifications;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject parentGo;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform parentTransform;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showPartyDebugs;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int notificationIndex;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugNotificationManager m_Instance;

	[Token(Token = "0x1700018A")]
	public static DebugNotificationManager Instance
	{
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xF35C40", Offset = "0xF35C40", VA = "0xF35C40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xF35C88", Offset = "0xF35C88", VA = "0xF35C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xF35DD4", Offset = "0xF35DD4", VA = "0xF35DD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xF35F78", Offset = "0xF35F78", VA = "0xF35F78")]
	public void ShowNotification(string text, DebugNotificationTypes type)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xF3600C", Offset = "0xF3600C", VA = "0xF3600C")]
	public DebugNotificationManager()
	{
	}
}
[Token(Token = "0x20001CE")]
public class DebugNotificationReposition : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform t;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugNotificationReposition m_Instance;

	[Token(Token = "0x1700018B")]
	public static DebugNotificationReposition Instance
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xF3601C", Offset = "0xF3601C", VA = "0xF3601C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xF36064", Offset = "0xF36064", VA = "0xF36064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xF36178", Offset = "0xF36178", VA = "0xF36178")]
	public DebugNotificationReposition()
	{
	}
}
[Token(Token = "0x20001CF")]
public class DebugTrophiesUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] progress;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text[] requirement;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle[] unlocked;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AlvoTrophies trophies;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xF36180", Offset = "0xF36180", VA = "0xF36180")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xF3621C", Offset = "0xF3621C", VA = "0xF3621C")]
	public void UpdateValues()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xF36428", Offset = "0xF36428", VA = "0xF36428")]
	public DebugTrophiesUI()
	{
	}
}
[Token(Token = "0x20001D0")]
public class LoggingManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001D1")]
	public class RotationalData
	{
		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_FrameNumber;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion m_LefthandRotation;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion m_RightHandRotation;

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xF365C8", Offset = "0xF365C8", VA = "0xF365C8")]
		public RotationalData()
		{
		}
	}

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerLocalData m_PlayerLocalData;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_ApplicationDataPath;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_LoadingLocation;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_FileName;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_RecordPlayerRotations;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RotationalData m_RotationalData;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<RotationalData> m_RotationalDatas;

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xF36430", Offset = "0xF36430", VA = "0xF36430")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xF365D0", Offset = "0xF365D0", VA = "0xF365D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xF36674", Offset = "0xF36674", VA = "0xF36674")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xF36744", Offset = "0xF36744", VA = "0xF36744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xF36848", Offset = "0xF36848", VA = "0xF36848")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xF368A8", Offset = "0xF368A8", VA = "0xF368A8")]
	private void SaveFile()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xF36C9C", Offset = "0xF36C9C", VA = "0xF36C9C")]
	public void LoadFile()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xF36CA0", Offset = "0xF36CA0", VA = "0xF36CA0")]
	public LoggingManager()
	{
	}
}
[Token(Token = "0x20001D2")]
public enum LoadRequestTypes
{
	[Token(Token = "0x400121D")]
	PlayerCharacter,
	[Token(Token = "0x400121E")]
	MainMenuCharacter,
	[Token(Token = "0x400121F")]
	GunSkin,
	[Token(Token = "0x4001220")]
	RemoveAllPlayerCharacters,
	[Token(Token = "0x4001221")]
	RemoveAllMainMenuCharacters,
	[Token(Token = "0x4001222")]
	RemoveAllGunSkins
}
[Token(Token = "0x20001D3")]
public class BotTrackerManager : PunBehaviour
{
	[Token(Token = "0x20001D4")]
	[CompilerGenerated]
	private sealed class <DoDropAllBots>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotTrackerManager <>4__this;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xF37F04", Offset = "0xF37F04", VA = "0xF37F04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xF37F4C", Offset = "0xF37F4C", VA = "0xF37F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xF37668", Offset = "0xF37668", VA = "0xF37668")]
		[DebuggerHidden]
		public <DoDropAllBots>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xF37DEC", Offset = "0xF37DEC", VA = "0xF37DEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xF37DF0", Offset = "0xF37DF0", VA = "0xF37DF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xF37F0C", Offset = "0xF37F0C", VA = "0xF37F0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlayerData> m_BotsToDestroy;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_CheckBotTimers;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int m_TotalPlayerCount;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject botToDestroy;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerManager m_PlayerManager;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AIManager m_AIManager;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_CheckBotTime;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_EvaluatingBots;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int humanPlayerCount;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int botPlayerCount;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int humansInTeam1;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int humansInTeam2;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int botsRemovalThreshold;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<PlayerData> botList;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int maxAllowedPlayerCount;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int maxSizeOfTeam;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine DropBotsCoroutine;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool SendEvent;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject g;

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xF36CA8", Offset = "0xF36CA8", VA = "0xF36CA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xF36D24", Offset = "0xF36D24", VA = "0xF36D24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xF36D4C", Offset = "0xF36D4C", VA = "0xF36D4C")]
	public void CheckBots()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xF37330", Offset = "0xF37330", VA = "0xF37330")]
	private void CheckDestroyQueue()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xF375BC", Offset = "0xF375BC", VA = "0xF375BC")]
	public void DropAllBots()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xF37600", Offset = "0xF37600", VA = "0xF37600")]
	[IteratorStateMachine(typeof(<DoDropAllBots>d__23))]
	private IEnumerator DoDropAllBots()
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xF36ED4", Offset = "0xF36ED4", VA = "0xF36ED4")]
	private void EvaluateBots()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xF37C90", Offset = "0xF37C90", VA = "0xF37C90")]
	private void DropTeamBots(ref List<PlayerData> botList, int maxPlayers = 10)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xF37800", Offset = "0xF37800", VA = "0xF37800")]
	private void DropLastBot(ref List<PlayerData> botList, bool removeFromTeam = false, int team = 1)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xF37DA8", Offset = "0xF37DA8", VA = "0xF37DA8", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xF37DD8", Offset = "0xF37DD8", VA = "0xF37DD8", Slot = "48")]
	public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xF37BB0", Offset = "0xF37BB0", VA = "0xF37BB0")]
	private void SpawnAdditionalBot()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xF37DDC", Offset = "0xF37DDC", VA = "0xF37DDC")]
	public BotTrackerManager()
	{
	}
}
[Token(Token = "0x20001D6")]
public class CanvasClass : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EndGameSystem m_EndGameSystem;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AlvoEndGameSelect m_AlvoEndGameSelect;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MiniMapSetup m_MiniMapSetup;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_SpawnParent;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrInGameUIManager m_VrInGameUIManager;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MatchRewardsUI m_MatchRewardsUI;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_EndGameRoot;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform m_PrivateEndGameRoot;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_EndGameObject;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_ScoreSND;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_ScoreZombie;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_ScoreHP;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_PrivateMatchUI;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CapsuleCollider m_CapsuleCollider;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text m_KillStreakLabel;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Transform m_EndGamePos;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject m_EndGameParent;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject m_EndGameRig;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image[] m_KillStreaks;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite[] m_Icons;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image[] m_Outlines;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_PlayerRig;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VrPlayerController m_PlayerController;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CharacterController m_CharacterController;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public CameraConstraint m_CameraConstraint;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_Pointer;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Camera m_EventCamera;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public VignettingVR m_Vignetting;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text DisplayNameFFA;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Color invisible;

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xF37F78", Offset = "0xF37F78", VA = "0xF37F78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xF38068", Offset = "0xF38068", VA = "0xF38068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xF3806C", Offset = "0xF3806C", VA = "0xF3806C")]
	public void PositionEndGame()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xF380F4", Offset = "0xF380F4", VA = "0xF380F4")]
	public void ResetIcon()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xF38178", Offset = "0xF38178", VA = "0xF38178")]
	public void ActivateIcon(int icon)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xF381D4", Offset = "0xF381D4", VA = "0xF381D4")]
	public void DisableIcon(int icon)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xF38234", Offset = "0xF38234", VA = "0xF38234")]
	public void CurrentIcon(int icon)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xF38290", Offset = "0xF38290", VA = "0xF38290")]
	public CanvasClass()
	{
	}
}
[Token(Token = "0x20001D7")]
public class EffectsManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BulletTrail> bulletLines;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem[] m_MuzzleFlashList;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem[] m_MuffledMuzzleFlashList;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RagdollElement> playerRagdolls;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<RagdollElement> AIRagdolls;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_BulletLineCounter;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_MuzzleFlashCounter;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_PlayerRagdollCounter;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_AIRagdollCounter;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int bulletLineInterval;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int localLineCount;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int tpLineCount;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xF3829C", Offset = "0xF3829C", VA = "0xF3829C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xF38534", Offset = "0xF38534", VA = "0xF38534")]
	public void SetAIRagdoll(Transform[] playerTransforms, byte[] customization, Vector3 pos, Quaternion rot, [Optional] Vector3 firePos, bool explosion = false, bool upwards = true)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xF38668", Offset = "0xF38668", VA = "0xF38668")]
	public void SetPlayerRagdoll(Transform[] playerTransforms, byte[] customization, Vector3 pos, Quaternion rot, [Optional] Vector3 firePos, bool explosion = false, bool upwards = true)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xF3879C", Offset = "0xF3879C", VA = "0xF3879C")]
	public void SetBulletLineThirdPerson(Vector3 pos, Vector3 hitPos, bool muzzleFlash)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xF389A8", Offset = "0xF389A8", VA = "0xF389A8")]
	public void SetBulletLine(Vector3 pos, Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xF38AA0", Offset = "0xF38AA0", VA = "0xF38AA0")]
	public void UpdateBulletLines(float dt)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xF38B3C", Offset = "0xF38B3C", VA = "0xF38B3C")]
	public EffectsManager()
	{
	}
}
[Token(Token = "0x20001D8")]
public class EndGame : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_CoinsForKill;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_CoinsForAssists;

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xF38C28", Offset = "0xF38C28", VA = "0xF38C28")]
	public int CalculateCoins(int kills, int assists)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xF38C38", Offset = "0xF38C38", VA = "0xF38C38")]
	public EndGame()
	{
	}
}
[Token(Token = "0x20001D9")]
public class EndGameSystem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Voices")]
	public List<VoiceChat> m_VoicesSpawned;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public System.Action OnVoiceSpawnedUpdated;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasClass m_CanvasClass;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PlayerProfile> tempList;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerRankIcons rankIcons;

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xF38C40", Offset = "0xF38C40", VA = "0xF38C40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xF38C98", Offset = "0xF38C98", VA = "0xF38C98")]
	public void EnableTeamVoiceBubbles(int myTeam)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xF38D74", Offset = "0xF38D74", VA = "0xF38D74")]
	public void BlockVoice(int id, int playerId)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xF38E44", Offset = "0xF38E44", VA = "0xF38E44")]
	public VoiceChat SetButton(int id, int playerId, VoiceButton voiceButton, int team, ulong ps4ID = 0uL)
	{
		return null;
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xF391B0", Offset = "0xF391B0", VA = "0xF391B0")]
	public void SetPlayerVoiceToNoUse(int _playerWorldNumber)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xF39354", Offset = "0xF39354", VA = "0xF39354")]
	public EndGameSystem()
	{
	}
}
[Token(Token = "0x20001DA")]
public class FFAManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001DB")]
	private enum State
	{
		[Token(Token = "0x4001288")]
		None,
		[Token(Token = "0x4001289")]
		PreGame,
		[Token(Token = "0x400128A")]
		MidGame,
		[Token(Token = "0x400128B")]
		EndGame
	}

	[Token(Token = "0x20001DC")]
	[CompilerGenerated]
	private sealed class <DestroyTiming>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int i;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0xF3A44C", Offset = "0xF3A44C", VA = "0xF3A44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0xF3A494", Offset = "0xF3A494", VA = "0xF3A494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xF3A224", Offset = "0xF3A224", VA = "0xF3A224")]
		[DebuggerHidden]
		public <DestroyTiming>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xF3A384", Offset = "0xF3A384", VA = "0xF3A384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xF3A388", Offset = "0xF3A388", VA = "0xF3A388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xF3A454", Offset = "0xF3A454", VA = "0xF3A454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DD")]
	[CompilerGenerated]
	private sealed class <NextGameCounter>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0xF3A4D4", Offset = "0xF3A4D4", VA = "0xF3A4D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0xF3A51C", Offset = "0xF3A51C", VA = "0xF3A51C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xF3A2AC", Offset = "0xF3A2AC", VA = "0xF3A2AC")]
		[DebuggerHidden]
		public <NextGameCounter>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xF3A49C", Offset = "0xF3A49C", VA = "0xF3A49C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xF3A4A0", Offset = "0xF3A4A0", VA = "0xF3A4A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xF3A4DC", Offset = "0xF3A4DC", VA = "0xF3A4DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_GameTimeLeft;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_PreGameTimer;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_MapSelectionTimer;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LanguageText m_FFAPreGameText;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LanguageText m_TDMPreGameText;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LanguageText m_HPPreGameText;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LanguageText m_CurrentLanguageText;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string m_PreGameText;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public bool m_EndGameFFA;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool m_StartGameFFA;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool m_EndGameFFATransition;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool m_ScoreboardOpen;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool m_MapSelection;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool m_RewardsOpen;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_NextMapToLoad;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimeSpan m_TimeSpan;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_LoadedNewLevel;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_MapSelectionCounter;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float sendTimer;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float labelTimer;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int team1ExtraScore;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int team2ExtraScore;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private State state;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool playedEndMusic;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public System.Action OnGameModeEnded;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xF39414", Offset = "0xF39414", VA = "0xF39414")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xF395D8", Offset = "0xF395D8", VA = "0xF395D8")]
	public void UpdateFFA()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xF39534", Offset = "0xF39534", VA = "0xF39534")]
	private void SwitchToState(State nextState)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xF39A1C", Offset = "0xF39A1C", VA = "0xF39A1C")]
	private void PreGameEnter()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xF396DC", Offset = "0xF396DC", VA = "0xF396DC")]
	private void PreGameUpdate()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xF39AA4", Offset = "0xF39AA4", VA = "0xF39AA4")]
	private void MidGameEnter()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xF39854", Offset = "0xF39854", VA = "0xF39854")]
	private void MidGameUpdate()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xF39BD4", Offset = "0xF39BD4", VA = "0xF39BD4")]
	private void EndGameEnter()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xF39928", Offset = "0xF39928", VA = "0xF39928")]
	private void EndGameUpdate()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xF39CBC", Offset = "0xF39CBC", VA = "0xF39CBC")]
	public void UpdateTime(float gameTime)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xF39C90", Offset = "0xF39C90", VA = "0xF39C90")]
	private void LoadNewLevel()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xF39CC4", Offset = "0xF39CC4", VA = "0xF39CC4")]
	public void EndGame(bool preEnd = false)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xF3A1BC", Offset = "0xF3A1BC", VA = "0xF3A1BC")]
	[IteratorStateMachine(typeof(<DestroyTiming>d__38))]
	private IEnumerator DestroyTiming(int i)
	{
		return null;
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xF3A24C", Offset = "0xF3A24C", VA = "0xF3A24C")]
	[IteratorStateMachine(typeof(<NextGameCounter>d__39))]
	private IEnumerator NextGameCounter()
	{
		return null;
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xF3A2D4", Offset = "0xF3A2D4", VA = "0xF3A2D4")]
	private void ResetVariables()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xF3A320", Offset = "0xF3A320", VA = "0xF3A320")]
	public FFAManager()
	{
	}
}
[Token(Token = "0x20001DE")]
public class GamePlayManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text m_GameTimeLabel;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_GameTime;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_TimeUntilStart;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_Timer;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_GameStarted;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool m_Ready;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool m_Init;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int KillsLeft;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_EndGameObject;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_EndGameObjectTeamDM;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xF3A524", Offset = "0xF3A524", VA = "0xF3A524")]
	public void UpdateKills()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xF3A534", Offset = "0xF3A534", VA = "0xF3A534")]
	public void UpdateInit(float gameStartTime, float gameTime)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xF3A558", Offset = "0xF3A558", VA = "0xF3A558")]
	public void ReadyGame()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xF3A5A8", Offset = "0xF3A5A8", VA = "0xF3A5A8")]
	private void Update1()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xF3A870", Offset = "0xF3A870", VA = "0xF3A870")]
	private void StopGame()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xF3A8E0", Offset = "0xF3A8E0", VA = "0xF3A8E0")]
	public GamePlayManager()
	{
	}
}
[Token(Token = "0x20001DF")]
public class LabelDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xF3A8F0", Offset = "0xF3A8F0", VA = "0xF3A8F0")]
	public LabelDisplay()
	{
	}
}
[Token(Token = "0x20001E0")]
public class LandingManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xF3A8F8", Offset = "0xF3A8F8", VA = "0xF3A8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xF3A8FC", Offset = "0xF3A8FC", VA = "0xF3A8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xF3A900", Offset = "0xF3A900", VA = "0xF3A900")]
	public LandingManager()
	{
	}
}
[Token(Token = "0x20001E1")]
public class LevelManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001E2")]
	public enum EntityState
	{
		[Token(Token = "0x4001351")]
		NotSpawned,
		[Token(Token = "0x4001352")]
		Spawned,
		[Token(Token = "0x4001353")]
		Spectating,
		[Token(Token = "0x4001354")]
		OnSndRoundEnd,
		[Token(Token = "0x4001355")]
		Down,
		[Token(Token = "0x4001356")]
		Dead,
		[Token(Token = "0x4001357")]
		OnGameEnd
	}

	[Serializable]
	[Token(Token = "0x20001E3")]
	public class SpawnedTargetData
	{
		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerId;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform t;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distanceFromPlayer;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerData playerData;

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xF42230", Offset = "0xF42230", VA = "0xF42230")]
		public SpawnedTargetData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001E4")]
	public struct SpawnOptionsData
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool EnableSpawnPointOverrides;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float MinSpawnDistance;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float MinSpawnDistanceSND;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float BotRespawnDelay;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpawnYOffset;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space]
		public bool SwapSidesInTdm;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("To make sure we don't swap sides all the time, use this time threshold.")]
		public float TdmSideSwapThreshold;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space]
		public float MinDistance;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxDistance;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask VisibilityMask;
	}

	[Token(Token = "0x20001E6")]
	[CompilerGenerated]
	private sealed class <EnablePlayerController>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xF423E0", Offset = "0xF423E0", VA = "0xF423E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xF42428", Offset = "0xF42428", VA = "0xF42428", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xF422F8", Offset = "0xF422F8", VA = "0xF422F8")]
		[DebuggerHidden]
		public <EnablePlayerController>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xF42320", Offset = "0xF42320", VA = "0xF42320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xF42324", Offset = "0xF42324", VA = "0xF42324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xF423E8", Offset = "0xF423E8", VA = "0xF423E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E7")]
	[CompilerGenerated]
	private sealed class <InitializeDeathCamera>d__112 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject mgo;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xF4255C", Offset = "0xF4255C", VA = "0xF4255C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xF425A4", Offset = "0xF425A4", VA = "0xF425A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xF42430", Offset = "0xF42430", VA = "0xF42430")]
		[DebuggerHidden]
		public <InitializeDeathCamera>d__112(int <>1__state)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xF42458", Offset = "0xF42458", VA = "0xF42458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xF4245C", Offset = "0xF4245C", VA = "0xF4245C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xF42564", Offset = "0xF42564", VA = "0xF42564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E8")]
	[CompilerGenerated]
	private sealed class <SelectWeaponTiming>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool dragRight;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelManager <>4__this;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xF426A4", Offset = "0xF426A4", VA = "0xF426A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xF426EC", Offset = "0xF426EC", VA = "0xF426EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xF425AC", Offset = "0xF425AC", VA = "0xF425AC")]
		[DebuggerHidden]
		public <SelectWeaponTiming>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xF425D4", Offset = "0xF425D4", VA = "0xF425D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xF425D8", Offset = "0xF425D8", VA = "0xF425D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xF426AC", Offset = "0xF426AC", VA = "0xF426AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E9")]
	[CompilerGenerated]
	private sealed class <AutoSpawntiming>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xF427F8", Offset = "0xF427F8", VA = "0xF427F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xF42840", Offset = "0xF42840", VA = "0xF42840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xF426F4", Offset = "0xF426F4", VA = "0xF426F4")]
		[DebuggerHidden]
		public <AutoSpawntiming>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF4271C", Offset = "0xF4271C", VA = "0xF4271C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xF42720", Offset = "0xF42720", VA = "0xF42720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xF42800", Offset = "0xF42800", VA = "0xF42800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <GhostTiming>d__150 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xF42934", Offset = "0xF42934", VA = "0xF42934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0xF4297C", Offset = "0xF4297C", VA = "0xF4297C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xF42848", Offset = "0xF42848", VA = "0xF42848")]
		[DebuggerHidden]
		public <GhostTiming>d__150(int <>1__state)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xF42870", Offset = "0xF42870", VA = "0xF42870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xF42874", Offset = "0xF42874", VA = "0xF42874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF4293C", Offset = "0xF4293C", VA = "0xF4293C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EB")]
	[CompilerGenerated]
	private sealed class <SpawnTiming>d__204 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool spectator;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xF43D90", Offset = "0xF43D90", VA = "0xF43D90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xF43DD8", Offset = "0xF43DD8", VA = "0xF43DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF42984", Offset = "0xF42984", VA = "0xF42984")]
		[DebuggerHidden]
		public <SpawnTiming>d__204(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xF429AC", Offset = "0xF429AC", VA = "0xF429AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF429B0", Offset = "0xF429B0", VA = "0xF429B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xF43D98", Offset = "0xF43D98", VA = "0xF43D98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EC")]
	[CompilerGenerated]
	private sealed class <RespawnTiming>d__205 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xF44BE4", Offset = "0xF44BE4", VA = "0xF44BE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0xF44C2C", Offset = "0xF44C2C", VA = "0xF44C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xF43DE0", Offset = "0xF43DE0", VA = "0xF43DE0")]
		[DebuggerHidden]
		public <RespawnTiming>d__205(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xF43E08", Offset = "0xF43E08", VA = "0xF43E08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xF43E0C", Offset = "0xF43E0C", VA = "0xF43E0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xF44BEC", Offset = "0xF44BEC", VA = "0xF44BEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001ED")]
	[CompilerGenerated]
	private sealed class <RespawnPlayerGhost>d__207 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform position;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xF44F10", Offset = "0xF44F10", VA = "0xF44F10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xF44F58", Offset = "0xF44F58", VA = "0xF44F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xF44C34", Offset = "0xF44C34", VA = "0xF44C34")]
		[DebuggerHidden]
		public <RespawnPlayerGhost>d__207(int <>1__state)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xF44C5C", Offset = "0xF44C5C", VA = "0xF44C5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xF44C60", Offset = "0xF44C60", VA = "0xF44C60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xF44F18", Offset = "0xF44F18", VA = "0xF44F18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelManager m_Instance;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerLocalData m_LocalData;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerManager m_PlayerManager;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FPSPlayer m_FPSPlayer;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_FPSPlayerObject;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrPlayerController m_VrPlayerController;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EffectsManager m_EffectsManager;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GamePlayManager m_GamePlayManager;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ScoringManager m_ScoringManager;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SearchDestroyManager m_SearchDestroyManager;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SoundManager m_SoundManager;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TeamDeathMatchManager m_TeamDeathMatchManager;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FFAManager m_FFAManager;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HardpointManager m_HardpointManager;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NewLevelSelectManager m_NewLevelSelectManager;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Space]
	public Footsteps m_Footsteps;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public DamageIndicator m_DamageIndicator;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BotTrackerManager m_BotTrackerManager;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public KillStreakManager m_KillStreakManager;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MarkerManagers m_MarkerManager;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DogManager m_DogManager;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CanvasClass m_CanvasClass;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VrInGameUIManager m_UiManager;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VrBombManager m_BombManager;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SNDConfigs m_SNDConfigs;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TDMSpawnConfig m_TdmConfig;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ZombieNpcManager m_ZombieNPCManager;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AIManager m_AIManager;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Canvas m_MainCanvas;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private WStuff[] wStuff;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Dictionary<WFilter, WStuff> wStuffDic;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public NetManager m_NetworkManager;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public NetworkChat m_NetworkChat;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public PlayerWeapons m_FPSWeapons;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public InputControl m_InputControl;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public FPSRigidBodyWalker m_FPSRigidBodyWalker;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject m_FPSCameraObject;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public List<SpawnedTarget> m_AllTargets;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject m_StartPanelObject;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public CanvasGroup m_StartPanelCanvas;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject m_AllControlsObject;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject m_TimeToStartObject;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AmmoText m_AmmoText1;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AmmoText m_AmmoText2;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[Tooltip("Enable or disable the aiming reticle.")]
	public bool crosshairEnabled;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject crosshairUiObj;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[HideInInspector]
	public Image crosshairUiImage;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[HideInInspector]
	public RectTransform crosshairUiRect;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject m_8xCrossHair;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[HideInInspector]
	public float crosshairWidth;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float crosshairSize;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool autoSpawn;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	public bool autoSpawnGhost;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public LayerMask m_FirstPersonLayerMaskView;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LayerMask m_ThirdPersonLayermaskView;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Camera m_MainCamera;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Camera m_WeaponCamera;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform m_MainCameraTransform;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Animator CameraAnimatorComponent;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Transform m_AimTransform;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public LayerMask m_TeamDMViewCam;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Camera m_UICamera;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject m_PlayerPrefab;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool m_PlayerSpawned;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject m_StartGameObject;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Text m_StartGameTimer;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Vector3 m_PlayerInitialPosition;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float m_GameStartedTimer;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public DefenseTarget m_CurrentBombPlacement;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public DefenseTarget m_BombLocation;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float m_Alpha;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Text m_PrompterLabel;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Image m_HealthIndicator;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Text m_MapTimerLabel;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public bool m_StopGamePlay;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
	public bool m_CanSpawn;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x252")]
	public bool m_UsingBots;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x253")]
	public bool initSpawn;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public bl_MiniMap m_MiniMap;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject m_EndGameMapSelection;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject m_RewardsObj;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Text m_ExperiencePoints;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Text m_AlvoCoins;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public AlvoTrophies m_AlvoTrophies;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject m_IphoneHand;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public ThirdPersonCamera.CameraController m_FollowCamController;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private float m_PressOPtions;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private TimeSpan m_TimeSpan;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject empty;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public bool trainingMode;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Action<EntityState> OnEntityStateChange;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private readonly WaitForEndOfFrame waitEndFrame;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private readonly WaitForSeconds waitSelectWeapon;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float dt;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public bool m_InThirdPerson;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private WaitForSeconds wait02;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private bool m_CanSwitchWeapons;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E1")]
	private bool m_Primary;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E2")]
	public bool teamsHaveChanged;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	[Header("Search And Destroy")]
	public int Team1CharacterID;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public int Team2CharacterID;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public List<int> availableTeamCharacters;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public DefenseTarget m_Bomb;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public DefenseTarget m_SiteA;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public DefenseTarget m_SiteB;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Transform m_BombStartPos;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public int m_SiteConfiguration;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public float m_SDTimer;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public float m_SDTimerCache;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public GameObject m_BombSliderObject;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public float m_BombTimer;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public bool team1AllDead;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x335")]
	public bool team2AllDead;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x336")]
	public bool m_SettingBomb;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x337")]
	public bool m_DiffusingBomb;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public bool m_CanPickupBomb;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x339")]
	public bool m_TimerExpired;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33A")]
	public bool m_TeamKilled;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private float m_SDCounter;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private WaitForSeconds waitAutoSpawntime;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool setUpInit;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	private bool enoughPlayers;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public System.Action OnSpectatorChangePosition;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	[SerializeField]
	[Header("Spawning")]
	private SpawnOptionsData m_SpawnOptions;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private SpawnArea[] m_SpawnPoints;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private NetworkSpawner m_NetworkSpawner;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public SpawnArea[] m_AllSpawnPoints;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public SpawnArea[] m_InitialFFASpawnPoints;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private int m_SpawnIndex;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	private float m_SyncTimer;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private List<SpawnLocationFinder> m_SpawnLocationFinders;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private bool m_FoundSpawnLocation;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
	private Vector3 m_SpawnLocation;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private Vector3 m_SpawnRotation;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	private bool hpIsTheFirstSpawn;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public List<WorldSpaceMarker> m_AllMarkers;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	[Space]
	[Header("User Interface")]
	public GameObject m_LoadoutObject;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	[Header("GUI")]
	public GameObject m_TeamMarkerPrefab;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public Transform m_TeamMarkerParent;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public LayerMask m_MarkerMask;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public GameObject m_TeamMarkerNew;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public Transform m_TeamMarkerParentNew;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	[Header("Death")]
	public GameObject m_DeathPanel;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public GameObject m_DeathCamera;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public GameObject m_DeathPanelSearchDestroy;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	[Header("Chat")]
	public List<Text> messagesInGame;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public List<NetworkChat.KillMessage> killMessages;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public List<NetworkChat.KillMessage> systemMessages;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public InputField m_chatMessage;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	[Header("Hit Marker")]
	public GameObject hitmarkerUiObj;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	[HideInInspector]
	public Image hitmarkerUiImage;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	[HideInInspector]
	public RectTransform hitmarkerUiRect;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	[HideInInspector]
	public Sprite hitmarkerReticle;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	[Header("Scoring")]
	public Text[] m_PlayerNames;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public Text[] m_PlayerKills;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public Text[] m_PlayerDeaths;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public Text[] m_PlayerScore;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public GameObject m_ScoreBoard;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	[Header("EndGame Scoring")]
	public Text[] m_PlayerNamesEndGame;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public Text[] m_PlayerKillsEndGame;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public Text[] m_PlayerDeathsEndGame;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public Text[] m_PlayerScoreEndGame;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	[Header("EndGame Scoring Team")]
	public Text[] m_PlayerNamesEndGame1;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public Text[] m_PlayerKillsEndGame1;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public Text[] m_PlayerDeathsEndGame1;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public Text[] m_PlayerScoreEndGame1;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public Text[] m_PlayerNamesEndGame2;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public Text[] m_PlayerKillsEndGame2;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public Text[] m_PlayerDeathsEndGame2;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public Text[] m_PlayerScoreEndGame2;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public Text m_DeathKilledBy;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public Text m_DeathKilldBySD;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public Text m_SDTimerLabel;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	private bool m_ScoreboardOpen;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
	private int m_MarkerUpdateCount;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	[Header("Zombies")]
	public bool m_allDead;

	[Token(Token = "0x17000192")]
	public bool PlayerHandshakeEstablished
	{
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xF3A908", Offset = "0xF3A908", VA = "0xF3A908")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xF3A910", Offset = "0xF3A910", VA = "0xF3A910")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000193")]
	private static LevelManager Instance
	{
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xF3A91C", Offset = "0xF3A91C", VA = "0xF3A91C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000194")]
	public NewZombieModeManager m_ZombieModeManager
	{
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xF3A9E0", Offset = "0xF3A9E0", VA = "0xF3A9E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000195")]
	public SpawnOptionsData SpawnOptions
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xF409F4", Offset = "0xF409F4", VA = "0xF409F4")]
		get
		{
			return default(SpawnOptionsData);
		}
	}

	[Token(Token = "0x17000196")]
	public bool PlayerSpawned
	{
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xF40A0C", Offset = "0xF40A0C", VA = "0xF40A0C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xF40A14", Offset = "0xF40A14", VA = "0xF40A14")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000197")]
	public bool TdmSwapSpawnSide
	{
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xF40A20", Offset = "0xF40A20", VA = "0xF40A20")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xF40A28", Offset = "0xF40A28", VA = "0xF40A28")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000198")]
	public double TdmLastRespawnTime
	{
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xF40A34", Offset = "0xF40A34", VA = "0xF40A34")]
		[CompilerGenerated]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xF40A3C", Offset = "0xF40A3C", VA = "0xF40A3C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000199")]
	public NetworkSpawner NetworkSpawner
	{
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xF40A44", Offset = "0xF40A44", VA = "0xF40A44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xF3AA28", Offset = "0xF3AA28", VA = "0xF3AA28")]
	public WStuff GetWStuff(WFilter wFilter)
	{
		return null;
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xF3AB64", Offset = "0xF3AB64", VA = "0xF3AB64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xF3B220", Offset = "0xF3B220", VA = "0xF3B220")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xF3C3EC", Offset = "0xF3C3EC", VA = "0xF3C3EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xF3E4AC", Offset = "0xF3E4AC", VA = "0xF3E4AC")]
	[IteratorStateMachine(typeof(<EnablePlayerController>d__109))]
	private IEnumerator EnablePlayerController()
	{
		return null;
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xF39D5C", Offset = "0xF39D5C", VA = "0xF39D5C")]
	public void EndOfGame(bool preEnd = false)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xF3E714", Offset = "0xF3E714", VA = "0xF3E714")]
	public void ApplyDeathCamera(GameObject mGo)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xF3E734", Offset = "0xF3E734", VA = "0xF3E734")]
	[IteratorStateMachine(typeof(<InitializeDeathCamera>d__112))]
	private IEnumerator InitializeDeathCamera(GameObject mgo)
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xF3E7A8", Offset = "0xF3E7A8", VA = "0xF3E7A8")]
	public void SendChatClick()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xF3E7AC", Offset = "0xF3E7AC", VA = "0xF3E7AC")]
	public void SendChatButton()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xF3E7C8", Offset = "0xF3E7C8", VA = "0xF3E7C8")]
	public void Suicide()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xF3E7CC", Offset = "0xF3E7CC", VA = "0xF3E7CC")]
	public void DragSelectWeaponFPS(bool dragRight)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xF3E804", Offset = "0xF3E804", VA = "0xF3E804")]
	[IteratorStateMachine(typeof(<SelectWeaponTiming>d__119))]
	private IEnumerator SelectWeaponTiming(bool dragRight)
	{
		return null;
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xF3E880", Offset = "0xF3E880", VA = "0xF3E880")]
	public void TeamKilled(int teamKilled)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xF3EFFC", Offset = "0xF3EFFC", VA = "0xF3EFFC")]
	public void ResetTeamsConfigurations()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xF3F2CC", Offset = "0xF3F2CC", VA = "0xF3F2CC")]
	public void SetTeamCharacters()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xF3F398", Offset = "0xF3F398", VA = "0xF3F398")]
	public void SetActiveLocalControls(bool _active)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xF3BDD4", Offset = "0xF3BDD4", VA = "0xF3BDD4")]
	public void InitializeGameMode()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xF3E514", Offset = "0xF3E514", VA = "0xF3E514")]
	public void EndGamePrivateMatch()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xF3F5D4", Offset = "0xF3F5D4", VA = "0xF3F5D4")]
	public void AutoSpawnGhost(bool prev = false)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xF3C13C", Offset = "0xF3C13C", VA = "0xF3C13C")]
	[IteratorStateMachine(typeof(<AutoSpawntiming>d__149))]
	private IEnumerator AutoSpawntiming()
	{
		return null;
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xF3F6C0", Offset = "0xF3F6C0", VA = "0xF3F6C0")]
	[IteratorStateMachine(typeof(<GhostTiming>d__150))]
	private IEnumerator GhostTiming()
	{
		return null;
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xF3D2FC", Offset = "0xF3D2FC", VA = "0xF3D2FC")]
	private void SearchDestroyUpdate()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xF3FA90", Offset = "0xF3FA90", VA = "0xF3FA90")]
	public void StopGamePlay(bool stop)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xF37690", Offset = "0xF37690", VA = "0xF37690")]
	public int GetActivePlayersCount(bool getHumanPlayers, bool getBotPlayers)
	{
		return default(int);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xF3FC08", Offset = "0xF3FC08", VA = "0xF3FC08")]
	public void CheckTeamDeadOrDown()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xF3F728", Offset = "0xF3F728", VA = "0xF3F728")]
	public void SetBombTimer(bool on)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xF3FF94", Offset = "0xF3FF94", VA = "0xF3FF94")]
	public void CancelPlantBomb()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xF40104", Offset = "0xF40104", VA = "0xF40104")]
	public void CancelDefussingBomb()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xF3F8FC", Offset = "0xF3F8FC", VA = "0xF3F8FC")]
	public void DiffuseBomb(bool on)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xF40274", Offset = "0xF40274", VA = "0xF40274")]
	public void BombDefused()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xF40600", Offset = "0xF40600", VA = "0xF40600")]
	public void TimerExpired()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xF3EF7C", Offset = "0xF3EF7C", VA = "0xF3EF7C")]
	public bool CheckEndOfMatch()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xF3CE8C", Offset = "0xF3CE8C", VA = "0xF3CE8C")]
	public void RespawnPlayer()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xF40B40", Offset = "0xF40B40", VA = "0xF40B40")]
	public int FindFFASpawnpointIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xF40CD8", Offset = "0xF40CD8", VA = "0xF40CD8")]
	public int FindSndSpawnpointIndex(int team)
	{
		return default(int);
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xF3CE30", Offset = "0xF3CE30", VA = "0xF3CE30")]
	public void SpawnPlayer(bool spectator = false)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xF3C1A4", Offset = "0xF3C1A4", VA = "0xF3C1A4")]
	private void StartSpawning()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xF41500", Offset = "0xF41500", VA = "0xF41500")]
	public void FindSpawnLocation(PlayerData forPlayer, Action<Vector3, Vector3> callback)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xF3E3E4", Offset = "0xF3E3E4", VA = "0xF3E3E4")]
	private void UpdateSpawning()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xF4101C", Offset = "0xF4101C", VA = "0xF4101C")]
	private void FindSpawnPoints(int gameType, int team, ref SpawnArea[] spawnPoints)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xF418E8", Offset = "0xF418E8", VA = "0xF418E8")]
	private int CalcTeamSize(int teamID)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xF40FA0", Offset = "0xF40FA0", VA = "0xF40FA0")]
	[IteratorStateMachine(typeof(<SpawnTiming>d__204))]
	private IEnumerator SpawnTiming(bool spectator = false)
	{
		return null;
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xF40AD8", Offset = "0xF40AD8", VA = "0xF40AD8")]
	[IteratorStateMachine(typeof(<RespawnTiming>d__205))]
	private IEnumerator RespawnTiming()
	{
		return null;
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xF41994", Offset = "0xF41994", VA = "0xF41994")]
	private void OnSpawnLocationFound(Vector3 spawnLocation, Vector3 spawnRotation)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xF3D288", Offset = "0xF3D288", VA = "0xF3D288")]
	[IteratorStateMachine(typeof(<RespawnPlayerGhost>d__207))]
	private IEnumerator RespawnPlayerGhost(Transform position)
	{
		return null;
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xF41830", Offset = "0xF41830", VA = "0xF41830")]
	private float DistanceCustomManhattan(Vector3 _pos1, Vector3 _pos2)
	{
		return default(float);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xF41A54", Offset = "0xF41A54", VA = "0xF41A54")]
	public void UpdateHealthIndicator(float healthPercentage)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xF41AB8", Offset = "0xF41AB8", VA = "0xF41AB8")]
	public void UpdateStaminaIndicator(float staminaPorcentage)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xF3D194", Offset = "0xF3D194", VA = "0xF3D194")]
	private void UpdateAllMarkers(float dt)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xF41B34", Offset = "0xF41B34", VA = "0xF41B34")]
	public void UpdatePartyMemberMarkers()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xF41CBC", Offset = "0xF41CBC", VA = "0xF41CBC")]
	public bool CheckAllDeadZMB(bool endIfAllDead = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xF41F40", Offset = "0xF41F40", VA = "0xF41F40")]
	public LevelManager()
	{
	}
}
[Token(Token = "0x20001EE")]
[Obsolete]
public class LoadoutManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001EF")]
	public enum Selection
	{
		[Token(Token = "0x40013A7")]
		Loadout,
		[Token(Token = "0x40013A8")]
		Primary,
		[Token(Token = "0x40013A9")]
		Secondary,
		[Token(Token = "0x40013AA")]
		Equipment
	}

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StartupManager m_StartupManager;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_Pressed;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_PressedTimer;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_IsActive;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool m_Left;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool m_Right;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[SerializeField]
	private bool m_Up;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_Down;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Selection m_CurrentSelection;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_LastPositionLoadout;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_LastPositionPrimary;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_Loadout;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_Primary;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_Secondary;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_Equipment;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image m_PrimaryImg;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image m_SecondaryImg;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image m_PrimaryAttachmentImg1;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image m_PrimaryAttachmentImg2;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image m_SecondaryAttachmentImg1;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image m_SecondaryAttachmentImg2;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image m_EquipmentImg1;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image m_EquipmentImg2;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] m_LoadoutHighlight;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] m_LoadoutOriginal;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private int m_LoadoutCounter;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] m_PrimaryHighlight;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] m_PrimaryOriginal;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_PrimarySelect1;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_PrimarySelect2;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool m_SecondPrimaryWeapons;

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xF44F60", Offset = "0xF44F60", VA = "0xF44F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xF44F6C", Offset = "0xF44F6C", VA = "0xF44F6C")]
	public void SwitchLoadoutTab(int value)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xF45040", Offset = "0xF45040", VA = "0xF45040")]
	public void SelectLoadout(int value)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xF45064", Offset = "0xF45064", VA = "0xF45064")]
	public void SelectLoadoutTitle(int value)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xF44F64", Offset = "0xF44F64", VA = "0xF44F64")]
	public void UpdateLoadout()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xF45088", Offset = "0xF45088", VA = "0xF45088")]
	private void DisplayHighlightLoadout(int value)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xF44F68", Offset = "0xF44F68", VA = "0xF44F68")]
	public void UpdatePrimary()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xF45260", Offset = "0xF45260", VA = "0xF45260")]
	public void NextPage(bool forward)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xF45264", Offset = "0xF45264", VA = "0xF45264")]
	public void SetPrimary(int weaponNumber)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xF4503C", Offset = "0xF4503C", VA = "0xF4503C")]
	public void UpdatePrimaryDisplay()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xF45268", Offset = "0xF45268", VA = "0xF45268")]
	private void HighlightAdjustPositionPrimary()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xF45880", Offset = "0xF45880", VA = "0xF45880")]
	private void DisplayHighlightPrimary(int value)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xF45A58", Offset = "0xF45A58", VA = "0xF45A58")]
	private void SetSecondary()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xF45A5C", Offset = "0xF45A5C", VA = "0xF45A5C")]
	private void SetEquipment()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xF45A60", Offset = "0xF45A60", VA = "0xF45A60")]
	public LoadoutManager()
	{
	}
}
[Token(Token = "0x20001F0")]
public class NewLevelSelectManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001F1")]
	public enum Selection
	{
		[Token(Token = "0x40013BC")]
		Map1,
		[Token(Token = "0x40013BD")]
		Map2,
		[Token(Token = "0x40013BE")]
		Map3,
		[Token(Token = "0x40013BF")]
		Random
	}

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_Left;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool m_Right;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool m_Up;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[SerializeField]
	private bool m_Down;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Selection m_CurrentSelection;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_LastPosition;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_HighlightedCounter;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_Pressed;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_PressedTimer;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_IsActive;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] m_HighlightObj;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_Voted;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int[] m_MapVotes;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text[] m_MapVotesLabels;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_NextMapToLoad;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xF45A68", Offset = "0xF45A68", VA = "0xF45A68")]
	public void UpdateSelectLevel()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xF45A6C", Offset = "0xF45A6C", VA = "0xF45A6C")]
	private void CheckMovement()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xF45F7C", Offset = "0xF45F7C", VA = "0xF45F7C")]
	public void ResetVar()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xF4602C", Offset = "0xF4602C", VA = "0xF4602C")]
	public void UpdateMapVotes(int value)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xF46204", Offset = "0xF46204", VA = "0xF46204")]
	public void ForceLoadNewLevel(int lvl)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xF464A0", Offset = "0xF464A0", VA = "0xF464A0")]
	public NewLevelSelectManager()
	{
	}
}
[Token(Token = "0x20001F2")]
public class SceneLoadManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	public delegate void ResetEverything();

	[Token(Token = "0x20001F5")]
	[CompilerGenerated]
	private sealed class <LoadSceneRoutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneLoadManager <>4__this;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string environmentScene;

		[Token(Token = "0x170001AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xF481F4", Offset = "0xF481F4", VA = "0xF481F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xF4823C", Offset = "0xF4823C", VA = "0xF4823C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xF47264", Offset = "0xF47264", VA = "0xF47264")]
		[DebuggerHidden]
		public <LoadSceneRoutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xF47F44", Offset = "0xF47F44", VA = "0xF47F44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xF47F48", Offset = "0xF47F48", VA = "0xF47F48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xF481FC", Offset = "0xF481FC", VA = "0xF481FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F6")]
	[CompilerGenerated]
	private sealed class <QuickLoadRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoadManager <>4__this;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool shutDown;

		[Token(Token = "0x170001AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xF48380", Offset = "0xF48380", VA = "0xF48380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xF483C8", Offset = "0xF483C8", VA = "0xF483C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xF4728C", Offset = "0xF4728C", VA = "0xF4728C")]
		[DebuggerHidden]
		public <QuickLoadRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xF48244", Offset = "0xF48244", VA = "0xF48244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xF48248", Offset = "0xF48248", VA = "0xF48248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xF48388", Offset = "0xF48388", VA = "0xF48388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F7")]
	[CompilerGenerated]
	private sealed class <LoadTargetScene>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoadManager <>4__this;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool environment;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LoadSceneMode loadMode;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool setActiveScene;

		[Token(Token = "0x170001B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xF48650", Offset = "0xF48650", VA = "0xF48650", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xF48698", Offset = "0xF48698", VA = "0xF48698", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xF47350", Offset = "0xF47350", VA = "0xF47350")]
		[DebuggerHidden]
		public <LoadTargetScene>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xF483D0", Offset = "0xF483D0", VA = "0xF483D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xF483D4", Offset = "0xF483D4", VA = "0xF483D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xF48658", Offset = "0xF48658", VA = "0xF48658", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F8")]
	[CompilerGenerated]
	private sealed class <LoadLoadingScene>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoadManager <>4__this;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xF48840", Offset = "0xF48840", VA = "0xF48840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0xF48888", Offset = "0xF48888", VA = "0xF48888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xF473E0", Offset = "0xF473E0", VA = "0xF473E0")]
		[DebuggerHidden]
		public <LoadLoadingScene>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF486A0", Offset = "0xF486A0", VA = "0xF486A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xF486A4", Offset = "0xF486A4", VA = "0xF486A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xF48848", Offset = "0xF48848", VA = "0xF48848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F9")]
	[CompilerGenerated]
	private sealed class <UnloadAssets>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool unloadAddresables;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitTime>5__2;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <removingAssets>5__3;

		[Token(Token = "0x170001B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xF48A24", Offset = "0xF48A24", VA = "0xF48A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xF48A6C", Offset = "0xF48A6C", VA = "0xF48A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xF47474", Offset = "0xF47474", VA = "0xF47474")]
		[DebuggerHidden]
		public <UnloadAssets>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xF48890", Offset = "0xF48890", VA = "0xF48890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xF48894", Offset = "0xF48894", VA = "0xF48894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xF48A2C", Offset = "0xF48A2C", VA = "0xF48A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FA")]
	[CompilerGenerated]
	private sealed class <FadeOutRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoadManager <>4__this;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x170001B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xF48B48", Offset = "0xF48B48", VA = "0xF48B48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xF48B90", Offset = "0xF48B90", VA = "0xF48B90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xF47510", Offset = "0xF47510", VA = "0xF47510")]
		[DebuggerHidden]
		public <FadeOutRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xF48A74", Offset = "0xF48A74", VA = "0xF48A74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xF48A78", Offset = "0xF48A78", VA = "0xF48A78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xF48B50", Offset = "0xF48B50", VA = "0xF48B50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[CompilerGenerated]
	private sealed class <LoadEventRoutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoadManager <>4__this;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetReference asset;

		[Token(Token = "0x170001B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xF48D6C", Offset = "0xF48D6C", VA = "0xF48D6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0xF48DB4", Offset = "0xF48DB4", VA = "0xF48DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xF47A94", Offset = "0xF47A94", VA = "0xF47A94")]
		[DebuggerHidden]
		public <LoadEventRoutine>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xF48BAC", Offset = "0xF48BAC", VA = "0xF48BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xF48BB0", Offset = "0xF48BB0", VA = "0xF48BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xF48D74", Offset = "0xF48D74", VA = "0xF48D74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013C0")]
	private const string loadingScene = "LoadingScene";

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeInOutTime;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool debugAsyncLoad;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float loadingProgress;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string displaySceneName;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int mapIndex;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AsyncOperation currentSceneLoad;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AsyncOperation sceneActivation;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	[Header("QUEST ADRESSABLES")]
	public AssetReference sceneToLoadRef;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AssetReference environmentToLoadRef;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AddresableMaps[] addresableMaps;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SceneInstance loadingSceneeInstance;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SceneInstance currentSceneInstance;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AsyncOperationHandle<SceneInstance> loadingSceneAsyncHandle;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AsyncOperationHandle<SceneInstance> currentSceneAsyncHandle;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AsyncOperationHandle<SceneInstance> unloadSceneAsyncHandle;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Space]
	[SerializeField]
	private SeasonalEventMaps[] m_EventMaps;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Dictionary<string, SceneType> m_SceneTypesDic;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject eventPrefab;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SceneLoadManager m_Instance;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AsyncOperationHandle<GameObject> opHandle;

	[Token(Token = "0x170001AA")]
	public string EventMap
	{
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xF46618", Offset = "0xF46618", VA = "0xF46618")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AB")]
	public AssetReference EventAsset
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xF46728", Offset = "0xF46728", VA = "0xF46728")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AC")]
	public static SceneLoadManager Instance
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xF46834", Offset = "0xF46834", VA = "0xF46834")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public static event ResetEverything ResettingEverything
	{
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xF464A8", Offset = "0xF464A8", VA = "0xF464A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xF46560", Offset = "0xF46560", VA = "0xF46560")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xF4687C", Offset = "0xF4687C", VA = "0xF4687C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xF469AC", Offset = "0xF469AC", VA = "0xF469AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xF46AAC", Offset = "0xF46AAC", VA = "0xF46AAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xF46BAC", Offset = "0xF46BAC", VA = "0xF46BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xF46324", Offset = "0xF46324", VA = "0xF46324")]
	public void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xF47044", Offset = "0xF47044", VA = "0xF47044")]
	public void QuickLoadScene(string sceneName, bool shutDown = false)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xF46FC8", Offset = "0xF46FC8", VA = "0xF46FC8")]
	[IteratorStateMachine(typeof(<LoadSceneRoutine>d__36))]
	private IEnumerator LoadSceneRoutine(string sceneName, string environmentScene = "")
	{
		return null;
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xF471E4", Offset = "0xF471E4", VA = "0xF471E4")]
	[IteratorStateMachine(typeof(<QuickLoadRoutine>d__37))]
	private IEnumerator QuickLoadRoutine(string sceneName, bool shutDown = false)
	{
		return null;
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xF472B4", Offset = "0xF472B4", VA = "0xF472B4")]
	[IteratorStateMachine(typeof(<LoadTargetScene>d__38))]
	private IEnumerator LoadTargetScene(string sceneName, LoadSceneMode loadMode, bool setActiveScene = true, bool environment = false)
	{
		return null;
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xF47378", Offset = "0xF47378", VA = "0xF47378")]
	[IteratorStateMachine(typeof(<LoadLoadingScene>d__39))]
	private IEnumerator LoadLoadingScene()
	{
		return null;
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xF47408", Offset = "0xF47408", VA = "0xF47408")]
	[IteratorStateMachine(typeof(<UnloadAssets>d__40))]
	private IEnumerator UnloadAssets(bool unloadAddresables = true)
	{
		return null;
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xF4749C", Offset = "0xF4749C", VA = "0xF4749C")]
	[IteratorStateMachine(typeof(<FadeOutRoutine>d__41))]
	private IEnumerator FadeOutRoutine(string text)
	{
		return null;
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xF47538", Offset = "0xF47538", VA = "0xF47538")]
	public SceneType GetSceneType(string sceneName)
	{
		return default(SceneType);
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xF46DD0", Offset = "0xF46DD0", VA = "0xF46DD0")]
	private void Builddictionary()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xF475CC", Offset = "0xF475CC", VA = "0xF475CC")]
	public void UnloadLoadingScene()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xF47664", Offset = "0xF47664", VA = "0xF47664")]
	private void SetActiveScene(string sceneName)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xF47738", Offset = "0xF47738", VA = "0xF47738")]
	private void Tetrapack()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xF47108", Offset = "0xF47108", VA = "0xF47108")]
	private void ShutDown()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xF477F0", Offset = "0xF477F0", VA = "0xF477F0")]
	private void StartSceneLoadConfiguration(string sceneName)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xF477F4", Offset = "0xF477F4", VA = "0xF477F4")]
	private void EndSceneLoadConfiguration(string sceneName)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xF477F8", Offset = "0xF477F8", VA = "0xF477F8")]
	private AssetReference FindAssetReference(string sceneToLoad)
	{
		return null;
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xF478E0", Offset = "0xF478E0", VA = "0xF478E0")]
	private AssetReference GetAssetReference(string mapName, bool isEnvironment)
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xF47914", Offset = "0xF47914", VA = "0xF47914")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xF4796C", Offset = "0xF4796C", VA = "0xF4796C")]
	public void ReturnToMainScreen()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xF479B4", Offset = "0xF479B4", VA = "0xF479B4")]
	public void LoadEvent()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xF47A20", Offset = "0xF47A20", VA = "0xF47A20")]
	[IteratorStateMachine(typeof(<LoadEventRoutine>d__56))]
	private IEnumerator LoadEventRoutine(AssetReference asset)
	{
		return null;
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xF47740", Offset = "0xF47740", VA = "0xF47740")]
	public void UnloadEvent()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xF47ABC", Offset = "0xF47ABC", VA = "0xF47ABC")]
	private void FadeOut(string debugMessage)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xF46C08", Offset = "0xF46C08", VA = "0xF46C08")]
	private void FadeIn(string debugMessage)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xF47CC4", Offset = "0xF47CC4", VA = "0xF47CC4")]
	public SceneLoadManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FF")]
public struct AddresableMaps
{
	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string mapName;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AssetReference mapAssetReference;
}
[Serializable]
[Token(Token = "0x2000200")]
public struct SeasonalEventMaps
{
	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string SceneName;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SeasonalEvents SceneEvent;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReference EventPrefab;
}
[Token(Token = "0x2000201")]
public enum SceneType
{
	[Token(Token = "0x4001403")]
	Unknow,
	[Token(Token = "0x4001404")]
	Other,
	[Token(Token = "0x4001405")]
	Environment,
	[Token(Token = "0x4001406")]
	Gameplay,
	[Token(Token = "0x4001407")]
	Title
}
[Token(Token = "0x2000202")]
public class SceneSetupManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000203")]
	public class SceneSetup
	{
		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_SceneName;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ShooterBots;

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xF49088", Offset = "0xF49088", VA = "0xF49088")]
		public SceneSetup()
		{
		}
	}

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SceneSetup> allScenes;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneSetup m_CurrentSceneSetup;

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xF48E74", Offset = "0xF48E74", VA = "0xF48E74")]
	public void SetupLevel(Scene scene)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xF4900C", Offset = "0xF4900C", VA = "0xF4900C")]
	public SceneSetupManager()
	{
	}
}
[Token(Token = "0x2000204")]
public class ScoringManager : PunBehaviour
{
	[Token(Token = "0x2000205")]
	[CompilerGenerated]
	private sealed class <UpdateBoardDelayed>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScoringManager <>4__this;

		[Token(Token = "0x170001BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xF4A7AC", Offset = "0xF4A7AC", VA = "0xF4A7AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xF4A7F4", Offset = "0xF4A7F4", VA = "0xF4A7F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xF49288", Offset = "0xF49288", VA = "0xF49288")]
		[DebuggerHidden]
		public <UpdateBoardDelayed>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xF4A734", Offset = "0xF4A734", VA = "0xF4A734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xF4A738", Offset = "0xF4A738", VA = "0xF4A738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xF4A7B4", Offset = "0xF4A7B4", VA = "0xF4A7B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_ViewObjectOpen;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EndGameSystem EndGameManager;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite emptySprite;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerRankConfig.XPReward xpRewards;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds UpdateBoardDelay;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private List<PlayerProfile> tempList;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VrInGameUIManager vrUIManager;

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xF49090", Offset = "0xF49090", VA = "0xF49090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xF49100", Offset = "0xF49100", VA = "0xF49100")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xF49180", Offset = "0xF49180", VA = "0xF49180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xF49200", Offset = "0xF49200", VA = "0xF49200")]
	private void OnAvatarLoaded(int FID, Sprite sprite)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xF49220", Offset = "0xF49220", VA = "0xF49220")]
	[IteratorStateMachine(typeof(<UpdateBoardDelayed>d__12))]
	private IEnumerator UpdateBoardDelayed()
	{
		return null;
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xF492B0", Offset = "0xF492B0", VA = "0xF492B0")]
	public void UpdateKillsDeaths(int killerNumber, int killedNumber, bool headshot)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xF492F8", Offset = "0xF492F8", VA = "0xF492F8")]
	[PunRPC]
	public void UpdateKillsDeathsMsg(int killerNumber, int killedNumber, bool headshot)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xF494CC", Offset = "0xF494CC", VA = "0xF494CC")]
	public void UpdateDeaths(int killerNumber, int killedNumber, bool headshot)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xF49518", Offset = "0xF49518", VA = "0xF49518")]
	[PunRPC]
	public void UpdateDeathsMsg(int killedNumber, int killerNumber, bool headshot)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xF49634", Offset = "0xF49634", VA = "0xF49634")]
	public void UpdateKills(int worldNumber)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xF49780", Offset = "0xF49780", VA = "0xF49780")]
	[PunRPC]
	public void UpdateKillsMsg(int id)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xF49888", Offset = "0xF49888", VA = "0xF49888")]
	public void UpdateAssists(HashSet<int> assisters)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xF4997C", Offset = "0xF4997C", VA = "0xF4997C")]
	public void ShowDebugTeamsAndAudio()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xF49FEC", Offset = "0xF49FEC", VA = "0xF49FEC")]
	public int FFA_GetPlacingPlace()
	{
		return default(int);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xF49F38", Offset = "0xF49F38", VA = "0xF49F38")]
	private string GetPlatformSprite(Platform platform)
	{
		return null;
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xF4A358", Offset = "0xF4A358", VA = "0xF4A358")]
	private int CompareProfilesByZKills(PlayerProfile p1, PlayerProfile p2)
	{
		return default(int);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xF4A37C", Offset = "0xF4A37C", VA = "0xF4A37C")]
	public int CalculateTeamKills(int team)
	{
		return default(int);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xF4A46C", Offset = "0xF4A46C", VA = "0xF4A46C")]
	public void ResetScores()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xF4A588", Offset = "0xF4A588", VA = "0xF4A588")]
	public string GetPlayerName(int worldNumber)
	{
		return null;
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xF4A680", Offset = "0xF4A680", VA = "0xF4A680")]
	public ScoringManager()
	{
	}
}
[Token(Token = "0x2000208")]
public class SDManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xF4A908", Offset = "0xF4A908", VA = "0xF4A908")]
	public SDManager()
	{
	}
}
[Token(Token = "0x2000209")]
public class SearchDestroyManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200020A")]
	public delegate void OnNewRound();

	[Token(Token = "0x200020B")]
	public enum EndGame
	{
		[Token(Token = "0x4001447")]
		none,
		[Token(Token = "0x4001448")]
		rewards,
		[Token(Token = "0x4001449")]
		score,
		[Token(Token = "0x400144A")]
		mapselection
	}

	[Token(Token = "0x200020C")]
	[CompilerGenerated]
	private sealed class <ResetOnStartTime>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SearchDestroyManager <>4__this;

		[Token(Token = "0x170001BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0xF4BE9C", Offset = "0xF4BE9C", VA = "0xF4BE9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0xF4BEE4", Offset = "0xF4BEE4", VA = "0xF4BEE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xF4AF74", Offset = "0xF4AF74", VA = "0xF4AF74")]
		[DebuggerHidden]
		public <ResetOnStartTime>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xF4B924", Offset = "0xF4B924", VA = "0xF4B924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xF4B928", Offset = "0xF4B928", VA = "0xF4B928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xF4BEA4", Offset = "0xF4BEA4", VA = "0xF4BEA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020D")]
	[CompilerGenerated]
	private sealed class <ResetOnStartTiming>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0xF4BF24", Offset = "0xF4BF24", VA = "0xF4BF24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0xF4BF6C", Offset = "0xF4BF6C", VA = "0xF4BF6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xF4AFFC", Offset = "0xF4AFFC", VA = "0xF4AFFC")]
		[DebuggerHidden]
		public <ResetOnStartTiming>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xF4BEEC", Offset = "0xF4BEEC", VA = "0xF4BEEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xF4BEF0", Offset = "0xF4BEF0", VA = "0xF4BEF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xF4BF2C", Offset = "0xF4BF2C", VA = "0xF4BF2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020E")]
	[CompilerGenerated]
	private sealed class <StartNewRoundTiming>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SearchDestroyManager <>4__this;

		[Token(Token = "0x170001C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0xF4C44C", Offset = "0xF4C44C", VA = "0xF4C44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0xF4C494", Offset = "0xF4C494", VA = "0xF4C494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xF4B3E8", Offset = "0xF4B3E8", VA = "0xF4B3E8")]
		[DebuggerHidden]
		public <StartNewRoundTiming>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xF4BF74", Offset = "0xF4BF74", VA = "0xF4BF74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xF4BF78", Offset = "0xF4BF78", VA = "0xF4BF78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xF4C454", Offset = "0xF4C454", VA = "0xF4C454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_CurrentRound;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_PregameSDTimer;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_NextGameTimer;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_StartingNextRound;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_NextRoundObject;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text m_WinLose;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text m_NextRoundTimerLabel;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text m_Score;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_NextRoundCounter;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_BombObject1;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_BombPlanted;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int m_Team1Score;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_Team2Score;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool lateJoin;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int numberOfRounds;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool m_Team1Offense;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WorldSpaceMarker bombMarker;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public WorldSpaceMarker siteAMarker;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public WorldSpaceMarker siteBMarker;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text m_CurrentRoundLabel;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject m_EndGameObject;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text m_WinLoseEndGame;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text m_ScoreEndGame;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m_StartGameObject;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject sndObjectsParent;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text m_StartGameTimer;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_StartSearchAndDestory;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool m_EnoughPlayers;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_Counter;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool m_SDGameStarted;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool m_RoundSwap;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool m_Dead;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_RewardsObj;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_MapSelectionObj;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_EndGameScoringSelection;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public EndGame m_CurrentSelection;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float m_MapSelectionTimer;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_MapSelectionCounter;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int win;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool swap;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool m_LoadedNewLevel;

	[Token(Token = "0x14000004")]
	public static event OnNewRound OnNewRoundEvent
	{
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xF4A910", Offset = "0xF4A910", VA = "0xF4A910")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xF4A9C8", Offset = "0xF4A9C8", VA = "0xF4A9C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xF4AA80", Offset = "0xF4AA80", VA = "0xF4AA80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xF4AAFC", Offset = "0xF4AAFC", VA = "0xF4AAFC")]
	public void NextRound()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xF4AD94", Offset = "0xF4AD94", VA = "0xF4AD94")]
	public void EndSD()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xF4AE88", Offset = "0xF4AE88", VA = "0xF4AE88")]
	public void ResetOnStart()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xF4AF0C", Offset = "0xF4AF0C", VA = "0xF4AF0C")]
	[IteratorStateMachine(typeof(<ResetOnStartTime>d__49))]
	private IEnumerator ResetOnStartTime()
	{
		return null;
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xF4AF9C", Offset = "0xF4AF9C", VA = "0xF4AF9C")]
	[IteratorStateMachine(typeof(<ResetOnStartTiming>d__50))]
	private IEnumerator ResetOnStartTiming()
	{
		return null;
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xF4B024", Offset = "0xF4B024", VA = "0xF4B024")]
	public void NextRoundTransition()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xF4B2AC", Offset = "0xF4B2AC", VA = "0xF4B2AC")]
	public void UpdateScore()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xF4B35C", Offset = "0xF4B35C", VA = "0xF4B35C")]
	public void StartNewRound()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xF4B380", Offset = "0xF4B380", VA = "0xF4B380")]
	[IteratorStateMachine(typeof(<StartNewRoundTiming>d__56))]
	private IEnumerator StartNewRoundTiming()
	{
		return null;
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xF4B410", Offset = "0xF4B410", VA = "0xF4B410")]
	public void ResetBombs()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xF4B668", Offset = "0xF4B668", VA = "0xF4B668")]
	public void RegisterRoundWin(bool team1Won)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xF4B6E4", Offset = "0xF4B6E4", VA = "0xF4B6E4")]
	public void EndGameSND()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xF4B7A8", Offset = "0xF4B7A8", VA = "0xF4B7A8")]
	public int CheckWin()
	{
		return default(int);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xF4B804", Offset = "0xF4B804", VA = "0xF4B804")]
	public SearchDestroyManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200020F")]
public class SelectionManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000210")]
	public class Category
	{
		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_CategoryName;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_CategoryPosition;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_PreviousMethod;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_PreviousPosition;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Selections> m_AllSelections;

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xF4C6BC", Offset = "0xF4C6BC", VA = "0xF4C6BC")]
		public Category()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000211")]
	public class Selections
	{
		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_SelectionName;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_SelectionNumber;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_Up;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_Down;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_Left;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_Right;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_HighlightedObject;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_Original;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_Class;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_Method;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int m_NextCategoryPosition;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool m_Primary;

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xF4C6C4", Offset = "0xF4C6C4", VA = "0xF4C6C4")]
		public Selections()
		{
		}
	}

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartupManager m_StartupManager;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TabsManager m_TabsManager;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CustomizationManager m_CustomizationManager;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_IsActive;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int m_CategoryPosition;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_SelectionPosition;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool m_Left;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool m_Right;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool m_Up;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool m_Down;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_Pressed;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_PressedTimer;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Selections m_CurrentSelection;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Category m_CurrentCategory;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Category> m_AllCategories;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_Primary;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_PrimaryObject;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_SecondaryObject;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool m_SkinPrimary;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int playerId;

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xF4C49C", Offset = "0xF4C49C", VA = "0xF4C49C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xF4C528", Offset = "0xF4C528", VA = "0xF4C528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xF4C52C", Offset = "0xF4C52C", VA = "0xF4C52C")]
	private void MoveCategory()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xF4C5F8", Offset = "0xF4C5F8", VA = "0xF4C5F8")]
	private void PreviousCategoryUsingTabManager()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xF4C6B4", Offset = "0xF4C6B4", VA = "0xF4C6B4")]
	public SelectionManager()
	{
	}
}
[Token(Token = "0x2000212")]
public class SoundManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <DelayActivation>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundManager <>4__this;

		[Token(Token = "0x170001C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0xF4CDC8", Offset = "0xF4CDC8", VA = "0xF4CDC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xF4CE10", Offset = "0xF4CE10", VA = "0xF4CE10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xF4C7A8", Offset = "0xF4C7A8", VA = "0xF4C7A8")]
		[DebuggerHidden]
		public <DelayActivation>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xF4CD5C", Offset = "0xF4CD5C", VA = "0xF4CD5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xF4CD60", Offset = "0xF4CD60", VA = "0xF4CD60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xF4CDD0", Offset = "0xF4CDD0", VA = "0xF4CDD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000214")]
	[CompilerGenerated]
	private sealed class <DelayHit>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundManager <>4__this;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isHeadShot;

		[Token(Token = "0x170001C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xF4CEDC", Offset = "0xF4CEDC", VA = "0xF4CEDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xF4CF24", Offset = "0xF4CF24", VA = "0xF4CF24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xF4CC7C", Offset = "0xF4CC7C", VA = "0xF4CC7C")]
		[DebuggerHidden]
		public <DelayHit>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xF4CE18", Offset = "0xF4CE18", VA = "0xF4CE18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xF4CE1C", Offset = "0xF4CE1C", VA = "0xF4CE1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xF4CEE4", Offset = "0xF4CEE4", VA = "0xF4CEE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000215")]
	[CompilerGenerated]
	private sealed class <DelayKill>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundManager <>4__this;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isHeadShot;

		[Token(Token = "0x170001C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0xF4D020", Offset = "0xF4D020", VA = "0xF4D020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0xF4D068", Offset = "0xF4D068", VA = "0xF4D068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xF4CCA4", Offset = "0xF4CCA4", VA = "0xF4CCA4")]
		[DebuggerHidden]
		public <DelayKill>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xF4CF2C", Offset = "0xF4CF2C", VA = "0xF4CF2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xF4CF30", Offset = "0xF4CF30", VA = "0xF4CF30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xF4D028", Offset = "0xF4D028", VA = "0xF4D028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue[] m_WeaponSounds;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SECTR_AudioCue[] m_LocalSounds;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SECTR_AudioCue[] m_MiscSounds;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SECTR_AudioCue[] m_PhysicsImpacts;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SECTR_AudioCue[] m_WeaponSoundsC;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SECTR_AudioCue[] m_LocalSoundsC;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SECTR_AudioCue[] m_MiscSoundsC;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SECTR_AudioCue[] m_PhysicsImpactsC;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SECTR_AudioCue[] m_WalkSounds;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SECTR_AudioCue[] m_RunSounds;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SECTR_AudioCue[] m_Foley;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SECTR_AudioCue[] m_JumpFall;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds m_Delay;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool m_init;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WaitForSeconds waitDelayActivation;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SECTR_AudioCueInstance currentHue;

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xF4C6CC", Offset = "0xF4C6CC", VA = "0xF4C6CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xF4C740", Offset = "0xF4C740", VA = "0xF4C740")]
	[IteratorStateMachine(typeof(<DelayActivation>d__17))]
	private IEnumerator DelayActivation()
	{
		return null;
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xF4C7D0", Offset = "0xF4C7D0", VA = "0xF4C7D0")]
	public void PlaySound(int value, Vector3 position, bool muffledFire)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xF4C87C", Offset = "0xF4C87C", VA = "0xF4C87C")]
	public void PlayMiscSound(int value, Vector3 position)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xF4C8B4", Offset = "0xF4C8B4", VA = "0xF4C8B4")]
	public void PlayPhysicsImpactSound(int index, Vector3 position)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xF4C8EC", Offset = "0xF4C8EC", VA = "0xF4C8EC")]
	public void PlayLocalSound(int value, bool isHeadShot = false)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xF4CAA4", Offset = "0xF4CAA4", VA = "0xF4CAA4")]
	public void PlayFootstepSound(int value, bool sprinting, Vector3 position)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xF4CAE8", Offset = "0xF4CAE8", VA = "0xF4CAE8")]
	public void PlayFooleySound(int value, Vector3 position)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xF4CB20", Offset = "0xF4CB20", VA = "0xF4CB20")]
	public void PlayJumpSound(int value, Vector3 position)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xF4CB58", Offset = "0xF4CB58", VA = "0xF4CB58")]
	public void PlayVocal(int value, Vector3 position)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xF4CC44", Offset = "0xF4CC44", VA = "0xF4CC44")]
	public void StopVocals()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xF4C9AC", Offset = "0xF4C9AC", VA = "0xF4C9AC")]
	[IteratorStateMachine(typeof(<DelayHit>d__28))]
	private IEnumerator DelayHit(bool isHeadShot = false)
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xF4CA28", Offset = "0xF4CA28", VA = "0xF4CA28")]
	[IteratorStateMachine(typeof(<DelayKill>d__29))]
	private IEnumerator DelayKill(bool isHeadShot = false)
	{
		return null;
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xF4CCCC", Offset = "0xF4CCCC", VA = "0xF4CCCC")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x2000216")]
public class StartupManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000217")]
	[CompilerGenerated]
	private sealed class <DelayErrorMesage>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartupManager <>4__this;

		[Token(Token = "0x170001C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xF4E588", Offset = "0xF4E588", VA = "0xF4E588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xF4E5D0", Offset = "0xF4E5D0", VA = "0xF4E5D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xF4D80C", Offset = "0xF4D80C", VA = "0xF4D80C")]
		[DebuggerHidden]
		public <DelayErrorMesage>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xF4E33C", Offset = "0xF4E33C", VA = "0xF4E33C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xF4E340", Offset = "0xF4E340", VA = "0xF4E340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xF4E590", Offset = "0xF4E590", VA = "0xF4E590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RagdollPrefab;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerLocalData m_LocalData;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TabsManager m_TabsManager;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ModWeapon m_ModWeapon;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AlvoSocialManager m_AlvoSocialManager;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AlvoPartyNet m_AlvoData;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_ErrorMessageGo;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text m_ErrorMessageText;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text m_NameDisplay;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_TransitionObject;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_LoadingObject;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dropdown m_GameTypeDropDown;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image[] m_HighlightedMaps;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int m_MapCounter;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform m_FFARoomListSpawnTransform;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform m_TEAMDMRoomListSpawnTransform;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform m_SearchDestroyRoomListSpawnTransform;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject m_SearchTransitionObject;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject m_JoinTransitionObject;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m_CreatingTransitionObject;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_JoiningPartyTransition;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_StartingRoomTransition;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_ErrorMsg;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_NetworkMessageGo;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TMP_Text m_NetworkMessageText;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TMP_Text m_ErrorText;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text[] m_PlayerStats;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject[] m_Ranks;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Image m_MapSelection;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TMP_Text Version;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SimpleUIPanel mainPanelSimpleUI;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SimpleUIPanel gameModesSimpleUI;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public DailyXPUI m_DailyXPUI;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public VrMainMenu vrMainMenu;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AlvoPhotonManager photonManager;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PlayerLocalData localData;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public CrossplayToggle crossplayToggleUI;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public VrSettings settings;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform vrStuffGo;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public WaitForSeconds waitDelayErrorMessage;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioSource m_AudioSource;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioClip m_GUIMove;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioClip m_GUIClick;

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xF4D070", Offset = "0xF4D070", VA = "0xF4D070")]
	public void SearchGames(int value)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xF4D200", Offset = "0xF4D200", VA = "0xF4D200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xF4D624", Offset = "0xF4D624", VA = "0xF4D624")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xF4D6C8", Offset = "0xF4D6C8", VA = "0xF4D6C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xF4D76C", Offset = "0xF4D76C", VA = "0xF4D76C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xF4D5BC", Offset = "0xF4D5BC", VA = "0xF4D5BC")]
	[IteratorStateMachine(typeof(<DelayErrorMesage>d__45))]
	private IEnumerator DelayErrorMesage()
	{
		return null;
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xF4D834", Offset = "0xF4D834", VA = "0xF4D834")]
	private void UpdateRegionText()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xF4D9A4", Offset = "0xF4D9A4", VA = "0xF4D9A4")]
	public void InitDone()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xF4D9CC", Offset = "0xF4D9CC", VA = "0xF4D9CC")]
	public void ToggleBots(Toggle toggle)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xF4D9F0", Offset = "0xF4D9F0", VA = "0xF4D9F0")]
	public void ErrorMessages(string errorMessage)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xF4DA14", Offset = "0xF4DA14", VA = "0xF4DA14")]
	public void PlaySound(int value)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xF4DA88", Offset = "0xF4DA88", VA = "0xF4DA88")]
	public void CloseAllTransitions()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xF4DB28", Offset = "0xF4DB28", VA = "0xF4DB28")]
	public void ShowMainPnl()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xF4DBE0", Offset = "0xF4DBE0", VA = "0xF4DBE0")]
	public void UpdateStatsGUI()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xF4DEA0", Offset = "0xF4DEA0", VA = "0xF4DEA0")]
	public void ResetPlayerInit()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xF4DEBC", Offset = "0xF4DEBC", VA = "0xF4DEBC")]
	public void ShowPartyResponse(JoiningResponse response)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xF4E01C", Offset = "0xF4E01C", VA = "0xF4E01C")]
	public void ShowJoininParty()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xF4DF3C", Offset = "0xF4DF3C", VA = "0xF4DF3C")]
	public void ShowError(string text)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xF4E0EC", Offset = "0xF4E0EC", VA = "0xF4E0EC")]
	public void AcceptError()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xF4E1CC", Offset = "0xF4E1CC", VA = "0xF4E1CC")]
	public void SelectMap(bool forward)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xF4E2D0", Offset = "0xF4E2D0", VA = "0xF4E2D0")]
	public StartupManager()
	{
	}
}
[Token(Token = "0x2000218")]
public class TabsManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <Start>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TabsManager <>4__this;

		[Token(Token = "0x170001CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0xF4E9D0", Offset = "0xF4E9D0", VA = "0xF4E9D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0xF4EA18", Offset = "0xF4EA18", VA = "0xF4EA18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xF4E8C8", Offset = "0xF4E8C8", VA = "0xF4E8C8")]
		[DebuggerHidden]
		public <Start>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xF4E960", Offset = "0xF4E960", VA = "0xF4E960", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xF4E964", Offset = "0xF4E964", VA = "0xF4E964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xF4E9D8", Offset = "0xF4E9D8", VA = "0xF4E9D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartupManager m_StartupManager;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SelectionManager m_SelectionManager;

	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CustomizationManager m_CustomizationManager;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_OnOffLineSelection;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_ConnectingTransition;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_TitleObject;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ModWeapon m_ModWeapon;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_InitPanel;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_InitPanelOffline;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_CustomizationPanel;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_OnlineGamesPanel;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_PrimaryPanel;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_SecondaryPanel;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_EquipmentPanel;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_SkinsPanel;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject m_Primary1;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject m_Primary2;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForSeconds waitDelayStart;

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xF4DB08", Offset = "0xF4DB08", VA = "0xF4DB08")]
	public void CloseAll()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xF4E5D8", Offset = "0xF4E5D8", VA = "0xF4E5D8")]
	public void OpenInitPanel()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xF4E600", Offset = "0xF4E600", VA = "0xF4E600")]
	public void OpenInitPanelOffline()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xF4E628", Offset = "0xF4E628", VA = "0xF4E628")]
	public void StartOnline()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xF4E680", Offset = "0xF4E680", VA = "0xF4E680")]
	public void OpenOnOfflinePanel()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xF4DB40", Offset = "0xF4DB40", VA = "0xF4DB40")]
	public void OpenGamesPanel()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xF4E684", Offset = "0xF4E684", VA = "0xF4E684")]
	public void OpenCustomizationPanel()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xF4E6BC", Offset = "0xF4E6BC", VA = "0xF4E6BC")]
	public void OpenTitleObject()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xF4E794", Offset = "0xF4E794", VA = "0xF4E794")]
	public void OpenPrimary()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xF4E7CC", Offset = "0xF4E7CC", VA = "0xF4E7CC")]
	public void OpenSecondary()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xF4E7F4", Offset = "0xF4E7F4", VA = "0xF4E7F4")]
	public void OpenEquipment()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xF4E81C", Offset = "0xF4E81C", VA = "0xF4E81C")]
	public void OpenSkins()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xF4E860", Offset = "0xF4E860", VA = "0xF4E860")]
	[IteratorStateMachine(typeof(<Start>d__30))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xF4E8F0", Offset = "0xF4E8F0", VA = "0xF4E8F0")]
	public TabsManager()
	{
	}
}
[Token(Token = "0x200021A")]
public class TeamDeathMatchManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_TeamDMScoringObject;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text[] m_Team1Names;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text[] m_Team2Names;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text[] m_Team1Kills;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text[] m_Team2Kills;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text[] m_Team1Deaths;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text[] m_Team2Deaths;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text[] m_Team1Score;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text[] m_Team2Score;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text m_ScoreTeam1;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text m_ScoreTeam2;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] m_Team1Obj;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] m_Team2Obj;

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<PlayerProfile> tempList;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int m_TeamScore1;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int m_TeamScore2;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int m_TeamKills1;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int m_TeamKills2;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool m_Open;

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xF4EA20", Offset = "0xF4EA20", VA = "0xF4EA20")]
	public void OpenScoringTeamDM()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xF4EB04", Offset = "0xF4EB04", VA = "0xF4EB04")]
	public TeamDeathMatchManager()
	{
	}
}
[Token(Token = "0x200021B")]
public class TestingManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool m_KillStrksAvail;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_KillStreaksAvailable;

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xF4EB80", Offset = "0xF4EB80", VA = "0xF4EB80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xF4EBD0", Offset = "0xF4EBD0", VA = "0xF4EBD0")]
	public TestingManager()
	{
	}
}
[Token(Token = "0x200021C")]
public class TitleMenuSelecting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xF4EBD8", Offset = "0xF4EBD8", VA = "0xF4EBD8")]
	public TitleMenuSelecting()
	{
	}
}
[Token(Token = "0x200021D")]
public class AlvoInputManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float m_XAxis;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float m_YAxis;

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xF4EBE0", Offset = "0xF4EBE0", VA = "0xF4EBE0")]
	public AlvoInputManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200021E")]
public class AlvoLevels
{
	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_LevelName;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageText m_DisplayName;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_NightMap;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_GameType;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_MapNumber;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite m_Sprite;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip m_Music;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] m_Pictures;

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xF4EBE8", Offset = "0xF4EBE8", VA = "0xF4EBE8")]
	public AlvoLevels()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xF4EC44", Offset = "0xF4EC44", VA = "0xF4EC44")]
	public static byte[] Serialize(AlvoLevels alvoLevels)
	{
		return null;
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xF4ED2C", Offset = "0xF4ED2C", VA = "0xF4ED2C")]
	public static AlvoLevels Deserialize(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xF4EE30", Offset = "0xF4EE30", VA = "0xF4EE30")]
	public Sprite GetPicture()
	{
		return null;
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xF4EE64", Offset = "0xF4EE64", VA = "0xF4EE64")]
	public Sprite GetRandomPicture()
	{
		return null;
	}
}
[Token(Token = "0x200021F")]
public enum LogColors
{
	[Token(Token = "0x40014F8")]
	deepLink,
	[Token(Token = "0x40014F9")]
	deepLinkAccent,
	[Token(Token = "0x40014FA")]
	pico,
	[Token(Token = "0x40014FB")]
	photon
}
[Token(Token = "0x2000220")]
public static class AlvoTools
{
	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<LogColors, string> colorsDic;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string psVr;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string psVrLoader;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string aimController;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string moveController;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string ds4Controller;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xF4EEB0", Offset = "0xF4EEB0", VA = "0xF4EEB0")]
	public static string LogColor(LogColors color, string text)
	{
		return null;
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xF4F094", Offset = "0xF4F094", VA = "0xF4F094")]
	public static string LogPico(LogColors color, string text)
	{
		return null;
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xF4F304", Offset = "0xF4F304", VA = "0xF4F304")]
	public static string StringShift(string source, short shift)
	{
		return null;
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xF4F450", Offset = "0xF4F450", VA = "0xF4F450")]
	public static float NormalizeValue(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xF4F460", Offset = "0xF4F460", VA = "0xF4F460")]
	public static float Distance(Vector3 firstPosition, Vector3 secondPosition)
	{
		return default(float);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xF4F488", Offset = "0xF4F488", VA = "0xF4F488")]
	public static string Base64Encode(string plainText)
	{
		return null;
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xF4F548", Offset = "0xF4F548", VA = "0xF4F548")]
	public static string Base64Decode(string base64EncodedData)
	{
		return null;
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xF4B244", Offset = "0xF4B244", VA = "0xF4B244")]
	public static void PrintRedMarker()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xF4F618", Offset = "0xF4F618", VA = "0xF4F618")]
	public static void PrintBlueMarker()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xF4F680", Offset = "0xF4F680", VA = "0xF4F680")]
	public static void PrintGreenMarker()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xF4F6E8", Offset = "0xF4F6E8", VA = "0xF4F6E8")]
	public static void PrintPinkMarker()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xF4F750", Offset = "0xF4F750", VA = "0xF4F750")]
	public static string ShortenJson(string _json)
	{
		return null;
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xF4FAF8", Offset = "0xF4FAF8", VA = "0xF4FAF8")]
	public static DateTime UnixTimeStampToDateTime(long unixTimeStamp)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xF4FB54", Offset = "0xF4FB54", VA = "0xF4FB54")]
	public static long DateTimeToUnixTimeStamp(DateTime dateTime)
	{
		return default(long);
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xF4FBBC", Offset = "0xF4FBBC", VA = "0xF4FBBC")]
	public static float FourPoint(float a0, float a1, float b0, float b1, float aX)
	{
		return default(float);
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xF4FBF4", Offset = "0xF4FBF4", VA = "0xF4FBF4")]
	public static string EncryptString(string inputString)
	{
		return null;
	}
}
[Token(Token = "0x2000221")]
public static class IListExtensions
{
	[Token(Token = "0x6000CE0")]
	public static void Shuffle<T>(this IList<T> ts)
	{
	}
}
[Token(Token = "0x2000222")]
public class AmbienceVolume : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] audioSources;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] sourceVolumeMultiplier;

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xF4FE68", Offset = "0xF4FE68", VA = "0xF4FE68")]
	public void SetAmbienceVolume(float volume)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xF4FE6C", Offset = "0xF4FE6C", VA = "0xF4FE6C")]
	public AmbienceVolume()
	{
	}
}
[Token(Token = "0x2000223")]
public class AmmoBox : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject go;

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xF4FE74", Offset = "0xF4FE74", VA = "0xF4FE74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xF4FEEC", Offset = "0xF4FEEC", VA = "0xF4FEEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xF4FF64", Offset = "0xF4FF64", VA = "0xF4FF64")]
	private void Recycle()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xF4FFC4", Offset = "0xF4FFC4", VA = "0xF4FFC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xF500E0", Offset = "0xF500E0", VA = "0xF500E0")]
	public AmmoBox()
	{
	}
}
[Token(Token = "0x2000224")]
[ExecuteInEditMode]
public class CacheRigTransforms : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] rigTransforms;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rigParent;

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xF500E8", Offset = "0xF500E8", VA = "0xF500E8")]
	private void Update1()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xF500EC", Offset = "0xF500EC", VA = "0xF500EC")]
	public CacheRigTransforms()
	{
	}
}
[Token(Token = "0x2000225")]
public enum RecordingCameraMode
{
	[Token(Token = "0x4001508")]
	FirstPerson,
	[Token(Token = "0x4001509")]
	Drone,
	[Token(Token = "0x400150A")]
	Follow,
	[Token(Token = "0x400150B")]
	Auto
}
[Token(Token = "0x2000226")]
public class CinematicCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000227")]
	[CompilerGenerated]
	private sealed class <DisableText>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CinematicCamera <>4__this;

		[Token(Token = "0x170001CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0xCD6550", Offset = "0xCD6550", VA = "0xCD6550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xCD6598", Offset = "0xCD6598", VA = "0xCD6598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xCD6458", Offset = "0xCD6458", VA = "0xCD6458")]
		[DebuggerHidden]
		public <DisableText>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xCD6480", Offset = "0xCD6480", VA = "0xCD6480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xCD6484", Offset = "0xCD6484", VA = "0xCD6484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xCD6558", Offset = "0xCD6558", VA = "0xCD6558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform t;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform mainCamera;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VrRigHelper rigHelper;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera recordingCamera;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float sensitivity;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float slowCameraSensitivity;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cameraSensitivity;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float climbSpeed;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float normalMoveSpeed;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float slowMoveFactor;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fastMoveFactor;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float rotationX;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotationY;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RecordingCameraMode mode;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float firstPersonLerpSpeed;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float droneLerpSpeed;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float firstPersonYRotationSpeed;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float followPlayerYOffset;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int droneCullingMask;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int firstPersonCullingMask;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PostProcessLayer originalPostLayer;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VignettingVR vignetting;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioListener mainAudioListener;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioListener recordingAudioListener;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerManager playerManager;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<PlayerData> players;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SphereCollider thisCol;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask allMask;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask notSelfMask;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LayerMask notPlayersMask;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float moveForward;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float moveRight;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float moveUp;

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentPlayer;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private PlayerData targetPlayerData;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform targetPlayerRoot;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform target;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string targetName;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TMP_Text text;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float elapsedInputTime;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float maxInputTime;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int inputCount;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float cooldown;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool retarget;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private RaycastHit hit;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float rotFollowY;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float rotFollowX;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float followDistance;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 eulerRot;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 lastLocalPos;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Quaternion lastLocalRot;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool fixedCamera;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xF500F4", Offset = "0xF500F4", VA = "0xF500F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xF50468", Offset = "0xF50468", VA = "0xF50468")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xF50498", Offset = "0xF50498", VA = "0xF50498")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xF525DC", Offset = "0xF525DC", VA = "0xF525DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xF51438", Offset = "0xF51438", VA = "0xF51438")]
	private void CheckInput()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xF52648", Offset = "0xF52648", VA = "0xF52648")]
	private void FirstPersonUpdate()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xF51C10", Offset = "0xF51C10", VA = "0xF51C10")]
	private void FollowCameraUpdate()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xF51688", Offset = "0xF51688", VA = "0xF51688")]
	private void AutoCameraUpdate()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xF504C0", Offset = "0xF504C0", VA = "0xF504C0")]
	private void DroneModeUpdate()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xF52930", Offset = "0xF52930", VA = "0xF52930")]
	private void FirstPersonLateUpdate(float time)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xF52B88", Offset = "0xF52B88", VA = "0xF52B88")]
	private void FollowModeLateUpdate(float time)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xF527A0", Offset = "0xF527A0", VA = "0xF527A0")]
	private void DroneModeLateUpdate(Transform t1, Transform t2, float time)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xF52FFC", Offset = "0xF52FFC", VA = "0xF52FFC")]
	private void TargetPlayer()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xF52FA0", Offset = "0xF52FA0", VA = "0xF52FA0")]
	private void SwitchFirstPersonUI()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xF52CEC", Offset = "0xF52CEC", VA = "0xF52CEC")]
	private void SwitchCameraMode()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xF50400", Offset = "0xF50400", VA = "0xF50400")]
	[IteratorStateMachine(typeof(<DisableText>d__67))]
	private IEnumerator DisableText()
	{
		return null;
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xF53598", Offset = "0xF53598", VA = "0xF53598")]
	private Vector3 GetRandomYPos(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xF53480", Offset = "0xF53480", VA = "0xF53480")]
	private Vector3 GetShiftedHitPos(RaycastHit rayHit, Vector3 raycastOrigin)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xF5333C", Offset = "0xF5333C", VA = "0xF5333C")]
	private bool Raycast(Vector3 origin, Vector3 direction, LayerMask mask, float maxDist = float.PositiveInfinity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xF536D8", Offset = "0xF536D8", VA = "0xF536D8")]
	public CinematicCamera()
	{
	}
}
[Token(Token = "0x2000228")]
public class DebugTitle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000229")]
	public delegate void AlvoDebug();

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_Debug;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool m_DebugOn;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_Test2D;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_UseMouse;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_Pointer;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera m_MainCamera;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrInputModule m_VrInputModule;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrManager m_VRManager;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool m_Created;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_DisplayDebug;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool m_DisplayDebugOn;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool m_DisplayDebug2;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool m_DisplayDebugOn2;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string[] m_ActiveInScenes;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool activeCamera;

	[Token(Token = "0x14000005")]
	public static event AlvoDebug m_AlvoDebug
	{
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xCD65A0", Offset = "0xCD65A0", VA = "0xCD65A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xCD665C", Offset = "0xCD665C", VA = "0xCD665C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xCD6718", Offset = "0xCD6718", VA = "0xCD6718")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xCD6914", Offset = "0xCD6914", VA = "0xCD6914")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xCD6A5C", Offset = "0xCD6A5C", VA = "0xCD6A5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xCD6B5C", Offset = "0xCD6B5C", VA = "0xCD6B5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xCD6C5C", Offset = "0xCD6C5C", VA = "0xCD6C5C")]
	private void OnTest()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xCD6CC4", Offset = "0xCD6CC4", VA = "0xCD6CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xCD6D3C", Offset = "0xCD6D3C", VA = "0xCD6D3C")]
	private void OverRidePointer()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xCD6DB4", Offset = "0xCD6DB4", VA = "0xCD6DB4")]
	public static void AlvoDebugLog(string log)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xCD6E3C", Offset = "0xCD6E3C", VA = "0xCD6E3C")]
	public static void Log2(string log)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xCD6EC4", Offset = "0xCD6EC4", VA = "0xCD6EC4")]
	public DebugTitle()
	{
	}
}
[Token(Token = "0x200022A")]
public class DestroyObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_TimeToDestroy;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xCD6FC8", Offset = "0xCD6FC8", VA = "0xCD6FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xCD7018", Offset = "0xCD7018", VA = "0xCD7018")]
	private void RemoveObject()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xCD7084", Offset = "0xCD7084", VA = "0xCD7084")]
	public DestroyObject()
	{
	}
}
[Token(Token = "0x200022B")]
public enum ItemPurchaseType
{
	[Token(Token = "0x4001555")]
	Gun,
	[Token(Token = "0x4001556")]
	Grenade,
	[Token(Token = "0x4001557")]
	Scope,
	[Token(Token = "0x4001558")]
	Attachment,
	[Token(Token = "0x4001559")]
	Skin
}
[Token(Token = "0x200022C")]
public class DisplayLoadoutInventory : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200022D")]
	public class Scopes
	{
		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string n;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int nn;

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xCD9EF4", Offset = "0xCD9EF4", VA = "0xCD9EF4")]
		public Scopes()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200022E")]
	public class Attachments
	{
		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string n;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int nn;

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xCD9EFC", Offset = "0xCD9EFC", VA = "0xCD9EFC")]
		public Attachments()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200022F")]
	public class Inventory
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject m_GameObject;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_Price;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text m_PriceLbl;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_ItemNumber;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_Unlocked;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<bool> m_Skins;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<bool> s;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<bool> a;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string n;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int t;

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xCD9F04", Offset = "0xCD9F04", VA = "0xCD9F04")]
		public Inventory()
		{
		}
	}

	[Token(Token = "0x2000230")]
	[CompilerGenerated]
	private sealed class <PurchaseGunCoroutine>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisplayLoadoutInventory <>4__this;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xCDA540", Offset = "0xCDA540", VA = "0xCDA540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xCDA588", Offset = "0xCDA588", VA = "0xCDA588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xCD9B24", Offset = "0xCD9B24", VA = "0xCD9B24")]
		[DebuggerHidden]
		public <PurchaseGunCoroutine>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xCD9F0C", Offset = "0xCD9F0C", VA = "0xCD9F0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xCD9F10", Offset = "0xCD9F10", VA = "0xCD9F10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xCDA548", Offset = "0xCDA548", VA = "0xCDA548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000231")]
	[CompilerGenerated]
	private sealed class <PurchaseSkinCoroutine>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisplayLoadoutInventory <>4__this;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0xCDAB50", Offset = "0xCDAB50", VA = "0xCDAB50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xCDAB98", Offset = "0xCDAB98", VA = "0xCDAB98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xCD9B4C", Offset = "0xCD9B4C", VA = "0xCD9B4C")]
		[DebuggerHidden]
		public <PurchaseSkinCoroutine>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xCDA590", Offset = "0xCDA590", VA = "0xCDA590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xCDA594", Offset = "0xCDA594", VA = "0xCDA594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xCDAB58", Offset = "0xCDAB58", VA = "0xCDAB58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000232")]
	[CompilerGenerated]
	private sealed class <PurchaseSACoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisplayLoadoutInventory <>4__this;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xCDB10C", Offset = "0xCDB10C", VA = "0xCDB10C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xCDB154", Offset = "0xCDB154", VA = "0xCDB154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xCD9B74", Offset = "0xCD9B74", VA = "0xCD9B74")]
		[DebuggerHidden]
		public <PurchaseSACoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xCDABA0", Offset = "0xCDABA0", VA = "0xCDABA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xCDABA4", Offset = "0xCDABA4", VA = "0xCDABA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xCDB114", Offset = "0xCDB114", VA = "0xCDB114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000233")]
	[CompilerGenerated]
	private sealed class <CloseDialogue>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int value;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisplayLoadoutInventory <>4__this;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xCDB254", Offset = "0xCDB254", VA = "0xCDB254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xCDB29C", Offset = "0xCDB29C", VA = "0xCDB29C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xCD9D40", Offset = "0xCD9D40", VA = "0xCD9D40")]
		[DebuggerHidden]
		public <CloseDialogue>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xCDB15C", Offset = "0xCDB15C", VA = "0xCDB15C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xCDB160", Offset = "0xCDB160", VA = "0xCDB160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xCDB25C", Offset = "0xCDB25C", VA = "0xCDB25C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public PlayerLocalData m_PlayerLocalData;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Inventory> m_AllRifles;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Inventory> m_AllPistols;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Inventory> m_AllSkins;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Inventory> m_AllAttachments;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Inventory> m_AllScopes;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Inventory> m_AllScopesSniper;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Inventory> c;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int cc;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int Version;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WeaponList m_AllWeapons;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SkinsList m_TotalSkins;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ClothingList tc;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Scopes> m_TotalScopes;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Attachments> m_TotalAttachments;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VrLoadOuts m_VrLoadOuts;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int m_CurrentWeapon;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ProfileDisplay[] m_ProfileDisplays;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int m_ItemToPurchase;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject m_PurchaseDialogue;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text m_WeaponToPurchaseName;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text m_WeaponPrice;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text m_Message;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int m_SkinToPurchase;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_PurchaseDialogueSkins;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text M_SkinToPurchaseName;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text m_SkinPrice;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text m_MessageSkin;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int m_ScopeOrAttachmentToBuy;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int si;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_PurchaseDialogueSA;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text M_SAToPurchaseName;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text m_SAePrice;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text m_MessageSA;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int ct;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject m_PurchaseDialogueC;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text M_CoPurchaseName;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text m_CePrice;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text m_MessageC;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject hatL;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject masL;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject yeL;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject suiL;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Text p;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Text p1;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Text p2;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text p3;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ItemPurchaseType m_ItemPurchaseType;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private WaitForSeconds wait;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private WaitForSeconds longerWait;

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xCD7094", Offset = "0xCD7094", VA = "0xCD7094")]
	public static byte[] SS(List<bool> b)
	{
		return null;
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xCD71A0", Offset = "0xCD71A0", VA = "0xCD71A0")]
	public static List<bool> DS(byte[] b)
	{
		return null;
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xCD7354", Offset = "0xCD7354", VA = "0xCD7354")]
	public static byte[] Serialize(int v, List<Inventory> r, List<Inventory> p, List<Inventory> c)
	{
		return null;
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xCD7674", Offset = "0xCD7674", VA = "0xCD7674")]
	public void Deserialize(int v, byte[] bytes)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xCD7BBC", Offset = "0xCD7BBC", VA = "0xCD7BBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xCD7C2C", Offset = "0xCD7C2C", VA = "0xCD7C2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xCD7E50", Offset = "0xCD7E50", VA = "0xCD7E50")]
	private void SetupStore()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xCD8068", Offset = "0xCD8068", VA = "0xCD8068")]
	public void SetupSkins()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xCD8880", Offset = "0xCD8880", VA = "0xCD8880")]
	public bool CheckUnlock(int value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xCD89AC", Offset = "0xCD89AC", VA = "0xCD89AC")]
	public bool CheckSkinUnlock(int value, bool r)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xCD8BAC", Offset = "0xCD8BAC", VA = "0xCD8BAC")]
	public bool CheckSA(int value, bool s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xCD8D10", Offset = "0xCD8D10", VA = "0xCD8D10")]
	public bool cu(int value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xCD8DDC", Offset = "0xCD8DDC", VA = "0xCD8DDC")]
	public void OpenPurchaseDialogue(int itemIndex, ItemPurchaseType purchaseType, bool skinIsRifle = true)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xCD9454", Offset = "0xCD9454", VA = "0xCD9454")]
	private void OpenPurchaseDialogueGun(int itemIndex)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xCD9224", Offset = "0xCD9224", VA = "0xCD9224")]
	private void OpenPurchaseDialogueSkin(int value, bool isRifle)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xCD8E14", Offset = "0xCD8E14", VA = "0xCD8E14")]
	private void OpenPurchaseDialogueScopeOrAttachment(int value, bool isScope)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xCD96BC", Offset = "0xCD96BC", VA = "0xCD96BC")]
	private void OpenPurchaseDialogueC(int value)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xCD96C0", Offset = "0xCD96C0", VA = "0xCD96C0")]
	public void sp(int value)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xCD9788", Offset = "0xCD9788", VA = "0xCD9788")]
	private string str(int value)
	{
		return null;
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xCD9870", Offset = "0xCD9870", VA = "0xCD9870")]
	public void CancelPurchase(int r)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xCD98DC", Offset = "0xCD98DC", VA = "0xCD98DC")]
	public void PurchaseItem()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xCD99EC", Offset = "0xCD99EC", VA = "0xCD99EC")]
	[IteratorStateMachine(typeof(<PurchaseGunCoroutine>d__74))]
	private IEnumerator PurchaseGunCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xCD9A54", Offset = "0xCD9A54", VA = "0xCD9A54")]
	[IteratorStateMachine(typeof(<PurchaseSkinCoroutine>d__75))]
	private IEnumerator PurchaseSkinCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xCD9ABC", Offset = "0xCD9ABC", VA = "0xCD9ABC")]
	[IteratorStateMachine(typeof(<PurchaseSACoroutine>d__76))]
	private IEnumerator PurchaseSACoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xCD9B9C", Offset = "0xCD9B9C", VA = "0xCD9B9C")]
	public void scPrice(int value)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xCD9CC4", Offset = "0xCD9CC4", VA = "0xCD9CC4")]
	public void PurchaseC()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xCD9CC8", Offset = "0xCD9CC8", VA = "0xCD9CC8")]
	[IteratorStateMachine(typeof(<CloseDialogue>d__79))]
	private IEnumerator CloseDialogue(int value)
	{
		return null;
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xCD9D68", Offset = "0xCD9D68", VA = "0xCD9D68")]
	private void UpdateCoins()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xCD9E10", Offset = "0xCD9E10", VA = "0xCD9E10")]
	public void TestAddCoins()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xCD9E5C", Offset = "0xCD9E5C", VA = "0xCD9E5C")]
	public DisplayLoadoutInventory()
	{
	}
}
[Token(Token = "0x2000234")]
public class DontGoThroughThings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool sendTriggerMessage;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask layerMask;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float skinWidth;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minimumExtent;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float partialExtent;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float sqrMinimumExtent;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 previousPosition;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider myCollider;

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xCDB2A4", Offset = "0xCDB2A4", VA = "0xCDB2A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xCDB3E4", Offset = "0xCDB3E4", VA = "0xCDB3E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xCDB5E0", Offset = "0xCDB5E0", VA = "0xCDB5E0")]
	public DontGoThroughThings()
	{
	}
}
[Token(Token = "0x2000235")]
public class FootstepsNew : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerData playerData;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform t;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrPlayerController playerController;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float runSoundInterval;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float walkSoundIntervalMin;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float walkSoundIntervalMax;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float runIntervalLocal;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float walkIntMinLocal;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float walkIntMaxLocal;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float runCounter;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float walkCounter;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float proneCounter;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float velocity;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float walkInterval;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float proneInterval;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float proneIntervalMin;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float proneIntervalMax;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float localVolume;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float thirdPersonVolume;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource aSource;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip slideClip;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip stopSlideClip;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool init;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float pitch;

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xCDB610", Offset = "0xCDB610", VA = "0xCDB610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xCDB6D4", Offset = "0xCDB6D4", VA = "0xCDB6D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xCDB78C", Offset = "0xCDB78C", VA = "0xCDB78C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xCDB848", Offset = "0xCDB848", VA = "0xCDB848")]
	public void FixedUpdateFootsteps()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xCDBFA4", Offset = "0xCDBFA4", VA = "0xCDBFA4")]
	public void PlaySliding(bool isNinja)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xCDC0AC", Offset = "0xCDC0AC", VA = "0xCDC0AC")]
	public void StopSliding()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xCDBC1C", Offset = "0xCDBC1C", VA = "0xCDBC1C")]
	public void ProneSound()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xCDBCB0", Offset = "0xCDBCB0", VA = "0xCDBCB0")]
	public void CrouchSound()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xCDBD44", Offset = "0xCDBD44", VA = "0xCDBD44")]
	public void WalkSound()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xCDBA14", Offset = "0xCDBA14", VA = "0xCDBA14")]
	public void RunSound()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xCDC198", Offset = "0xCDC198", VA = "0xCDC198")]
	public FootstepsNew()
	{
	}
}
[Token(Token = "0x2000236")]
public class FPSCounter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FPS;

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xCDC1C8", Offset = "0xCDC1C8", VA = "0xCDC1C8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xCDC1EC", Offset = "0xCDC1EC", VA = "0xCDC1EC")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x2000237")]
public class GUIFadeAlpha : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image m_Image;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color m_CurrentColor;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_CurrentAlpha;

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xCDC1F4", Offset = "0xCDC1F4", VA = "0xCDC1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xCDC244", Offset = "0xCDC244", VA = "0xCDC244")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xCDC2D4", Offset = "0xCDC2D4", VA = "0xCDC2D4")]
	public GUIFadeAlpha()
	{
	}
}
[Token(Token = "0x2000238")]
public class Head : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerData m_PlayerData;

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xCDC2DC", Offset = "0xCDC2DC", VA = "0xCDC2DC")]
	public Head()
	{
	}
}
[Token(Token = "0x2000239")]
public class InspectorPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent m_Event;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private KeyCode m_Key;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xCDC2E4", Offset = "0xCDC2E4", VA = "0xCDC2E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xCDC318", Offset = "0xCDC318", VA = "0xCDC318")]
	public void Play()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xCDC32C", Offset = "0xCDC32C", VA = "0xCDC32C")]
	public void CopyButton()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xCDC3CC", Offset = "0xCDC3CC", VA = "0xCDC3CC")]
	public InspectorPlayer()
	{
	}
}
[Token(Token = "0x200023A")]
public class KillZone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xCDC3D4", Offset = "0xCDC3D4", VA = "0xCDC3D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xCDC544", Offset = "0xCDC544", VA = "0xCDC544")]
	public KillZone()
	{
	}
}
[Token(Token = "0x200023B")]
public class LadderWaypoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xCDC54C", Offset = "0xCDC54C", VA = "0xCDC54C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xCDC550", Offset = "0xCDC550", VA = "0xCDC550")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xCDC554", Offset = "0xCDC554", VA = "0xCDC554")]
	public LadderWaypoint()
	{
	}
}
[Token(Token = "0x200023C")]
public class LoadingScreen : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200023D")]
	[CompilerGenerated]
	private sealed class <UpdateLoadingProgress>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreen <>4__this;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xCDCD4C", Offset = "0xCDCD4C", VA = "0xCDCD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xCDCD94", Offset = "0xCDCD94", VA = "0xCDCD94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xCDC6A8", Offset = "0xCDC6A8", VA = "0xCDC6A8")]
		[DebuggerHidden]
		public <UpdateLoadingProgress>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xCDCB9C", Offset = "0xCDCB9C", VA = "0xCDCB9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xCDCBA0", Offset = "0xCDCBA0", VA = "0xCDCBA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xCDCD54", Offset = "0xCDCD54", VA = "0xCDCD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text mapToLoad;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text loadingLbl;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider loadingSlider;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform thisTransform;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 resetPosition;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedPoseDriver poseDriver;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text tipsLbl;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LanguageText[] tipsT;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LanguageText loadingT;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string[] tips;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject loadingMatchGo;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject loadingTitleGo;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds updateTime;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image m_Background;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject m_MapLogo;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool recenterPosOnLoad;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject oculusOverlay;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject picoOverlay;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Space]
	[Header("QUEST ADRESSABLES")]
	public GameObject[] destroyLoadGos;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float timetoNextTip;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float tipCount;

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xCDC55C", Offset = "0xCDC55C", VA = "0xCDC55C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xCDC600", Offset = "0xCDC600", VA = "0xCDC600")]
	public void ResetTransformPosition()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xCDC6A0", Offset = "0xCDC6A0", VA = "0xCDC6A0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xCDC598", Offset = "0xCDC598", VA = "0xCDC598")]
	[IteratorStateMachine(typeof(<UpdateLoadingProgress>d__22))]
	public IEnumerator UpdateLoadingProgress()
	{
		return null;
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xCDC6D0", Offset = "0xCDC6D0", VA = "0xCDC6D0")]
	public void LoadingTitle()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xCDC7F0", Offset = "0xCDC7F0", VA = "0xCDC7F0")]
	public void UpdateImage(AlvoLevels alvoLevels)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xCDC9D0", Offset = "0xCDC9D0", VA = "0xCDC9D0")]
	public void ShowTips()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xCDCA7C", Offset = "0xCDCA7C", VA = "0xCDCA7C")]
	public void DestroyEverything()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xCDCB1C", Offset = "0xCDCB1C", VA = "0xCDCB1C")]
	public LoadingScreen()
	{
	}
}
[Token(Token = "0x200023E")]
public class NavMeshLinkGizmo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform start;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform end;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 cubeSize;

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xCDCD9C", Offset = "0xCDCD9C", VA = "0xCDCD9C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xCDCE1C", Offset = "0xCDCE1C", VA = "0xCDCE1C")]
	public NavMeshLinkGizmo()
	{
	}
}
[Token(Token = "0x200023F")]
public class Notes : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea(10, 20)]
	public string m_Notes;

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xCDCE24", Offset = "0xCDCE24", VA = "0xCDCE24")]
	public Notes()
	{
	}
}
[Token(Token = "0x2000240")]
public class PatoMorado : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000241")]
	[CompilerGenerated]
	private sealed class <Detonate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PatoMorado <>4__this;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0xCDD298", Offset = "0xCDD298", VA = "0xCDD298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0xCDD2E0", Offset = "0xCDD2E0", VA = "0xCDD2E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xCDCECC", Offset = "0xCDCECC", VA = "0xCDCECC")]
		[DebuggerHidden]
		public <Detonate>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xCDCF80", Offset = "0xCDCF80", VA = "0xCDCF80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xCDCF84", Offset = "0xCDCF84", VA = "0xCDCF84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xCDD2A0", Offset = "0xCDD2A0", VA = "0xCDD2A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WeaponEffects WeaponEffectsComponent;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject duckMesh;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource aSource;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip duckSound;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] explosionSounds;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool destroyed;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ID;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds waitDetonate;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds waitDetonateEnd;

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xCDCE2C", Offset = "0xCDCE2C", VA = "0xCDCE2C")]
	public void Damage()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xCDCE64", Offset = "0xCDCE64", VA = "0xCDCE64")]
	[IteratorStateMachine(typeof(<Detonate>d__10))]
	private IEnumerator Detonate()
	{
		return null;
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xCDCEF4", Offset = "0xCDCEF4", VA = "0xCDCEF4")]
	public PatoMorado()
	{
	}
}
[Token(Token = "0x2000242")]
public enum t
{
	[Token(Token = "0x40015FC")]
	x,
	[Token(Token = "0x40015FD")]
	n,
	[Token(Token = "0x40015FE")]
	h
}
[Token(Token = "0x2000243")]
public class QuickLog : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] logs1;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int logCount1;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text stepNPLbl1;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text stepHmdLbl1;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text initStatusLbl1;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TMP_Text[] logs;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int logCount;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TMP_Text stepNPLbl;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static TMP_Text stepHmdLbl;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static TMP_Text initStatusLbl;

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xCDD2E8", Offset = "0xCDD2E8", VA = "0xCDD2E8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xCDD354", Offset = "0xCDD354", VA = "0xCDD354")]
	public static void LogInitStatus(string text)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xCDD588", Offset = "0xCDD588", VA = "0xCDD588")]
	public static void Log(string text, string fileLine, t stepType = t.x, bool error = false)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xCDD984", Offset = "0xCDD984", VA = "0xCDD984")]
	public static void PrintStepNP(string text, string fileLine)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xCDDC1C", Offset = "0xCDDC1C", VA = "0xCDDC1C")]
	public static void PrintStepHMD(string text, string fileLine)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xCDDEB4", Offset = "0xCDDEB4", VA = "0xCDDEB4")]
	public QuickLog()
	{
	}
}
[Token(Token = "0x2000244")]
public class RagdollElement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000245")]
	[CompilerGenerated]
	private sealed class <ApplyForceDamage>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool upwards;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RagdollElement <>4__this;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 firePos;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xCDE610", Offset = "0xCDE610", VA = "0xCDE610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xCDE658", Offset = "0xCDE658", VA = "0xCDE658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xCDE34C", Offset = "0xCDE34C", VA = "0xCDE34C")]
		[DebuggerHidden]
		public <ApplyForceDamage>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xCDE53C", Offset = "0xCDE53C", VA = "0xCDE53C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xCDE540", Offset = "0xCDE540", VA = "0xCDE540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xCDE618", Offset = "0xCDE618", VA = "0xCDE618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000246")]
	[CompilerGenerated]
	private sealed class <CheckIfMoving>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RagdollElement <>4__this;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xCDE7D0", Offset = "0xCDE7D0", VA = "0xCDE7D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xCDE818", Offset = "0xCDE818", VA = "0xCDE818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xCDE420", Offset = "0xCDE420", VA = "0xCDE420")]
		[DebuggerHidden]
		public <CheckIfMoving>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xCDE660", Offset = "0xCDE660", VA = "0xCDE660", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xCDE664", Offset = "0xCDE664", VA = "0xCDE664", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xCDE7D8", Offset = "0xCDE7D8", VA = "0xCDE7D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000247")]
	[CompilerGenerated]
	private sealed class <WaitForDeactivation>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RagdollElement <>4__this;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xCDE880", Offset = "0xCDE880", VA = "0xCDE880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xCDE8C8", Offset = "0xCDE8C8", VA = "0xCDE8C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xCDE448", Offset = "0xCDE448", VA = "0xCDE448")]
		[DebuggerHidden]
		public <WaitForDeactivation>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xCDE820", Offset = "0xCDE820", VA = "0xCDE820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xCDE824", Offset = "0xCDE824", VA = "0xCDE824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xCDE888", Offset = "0xCDE888", VA = "0xCDE888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform trans;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CacheRigTransforms cache;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody[] allRigidBodies;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float debugMagnitude;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody mainRigidBody;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool active;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerCustomization playerCustomization;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 restPos;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForSeconds waitTime;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaitForSeconds updateWaitTime;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForSeconds checkIfMovingDelay;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SECTR_PointSource audioSource;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float minMagnitude;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float explosionDefaultForce;

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xCDDEBC", Offset = "0xCDDEBC", VA = "0xCDDEBC")]
	public void ActivateRagdoll(Transform[] playerTransforms, byte[] customization, Vector3 pos, Quaternion rot, [Optional] Vector3 firePos, bool explosion = false, bool upwards = true)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xCDE1DC", Offset = "0xCDE1DC", VA = "0xCDE1DC")]
	[IteratorStateMachine(typeof(<ApplyForceDamage>d__15))]
	private IEnumerator ApplyForceDamage(Vector3 firePos, bool upwards)
	{
		return null;
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xCDE374", Offset = "0xCDE374", VA = "0xCDE374")]
	public void DeActivateRagdoll()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xCDE3BC", Offset = "0xCDE3BC", VA = "0xCDE3BC")]
	private void SetToKinematic()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xCDE2E4", Offset = "0xCDE2E4", VA = "0xCDE2E4")]
	[IteratorStateMachine(typeof(<CheckIfMoving>d__18))]
	private IEnumerator CheckIfMoving()
	{
		return null;
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xCDE27C", Offset = "0xCDE27C", VA = "0xCDE27C")]
	[IteratorStateMachine(typeof(<WaitForDeactivation>d__19))]
	private IEnumerator WaitForDeactivation()
	{
		return null;
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xCDE470", Offset = "0xCDE470", VA = "0xCDE470")]
	private void Update1()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xCDE474", Offset = "0xCDE474", VA = "0xCDE474")]
	public RagdollElement()
	{
	}
}
[Token(Token = "0x2000248")]
public class RegularClick : UnityEngine.MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerEnterHandler
{
	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xCDE8D0", Offset = "0xCDE8D0", VA = "0xCDE8D0", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xCDE938", Offset = "0xCDE938", VA = "0xCDE938", Slot = "5")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xCDE9A0", Offset = "0xCDE9A0", VA = "0xCDE9A0")]
	public RegularClick()
	{
	}
}
[Token(Token = "0x2000249")]
public class SaveGameSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xCDE9A8", Offset = "0xCDE9A8", VA = "0xCDE9A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xCDE9B0", Offset = "0xCDE9B0", VA = "0xCDE9B0")]
	public SaveGameSettings()
	{
	}
}
[Token(Token = "0x200024A")]
public class SimpleIK : Photon.MonoBehaviour
{
	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator m_Animator;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform m_Transform;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_OneHanded;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_Chest;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_Head;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rb;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_AimTransform;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform m_RightHand;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform m_LeftHand;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 m_RHRotOffset;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 mLHRotOffset;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 m_HeadOffset;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 m_ChestLerp;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 m_HeadLerp;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float m_LookAtWeight;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float m_Weight;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float XClamp;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float YClamp;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float ZClamp;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 m_HeadLookPos;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 m_WeaponLookPos;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Quaternion m_LHandRot;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector3 m_LHandPos;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Quaternion m_RHandRot;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Vector3 m_RHandPos;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool m_Client;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SimpleIK m_SimpleIK;

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xCDE9B8", Offset = "0xCDE9B8", VA = "0xCDE9B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xCDEAF0", Offset = "0xCDEAF0", VA = "0xCDEAF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xCDF490", Offset = "0xCDF490", VA = "0xCDF490")]
	private Quaternion Clamp(Vector3 target, Transform transform)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xCDF05C", Offset = "0xCDF05C", VA = "0xCDF05C")]
	private void SetOneHanded(Vector3 lookPos, Vector3 weaponLookPos)
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xCDF20C", Offset = "0xCDF20C", VA = "0xCDF20C")]
	private Quaternion ComputeChestRotation(Transform transform, Vector3 wpnLookPos, Transform rb, float horizAngleOffset)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xCDF1D0", Offset = "0xCDF1D0", VA = "0xCDF1D0")]
	public void SetPosRot(Vector3 rHPos, Quaternion rHRot, Vector3 lHPos, Quaternion lHRot, Vector3 lookPos)
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xCDF618", Offset = "0xCDF618", VA = "0xCDF618")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xCDF7CC", Offset = "0xCDF7CC", VA = "0xCDF7CC")]
	public SimpleIK()
	{
	}
}
[Token(Token = "0x200024B")]
public class Singleton<T> : UnityEngine.MonoBehaviour where T : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_ShuttingDown;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object m_Lock;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static T m_Instance;

	[Token(Token = "0x170001E1")]
	public static T Instance
	{
		[Token(Token = "0x6000DB6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DB7")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000DB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DB9")]
	public Singleton()
	{
	}
}
[Serializable]
[Token(Token = "0x200024C")]
public class SpawnedTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int playerId;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform t;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceFromPlayer;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerData m_PlayerData;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NavMeshPath m_CurrentPath;

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xCDF7E8", Offset = "0xCDF7E8", VA = "0xCDF7E8")]
	public void SetupTarget(LevelManager levelManager)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xCDF894", Offset = "0xCDF894", VA = "0xCDF894")]
	public void DisableTarget(LevelManager levelManager)
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xCDF8F0", Offset = "0xCDF8F0", VA = "0xCDF8F0")]
	public SpawnedTarget()
	{
	}
}
[Token(Token = "0x200024D")]
public class SphereGiz : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xCDF8F8", Offset = "0xCDF8F8", VA = "0xCDF8F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xCDF924", Offset = "0xCDF924", VA = "0xCDF924")]
	public SphereGiz()
	{
	}
}
[Token(Token = "0x200024E")]
public class testSound : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] samples;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SoundThreshold;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float total;

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xCDF92C", Offset = "0xCDF92C", VA = "0xCDF92C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xCDFA30", Offset = "0xCDFA30", VA = "0xCDFA30")]
	public testSound()
	{
	}
}
[Token(Token = "0x200024F")]
[Obsolete("This class is being replaced by platform manager")]
public class AlvoActivityFeed : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xCDFA90", Offset = "0xCDFA90", VA = "0xCDFA90")]
	public AlvoActivityFeed()
	{
	}
}
[Token(Token = "0x2000250")]
public class AlvoFriendsSony
{
	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xCDFA98", Offset = "0xCDFA98", VA = "0xCDFA98")]
	public static void LoadFriends()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xCDFA9C", Offset = "0xCDFA9C", VA = "0xCDFA9C")]
	private static void UpdateList()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xCDFAA0", Offset = "0xCDFAA0", VA = "0xCDFAA0")]
	public AlvoFriendsSony()
	{
	}
}
[Token(Token = "0x2000251")]
public class AlvoLagSimulator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x170001E2")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xCDFAA8", Offset = "0xCDFAA8", VA = "0xCDFAA8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xCDFAB0", Offset = "0xCDFAB0", VA = "0xCDFAB0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xCDFAB8", Offset = "0xCDFAB8", VA = "0xCDFAB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xCDFB18", Offset = "0xCDFB18", VA = "0xCDFB18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xCDFD00", Offset = "0xCDFD00", VA = "0xCDFD00")]
	public AlvoLagSimulator()
	{
	}
}
[Token(Token = "0x2000252")]
public class AlvoMatchMaking : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xCDFD08", Offset = "0xCDFD08", VA = "0xCDFD08")]
	public AlvoMatchMaking()
	{
	}
}
[Token(Token = "0x2000253")]
[Obsolete("This class is being replaced by platform manager")]
public class AlvoNPNotifications : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xCDFD10", Offset = "0xCDFD10", VA = "0xCDFD10")]
	public AlvoNPNotifications()
	{
	}
}
[Token(Token = "0x2000254")]
[Obsolete("This class is being replaced by platform manager")]
public class AlvoNPProfiles : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xCDFD18", Offset = "0xCDFD18", VA = "0xCDFD18")]
	public AlvoNPProfiles()
	{
	}
}
[Token(Token = "0x2000255")]
[Obsolete("This class is being replaced by platform manager")]
public class AlvoNPToolkit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xCDFD20", Offset = "0xCDFD20", VA = "0xCDFD20")]
	public AlvoNPToolkit()
	{
	}
}
[Token(Token = "0x2000256")]
public enum Levels
{
	[Token(Token = "0x400164B")]
	TownMap,
	[Token(Token = "0x400164C")]
	Monastery,
	[Token(Token = "0x400164D")]
	MonasteryNight,
	[Token(Token = "0x400164E")]
	HouseMap,
	[Token(Token = "0x400164F")]
	HouseMapNight,
	[Token(Token = "0x4001650")]
	DesertDay,
	[Token(Token = "0x4001651")]
	DesertNight,
	[Token(Token = "0x4001652")]
	IndustrialMap,
	[Token(Token = "0x4001653")]
	Factory,
	[Token(Token = "0x4001654")]
	TownMapNight,
	[Token(Token = "0x4001655")]
	Playground,
	[Token(Token = "0x4001656")]
	TokyoMap,
	[Token(Token = "0x4001657")]
	SpaMap,
	[Token(Token = "0x4001658")]
	HighriseMap,
	[Token(Token = "0x4001659")]
	Sanatorium,
	[Token(Token = "0x400165A")]
	Hangar,
	[Token(Token = "0x400165B")]
	IndustrialPit
}
[Token(Token = "0x2000257")]
public enum RoomVisibilityOptions
{
	[Token(Token = "0x400165D")]
	Public,
	[Token(Token = "0x400165E")]
	Private
}
[Token(Token = "0x2000258")]
public class AlvoPhotonManager : Photon.MonoBehaviour
{
	[Token(Token = "0x2000259")]
	public delegate void ConectionComplete();

	[Token(Token = "0x200025A")]
	[CompilerGenerated]
	private sealed class <ReconectionRoutine>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CloudRegionCode region;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xCE7088", Offset = "0xCE7088", VA = "0xCE7088", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xCE70D0", Offset = "0xCE70D0", VA = "0xCE70D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xCE050C", Offset = "0xCE050C", VA = "0xCE050C")]
		[DebuggerHidden]
		public <ReconectionRoutine>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xCE6DB8", Offset = "0xCE6DB8", VA = "0xCE6DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xCE6DBC", Offset = "0xCE6DBC", VA = "0xCE6DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xCE7090", Offset = "0xCE7090", VA = "0xCE7090", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025B")]
	[CompilerGenerated]
	private sealed class <InitOnlineCoroutine>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xCE7348", Offset = "0xCE7348", VA = "0xCE7348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xCE7390", Offset = "0xCE7390", VA = "0xCE7390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xCE0534", Offset = "0xCE0534", VA = "0xCE0534")]
		[DebuggerHidden]
		public <InitOnlineCoroutine>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xCE70D8", Offset = "0xCE70D8", VA = "0xCE70D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xCE70DC", Offset = "0xCE70DC", VA = "0xCE70DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xCE7350", Offset = "0xCE7350", VA = "0xCE7350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025C")]
	[CompilerGenerated]
	private sealed class <ConnectToOnlineTiming>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CloudRegionCode region;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xCE7B90", Offset = "0xCE7B90", VA = "0xCE7B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xCE7BD8", Offset = "0xCE7BD8", VA = "0xCE7BD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xCE09BC", Offset = "0xCE09BC", VA = "0xCE09BC")]
		[DebuggerHidden]
		public <ConnectToOnlineTiming>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xCE7398", Offset = "0xCE7398", VA = "0xCE7398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xCE739C", Offset = "0xCE739C", VA = "0xCE739C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xCE7B98", Offset = "0xCE7B98", VA = "0xCE7B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025D")]
	[CompilerGenerated]
	private sealed class <CreateZombieMatchCoroutine>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xCE7FDC", Offset = "0xCE7FDC", VA = "0xCE7FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xCE8024", Offset = "0xCE8024", VA = "0xCE8024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xCE0B38", Offset = "0xCE0B38", VA = "0xCE0B38")]
		[DebuggerHidden]
		public <CreateZombieMatchCoroutine>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xCE7BE0", Offset = "0xCE7BE0", VA = "0xCE7BE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xCE7BE4", Offset = "0xCE7BE4", VA = "0xCE7BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xCE7FE4", Offset = "0xCE7FE4", VA = "0xCE7FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025E")]
	[CompilerGenerated]
	private sealed class <NewFindGamesCoroutine>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int value;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool force;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool fastTeamMatchSearch;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TypedLobby <typedLobby>5__3;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <expectedUsers>5__4;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <attemps>5__5;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__6;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xCE8844", Offset = "0xCE8844", VA = "0xCE8844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0xCE888C", Offset = "0xCE888C", VA = "0xCE888C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xCE1988", Offset = "0xCE1988", VA = "0xCE1988")]
		[DebuggerHidden]
		public <NewFindGamesCoroutine>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xCE802C", Offset = "0xCE802C", VA = "0xCE802C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xCE8030", Offset = "0xCE8030", VA = "0xCE8030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xCE884C", Offset = "0xCE884C", VA = "0xCE884C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025F")]
	[CompilerGenerated]
	private sealed class <TrainingCreateGame>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xCE89C8", Offset = "0xCE89C8", VA = "0xCE89C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xCE8A10", Offset = "0xCE8A10", VA = "0xCE8A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xCE8894", Offset = "0xCE8894", VA = "0xCE8894")]
		[DebuggerHidden]
		public <TrainingCreateGame>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xCE88BC", Offset = "0xCE88BC", VA = "0xCE88BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xCE88C0", Offset = "0xCE88C0", VA = "0xCE88C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xCE89D0", Offset = "0xCE89D0", VA = "0xCE89D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[CompilerGenerated]
	private sealed class <PrivateCreateGame>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PrivateMatchSettings settings;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool join;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xCE8C24", Offset = "0xCE8C24", VA = "0xCE8C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xCE8C6C", Offset = "0xCE8C6C", VA = "0xCE8C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xCE8B0C", Offset = "0xCE8B0C", VA = "0xCE8B0C")]
		[DebuggerHidden]
		public <PrivateCreateGame>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xCE8B34", Offset = "0xCE8B34", VA = "0xCE8B34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xCE8B38", Offset = "0xCE8B38", VA = "0xCE8B38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xCE8C2C", Offset = "0xCE8C2C", VA = "0xCE8C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[CompilerGenerated]
	private sealed class <FindFFAGamesRoutine>d__102 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int gameType;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] expectedUsers;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TypedLobby typedLobby;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <count>5__2;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xCE8DE0", Offset = "0xCE8DE0", VA = "0xCE8DE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xCE8E28", Offset = "0xCE8E28", VA = "0xCE8E28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xCE8C74", Offset = "0xCE8C74", VA = "0xCE8C74")]
		[DebuggerHidden]
		public <FindFFAGamesRoutine>d__102(int <>1__state)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xCE8C9C", Offset = "0xCE8C9C", VA = "0xCE8C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xCE8CA0", Offset = "0xCE8CA0", VA = "0xCE8CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xCE8DE8", Offset = "0xCE8DE8", VA = "0xCE8DE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000263")]
	[CompilerGenerated]
	private sealed class <FindTeamGamesRoutine>d__103 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int gameType;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] expectedUsers;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TypedLobby typedLobby;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <count>5__2;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0xCE8F98", Offset = "0xCE8F98", VA = "0xCE8F98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xCE8FE0", Offset = "0xCE8FE0", VA = "0xCE8FE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xCE8E30", Offset = "0xCE8E30", VA = "0xCE8E30")]
		[DebuggerHidden]
		public <FindTeamGamesRoutine>d__103(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xCE8E58", Offset = "0xCE8E58", VA = "0xCE8E58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xCE8E5C", Offset = "0xCE8E5C", VA = "0xCE8E5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xCE8FA0", Offset = "0xCE8FA0", VA = "0xCE8FA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000264")]
	[CompilerGenerated]
	private sealed class <NewCreatePrivateRoomRoutine>d__107 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrivateMatchSettings settings;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool join;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RoomOptions roomOptions;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TypedLobby typedLobby;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xCE9240", Offset = "0xCE9240", VA = "0xCE9240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xCE9288", Offset = "0xCE9288", VA = "0xCE9288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xCE8FE8", Offset = "0xCE8FE8", VA = "0xCE8FE8")]
		[DebuggerHidden]
		public <NewCreatePrivateRoomRoutine>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xCE9010", Offset = "0xCE9010", VA = "0xCE9010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xCE9014", Offset = "0xCE9014", VA = "0xCE9014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xCE9248", Offset = "0xCE9248", VA = "0xCE9248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000265")]
	[CompilerGenerated]
	private sealed class <StartLobbyRoomCoroutine>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0xCE9798", Offset = "0xCE9798", VA = "0xCE9798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xCE97E0", Offset = "0xCE97E0", VA = "0xCE97E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xCE9290", Offset = "0xCE9290", VA = "0xCE9290")]
		[DebuggerHidden]
		public <StartLobbyRoomCoroutine>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xCE92B8", Offset = "0xCE92B8", VA = "0xCE92B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xCE92BC", Offset = "0xCE92BC", VA = "0xCE92BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xCE97A0", Offset = "0xCE97A0", VA = "0xCE97A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000266")]
	[CompilerGenerated]
	private sealed class <LeaveAndJoinNewRoomCoroutine>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoinRoomInfo roomInfo;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AlvoPhotonManager <>4__this;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0xCE9C88", Offset = "0xCE9C88", VA = "0xCE9C88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0xCE9CD0", Offset = "0xCE9CD0", VA = "0xCE9CD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xCE97E8", Offset = "0xCE97E8", VA = "0xCE97E8")]
		[DebuggerHidden]
		public <LeaveAndJoinNewRoomCoroutine>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xCE9810", Offset = "0xCE9810", VA = "0xCE9810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xCE9814", Offset = "0xCE9814", VA = "0xCE9814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xCE9C90", Offset = "0xCE9C90", VA = "0xCE9C90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool init;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_GameVersion;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string activeSceneName;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public SceneType activeSceneType;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerLocalData m_LocalData;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AlvoSocialManager m_AlvoSocialManager;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AlvoPartyNet m_AlvoParty;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TitleRoomManager m_TitleRoomManager;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public StartupManager startupManager;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] roomPrefixs;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string roomName;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public JoiningResponse errorCode;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool titleVoiceSpawned;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool gameStarted;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	public bool matchFound;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ExitGames.Client.Photon.Hashtable matchSearchProperties;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool createdRoom;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool roomInit;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool initConection;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool reconecting;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool endMatchReconection;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool allowCrossplay;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public bool allowCrossplayOptOut;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	public bool useCrossplay;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int maxNoviceLvl;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int playerLvl;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool allowNoviceOptOut;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool allowNovice;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool useNoviceRooms;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool serverResponse;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int nextServerLocation;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float requestTimeOut;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool updateLogin;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool setTrainingMode;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForSeconds waitfHalf;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForSeconds waitfOneAndHalf;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WaitForSeconds waitf5;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WaitForSeconds waitf3;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AlvoPresenceManager presenceManager;

	[Token(Token = "0x4001686")]
	public const byte EventLoadMap = 70;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool searchingGames;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int lastSearchedMatch;

	[Token(Token = "0x400168A")]
	private const string crossplayRoomPlatform = "cp";

	[Token(Token = "0x400168B")]
	private const string noviceRoomTag = "novice";

	[Token(Token = "0x400168C")]
	private const string expertRoomTag = "expert";

	[Token(Token = "0x400168D")]
	public const string pm_gameType = "C0";

	[Token(Token = "0x400168E")]
	public const string pm_displayName = "C1";

	[Token(Token = "0x400168F")]
	public const string pm_platform = "C2";

	[Token(Token = "0x4001690")]
	public const string pm_masterVer = "C3";

	[Token(Token = "0x4001691")]
	public const string pm_mapNumber = "pm-mapNumber";

	[Token(Token = "0x4001692")]
	public const string pm_displayMode = "pm-displayMode";

	[Token(Token = "0x4001693")]
	public const string pm_matchStatus = "pm-matchStatus";

	[Token(Token = "0x4001694")]
	public const string pm_hostFID = "pm-hostID";

	[Token(Token = "0x4001695")]
	public const string pm_password = "pm-password";

	[Token(Token = "0x4001696")]
	public const string pm_nextMapNumber = "pm-nextMapNumber";

	[Token(Token = "0x4001697")]
	public const string pm_friendFire = "pm-friendFire";

	[Token(Token = "0x4001698")]
	public const string pm_serverLocation = "pm-serverLocation";

	[Token(Token = "0x4001699")]
	public const string pm_afkTimer = "pm-afkTimer";

	[Token(Token = "0x400169A")]
	public const string pm_allowBots = "pm-allowBots";

	[Token(Token = "0x400169B")]
	public const string pm_playersForNoBots = "pm-minPlayersForNoBots";

	[Token(Token = "0x400169C")]
	public const string pm_sndRoundMod = "pm-sndRoundMod";

	[Token(Token = "0x400169D")]
	public const string pm_joinInProgress = "pm-canJoinInProgress";

	[Token(Token = "0x400169E")]
	public const string pm_sndAttackingTeam = "pm-sndAttackingTeam";

	[Token(Token = "0x400169F")]
	public const string pm_allowRevives = "pm-allowRevives";

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] pm_genericPropertyKeys;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] pm_allPropertyKeys;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<int> teamMatchSearchModes;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static AlvoPhotonManager m_Instance;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int attemps;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool tryAgain;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool roomIsOpen;

	[Token(Token = "0x170001E3")]
	private string RoomLevel
	{
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xCDFD28", Offset = "0xCDFD28", VA = "0xCDFD28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E4")]
	public bool networkReady
	{
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xCDFF4C", Offset = "0xCDFF4C", VA = "0xCDFF4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E5")]
	public static AlvoPhotonManager Instance
	{
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xCE0014", Offset = "0xCE0014", VA = "0xCE0014")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000006")]
	public static event ConectionComplete ConectionCompleteEvent
	{
		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xCDFD94", Offset = "0xCDFD94", VA = "0xCDFD94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xCDFE70", Offset = "0xCDFE70", VA = "0xCDFE70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xCE006C", Offset = "0xCE006C", VA = "0xCE006C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xCE01A8", Offset = "0xCE01A8", VA = "0xCE01A8")]
	public void InitOnline()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xCE03EC", Offset = "0xCE03EC", VA = "0xCE03EC")]
	public void ReconectToNameServer(CloudRegionCode region)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xCE0494", Offset = "0xCE0494", VA = "0xCE0494")]
	[IteratorStateMachine(typeof(<ReconectionRoutine>d__81))]
	public IEnumerator ReconectionRoutine(CloudRegionCode region)
	{
		return null;
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xCE0384", Offset = "0xCE0384", VA = "0xCE0384")]
	[IteratorStateMachine(typeof(<InitOnlineCoroutine>d__82))]
	private IEnumerator InitOnlineCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xCE055C", Offset = "0xCE055C", VA = "0xCE055C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xCE0738", Offset = "0xCE0738", VA = "0xCE0738")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xCE0920", Offset = "0xCE0920", VA = "0xCE0920")]
	public void ConnectToOnline(CloudRegionCode region)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xCE09B8", Offset = "0xCE09B8", VA = "0xCE09B8")]
	private void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xCE0940", Offset = "0xCE0940", VA = "0xCE0940")]
	[IteratorStateMachine(typeof(<ConnectToOnlineTiming>d__87))]
	private IEnumerator ConnectToOnlineTiming(CloudRegionCode region)
	{
		return null;
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xCE09E4", Offset = "0xCE09E4", VA = "0xCE09E4")]
	public void CreateZombieMatch()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xCE0AD0", Offset = "0xCE0AD0", VA = "0xCE0AD0")]
	[IteratorStateMachine(typeof(<CreateZombieMatchCoroutine>d__89))]
	private IEnumerator CreateZombieMatchCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xCE0B60", Offset = "0xCE0B60", VA = "0xCE0B60")]
	private void CreateZombieRoom(string roomID, [Optional] string[] expectedUsers)
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xCE183C", Offset = "0xCE183C", VA = "0xCE183C")]
	public void NewFindGames(int value, bool force = false, bool fastTeamMatchSearch = false)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xCE18F0", Offset = "0xCE18F0", VA = "0xCE18F0")]
	[IteratorStateMachine(typeof(<NewFindGamesCoroutine>d__94))]
	private IEnumerator NewFindGamesCoroutine(int value, bool force = false, bool fastTeamMatchSearch = false)
	{
		return null;
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xCE19B0", Offset = "0xCE19B0", VA = "0xCE19B0")]
	public void CreateTrainingRoom(Levels level)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xCE1A50", Offset = "0xCE1A50", VA = "0xCE1A50")]
	public void CreateTrainingRoom()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xCE19E8", Offset = "0xCE19E8", VA = "0xCE19E8")]
	[IteratorStateMachine(typeof(<TrainingCreateGame>d__97))]
	private IEnumerator TrainingCreateGame()
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xCE1A70", Offset = "0xCE1A70", VA = "0xCE1A70")]
	public void CreateTutorialRoom(bool showCreatingAnimation = false)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xCE20FC", Offset = "0xCE20FC", VA = "0xCE20FC")]
	public void CreatePrivateRoom(PrivateMatchSettings settings, bool join = true)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xCE2120", Offset = "0xCE2120", VA = "0xCE2120")]
	[IteratorStateMachine(typeof(<PrivateCreateGame>d__100))]
	private IEnumerator PrivateCreateGame(PrivateMatchSettings settings, bool join)
	{
		return null;
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xCE21A0", Offset = "0xCE21A0", VA = "0xCE21A0")]
	public void GetPrivateRoomList(TypedLobby privateRoomLobby, PrivateMatchSearchFilter filter)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xCE2318", Offset = "0xCE2318", VA = "0xCE2318")]
	[IteratorStateMachine(typeof(<FindFFAGamesRoutine>d__102))]
	private IEnumerator FindFFAGamesRoutine(int gameType, string[] expectedUsers, TypedLobby typedLobby)
	{
		return null;
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xCE23A4", Offset = "0xCE23A4", VA = "0xCE23A4")]
	[IteratorStateMachine(typeof(<FindTeamGamesRoutine>d__103))]
	private IEnumerator FindTeamGamesRoutine(int gameType, string[] expectedUsers, TypedLobby typedLobby)
	{
		return null;
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xCE2430", Offset = "0xCE2430", VA = "0xCE2430")]
	public void SearchMatch(string[] expectedUsers, TypedLobby typedLobby)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xCE26E8", Offset = "0xCE26E8", VA = "0xCE26E8")]
	public void NewCreateRoom(int value, string roomName, [Optional] string[] allExpectedUsers)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xCE2E8C", Offset = "0xCE2E8C", VA = "0xCE2E8C")]
	public void NewCreatePrivateRoom(PrivateMatchSettings settings, bool join)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xCE35D8", Offset = "0xCE35D8", VA = "0xCE35D8")]
	[IteratorStateMachine(typeof(<NewCreatePrivateRoomRoutine>d__107))]
	private IEnumerator NewCreatePrivateRoomRoutine(PrivateMatchSettings settings, RoomOptions roomOptions, TypedLobby typedLobby, bool join)
	{
		return null;
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xCE366C", Offset = "0xCE366C", VA = "0xCE366C")]
	public void StartLobbyRoom()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xCE36F0", Offset = "0xCE36F0", VA = "0xCE36F0")]
	[IteratorStateMachine(typeof(<StartLobbyRoomCoroutine>d__109))]
	private IEnumerator StartLobbyRoomCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xCE3758", Offset = "0xCE3758", VA = "0xCE3758")]
	public void JoinNewRoom(JoinRoomInfo roomInfo)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xCE378C", Offset = "0xCE378C", VA = "0xCE378C")]
	[IteratorStateMachine(typeof(<LeaveAndJoinNewRoomCoroutine>d__111))]
	private IEnumerator LeaveAndJoinNewRoomCoroutine(JoinRoomInfo roomInfo)
	{
		return null;
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xCE3808", Offset = "0xCE3808", VA = "0xCE3808")]
	public void AuthError(AzureRequestTypes types, string result, int requId)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xCE399C", Offset = "0xCE399C", VA = "0xCE399C")]
	public void CloseRoom()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xCE3B14", Offset = "0xCE3B14", VA = "0xCE3B14")]
	public void ResumeSearch()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xCE3B24", Offset = "0xCE3B24", VA = "0xCE3B24")]
	public void CancelRoomSearch()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xCE13B0", Offset = "0xCE13B0", VA = "0xCE13B0")]
	private string[] GetExpectedUsers(bool includeMine = true)
	{
		return null;
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xCE3B40", Offset = "0xCE3B40", VA = "0xCE3B40")]
	private void OnPhotonEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xCE3B7C", Offset = "0xCE3B7C", VA = "0xCE3B7C")]
	public byte[] GetCurrentRoomInfo()
	{
		return null;
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xCE1FBC", Offset = "0xCE1FBC", VA = "0xCE1FBC")]
	public string GenerateUniqueRoomID(int type = -1)
	{
		return null;
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xCE3C54", Offset = "0xCE3C54", VA = "0xCE3C54")]
	public bool AreWeInRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xCE3CD4", Offset = "0xCE3CD4", VA = "0xCE3CD4")]
	public bool IsRoomNovice()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xCE3DFC", Offset = "0xCE3DFC", VA = "0xCE3DFC")]
	public bool SpaceInRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xCE3E84", Offset = "0xCE3E84", VA = "0xCE3E84")]
	private void CheckForCrossplayOrNovice(ExitGames.Client.Photon.Hashtable hash)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xCE4078", Offset = "0xCE4078", VA = "0xCE4078")]
	public void SetUseCrossplay(bool enabled)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xCE41C0", Offset = "0xCE41C0", VA = "0xCE41C0")]
	public void SetUseNovice(bool enabled)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xCE42FC", Offset = "0xCE42FC", VA = "0xCE42FC")]
	public void SetNoviceSettings(int maxNoviceLevel, bool noviceOptOut, int playerXP)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xCE16F8", Offset = "0xCE16F8", VA = "0xCE16F8")]
	public string GetPlatformCode()
	{
		return null;
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xCE4484", Offset = "0xCE4484", VA = "0xCE4484")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xCE4934", Offset = "0xCE4934", VA = "0xCE4934")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xCE51B0", Offset = "0xCE51B0", VA = "0xCE51B0")]
	public void OnPhotonCreatreRoomFailed(object[] codeAndMs)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xCE5284", Offset = "0xCE5284", VA = "0xCE5284")]
	public void OnPhotonJoinRoomFailed(object[] codeAndMs)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xCE2D14", Offset = "0xCE2D14", VA = "0xCE2D14")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xCE5358", Offset = "0xCE5358", VA = "0xCE5358")]
	public void LeaveMatch(bool alone = true)
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xCE54DC", Offset = "0xCE54DC", VA = "0xCE54DC")]
	public void ResetTitleRoom()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xCE555C", Offset = "0xCE555C", VA = "0xCE555C")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xCE56FC", Offset = "0xCE56FC", VA = "0xCE56FC")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xCE5770", Offset = "0xCE5770", VA = "0xCE5770")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xCE5814", Offset = "0xCE5814", VA = "0xCE5814")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xCE587C", Offset = "0xCE587C", VA = "0xCE587C")]
	public void OnPhotonRandomJoinFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xCE5888", Offset = "0xCE5888", VA = "0xCE5888")]
	public void OnPhotonJoinFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xCE5938", Offset = "0xCE5938", VA = "0xCE5938")]
	private void ReceiveServerStatus(AzureRequestTypes type, string result, int requId)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xCE5D0C", Offset = "0xCE5D0C", VA = "0xCE5D0C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xCE1008", Offset = "0xCE1008", VA = "0xCE1008")]
	private void CheckForExclusiveness()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xCE6068", Offset = "0xCE6068", VA = "0xCE6068")]
	public AlvoPhotonManager()
	{
	}
}
[Token(Token = "0x2000268")]
public class AlvoToolkit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool init;

	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerLocalData m_PlayerLocalData;

	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StatManager StatManager;

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xCE9D6C", Offset = "0xCE9D6C", VA = "0xCE9D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xCE9E10", Offset = "0xCE9E10", VA = "0xCE9E10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xCE9EB4", Offset = "0xCE9EB4", VA = "0xCE9EB4")]
	public void StarInit(PlayerStats playerStats)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xCEA2B0", Offset = "0xCEA2B0", VA = "0xCEA2B0")]
	public void AzureDatabaseCallback(AzureRequestTypes type, string result, int requId)
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xCEA98C", Offset = "0xCEA98C", VA = "0xCEA98C")]
	public AlvoToolkit()
	{
	}
}
[Token(Token = "0x2000269")]
public class InactivityMasterTransfer : PunBehaviour
{
	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetManager m_NetManager;

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xCEA994", Offset = "0xCEA994", VA = "0xCEA994", Slot = "60")]
	public override void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xCEA998", Offset = "0xCEA998", VA = "0xCEA998")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xCEAD50", Offset = "0xCEAD50", VA = "0xCEAD50")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xCEA9A0", Offset = "0xCEA9A0", VA = "0xCEA9A0")]
	private void InactivityMasterClientCheck(bool inactive)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xCEAD58", Offset = "0xCEAD58", VA = "0xCEAD58")]
	public InactivityMasterTransfer()
	{
	}
}
[Token(Token = "0x200026A")]
public class LandingConectionCheck : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetServices conection;

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xCEAD60", Offset = "0xCEAD60", VA = "0xCEAD60")]
	public void StartChecking(NetServices conection)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xCEAD64", Offset = "0xCEAD64", VA = "0xCEAD64")]
	public LandingConectionCheck()
	{
	}
}
[Token(Token = "0x200026B")]
[Obsolete("This class is being replaced by initialization manager")]
public class LandingScreenInit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xCEAD6C", Offset = "0xCEAD6C", VA = "0xCEAD6C")]
	public LandingScreenInit()
	{
	}
}
[Token(Token = "0x200026C")]
public class NetManager : PunBehaviour
{
	[Token(Token = "0x200026D")]
	[CompilerGenerated]
	private sealed class <OpenRoomCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetManager <>4__this;

		[Token(Token = "0x170001FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0xCF5100", Offset = "0xCF5100", VA = "0xCF5100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0xCF5148", Offset = "0xCF5148", VA = "0xCF5148", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xCED09C", Offset = "0xCED09C", VA = "0xCED09C")]
		[DebuggerHidden]
		public <OpenRoomCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xCF4F78", Offset = "0xCF4F78", VA = "0xCF4F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xCF4F7C", Offset = "0xCF4F7C", VA = "0xCF4F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xCF5108", Offset = "0xCF5108", VA = "0xCF5108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026E")]
	[CompilerGenerated]
	private sealed class <VerifyMapNumber>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetManager <>4__this;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <correctMap>5__2;

		[Token(Token = "0x17000201")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0xCF5578", Offset = "0xCF5578", VA = "0xCF5578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0xCF55C0", Offset = "0xCF55C0", VA = "0xCF55C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xCF0B54", Offset = "0xCF0B54", VA = "0xCF0B54")]
		[DebuggerHidden]
		public <VerifyMapNumber>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xCF5150", Offset = "0xCF5150", VA = "0xCF5150", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xCF5154", Offset = "0xCF5154", VA = "0xCF5154", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xCF5580", Offset = "0xCF5580", VA = "0xCF5580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026F")]
	[CompilerGenerated]
	private sealed class <ConnectionTimer>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetManager <>4__this;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhotonPlayer newPlayer;

		[Token(Token = "0x17000203")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xCF5758", Offset = "0xCF5758", VA = "0xCF5758", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0xCF57A0", Offset = "0xCF57A0", VA = "0xCF57A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xCF19DC", Offset = "0xCF19DC", VA = "0xCF19DC")]
		[DebuggerHidden]
		public <ConnectionTimer>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xCF55C8", Offset = "0xCF55C8", VA = "0xCF55C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xCF55CC", Offset = "0xCF55CC", VA = "0xCF55CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xCF5760", Offset = "0xCF5760", VA = "0xCF5760", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimplePartyBalancer m_PartyBalancer;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool masterLoading;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public short rtt;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<AlvoPoolTransformSync> poolTransforms;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject g;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject p;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float masterSwitchCheck;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaitForSeconds wait10s;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public System.Action OnWeaponFired;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PlayerData firingPlayer;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitFrame;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonPlayer[] Players;

	[Token(Token = "0x170001FE")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xCEAD74", Offset = "0xCEAD74", VA = "0xCEAD74")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xCEAD7C", Offset = "0xCEAD7C", VA = "0xCEAD7C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xCEAD84", Offset = "0xCEAD84", VA = "0xCEAD84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xCEB2B0", Offset = "0xCEB2B0", VA = "0xCEB2B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xCEB354", Offset = "0xCEB354", VA = "0xCEB354")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xCEB404", Offset = "0xCEB404", VA = "0xCEB404")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xCEBC3C", Offset = "0xCEBC3C", VA = "0xCEBC3C")]
	public void PlayerInitialSpawn(object[] data, Vector3 pos)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xCEBEA8", Offset = "0xCEBEA8", VA = "0xCEBEA8")]
	[PunRPC]
	private void PlayerFirstSpawnMsg(Vector3 pos, int id1, object[] data, object[] wp1, object[] wpn2, PhotonMessageInfo messageInfo)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xCEC6F0", Offset = "0xCEC6F0", VA = "0xCEC6F0")]
	public void TurnBots(bool value)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xCEC86C", Offset = "0xCEC86C", VA = "0xCEC86C")]
	[PunRPC]
	private void TurnBotsMsg(bool value)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xCECA28", Offset = "0xCECA28", VA = "0xCECA28")]
	public void EndFFA()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xCECAF0", Offset = "0xCECAF0", VA = "0xCECAF0")]
	public void EndFFA(PhotonPlayer target)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xCECBC4", Offset = "0xCECBC4", VA = "0xCECBC4")]
	[PunRPC]
	private void EndFFAMsg()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xCECBEC", Offset = "0xCECBEC", VA = "0xCECBEC")]
	public void EndSND()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xCECCB4", Offset = "0xCECCB4", VA = "0xCECCB4")]
	[PunRPC]
	private void EndSNDMsg()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xCECCE8", Offset = "0xCECCE8", VA = "0xCECCE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xCEB078", Offset = "0xCEB078", VA = "0xCEB078")]
	[IteratorStateMachine(typeof(<OpenRoomCoroutine>d__27))]
	private IEnumerator OpenRoomCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xCED0C4", Offset = "0xCED0C4", VA = "0xCED0C4", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xCED518", Offset = "0xCED518", VA = "0xCED518", Slot = "48")]
	public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xCEE27C", Offset = "0xCEE27C", VA = "0xCEE27C", Slot = "35")]
	public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xCEE454", Offset = "0xCEE454", VA = "0xCEE454")]
	public void PreGameMasterClientSwitch()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xCECF80", Offset = "0xCECF80", VA = "0xCECF80")]
	public void UpdateBalancer()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xCEE56C", Offset = "0xCEE56C", VA = "0xCEE56C")]
	public void OnDisconnect()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xCEE5BC", Offset = "0xCEE5BC", VA = "0xCEE5BC")]
	public void Sprint(int id, bool sprinting)
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xCEE774", Offset = "0xCEE774", VA = "0xCEE774")]
	[PunRPC]
	private void Sprint_Msg(int id, bool sprinting)
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xCEE7A0", Offset = "0xCEE7A0", VA = "0xCEE7A0")]
	public void ThrowGrenade(int id, bool isBot)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xCEE998", Offset = "0xCEE998", VA = "0xCEE998")]
	[PunRPC]
	private void ThrowGrenadeMessage(int id, bool isBot)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xCEE9C0", Offset = "0xCEE9C0", VA = "0xCEE9C0")]
	public void ThrowTacticalGearDeployable(int _id, bool _isBot)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xCEEB54", Offset = "0xCEEB54", VA = "0xCEEB54")]
	[PunRPC]
	private void ThrowTacticalGearDeployableMessage(int _id, bool _isBot)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xCEEB7C", Offset = "0xCEEB7C", VA = "0xCEEB7C")]
	public void Slide(int id, bool slideOn)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xCEED74", Offset = "0xCEED74", VA = "0xCEED74")]
	[PunRPC]
	private void SlideMessage(int id, bool slideOn)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xCEED9C", Offset = "0xCEED9C", VA = "0xCEED9C")]
	public void Prone(int id, bool proneOn)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xCEEF50", Offset = "0xCEEF50", VA = "0xCEEF50")]
	[PunRPC]
	private void ProneMessage(int id, bool proneOn)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xCEEF78", Offset = "0xCEEF78", VA = "0xCEEF78")]
	public void Crouch(int id, bool isCrouching, byte weaponNumber, byte weaponType, byte skin, byte scope, byte attachment)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xCEF2E8", Offset = "0xCEF2E8", VA = "0xCEF2E8")]
	[PunRPC]
	private void CrouchMessage(int id, bool isCrouching, byte weaponNumber, byte weaponType, byte skin, byte scope, byte attach)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xCEF38C", Offset = "0xCEF38C", VA = "0xCEF38C")]
	public void Melee(int id)
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xCEF4C0", Offset = "0xCEF4C0", VA = "0xCEF4C0")]
	[PunRPC]
	private void MeleeMessage(int id)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xCEF4E4", Offset = "0xCEF4E4", VA = "0xCEF4E4")]
	public void SpawnBazookaProjectile(Vector3 position, Quaternion rotation, int worldnumber, int team)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xCEF6DC", Offset = "0xCEF6DC", VA = "0xCEF6DC")]
	[PunRPC]
	private void BazookaFire(int id)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xCEF700", Offset = "0xCEF700", VA = "0xCEF700")]
	public void Attachment(int id, bool attachOn)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xCEF908", Offset = "0xCEF908", VA = "0xCEF908")]
	[PunRPC]
	private void AttachmentMsg(int id, bool attachOn)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xCEF930", Offset = "0xCEF930", VA = "0xCEF930")]
	public void SpawnGrenade(int type, Vector3 position, Vector3 velocity, int worldnumber, int team, float fuse, bool beep = false)
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xCEFC0C", Offset = "0xCEFC0C", VA = "0xCEFC0C")]
	public void SpawnDeployableTacticalGear(VrTacticalGearManager _tactical, string path, Vector3 position, Vector3 velocity, int worldnumber, int team)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xCEFDE0", Offset = "0xCEFDE0", VA = "0xCEFDE0")]
	public void FireWeapon(Vector3 firePosition, Vector3 fireDirection, int UID, byte weaponNumber)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xCF01F8", Offset = "0xCF01F8", VA = "0xCF01F8")]
	public void FireWeaponLocalPlayer(Vector3 firePosition, Vector3 hitPoint, Vector3 firstPersonMuzzle, bool thirdPerson, byte weaponNumber, bool secondaryDW, bool additionalProjectile = false)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xCF0058", Offset = "0xCF0058", VA = "0xCF0058")]
	[PunRPC]
	private void FireWeapon_Msg(Vector3 firePosition, Vector3 hitPoint, byte weaponNumber, int UID)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xCF068C", Offset = "0xCF068C", VA = "0xCF068C")]
	[PunRPC]
	private void FireWeaponVr_Msg(Vector3 firePosition, int playerId, Vector3 hitPoint, byte weaponNumber, bool secondaryDW, byte impactType)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xCF0A24", Offset = "0xCF0A24", VA = "0xCF0A24")]
	public void SyncMaps(byte[] maps)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xCF0B28", Offset = "0xCF0B28", VA = "0xCF0B28")]
	[PunRPC]
	private void SyncMapsMsg(byte[] maps)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xCEB0E0", Offset = "0xCEB0E0", VA = "0xCEB0E0")]
	[IteratorStateMachine(typeof(<VerifyMapNumber>d__63))]
	private IEnumerator VerifyMapNumber()
	{
		return null;
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xCF0B7C", Offset = "0xCF0B7C", VA = "0xCF0B7C")]
	public void SpawnDrone(Vector3 pos, object[] data)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xCF0E30", Offset = "0xCF0E30", VA = "0xCF0E30")]
	private Vector3 TryGetPositionOnNavMesh(Vector3 sourcePosition, string navigationArea = "")
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xCF0F18", Offset = "0xCF0F18", VA = "0xCF0F18")]
	public void SpawnRCCar(Vector3 pos, object[] data)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xCF11BC", Offset = "0xCF11BC", VA = "0xCF11BC")]
	public void SpawnTurret(Vector3 pos, Quaternion rot, object[] data)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xCF135C", Offset = "0xCF135C", VA = "0xCF135C")]
	public void StartDogKillStreak()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xCF1460", Offset = "0xCF1460", VA = "0xCF1460")]
	[PunRPC]
	private void DogKillStreakTiming()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xCF1484", Offset = "0xCF1484", VA = "0xCF1484")]
	public AttackDog SpawnAttackDogs(Vector3 pos, object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xCF15D0", Offset = "0xCF15D0", VA = "0xCF15D0")]
	public static PhotonPlayer GetPhotonPlayer(int actorID)
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xCEB9F4", Offset = "0xCEB9F4", VA = "0xCEB9F4")]
	public void SetCorrectAudioChannel(bool setRecorder = false)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xCF16BC", Offset = "0xCF16BC", VA = "0xCF16BC")]
	public void ResetVoiceChatTeams()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xCEB148", Offset = "0xCEB148", VA = "0xCEB148")]
	private void PingMaster(int partyLeaderFID, byte[] serializedProfile)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xCF1874", Offset = "0xCF1874", VA = "0xCF1874")]
	[PunRPC]
	private void PingMasterMsg(int partyLeaderFID, byte[] profile)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xCED364", Offset = "0xCED364", VA = "0xCED364")]
	public void SendProfiletoPlayer(PhotonPlayer requestingPlayer)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xCF1968", Offset = "0xCF1968", VA = "0xCF1968")]
	[IteratorStateMachine(typeof(<ConnectionTimer>d__78))]
	private IEnumerator ConnectionTimer(PhotonPlayer newPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xCF1A04", Offset = "0xCF1A04", VA = "0xCF1A04")]
	public byte BotsSelectTeam(bool countBots)
	{
		return default(byte);
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xCF1B4C", Offset = "0xCF1B4C", VA = "0xCF1B4C")]
	[PunRPC]
	private void UpdateProfilesMsg(byte[] byteArray)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xCF1B90", Offset = "0xCF1B90", VA = "0xCF1B90")]
	public void PingResponse(int actorID, int team)
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xCF1BE4", Offset = "0xCF1BE4", VA = "0xCF1BE4")]
	public void PingResponseTDM(int actorID, int team)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xCF1D00", Offset = "0xCF1D00", VA = "0xCF1D00")]
	public void PingResponseSND(int actorID, int team)
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xCF20BC", Offset = "0xCF20BC", VA = "0xCF20BC")]
	private void PingResponseHP(int actorID, int team)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xCF2334", Offset = "0xCF2334", VA = "0xCF2334")]
	[PunRPC]
	private void PingResponseTDM_RPC(byte team)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xCF2528", Offset = "0xCF2528", VA = "0xCF2528")]
	[PunRPC]
	private void PingResponseSND_RPC(int round, int team1, int team2, bool startingNextRound, int siteConfig, byte team, byte team1CharId, byte team2CharId, bool gamestarted)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xCF2908", Offset = "0xCF2908", VA = "0xCF2908")]
	[PunRPC]
	private void PingResponseHP_RPC(byte gameState, byte team, int currentObjectiveIndex, double timer, float[] points, PhotonMessageInfo _info)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xCF2C60", Offset = "0xCF2C60", VA = "0xCF2C60")]
	public GameObject SpawnObjective(Vector3 position, Quaternion rotation, byte desiredIndex)
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xCF2DE0", Offset = "0xCF2DE0", VA = "0xCF2DE0")]
	public PersistentAoEDamage SpawnAoEDrop(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xCF2F30", Offset = "0xCF2F30", VA = "0xCF2F30")]
	public ZombieHealth SpawnZombie(string pfbName, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xCF31EC", Offset = "0xCF31EC", VA = "0xCF31EC")]
	public ZombieHealth SpawnZombie(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xCF33E0", Offset = "0xCF33E0", VA = "0xCF33E0")]
	public ZombieHealth SpawnZombieDog(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xCF35D4", Offset = "0xCF35D4", VA = "0xCF35D4")]
	public void StartNewRound()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xCF3790", Offset = "0xCF3790", VA = "0xCF3790")]
	[PunRPC]
	private void StartNewRound01Msg(int team1Score, int team2Score, int currentRound, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xCF3804", Offset = "0xCF3804", VA = "0xCF3804")]
	public void BombDefused()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xCF38CC", Offset = "0xCF38CC", VA = "0xCF38CC")]
	[PunRPC]
	private void BombDefused01Msg()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xCF398C", Offset = "0xCF398C", VA = "0xCF398C")]
	public void SyncPregameTime(float time)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xCF3AA0", Offset = "0xCF3AA0", VA = "0xCF3AA0")]
	[PunRPC]
	private void SyncPregameTime01Msg(float time, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xCF3B10", Offset = "0xCF3B10", VA = "0xCF3B10")]
	public void SyncSDTime(float time)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xCF3C24", Offset = "0xCF3C24", VA = "0xCF3C24")]
	[PunRPC]
	private void SyncSDTime01Msg(float time, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xCF3C78", Offset = "0xCF3C78", VA = "0xCF3C78")]
	public void SyncNextSNDConfig()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xCF3DE8", Offset = "0xCF3DE8", VA = "0xCF3DE8")]
	[PunRPC]
	private void SyncSiteConfigMsg(int index, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xCF3E2C", Offset = "0xCF3E2C", VA = "0xCF3E2C")]
	public void InvertTeamOffense()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xCF3F20", Offset = "0xCF3F20", VA = "0xCF3F20")]
	[PunRPC]
	private void InvertTeamOffenseMsg()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xCF3F68", Offset = "0xCF3F68", VA = "0xCF3F68")]
	public void TimerExpired()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xCF4030", Offset = "0xCF4030", VA = "0xCF4030")]
	[PunRPC]
	private void TimerExpired01Msg(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xCF4070", Offset = "0xCF4070", VA = "0xCF4070")]
	public void TeamKilled(int teamKilled)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xCF417C", Offset = "0xCF417C", VA = "0xCF417C")]
	[PunRPC]
	private void TeamKilled01Msg(int teamKilled, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xCF41FC", Offset = "0xCF41FC", VA = "0xCF41FC")]
	public void SyncFFATime(float gameTimer, float waitTimer)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xCF4348", Offset = "0xCF4348", VA = "0xCF4348")]
	[PunRPC]
	private void SyncFFATime01MSG(float gameTimer, float waitTimer, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xCF4398", Offset = "0xCF4398", VA = "0xCF4398")]
	public void StopFFA(bool preEnd = false)
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xCF44A4", Offset = "0xCF44A4", VA = "0xCF44A4")]
	[PunRPC]
	private void StopFFAGame01Msg(bool preEnd, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xCF4500", Offset = "0xCF4500", VA = "0xCF4500")]
	public void SyncMatchAmount(int matchAmount)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xCF460C", Offset = "0xCF460C", VA = "0xCF460C")]
	[PunRPC]
	private void SyncMatchAmountMsg(int matchAmount)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xCEE0B8", Offset = "0xCEE0B8", VA = "0xCEE0B8")]
	public void SyncExtraScoreTDM(int team1extra, int team2extra)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xCF4630", Offset = "0xCF4630", VA = "0xCF4630")]
	[PunRPC]
	private void SyncExtraScoreTDMMessage(int totalTeam1extra, int totalTeam2extra)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xCF4654", Offset = "0xCF4654", VA = "0xCF4654")]
	public void SyncTdm(bool swapSpawnSide, double lastRespawnTime, bool sendToMasterOnly)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xCF4804", Offset = "0xCF4804", VA = "0xCF4804")]
	[PunRPC]
	private void SyncTdmMSG(bool swapSpawnSide, double lastRespawnTime)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xCF4828", Offset = "0xCF4828", VA = "0xCF4828")]
	public void SelectMap(int map)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xCF4940", Offset = "0xCF4940", VA = "0xCF4940")]
	[PunRPC]
	private void SelectMapMsg(int map)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xCF497C", Offset = "0xCF497C", VA = "0xCF497C")]
	public void SelectMode(int mode)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xCF4A88", Offset = "0xCF4A88", VA = "0xCF4A88")]
	[PunRPC]
	private void SelectModeMsg(int mode)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xCF4AC4", Offset = "0xCF4AC4", VA = "0xCF4AC4")]
	public void CloseMatch()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xCF4C08", Offset = "0xCF4C08", VA = "0xCF4C08")]
	[PunRPC]
	private void CloseMatchMsg(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xCF4D54", Offset = "0xCF4D54", VA = "0xCF4D54")]
	public void MasterLoading()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xCF4E70", Offset = "0xCF4E70", VA = "0xCF4E70")]
	[PunRPC]
	private void MasterLoadingMsg(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xCF4EA4", Offset = "0xCF4EA4", VA = "0xCF4EA4")]
	public NetManager()
	{
	}
}
[Token(Token = "0x2000270")]
public struct TeamAsignmentElement
{
	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PlayerProfile profile;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int leaderFID;
}
[Token(Token = "0x2000271")]
public class NetworkCallbacks : PunBehaviour
{
	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xCF57A8", Offset = "0xCF57A8", VA = "0xCF57A8", Slot = "39")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xCF57B0", Offset = "0xCF57B0", VA = "0xCF57B0")]
	public NetworkCallbacks()
	{
	}
}
[Token(Token = "0x2000272")]
public class NetworkChat : PunBehaviour
{
	[Serializable]
	[Token(Token = "0x2000273")]
	public class KillMessage
	{
		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text message;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xCF884C", Offset = "0xCF884C", VA = "0xCF884C")]
		public KillMessage()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000274")]
	public class LanguageTextWrap
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("HAS LEFT")]
		public LanguageText hasLeft;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("SOMEONE")]
		public LanguageText someone;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Was killed by")]
		public LanguageText wasKilledBy;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xCF8854", Offset = "0xCF8854", VA = "0xCF8854")]
		public LanguageTextWrap()
		{
		}
	}

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Text> messages;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Text> titleMessages;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField chatMessage;

	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LevelManager levelManager;

	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LanguageTextWrap usedLT;

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xCF57B8", Offset = "0xCF57B8", VA = "0xCF57B8")]
	public void SendChatTitleClick()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xCF57F8", Offset = "0xCF57F8", VA = "0xCF57F8")]
	public void SendChatTitle(int myNum, int color, string message, string myName)
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xCF5A1C", Offset = "0xCF5A1C", VA = "0xCF5A1C")]
	[PunRPC]
	private void RecieveChatTitle(int myNum, int color, string message, string myName)
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xCF64E8", Offset = "0xCF64E8", VA = "0xCF64E8")]
	public void SendChatClick()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xCF65AC", Offset = "0xCF65AC", VA = "0xCF65AC")]
	public void SendChat(int myNum, int color, string message, string myName)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xCF67D0", Offset = "0xCF67D0", VA = "0xCF67D0")]
	[PunRPC]
	private void RecieveChat(int myNum, int color, string message, string myName)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xCF6C40", Offset = "0xCF6C40", VA = "0xCF6C40")]
	public void SendChatInGameClick()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xCEB790", Offset = "0xCEB790", VA = "0xCEB790")]
	public void SendChatInGame(int myNum, int color, string message, string myName, bool isSuicide = false)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xCF6CD8", Offset = "0xCF6CD8", VA = "0xCF6CD8")]
	public void SendSuicideChat(int myNum, string message, string myName, short w)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xCF6EC8", Offset = "0xCF6EC8", VA = "0xCF6EC8")]
	[PunRPC]
	public void ReceiveSuicideChat(int myNum, string message, string myName, short w)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xCEDAB8", Offset = "0xCEDAB8", VA = "0xCEDAB8")]
	[PunRPC]
	public void RecieveChatInGame(int myNum, int color, string message, string myName, bool isSuicide = false)
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xCF6F94", Offset = "0xCF6F94", VA = "0xCF6F94")]
	public void SendKillMessage(int killedID, int killerID, int typeOfDeath, bool headShot, short w)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xCF722C", Offset = "0xCF722C", VA = "0xCF722C")]
	[PunRPC]
	public void ReceiveKillMessage(int killedID, int killerID, int typeOfDeath, bool headShot, short w)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xCF7C3C", Offset = "0xCF7C3C", VA = "0xCF7C3C")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xCF7CF8", Offset = "0xCF7CF8", VA = "0xCF7CF8")]
	public void UpdateMessages()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xCF7D10", Offset = "0xCF7D10", VA = "0xCF7D10")]
	private void UpdateKillMessage()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xCF8268", Offset = "0xCF8268", VA = "0xCF8268")]
	public void SendSystemMessageInGame(int color, string message)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xCF83E0", Offset = "0xCF83E0", VA = "0xCF83E0")]
	[PunRPC]
	public void RecieveKillSystemInGame(int color, string message)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xCF7FBC", Offset = "0xCF7FBC", VA = "0xCF7FBC")]
	private void UpdateSystemMessage()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xCF87AC", Offset = "0xCF87AC", VA = "0xCF87AC")]
	public NetworkChat()
	{
	}
}
[Token(Token = "0x2000275")]
public enum SuicideType
{
	[Token(Token = "0x4001713")]
	Grenade,
	[Token(Token = "0x4001714")]
	Bleedout,
	[Token(Token = "0x4001715")]
	Fall
}
[Token(Token = "0x2000276")]
public class NoConnectionScene : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000277")]
	[CompilerGenerated]
	private sealed class <CheckConection>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NoConnectionScene <>4__this;

		[Token(Token = "0x17000205")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xCF8B84", Offset = "0xCF8B84", VA = "0xCF8B84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xCF8BCC", Offset = "0xCF8BCC", VA = "0xCF8BCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xCF88C4", Offset = "0xCF88C4", VA = "0xCF88C4")]
		[DebuggerHidden]
		public <CheckConection>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xCF8A88", Offset = "0xCF8A88", VA = "0xCF8A88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xCF8A8C", Offset = "0xCF8A8C", VA = "0xCF8A8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xCF8B8C", Offset = "0xCF8B8C", VA = "0xCF8B8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NetServices conection;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NoConectionGo;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CheckingConectionGo;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasConnection;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds waitCheckConnection;

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xCF885C", Offset = "0xCF885C", VA = "0xCF885C")]
	[IteratorStateMachine(typeof(<CheckConection>d__5))]
	private IEnumerator CheckConection()
	{
		return null;
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xCF88EC", Offset = "0xCF88EC", VA = "0xCF88EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xCF8984", Offset = "0xCF8984", VA = "0xCF8984")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xCF8A10", Offset = "0xCF8A10", VA = "0xCF8A10")]
	private void ConnectionCallback(bool hasConnection)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xCF8A1C", Offset = "0xCF8A1C", VA = "0xCF8A1C")]
	public NoConnectionScene()
	{
	}
}
[Token(Token = "0x2000278")]
public class PunSmartPoolBridge : UnityEngine.MonoBehaviour, IPunPrefabPool
{
	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xCF8BD4", Offset = "0xCF8BD4", VA = "0xCF8BD4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xCF8C2C", Offset = "0xCF8C2C", VA = "0xCF8C2C", Slot = "4")]
	public GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xCF953C", Offset = "0xCF953C", VA = "0xCF953C", Slot = "5")]
	public void Destroy(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xCF8E54", Offset = "0xCF8E54", VA = "0xCF8E54")]
	public int GetPoolIndex(string name)
	{
		return default(int);
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xCF9644", Offset = "0xCF9644", VA = "0xCF9644")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xCF9698", Offset = "0xCF9698", VA = "0xCF9698")]
	public PunSmartPoolBridge()
	{
	}
}
[Token(Token = "0x2000279")]
public class PunSmartPoolElement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xCF96A0", Offset = "0xCF96A0", VA = "0xCF96A0")]
	public PunSmartPoolElement()
	{
	}
}
[Token(Token = "0x200027A")]
public class TestPlayfab : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Version;

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xCF96A8", Offset = "0xCF96A8", VA = "0xCF96A8")]
	public void GetCurrentVersion()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xCF96AC", Offset = "0xCF96AC", VA = "0xCF96AC")]
	public void UpdateVersion()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xCF96B0", Offset = "0xCF96B0", VA = "0xCF96B0")]
	public TestPlayfab()
	{
	}
}
[Token(Token = "0x200027B")]
public enum Destinations
{
	[Token(Token = "0x4001721")]
	lobby,
	[Token(Token = "0x4001722")]
	ffa,
	[Token(Token = "0x4001723")]
	team_match,
	[Token(Token = "0x4001724")]
	zombies,
	[Token(Token = "0x4001725")]
	training,
	[Token(Token = "0x4001726")]
	PrivateMatch
}
[Token(Token = "0x200027C")]
public class OculusFriendelement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public User m_User;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Oculus.Platform.Models.Room m_Room;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text nameLbl;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image avatarImg;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_InviteBtn;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_JoinBtn;

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xCF96B8", Offset = "0xCF96B8", VA = "0xCF96B8")]
	public void Set(UserAndRoom userAndRoom)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xCF96DC", Offset = "0xCF96DC", VA = "0xCF96DC")]
	public void LogLocalUser()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xCF99E4", Offset = "0xCF99E4", VA = "0xCF99E4")]
	public OculusFriendelement()
	{
	}
}
[Serializable]
[Token(Token = "0x200027D")]
public class PlayerData : PunBehaviour
{
	[Token(Token = "0x200027E")]
	[CompilerGenerated]
	private sealed class <DropBothHandsAndRecover>d__203 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerData <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xD07D68", Offset = "0xD07D68", VA = "0xD07D68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xD07DB0", Offset = "0xD07DB0", VA = "0xD07DB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xD07C70", Offset = "0xD07C70", VA = "0xD07C70")]
		[DebuggerHidden]
		public <DropBothHandsAndRecover>d__203(int <>1__state)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xD07C98", Offset = "0xD07C98", VA = "0xD07C98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xD07C9C", Offset = "0xD07C9C", VA = "0xD07C9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xD07D70", Offset = "0xD07D70", VA = "0xD07D70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027F")]
	[CompilerGenerated]
	private sealed class <DropHandAndRecover>d__204 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerData <>4__this;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int type;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IKSolverVR.Arm <armATM>5__2;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xD0805C", Offset = "0xD0805C", VA = "0xD0805C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xD080A4", Offset = "0xD080A4", VA = "0xD080A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xD07DB8", Offset = "0xD07DB8", VA = "0xD07DB8")]
		[DebuggerHidden]
		public <DropHandAndRecover>d__204(int <>1__state)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xD07DE0", Offset = "0xD07DE0", VA = "0xD07DE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xD07DE4", Offset = "0xD07DE4", VA = "0xD07DE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xD08064", Offset = "0xD08064", VA = "0xD08064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000280")]
	[CompilerGenerated]
	private sealed class <GetProfileAndAvatarCoroutine>d__273 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerData <>4__this;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <profile>5__2;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Platform <platform>5__3;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <avatarUrl>5__4;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__5;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xD08504", Offset = "0xD08504", VA = "0xD08504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0xD0854C", Offset = "0xD0854C", VA = "0xD0854C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xD080AC", Offset = "0xD080AC", VA = "0xD080AC")]
		[DebuggerHidden]
		public <GetProfileAndAvatarCoroutine>d__273(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xD080D4", Offset = "0xD080D4", VA = "0xD080D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xD080D8", Offset = "0xD080D8", VA = "0xD080D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xD0850C", Offset = "0xD0850C", VA = "0xD0850C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public System.Action OnPerksChange;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EventHatManagement.EventHat m_WornHat;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerPerks perks;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_usingDualWield;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 LastSpawnLocation;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_WeaponHand;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform m_LeftWeaponHand;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform m_AmmoBoxSpawn;

	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CacheRigTransforms cache;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform m_MuzzleFirePosition;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SimpleAimingSystem simpleAimingSystem;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bl_MiniMapItem MiniMapItem;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BazookaKillstreak bazookaComponent;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PlayerWeaponManagment wpnManagment;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public WorldSpaceMarker marker;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform mTran;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Animator animator;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AttachmentController m_AttachmentController;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AttachmentController m_SecondaryAttachmentController;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private VrPlayerController vrPlayerController;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private VrRigHelper rigHelper;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int id;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool localPlayer;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	public bool isBot;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LayerMask currentShootMask;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public short lastWeaponNumber;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public short[] equipment;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool isCrouching;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool isMelee;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public PlayerCustomization m_Customization;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool run;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	public bool g;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	public bool jumping;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	public bool sliding;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool prone;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	public bool falling;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
	public bool useVr;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
	public bool leftHanded;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool attachOn;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool playerDown;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Vector3 up;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Quaternion ur;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Quaternion movementDirection;

	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform root;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public Vector3 pVel;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[HideInInspector]
	public Vector3 locVel;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float magVel;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float lerpMagVel;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float magnitudLerpMultiplier;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[HideInInspector]
	public Vector2 locVel2d;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int targetID;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public PlayerProfile m_PlayerProfile;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public int m_TeamID;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public int gameType;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TeamMarker m_TeamMarker;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool m_HasBomb;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	public bool m_CanRespawn;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	public bool m_OnOffense;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
	public bool m_HasSpawned;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool m_Spectating;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public HandHeadSync handHeadSync;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public IkVrRigLink ikVrLink;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public VrGunLink vrGunLink;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public VrGunLink vrGunLinkSecondary;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public IkToggler ikToggler;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform currentFiringPoint;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform currentSecondaryFiringPoint;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform defaultFiringPoint;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Items m_CurrentWeapon;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject bombObject;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float hitPoints;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[SerializeField]
	public float hitPointsMax;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private float m_HitPointsRecoveryRate;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public CacheRigTransforms m_CacheRigTransforms;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public SpawnedTarget m_SpawnedTarget;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public ShooterBots m_ShooterBots;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool isDead;

	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	public bool isBotAndRespawning;

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject[] gos;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject[] loadedGos;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public int currentLayer;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public PhotonView PhotonViewSetup;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public bool m_InTransition;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	public byte m_Skin;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public Vector3 m_InitSpawn;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public bool m_Inactive;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[HideInInspector]
	public double m_LastRespawnTime;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public string FID;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public int FIDInt;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Sprite avatarSprite;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[HideInInspector]
	public bool canBleedout;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
	private bool goDownWhenKilled;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private int whoDownedMe;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private short wFilterBeforeDown;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x272")]
	private bool headshotBeforeDown;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x273")]
	private bool explosionBeforeDown;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private bool countAssists;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private HashSet<int> killAssisters;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private object[] emptyObj;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	private float m_HealthIndicatorRefresh;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float m_HealthIndTimer;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float m_HealthRegenTimer;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float m_healthLastRegenPerc;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public float jumpThreshold;

	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public float fallingThreshold;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public float landThreshold;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private bool canJump;

	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public FootstepsNew m_FootstepsLocal;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Vector3 oldFordward;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public Vector3 crossFordward;

	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public float lerpTurnDirection;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public Vector3 vel;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Vector3 dir;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float rotSpeed;

	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public float prevRotY;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private Color colorWhite;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Color colorInvisible;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	public bool droppingHand;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private float waitOne;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private float waitTwo;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private Vector2 standingToProneTiming;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private Vector2 crouchToProneTiming;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private Vector2 proneToCrouchTiming;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private Vector2 proneToStanding;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private Vector2 meleeWait;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private float waitCount;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private Vector3 proneZTarget;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private Vector3 proneZStartPos;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private float timeToTarget;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public object[] data;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	[HideInInspector]
	public bool m_PlayerRecording;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
	[HideInInspector]
	public bool m_PlayerInvincible;

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public ExitGames.Client.Photon.Hashtable s;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public string myName;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private Transform gun;

	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private Transform gun1;

	[Token(Token = "0x40017B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private Transform gun2;

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public int maxArmor;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private int m_Armor;

	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private Vector3 OffsetPos;

	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	private Vector3 OffsetPosPs4;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	[HideInInspector]
	public List<StickyGrenade> stickedGrenades;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public bool testKilll;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
	public int m_FloorIndexMaterial;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly char defaultFirstChar;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private string colTag;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public int currentMaterial;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	private int lastTagLength;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private int currentTagLength;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	private char currentFirstChar;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DE")]
	[Space]
	[Header("Net Prediction")]
	public short rtt;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public float netVelocity;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
	public Vector3 netDir;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public float lastMsgTime;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	public float delay;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public Vector3 netPos;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
	public Quaternion netRot;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
	public bool netRotRight;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public float netRotSpeed;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
	[Space]
	[Header("Lod Managment")]
	public int LodLevel;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public bool[] lodsVisible;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private WaitForSeconds wait;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	private WaitForSeconds waitLong;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private int profileWaitCount;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
	public bool m_IAmRevivingThisPlayer;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public double? m_ReviveStartTime;

	[Token(Token = "0x40017D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public ReviveType m_ReviveType;

	[Token(Token = "0x40017D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
	public float bleedoutSubtractFrom;

	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public float bleedoutPenalty;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
	[HideInInspector]
	public bool m_hasSelfReviveItem;

	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	[HideInInspector]
	[Tooltip("Used by other players")]
	public float bleedOutTimer;

	[Token(Token = "0x40017DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	[Tooltip("Invisibility after player down")]
	public double playerDownInvisibilityDuration;

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public double? bleedOutStartTime;

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	[HideInInspector]
	[Tooltip("Bled out")]
	public bool fuckingDead;

	[Token(Token = "0x40017DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
	public int playerDownCount;

	[Token(Token = "0x40017DE")]
	public const int playerDownCountLimit = 3;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	private WeaponInformation wpnData;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x496")]
	private WeaponInformation wpnData2;

	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	[Header("OnFire VFX")]
	public ParticleSystem onFireFx;

	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	[HideInInspector]
	public bool onFire;

	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A9")]
	[HideInInspector]
	public bool fireOwner;

	[Token(Token = "0x40017E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	[HideInInspector]
	public double onFireStartedAt;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	[SerializeField]
	private AudioSource secondaryVocalsSource;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	private int timesOnFire;

	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
	private int fireTicks;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	private float fireDamage;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
	private bool isFireOnCooldown;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	private float fireCooldown;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	[HideInInspector]
	public double? m_StartedSlidingAt;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	private WaitForSeconds dropWait;

	[Token(Token = "0x17000207")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xCF99EC", Offset = "0xCF99EC", VA = "0xCF99EC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xCF99F4", Offset = "0xCF99F4", VA = "0xCF99F4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public bool InLocalPlayerTeam
	{
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xCF99FC", Offset = "0xCF99FC", VA = "0xCF99FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000209")]
	public bool armorFull
	{
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xD02AA4", Offset = "0xD02AA4", VA = "0xD02AA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020A")]
	public float armorPercentage01
	{
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xD02AB8", Offset = "0xD02AB8", VA = "0xD02AB8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xCF9A9C", Offset = "0xCF9A9C", VA = "0xCF9A9C")]
	private bool CanDamageThisEntity(int damagerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xCF0970", Offset = "0xCF0970", VA = "0xCF0970")]
	public bool IsEnemy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xCF9B68", Offset = "0xCF9B68", VA = "0xCF9B68")]
	public bool CanIDamageThisEntity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xCF9C1C", Offset = "0xCF9C1C", VA = "0xCF9C1C")]
	public void CheckForVr()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xCF9D0C", Offset = "0xCF9D0C", VA = "0xCF9D0C")]
	public void UpdateMovementAnimations()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xCFA930", Offset = "0xCFA930", VA = "0xCFA930")]
	public void DropHand(int type, bool bothHands = false)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xCFA9E8", Offset = "0xCFA9E8", VA = "0xCFA9E8")]
	[IteratorStateMachine(typeof(<DropBothHandsAndRecover>d__203))]
	private IEnumerator DropBothHandsAndRecover()
	{
		return null;
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xCFA970", Offset = "0xCFA970", VA = "0xCFA970")]
	[IteratorStateMachine(typeof(<DropHandAndRecover>d__204))]
	private IEnumerator DropHandAndRecover(int type)
	{
		return null;
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xCFAA50", Offset = "0xCFAA50", VA = "0xCFAA50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xCFACE0", Offset = "0xCFACE0", VA = "0xCFACE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xCFAE48", Offset = "0xCFAE48", VA = "0xCFAE48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xCFAEDC", Offset = "0xCFAEDC", VA = "0xCFAEDC", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xCFB2B4", Offset = "0xCFB2B4", VA = "0xCFB2B4")]
	public void SinglePlayer(object[] data)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xCFB31C", Offset = "0xCFB31C", VA = "0xCFB31C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xCFB558", Offset = "0xCFB558", VA = "0xCFB558", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xCFC508", Offset = "0xCFC508", VA = "0xCFC508")]
	public void TurnRecording(bool recording, bool invincible)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xCFC664", Offset = "0xCFC664", VA = "0xCFC664")]
	public void SwitchInvincibility()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xCFC7D0", Offset = "0xCFC7D0", VA = "0xCFC7D0")]
	[PunRPC]
	private void SyncRecordingState(bool playerRecording, bool playerInvincible)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xCFBB48", Offset = "0xCFBB48", VA = "0xCFBB48")]
	public void UpdateCurrentStateInit(PhotonPlayer photonPlayer, bool crouch, bool _useVr, byte weaponNumber, byte weaponType, byte skin, byte[] _equipment, byte scope, byte attach, bool attachOn, bool isLeftHanded)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xCFC8B0", Offset = "0xCFC8B0", VA = "0xCFC8B0")]
	public void UpdateLeftHanded(bool isLeftHanded)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xCFC9E8", Offset = "0xCFC9E8", VA = "0xCFC9E8")]
	[PunRPC]
	private void UpdateLeftHandedMessage(bool isLeftHanded)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xCFB858", Offset = "0xCFB858", VA = "0xCFB858")]
	public void UpdateCurrentStateBot(bool crouch, Vector3 _pos, Vector3 _rot, byte weaponNumber, byte weaponType, byte skin, byte scope, byte attach)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xCFCE44", Offset = "0xCFCE44", VA = "0xCFCE44")]
	public void UpdateCurrentState(bool crouch, bool isLeftHanded)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xCFCFD4", Offset = "0xCFCFD4", VA = "0xCFCFD4")]
	[PunRPC]
	private void UpdateCurrentStateMessage(bool crouch, bool isLeftHanded)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xCFD09C", Offset = "0xCFD09C", VA = "0xCFD09C")]
	[PunRPC]
	private void UpdateCurrentStateInitMessage(bool crouch, bool _useVr, byte[] _equipment, bool attachOn, bool isLeftHanded, byte perk1, byte perk2, object[] wpn1, object[] wpn2, float hitPoints, byte armor, object[] assisters)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xCFD450", Offset = "0xCFD450", VA = "0xCFD450")]
	[PunRPC]
	private void ZmbInitMsg(bool playerDown, bool dead, bool m_hasSelfReviveItem, float bleedOutTimer, double? m_ReviveStartTime, byte m_ReviveType, bool canBleedout, double? bleedOutStartTime)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xCFDF84", Offset = "0xCFDF84", VA = "0xCFDF84")]
	[PunRPC]
	public void UpdateCurrentStateBotMessage(bool crouch, Vector3 _pos, Vector3 _rot, object[] wpn1, object[] assisters)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xCEC448", Offset = "0xCEC448", VA = "0xCEC448")]
	public void SetupNetworkPlayer(int worldNumber, int _gameType, int _team, bool _useVr, byte[] _equipment, string botName, object[] wpn1, object[] wpn2, bool isbot, bool isSpectator, bool isLeftHanded, short level, string FID = "")
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xCFE510", Offset = "0xCFE510", VA = "0xCFE510")]
	private void SetupNPlayer(int worldNumber, int _gameType, int _team, bool _useVr, byte[] _equipment, string botName, object[] wpn1, object[] wpn2, bool isbot, bool spectator, bool isLeftHanded, short level, string FID = "")
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xCFCA04", Offset = "0xCFCA04", VA = "0xCFCA04")]
	public void SetLeftHanded()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xCFF3A0", Offset = "0xCFF3A0", VA = "0xCFF3A0")]
	public void SetTeamChatBubble()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xCFE100", Offset = "0xCFE100", VA = "0xCFE100")]
	private void SetPlayerProfiles(int worldNumber, int _gameType, int _team, bool spectating = false)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xCFF610", Offset = "0xCFF610", VA = "0xCFF610")]
	private void DoDamage(short damage, int worldNumber, BodyPart bodyPart, Vector3 firePos, short w, float killForceMultiplier)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xD00520", Offset = "0xD00520", VA = "0xD00520")]
	public void TimedKill(Vector3 killerPosition, int worldNumber, bool headshot, bool explosion, short w, float killForceMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xD009D4", Offset = "0xD009D4", VA = "0xD009D4")]
	[PunRPC]
	public void KillRequest(Vector3 killerPosition, int worldNumber, bool headshot, bool explosion, short w, float killForceMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xCFFD14", Offset = "0xCFFD14", VA = "0xCFFD14")]
	private void SyncHealth(short healthChange, Vector3 firePos, int worldNumber, short w, BodyPart bodyPart)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xD023D4", Offset = "0xD023D4", VA = "0xD023D4")]
	[PunRPC]
	private void SyncHealthAndArmorMsg(short healthChange, Vector3 firePos, int worldNumber, bool takeArmorDamage, int w, byte bodyPartID)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xD021B4", Offset = "0xD021B4", VA = "0xD021B4")]
	[PunRPC]
	private void SyncHealthMsg(short healthChange, Vector3 firePos, int worldNumber, int w, byte bodyPartID)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xD0271C", Offset = "0xD0271C", VA = "0xD0271C")]
	private void TookDamageSelf(Vector3 firePos, int w, BodyPart bodyPart, bool updateHealthUI)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xD02AD0", Offset = "0xD02AD0", VA = "0xD02AD0")]
	public void AddArmor(int armorModAmount)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xD026B8", Offset = "0xD026B8", VA = "0xD026B8")]
	private void RefreshArmorUI()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xD02BDC", Offset = "0xD02BDC", VA = "0xD02BDC")]
	[PunRPC]
	private void SyncArmorMsg(byte armorModAmount)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xD02C00", Offset = "0xD02C00", VA = "0xD02C00")]
	public void AddHealth(float addModAmount)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xD02A50", Offset = "0xD02A50", VA = "0xD02A50")]
	private void RefreshHealthUI()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xD02D14", Offset = "0xD02D14", VA = "0xD02D14")]
	[PunRPC]
	private void AltSyncHealthMsg(float healthModAmount)
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xD02D3C", Offset = "0xD02D3C", VA = "0xD02D3C")]
	public void Damage(short damage, int worldNumber, BodyPart bodyPart, Vector3 firePosition, short w, float killForceMultiplier)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xD028B4", Offset = "0xD028B4", VA = "0xD028B4")]
	private void DamageIndicator()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xD00514", Offset = "0xD00514", VA = "0xD00514")]
	[PunRPC]
	public void Kill(Vector3 killerPosition, int worldNumber, bool headshot, bool explosion, short w, float killForceMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xD00DBC", Offset = "0xD00DBC", VA = "0xD00DBC")]
	private void Killed(Vector3 killerPosition, int worldNumber, bool headshot, bool explosion, short w, float killForceMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xD03030", Offset = "0xD03030", VA = "0xD03030")]
	private void PoolRagdoll([Optional] Vector3 firePos, bool explosion = false, bool upwards = true)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xD03168", Offset = "0xD03168", VA = "0xD03168")]
	public void DeactivateRagdollImmediately()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xCFD354", Offset = "0xCFD354", VA = "0xCFD354")]
	public void SetAttachment(bool attachmentOn)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xD0319C", Offset = "0xD0319C", VA = "0xD0319C")]
	private void Update1()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xD03288", Offset = "0xD03288", VA = "0xD03288")]
	public void SetGroundMaterial(Collider col)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xD03348", Offset = "0xD03348", VA = "0xD03348")]
	public void gon()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xD03448", Offset = "0xD03448", VA = "0xD03448")]
	public void gof()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xD03528", Offset = "0xD03528", VA = "0xD03528")]
	public void RespawnNetwork(Vector3 spawnLocation)
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xD036F8", Offset = "0xD036F8", VA = "0xD036F8")]
	[PunRPC]
	private void RespawnNetworkMessage(Vector3 position, object[] wpn1, object[] wpn2, PhotonMessageInfo messageInfo)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xD03D90", Offset = "0xD03D90", VA = "0xD03D90")]
	public void RespawnNetworkGhost(Transform position)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xD0425C", Offset = "0xD0425C", VA = "0xD0425C")]
	public void SetTeam(int team)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xD04368", Offset = "0xD04368", VA = "0xD04368")]
	[PunRPC]
	private void SwapTeamMsg(int team)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xD04920", Offset = "0xD04920", VA = "0xD04920")]
	public void RespawnNetworkBot(Vector3 respawnPosition, Vector3 respawnRotation)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xD04AF4", Offset = "0xD04AF4", VA = "0xD04AF4")]
	[PunRPC]
	private void RespawnNetworkBotMessage(Vector3 position)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xD04F60", Offset = "0xD04F60", VA = "0xD04F60")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xD02DE0", Offset = "0xD02DE0", VA = "0xD02DE0")]
	private bool IsMyTeamDeadOrDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xCFF26C", Offset = "0xCFF26C", VA = "0xCFF26C")]
	private void ChangeLayer(int layer)
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xD054F4", Offset = "0xD054F4", VA = "0xD054F4")]
	public void RefreshLayers()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xD054FC", Offset = "0xD054FC", VA = "0xD054FC")]
	private void SetCurrentLOD()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xD055A0", Offset = "0xD055A0", VA = "0xD055A0")]
	public void LODChange(int lodLevel, bool visible)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xD034DC", Offset = "0xD034DC", VA = "0xD034DC")]
	public void JumpSound()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xD033E0", Offset = "0xD033E0", VA = "0xD033E0")]
	public void LandSound()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xCFF198", Offset = "0xCFF198", VA = "0xCFF198")]
	public void SetAvatar()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xD055D4", Offset = "0xD055D4", VA = "0xD055D4")]
	[IteratorStateMachine(typeof(<GetProfileAndAvatarCoroutine>d__273))]
	private IEnumerator GetProfileAndAvatarCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xD0563C", Offset = "0xD0563C", VA = "0xD0563C")]
	public void UpdateAvatar(int FID, Sprite texture)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xD056C0", Offset = "0xD056C0", VA = "0xD056C0")]
	public void RequestProfile(int requestingActorID)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xD05834", Offset = "0xD05834", VA = "0xD05834")]
	[PunRPC]
	private void RequestProfileMsg(int requestingActorId)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xD0587C", Offset = "0xD0587C", VA = "0xD0587C")]
	[PunRPC]
	private void LoadPerksMsg(byte slot1, byte slot2)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xD002C8", Offset = "0xD002C8", VA = "0xD002C8")]
	public void PlayerDown(bool down, short w, int worldNumber = 0, bool headshot = false, bool explosion = false)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xCFD540", Offset = "0xCFD540", VA = "0xCFD540")]
	[PunRPC]
	private void PlayerDownMsg(bool down, short w, int worldNumber, bool headshot, bool explosion, PhotonMessageInfo messageInfo)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xD058C0", Offset = "0xD058C0", VA = "0xD058C0")]
	private void PlayerDownZmb(bool down, short w, bool isMineNotBot)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xD05E9C", Offset = "0xD05E9C", VA = "0xD05E9C")]
	private void PlayerDownSnd(bool down, short w, bool isMineNotBot)
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xD06610", Offset = "0xD06610", VA = "0xD06610")]
	public void GetSelfRevive(bool value)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xD0671C", Offset = "0xD0671C", VA = "0xD0671C")]
	[PunRPC]
	private void GetSelfReviveMsg(bool value)
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xD064B8", Offset = "0xD064B8", VA = "0xD064B8")]
	public void BleedOut()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xD06728", Offset = "0xD06728", VA = "0xD06728")]
	[PunRPC]
	private void BleedOutMsg()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xD06A70", Offset = "0xD06A70", VA = "0xD06A70")]
	public void SetAbilityToBleedout(bool _canBleedout, double? reviveStartTime, ReviveType reviveType, float bleedoutSubtractFrom)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xD06DF0", Offset = "0xD06DF0", VA = "0xD06DF0")]
	[PunRPC]
	private void SetAbilityToBleedoutMsg(bool _canBleedout, double? reviveStartTime, byte reviveType, float bleedoutSubtractFrom, double serverTime)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xD06F7C", Offset = "0xD06F7C", VA = "0xD06F7C")]
	public void SyncWeapon(WeaponInformation wpn)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xD07000", Offset = "0xD07000", VA = "0xD07000")]
	[PunRPC]
	private void SyncWeapon(object[] data)
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xCFD22C", Offset = "0xCFD22C", VA = "0xCFD22C")]
	private void UpdateAndSetWeapons(object[] wpn1, object[] wpn2)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xD07064", Offset = "0xD07064", VA = "0xD07064")]
	public void SetThisEntityOnFire()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xD07144", Offset = "0xD07144", VA = "0xD07144")]
	[PunRPC]
	private void SyncFireStateMsg()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xD0714C", Offset = "0xD0714C", VA = "0xD0714C")]
	private void StartFire()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xD074DC", Offset = "0xD074DC", VA = "0xD074DC")]
	[PunRPC]
	private void TellEveryoneToStopTheFire()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xD02D40", Offset = "0xD02D40", VA = "0xD02D40")]
	private void StopFire()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xD07230", Offset = "0xD07230", VA = "0xD07230")]
	private void Scream(bool value)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xD074E0", Offset = "0xD074E0", VA = "0xD074E0")]
	public void FireUpdate()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xD077B4", Offset = "0xD077B4", VA = "0xD077B4")]
	public bool JustSpawned()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xD07820", Offset = "0xD07820", VA = "0xD07820")]
	public PlayerData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000281")]
public class PlayerInitData
{
	[Token(Token = "0x40017FC")]
	public const short version = 2;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string playerName;

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int worldNumber;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string FID;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int FIDInt;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string deviceUniqueID;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string os;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string deviceType;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public byte updateVersion;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string uid;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_SavedGameCenterID;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_GameCenterID;

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xD08554", Offset = "0xD08554", VA = "0xD08554")]
	public static PlayerInitData Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xD08610", Offset = "0xD08610", VA = "0xD08610")]
	public static byte[] Serialize(PlayerInitData playerInitData)
	{
		return null;
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xD08798", Offset = "0xD08798", VA = "0xD08798")]
	public static PlayerInitData Deserialize(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xD08608", Offset = "0xD08608", VA = "0xD08608")]
	public PlayerInitData()
	{
	}
}
[Token(Token = "0x2000282")]
public class PlayerLocalData : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000283")]
	[CompilerGenerated]
	private sealed class <IEDualWieldAllowed>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerLocalData <>4__this;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xD0EE0C", Offset = "0xD0EE0C", VA = "0xD0EE0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xD0EE54", Offset = "0xD0EE54", VA = "0xD0EE54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xD0B9CC", Offset = "0xD0B9CC", VA = "0xD0B9CC")]
		[DebuggerHidden]
		public <IEDualWieldAllowed>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xD0EAB4", Offset = "0xD0EAB4", VA = "0xD0EAB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xD0EAB8", Offset = "0xD0EAB8", VA = "0xD0EAB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xD0EE14", Offset = "0xD0EE14", VA = "0xD0EE14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool m_Created;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_TestSceneWithWeapons;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool TrackMessages;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Classes")]
	private PlatformManager m_PlatformManager;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AlvoPartyNet m_AlvoData;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VrManager m_VrManager;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DisplayLoadoutInventory m_DisplayLoadoutInventory;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_GameType;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AlvoLevels m_CurrentLevel;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_LoadingTitle;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Items m_CurrentWeapon;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_CurrentSkinSelection;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public byte[] m_Customization;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PlayerInitData currentInitData;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PlayerProfile m_PlayerProfile;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SceneSetupManager m_SceneSetup;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PlayerStats m_PlayerStats;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PlayerStats m_SessionStats;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public DailyXPInfo m_BonusXPInfo;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AlvoToolkit m_AlvoToolkit;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<Items> m_WeaponInventory;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Items> m_CurrentInventory;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Killstreaks")]
	public List<KillStreakBehaviors> m_AllKillStreaks;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public List<KillStreakBehaviors> m_KillStreaks1;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public List<KillStreakBehaviors> m_KillStreaks2;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public List<KillStreakBehaviors> m_KillStreaks3;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int m_KillsFor1;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int m_KillsFor2;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int m_KillsFor3;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[Header("Joining Rooms")]
	public int m_Team;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_Time;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int m_TotalKills;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int m_FinishedMatchesAmount;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[Header("Version")]
	public int m_GameVersion;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int m_LoadoutVersion;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int m_FriendsVersion;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int m_PlayerStatsV;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[Header("Keys")]
	public static string m_CustomizationKey;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string m_InitKey;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string m_DefaultCustomizationKey;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string m_LoadoutKey;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string m_PlayerStatsKey;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string m_FriendsKey;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string m_KillStreakKey;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string unlocks;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Obsolete]
	public string m_PlayerStatsVersion;

	[Token(Token = "0x4001836")]
	public const float m_LegacyPlayerStatsVersion = 1.185f;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public System.Action onPlayerStatsLoaded;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("Temporaty testing avatars urls")]
	public string[] TempAvatarUrls;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Header("Loadouts")]
	public List<Loadout> m_Loadouts;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Loadout m_CurrentLoadout;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int m_CurrentLoadoutNumber;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[Obsolete]
	[Header("Temporary")]
	public bool useBots;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	[Header("Spawning")]
	public bool m_UseDistanceSpawn;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
	[Header("Search Destroy")]
	public bool m_Offense;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Header("Assists")]
	public int[] m_Assists;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Header("Scriptable")]
	public SkinsList m_AllSkins;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public WeaponList m_AllWeapons;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public WeaponList m_AllGranades;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TacticalGearList m_AllTacticalGear;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ClothingList m_AllClothing;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public WeaponStatsList m_WeaponStats;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextureArrayDatabase textureArrayDatabase;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public PlatformEnhancementConfig[] m_PlatformEnhancementConfigs;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Header("Items owned")]
	public List<Clothing> m_Heads;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<Clothing> m_Suits;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public List<Clothing> m_Hats;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<Clothing> m_Glasses;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<Clothing> m_Barclava;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Space]
	public bool m_Offline;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[Header("Staging")]
	public AlvoLevels m_StagedLevel;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private AlvoSocialManager m_PartyManager;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AlvoNPToolkit m_alvoNPToolkit;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public PicoLogin picoLogin;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[Header("Debug")]
	public bool m_BulletHitDebug;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Skins m_DebugSkin;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public List<Loadout> m_TestLoadouts;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool init;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public int returnID;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string returnFID;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[Header("Testing")]
	public bool m_VoiceOnForEveryone;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static bool on;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Header("Voice")]
	public List<int> m_BlockedIDs;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[Header("Levels")]
	public List<AlvoLevels> m_AllAvailableLevels;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public List<AlvoLevels> m_GameLevels;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Vector3 lastSpawn;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[Header("Fonts")]
	public LanguageTextDatabase m_LanguageTextDB;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool playerStatsLoaded;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private PlayerStats recievedPlayerStats;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private LevelManager levelManager;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public int LoadoutDualDefaultPrimary;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public int LoadoutDualDefaultSecondary;

	[Token(Token = "0x4001864")]
	private const int m_FindPlayerStatsVersionMaxTries = 30;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	private GamemodeSettings ffaSettings;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	private GamemodeSettings tdmSettings;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private GamemodeSettings sndSettings;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	private GamemodeSettings zombiesSettings;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	private GamemodeSettings hpSettings;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	private GamemodeSettings tutorialSettings;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	private GamemodeSettings pmWaitingSettings;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[HideInInspector]
	public GamemodeSettings gamemodeConfig;

	[Token(Token = "0x17000211")]
	public string MasterVersion
	{
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xD08998", Offset = "0xD08998", VA = "0xD08998")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000212")]
	public GameMode GameType
	{
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xD089B4", Offset = "0xD089B4", VA = "0xD089B4")]
		get
		{
			return default(GameMode);
		}
	}

	[Token(Token = "0x17000213")]
	public bool GoDownWhenKilled
	{
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xD0E0D4", Offset = "0xD0E0D4", VA = "0xD0E0D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xD089BC", Offset = "0xD089BC", VA = "0xD089BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xD097D0", Offset = "0xD097D0", VA = "0xD097D0")]
	public void SetDefaultLevel(Levels level)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xD09830", Offset = "0xD09830", VA = "0xD09830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xD098F4", Offset = "0xD098F4", VA = "0xD098F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xD09A6C", Offset = "0xD09A6C", VA = "0xD09A6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xD09BE4", Offset = "0xD09BE4", VA = "0xD09BE4")]
	private void ResetEverything()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xD09C5C", Offset = "0xD09C5C", VA = "0xD09C5C")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xD0AC84", Offset = "0xD0AC84", VA = "0xD0AC84")]
	public static void AddBlockedUsers(ulong user)
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xD0AC88", Offset = "0xD0AC88", VA = "0xD0AC88")]
	public static void UpdateBlockedUsers(ulong id)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xD0AB18", Offset = "0xD0AB18", VA = "0xD0AB18")]
	public void SetupWeaponOnInit()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xD0AC8C", Offset = "0xD0AC8C", VA = "0xD0AC8C")]
	public void SetTeamMask(PlayerWeapons playerWeapons, LevelManager levelManager)
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xD0AE90", Offset = "0xD0AE90", VA = "0xD0AE90")]
	public void SetKillstreak(int slot, KillStreakBehaviors behaviour)
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xD0AFA0", Offset = "0xD0AFA0", VA = "0xD0AFA0")]
	public void DeletePlayerInit()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xD0B4D8", Offset = "0xD0B4D8", VA = "0xD0B4D8")]
	public static bool IsItemDualWield(int itemNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xD090D4", Offset = "0xD090D4", VA = "0xD090D4")]
	public void LoadLoadouts()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xD0B964", Offset = "0xD0B964", VA = "0xD0B964")]
	[IteratorStateMachine(typeof(<IEDualWieldAllowed>d__111))]
	private IEnumerator IEDualWieldAllowed()
	{
		return null;
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xD0B9F4", Offset = "0xD0B9F4", VA = "0xD0B9F4")]
	public Items GetDefaultWeapon(bool secondary = false)
	{
		return null;
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xD0B51C", Offset = "0xD0B51C", VA = "0xD0B51C")]
	private Loadout InitLoadout(string loadoutName, [Optional] int? m_Primary, [Optional] int? m_Secundary)
	{
		return null;
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xD0B824", Offset = "0xD0B824", VA = "0xD0B824")]
	public void SaveLoadouts()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xD0BB7C", Offset = "0xD0BB7C", VA = "0xD0BB7C")]
	public string RandomName()
	{
		return null;
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xD0BCFC", Offset = "0xD0BCFC", VA = "0xD0BCFC")]
	public bool LoadPlayerStats(ref PlayerStats playerStats)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xD0C910", Offset = "0xD0C910", VA = "0xD0C910")]
	private void ReceivePlayerStats(AzureRequestTypes type, string received, int requId)
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xD0CB5C", Offset = "0xD0CB5C", VA = "0xD0CB5C")]
	public void SavePlayerStats(PlayerStats playerStats)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xD0B418", Offset = "0xD0B418", VA = "0xD0B418")]
	private string FindPlayerStatsVersion()
	{
		return null;
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xD0B350", Offset = "0xD0B350", VA = "0xD0B350")]
	private string FindLoadoutsVersion()
	{
		return null;
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xD0D43C", Offset = "0xD0D43C", VA = "0xD0D43C")]
	[Obsolete]
	public string CalculateProgressString(int lvl, int exp)
	{
		return null;
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xD0D530", Offset = "0xD0D530", VA = "0xD0D530")]
	[Obsolete]
	public float CalculateProgress(int lvl, int exp)
	{
		return default(float);
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xD0D594", Offset = "0xD0D594", VA = "0xD0D594")]
	public void UpdateStats(PlayerStats stats, short stat, bool h = false, bool isBot = false, bool byBot = false)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xD0D50C", Offset = "0xD0D50C", VA = "0xD0D50C")]
	[Obsolete]
	private int GetRequiredExp(int lvl)
	{
		return default(int);
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xD0DB2C", Offset = "0xD0DB2C", VA = "0xD0DB2C")]
	[Obsolete]
	public void TurnOnOffBots(bool value)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xD0DB38", Offset = "0xD0DB38", VA = "0xD0DB38")]
	[Obsolete]
	public int CalculateLevel(int exp)
	{
		return default(int);
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xD0DC50", Offset = "0xD0DC50", VA = "0xD0DC50")]
	public void SaveUnlocks(bool save = true)
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xD0AA2C", Offset = "0xD0AA2C", VA = "0xD0AA2C")]
	public void LoadUnlocks()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xD0BA84", Offset = "0xD0BA84", VA = "0xD0BA84")]
	public Items CreateNewWeapon(Items weaponToCreate)
	{
		return null;
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xD0BB08", Offset = "0xD0BB08", VA = "0xD0BB08")]
	public ScriptableTacticalGear CreateNewTacticalGear(ScriptableTacticalGear weaponToCreate)
	{
		return null;
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xD0DD38", Offset = "0xD0DD38", VA = "0xD0DD38")]
	public void SetCurrentLevelFromString(string currentMap)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xD0DEF8", Offset = "0xD0DEF8", VA = "0xD0DEF8")]
	public void SetCurrentLevelFromSceneName(string scenName)
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xD0DFE8", Offset = "0xD0DFE8", VA = "0xD0DFE8")]
	public void SetCurrentLevelByte(byte currentMap)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xD0E160", Offset = "0xD0E160", VA = "0xD0E160")]
	public void SetGameTypeFromString(string gameTypeString)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xD0E374", Offset = "0xD0E374", VA = "0xD0E374")]
	public GamemodeSettings GetGameModeSettings(GameMode gameMode)
	{
		return null;
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xD0E3D4", Offset = "0xD0E3D4", VA = "0xD0E3D4")]
	public GamemodeSettings GetGameModeSettings(int gameMode)
	{
		return null;
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xD0E434", Offset = "0xD0E434", VA = "0xD0E434")]
	public void SetPrivateWaitingSettings()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xD0E4B0", Offset = "0xD0E4B0", VA = "0xD0E4B0")]
	public void SetOffense(bool team1Offense)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xD0E4CC", Offset = "0xD0E4CC", VA = "0xD0E4CC")]
	public PlayerLocalData()
	{
	}
}
[Token(Token = "0x2000287")]
public class PlayerManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000288")]
	[CompilerGenerated]
	private sealed class <ReloadTiming>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerManager <>4__this;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int PlayerID;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isBot;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xD11FD8", Offset = "0xD11FD8", VA = "0xD11FD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xD12020", Offset = "0xD12020", VA = "0xD12020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xD10B50", Offset = "0xD10B50", VA = "0xD10B50")]
		[DebuggerHidden]
		public <ReloadTiming>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xD11E54", Offset = "0xD11E54", VA = "0xD11E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xD11E58", Offset = "0xD11E58", VA = "0xD11E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xD11FE0", Offset = "0xD11FE0", VA = "0xD11FE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000289")]
	[CompilerGenerated]
	private sealed class <ThrowGrenadeTiming>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerManager <>4__this;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playerID;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isBot;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0xD12238", Offset = "0xD12238", VA = "0xD12238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0xD12280", Offset = "0xD12280", VA = "0xD12280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xD10C20", Offset = "0xD10C20", VA = "0xD10C20")]
		[DebuggerHidden]
		public <ThrowGrenadeTiming>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xD12028", Offset = "0xD12028", VA = "0xD12028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xD1202C", Offset = "0xD1202C", VA = "0xD1202C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xD12240", Offset = "0xD12240", VA = "0xD12240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028A")]
	[CompilerGenerated]
	private sealed class <ThrowTacticalGearDeployableTiming>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerManager <>4__this;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _playerID;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _isBot;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0xD12498", Offset = "0xD12498", VA = "0xD12498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xD124E0", Offset = "0xD124E0", VA = "0xD124E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xD10CF0", Offset = "0xD10CF0", VA = "0xD10CF0")]
		[DebuggerHidden]
		public <ThrowTacticalGearDeployableTiming>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xD12288", Offset = "0xD12288", VA = "0xD12288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xD1228C", Offset = "0xD1228C", VA = "0xD1228C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xD124A0", Offset = "0xD124A0", VA = "0xD124A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public System.Action OnPlayerListDeathChange;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlayerData> allPlayers;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PlayerData> m_TotalPlayers;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PlayerData> m_Team1;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PlayerData> m_Team2;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<PlayerData> allPlayerAI;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<PlayerProfile> allPlayerProfiles;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerProfile m_LocalPlayerProfile;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerData localPlayer;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LayerMask groundLayers;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RaycastHit[] results;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LevelManager levelManager;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PlayerData playerToUpdate;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float gd;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int interval;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] ThirdPersonWeapons;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] ThirdPersonWeaponsBots;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerData playerToUpdate2;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 ground;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 boxSize;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 lerpPosition;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Collider lastCollider;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Ray ray;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private RaycastHit hit;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool calcRotation;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 up;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float t;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private WaitForSeconds waitReload;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private WaitForSeconds waitGrenade;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private PlayerData getPlayer;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int team1Count;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int team2Count;

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xD0EEC8", Offset = "0xD0EEC8", VA = "0xD0EEC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xD0EEEC", Offset = "0xD0EEEC", VA = "0xD0EEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xD0EFA0", Offset = "0xD0EFA0", VA = "0xD0EFA0")]
	public void UpdatePlayers()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xD0F474", Offset = "0xD0F474", VA = "0xD0F474")]
	public void GroundCheck(PlayerData playerData)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xD0F6B8", Offset = "0xD0F6B8", VA = "0xD0F6B8")]
	public void AddProfile(PlayerProfile playerProfile)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xD0FC50", Offset = "0xD0FC50", VA = "0xD0FC50")]
	public void RemoveProfileWN(int worldNumber)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xD0FD70", Offset = "0xD0FD70", VA = "0xD0FD70")]
	public void RemoveProfile(int actorID)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xD0FE74", Offset = "0xD0FE74", VA = "0xD0FE74")]
	public void Melee(int playerId)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xD10058", Offset = "0xD10058", VA = "0xD10058")]
	public void Bazooka(int playerID)
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xD10130", Offset = "0xD10130", VA = "0xD10130")]
	public void Crouch(int PlayerID, bool isCrouching, bool isBot)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xD10420", Offset = "0xD10420", VA = "0xD10420")]
	public void Slide(int playerID, bool slideOn)
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xD10568", Offset = "0xD10568", VA = "0xD10568")]
	public void Prone(int playerId, bool proneOn)
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xD107A0", Offset = "0xD107A0", VA = "0xD107A0")]
	public void Sprint(int PlayerID, bool isBot, bool sprinting)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xD109A0", Offset = "0xD109A0", VA = "0xD109A0")]
	public void Attachment(int playerID, bool AttachOn)
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xD10AA8", Offset = "0xD10AA8", VA = "0xD10AA8")]
	public void Reload(int PlayerID, bool isBot)
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xD10ACC", Offset = "0xD10ACC", VA = "0xD10ACC")]
	[IteratorStateMachine(typeof(<ReloadTiming>d__43))]
	private IEnumerator ReloadTiming(int PlayerID, bool isBot)
	{
		return null;
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xD10B78", Offset = "0xD10B78", VA = "0xD10B78")]
	public void ThrowGrenade(int playerID, bool isBot)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xD10B9C", Offset = "0xD10B9C", VA = "0xD10B9C")]
	[IteratorStateMachine(typeof(<ThrowGrenadeTiming>d__46))]
	private IEnumerator ThrowGrenadeTiming(int playerID, bool isBot)
	{
		return null;
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xD10C48", Offset = "0xD10C48", VA = "0xD10C48")]
	public void ThrowTacticalGearDeployable(int _playerID, bool _isBot)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xD10C6C", Offset = "0xD10C6C", VA = "0xD10C6C")]
	[IteratorStateMachine(typeof(<ThrowTacticalGearDeployableTiming>d__48))]
	private IEnumerator ThrowTacticalGearDeployableTiming(int _playerID, bool _isBot)
	{
		return null;
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xD10D18", Offset = "0xD10D18", VA = "0xD10D18")]
	public PlayerProfile GetPlayerProfile(int id)
	{
		return null;
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xD10DDC", Offset = "0xD10DDC", VA = "0xD10DDC")]
	public PlayerProfile GetProfile(int id)
	{
		return null;
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xD10EA0", Offset = "0xD10EA0", VA = "0xD10EA0")]
	public PlayerProfile GetProfile(string id)
	{
		return null;
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xD10EC4", Offset = "0xD10EC4", VA = "0xD10EC4")]
	public PlayerData GetPlayer(int FID)
	{
		return null;
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xD0FF18", Offset = "0xD0FF18", VA = "0xD0FF18")]
	public PlayerData GetPlayer(int id, bool isBot)
	{
		return null;
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xD10FB0", Offset = "0xD10FB0", VA = "0xD10FB0")]
	public PlayerData GetPlayerByWorldNumber(int worldNumber)
	{
		return null;
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xD110E8", Offset = "0xD110E8", VA = "0xD110E8")]
	public PlayerData GetBestPingPlayer(bool excludeSelf = false)
	{
		return null;
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xD11240", Offset = "0xD11240", VA = "0xD11240")]
	public bool IsBot(int worldNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xD0FC34", Offset = "0xD0FC34", VA = "0xD0FC34")]
	public void InvokeProfileListDeathChange()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xD11324", Offset = "0xD11324", VA = "0xD11324")]
	public void UpdatePlayersTeamSkin()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xD0FBA8", Offset = "0xD0FBA8", VA = "0xD0FBA8")]
	public void SetAllMarkerSpeechBubles()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xD113B8", Offset = "0xD113B8", VA = "0xD113B8")]
	public void RefreshMarkersAndMinimap()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xD11744", Offset = "0xD11744", VA = "0xD11744")]
	public int TeamWithLessPlayers(bool countBots = false)
	{
		return default(int);
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xD117BC", Offset = "0xD117BC", VA = "0xD117BC")]
	public int CountPlayersInTeam(int teamID, bool countBots = false)
	{
		return default(int);
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xD118F4", Offset = "0xD118F4", VA = "0xD118F4")]
	public int CountPlayersInTeamSpawned(int teamID)
	{
		return default(int);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xD11A44", Offset = "0xD11A44", VA = "0xD11A44")]
	public bool TeamHasBots(int teamID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xD11AEC", Offset = "0xD11AEC", VA = "0xD11AEC")]
	public List<PlayerData> GetBotsInTeam(int teamID)
	{
		return null;
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xD11C54", Offset = "0xD11C54", VA = "0xD11C54")]
	public PlayerManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200028C")]
public class PlayerProfile
{
	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Platform platform;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int worldNumber;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FID;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FIDInt;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playerName;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public short level;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int actorID;

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool nullProfile;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int leaderFID;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int kills;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int botKills;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int deaths;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int assists;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int scores;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool death;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int team;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool hasSpawned;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool m_UsingVr;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ulong PS4ID;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool isBot;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string avatarUrl;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VoiceChat voiceChat;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int coins;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int revives;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int timesRevived;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int zombieKills;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float mvpPoints;

	[Token(Token = "0x40018BE")]
	public const string kStats_BombPlant = "bombPlant";

	[Token(Token = "0x40018BF")]
	public const string kStats_BombDefuse = "bombDefuse";

	[Token(Token = "0x40018C0")]
	public const string kStats_HPpersonalPoints = "HPpersonalPoints";

	[Token(Token = "0x40018C1")]
	public const string kStats_Score = "score";

	[Token(Token = "0x1700021C")]
	public bool IsLocalPlayer
	{
		[Token(Token = "0x600101C")]
		[Address(RVA = "0xD1250C", Offset = "0xD1250C", VA = "0xD1250C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xD12548", Offset = "0xD12548", VA = "0xD12548")]
	public static byte[] SerializeProfile(PlayerProfile playerProfile)
	{
		return null;
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xD127E4", Offset = "0xD127E4", VA = "0xD127E4")]
	public static byte[] SerializeProfiles(List<PlayerProfile> playerProfiles)
	{
		return null;
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xD12BA4", Offset = "0xD12BA4", VA = "0xD12BA4")]
	public static PlayerProfile DeserializeProfile(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xD12E9C", Offset = "0xD12E9C", VA = "0xD12E9C")]
	public static List<PlayerProfile> DeserializeProfiles(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xD13220", Offset = "0xD13220", VA = "0xD13220")]
	public PhotonPlayer GetPhotonPlayer()
	{
		return null;
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xD132BC", Offset = "0xD132BC", VA = "0xD132BC")]
	public int GetPlayerStats(PhotonPlayer _player, string _key)
	{
		return default(int);
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xD0ACF4", Offset = "0xD0ACF4", VA = "0xD0ACF4")]
	public static void CleanLocal()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xD0D92C", Offset = "0xD0D92C", VA = "0xD0D92C")]
	public static void SyncLocalBombPlant(int _bombPlant)
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xD0DA2C", Offset = "0xD0DA2C", VA = "0xD0DA2C")]
	public static void SyncLocalBombDefuse(int _bombDefuse)
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xD13378", Offset = "0xD13378", VA = "0xD13378")]
	public static void SyncLocalHpPersonalPoints(int _points)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xD13478", Offset = "0xD13478", VA = "0xD13478")]
	public static void SyncLocalScore(int _points)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xD13578", Offset = "0xD13578", VA = "0xD13578", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xD12E94", Offset = "0xD12E94", VA = "0xD12E94")]
	public PlayerProfile()
	{
	}
}
[Serializable]
[Token(Token = "0x200028D")]
public class PlayerStats
{
	[Token(Token = "0x200028E")]
	public delegate void Event(int n);

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Level;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int Experience;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int Coins;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ID;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float KDR;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int Kills;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int BotKills;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int Deaths;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int BotDeaths;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int Assists;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int BotAssists;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int Logins;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int TDMWin;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int TDMLoss;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int FFAFirstPlace;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int FFASecondPlace;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int FFAThirdPlace;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int FFAGamesPlayed;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int SNDWin;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int SNDLoss;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int SNDRoundWin;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int SNDPlant;

	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int SNDDefuse;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int HpWin;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int HpLoss;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int HpPersonalPoints;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int HpTeamPoints;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int Meleekills;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int GunKills;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int Headshots;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int BotHeadshots;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int Granadekills;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int[] KillsGun;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int[] KillstreakKills;

	[Token(Token = "0x40018E5")]
	public const int KillStreakCount = 7;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BitVector32 WeaponPurchases;

	[Token(Token = "0x40018E7")]
	public const int WeaponCount = 19;

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BitArray[] AttachmentPurchases;

	[Token(Token = "0x40018E9")]
	public const int AttachmentCount = 16;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BitVector32[] SkinPurchases;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private BitVector32 NewWeaponUnlockables;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private BitArray[] NewAttachmentUnlockables;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BitVector32 CharacterPurchases;

	[Token(Token = "0x40018EE")]
	public const int defaultCharacterPurchases = 1025;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public BitVector32 CharacterUnlocks;

	[Token(Token = "0x40018F0")]
	public const int defaultCharacterUnlocks = 16383;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BitVector32 PerkPurchases;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public BitVector32 TacticalGearPurchases;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string PSID;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string UID;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string FID;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string Lobby;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool OpenRoom;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool Message;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string MessageString;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public DailyXPInfo DailyBonusXP;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int MatchMode;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int WeeklyKills;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int WeeklyDeaths;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float WeeklyKDR;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int WeeklyHeadshots;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public int LeaderboardKills;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public int LeaderboardDeaths;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int LeaderboardHeadshots;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float LeaderboardKDR;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Event OnExpChanged;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Event OnCoinsChanged;

	[Token(Token = "0x1700021D")]
	public int Exp
	{
		[Token(Token = "0x600102A")]
		[Address(RVA = "0xD13860", Offset = "0xD13860", VA = "0xD13860")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600102B")]
		[Address(RVA = "0xD13868", Offset = "0xD13868", VA = "0xD13868")]
		set
		{
		}
	}

	[Token(Token = "0x1700021E")]
	public int CoinsValue
	{
		[Token(Token = "0x600102C")]
		[Address(RVA = "0xD13888", Offset = "0xD13888", VA = "0xD13888")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600102D")]
		[Address(RVA = "0xD13890", Offset = "0xD13890", VA = "0xD13890")]
		set
		{
		}
	}

	[Token(Token = "0x1700021F")]
	public int TotalWins
	{
		[Token(Token = "0x600102E")]
		[Address(RVA = "0xD138B0", Offset = "0xD138B0", VA = "0xD138B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000220")]
	public int TotalLoses
	{
		[Token(Token = "0x600102F")]
		[Address(RVA = "0xD138D0", Offset = "0xD138D0", VA = "0xD138D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xD0A934", Offset = "0xD0A934", VA = "0xD0A934")]
	public PlayerStats()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xD0BFE8", Offset = "0xD0BFE8", VA = "0xD0BFE8")]
	public static PlayerStats Deserialize(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xD0CC60", Offset = "0xD0CC60", VA = "0xD0CC60")]
	public static byte[] Serialize(PlayerStats playerStats, int v)
	{
		return null;
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xD13AF8", Offset = "0xD13AF8", VA = "0xD13AF8")]
	public static string SerializeBitArray(BitArray array)
	{
		return null;
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xD138F4", Offset = "0xD138F4", VA = "0xD138F4")]
	public static BitArray DeserializeBitArray(string str)
	{
		return null;
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xD13C94", Offset = "0xD13C94", VA = "0xD13C94")]
	public int CalculateExperience(PlayerRankConfig.XPReward xpReward, int currentLevel)
	{
		return default(int);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xD13D98", Offset = "0xD13D98", VA = "0xD13D98")]
	public int CalculateInGameExperienceOfPlayer(PlayerRankConfig.XPReward _xpReward, PlayerProfile _playerProfile)
	{
		return default(int);
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xD13F1C", Offset = "0xD13F1C", VA = "0xD13F1C")]
	public float GetExpMultiplier(PlayerRankConfig.XPReward xpReward)
	{
		return default(float);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xD13F3C", Offset = "0xD13F3C", VA = "0xD13F3C")]
	public int CalculateCoins(PlayerRankConfig.CoinsReward coinsReward, int gameType)
	{
		return default(int);
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xD13FEC", Offset = "0xD13FEC", VA = "0xD13FEC")]
	public BitVector32 GetBuyableWeapons(PlayerRankConfig.WeaponUnlock[] weaponUnlocks)
	{
		return default(BitVector32);
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xD140DC", Offset = "0xD140DC", VA = "0xD140DC")]
	public BitArray[] GetBuyableAttachments(WeaponEquipmentUnlockList attachmentUnlocks)
	{
		return null;
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xD14358", Offset = "0xD14358", VA = "0xD14358")]
	public void CalculateNewBuyableWeapons(int oldLevel, PlayerRankConfig.WeaponUnlock[] weaponUnlocks)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xD14404", Offset = "0xD14404", VA = "0xD14404")]
	public (BitVector32, List<int>) GetNewBuyableWeapons(int newLevel, PlayerRankConfig.WeaponUnlock[] weaponUnlocks)
	{
		return default((BitVector32, List<int>));
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xD145D8", Offset = "0xD145D8", VA = "0xD145D8")]
	public void CalculateNewBuyableAttachments(int[] oldKills, PlayerRankConfig rankConfig, WeaponList weaponList)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xD14744", Offset = "0xD14744", VA = "0xD14744")]
	public (BitArray[], List<int>[]) GetNewBuyableAttachments(int[] newKills, PlayerRankConfig playerRankConfig, WeaponList weaponList)
	{
		return default((BitArray[], List<int>[]));
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xD14AA8", Offset = "0xD14AA8", VA = "0xD14AA8")]
	public void AddStats(ref PlayerStats sessionStats, int gameType)
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xD14F84", Offset = "0xD14F84", VA = "0xD14F84")]
	public void BoughtWeapon(int wid)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xD15080", Offset = "0xD15080", VA = "0xD15080")]
	public void BoughtAttachment(int wid, int aid)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xD151B4", Offset = "0xD151B4", VA = "0xD151B4")]
	public void SawBuyables()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xD142C0", Offset = "0xD142C0", VA = "0xD142C0")]
	public int[] GetGunKills()
	{
		return null;
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xD1521C", Offset = "0xD1521C", VA = "0xD1521C")]
	public void ForceUpdateLevel()
	{
	}
}
[Token(Token = "0x200028F")]
public class PlayerWeaponManagment : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000290")]
	[CompilerGenerated]
	private sealed class <SwitchWeaponsTiming>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponInformation wpn;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerWeaponManagment <>4__this;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0xD16308", Offset = "0xD16308", VA = "0xD16308", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0xD16350", Offset = "0xD16350", VA = "0xD16350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xD15D58", Offset = "0xD15D58", VA = "0xD15D58")]
		[DebuggerHidden]
		public <SwitchWeaponsTiming>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xD15FB8", Offset = "0xD15FB8", VA = "0xD15FB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xD15FBC", Offset = "0xD15FBC", VA = "0xD15FBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xD16310", Offset = "0xD16310", VA = "0xD16310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerData playerData;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerManager m_PlayerManager;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelManager levelManager;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spawnTime;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds waitSpawnTime;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isLocalPlayer;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isLocalBot;

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xD153C0", Offset = "0xD153C0", VA = "0xD153C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xD15458", Offset = "0xD15458", VA = "0xD15458")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xD15460", Offset = "0xD15460", VA = "0xD15460")]
	public void EquipWeapon(WeaponInformation wpn, bool instant = false)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xD15610", Offset = "0xD15610", VA = "0xD15610")]
	private void EquipWeaponInstant(WeaponInformation wpn)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xD1569C", Offset = "0xD1569C", VA = "0xD1569C")]
	[IteratorStateMachine(typeof(<SwitchWeaponsTiming>d__9))]
	private IEnumerator SwitchWeaponsTiming(WeaponInformation wpn)
	{
		return null;
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xD15BD4", Offset = "0xD15BD4", VA = "0xD15BD4")]
	private void SpawnAndAttachWeapon(WeaponInformation wpn)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xD1571C", Offset = "0xD1571C", VA = "0xD1571C")]
	private void SpawnAndAttachWeaponVR(WeaponInformation wpn)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xD15588", Offset = "0xD15588", VA = "0xD15588")]
	private void SetLocalVariables()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xD15D80", Offset = "0xD15D80", VA = "0xD15D80")]
	private void DestroyAll(Transform gameObjectToDestroy)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xD15E84", Offset = "0xD15E84", VA = "0xD15E84")]
	private Transform GetWeaponHand(WeaponInformation wpn)
	{
		return null;
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xD15F3C", Offset = "0xD15F3C", VA = "0xD15F3C")]
	public PlayerWeaponManagment()
	{
	}
}
[Serializable]
[Token(Token = "0x2000291")]
public struct WeaponInformation
{
	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte weaponNumber;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public byte skin;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public byte scope;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public byte attachment;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool dualWield;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public bool dualWieldSecondary;

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xD16358", Offset = "0xD16358", VA = "0xD16358")]
	public object[] GetData()
	{
		return null;
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xD16578", Offset = "0xD16578", VA = "0xD16578")]
	public void SetData(object[] data)
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xD1672C", Offset = "0xD1672C", VA = "0xD1672C")]
	public void SetData(Items item, bool primaryDualWield = true)
	{
	}
}
[Token(Token = "0x2000292")]
public class Ps4InputTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600105D")]
	[Address(RVA = "0xD167AC", Offset = "0xD167AC", VA = "0xD167AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xD16898", Offset = "0xD16898", VA = "0xD16898")]
	public Ps4InputTest()
	{
	}
}
[Token(Token = "0x2000293")]
public class R : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000294")]
	public class pc : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001060")]
		[Address(RVA = "0xD168A8", Offset = "0xD168A8", VA = "0xD168A8")]
		private void OnPrecull()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xD168AC", Offset = "0xD168AC", VA = "0xD168AC")]
		public pc()
		{
		}
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xD168A0", Offset = "0xD168A0", VA = "0xD168A0")]
	public R()
	{
	}
}
[Token(Token = "0x2000295")]
public class GunSetup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GunSetup instance;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform vrMountPoint;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform transformToMove;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform vrCameraLocation;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform vrTrackingRoot;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandHeadSync headSyncScript;

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xD168B4", Offset = "0xD168B4", VA = "0xD168B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xD16900", Offset = "0xD16900", VA = "0xD16900")]
	private void Update()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xD169A0", Offset = "0xD169A0", VA = "0xD169A0")]
	private void Move_Transform()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xD169A4", Offset = "0xD169A4", VA = "0xD169A4")]
	public GunSetup()
	{
	}
}
[Token(Token = "0x2000296")]
public class HandHeadSync : Photon.MonoBehaviour
{
	[Token(Token = "0x2000297")]
	[CompilerGenerated]
	private sealed class <FallHandTarget>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandHeadSync <>4__this;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <interpolate>5__2;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xD19528", Offset = "0xD19528", VA = "0xD19528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xD19570", Offset = "0xD19570", VA = "0xD19570", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xD190EC", Offset = "0xD190EC", VA = "0xD190EC")]
		[DebuggerHidden]
		public <FallHandTarget>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xD19114", Offset = "0xD19114", VA = "0xD19114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xD19118", Offset = "0xD19118", VA = "0xD19118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xD19530", Offset = "0xD19530", VA = "0xD19530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000298")]
	[CompilerGenerated]
	private sealed class <RecoverHandTarget>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandHeadSync <>4__this;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <interpolate>5__2;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xD19900", Offset = "0xD19900", VA = "0xD19900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xD19948", Offset = "0xD19948", VA = "0xD19948", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xD19578", Offset = "0xD19578", VA = "0xD19578")]
		[DebuggerHidden]
		public <RecoverHandTarget>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xD195A0", Offset = "0xD195A0", VA = "0xD195A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xD195A4", Offset = "0xD195A4", VA = "0xD195A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xD19908", Offset = "0xD19908", VA = "0xD19908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public IkToggler ikToggler;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerData playerData;

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxArmLenght;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	public Transform rigCameraRoot;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_GunSyncPoint;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_SecondaryHandSyncPoint;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_HeadIKTransform;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform upperArm;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform upperArmRight;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform primaryGunIkTarget;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform secondaryGunIkTarget;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform lookAtTarget;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform secondaryHandTarget;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform secondaryHandTargetATM;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform fallTargetLeftHand;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform fallTargetLeftHandProne;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform fallTargetRightHand;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform fallTargetRightHandProne;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform fallTransitionTarget;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 handTargetOriginalPos;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion handTargetOriginalRot;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 handTargetPronePos;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion handTargetProneRot;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 LH_handTargetOriginalPos;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Quaternion LH_handTargetOriginalRot;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 LH_handTargetPronePos;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Quaternion LH_handTargetProneRot;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform m_RigWeaponHolster;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public PhotonView pView;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float maxLeftArmDistance;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float minLeftArmDistance;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float maxArmIkDistance;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool m_IsBot;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	public bool changingWeapons;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float lerpFactor;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool initDone;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	public bool useVr;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 headPosition;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private Vector3 gunPosition;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 secondaryHandPos;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Quaternion gunRotation;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Quaternion headRotation;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Quaternion secondaryHandRotation;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private Vector3 gunPositionGoal;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Vector3 headPositionalGoal;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Quaternion headRotationGoal;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Quaternion gunRotationGoal;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private Vector3 secondaryPositionalGoal;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Quaternion secondaryRotationalGoal;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[Space]
	[Header("Left Handed")]
	public Transform RH_DefaultMainHandTransform;

	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Transform LH_DefaultMainHandTransform;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Transform RH_DefaultSecondaryHandTransform;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Transform LH_DefaultSecondaryHandTransform;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[Header("Hand Ik Offsets")]
	public Vector3 leftHandIkRotationOffset;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public Vector3 RightHandIkRotationOffset;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public MeshRenderer[] debugMeshes;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public byte handStanceReceived;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
	public byte currentSecondaryHandStance;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
	public byte currentPrimaryHandStance;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float currentSecondaryHandWeight;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float currentPrimaryHandWeight;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public byte temp;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x245")]
	private bool setNoIkPosition;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x246")]
	private bool setIkPosition;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float distance;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public bool hasFallen;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Transform fallTargetATM;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public bool usingTwoHands;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	public bool oneHandSetup;

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xD169AC", Offset = "0xD169AC", VA = "0xD169AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xD16DE4", Offset = "0xD16DE4", VA = "0xD16DE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xD162A0", Offset = "0xD162A0", VA = "0xD162A0")]
	public void ChangingWeapons(bool isChangingWeapons)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xD16DEC", Offset = "0xD16DEC", VA = "0xD16DEC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xD16D00", Offset = "0xD16D00", VA = "0xD16D00")]
	public void SaveHandTargetPos()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xD10330", Offset = "0xD10330", VA = "0xD10330")]
	public void SetHandTargetPos(bool prone)
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xD1733C", Offset = "0xD1733C", VA = "0xD1733C")]
	[IteratorStateMachine(typeof(<FallHandTarget>d__73))]
	private IEnumerator FallHandTarget()
	{
		return null;
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xD173A4", Offset = "0xD173A4", VA = "0xD173A4")]
	[IteratorStateMachine(typeof(<RecoverHandTarget>d__74))]
	private IEnumerator RecoverHandTarget()
	{
		return null;
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xD1740C", Offset = "0xD1740C", VA = "0xD1740C")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xD17C68", Offset = "0xD17C68", VA = "0xD17C68")]
	public Vector3 ApplyLimit(Vector3 pos, Transform target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xD169EC", Offset = "0xD169EC", VA = "0xD169EC")]
	public void SetLeftHanded()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xD17B58", Offset = "0xD17B58", VA = "0xD17B58")]
	public void SetSecondaryHandWeight(float weight)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xD17E80", Offset = "0xD17E80", VA = "0xD17E80")]
	public void SetPrimaryHandWeight(float weight)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xD17BA8", Offset = "0xD17BA8", VA = "0xD17BA8")]
	public void SetSecondaryHandStance(int stance)
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xD17ED0", Offset = "0xD17ED0", VA = "0xD17ED0")]
	public void SetPrimaryHandStance(int stance)
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xD17F90", Offset = "0xD17F90", VA = "0xD17F90")]
	public HandHeadSync()
	{
	}
}
[Token(Token = "0x2000299")]
public class localIKGunSync : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform gunTransform;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gunGoalTransform;

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xD19950", Offset = "0xD19950", VA = "0xD19950")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xD199B0", Offset = "0xD199B0", VA = "0xD199B0")]
	public localIKGunSync()
	{
	}
}
[Token(Token = "0x200029A")]
public class ClothingList : ScriptableObject
{
	[Token(Token = "0x400196C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Clothing> m_Clothing;

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xD199B8", Offset = "0xD199B8", VA = "0xD199B8")]
	public ClothingList()
	{
	}
}
[Token(Token = "0x200029B")]
public class SkinsList : ScriptableObject
{
	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Skins> m_Skins;

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xD199C0", Offset = "0xD199C0", VA = "0xD199C0")]
	public List<Skins> GetSkinsForWeapon(int weaponId)
	{
		return null;
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xD19B28", Offset = "0xD19B28", VA = "0xD19B28")]
	public Skins GetSkinByIds(int weaponId, int skinId)
	{
		return null;
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xD19C14", Offset = "0xD19C14", VA = "0xD19C14")]
	[ContextMenu("Reorder list")]
	private void ReorderList()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xD19F10", Offset = "0xD19F10", VA = "0xD19F10")]
	public SkinsList()
	{
	}
}
[Token(Token = "0x200029D")]
public class WeaponList : ScriptableObject
{
	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Items> m_Weapons;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, Items> m_weaponsDictionary;

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xD19FB4", Offset = "0xD19FB4", VA = "0xD19FB4")]
	public Items GetByItemNumber(int id)
	{
		return null;
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xD1A170", Offset = "0xD1A170", VA = "0xD1A170")]
	public WeaponList()
	{
	}
}
[Serializable]
[Token(Token = "0x200029E")]
public class WeaponStat
{
	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Identifiers")]
	public int weaponNumber;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int secondaryWeaponNumber;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string weaponName;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LanguageText weaponNameLT;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("In Game Stats")]
	public int damage;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float recoilMultiplier;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rateOfFire;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int distanceOne;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int distanceTwo;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("There's a default x0.7 and x0.5 damage multiplier for distance 1 and 2, this gets multiplied to that")]
	public float distanceDamageMultiplier;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int ammoCapacity;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int bulletsPerClip;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int bulletsToReload;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float headShotMultiplier;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float limbMultiplier;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool doDistanceCheck;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Stat override with Max Ammo perk")]
	public int bulletsPerClipWithPerk;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int bulletsToReloadWithPerk;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("UI Display Stats")]
	public float displayDamage;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float displayAccuracy;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float displayRecoil;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float displayFireRate;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float displayRange;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float displayAmmo;

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xD1A178", Offset = "0xD1A178", VA = "0xD1A178")]
	public WeaponStat()
	{
	}
}
[Token(Token = "0x200029F")]
public class WeaponStatsList : ScriptableObject
{
	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WeaponStat> weaponStats;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<byte, WeaponStat> dic;

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xD1A1C0", Offset = "0xD1A1C0", VA = "0xD1A1C0")]
	public WeaponStat GetByNumber(int idx)
	{
		return null;
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xD1A3F0", Offset = "0xD1A3F0", VA = "0xD1A3F0")]
	public WeaponStatsList()
	{
	}
}
[Token(Token = "0x20002A0")]
public class BombAnimEvents : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VrInGameUIManager uiManager;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float volumeMultiplier;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] keypadClicks;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip plantedEnd;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip defusedEnd;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip bombPlanted;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip bombDefused;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip charging;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource aSource;

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xD1A3F8", Offset = "0xD1A3F8", VA = "0xD1A3F8")]
	public void ClickKey(string text)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xD1A4E4", Offset = "0xD1A4E4", VA = "0xD1A4E4")]
	public void ArmBomb()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xD1A55C", Offset = "0xD1A55C", VA = "0xD1A55C")]
	public void StartSlider()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xD1A59C", Offset = "0xD1A59C", VA = "0xD1A59C")]
	public void BombPlanted()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xD1A5C0", Offset = "0xD1A5C0", VA = "0xD1A5C0")]
	public void BombDefused()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xD1A5E4", Offset = "0xD1A5E4", VA = "0xD1A5E4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xD1A600", Offset = "0xD1A600", VA = "0xD1A600")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xD1A670", Offset = "0xD1A670", VA = "0xD1A670")]
	public BombAnimEvents()
	{
	}
}
[Token(Token = "0x20002A1")]
public class BombSiteSetUp : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("References")]
	public Transform[] attackSpawnPos;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] defenseSpawnPos;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bombDefaultPos;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform siteAPos;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform siteBPos;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject go;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Debug")]
	public bool showGizmos;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform bombRef;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform siteARef;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform siteBRef;

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xD1A678", Offset = "0xD1A678", VA = "0xD1A678")]
	private void TestBombPosition()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xD1A7E4", Offset = "0xD1A7E4", VA = "0xD1A7E4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xD1A990", Offset = "0xD1A990", VA = "0xD1A990")]
	public BombSiteSetUp()
	{
	}
}
[Token(Token = "0x20002A2")]
public class DefenseTarget : Photon.MonoBehaviour
{
	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject go;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject mesh;

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelManager m_LevelManager;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerLocalData m_LocalData;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_Transform;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MarkerManagers m_MarkerManager;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_BombPlanted;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool m_CanSetBomb;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool m_BombExploded;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool m_IsBomb1;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool m_IsSiteA;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform spritesParent;

	[Token(Token = "0x40019AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject iddleSprite;

	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject plantedSprite;

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_TimeToDetonate;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool m_CanPickupBomb;

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool m_CanDefuseBomb;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem m_Explosion;

	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_ExplosionTime;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Space]
	[Header("Bomb flares")]
	public Vector3 iddleSize;

	[Token(Token = "0x40019B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 plantedSize;

	[Token(Token = "0x40019B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform iddleTransform;

	[Token(Token = "0x40019B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform plantedTransform;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource aSource;

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip aClipBeep;

	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip aClipExplosion;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float bombBaseVolume;

	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public LayerMask bombPlacementMask;

	[Token(Token = "0x40019BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float beepFrequencyDefault;

	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float beepFreqATM;

	[Token(Token = "0x40019BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float beepDuration;

	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float counter;

	[Token(Token = "0x40019C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool beepOn;

	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private RaycastHit hit;

	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 dropPos;

	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private WorldSpaceMarker marker;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private double lastPickedUpAt;

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xD1A998", Offset = "0xD1A998", VA = "0xD1A998")]
	private void Awake()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xD1AB54", Offset = "0xD1AB54", VA = "0xD1AB54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xD1ACAC", Offset = "0xD1ACAC", VA = "0xD1ACAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xD1AD80", Offset = "0xD1AD80", VA = "0xD1AD80")]
	public void Start()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xD1ADD4", Offset = "0xD1ADD4", VA = "0xD1ADD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xD1ACA8", Offset = "0xD1ACA8", VA = "0xD1ACA8")]
	public void SetPicoSpatializer()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xD1B0D8", Offset = "0xD1B0D8", VA = "0xD1B0D8")]
	public void PlantBomb(Vector3 pos)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xD1B2D8", Offset = "0xD1B2D8", VA = "0xD1B2D8")]
	[PunRPC]
	private void PlantBombMsg(Vector3 pos)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xD1B568", Offset = "0xD1B568", VA = "0xD1B568")]
	public void BombFall()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xD1B630", Offset = "0xD1B630", VA = "0xD1B630")]
	[PunRPC]
	public void BombFallMsg()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xD1B9C0", Offset = "0xD1B9C0", VA = "0xD1B9C0")]
	public void BombDrop(Vector3 pos)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xD1BBB8", Offset = "0xD1BBB8", VA = "0xD1BBB8")]
	[PunRPC]
	private void BombDropMsg(Vector3 pos)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xD1BEF8", Offset = "0xD1BEF8", VA = "0xD1BEF8")]
	public void PickupBomb(int worldNumber)
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xD1C030", Offset = "0xD1C030", VA = "0xD1C030")]
	[PunRPC]
	private void PickupBombMsg(int worldNumber)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xD1C5E0", Offset = "0xD1C5E0", VA = "0xD1C5E0")]
	public void DefusingBomb()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xD1C6D4", Offset = "0xD1C6D4", VA = "0xD1C6D4")]
	[PunRPC]
	private void DefusingBombMsg()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xD1C71C", Offset = "0xD1C71C", VA = "0xD1C71C")]
	public void CancelDefusingBomb()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xD1C810", Offset = "0xD1C810", VA = "0xD1C810")]
	[PunRPC]
	private void CancelDefusingBombMsg()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xD1C85C", Offset = "0xD1C85C", VA = "0xD1C85C")]
	public void DetonateBomb()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xD1C95C", Offset = "0xD1C95C", VA = "0xD1C95C")]
	[PunRPC]
	private void DetonateBombMsg()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xD1CB58", Offset = "0xD1CB58", VA = "0xD1CB58")]
	public void ResetBombPos()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xD1CB94", Offset = "0xD1CB94", VA = "0xD1CB94")]
	public void TriggerEnterBomb()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xD1CCD8", Offset = "0xD1CCD8", VA = "0xD1CCD8")]
	private void TriggerExitBomb()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xD1AE8C", Offset = "0xD1AE8C", VA = "0xD1AE8C")]
	private void BeepOn()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xD1B024", Offset = "0xD1B024", VA = "0xD1B024")]
	private void BeepOff()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xD1CD18", Offset = "0xD1CD18", VA = "0xD1CD18")]
	public void PlantBombArea()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xD1CDE0", Offset = "0xD1CDE0", VA = "0xD1CDE0")]
	[PunRPC]
	private void PlantBombAreaMsg()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xD1CF8C", Offset = "0xD1CF8C", VA = "0xD1CF8C")]
	public void TriggerEnterPlantArea()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xD1D050", Offset = "0xD1D050", VA = "0xD1D050")]
	private void TriggerExitPlantArea()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xD1D088", Offset = "0xD1D088", VA = "0xD1D088")]
	public void CompleteReset()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xD1D2D0", Offset = "0xD1D2D0", VA = "0xD1D2D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xD1D418", Offset = "0xD1D418", VA = "0xD1D418")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xD1ADB4", Offset = "0xD1ADB4", VA = "0xD1ADB4")]
	public void DisableObjectCompletely()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xD1D580", Offset = "0xD1D580", VA = "0xD1D580")]
	public void EnableObject()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xD1D160", Offset = "0xD1D160", VA = "0xD1D160")]
	public void SetBombSiteMarker()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xD1D798", Offset = "0xD1D798", VA = "0xD1D798")]
	public DefenseTarget()
	{
	}
}
[Token(Token = "0x20002A3")]
public class SNDConfigs : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BombSiteSetUp[] setUps;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpawnArea[] defenseSpawns;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpawnArea[] attackSpawns;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] spectatorPositions;

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LevelManager levelManager;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BombSiteSetUp currentSetUp;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int currentSpectatorPos;

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xD1D7CC", Offset = "0xD1D7CC", VA = "0xD1D7CC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xD1D848", Offset = "0xD1D848", VA = "0xD1D848")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xD1DA34", Offset = "0xD1DA34", VA = "0xD1DA34")]
	public void SetSetUp(int index, bool completeReset = true)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xD1E160", Offset = "0xD1E160", VA = "0xD1E160")]
	public int GetRandomSetUpIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xD1DE70", Offset = "0xD1DE70", VA = "0xD1DE70")]
	public BombSiteSetUp GetSetUp(int index)
	{
		return null;
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xD1DDB0", Offset = "0xD1DDB0", VA = "0xD1DDB0")]
	public void TurnOnSetup(int index)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xD1E184", Offset = "0xD1E184", VA = "0xD1E184")]
	public Transform GetNextSpectatorTransform(bool prev = false)
	{
		return null;
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xD1E204", Offset = "0xD1E204", VA = "0xD1E204")]
	public SNDConfigs()
	{
	}
}
[Token(Token = "0x20002A4")]
public enum Platform
{
	[Token(Token = "0x40019CD")]
	PS4,
	[Token(Token = "0x40019CE")]
	PC,
	[Token(Token = "0x40019CF")]
	QUEST,
	[Token(Token = "0x40019D0")]
	PICO_GLOBAL,
	[Token(Token = "0x40019D1")]
	PICO_CHINA,
	[Token(Token = "0x40019D2")]
	PS5
}
[Serializable]
[Token(Token = "0x20002A5")]
public class AlvoFriend
{
	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int version;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_FID;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_FIDInt;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_UID;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_DisplayName;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_LastPolled;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_Online;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool m_Ingame;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_PhotonUID;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Platform m_Platform;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public byte[] m_AvatarArray;

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture m_Avatar;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_AvatarTexture2d;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite m_AvatarSprite;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_PlatformID;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Obsolete("Display name will hold the name of all platforms")]
	public string m_SonyPSName;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Obsolete("m_PlatformID will be the universal platform id variable")]
	public string m_SonyOnlineID;

	[Token(Token = "0x40019E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string AvatarUrl;

	[Token(Token = "0x40019E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool m_Blocked;

	[Token(Token = "0x40019E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string m_CountryCode;

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xD1E214", Offset = "0xD1E214", VA = "0xD1E214")]
	public AlvoFriend(AlvoFriend data)
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xD1E2DC", Offset = "0xD1E2DC", VA = "0xD1E2DC")]
	public AlvoFriend()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xD1E3B0", Offset = "0xD1E3B0", VA = "0xD1E3B0")]
	public byte[] Serialize()
	{
		return null;
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xD1E508", Offset = "0xD1E508", VA = "0xD1E508")]
	public void Deserialize(byte[] bytes)
	{
	}
}
[Token(Token = "0x20002A6")]
public enum UpdateTypes
{
	[Token(Token = "0x40019E8")]
	PlayerJoin,
	[Token(Token = "0x40019E9")]
	PlayerLeave,
	[Token(Token = "0x40019EA")]
	PartyLeaderChanged,
	[Token(Token = "0x40019EB")]
	PlayerKicked
}
[Token(Token = "0x20002A7")]
public enum JoiningResponse
{
	[Token(Token = "0x40019ED")]
	JoinedCorrectly,
	[Token(Token = "0x40019EE")]
	PartyIsFull,
	[Token(Token = "0x40019EF")]
	GameIsFull,
	[Token(Token = "0x40019F0")]
	NoResponse,
	[Token(Token = "0x40019F1")]
	RoomNotAvailable,
	[Token(Token = "0x40019F2")]
	VersionMismatch,
	[Token(Token = "0x40019F3")]
	MatchNoLongerExist,
	[Token(Token = "0x40019F4")]
	RoomIsClose,
	[Token(Token = "0x40019F5")]
	CrossplayParty,
	[Token(Token = "0x40019F6")]
	PlayerHasCrossplayDisabled,
	[Token(Token = "0x40019F7")]
	RoomIsNovice,
	[Token(Token = "0x40019F8")]
	RoomIsPrivate
}
[Token(Token = "0x20002A8")]
public class AlvoPresence
{
	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_UID;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sony.NP.Core.NpAccountId m_ID;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sony.NP.Core.OnlineStatus m_OnlinePS4;

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xD1E6BC", Offset = "0xD1E6BC", VA = "0xD1E6BC")]
	public AlvoPresence()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A9")]
public struct Avatar
{
	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite sprite;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Texture2D texture2D;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int FID;
}
[Token(Token = "0x20002AA")]
public struct JoinRoomInfo
{
	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string RoomName;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool TeamSplited;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool delayedJoin;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string senderFID;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int server;

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xD1E6C4", Offset = "0xD1E6C4", VA = "0xD1E6C4")]
	public byte[] SerializeRoomOptions(bool teamSplited = false)
	{
		return null;
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xD1E7C8", Offset = "0xD1E7C8", VA = "0xD1E7C8")]
	public void Deserialize(byte[] bytes)
	{
	}
}
[Serializable]
[Token(Token = "0x20002AB")]
public class PartyNetData
{
	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int partyLeaderFID;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public int leaderPhotonId;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<int> partyMembers;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int currentTeam;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public int totalPlayers;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public int leaderCurrentTeam;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int team1Count;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int team2Count;

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xD1E8C4", Offset = "0xD1E8C4", VA = "0xD1E8C4")]
	public PartyNetData()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xD1E944", Offset = "0xD1E944", VA = "0xD1E944")]
	public static List<PartyNetData> DeserializeParties(byte[] data)
	{
		return null;
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xD1EDE4", Offset = "0xD1EDE4", VA = "0xD1EDE4")]
	public static byte[] SerializeParties(List<PartyNetData> parties, byte team1Count, byte team2Count)
	{
		return null;
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xD1F114", Offset = "0xD1F114", VA = "0xD1F114")]
	public byte[] SerializeParty(PartyNetData party)
	{
		return null;
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xD1F004", Offset = "0xD1F004", VA = "0xD1F004")]
	public static byte[] SerializePartyMembers(List<int> members)
	{
		return null;
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xD1EC30", Offset = "0xD1EC30", VA = "0xD1EC30")]
	public static List<int> DeserializePartyMembers(byte[] data)
	{
		return null;
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xD1F254", Offset = "0xD1F254", VA = "0xD1F254")]
	public byte[] SerializeParty()
	{
		return null;
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xD1F390", Offset = "0xD1F390", VA = "0xD1F390")]
	public void DeserializeParty(byte[] bytes)
	{
	}
}
[Token(Token = "0x20002AC")]
public class PartyTeamUpdate
{
	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int leaderFID;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public byte newTeam;

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xD1F580", Offset = "0xD1F580", VA = "0xD1F580")]
	public byte[] Serialize()
	{
		return null;
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xD1F648", Offset = "0xD1F648", VA = "0xD1F648")]
	public void Deserialize(byte[] bytes)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xD1F710", Offset = "0xD1F710", VA = "0xD1F710")]
	public PartyTeamUpdate()
	{
	}
}
[Serializable]
[Token(Token = "0x20002AD")]
public class StagedPlayer
{
	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_FID;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_FIDInt;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Loadout m_Loadout;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public byte m_SkinIndex;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AlvoFriend m_PlayerInfo;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_Leader;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_Joined;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public byte m_Level;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_Experience;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_Version;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_Crossplay;

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xD1F718", Offset = "0xD1F718", VA = "0xD1F718")]
	public static byte[] SerializeStagedPlayer(StagedPlayer stagedPlayer, AlvoFriend alvoFriend, byte skinIndex, string version, bool crossplay)
	{
		return null;
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xD1F8C4", Offset = "0xD1F8C4", VA = "0xD1F8C4")]
	public static StagedPlayer DeserializeStagedPlayer(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xD1FAE8", Offset = "0xD1FAE8", VA = "0xD1FAE8")]
	public static byte[] SerializeStagedPlayersList(List<StagedPlayer> stagedPlayers, PlayerLocalData playerLocalData)
	{
		return null;
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xD1FD4C", Offset = "0xD1FD4C", VA = "0xD1FD4C")]
	public static List<StagedPlayer> DeserializeStagedPlayersList(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xD1FA84", Offset = "0xD1FA84", VA = "0xD1FA84")]
	public StagedPlayer()
	{
	}
}
[Token(Token = "0x20002AE")]
public class TitleRoomManager : PunBehaviour
{
	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlayerProfile> allPlayerProfiles;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerLocalData m_LocalData;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<VoiceChatTitle> voicesSpawned;

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xD20008", Offset = "0xD20008", VA = "0xD20008")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xD20188", Offset = "0xD20188", VA = "0xD20188")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xD20264", Offset = "0xD20264", VA = "0xD20264")]
	public void ResetRoom()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xD20458", Offset = "0xD20458", VA = "0xD20458")]
	public void Init()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xD205C8", Offset = "0xD205C8", VA = "0xD205C8")]
	public void UpdatePlayerProfile()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xD206C8", Offset = "0xD206C8", VA = "0xD206C8")]
	[PunRPC]
	private void UpdateProfilesTitleMsg(byte[] byteArray)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xD202E8", Offset = "0xD202E8", VA = "0xD202E8")]
	private void AddProfile(PlayerProfile playerProfile)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xD206EC", Offset = "0xD206EC", VA = "0xD206EC")]
	public PlayerProfile GetPlayerProfile(int id)
	{
		return null;
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xD207B0", Offset = "0xD207B0", VA = "0xD207B0")]
	public void SetSpeakerIcon(Image bubble, string FID)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xD20874", Offset = "0xD20874", VA = "0xD20874")]
	public void SetSlashIcon(Image slash, string FID)
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xD20938", Offset = "0xD20938", VA = "0xD20938")]
	public VoiceChatTitle GetVoiceChat(string FID)
	{
		return null;
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xD20A04", Offset = "0xD20A04", VA = "0xD20A04", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xD20AF4", Offset = "0xD20AF4", VA = "0xD20AF4", Slot = "48")]
	public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xD20C4C", Offset = "0xD20C4C", VA = "0xD20C4C")]
	public TitleRoomManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B0")]
public class SpawnArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002B1")]
	public struct DistanceCheckInfo
	{
		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int EnemyCountInProximity;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ClosestEnemyDistance;
	}

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Used in Zombies")]
	public bool isVisible;

	[Token(Token = "0x4001A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float score;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_Transform;

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_ShowGizmo;

	[Token(Token = "0x4001A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Color m_gizmoColor;

	[Token(Token = "0x17000227")]
	public Vector3 EyePoint
	{
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xD20D64", Offset = "0xD20D64", VA = "0xD20D64")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xD20D70", Offset = "0xD20D70", VA = "0xD20D70")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000228")]
	public Vector3 GroundPoint
	{
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xD20D7C", Offset = "0xD20D7C", VA = "0xD20D7C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xD20D88", Offset = "0xD20D88", VA = "0xD20D88")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xD20D94", Offset = "0xD20D94", VA = "0xD20D94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xD1DEA0", Offset = "0xD1DEA0", VA = "0xD1DEA0")]
	public void SetUp()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xD20DB4", Offset = "0xD20DB4", VA = "0xD20DB4")]
	public bool CheckSpawnPointDistance(List<PlayerData> players, float minSpawnDistance, bool isBot, int team, ref Vector3 spawnPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xD21120", Offset = "0xD21120", VA = "0xD21120")]
	public DistanceCheckInfo DoDistanceCheck(List<PlayerData> players, int myTeam, float enemyProximityThreshold, [Optional] List<Vector3> extraPointsToAvoid)
	{
		return default(DistanceCheckInfo);
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xD21308", Offset = "0xD21308", VA = "0xD21308")]
	private void CheckPointDistance(Vector3 point, float proximityThresholdSqr, ref DistanceCheckInfo checkInfo)
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xD21358", Offset = "0xD21358", VA = "0xD21358")]
	public int GetEnemyCountInSight(List<PlayerData> players, int team, LayerMask mask, bool debug = false, [Optional] List<Vector3> extraPointsToAvoid)
	{
		return default(int);
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xD21798", Offset = "0xD21798", VA = "0xD21798")]
	public bool IsEnemyInSight(List<PlayerData> players, int team, LayerMask mask, bool debug = false, [Optional] List<Vector3> extraPointsToAvoid)
	{
		return default(bool);
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xD214EC", Offset = "0xD214EC", VA = "0xD214EC")]
	private bool IsPointInSight(Vector3 point, LayerMask mask, bool debug = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xD2190C", Offset = "0xD2190C", VA = "0xD2190C")]
	public SpawnArea()
	{
	}
}
[Token(Token = "0x20002B2")]
public class StatLabel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002B3")]
	[CompilerGenerated]
	private sealed class <DoSetStats>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StatLabel <>4__this;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string stat1;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string stat2;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string stat3;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string stat4;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D image;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0xD21CB8", Offset = "0xD21CB8", VA = "0xD21CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xD21D00", Offset = "0xD21D00", VA = "0xD21D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xD219F4", Offset = "0xD219F4", VA = "0xD219F4")]
		[DebuggerHidden]
		public <DoSetStats>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xD21A24", Offset = "0xD21A24", VA = "0xD21A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xD21A28", Offset = "0xD21A28", VA = "0xD21A28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xD21CC0", Offset = "0xD21CC0", VA = "0xD21CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Name;

	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text m_TextName;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI ColumnStat1;

	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI ColumnStat2;

	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI ColumnStat3;

	[Token(Token = "0x4001A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI ColumnStat4;

	[Token(Token = "0x4001A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D DefaultAvatar;

	[Token(Token = "0x4001A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image Avatar;

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xD21928", Offset = "0xD21928", VA = "0xD21928")]
	public void SetStats(StartupManager startupManager, string name, string stat1, string stat2, string stat3, string stat4, [Optional] Texture2D image)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xD21950", Offset = "0xD21950", VA = "0xD21950")]
	[IteratorStateMachine(typeof(<DoSetStats>d__9))]
	private IEnumerator DoSetStats(StartupManager startupManager, string name, string stat1, string stat2, string stat3, string stat4, [Optional] Texture2D image)
	{
		return null;
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xD21A1C", Offset = "0xD21A1C", VA = "0xD21A1C")]
	public StatLabel()
	{
	}
}
[Token(Token = "0x20002B4")]
public class TestEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002B5")]
	public delegate void Test();

	[Token(Token = "0x14000007")]
	public static event Test test
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0xD21D08", Offset = "0xD21D08", VA = "0xD21D08")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001109")]
		[Address(RVA = "0xD21DC0", Offset = "0xD21DC0", VA = "0xD21DC0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xD21E78", Offset = "0xD21E78", VA = "0xD21E78")]
	private void Update()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xD21EE4", Offset = "0xD21EE4", VA = "0xD21EE4")]
	public TestEvent()
	{
	}
}
[Token(Token = "0x20002B6")]
public class TestRay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform main;

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xD21FE8", Offset = "0xD21FE8", VA = "0xD21FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xD21FEC", Offset = "0xD21FEC", VA = "0xD21FEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xD22288", Offset = "0xD22288", VA = "0xD22288")]
	public TestRay()
	{
	}
}
[Token(Token = "0x20002B7")]
public class TestReorder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] intArray;

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xD22290", Offset = "0xD22290", VA = "0xD22290")]
	private void Start()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xD22294", Offset = "0xD22294", VA = "0xD22294")]
	private void Reorder()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xD22334", Offset = "0xD22334", VA = "0xD22334")]
	public TestReorder()
	{
	}
}
[Token(Token = "0x20002B8")]
public class TestShaderSwap : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> m_Materials;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer[] m_MeshRenderers;

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_Enable;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_SetColor;

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xD223B8", Offset = "0xD223B8", VA = "0xD223B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xD22500", Offset = "0xD22500", VA = "0xD22500")]
	private void Update()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xD2263C", Offset = "0xD2263C", VA = "0xD2263C")]
	public TestShaderSwap()
	{
	}
}
[Token(Token = "0x20002B9")]
public class TestVRMarker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001119")]
	[Address(RVA = "0xD22644", Offset = "0xD22644", VA = "0xD22644")]
	private void Start()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xD22648", Offset = "0xD22648", VA = "0xD22648")]
	private void Update()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xD2264C", Offset = "0xD2264C", VA = "0xD2264C")]
	public TestVRMarker()
	{
	}
}
[Token(Token = "0x20002BA")]
public class zTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600111C")]
	[Address(RVA = "0xD22654", Offset = "0xD22654", VA = "0xD22654")]
	private void Start()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xD22658", Offset = "0xD22658", VA = "0xD22658")]
	private void Update()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xD2274C", Offset = "0xD2274C", VA = "0xD2274C")]
	public zTest()
	{
	}
}
[Token(Token = "0x20002BB")]
[ExecuteInEditMode]
public class FindAndReplace : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600111F")]
	[Address(RVA = "0xD22754", Offset = "0xD22754", VA = "0xD22754")]
	public FindAndReplace()
	{
	}
}
[Token(Token = "0x20002BC")]
public class ClickGameLabel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartupManager m_StartupManager;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text m_Title;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text m_WorldNumberText;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text m_PlayerCount;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text m_MapText;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_WorldNumber;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_GameType;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_Map;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_GameTime;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_TotalKills;

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xD2275C", Offset = "0xD2275C", VA = "0xD2275C")]
	public void SetupGamesLabel(string title, int worldNumber, int gameType, int map, StartupManager startupManager, int playerCount, int totalKills, int gameTime)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xD229B4", Offset = "0xD229B4", VA = "0xD229B4")]
	public ClickGameLabel()
	{
	}
}
[Token(Token = "0x20002BD")]
public class DamageIndicator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_Direction;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image m_Indicator;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_ShooterPosition;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_WhereIamShot;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_RelativePosition;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_Right;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion m_Rotation;

	[Token(Token = "0x4001A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_Alpha;

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xD229BC", Offset = "0xD229BC", VA = "0xD229BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xD22B28", Offset = "0xD22B28", VA = "0xD22B28")]
	public void HitPlayer(Vector3 shooter)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xD22C64", Offset = "0xD22C64", VA = "0xD22C64")]
	public DamageIndicator()
	{
	}
}
[Token(Token = "0x20002BE")]
public class DamageIndicatorTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform me;

	[Token(Token = "0x4001A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform m_Direction;

	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image m_Indicator;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_ShooterPosition;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_WhereIamShot;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_RelativePosition;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_Alpha;

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xD22C74", Offset = "0xD22C74", VA = "0xD22C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xD22E2C", Offset = "0xD22E2C", VA = "0xD22E2C")]
	public DamageIndicatorTest()
	{
	}
}
[Token(Token = "0x20002BF")]
public class EndGameShowCase : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001127")]
	[Address(RVA = "0xD22E3C", Offset = "0xD22E3C", VA = "0xD22E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xD22E40", Offset = "0xD22E40", VA = "0xD22E40")]
	private void Update()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xD22E44", Offset = "0xD22E44", VA = "0xD22E44")]
	public EndGameShowCase()
	{
	}
}
[Token(Token = "0x20002C0")]
public class Loadingdots : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002C1")]
	[CompilerGenerated]
	private sealed class <Runningdots>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Loadingdots <>4__this;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0xD23100", Offset = "0xD23100", VA = "0xD23100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0xD23148", Offset = "0xD23148", VA = "0xD23148", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xD22EDC", Offset = "0xD22EDC", VA = "0xD22EDC")]
		[DebuggerHidden]
		public <Runningdots>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xD22F70", Offset = "0xD22F70", VA = "0xD22F70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xD22F74", Offset = "0xD22F74", VA = "0xD22F74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xD23108", Offset = "0xD23108", VA = "0xD23108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text dots;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds waitASecond;

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xD22E4C", Offset = "0xD22E4C", VA = "0xD22E4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xD22ED4", Offset = "0xD22ED4", VA = "0xD22ED4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xD22E6C", Offset = "0xD22E6C", VA = "0xD22E6C")]
	[IteratorStateMachine(typeof(<Runningdots>d__4))]
	private IEnumerator Runningdots()
	{
		return null;
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xD22F04", Offset = "0xD22F04", VA = "0xD22F04")]
	public Loadingdots()
	{
	}
}
[Token(Token = "0x20002C2")]
public class MarkerManagers : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_MarkerSpawn;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_TeamMarker;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_BombMarker;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_SiteMarker;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask m_MarkerMask;

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xD23150", Offset = "0xD23150", VA = "0xD23150")]
	private void Start()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xD231F4", Offset = "0xD231F4", VA = "0xD231F4")]
	public MarkerManagers()
	{
	}
}
[Token(Token = "0x20002C3")]
public class ModWeapon : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_Weapons;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ModSkins[] modSkins;

	[Token(Token = "0x4001A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_Root;

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xD231FC", Offset = "0xD231FC", VA = "0xD231FC")]
	public void UpdateSkin(Skins skin)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xD233A0", Offset = "0xD233A0", VA = "0xD233A0")]
	public void DisableAllWeapons()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xD23404", Offset = "0xD23404", VA = "0xD23404")]
	public ModWeapon()
	{
	}
}
[Token(Token = "0x20002C4")]
public class NameDisplay : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StatLabel StatLabel;

	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI NameLabel;

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public StartupManager StartupManager;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CanvasClass CanvasClass;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool InGame;

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xD2340C", Offset = "0xD2340C", VA = "0xD2340C")]
	public void Init(bool inGame, [Optional] StartupManager startupManager)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xD23488", Offset = "0xD23488", VA = "0xD23488", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xD23500", Offset = "0xD23500", VA = "0xD23500", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xD23580", Offset = "0xD23580", VA = "0xD23580")]
	public NameDisplay()
	{
	}
}
[Token(Token = "0x20002C5")]
public class SearchDestroyMarker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600113D")]
	[Address(RVA = "0xD23588", Offset = "0xD23588", VA = "0xD23588")]
	public SearchDestroyMarker()
	{
	}
}
[Token(Token = "0x20002C6")]
public class TeamMarker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600113E")]
	[Address(RVA = "0xD23590", Offset = "0xD23590", VA = "0xD23590")]
	public TeamMarker()
	{
	}
}
[Token(Token = "0x20002C7")]
public class LanguageChanger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button leftBtn;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button rightBtn;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LanguageTextDatabase languageDb;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int languageCount;

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xD23598", Offset = "0xD23598", VA = "0xD23598")]
	private void Start()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xD236B4", Offset = "0xD236B4", VA = "0xD236B4")]
	public void ChangeLeft()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xD2376C", Offset = "0xD2376C", VA = "0xD2376C")]
	public void ChangeRight()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xD23824", Offset = "0xD23824", VA = "0xD23824")]
	public void ChangeLoop()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xD23650", Offset = "0xD23650", VA = "0xD23650")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xD238BC", Offset = "0xD238BC", VA = "0xD238BC")]
	public LanguageChanger()
	{
	}
}
[Token(Token = "0x20002C8")]
public class UIPlayerWeaponMount : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_WeaponHand;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_Pistol;

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xD238C4", Offset = "0xD238C4", VA = "0xD238C4")]
	public UIPlayerWeaponMount()
	{
	}
}
[Token(Token = "0x20002C9")]
public class WorldSpaceMarker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_MarkerFollowTransform;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_LookAtTransform;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerData playerData;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_MarkerPrentGo;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image m_VoiceIndicator;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image m_VoiceIndicatorDeathUI;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image m_Marker;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform t;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool disableMarker;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TMP_Text playerName;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_Text playerDeathName;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_AdjustSize;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_VerticalOffset;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_DeathUILocalVerticalOffset;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform m_RectTransform;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject nameGo;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject markerGo;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject skullGo;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject deathGo;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject bombGo;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject bleedingOutGO;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject revivePromptGo;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image reviveProgress;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image bleedoutProgress;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool death;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool receivingDamage;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public bool enemyMarked;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	public bool friendly;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool inParty;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string FID;

	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Bomb and plant site")]
	[Space]
	public TMP_Text siteText;

	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool isBomb;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool isPlantSite;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	public bool isSiteA;

	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[Space]
	[Header("Timing")]
	public float minSize;

	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float minDistance;

	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float minDirection;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float medDirection;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float minAlpha;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float medAlpha;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float lowAlpha;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Space]
	[Header("Colors")]
	public Color friendlyColor;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color partyColor;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color receivingDmgColor;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Color enemyColor;

	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Color bombColor;

	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Color plantSiteColor;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Color plantedColor;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Space]
	private float distance;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector3 direction;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float dotProd;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Vector3 gameWorldPosition;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float recDamageCount;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float markedEnemyCount;

	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float deathTimer;

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float damageIndicatorDuration;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float markedEnemyDuration;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float deathMarkerDuration;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool showDeathMarker;

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xD238CC", Offset = "0xD238CC", VA = "0xD238CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xD23994", Offset = "0xD23994", VA = "0xD23994")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xD23ADC", Offset = "0xD23ADC", VA = "0xD23ADC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xD23D94", Offset = "0xD23D94", VA = "0xD23D94")]
	private void DisableMarker()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xD23E00", Offset = "0xD23E00", VA = "0xD23E00")]
	public void UpdateSpread()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xD24258", Offset = "0xD24258", VA = "0xD24258")]
	public void UpdateMarker(float dt)
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xD245FC", Offset = "0xD245FC", VA = "0xD245FC")]
	public void SetHitMarker(Transform playerTransform, string name, Transform lookAt, bool teamMate, PlayerData data, string FID = "")
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xD246CC", Offset = "0xD246CC", VA = "0xD246CC")]
	public void SetFriendly(bool teamMate)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xD248E4", Offset = "0xD248E4", VA = "0xD248E4")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xD24908", Offset = "0xD24908", VA = "0xD24908")]
	public void UpdatePartyStatus()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xD249C4", Offset = "0xD249C4", VA = "0xD249C4")]
	public void MarkEnemy()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xD24A48", Offset = "0xD24A48", VA = "0xD24A48")]
	public void ReceivingDamage()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xD24AC8", Offset = "0xD24AC8", VA = "0xD24AC8")]
	public void Kill(bool showKillMarker = true, bool bleed = false)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xD24C20", Offset = "0xD24C20", VA = "0xD24C20")]
	public void CanRevive(bool showRevivePrompt, bool showReviveProgress)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xD23CB8", Offset = "0xD23CB8", VA = "0xD23CB8")]
	public void DisableReviveMarker()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xD23C24", Offset = "0xD23C24", VA = "0xD23C24")]
	public void SetReviveProgress(float _progress)
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xD24CA8", Offset = "0xD24CA8", VA = "0xD24CA8")]
	public void SetBleedoutProgress(float value)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xD24CC4", Offset = "0xD24CC4", VA = "0xD24CC4")]
	public void MakeSpectator()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xD24D14", Offset = "0xD24D14", VA = "0xD24D14")]
	public void Revive()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xD1C5B0", Offset = "0xD1C5B0", VA = "0xD1C5B0")]
	public void PickBomb()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xD1BEB0", Offset = "0xD1BEB0", VA = "0xD1BEB0")]
	public void DropBomb()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xD24E88", Offset = "0xD24E88", VA = "0xD24E88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xD1B7C0", Offset = "0xD1B7C0", VA = "0xD1B7C0")]
	public void SetBombMarker(Transform bombTransform, bool onOffense, Transform lookAt)
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xD1D5A0", Offset = "0xD1D5A0", VA = "0xD1D5A0")]
	public void SetSiteMarker(Transform siteTransform, bool onOffense, Transform lookAt, bool isSiteA)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xD1CE7C", Offset = "0xD1CE7C", VA = "0xD1CE7C")]
	public void PlantBomb()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xD1CF4C", Offset = "0xD1CF4C", VA = "0xD1CF4C")]
	public void DisablebombMarker()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xD24EF0", Offset = "0xD24EF0", VA = "0xD24EF0")]
	public WorldSpaceMarker()
	{
	}
}
[Token(Token = "0x20002CA")]
public class CurvedElements : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CurvedUIUpdater curvedUIUpdater;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CurvedUIVertexEffect[] _curvedVertex;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CurvedUITMP[] _curvedTMP;

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xD24FC0", Offset = "0xD24FC0", VA = "0xD24FC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xD25030", Offset = "0xD25030", VA = "0xD25030")]
	public void AddShopItemElements()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xD251B4", Offset = "0xD251B4", VA = "0xD251B4")]
	public void RemoveShopItem()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xD25364", Offset = "0xD25364", VA = "0xD25364")]
	public CurvedElements()
	{
	}
}
[Token(Token = "0x20002CB")]
[RequireComponent(typeof(Camera))]
public class VignettingVR : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002CC")]
	[CompilerGenerated]
	private sealed class <WaitBeforeStunFade>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VignettingVR <>4__this;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0xD25ECC", Offset = "0xD25ECC", VA = "0xD25ECC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0xD25F14", Offset = "0xD25F14", VA = "0xD25F14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xD257BC", Offset = "0xD257BC", VA = "0xD257BC")]
		[DebuggerHidden]
		public <WaitBeforeStunFade>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xD25E0C", Offset = "0xD25E0C", VA = "0xD25E0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xD25E10", Offset = "0xD25E10", VA = "0xD25E10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xD25ED4", Offset = "0xD25ED4", VA = "0xD25ED4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AB2")]
	private const string DEBUG_VIGNETTING_MASK = "DEBUG_SHOW_VIGNETTE";

	[Token(Token = "0x4001AB3")]
	private const float VIGNETTING_DEPTH = 10f;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float vignetteReductionTimeMultiplier;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool flashStunEnable;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float flashStunIntensity;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float flashStunDelay;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float flashFadeSpeed;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool vignettingEnable;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float vignettingIntensity;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float redVignetteMaxIntensity;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float redVignetteIntensity;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color HealthVignetteColor;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color AltHealthVignetteColor;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color flashStunColor;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 vignetteWorldSpaceDirection;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector4[] viewportSpaceOffset;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Camera currentCamera;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material material;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader m_Shader;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool useAltBlood;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool flashDelaydone;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool readyForRecovery;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float postFlashMultiplier;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int FlashOverlayIntensity;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int VignetteViewportSpaceOffset;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int Color1;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int FlashColor;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int VignettingIntensity;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int HealthVigneteIntensity;

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xD2536C", Offset = "0xD2536C", VA = "0xD2536C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xD25470", Offset = "0xD25470", VA = "0xD25470")]
	private Matrix4x4 GetWorldToClipMatrix(Camera.StereoscopicEye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xD25530", Offset = "0xD25530", VA = "0xD25530")]
	public void SetRedVignette(float healthPorcentage)
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xD25548", Offset = "0xD25548", VA = "0xD25548")]
	public void ReduceRedvignette(float deltaTime)
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xD25574", Offset = "0xD25574", VA = "0xD25574")]
	private static Vector4 NormalizeScreenSpaceCords(Vector4 coords)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xD255F0", Offset = "0xD255F0", VA = "0xD255F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xD2568C", Offset = "0xD2568C", VA = "0xD2568C")]
	public void SetFlashStun(float multiplier)
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xD257A4", Offset = "0xD257A4", VA = "0xD257A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xD257B4", Offset = "0xD257B4", VA = "0xD257B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xD2573C", Offset = "0xD2573C", VA = "0xD2573C")]
	[IteratorStateMachine(typeof(<WaitBeforeStunFade>d__38))]
	private IEnumerator WaitBeforeStunFade()
	{
		return null;
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xD257E4", Offset = "0xD257E4", VA = "0xD257E4")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xD25C08", Offset = "0xD25C08", VA = "0xD25C08")]
	public VignettingVR()
	{
	}
}
[Token(Token = "0x20002CD")]
public class VoiceButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_ID;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_PlayerID;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_Team;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button m_Button;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image m_SlashImage;

	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EndGameSystem endGameSystem;

	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image m_Bubble;

	[Token(Token = "0x4001AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image m_MarkerBubble;

	[Token(Token = "0x4001ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VoiceChat m_VoiceChat;

	[Token(Token = "0x4001ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_IsBot;

	[Token(Token = "0x4001ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool m_InUse;

	[Token(Token = "0x4001ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ulong m_ps4ID;

	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasSubscribeToEndGameSystem;

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xD25F1C", Offset = "0xD25F1C", VA = "0xD25F1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xD26038", Offset = "0xD26038", VA = "0xD26038")]
	public void Set(int id, EndGameSystem egs, int playerID, bool isBot, int team, ulong ps4ID = 0uL)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xD26238", Offset = "0xD26238", VA = "0xD26238")]
	public void ButtonPress()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xD2638C", Offset = "0xD2638C", VA = "0xD2638C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xD26494", Offset = "0xD26494", VA = "0xD26494")]
	private void OnVoicesSpawnedUpdated()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xD2651C", Offset = "0xD2651C", VA = "0xD2651C")]
	public VoiceButton()
	{
	}
}
[Token(Token = "0x20002CE")]
public class VoiceChat : PunBehaviour
{
	[Token(Token = "0x20002CF")]
	[CompilerGenerated]
	private sealed class <SetUpCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoiceChat <>4__this;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <hasProfile>5__2;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0xD27314", Offset = "0xD27314", VA = "0xD27314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0xD2735C", Offset = "0xD2735C", VA = "0xD2735C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xD2677C", Offset = "0xD2677C", VA = "0xD2677C")]
		[DebuggerHidden]
		public <SetUpCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xD271C4", Offset = "0xD271C4", VA = "0xD271C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xD271C8", Offset = "0xD271C8", VA = "0xD271C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xD2731C", Offset = "0xD2731C", VA = "0xD2731C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource aSource;

	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_ID;

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_PlayerID;

	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_Team;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_Enemy;

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EndGameSystem gameSystem;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VoiceButton m_VoiceButton;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PhotonVoiceRecorder PhotonVoiceRecorder;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PhotonVoiceSpeaker PhotonVoiceSpeaker;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_VoiceOn;

	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool m_Locked;

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool m_Blocked;

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool init;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image PlayerChatBubble;

	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image PlayerChatBubbleDeathUI;

	[Token(Token = "0x4001AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool TeamChatReady;

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xD26524", Offset = "0xD26524", VA = "0xD26524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xD266F4", Offset = "0xD266F4", VA = "0xD266F4")]
	public void RunSetUp()
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xD26714", Offset = "0xD26714", VA = "0xD26714")]
	[IteratorStateMachine(typeof(<SetUpCoroutine>d__18))]
	private IEnumerator SetUpCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xD267A4", Offset = "0xD267A4", VA = "0xD267A4")]
	public void Init()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xD26C98", Offset = "0xD26C98", VA = "0xD26C98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xD26D8C", Offset = "0xD26D8C", VA = "0xD26D8C")]
	public void TeamVoiceManagment(bool enemy)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xD26DAC", Offset = "0xD26DAC", VA = "0xD26DAC")]
	public void EnableVoice()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xD26BA0", Offset = "0xD26BA0", VA = "0xD26BA0")]
	public void VoiceOn()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xD269B0", Offset = "0xD269B0", VA = "0xD269B0")]
	public void VoiceOff()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xD26FD0", Offset = "0xD26FD0", VA = "0xD26FD0")]
	public void EnableVoiceBubble()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xD27070", Offset = "0xD27070", VA = "0xD27070")]
	public void SetupPlayerChatBubble(Image playerChatBubble, Image playerChatBubbleDeath)
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xD27080", Offset = "0xD27080", VA = "0xD27080")]
	public void EnableVoiceBubblePlayer()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xD271A4", Offset = "0xD271A4", VA = "0xD271A4")]
	public VoiceChat()
	{
	}
}
[Token(Token = "0x20002D0")]
public class VoiceChatManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001192")]
	[Address(RVA = "0xD27364", Offset = "0xD27364", VA = "0xD27364")]
	public VoiceChatManager()
	{
	}
}
[Token(Token = "0x20002D1")]
public class VoiceChatTitle : PunBehaviour
{
	[Token(Token = "0x20002D2")]
	[CompilerGenerated]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoiceChatTitle <>4__this;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <hasProfile>5__2;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0xD27CB0", Offset = "0xD27CB0", VA = "0xD27CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xD27CF8", Offset = "0xD27CF8", VA = "0xD27CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xD273D4", Offset = "0xD273D4", VA = "0xD273D4")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xD27920", Offset = "0xD27920", VA = "0xD27920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xD27924", Offset = "0xD27924", VA = "0xD27924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xD27CB8", Offset = "0xD27CB8", VA = "0xD27CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource aSource;

	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PhotonVoiceRecorder PhotonVoiceRecorder;

	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhotonVoiceSpeaker PhotonVoiceSpeaker;

	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_ID;

	[Token(Token = "0x4001AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_FID;

	[Token(Token = "0x4001AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool init;

	[Token(Token = "0x4001AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_PlayerID;

	[Token(Token = "0x4001AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerLocalData m_LocalData;

	[Token(Token = "0x4001AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TitleRoomManager roomManager;

	[Token(Token = "0x4001AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image voiceBubble;

	[Token(Token = "0x4001AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image voiceSlash;

	[Token(Token = "0x4001AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AlvoPartySystemUI alvoPartyUI;

	[Token(Token = "0x4001AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_Blocked;

	[Token(Token = "0x4001B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool m_VoiceOn;

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xD2736C", Offset = "0xD2736C", VA = "0xD2736C")]
	[IteratorStateMachine(typeof(<Start>d__14))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xD273FC", Offset = "0xD273FC", VA = "0xD273FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xD274D4", Offset = "0xD274D4", VA = "0xD274D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xD20090", Offset = "0xD20090", VA = "0xD20090")]
	public void UpdateVoiceBubble()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xD27530", Offset = "0xD27530", VA = "0xD27530")]
	public void EnableVoice()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xD2765C", Offset = "0xD2765C", VA = "0xD2765C")]
	private void VoiceOn()
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xD2773C", Offset = "0xD2773C", VA = "0xD2773C")]
	public void VoiceOff()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xD27900", Offset = "0xD27900", VA = "0xD27900")]
	public VoiceChatTitle()
	{
	}
}
[Token(Token = "0x20002D3")]
public class AlvoRealPosition : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002D4")]
	public enum Handed
	{
		[Token(Token = "0x4001B12")]
		RightHand,
		[Token(Token = "0x4001B13")]
		LeftHand,
		[Token(Token = "0x4001B14")]
		None
	}

	[Token(Token = "0x4001B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Handed currentHand;

	[Token(Token = "0x4001B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_Transform;

	[Token(Token = "0x4001B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3 m_RealPosition;

	[Token(Token = "0x4001B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion m_RealRotation;

	[Token(Token = "0x4001B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_LastPosition;

	[Token(Token = "0x4001B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_GamePosition;

	[Token(Token = "0x4001B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion m_GameRotation;

	[Token(Token = "0x4001B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 m_Direction;

	[Token(Token = "0x4001B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask m_LayerMask;

	[Token(Token = "0x4001B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_Radius;

	[Token(Token = "0x4001B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_Delta;

	[Token(Token = "0x4001B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float m_DeltaRotation;

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xD27D00", Offset = "0xD27D00", VA = "0xD27D00")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xD27D1C", Offset = "0xD27D1C", VA = "0xD27D1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xD27EB4", Offset = "0xD27EB4", VA = "0xD27EB4")]
	public AlvoRealPosition()
	{
	}
}
[Token(Token = "0x20002D5")]
public class QuestLanding : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference scene;

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xD27ED4", Offset = "0xD27ED4", VA = "0xD27ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xD27F4C", Offset = "0xD27F4C", VA = "0xD27F4C")]
	public QuestLanding()
	{
	}
}
[Token(Token = "0x20002D6")]
public class BombFlare : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spritesParent;

	[Token(Token = "0x4001B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 size;

	[Token(Token = "0x4001B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform iddleTransform;

	[Token(Token = "0x4001B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float beepFrequencyDefault;

	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float beepDuration;

	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float counter;

	[Token(Token = "0x4001B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool beepOn;

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xD27F54", Offset = "0xD27F54", VA = "0xD27F54")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xD27FD0", Offset = "0xD27FD0", VA = "0xD27FD0")]
	private void BeepOn()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xD28044", Offset = "0xD28044", VA = "0xD28044")]
	private void BeepOff()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xD280AC", Offset = "0xD280AC", VA = "0xD280AC")]
	public BombFlare()
	{
	}
}
[Token(Token = "0x20002D7")]
public class BWEffect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x4001B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader m_Shader;

	[Token(Token = "0x4001B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float power;

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xD280C0", Offset = "0xD280C0", VA = "0xD280C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xD28160", Offset = "0xD28160", VA = "0xD28160")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xD281D4", Offset = "0xD281D4", VA = "0xD281D4")]
	public BWEffect()
	{
	}
}
[Token(Token = "0x20002D8")]
public class IkInterpolator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cachedBones;

	[Token(Token = "0x4001B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion[] prevBoneRotations;

	[Token(Token = "0x4001B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion[] newBoneRotations;

	[Token(Token = "0x4001B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private IkToggler ikTogler;

	[Token(Token = "0x4001B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool skipFrame;

	[Token(Token = "0x4001B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float boneLerpSpeed;

	[Token(Token = "0x4001B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int countToSolve;

	[Token(Token = "0x4001B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool solved;

	[Token(Token = "0x4001B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool solvedLastFrame;

	[Token(Token = "0x4001B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int updateEvery;

	[Token(Token = "0x4001B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool skipInterpolation;

	[Token(Token = "0x4001B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int startInterpolationAt;

	[Token(Token = "0x4001B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int endInterpolationAt;

	[Token(Token = "0x4001B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Lod Managment")]
	[Space]
	public int LodLevel;

	[Token(Token = "0x4001B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int framesSinceLastSolve;

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xD281DC", Offset = "0xD281DC", VA = "0xD281DC")]
	public void Start()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xD28304", Offset = "0xD28304", VA = "0xD28304")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xD283BC", Offset = "0xD283BC", VA = "0xD283BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xD28478", Offset = "0xD28478", VA = "0xD28478")]
	public bool DoLateUpdate(bool solve)
	{
		return default(bool);
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xD28288", Offset = "0xD28288", VA = "0xD28288")]
	public void ReplacePrevBones()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xD281F4", Offset = "0xD281F4", VA = "0xD281F4")]
	public void CacheNewBones()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xD286F0", Offset = "0xD286F0", VA = "0xD286F0")]
	public void InterpolateBones()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xD28590", Offset = "0xD28590", VA = "0xD28590")]
	public void ConfigureIKLod(int LODLevel)
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xD2885C", Offset = "0xD2885C", VA = "0xD2885C")]
	private void SetBonesToInterpolate()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xD28908", Offset = "0xD28908", VA = "0xD28908")]
	public IkInterpolator()
	{
	}
}
[Token(Token = "0x20002D9")]
public class IkToggler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002DA")]
	[CompilerGenerated]
	private sealed class <DelayLeftHand>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IkToggler <>4__this;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xD290AC", Offset = "0xD290AC", VA = "0xD290AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xD290F4", Offset = "0xD290F4", VA = "0xD290F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xD28F50", Offset = "0xD28F50", VA = "0xD28F50")]
		[DebuggerHidden]
		public <DelayLeftHand>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xD29054", Offset = "0xD29054", VA = "0xD29054", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xD29058", Offset = "0xD29058", VA = "0xD29058", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xD290B4", Offset = "0xD290B4", VA = "0xD290B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[CompilerGenerated]
	private sealed class <SmoothArmTransition>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IkToggler <>4__this;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <newLeftWeigth>5__2;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xD2923C", Offset = "0xD2923C", VA = "0xD2923C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0xD29284", Offset = "0xD29284", VA = "0xD29284", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xD28F78", Offset = "0xD28F78", VA = "0xD28F78")]
		[DebuggerHidden]
		public <SmoothArmTransition>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xD290FC", Offset = "0xD290FC", VA = "0xD290FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xD29100", Offset = "0xD29100", VA = "0xD29100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xD29244", Offset = "0xD29244", VA = "0xD29244", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandHeadSync handHeadSync;

	[Token(Token = "0x4001B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x4001B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IkInterpolator ikInterpolator;

	[Token(Token = "0x4001B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IkVrRigLink rigLink;

	[Token(Token = "0x4001B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IkVrRigLink ikVrRigLink;

	[Token(Token = "0x4001B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IKExecutionOrder movingSetup;

	[Token(Token = "0x4001B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IKExecutionOrder noArmsIk;

	[Token(Token = "0x4001B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IKSolverVR.Arm leftArm;

	[Token(Token = "0x4001B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IKSolverVR.Arm rigthArm;

	[Token(Token = "0x4001B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LookAtIK lookAt;

	[Token(Token = "0x4001B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VRIK vrIK;

	[Token(Token = "0x4001B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 walkHeadOffset;

	[Token(Token = "0x4001B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 crouchHeadOffset;

	[Token(Token = "0x4001B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 sprintHeadOffset;

	[Token(Token = "0x4001B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 LH_walkHeadOffset;

	[Token(Token = "0x4001B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 LH_crouchHeadOffset;

	[Token(Token = "0x4001B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 LH_sprintHeadOffset;

	[Token(Token = "0x4001B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 DW_walkHeadOffset;

	[Token(Token = "0x4001B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 defaultHeadOffset;

	[Token(Token = "0x4001B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 defaultCrouchOffset;

	[Token(Token = "0x4001B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 defaultSprintOffset;

	[Token(Token = "0x4001B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool sprinting;

	[Token(Token = "0x4001B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	public bool crouching;

	[Token(Token = "0x4001B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	public bool prone;

	[Token(Token = "0x4001B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
	private bool stopping;

	[Token(Token = "0x4001B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool starting;

	[Token(Token = "0x4001B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float stopStartSpeed;

	[Token(Token = "0x4001B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float ikMaxBodyWeigth;

	[Token(Token = "0x4001B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float ikMinBodyWeigth;

	[Token(Token = "0x4001B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float recoverTime;

	[Token(Token = "0x4001B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int currentIkSetup;

	[Token(Token = "0x4001B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool disableAllIk;

	[Token(Token = "0x4001B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float vel;

	[Token(Token = "0x4001B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool exceded;

	[Token(Token = "0x4001B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private WaitForSeconds waitDelayLeftHand;

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xD28984", Offset = "0xD28984", VA = "0xD28984")]
	public void Start()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xD28A5C", Offset = "0xD28A5C", VA = "0xD28A5C")]
	public void UpdateMovementIk(float vel)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xD28B50", Offset = "0xD28B50", VA = "0xD28B50")]
	public void ResetOffsets()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xD28BA8", Offset = "0xD28BA8", VA = "0xD28BA8")]
	public void SetOffsets(Vector3 walkOffset, Vector3 crouchOffset, Vector3 sprintOffset)
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xD28BE0", Offset = "0xD28BE0", VA = "0xD28BE0")]
	public void Sprinting()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xD28DCC", Offset = "0xD28DCC", VA = "0xD28DCC")]
	public void Walking()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xD28DD8", Offset = "0xD28DD8", VA = "0xD28DD8")]
	public void Crouching()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xD28DE8", Offset = "0xD28DE8", VA = "0xD28DE8")]
	public void Prone()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xD28DF8", Offset = "0xD28DF8", VA = "0xD28DF8")]
	public void DisableAllIk()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xD28E3C", Offset = "0xD28E3C", VA = "0xD28E3C")]
	public void UseNoArmsIK()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xD289E4", Offset = "0xD289E4", VA = "0xD289E4")]
	public void UseFollowIk()
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xD28EE4", Offset = "0xD28EE4", VA = "0xD28EE4")]
	public void SetLeftHanded()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xD28BF0", Offset = "0xD28BF0", VA = "0xD28BF0")]
	public void SetHeadOffset()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xD28EE8", Offset = "0xD28EE8", VA = "0xD28EE8")]
	[IteratorStateMachine(typeof(<DelayLeftHand>d__48))]
	public IEnumerator DelayLeftHand()
	{
		return null;
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xD28E7C", Offset = "0xD28E7C", VA = "0xD28E7C")]
	[IteratorStateMachine(typeof(<SmoothArmTransition>d__49))]
	public IEnumerator SmoothArmTransition()
	{
		return null;
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xD28FA0", Offset = "0xD28FA0", VA = "0xD28FA0")]
	public IkToggler()
	{
	}
}
[Token(Token = "0x20002DC")]
public class IkVrRigLink : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002DD")]
	[CompilerGenerated]
	private sealed class <WaitForReferences>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IkVrRigLink <>4__this;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xD2A634", Offset = "0xD2A634", VA = "0xD2A634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0xD2A67C", Offset = "0xD2A67C", VA = "0xD2A67C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xD2A39C", Offset = "0xD2A39C", VA = "0xD2A39C")]
		[DebuggerHidden]
		public <WaitForReferences>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xD2A594", Offset = "0xD2A594", VA = "0xD2A594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xD2A598", Offset = "0xD2A598", VA = "0xD2A598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xD2A63C", Offset = "0xD2A63C", VA = "0xD2A63C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhotonView pView;

	[Token(Token = "0x4001B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform headset;

	[Token(Token = "0x4001B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform controller;

	[Token(Token = "0x4001B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform gunPos;

	[Token(Token = "0x4001B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform secondaryHandPos;

	[Token(Token = "0x4001B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ikHeadset;

	[Token(Token = "0x4001B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform ikGun;

	[Token(Token = "0x4001B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ikSecondary;

	[Token(Token = "0x4001B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool changingWeapons;

	[Token(Token = "0x4001B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool initDone;

	[Token(Token = "0x4001B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool firstCall;

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xD2A28C", Offset = "0xD2A28C", VA = "0xD2A28C")]
	public void Start()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xD2A2C8", Offset = "0xD2A2C8", VA = "0xD2A2C8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xD2A314", Offset = "0xD2A314", VA = "0xD2A314")]
	public void GetReferences()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xD2A334", Offset = "0xD2A334", VA = "0xD2A334")]
	[IteratorStateMachine(typeof(<WaitForReferences>d__14))]
	public IEnumerator WaitForReferences()
	{
		return null;
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xD2A3C4", Offset = "0xD2A3C4", VA = "0xD2A3C4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xD2A460", Offset = "0xD2A460", VA = "0xD2A460")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xD2A58C", Offset = "0xD2A58C", VA = "0xD2A58C")]
	public IkVrRigLink()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DE")]
public enum VrJoysticks
{
	[Token(Token = "0x4001B68")]
	None,
	[Token(Token = "0x4001B69")]
	Move,
	[Token(Token = "0x4001B6A")]
	Rotate
}
[Serializable]
[Token(Token = "0x20002DF")]
public class DeviceInputMap
{
	[Token(Token = "0x4001B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string deviceName;

	[Token(Token = "0x4001B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton[] baseButtons;

	[Token(Token = "0x4001B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] buttonMapping;

	[Token(Token = "0x4001B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] invertedButtonMap;

	[Token(Token = "0x4001B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasJoysticks;

	[Token(Token = "0x4001B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Space]
	[Header("Joysticks")]
	public VrJoysticks leftJoystick;

	[Token(Token = "0x4001B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrJoysticks rightJoystick;

	[Token(Token = "0x4001B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string leftJoystickName;

	[Token(Token = "0x4001B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string rightJoystickName;

	[Token(Token = "0x4001B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VrInputDevice device;

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xD2A684", Offset = "0xD2A684", VA = "0xD2A684")]
	public DeviceInputMap(VrInputDevice device)
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xD2A72C", Offset = "0xD2A72C", VA = "0xD2A72C")]
	public void SetDefaultValues(VrInputDevice device)
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xD2A9EC", Offset = "0xD2A9EC", VA = "0xD2A9EC")]
	public void SetButtonMapping(VrSettings set)
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xD2A780", Offset = "0xD2A780", VA = "0xD2A780")]
	public void SetMap(ButtonMap map, bool leftHanded = false, bool invertJoysticks = false, bool invertActionBtns = false)
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xD2B188", Offset = "0xD2B188", VA = "0xD2B188")]
	public void BuildInvertedButtonMap()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xD2AFA4", Offset = "0xD2AFA4", VA = "0xD2AFA4")]
	public void CloneButtons()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xD2B2C0", Offset = "0xD2B2C0", VA = "0xD2B2C0")]
	public void LoadDeviceMaping(int[] maping)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xD2B0A4", Offset = "0xD2B0A4", VA = "0xD2B0A4")]
	public void SetDeviceMapping()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xD2B3C0", Offset = "0xD2B3C0", VA = "0xD2B3C0")]
	public int[] GetDeviceMaping()
	{
		return null;
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xD2B3D8", Offset = "0xD2B3D8", VA = "0xD2B3D8")]
	public void SaveToPlayerPrefs()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xD2B570", Offset = "0xD2B570", VA = "0xD2B570")]
	public void LoadFromPlayerPrefs()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xD2B480", Offset = "0xD2B480", VA = "0xD2B480")]
	public byte[] SerializeDeviceButtonMapping()
	{
		return null;
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xD2B6A0", Offset = "0xD2B6A0", VA = "0xD2B6A0")]
	public int[] DeserializeDeviceButtonMapping(byte[] bytes)
	{
		return null;
	}
}
[Token(Token = "0x20002E0")]
public class GunHaptics : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponBehavior m_Weapon;

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xD2B86C", Offset = "0xD2B86C", VA = "0xD2B86C")]
	public void Haptics1()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xD2B97C", Offset = "0xD2B97C", VA = "0xD2B97C")]
	public void Haptics2()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xD2BA24", Offset = "0xD2BA24", VA = "0xD2BA24")]
	public void Haptics3()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xD2BAC8", Offset = "0xD2BAC8", VA = "0xD2BAC8")]
	public void DwHaptics()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xD2BAF0", Offset = "0xD2BAF0", VA = "0xD2BAF0")]
	public void PrimaryHandHaptics()
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xD2BAFC", Offset = "0xD2BAFC", VA = "0xD2BAFC")]
	public void SecondaryHandHaptics()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xD2BB08", Offset = "0xD2BB08", VA = "0xD2BB08")]
	public GunHaptics()
	{
	}
}
[Token(Token = "0x20002E1")]
public class TestingButtonMap : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debugButtonDown;

	[Token(Token = "0x4001B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool debugButtonHold;

	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool debugButtonUp;

	[Token(Token = "0x4001B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool debugLeftRight;

	[Token(Token = "0x4001B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool debugJoysticks;

	[Token(Token = "0x4001B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private byte[] byteArray;

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xD2BB10", Offset = "0xD2BB10", VA = "0xD2BB10")]
	private void Update1()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xD2BB14", Offset = "0xD2BB14", VA = "0xD2BB14")]
	public TestingButtonMap()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E2")]
public class VrButton
{
	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool availableInDevice;

	[Token(Token = "0x4001B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int buttonIndex;

	[Token(Token = "0x4001B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrKeycode keyMap;

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xD2B27C", Offset = "0xD2B27C", VA = "0xD2B27C")]
	public VrButton(bool available, string buttonName, int buttonIndex, VrKeycode keyMap)
	{
	}
}
[Token(Token = "0x20002E3")]
public enum VrKeycode
{
	[Token(Token = "0x4001B81")]
	None,
	[Token(Token = "0x4001B82")]
	Interact,
	[Token(Token = "0x4001B83")]
	Reload,
	[Token(Token = "0x4001B84")]
	Switch,
	[Token(Token = "0x4001B85")]
	Crouch,
	[Token(Token = "0x4001B86")]
	Jump,
	[Token(Token = "0x4001B87")]
	Sprint,
	[Token(Token = "0x4001B88")]
	Attachment,
	[Token(Token = "0x4001B89")]
	Meelee,
	[Token(Token = "0x4001B8A")]
	Settings,
	[Token(Token = "0x4001B8B")]
	ChangeLoadout,
	[Token(Token = "0x4001B8C")]
	Grenade,
	[Token(Token = "0x4001B8D")]
	Fire,
	[Token(Token = "0x4001B8E")]
	Up_MoveFordwards,
	[Token(Token = "0x4001B8F")]
	Down_MoveTurnLeft,
	[Token(Token = "0x4001B90")]
	Left_MoveTurnRight,
	[Token(Token = "0x4001B91")]
	Killstreak,
	[Token(Token = "0x4001B92")]
	Fire2,
	[Token(Token = "0x4001B93")]
	Grab2,
	[Token(Token = "0x4001B94")]
	Grab
}
[Token(Token = "0x20002E4")]
[ExecuteInEditMode]
public class VrInput : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002E5")]
	public delegate void ControllersChange(int index, bool recenterEvent);

	[Token(Token = "0x20002E6")]
	private enum TriggerEffect
	{
		[Token(Token = "0x4001BDE")]
		Off,
		[Token(Token = "0x4001BDF")]
		Weapon,
		[Token(Token = "0x4001BE0")]
		Vibration
	}

	[Token(Token = "0x20002E7")]
	public struct OverrideButton
	{
		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool down;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool hold;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool up;

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xD2F5DC", Offset = "0xD2F5DC", VA = "0xD2F5DC")]
		public void Refresh(bool holding)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xD2F5F4", Offset = "0xD2F5F4", VA = "0xD2F5F4")]
		public void Press()
		{
		}
	}

	[Token(Token = "0x20002E8")]
	[CompilerGenerated]
	private sealed class <CheckForControllersChange>d__126 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInput <>4__this;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xD2F65C", Offset = "0xD2F65C", VA = "0xD2F65C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xD2F6A4", Offset = "0xD2F6A4", VA = "0xD2F6A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xD2DBCC", Offset = "0xD2DBCC", VA = "0xD2DBCC")]
		[DebuggerHidden]
		public <CheckForControllersChange>d__126(int <>1__state)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xD2F604", Offset = "0xD2F604", VA = "0xD2F604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xD2F608", Offset = "0xD2F608", VA = "0xD2F608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xD2F664", Offset = "0xD2F664", VA = "0xD2F664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VrInput m_Instance;

	[Token(Token = "0x4001B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte handStance;

	[Token(Token = "0x4001B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrInputDevice oculusTouchDevice;

	[Token(Token = "0x4001B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrInputDevice ds4Device;

	[Token(Token = "0x4001B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrInputDevice moveDevice;

	[Token(Token = "0x4001B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ForceTubeVR m_ForceTubeVR;

	[Token(Token = "0x4001B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BHapticsVR m_bHapticsVR;

	[Token(Token = "0x4001B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Inactivity")]
	public float inactivityTime;

	[Token(Token = "0x4001B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool inactive;

	[Token(Token = "0x4001B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DeviceInputMap oculusTouchKeyMap;

	[Token(Token = "0x4001B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public DeviceInputMap ds4Map;

	[Token(Token = "0x4001BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public DeviceInputMap moveMap;

	[Token(Token = "0x4001BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool m_LeftHanded;

	[Token(Token = "0x4001BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[HideInInspector]
	public bool m_InvertJoysticks;

	[Token(Token = "0x4001BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[HideInInspector]
	public bool m_TwoHands;

	[Token(Token = "0x4001BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool m_DualWield;

	[Token(Token = "0x4001BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool m_StaticSetup;

	[Token(Token = "0x4001BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool _buttonUndockMagazine;

	[Token(Token = "0x4001BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool _holdGrabGun;

	[Token(Token = "0x4001BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool m_AlternativeGrenadeHold;

	[Token(Token = "0x4001BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool m_GrenadeOnRightHand;

	[Token(Token = "0x4001BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool m_GrabbingGun;

	[Token(Token = "0x4001BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	[HideInInspector]
	public bool m_NearGun;

	[Token(Token = "0x4001BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	[HideInInspector]
	public bool m_UsingMoves;

	[Token(Token = "0x4001BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public bool m_PointerInput;

	[Token(Token = "0x4001BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[HideInInspector]
	public bool m_PistolTracking;

	[Token(Token = "0x4001BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	[HideInInspector]
	public bool m_GrabbingInteractableInGun;

	[Token(Token = "0x4001BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	[HideInInspector]
	public bool isPhoenix;

	[Token(Token = "0x4001BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public RecordingCameraMode recordingMode;

	[Token(Token = "0x4001BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	[Space]
	public bool lockButtons;

	[Token(Token = "0x4001BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	[HideInInspector]
	public bool androidFocus;

	[Token(Token = "0x4001BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	[HideInInspector]
	public bool allowRotationOnLock;

	[Token(Token = "0x4001BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	[HideInInspector]
	public bool allowMovementOnLock;

	[Token(Token = "0x4001BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] PSVRBtns;

	[Token(Token = "0x4001BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly KeyCode[] MoveKeycodes;

	[Token(Token = "0x4001BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly string[] PSVRAxisBtns;

	[Token(Token = "0x4001BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int[] axisIndex;

	[Token(Token = "0x4001BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly string[] OculusBtns;

	[Token(Token = "0x4001BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] ButtonNames;

	[Token(Token = "0x4001BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] OculusTouchLeftBtns;

	[Token(Token = "0x4001BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly string[] OculusTouchRightBtns;

	[Token(Token = "0x4001BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool[] HoldBtns;

	[Token(Token = "0x4001BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool[] DownBtns;

	[Token(Token = "0x4001BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool[] UpBtns;

	[Token(Token = "0x4001BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int buttonIndex;

	[Token(Token = "0x4001BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public bool countJoysticksForInactivity;

	[Token(Token = "0x4001BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	[HideInInspector]
	public bool overrideGrabDown;

	[Token(Token = "0x4001BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	[HideInInspector]
	public bool overrideGrenadeHold;

	[Token(Token = "0x4001BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	public OverrideButton Grab1;

	[Token(Token = "0x4001BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public OverrideButton Fire2;

	[Token(Token = "0x4001BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2 LAxis2dVector;

	[Token(Token = "0x4001BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector2 RAxis2dVector;

	[Token(Token = "0x4001BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private HapticCapabilities capabilities;

	[Token(Token = "0x4001BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private InputDevice deviceRightHand;

	[Token(Token = "0x4001BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private InputDevice deviceLeftHand;

	[Token(Token = "0x4001BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool botHands;

	[Token(Token = "0x4001BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	[HideInInspector]
	public bool allowHaptics;

	[Token(Token = "0x4001BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int ps4VibrationAmplitud;

	[Token(Token = "0x4001BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool hapticOn;

	[Token(Token = "0x4001BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float hapticTime;

	[Token(Token = "0x4001BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int picoTime;

	[Token(Token = "0x4001BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private TriggerEffect primaryTriggerEffect;

	[Token(Token = "0x4001BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private TriggerEffect secondaryTriggerEffect;

	[Token(Token = "0x4001BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Platform m_platform;

	[Token(Token = "0x4001BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public bool rotatingRight;

	[Token(Token = "0x4001BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[HideInInspector]
	[Space]
	public int currentController;

	[Token(Token = "0x4001BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public int newController;

	[Token(Token = "0x4001BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[HideInInspector]
	public bool m_PrefersAutoGrab;

	[Token(Token = "0x4001BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private WaitForSeconds waitCheckController;

	[Token(Token = "0x4001BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float buttonColdown;

	[Token(Token = "0x4001BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int buttonCount;

	[Token(Token = "0x17000239")]
	public static VrInput Instance
	{
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xD2BB1C", Offset = "0xD2BB1C", VA = "0xD2BB1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023A")]
	public bool m_ButtonUndockMagazine
	{
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xD2BB74", Offset = "0xD2BB74", VA = "0xD2BB74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xD2BB94", Offset = "0xD2BB94", VA = "0xD2BB94")]
		set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public bool m_HoldGrabGun
	{
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xD2BBA0", Offset = "0xD2BBA0", VA = "0xD2BBA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xD2BBC0", Offset = "0xD2BBC0", VA = "0xD2BBC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700023C")]
	public Vector2 LAxis2d
	{
		[Token(Token = "0x6001200")]
		[Address(RVA = "0xD2BE04", Offset = "0xD2BE04", VA = "0xD2BE04")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700023D")]
	public Vector2 RAxis2d
	{
		[Token(Token = "0x6001201")]
		[Address(RVA = "0xD2C12C", Offset = "0xD2C12C", VA = "0xD2C12C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700023E")]
	public bool RAxisLeft
	{
		[Token(Token = "0x6001202")]
		[Address(RVA = "0xD2C4E0", Offset = "0xD2C4E0", VA = "0xD2C4E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023F")]
	public bool RAxisRight
	{
		[Token(Token = "0x6001203")]
		[Address(RVA = "0xD2C6A8", Offset = "0xD2C6A8", VA = "0xD2C6A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000240")]
	public bool dualWieldAllowed
	{
		[Token(Token = "0x6001223")]
		[Address(RVA = "0xD2DAEC", Offset = "0xD2DAEC", VA = "0xD2DAEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000241")]
	public bool allowAutoGrab
	{
		[Token(Token = "0x6001224")]
		[Address(RVA = "0xD2DB28", Offset = "0xD2DB28", VA = "0xD2DB28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000008")]
	public static event ControllersChange ControllersHaveChanged
	{
		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xD2BBCC", Offset = "0xD2BBCC", VA = "0xD2BBCC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xD2BCA8", Offset = "0xD2BCA8", VA = "0xD2BCA8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xD2BD84", Offset = "0xD2BD84", VA = "0xD2BD84")]
	public void SetControllersOnRecenter()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xD2C870", Offset = "0xD2C870", VA = "0xD2C870")]
	public void BulletVibration(WeaponBehavior weaponBehavior, bool bayonet, bool secondary = false)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xD2CA58", Offset = "0xD2CA58", VA = "0xD2CA58")]
	public void ForceStopVibration()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xD2CAD0", Offset = "0xD2CAD0", VA = "0xD2CAD0")]
	public void DamageVibration(int w, BodyPart bodyPart, Vector3 firePos)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xD2B918", Offset = "0xD2B918", VA = "0xD2B918")]
	public void ImpulseVibration(uint channel, float amplitude, float duration, int frequency, bool damage = false)
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xD2CC04", Offset = "0xD2CC04", VA = "0xD2CC04")]
	public void ImpulseVibrationHands(uint channel, float amplitude, float duration)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xD2CC1C", Offset = "0xD2CC1C", VA = "0xD2CC1C")]
	public void HandInteractVibration(bool leftHand)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xD2CC64", Offset = "0xD2CC64", VA = "0xD2CC64")]
	public void UIVibration(bool faint, bool leftHand)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xD2CCD4", Offset = "0xD2CCD4", VA = "0xD2CCD4")]
	public void InteractableVibration(bool leftHand)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xD2C920", Offset = "0xD2C920", VA = "0xD2C920")]
	private void Haptics(uint channel, float amplitude, float duration, int frequency, bool bothHands = false, bool onlyLeftHand = false)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xD2CD24", Offset = "0xD2CD24", VA = "0xD2CD24")]
	private void TurnOffPs4Vibration()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xD2CD28", Offset = "0xD2CD28", VA = "0xD2CD28")]
	private void PSVR2_TriggersUpdate()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xD2CD2C", Offset = "0xD2CD2C", VA = "0xD2CD2C")]
	private void PSVR2_CheckTriggerEffect(ref TriggerEffect effectState, WeaponBehavior weapon)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xD2CD30", Offset = "0xD2CD30", VA = "0xD2CD30")]
	private void PSVR2_OnTriggerEffectChanged(TriggerEffect mode, WeaponBehavior weapon)
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xD2CD34", Offset = "0xD2CD34", VA = "0xD2CD34")]
	private void PSVR2_HeadsetHaptics()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xD2CD38", Offset = "0xD2CD38", VA = "0xD2CD38")]
	public bool GetButtonDown(VrKeycode keycode)
	{
		return default(bool);
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xD2D01C", Offset = "0xD2D01C", VA = "0xD2D01C")]
	public bool GetButtonHold(VrKeycode keycode)
	{
		return default(bool);
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xD2D2F8", Offset = "0xD2D2F8", VA = "0xD2D2F8")]
	public bool GetButtonUp(VrKeycode keycode)
	{
		return default(bool);
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xD2AE08", Offset = "0xD2AE08", VA = "0xD2AE08")]
	public bool CurrentControllerIsAimOrDs()
	{
		return default(bool);
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xD2AE1C", Offset = "0xD2AE1C", VA = "0xD2AE1C")]
	public void SetStatic(bool staticRifle, bool staticDual)
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xD2D55C", Offset = "0xD2D55C", VA = "0xD2D55C")]
	private void LoadDefaultValues()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xD2D64C", Offset = "0xD2D64C", VA = "0xD2D64C")]
	public void SetAllButtonMappings(VrSettings settings)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xD2D664", Offset = "0xD2D664", VA = "0xD2D664")]
	private void LoadUserCustomValues()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xD2D668", Offset = "0xD2D668", VA = "0xD2D668")]
	private void Update()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xD2D8E4", Offset = "0xD2D8E4", VA = "0xD2D8E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xD2DA64", Offset = "0xD2DA64", VA = "0xD2DA64")]
	private void Start()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xD2D804", Offset = "0xD2D804", VA = "0xD2D804")]
	private void Activity()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xD2BE08", Offset = "0xD2BE08", VA = "0xD2BE08")]
	private Vector2 GetLAxis2d()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xD2DA90", Offset = "0xD2DA90", VA = "0xD2DA90")]
	private void DeadZone(ref Vector2 Axis2d, bool rightStick = false)
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xD2C130", Offset = "0xD2C130", VA = "0xD2C130")]
	public Vector2 GetRAxis2d()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xD2C4E4", Offset = "0xD2C4E4", VA = "0xD2C4E4")]
	public bool GetRAxisLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xD2C6AC", Offset = "0xD2C6AC", VA = "0xD2C6AC")]
	public bool GetRaxisRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0xD2DB64", Offset = "0xD2DB64", VA = "0xD2DB64")]
	[IteratorStateMachine(typeof(<CheckForControllersChange>d__126))]
	private IEnumerator CheckForControllersChange()
	{
		return null;
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0xD2DBF4", Offset = "0xD2DBF4", VA = "0xD2DBF4")]
	private void CheckPSVRControllers(bool recenter = false)
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xD2DBF8", Offset = "0xD2DBF8", VA = "0xD2DBF8")]
	private void DualShock4Check()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xD2DBFC", Offset = "0xD2DBFC", VA = "0xD2DBFC")]
	private void MoveCheck()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xD2DC00", Offset = "0xD2DC00", VA = "0xD2DC00")]
	private void AimCheck()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xD2D768", Offset = "0xD2D768", VA = "0xD2D768")]
	private void CheckPS4Input()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xD2DE8C", Offset = "0xD2DE8C", VA = "0xD2DE8C")]
	private void CheckAndUpdateMovebtns()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xD2DEF0", Offset = "0xD2DEF0", VA = "0xD2DEF0")]
	private void DoubleTabCheck(int invertedIndex, int buttonIndex)
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xD2DC04", Offset = "0xD2DC04", VA = "0xD2DC04")]
	private void CheckAndUpdateBtnPSVR()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xD2E168", Offset = "0xD2E168", VA = "0xD2E168")]
	private void UpdatePsvrAxisBtn(int index, string name, bool negative = false)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xD2D77C", Offset = "0xD2D77C", VA = "0xD2D77C")]
	private void CheckOculusInput()
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xD2E274", Offset = "0xD2E274", VA = "0xD2E274")]
	private void CheckAndUpdateBtn(int index)
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xD2E3BC", Offset = "0xD2E3BC", VA = "0xD2E3BC")]
	public VrInput()
	{
	}
}
[Token(Token = "0x20002E9")]
public enum InputDevices
{
	[Token(Token = "0x4001BE8")]
	OculusTouch,
	[Token(Token = "0x4001BE9")]
	DualShock4,
	[Token(Token = "0x4001BEA")]
	MoveControllers
}
[Token(Token = "0x20002EA")]
[CreateAssetMenu(menuName = "VrInputDevice")]
public class VrInputDevice : ScriptableObject
{
	[Token(Token = "0x4001BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Device Settings")]
	[Space]
	public InputDevices deviceType;

	[Token(Token = "0x4001BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string deviceName;

	[Token(Token = "0x4001BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasJoysticks;

	[Token(Token = "0x4001BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool useHoldForSettings;

	[Token(Token = "0x4001BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Default Values")]
	[Space]
	public ButtonMap DefaultValues;

	[Token(Token = "0x4001BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Main Button Maps")]
	[Space]
	public ButtonMap[] ButtonMaps;

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xD2F6AC", Offset = "0xD2F6AC", VA = "0xD2F6AC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xD2F6B0", Offset = "0xD2F6B0", VA = "0xD2F6B0")]
	public VrInputDevice()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EB")]
public struct ButtonMap
{
	[Token(Token = "0x4001BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4001BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[Space]
	[Header("Joysticks")]
	public VrJoysticks leftJoystick;

	[Token(Token = "0x4001BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public VrJoysticks rightJoystick;

	[Token(Token = "0x4001BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Buttons")]
	[Space]
	public VrButton[] buttons;

	[Token(Token = "0x4001BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space]
	[Header("Left Handed Buttons")]
	public VrButton[] buttonsLH;

	[Token(Token = "0x4001BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	[Header("Inverted Joysticks Buttons")]
	public VrButton[] invertedJoysticksBtns;

	[Token(Token = "0x4001BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[Header("Inverted Action Buttons (PS4)")]
	public VrButton[] invertedActionBtns;
}
[Token(Token = "0x20002EC")]
public class LegacyVrInputManager : Singleton<LegacyVrInputManager>
{
	[Token(Token = "0x4001BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool forceOculusInput;

	[Token(Token = "0x4001BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockButtons;

	[Token(Token = "0x4001BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] m_OculusBtns;

	[Token(Token = "0x4001BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool[] m_HoldBtns;

	[Token(Token = "0x4001BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool[] m_PressBtns;

	[Token(Token = "0x4001BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] m_UpBtns;

	[Token(Token = "0x17000244")]
	public Vector2 LAxis2d
	{
		[Token(Token = "0x6001241")]
		[Address(RVA = "0xD2F6B8", Offset = "0xD2F6B8", VA = "0xD2F6B8")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000245")]
	public Vector2 RAxis2d
	{
		[Token(Token = "0x6001242")]
		[Address(RVA = "0xD2F778", Offset = "0xD2F778", VA = "0xD2F778")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000246")]
	public bool RAxisLeft
	{
		[Token(Token = "0x6001243")]
		[Address(RVA = "0xD2F838", Offset = "0xD2F838", VA = "0xD2F838")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000247")]
	public bool RAxisRight
	{
		[Token(Token = "0x6001244")]
		[Address(RVA = "0xD2F8A4", Offset = "0xD2F8A4", VA = "0xD2F8A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0xD2F910", Offset = "0xD2F910", VA = "0xD2F910")]
	public bool HoldBtn(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0xD2F974", Offset = "0xD2F974", VA = "0xD2F974")]
	public bool PressBtn(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0xD2F9D8", Offset = "0xD2F9D8", VA = "0xD2F9D8")]
	public bool UpBtn(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0xD2FA3C", Offset = "0xD2FA3C", VA = "0xD2FA3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0xD2FA94", Offset = "0xD2FA94", VA = "0xD2FA94")]
	private void CheckOculusInput()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xD2FB1C", Offset = "0xD2FB1C", VA = "0xD2FB1C")]
	private void CheckAndUpdateBtn(int index)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0xD2FC60", Offset = "0xD2FC60", VA = "0xD2FC60")]
	private void CheckAndUpdateBtn(ref bool pressing, ref bool press, ref bool up, string btnName)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0xD2FCC4", Offset = "0xD2FCC4", VA = "0xD2FCC4")]
	private void TestPressButton(int index)
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xD2FF30", Offset = "0xD2FF30", VA = "0xD2FF30")]
	public LegacyVrInputManager()
	{
	}
}
[Token(Token = "0x20002ED")]
public class StatManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002EE")]
	[CompilerGenerated]
	private sealed class <SelectStatTiming>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StatManager <>4__this;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xD31944", Offset = "0xD31944", VA = "0xD31944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xD3198C", Offset = "0xD3198C", VA = "0xD3198C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xD30BAC", Offset = "0xD30BAC", VA = "0xD30BAC")]
		[DebuggerHidden]
		public <SelectStatTiming>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xD31908", Offset = "0xD31908", VA = "0xD31908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xD3190C", Offset = "0xD3190C", VA = "0xD3190C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xD3194C", Offset = "0xD3194C", VA = "0xD3194C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public ScoreboardStatsArray testDisplayList;

	[Token(Token = "0x4001BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StartupManager StartupManager;

	[Token(Token = "0x4001C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_Top10Root;

	[Token(Token = "0x4001C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private StatLabel m_MyStatsLabel;

	[Token(Token = "0x4001C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StatLabel[] m_Top10Labels;

	[Token(Token = "0x4001C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerLocalData m_LocalPlayerData;

	[Token(Token = "0x4001C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text m_LeaderBoardTitleLbl;

	[Token(Token = "0x4001C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text m_SwitchLeaderboardBtnLbl;

	[Token(Token = "0x4001C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ScoreboardStatsArray Scoreboard;

	[Token(Token = "0x4001C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PlayerStats playerStats;

	[Token(Token = "0x4001C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool weekly;

	[Token(Token = "0x4001C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int scoreboardStatRequestCount;

	[Token(Token = "0x4001C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int playerStatRequestCount;

	[Token(Token = "0x4001C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int playerStatRequestID;

	[Token(Token = "0x4001C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[Header("Language Texts")]
	private LanguageText weeklyLBTitleText;

	[Token(Token = "0x4001C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private LanguageText switchToWeeklyLBText;

	[Token(Token = "0x4001C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private LanguageText globalLBTitleText;

	[Token(Token = "0x4001C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private LanguageText switchToGlobalLBText;

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xD30328", Offset = "0xD30328", VA = "0xD30328")]
	private void Start()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0xD30428", Offset = "0xD30428", VA = "0xD30428")]
	private void GetScoreboardStats()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0xD304BC", Offset = "0xD304BC", VA = "0xD304BC")]
	private void GetPlayerStats()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xD30408", Offset = "0xD30408", VA = "0xD30408")]
	public void SelectStat()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0xD305E4", Offset = "0xD305E4", VA = "0xD305E4")]
	public void SwitchStats()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0xD3072C", Offset = "0xD3072C", VA = "0xD3072C")]
	private void ShowStats()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0xD30B10", Offset = "0xD30B10", VA = "0xD30B10")]
	private void HideStats()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xD3081C", Offset = "0xD3081C", VA = "0xD3081C")]
	private void ShowOwnStats()
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0xD30B80", Offset = "0xD30B80", VA = "0xD30B80")]
	private void HideOwnStats()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0xD3057C", Offset = "0xD3057C", VA = "0xD3057C")]
	[IteratorStateMachine(typeof(<SelectStatTiming>d__27))]
	private IEnumerator SelectStatTiming()
	{
		return null;
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xD309C4", Offset = "0xD309C4", VA = "0xD309C4")]
	private void DisplayTopPlayers(ScoreboardStatsArray stats, bool weekly = true)
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xD30674", Offset = "0xD30674", VA = "0xD30674")]
	private void UpdateTexts()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0xD30BD4", Offset = "0xD30BD4", VA = "0xD30BD4")]
	private void Setup(PlayerStats playerStats)
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0xD30E9C", Offset = "0xD30E9C", VA = "0xD30E9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0xD311AC", Offset = "0xD311AC", VA = "0xD311AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0xD314BC", Offset = "0xD314BC", VA = "0xD314BC")]
	private void ReceivePlayerStats(AzureRequestTypes type, string received, int requId)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0xD317D0", Offset = "0xD317D0", VA = "0xD317D0")]
	private void HandleAzureRequestError(UnityWebRequest.Result result, int requId)
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xD31864", Offset = "0xD31864", VA = "0xD31864")]
	private void HandleAzureRequestUnknownResult(int requId)
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0xD31780", Offset = "0xD31780", VA = "0xD31780")]
	private void CouldntLoadStats()
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0xD318F8", Offset = "0xD318F8", VA = "0xD318F8")]
	public StatManager()
	{
	}
}
[Token(Token = "0x20002EF")]
public class VrAudioManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002F0")]
	[CompilerGenerated]
	private sealed class <DelayAndPlay>d__95 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VrAudioManager <>4__this;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clip;

		[Token(Token = "0x1700024B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xD32FFC", Offset = "0xD32FFC", VA = "0xD32FFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0xD33044", Offset = "0xD33044", VA = "0xD33044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xD32D68", Offset = "0xD32D68", VA = "0xD32D68")]
		[DebuggerHidden]
		public <DelayAndPlay>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xD32F18", Offset = "0xD32F18", VA = "0xD32F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xD32F1C", Offset = "0xD32F1C", VA = "0xD32F1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xD33004", Offset = "0xD33004", VA = "0xD33004", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F1")]
	[CompilerGenerated]
	private sealed class <FadeOutAndPlay>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrAudioManager <>4__this;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float overrideSpeed;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delay;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clip;

		[Token(Token = "0x1700024D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0xD332D4", Offset = "0xD332D4", VA = "0xD332D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0xD3331C", Offset = "0xD3331C", VA = "0xD3331C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xD32D90", Offset = "0xD32D90", VA = "0xD32D90")]
		[DebuggerHidden]
		public <FadeOutAndPlay>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xD3304C", Offset = "0xD3304C", VA = "0xD3304C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xD33050", Offset = "0xD33050", VA = "0xD33050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xD332DC", Offset = "0xD332DC", VA = "0xD332DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F2")]
	[CompilerGenerated]
	private sealed class <ChangeMusicVolume>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrAudioManager <>4__this;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float target;

		[Token(Token = "0x1700024F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0xD33488", Offset = "0xD33488", VA = "0xD33488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0xD334D0", Offset = "0xD334D0", VA = "0xD334D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xD32E68", Offset = "0xD32E68", VA = "0xD32E68")]
		[DebuggerHidden]
		public <ChangeMusicVolume>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xD33324", Offset = "0xD33324", VA = "0xD33324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xD33328", Offset = "0xD33328", VA = "0xD33328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xD33490", Offset = "0xD33490", VA = "0xD33490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F3")]
	[CompilerGenerated]
	private sealed class <FadeInMusicCoroutine>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrAudioManager <>4__this;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x17000251")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xD33590", Offset = "0xD33590", VA = "0xD33590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xD335D8", Offset = "0xD335D8", VA = "0xD335D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xD32E90", Offset = "0xD32E90", VA = "0xD32E90")]
		[DebuggerHidden]
		public <FadeInMusicCoroutine>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xD334D8", Offset = "0xD334D8", VA = "0xD334D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xD334DC", Offset = "0xD334DC", VA = "0xD334DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xD33598", Offset = "0xD33598", VA = "0xD33598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F4")]
	[CompilerGenerated]
	private sealed class <FadeOutMusicCoroutine>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VrAudioManager <>4__this;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x17000253")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xD33738", Offset = "0xD33738", VA = "0xD33738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xD33780", Offset = "0xD33780", VA = "0xD33780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xD32EB8", Offset = "0xD32EB8", VA = "0xD32EB8")]
		[DebuggerHidden]
		public <FadeOutMusicCoroutine>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xD335E0", Offset = "0xD335E0", VA = "0xD335E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xD335E4", Offset = "0xD335E4", VA = "0xD335E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD33740", Offset = "0xD33740", VA = "0xD33740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SECTR_AudioBus localSoundsBus;

	[Token(Token = "0x4001C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource musicAudioSource;

	[Token(Token = "0x4001C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource uiFXAudioSource;

	[Token(Token = "0x4001C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource secondMusicSource;

	[Token(Token = "0x4001C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource matchEndingAS;

	[Token(Token = "0x4001C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip clickSound;

	[Token(Token = "0x4001C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip hoverSound;

	[Token(Token = "0x4001C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip moveSound;

	[Token(Token = "0x4001C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip confirmSound;

	[Token(Token = "0x4001C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip errorSound;

	[Token(Token = "0x4001C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip notificationSound;

	[Token(Token = "0x4001C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip tabChangeSound;

	[Token(Token = "0x4001C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip titleMusic;

	[Token(Token = "0x4001C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip endOfMatchMusicWin;

	[Token(Token = "0x4001C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip endOfMatchMusicLose;

	[Token(Token = "0x4001C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip roundEndWin;

	[Token(Token = "0x4001C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip roundEndLose;

	[Token(Token = "0x4001C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip duckMusicClip;

	[Token(Token = "0x4001C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip matchEndingTune;

	[Token(Token = "0x4001C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip[] PartySounds;

	[Token(Token = "0x4001C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip z_EndMatchMusic;

	[Token(Token = "0x4001C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip z_MidRoundMusic1;

	[Token(Token = "0x4001C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip z_MidRoundMusic2;

	[Token(Token = "0x4001C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip z_LoadingMusic;

	[Token(Token = "0x4001C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip[] z_roundClips;

	[Token(Token = "0x4001C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public EndGameSystem endGameManager;

	[Token(Token = "0x4001C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float fadeOutSpeed;

	[Token(Token = "0x4001C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float fastFadeOutSpeed;

	[Token(Token = "0x4001C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public float volumeSFX;

	[Token(Token = "0x4001C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public float volumeMusic;

	[Token(Token = "0x4001C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public float volumeVoice;

	[Token(Token = "0x4001C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public float volumeMaster;

	[Token(Token = "0x4001C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public float volumeAmbience;

	[Token(Token = "0x4001C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float musicMultiplier;

	[Token(Token = "0x4001C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float ambienceMultiplier;

	[Token(Token = "0x4001C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float uiFxMultiplier;

	[Token(Token = "0x4001C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float hitMarkerMultiplier;

	[Token(Token = "0x4001C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float weaponSoundsMultiplier;

	[Token(Token = "0x4001C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float killSoundMultiplier;

	[Token(Token = "0x4001C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float dogMusicMultiplier;

	[Token(Token = "0x4001C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float dogHaulingMultiplier;

	[Token(Token = "0x4001C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SoundManager soundManager;

	[Token(Token = "0x4001C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private WeaponBehavior currentWeapon;

	[Token(Token = "0x4001C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private WeaponBehavior currentSecondaryWeapon;

	[Token(Token = "0x4001C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public DefenseTarget bomb;

	[Token(Token = "0x4001C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private VoiceChat voiceChat;

	[Token(Token = "0x4001C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public VrManager vrManager;

	[Token(Token = "0x4001C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool m_UseBackgroundMusic;

	[Token(Token = "0x4001C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool m_MuteAll;

	[Token(Token = "0x4001C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float musicASvolume;

	[Token(Token = "0x4001C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float lowMusicMultiplier;

	[Token(Token = "0x4001C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VrAudioManager m_Instance;

	[Token(Token = "0x4001C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public System.Action OnAudioSettingsChanged;

	[Token(Token = "0x4001C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<SECTR_AudioBus> children;

	[Token(Token = "0x4001C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 position;

	[Token(Token = "0x4001C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float currentVolume;

	[Token(Token = "0x4001C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float lastVolume;

	[Token(Token = "0x1700024A")]
	public static VrAudioManager Instance
	{
		[Token(Token = "0x6001269")]
		[Address(RVA = "0xD31994", Offset = "0xD31994", VA = "0xD31994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xD319DC", Offset = "0xD319DC", VA = "0xD319DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xD31AE0", Offset = "0xD31AE0", VA = "0xD31AE0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0xD31B48", Offset = "0xD31B48", VA = "0xD31B48")]
	public void SetAudioSettings(int volumeAmbience, int volumeSFX, int volumeMusic, int volumeVoice, int volumeMaster, bool inGame)
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0xD31FF8", Offset = "0xD31FF8", VA = "0xD31FF8")]
	public float GetVoiceVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0xD32004", Offset = "0xD32004", VA = "0xD32004")]
	public void SetSoundManager(SoundManager soundManager)
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0xD31DE8", Offset = "0xD31DE8", VA = "0xD31DE8")]
	public void SetSoundManagerSettings()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0xD3200C", Offset = "0xD3200C", VA = "0xD3200C")]
	public void SetWeaponVolume(AudioSource[] aSources, WeaponBehavior weapon, bool dualWield = false)
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xD31F18", Offset = "0xD31F18", VA = "0xD31F18")]
	public void SetWeaponVolume()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xD320C0", Offset = "0xD320C0", VA = "0xD320C0")]
	public void SetVoiceChatInstanceVolume(VoiceChat voiceChat)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xD320C4", Offset = "0xD320C4", VA = "0xD320C4")]
	public void SetVoiceChatvolume()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xD320C8", Offset = "0xD320C8", VA = "0xD320C8")]
	public void PlayPartySound(int index)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xD3217C", Offset = "0xD3217C", VA = "0xD3217C")]
	public void PlayActionSound(UpdateTypes action)
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xD32198", Offset = "0xD32198", VA = "0xD32198")]
	public void PlayClickSound()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xD32220", Offset = "0xD32220", VA = "0xD32220")]
	public void PlayMoveSound()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xD322A8", Offset = "0xD322A8", VA = "0xD322A8")]
	public void PlayHoverSound()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xD32330", Offset = "0xD32330", VA = "0xD32330")]
	public void PlayTabChangeSound()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xD323B8", Offset = "0xD323B8", VA = "0xD323B8")]
	public void PlayErrorSound()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xD323DC", Offset = "0xD323DC", VA = "0xD323DC")]
	public void PlayNotificationSound()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xD32400", Offset = "0xD32400", VA = "0xD32400")]
	public void PlayConfirmSound()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xD32424", Offset = "0xD32424", VA = "0xD32424")]
	public void PlayFXSound(AudioClip clip)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xD32440", Offset = "0xD32440", VA = "0xD32440")]
	public void PlayJump()
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xD324C0", Offset = "0xD324C0", VA = "0xD324C0")]
	public void PlayLand()
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xD325A4", Offset = "0xD325A4", VA = "0xD325A4")]
	public void PlayRoundMusic()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xD3269C", Offset = "0xD3269C", VA = "0xD3269C")]
	public void PlayRoundTransitionMusic()
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xD326EC", Offset = "0xD326EC", VA = "0xD326EC")]
	public void PlayMainMenuMusic()
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xD327CC", Offset = "0xD327CC", VA = "0xD327CC")]
	public void PlayMatchEndingTune()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xD32824", Offset = "0xD32824", VA = "0xD32824")]
	public void StopMatchEndingTune()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xD32840", Offset = "0xD32840", VA = "0xD32840")]
	public void PlayMapMusic(AlvoLevels level)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xD328E4", Offset = "0xD328E4", VA = "0xD328E4")]
	public void PlayMusic(AudioClip clip, float delay)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xD3299C", Offset = "0xD3299C", VA = "0xD3299C")]
	public void PlayScheduled(AudioClip clip, double dspTime)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xD32A18", Offset = "0xD32A18", VA = "0xD32A18")]
	public void PlayEndOfMatch(bool win)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xD32AB4", Offset = "0xD32AB4", VA = "0xD32AB4")]
	public void PlayEndOfRound(bool win)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xD32BA8", Offset = "0xD32BA8", VA = "0xD32BA8")]
	public void PlayDuckTrophyUnlocked()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xD32BD4", Offset = "0xD32BD4", VA = "0xD32BD4")]
	public void StopAmbienceAndMusic()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xD32BF0", Offset = "0xD32BF0", VA = "0xD32BF0")]
	public void FadeOutMusic(float speed, float delay = 0f)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xD32CB4", Offset = "0xD32CB4", VA = "0xD32CB4")]
	public void FadeInMusic(float speed)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xD32B24", Offset = "0xD32B24", VA = "0xD32B24")]
	[IteratorStateMachine(typeof(<DelayAndPlay>d__95))]
	private IEnumerator DelayAndPlay(AudioClip clip, float delay)
	{
		return null;
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xD32610", Offset = "0xD32610", VA = "0xD32610")]
	[IteratorStateMachine(typeof(<FadeOutAndPlay>d__96))]
	private IEnumerator FadeOutAndPlay(AudioClip clip, float delay = 0f, float overrideSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xD32DB8", Offset = "0xD32DB8", VA = "0xD32DB8")]
	public void LowerMusicVolume()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xD32DF0", Offset = "0xD32DF0", VA = "0xD32DF0")]
	[IteratorStateMachine(typeof(<ChangeMusicVolume>d__98))]
	private IEnumerator ChangeMusicVolume(float target)
	{
		return null;
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xD32CF0", Offset = "0xD32CF0", VA = "0xD32CF0")]
	[IteratorStateMachine(typeof(<FadeInMusicCoroutine>d__99))]
	private IEnumerator FadeInMusicCoroutine(float speed)
	{
		return null;
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xD32C34", Offset = "0xD32C34", VA = "0xD32C34")]
	[IteratorStateMachine(typeof(<FadeOutMusicCoroutine>d__100))]
	private IEnumerator FadeOutMusicCoroutine(float speed, float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xD32EE0", Offset = "0xD32EE0", VA = "0xD32EE0")]
	public VrAudioManager()
	{
	}
}
[Token(Token = "0x20002F5")]
public class VrInGameUIManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002F6")]
	public struct playerPerksImg
	{
		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image imgSlot1;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Image imgSlot2;
	}

	[Serializable]
	[Token(Token = "0x20002F7")]
	public struct playerRank
	{
		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image img;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private TMP_Text textComponent;

		[Token(Token = "0x17000257")]
		public string text
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xD3ADB8", Offset = "0xD3ADB8", VA = "0xD3ADB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xD3ADDC", Offset = "0xD3ADDC", VA = "0xD3ADDC")]
			set
			{
			}
		}
	}

	[Serializable]
	[Token(Token = "0x20002F8")]
	public class LanguageTextWrap
	{
		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("ARMING")]
		public string arming;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("DEFUSING")]
		public string defusing;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("DEFUSED")]
		public string defused;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Alerts")]
		[Tooltip("Bomb defused")]
		public LanguageText alert_bombDefused;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Bomb has been planted")]
		public LanguageText alert_bombPlanted;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Bomb reset")]
		public LanguageText alert_bombReset;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Bomb dropped")]
		public LanguageText alert_bombDropped;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("You have picked the bomb")]
		public LanguageText alert_bombPickedUp;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Bomb has been picked up")]
		public LanguageText alert_bombPickedUp3rdp;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Bomb exploded")]
		public LanguageText bombExploded;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Bomb activation canceled")]
		public LanguageText bombActivationCanceled;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Bomb defuse canceled")]
		public LanguageText bombDefuseCanceled;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Match")]
		[Tooltip("WIN")]
		public LanguageText win;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("LOSE")]
		public LanguageText lose;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("Time is Over")]
		public LanguageText timeOver;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("DRAW")]
		public LanguageText matchResultDraw;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("VICTORY")]
		public LanguageText matchResultVictory;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("DEFEAT")]
		public LanguageText matchResultDefeat;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("ROUND WON")]
		public LanguageText roundWon;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Tooltip("ROUND LOSS")]
		public LanguageText roundLoss;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Tooltip("Round Starts")]
		public LanguageText roundStarts;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Tooltip("ROUND")]
		public LanguageText round;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Tooltip("KILL")]
		public LanguageText info_kill;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Header("Tips")]
		[Tooltip("JUMP TO GRAB LADDER")]
		public LanguageText prompt_ladder;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Tooltip("HOLD <sprite=x> TO SET BOMB")]
		public LanguageText prompt_setBomb;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Tooltip("HOLD <sprite=x> TO DEFUSE BOMB")]
		public LanguageText prompt_defuseBomb;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Tooltip("<sprite=x> TO PICKUP BOMB")]
		public LanguageText prompt_pickupBomb;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Header("Alerts notifs")]
		[Tooltip("Team {number} eliminated")]
		public LanguageText teamEliminated;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Tooltip("ATTACK")]
		public LanguageText attack;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Tooltip("ATTACK")]
		public LanguageText defend;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Tooltip("Waiting for {playersToWait} on team {teamNumber}")]
		public LanguageText warning_notEnoughPlayers;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Tooltip("Waiting for at least 2 players on each team")]
		public LanguageText warning_notEnoughPlayersDefault;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public LanguageText chat_suicide;

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xD3AE00", Offset = "0xD3AE00", VA = "0xD3AE00")]
		public LanguageTextWrap()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002F9")]
	public class ZombieUI
	{
		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool notifiedBefore;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup[] canvas;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text cashText;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text roundDisplayHelper;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image helperImage;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasGroup roundDisplayHelperCG;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Mission")]
		[SerializeField]
		private CanvasGroup missionCg;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text missionHeader;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text missionDescription;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RectTransform tribalLeft;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform tribalRight;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Notificaton (pre-game text)")]
		public CanvasGroup notificationGameobject;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TMP_Text notificationHeadText;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ContentSizeFitter notificationHeadFitter;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public HorizontalLayoutGroup notificationDescriptionLg;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public RectTransform notificationDescriptionLight;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Image notificationDescriptionLightDot;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TMP_Text notificationTimerText;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TMP_Text notificationSecondaryDescription;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public RectTransform notificationRect;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Tooltip("UI that should be deactivated on zombie mode")]
		[SerializeField]
		private GameObject[] nonZombieUI;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[Header("Perk and special bullets")]
		private Sprite[] perkSprites;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Image perk1Img;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Image perk2Img;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Sprite[] specialBulletSprites;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Image specialBulletImg;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Header("End Game")]
		[SerializeField]
		private ZombieUIPlayerElement[] endGamePlayerElements;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TMP_Text endGameDesc;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TMP_Text endGameRounds;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TMP_Text endGameMvpKills;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TMP_Text endGameMvpRevives;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TMP_Text endGameMvpMoney;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Header("Round End Timer")]
		[SerializeField]
		private CanvasGroup roundEndTimerCanvasGroup;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private TMP_Text roundEndTimerText;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int roundEndTimerValueShowing;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public bool isShowingRoundEndTimer;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[Header("Language texts")]
		[Tooltip("REVIVES")]
		public LanguageText lk_revives;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Tooltip("KILLS")]
		public LanguageText lk_kills;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Tooltip("MONEY")]
		public LanguageText lk_money;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[Tooltip("ROUNDS")]
		public LanguageText lk_rounds;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Tooltip("ROUNDS")]
		public LanguageText lk_round;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Tooltip("BLED OUT")]
		public LanguageText lt_bledOut;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Tooltip("IS BLEEDING OUT")]
		public LanguageText lt_bleedingOut;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[Tooltip("LAST SURVIVOR IS DOWN")]
		public LanguageText lt_lastDown;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Coroutine notificationCoroutine;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xD3AE90", Offset = "0xD3AE90", VA = "0xD3AE90")]
		public void SetEndGameScreen(PlayerScoreElement[] playerScores, byte rounds, string endGameDesc)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xD3B188", Offset = "0xD3B188", VA = "0xD3B188")]
		public void UpdateCashAmount(int amount)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xD3B238", Offset = "0xD3B238", VA = "0xD3B238")]
		public void EnableZombieUI()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xD3B3BC", Offset = "0xD3B3BC", VA = "0xD3B3BC")]
		public void HideZombieUI(bool value)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xD3B484", Offset = "0xD3B484", VA = "0xD3B484")]
		public void EnableRoundDisplayHelper(bool value, [Optional] Sprite sprite)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xD3B660", Offset = "0xD3B660", VA = "0xD3B660")]
		public void UpdateRoundDisplayHelper(string value)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xD3B70C", Offset = "0xD3B70C", VA = "0xD3B70C")]
		public void ShowRoundEndTimer(string displayText, int seconds)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xD3B598", Offset = "0xD3B598", VA = "0xD3B598")]
		private void HideBigRoundTimer()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xD3B8D4", Offset = "0xD3B8D4", VA = "0xD3B8D4")]
		public void Notify(bool showTimer, string header, float delay = 0f, bool playSound = true)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xD3B9C4", Offset = "0xD3B9C4", VA = "0xD3B9C4")]
		public void EnableNotificationLight(bool value)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xD3B9F4", Offset = "0xD3B9F4", VA = "0xD3B9F4")]
		public void ChangeNotificationText(string value)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xD3BA18", Offset = "0xD3BA18", VA = "0xD3BA18")]
		public void HideNotification()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xD3BC34", Offset = "0xD3BC34", VA = "0xD3BC34")]
		public void UpdateNotificationSecondaryDescription(string value)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xD3BCAC", Offset = "0xD3BCAC", VA = "0xD3BCAC")]
		private void DisplayMissionText(float delay)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xD3BE80", Offset = "0xD3BE80", VA = "0xD3BE80")]
		public void UpdateMissionText(string header, string description, bool display = true, float delay = 0f)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xD3BFA8", Offset = "0xD3BFA8", VA = "0xD3BFA8")]
		public void ForceFadeOutMissionText()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xD3C108", Offset = "0xD3C108", VA = "0xD3C108")]
		public void UpdatePerkSprite(Perk perk, bool primary)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xD3C2A0", Offset = "0xD3C2A0", VA = "0xD3C2A0")]
		public void UpdateSpecialBullet(BulletType type, bool secondaryDW)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xD3C4AC", Offset = "0xD3C4AC", VA = "0xD3C4AC")]
		public ZombieUI()
		{
		}
	}

	[Token(Token = "0x20002FA")]
	[CompilerGenerated]
	private sealed class <DelaySettingsPositionTiming>d__216 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool deathCamera;

		[Token(Token = "0x17000258")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xD3D7E4", Offset = "0xD3D7E4", VA = "0xD3D7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xD3D82C", Offset = "0xD3D82C", VA = "0xD3D82C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xD3D730", Offset = "0xD3D730", VA = "0xD3D730")]
		[DebuggerHidden]
		public <DelaySettingsPositionTiming>d__216(int <>1__state)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xD3D758", Offset = "0xD3D758", VA = "0xD3D758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xD3D75C", Offset = "0xD3D75C", VA = "0xD3D75C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xD3D7EC", Offset = "0xD3D7EC", VA = "0xD3D7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FB")]
	[CompilerGenerated]
	private sealed class <DelayedShowSettingsCoroutine>d__220 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0xD3D8C0", Offset = "0xD3D8C0", VA = "0xD3D8C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0xD3D908", Offset = "0xD3D908", VA = "0xD3D908", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xD3D834", Offset = "0xD3D834", VA = "0xD3D834")]
		[DebuggerHidden]
		public <DelayedShowSettingsCoroutine>d__220(int <>1__state)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xD3D85C", Offset = "0xD3D85C", VA = "0xD3D85C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xD3D860", Offset = "0xD3D860", VA = "0xD3D860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xD3D8C8", Offset = "0xD3D8C8", VA = "0xD3D8C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[CompilerGenerated]
	private sealed class <ShowScoreTransitionSNDTiming>d__236 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool endOfMatch;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xD3E734", Offset = "0xD3E734", VA = "0xD3E734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xD3E77C", Offset = "0xD3E77C", VA = "0xD3E77C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xD3D910", Offset = "0xD3D910", VA = "0xD3D910")]
		[DebuggerHidden]
		public <ShowScoreTransitionSNDTiming>d__236(int <>1__state)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xD3D938", Offset = "0xD3D938", VA = "0xD3D938", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xD3D93C", Offset = "0xD3D93C", VA = "0xD3D93C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xD3E73C", Offset = "0xD3E73C", VA = "0xD3E73C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FD")]
	[CompilerGenerated]
	private sealed class <ShowEndRoundTiming>d__250 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x1700025E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xD3E8F0", Offset = "0xD3E8F0", VA = "0xD3E8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xD3E938", Offset = "0xD3E938", VA = "0xD3E938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xD3E784", Offset = "0xD3E784", VA = "0xD3E784")]
		[DebuggerHidden]
		public <ShowEndRoundTiming>d__250(int <>1__state)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xD3E7AC", Offset = "0xD3E7AC", VA = "0xD3E7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xD3E7B0", Offset = "0xD3E7B0", VA = "0xD3E7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xD3E8F8", Offset = "0xD3E8F8", VA = "0xD3E8F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FE")]
	[CompilerGenerated]
	private sealed class <ShowNextRoundTiming>d__253 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x17000260")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0xD3EA98", Offset = "0xD3EA98", VA = "0xD3EA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0xD3EAE0", Offset = "0xD3EAE0", VA = "0xD3EAE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xD3E940", Offset = "0xD3E940", VA = "0xD3E940")]
		[DebuggerHidden]
		public <ShowNextRoundTiming>d__253(int <>1__state)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xD3E968", Offset = "0xD3E968", VA = "0xD3E968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xD3E96C", Offset = "0xD3E96C", VA = "0xD3E96C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xD3EAA0", Offset = "0xD3EAA0", VA = "0xD3EAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FF")]
	[CompilerGenerated]
	private sealed class <DelayedPoints>d__301 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float points;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0xD3EC3C", Offset = "0xD3EC3C", VA = "0xD3EC3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600135D")]
			[Address(RVA = "0xD3EC84", Offset = "0xD3EC84", VA = "0xD3EC84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xD3EAE8", Offset = "0xD3EAE8", VA = "0xD3EAE8")]
		[DebuggerHidden]
		public <DelayedPoints>d__301(int <>1__state)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xD3EB10", Offset = "0xD3EB10", VA = "0xD3EB10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xD3EB14", Offset = "0xD3EB14", VA = "0xD3EB14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xD3EC44", Offset = "0xD3EC44", VA = "0xD3EC44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000300")]
	[CompilerGenerated]
	private sealed class <InactivityWarningTiming>d__306 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xD3EF28", Offset = "0xD3EF28", VA = "0xD3EF28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0xD3EF70", Offset = "0xD3EF70", VA = "0xD3EF70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xD3EC8C", Offset = "0xD3EC8C", VA = "0xD3EC8C")]
		[DebuggerHidden]
		public <InactivityWarningTiming>d__306(int <>1__state)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xD3ECB4", Offset = "0xD3ECB4", VA = "0xD3ECB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xD3ECB8", Offset = "0xD3ECB8", VA = "0xD3ECB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xD3EF30", Offset = "0xD3EF30", VA = "0xD3EF30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000301")]
	[CompilerGenerated]
	private sealed class <HeadSetTimerCoroutine>d__319 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool SND;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool playSounds;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int time;

		[Token(Token = "0x17000266")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0xD3F410", Offset = "0xD3F410", VA = "0xD3F410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xD3F458", Offset = "0xD3F458", VA = "0xD3F458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xD3EF78", Offset = "0xD3EF78", VA = "0xD3EF78")]
		[DebuggerHidden]
		public <HeadSetTimerCoroutine>d__319(int <>1__state)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xD3EFA0", Offset = "0xD3EFA0", VA = "0xD3EFA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xD3EFA4", Offset = "0xD3EFA4", VA = "0xD3EFA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xD3F418", Offset = "0xD3F418", VA = "0xD3F418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000302")]
	[CompilerGenerated]
	private sealed class <CountToSpawn>d__325 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xD3F734", Offset = "0xD3F734", VA = "0xD3F734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0xD3F77C", Offset = "0xD3F77C", VA = "0xD3F77C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xD3F460", Offset = "0xD3F460", VA = "0xD3F460")]
		[DebuggerHidden]
		public <CountToSpawn>d__325(int <>1__state)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xD3F488", Offset = "0xD3F488", VA = "0xD3F488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xD3F48C", Offset = "0xD3F48C", VA = "0xD3F48C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xD3F73C", Offset = "0xD3F73C", VA = "0xD3F73C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000303")]
	[CompilerGenerated]
	private sealed class <ShowAlertTiming>d__328 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string symbol;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string message;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0xD3FA30", Offset = "0xD3FA30", VA = "0xD3FA30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xD3FA78", Offset = "0xD3FA78", VA = "0xD3FA78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xD3F784", Offset = "0xD3F784", VA = "0xD3F784")]
		[DebuggerHidden]
		public <ShowAlertTiming>d__328(int <>1__state)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xD3F7AC", Offset = "0xD3F7AC", VA = "0xD3F7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xD3F7B0", Offset = "0xD3F7B0", VA = "0xD3F7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xD3FA38", Offset = "0xD3FA38", VA = "0xD3FA38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000304")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass349_0
	{
		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool playSound;

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xD3FA80", Offset = "0xD3FA80", VA = "0xD3FA80")]
		public <>c__DisplayClass349_0()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xD3FA88", Offset = "0xD3FA88", VA = "0xD3FA88")]
		internal void <___Z_Notification_Coroutine>b__0()
		{
		}
	}

	[Token(Token = "0x2000305")]
	[CompilerGenerated]
	private sealed class <___Z_Notification_Coroutine>d__349 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playSound;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string header;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float delay;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass349_0 <>8__1;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool showTimer;

		[Token(Token = "0x1700026C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0xD3FFA8", Offset = "0xD3FFA8", VA = "0xD3FFA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0xD3FFF0", Offset = "0xD3FFF0", VA = "0xD3FFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xD3FB24", Offset = "0xD3FB24", VA = "0xD3FB24")]
		[DebuggerHidden]
		public <___Z_Notification_Coroutine>d__349(int <>1__state)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xD3FB4C", Offset = "0xD3FB4C", VA = "0xD3FB4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xD3FB50", Offset = "0xD3FB50", VA = "0xD3FB50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xD3FFB0", Offset = "0xD3FFB0", VA = "0xD3FFB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000306")]
	[CompilerGenerated]
	private sealed class <ZombiesEndGameCoroutine>d__356 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIManager <>4__this;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte rounds;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string textToDisplay;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <deathCameraWasEnabled>5__2;

		[Token(Token = "0x1700026E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0xD40824", Offset = "0xD40824", VA = "0xD40824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0xD4086C", Offset = "0xD4086C", VA = "0xD4086C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xD3FFF8", Offset = "0xD3FFF8", VA = "0xD3FFF8")]
		[DebuggerHidden]
		public <ZombiesEndGameCoroutine>d__356(int <>1__state)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xD40020", Offset = "0xD40020", VA = "0xD40020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xD40024", Offset = "0xD40024", VA = "0xD40024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xD4082C", Offset = "0xD4082C", VA = "0xD4082C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject foreGroundGO;

	[Token(Token = "0x4001C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject middleGroundGO;

	[Token(Token = "0x4001C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftCameraSideGO;

	[Token(Token = "0x4001C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rigthCameraSideGo;

	[Token(Token = "0x4001C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject zombieHandUiGo;

	[Token(Token = "0x4001C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject zombieAmmoGo;

	[Token(Token = "0x4001C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ammoGO;

	[Token(Token = "0x4001C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftGunSideGO;

	[Token(Token = "0x4001C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hitMarkGo;

	[Token(Token = "0x4001C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject miniMapGo;

	[Token(Token = "0x4001C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject teamMarkersGo;

	[Token(Token = "0x4001C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject hideShowAmmoGo;

	[Token(Token = "0x4001C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject matchTimerGo;

	[Token(Token = "0x4001C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject headsetUIGo;

	[Token(Token = "0x4001C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public VrInGameUIStyle foreGroundStyle;

	[Token(Token = "0x4001C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public VrInGameUIStyle middleGroundStyle;

	[Token(Token = "0x4001C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public VrInGameUIStyle leftCameraSideStyle;

	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public VrInGameUIStyle rigthCameraSideStyle;

	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public VrInGameUIStyle ammoStyle;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public VrInGameUIStyle leftGunSideStyle;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Transform foregroundTarget;

	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public Transform middleGroundTarget;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public Transform leftCameraSideTarget;

	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public Transform rigthCameraSideTarget;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public Transform anchorForCameraSides;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 zombieHandUiTarget;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Color32 redColor;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color32 yellowColor;

	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Header("External references")]
	public FPSPlayer fpsPlayer;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject levelManagerGo;

	[Token(Token = "0x4001C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public LevelManager levelManager;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public VrInGameLinker linker;

	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bl_MiniMap bl_map;

	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public VrInputModule inputModule;

	[Token(Token = "0x4001C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Camera pointerCamera;

	[Token(Token = "0x4001C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VrKillstreakUISetter vrKillstreakUISetter;

	[Token(Token = "0x4001C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public bool showCloseUI;

	[Token(Token = "0x4001C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	[HideInInspector]
	public bool showMiddleGroundUI;

	[Token(Token = "0x4001C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[Header("In Game Menus")]
	[Space]
	public float gameNotificationsMenuDistance;

	[Token(Token = "0x4001C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float gameNotificationsYModifier;

	[Token(Token = "0x4001C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float settingsMenuDistance;

	[Token(Token = "0x4001C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float deathPanelPs5Distance;

	[Token(Token = "0x4001C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float deathPanelPs5YPosOffset;

	[Token(Token = "0x4001C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float settingsYModifier;

	[Token(Token = "0x4001C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float endGameYModifier;

	[Token(Token = "0x4001C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float deathCameraMenuYModifier;

	[Token(Token = "0x4001C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float menuRaycastDistance;

	[Token(Token = "0x4001C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float raycastFordwardMultiplier;

	[Token(Token = "0x4001C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float deathInfoMenuDistance;

	[Token(Token = "0x4001C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float endGameMenuDistance;

	[Token(Token = "0x4001C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public LayerMask menuRaycastLayermask;

	[Token(Token = "0x4001C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject settingsParent;

	[Token(Token = "0x4001C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject settingsMainPnl;

	[Token(Token = "0x4001C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject handPointerGo;

	[Token(Token = "0x4001C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject settingsCanvasCollider;

	[Token(Token = "0x4001C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public VrSettings vrSettings;

	[Token(Token = "0x4001C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform boxHitTransform;

	[Token(Token = "0x4001C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public RespawnLoadingUI m_RespawnLoading;

	[Token(Token = "0x4001C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Header("End Game Panels")]
	[Space]
	public GameObject rewardsParent;

	[Token(Token = "0x4001C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject scoreboardFFAParent;

	[Token(Token = "0x4001CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject scoreboardTDMParent;

	[Token(Token = "0x4001CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject mapVotingParent;

	[Token(Token = "0x4001CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject endGameMapVotingGo;

	[Token(Token = "0x4001CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public CanvasGroup mapVotingCG;

	[Token(Token = "0x4001CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Animator headsetTimerAnimator;

	[Token(Token = "0x4001CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject FFATitle;

	[Token(Token = "0x4001CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject TDMTitle;

	[Token(Token = "0x4001CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject SNDTitle;

	[Token(Token = "0x4001CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Transform topHeaderTransform;

	[Token(Token = "0x4001CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Tooltip("This are the timers at bottom of radar")]
	[Space]
	[Header("Match Timer")]
	public TMP_Text timerMinutes;

	[Token(Token = "0x4001CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public TMP_Text timerSeconds;

	[Token(Token = "0x4001CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public CanvasGroup matchTimerGroup;

	[Token(Token = "0x4001CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[Tooltip("Timer that is attach to Headset")]
	public TMP_Text timerHeadsetMinutes;

	[Token(Token = "0x4001CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public TMP_Text timerHeadsetSeconds;

	[Token(Token = "0x4001CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public CanvasGroup headsetTimerGroup;

	[Token(Token = "0x4001CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public TMP_Text warningMessage;

	[Token(Token = "0x4001CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public TMP_Text warningSymbol;

	[Token(Token = "0x4001CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Animator warningAnimator;

	[Token(Token = "0x4001CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private bool matchTimerIsShowing;

	[Token(Token = "0x4001CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public TMP_Text SNDSpectatorTimerMinutes;

	[Token(Token = "0x4001CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public TMP_Text SNDSpectatorTimerSeconds;

	[Token(Token = "0x4001CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public TMP_Text SNDSpectatorWarningMessage;

	[Token(Token = "0x4001CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public TMP_Text SNDSpectatorWarningSymbol;

	[Token(Token = "0x4001CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Animator SNDSpectatorWarningAnimator;

	[Token(Token = "0x4001CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[Space]
	[Header("Inactivity Warning")]
	public GameObject warningObjOne;

	[Token(Token = "0x4001CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject warningObjTwo;

	[Token(Token = "0x4001CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public TMP_Text warningCountTextOne;

	[Token(Token = "0x4001CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public TMP_Text warningCountTextTwo;

	[Token(Token = "0x4001CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[Space]
	[Header("Hit Direction")]
	public Transform hitDirection;

	[Token(Token = "0x4001CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Image hitDirectionImg;

	[Token(Token = "0x4001CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Image healthCircleImg;

	[Token(Token = "0x4001CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Image staminaCircleImg;

	[Token(Token = "0x4001CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[Space]
	[Header("Reference points/targets from gun")]
	public Transform ammoTarget;

	[Token(Token = "0x4001CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Transform leftGunSideTarget;

	[Token(Token = "0x4001CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Transform rigthGunSideTarget;

	[Token(Token = "0x4001CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Transform gunFordwardPoint;

	[Token(Token = "0x4001CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[Space]
	[Header("Rotation and moving speed for every target")]
	public float generalRotationSpeed;

	[Token(Token = "0x4001CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public float fgSpeed;

	[Token(Token = "0x4001CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float mgSpeed;

	[Token(Token = "0x4001CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float lcSpeed;

	[Token(Token = "0x4001CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public float rcSpeed;

	[Token(Token = "0x4001CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	public float ammoFadeDistance;

	[Token(Token = "0x4001CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public float ammoMaxAlpha;

	[Token(Token = "0x4001CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public float minDistCamAnchors;

	[Token(Token = "0x4001CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[Space]
	[Header("Hit markers & scoring")]
	public RectTransform hitMarkerRect;

	[Token(Token = "0x4001CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public CanvasGroup hitMarkerCanvasGroup;

	[Token(Token = "0x4001CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public CanvasGroup pointsCanvas;

	[Token(Token = "0x4001CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public float hitMarkerFadeSpeed;

	[Token(Token = "0x4001CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public float poitsFadeSpeed;

	[Token(Token = "0x4001CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public float hitMarkerSizeMultiplier;

	[Token(Token = "0x4001CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public TMP_Text pointsText;

	[Token(Token = "0x4001CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Animator pointsAnimator;

	[Token(Token = "0x4001CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public RawImage hitmarkerImg;

	[Token(Token = "0x4001CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public Texture hitMarkerSprite;

	[Token(Token = "0x4001CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public Texture hitHeadshotSprite;

	[Token(Token = "0x4001CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public RectTransform gunPromptRect;

	[Token(Token = "0x4001CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public GameObject gunPromptGo;

	[Token(Token = "0x4001CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public TMP_Text gunPromptText;

	[Token(Token = "0x4001CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[Space]
	[Header("Scoreboard Settings")]
	public Transform scoreboardParent;

	[Token(Token = "0x4001CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public Vector3 scoreboardParentRotOffset;

	[Token(Token = "0x4001CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public GameObject SNDScoresCanvas;

	[Token(Token = "0x4001CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public ScoreBoardPanel ScorePanelV2;

	[Token(Token = "0x4001CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	[Header("Leave Match Btns END Panel")]
	[Space]
	public GameObject leaveAloneBtn;

	[Token(Token = "0x4001CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public GameObject leaveMatchAndParty;

	[Token(Token = "0x4001CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public GameObject leaveWithParty;

	[Token(Token = "0x4001CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	[Space]
	[Header("Loadout Selection")]
	public GameObject loadoutSelectionMainPnl;

	[Token(Token = "0x4001CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public LoadoutIconList m_WeaponIcons;

	[Token(Token = "0x4001CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public LoadoutIconList m_GrenadeIcons;

	[Token(Token = "0x4001CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public LoadoutIconList m_KillstreakIcons;

	[Token(Token = "0x4001CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public LoadoutIconDisplayer[] m_LoadoutDisplayers;

	[Token(Token = "0x4001CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public LoadoutIconDisplayer[] m_RoundEndLoadoutDisplayers;

	[Token(Token = "0x4001CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	[Header("Death, respawn, down/up")]
	[Space]
	public DeathAndRespawnPanel cRespawnPanel;

	[Token(Token = "0x4001CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	[SerializeField]
	[Space]
	private RectTransform[] bleedOutCanvas;

	[Token(Token = "0x4001CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	[Space]
	public GameObject preGameGo;

	[Token(Token = "0x4001CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public TMP_Text preGameText;

	[Token(Token = "0x4001CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public TMP_Text preGameCounter;

	[Token(Token = "0x4001CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	[Header("Zombies")]
	[Space]
	public GameObject endScreen;

	[Token(Token = "0x4001CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public GameObject reviveCanvas;

	[Token(Token = "0x4001CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public GameObject revivePrompt;

	[Token(Token = "0x4001CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public Image reviveProgress;

	[Token(Token = "0x4001CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public ZombieUI zombieUI;

	[Token(Token = "0x4001CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public Image explosionBlind;

	[Token(Token = "0x4001CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	[Header("Search And Destroy")]
	[Space]
	public CanvasGroup markersCanvasGroup;

	[Token(Token = "0x4001CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public GameObject notEnoughPlayersGo;

	[Token(Token = "0x4001CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public TMP_Text notEnoughPlayersLbl;

	[Token(Token = "0x4001CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public GameObject spectatingGo;

	[Token(Token = "0x4001CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public TMP_Text spectatorCameraLbl;

	[Token(Token = "0x4001CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public TMP_Text headsetPrompt;

	[Token(Token = "0x4001CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public GameObject bombSliderObject;

	[Token(Token = "0x4001CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public Slider bombSlider;

	[Token(Token = "0x4001CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public TMP_Text bombScreenText;

	[Token(Token = "0x4001CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public GameObject killstreakIcons;

	[Token(Token = "0x4001CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public GameObject gunBombIcon;

	[Token(Token = "0x4001CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public GameObject attackDefenseGo;

	[Token(Token = "0x4001CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public TMP_Text attackDefenseGunLbl;

	[Token(Token = "0x4001CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public Animator bombAnimator;

	[Token(Token = "0x4001D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public BombAnimEvents bombAnimEvents;

	[Token(Token = "0x4001D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	[Space]
	public GameObject nextRoundGo;

	[Token(Token = "0x4001D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public Animator nextRoundAnimator;

	[Token(Token = "0x4001D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public TMP_Text roundNumberLbl;

	[Token(Token = "0x4001D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public TMP_Text attackDefenseLbl;

	[Token(Token = "0x4001D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public Image nextRoundBG;

	[Token(Token = "0x4001D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	[Space]
	public GameObject endRoundGo;

	[Token(Token = "0x4001D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public Animator endRoundAnimator;

	[Token(Token = "0x4001D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public TMP_Text endHeaderLbl;

	[Token(Token = "0x4001D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public TMP_Text endMainLbl;

	[Token(Token = "0x4001D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public Image endRoundBG;

	[Token(Token = "0x4001D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	[Space]
	public GameObject roundEndGo;

	[Token(Token = "0x4001D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public GameObject matchEndGo;

	[Token(Token = "0x4001D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public TMP_Text matchEndResult;

	[Token(Token = "0x4001D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public TMP_Text matchEndscore;

	[Token(Token = "0x4001D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public TMP_Text matchEndTimer;

	[Token(Token = "0x4001D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public TMP_Text winLoseSND;

	[Token(Token = "0x4001D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public TMP_Text scoreSND;

	[Token(Token = "0x4001D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	public TMP_Text countDownSND;

	[Token(Token = "0x4001D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public TMP_Text roundNumberSND;

	[Token(Token = "0x4001D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	[Header("HardPoint")]
	[Space]
	public GameObject hpBottomMinimapGo;

	[Token(Token = "0x4001D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	[Space]
	private ScoringManager m_ScoringManager;

	[Token(Token = "0x4001D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public Canvas[] allCanvas;

	[Token(Token = "0x4001D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	[HideInInspector]
	public bool dead;

	[Token(Token = "0x4001D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x551")]
	public bool spectating;

	[Token(Token = "0x4001D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x552")]
	public bool m_IsMenuOpen;

	[Token(Token = "0x4001D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	private Collider m_SettingsPanelCollider;

	[Token(Token = "0x4001D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public bool respawning;

	[Token(Token = "0x4001D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x561")]
	public bool readyToRespawn;

	[Token(Token = "0x4001D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	[Space]
	public TMP_Text[] names;

	[Token(Token = "0x4001D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public TMP_Text[] knowTeam;

	[Token(Token = "0x4001D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	public TMP_Text[] assignedToOurTeam;

	[Token(Token = "0x4001D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public TMP_Text localDataTeam;

	[Token(Token = "0x4001D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	public TMP_Text profileTeam;

	[Token(Token = "0x4001D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public TMP_Text lastAppliedTeam;

	[Token(Token = "0x4001D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	private Vector3 ammoGoLocalScale;

	[Token(Token = "0x4001D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A4")]
	private Vector3 leftGunSideGoLocalScale;

	[Token(Token = "0x4001D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	[Header("Language Texts")]
	public LanguageTextWrap usedLT;

	[Token(Token = "0x4001D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	private float settingsBtnCounter;

	[Token(Token = "0x4001D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5BC")]
	[Space]
	public float sBtnTimer;

	[Token(Token = "0x4001D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	private WaitForSeconds WFS_DelaySettingsPositionTiming;

	[Token(Token = "0x4001D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	private WaitForSeconds waitDelayedShowSettings;

	[Token(Token = "0x4001D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	public System.Action OnSettingsOpened;

	[Token(Token = "0x4001D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	public System.Action OnSettingsClosed;

	[Token(Token = "0x4001D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	private Vector3 offset;

	[Token(Token = "0x4001D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	private Coroutine cShowScoreTransitionSndTiming;

	[Token(Token = "0x4001D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	private int win;

	[Token(Token = "0x4001D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5FC")]
	private int matchEndCounter;

	[Token(Token = "0x4001D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	private WaitForSeconds waitPreShowScoresTransition;

	[Token(Token = "0x4001D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	private WaitForSeconds waitPreSNDScoresTransition;

	[Token(Token = "0x4001D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	private WaitForSeconds waitCounter;

	[Token(Token = "0x4001D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	private WaitForSeconds waitForShowEndRound;

	[Token(Token = "0x4001D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	private WaitForSeconds waitToHideRound;

	[Token(Token = "0x4001D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
	[HideInInspector]
	public bool m_OnEndRoundTransition;

	[Token(Token = "0x4001D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	private WaitForSeconds waitForShowNextRound;

	[Token(Token = "0x4001D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
	private Vector3 anchorLookAt;

	[Token(Token = "0x4001D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x644")]
	public float anchorDistance;

	[Token(Token = "0x4001D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	public bool positionMiddleGround;

	[Token(Token = "0x4001D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64C")]
	private float distanceToAmmo;

	[Token(Token = "0x4001D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	private bool isLeft;

	[Token(Token = "0x4001D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x651")]
	[HideInInspector]
	public bool resetGunUI;

	[Token(Token = "0x4001D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x654")]
	private Vector3 angleDir;

	[Token(Token = "0x4001D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	private float hitDistance;

	[Token(Token = "0x4001D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x664")]
	private float sizeDelta;

	[Token(Token = "0x4001D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	private Vector2 newRectSize;

	[Token(Token = "0x4001D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	private bool isHeadShot;

	[Token(Token = "0x4001D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
	private WaitForSeconds delay;

	[Token(Token = "0x4001D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	private bool inactivityWarning;

	[Token(Token = "0x4001D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x684")]
	private int countDown;

	[Token(Token = "0x4001D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	private int seconds;

	[Token(Token = "0x4001D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	private string displaySeconds;

	[Token(Token = "0x4001D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	private string displayMinutes;

	[Token(Token = "0x4001D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	private bool minuteWarning;

	[Token(Token = "0x4001D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A1")]
	private bool secondsWarning;

	[Token(Token = "0x4001D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A2")]
	private bool startingWarning;

	[Token(Token = "0x4001D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A4")]
	private int secondsCount;

	[Token(Token = "0x4001D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
	private int currentTimeCount;

	[Token(Token = "0x4001D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6AC")]
	private int prevTimeCount;

	[Token(Token = "0x4001D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
	private bool fading;

	[Token(Token = "0x4001D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
	private Coroutine countCo;

	[Token(Token = "0x4001D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	private WaitForSeconds wait;

	[Token(Token = "0x4001D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
	private bool showMinimapUI;

	[Token(Token = "0x4001D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C9")]
	private bool showRightSideUI;

	[Token(Token = "0x4001D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6CA")]
	private bool showAmmoUI;

	[Token(Token = "0x4001D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6CB")]
	private bool showMathcTimerUI;

	[Token(Token = "0x4001D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6CC")]
	private bool m_ShowHeadsetUI;

	[Token(Token = "0x4001D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6CD")]
	public bool m_showPreGameTimer;

	[Token(Token = "0x4001D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6CE")]
	private bool bombDropped;

	[Token(Token = "0x4001D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	[Header("Armor")]
	[SerializeField]
	private Image armor;

	[Token(Token = "0x4001D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
	private WaitForSeconds waitFadeToBlack;

	[Token(Token = "0x4001D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	private WaitForSeconds waitFadeOut;

	[Token(Token = "0x4001D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
	private WaitForSeconds waitFadeIn;

	[Token(Token = "0x4001D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	[Header("Zombie nothing camera")]
	public Camera nothingCamera;

	[Token(Token = "0x4001D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
	public Color nothingCameraDefaultColor;

	[Token(Token = "0x4001D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
	public TutorialUI tutorialUI;

	[Token(Token = "0x4001D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Show;

	[Token(Token = "0x4001D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Hide;

	[Token(Token = "0x4001D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int BounceIn;

	[Token(Token = "0x4001D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int Drop;

	[Token(Token = "0x17000255")]
	public bool IsSettingDisplaying
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xD33788", Offset = "0xD33788", VA = "0xD33788")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000256")]
	public Transform CurrentHeadSet
	{
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD37968", Offset = "0xD37968", VA = "0xD37968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xD3380C", Offset = "0xD3380C", VA = "0xD3380C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0xD338F0", Offset = "0xD338F0", VA = "0xD338F0")]
	public void Start()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xD33B74", Offset = "0xD33B74", VA = "0xD33B74")]
	public void Update()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xD34C5C", Offset = "0xD34C5C", VA = "0xD34C5C")]
	private void UpdateVoice()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xD355E0", Offset = "0xD355E0", VA = "0xD355E0")]
	private void UpdateVoiceBubles(bool checkTeam = true)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xD35600", Offset = "0xD35600", VA = "0xD35600")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xD3569C", Offset = "0xD3569C", VA = "0xD3569C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xD368A4", Offset = "0xD368A4", VA = "0xD368A4")]
	[Obsolete]
	public void SetCurrentLoadout(int index)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xD34778", Offset = "0xD34778", VA = "0xD34778")]
	public void ShowLoadoutSelection()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xD36D00", Offset = "0xD36D00", VA = "0xD36D00")]
	private void ShowLoadoutIcons(LoadoutIconDisplayer[] loadoutDisplayers)
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xD37184", Offset = "0xD37184", VA = "0xD37184")]
	private Sprite SearchLoadoutIconByNumber(LoadoutIconList icons, int itemNumber)
	{
		return null;
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xD349E8", Offset = "0xD349E8", VA = "0xD349E8")]
	public void HideLoadoutSelection(bool endGame = false)
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xD372B4", Offset = "0xD372B4", VA = "0xD372B4")]
	public void ShowRespawnLoading(bool show)
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xD3720C", Offset = "0xD3720C", VA = "0xD3720C")]
	public void ShowScoreboard()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xD37314", Offset = "0xD37314", VA = "0xD37314")]
	[IteratorStateMachine(typeof(<DelaySettingsPositionTiming>d__216))]
	public IEnumerator DelaySettingsPositionTiming(bool deathCamera = false)
	{
		return null;
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xD37390", Offset = "0xD37390", VA = "0xD37390")]
	public void HideScoreboard()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xD373DC", Offset = "0xD373DC", VA = "0xD373DC")]
	public void ShowSettingsMenuDelayed()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xD373FC", Offset = "0xD373FC", VA = "0xD373FC")]
	[IteratorStateMachine(typeof(<DelayedShowSettingsCoroutine>d__220))]
	private IEnumerator DelayedShowSettingsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xD37464", Offset = "0xD37464", VA = "0xD37464")]
	public void UpdateScoreBoard()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xD34CCC", Offset = "0xD34CCC", VA = "0xD34CCC")]
	public void ShowSettingsMenu()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xD369F4", Offset = "0xD369F4", VA = "0xD369F4")]
	public void AdjustSettingsPosition(bool deathCamera = false)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xD3505C", Offset = "0xD3505C", VA = "0xD3505C")]
	public void HideSettingsMenu(bool endGame = false)
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xD3538C", Offset = "0xD3538C", VA = "0xD3538C")]
	public void SetspectatorCamera()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0xD37640", Offset = "0xD37640", VA = "0xD37640")]
	public void ShowScoreTransitionSND(bool endOfMatch = false)
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xD37760", Offset = "0xD37760", VA = "0xD37760")]
	[IteratorStateMachine(typeof(<ShowScoreTransitionSNDTiming>d__236))]
	private IEnumerator ShowScoreTransitionSNDTiming(bool endOfMatch = false)
	{
		return null;
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xD377DC", Offset = "0xD377DC", VA = "0xD377DC")]
	public void HideScoreTransition()
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xD379D4", Offset = "0xD379D4", VA = "0xD379D4")]
	public Vector3 GetEndGameMenuDistance()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xD37578", Offset = "0xD37578", VA = "0xD37578")]
	public Vector3 GetSettingsMenuDistance(bool deathCamera = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xD37E54", Offset = "0xD37E54", VA = "0xD37E54")]
	public Vector3 GetDeathCameraMenuDistance()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xD379F4", Offset = "0xD379F4", VA = "0xD379F4")]
	public Vector3 GetCurrentUIPosition(float menuDistance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xD37C24", Offset = "0xD37C24", VA = "0xD37C24")]
	public Vector3 GetSettingsUIPosition(float menuDistance, Transform currentHeadset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xD37E70", Offset = "0xD37E70", VA = "0xD37E70")]
	public void ShowEndMatch(string condition, int win)
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xD38174", Offset = "0xD38174", VA = "0xD38174")]
	public void ShowEndRound(string condition, bool win)
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xD3810C", Offset = "0xD3810C", VA = "0xD3810C")]
	[IteratorStateMachine(typeof(<ShowEndRoundTiming>d__250))]
	private IEnumerator ShowEndRoundTiming()
	{
		return null;
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xD383CC", Offset = "0xD383CC", VA = "0xD383CC")]
	public void ShowNextRound(int roundNumber, bool isAttack)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xD3878C", Offset = "0xD3878C", VA = "0xD3878C")]
	[IteratorStateMachine(typeof(<ShowNextRoundTiming>d__253))]
	private IEnumerator ShowNextRoundTiming()
	{
		return null;
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xD387F4", Offset = "0xD387F4", VA = "0xD387F4")]
	public void ShowBombGunIcon()
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xD38814", Offset = "0xD38814", VA = "0xD38814")]
	public void HideBombGunIcon()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xD38674", Offset = "0xD38674", VA = "0xD38674")]
	public void ShowAttackDefendLbl(bool onAttack)
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xD38834", Offset = "0xD38834", VA = "0xD38834")]
	public void HideAttackDefendLbl()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xD34F6C", Offset = "0xD34F6C", VA = "0xD34F6C")]
	public void DisableMarkersAndHeadsetUI()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xD35354", Offset = "0xD35354", VA = "0xD35354")]
	public void EnableMarkersAndHeadsetUI()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xD38854", Offset = "0xD38854", VA = "0xD38854")]
	public void UpdateNotEnoughPlayers(string text)
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xD38878", Offset = "0xD38878", VA = "0xD38878")]
	public void ShowNotEnoughPlayers()
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xD388B8", Offset = "0xD388B8", VA = "0xD388B8")]
	public void HideNotEnoughPlayers()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xD388F8", Offset = "0xD388F8", VA = "0xD388F8")]
	public void ShowSpectating()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xD389C4", Offset = "0xD389C4", VA = "0xD389C4")]
	public void HideSpectating()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xD38A04", Offset = "0xD38A04", VA = "0xD38A04")]
	public void HideCloseUI()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xD38A78", Offset = "0xD38A78", VA = "0xD38A78")]
	public void ShowCloseUI()
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xD38AEC", Offset = "0xD38AEC", VA = "0xD38AEC")]
	public void HideMiddleGroundUI()
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xD38B0C", Offset = "0xD38B0C", VA = "0xD38B0C")]
	public void ShowMiddleGroundUI()
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xD38B2C", Offset = "0xD38B2C", VA = "0xD38B2C")]
	public void ActivateGunUI(Transform ammoTarget, Transform leftTarget, Transform rigthTarget)
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xD38F38", Offset = "0xD38F38", VA = "0xD38F38")]
	public Vector3 GetScale(Vector3 sourceScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xD39050", Offset = "0xD39050", VA = "0xD39050")]
	public void DisableGunUI()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xD39128", Offset = "0xD39128", VA = "0xD39128")]
	private void CheckMapAndAmmoReferences()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xD392B0", Offset = "0xD392B0", VA = "0xD392B0")]
	public void TemporalHideUI()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xD39324", Offset = "0xD39324", VA = "0xD39324")]
	public void ReActivateUI()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xD39398", Offset = "0xD39398", VA = "0xD39398")]
	public void JumpToPlace()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xD35714", Offset = "0xD35714", VA = "0xD35714")]
	private void CheckForBigChanges()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xD35828", Offset = "0xD35828", VA = "0xD35828")]
	private void PositionPnlAnchors()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xD35A44", Offset = "0xD35A44", VA = "0xD35A44")]
	private void PositionForeGround()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xD39458", Offset = "0xD39458", VA = "0xD39458")]
	public void PositionMiddleGroundInFront()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xD35B00", Offset = "0xD35B00", VA = "0xD35B00")]
	private void PositionLeftCamera()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xD35C68", Offset = "0xD35C68", VA = "0xD35C68")]
	private void PositionRigthCamera()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xD36624", Offset = "0xD36624", VA = "0xD36624")]
	private void PositionZombieHandUI()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xD35DD0", Offset = "0xD35DD0", VA = "0xD35DD0")]
	private void PositionAmmo()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xD360D0", Offset = "0xD360D0", VA = "0xD360D0")]
	private void PositionLeftGunSide()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xD395A8", Offset = "0xD395A8", VA = "0xD395A8")]
	public void SetHitMarkerCol(Vector3 point, bool isHeadShot = false)
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xD3981C", Offset = "0xD3981C", VA = "0xD3981C")]
	public void SetHitMarker(RaycastHit hit, bool isHeadShot = false)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xD36590", Offset = "0xD36590", VA = "0xD36590")]
	public void FadeHitMarker()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xD39AA8", Offset = "0xD39AA8", VA = "0xD39AA8")]
	public void DisplayPoints(string text, float points)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xD39B00", Offset = "0xD39B00", VA = "0xD39B00")]
	[IteratorStateMachine(typeof(<DelayedPoints>d__301))]
	public IEnumerator DelayedPoints(string text, float points)
	{
		return null;
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xD39B78", Offset = "0xD39B78", VA = "0xD39B78")]
	public void DisplayPrompt(string text)
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xD39CE4", Offset = "0xD39CE4", VA = "0xD39CE4")]
	public void HidePrompt()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xD35578", Offset = "0xD35578", VA = "0xD35578")]
	[IteratorStateMachine(typeof(<InactivityWarningTiming>d__306))]
	private IEnumerator InactivityWarningTiming()
	{
		return null;
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xD39D54", Offset = "0xD39D54", VA = "0xD39D54")]
	public void UpdateMatchTimer(bool SND = false)
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xD3A030", Offset = "0xD3A030", VA = "0xD3A030")]
	private void ShowHeadsetMatchTimer(int time, bool playSounds = false, bool SND = false)
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xD3A058", Offset = "0xD3A058", VA = "0xD3A058")]
	[IteratorStateMachine(typeof(<HeadSetTimerCoroutine>d__319))]
	private IEnumerator HeadSetTimerCoroutine(int time, bool playSounds = false, bool SND = false)
	{
		return null;
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xD3A0F0", Offset = "0xD3A0F0", VA = "0xD3A0F0")]
	public void UpdateHeadsetTimerText()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xD3A138", Offset = "0xD3A138", VA = "0xD3A138")]
	public void SpawnCount()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xD38078", Offset = "0xD38078", VA = "0xD38078")]
	public void StopSpawnCount()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xD3A164", Offset = "0xD3A164", VA = "0xD3A164")]
	[IteratorStateMachine(typeof(<CountToSpawn>d__325))]
	private IEnumerator CountToSpawn()
	{
		return null;
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xD3A1CC", Offset = "0xD3A1CC", VA = "0xD3A1CC")]
	public void SetAudioAgain()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xD3A1F4", Offset = "0xD3A1F4", VA = "0xD3A1F4")]
	public void ShowAlert(string symbol, string message, float duration = 5f)
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0xD3A214", Offset = "0xD3A214", VA = "0xD3A214")]
	[IteratorStateMachine(typeof(<ShowAlertTiming>d__328))]
	private IEnumerator ShowAlertTiming(string symbol, string message, float duration)
	{
		return null;
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0xD3A2A0", Offset = "0xD3A2A0", VA = "0xD3A2A0")]
	public void ShowHidePreGameTimer(bool showPreGameTimer)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xD3A2C8", Offset = "0xD3A2C8", VA = "0xD3A2C8")]
	public void ShowHideHeadsetUI(bool showHeadsetUI)
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xD3A338", Offset = "0xD3A338", VA = "0xD3A338")]
	public void ShowHideMinimap(bool showMinimap)
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xD3A360", Offset = "0xD3A360", VA = "0xD3A360")]
	public void ShowKillfeed(bool showKillfeed)
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0xD3A388", Offset = "0xD3A388", VA = "0xD3A388")]
	public void ShowHideGunAmmoUI(bool showAmmoUI)
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0xD3A458", Offset = "0xD3A458", VA = "0xD3A458")]
	public void ShowHideMatchTimer(bool showMatchTimer)
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0xD3A4BC", Offset = "0xD3A4BC", VA = "0xD3A4BC")]
	public void UpdateBombScreen(string text)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0xD3A4E0", Offset = "0xD3A4E0", VA = "0xD3A4E0")]
	public void EnableBombSlider()
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xD3A500", Offset = "0xD3A500", VA = "0xD3A500")]
	public void ResetBomb()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xD3A580", Offset = "0xD3A580", VA = "0xD3A580")]
	public void UpdateBombSlider(float value)
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xD3A6A8", Offset = "0xD3A6A8", VA = "0xD3A6A8")]
	public void UpdateArmor(float toAmount)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xD3A740", Offset = "0xD3A740", VA = "0xD3A740")]
	public void ZombiesEndGame(bool _bool, byte round, string textToDisplay = "All players have died!")
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xD3A7E4", Offset = "0xD3A7E4", VA = "0xD3A7E4")]
	[IteratorStateMachine(typeof(<___Z_Notification_Coroutine>d__349))]
	public IEnumerator ___Z_Notification_Coroutine(bool showTimer, string header, float delay = 0f, bool playSound = true)
	{
		return null;
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xD3A888", Offset = "0xD3A888", VA = "0xD3A888")]
	private void SetCamerasWhenDown(bool settingsClosed)
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xD3A764", Offset = "0xD3A764", VA = "0xD3A764")]
	[IteratorStateMachine(typeof(<ZombiesEndGameCoroutine>d__356))]
	private IEnumerator ZombiesEndGameCoroutine(string textToDisplay, byte rounds)
	{
		return null;
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xD3A92C", Offset = "0xD3A92C", VA = "0xD3A92C")]
	public void EnableBleedout(bool value)
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xD34FA4", Offset = "0xD34FA4", VA = "0xD34FA4")]
	public void ShowBleedoutUI(bool value)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xD3A9B0", Offset = "0xD3A9B0", VA = "0xD3A9B0")]
	public VrInGameUIManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000307")]
public class DeathAndRespawnPanel
{
	[Token(Token = "0x4001DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject gameObject;

	[Token(Token = "0x4001DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject respawnGo;

	[Token(Token = "0x4001DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text respawnTime;

	[Token(Token = "0x4001DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text killerName;

	[Token(Token = "0x4001DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image playerAvatar;

	[Token(Token = "0x4001DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject changeLoadoutGo;

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xD40874", Offset = "0xD40874", VA = "0xD40874")]
	public DeathAndRespawnPanel()
	{
	}
}
[Token(Token = "0x2000308")]
public class VrManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000309")]
	public class ZombieSettings
	{
		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Levels defaultLevel;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public RoomVisibilityOptions roomVisibility;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Initialization")]
		public int initialRound;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Timers")]
		public float waitForPlayersTimer;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float surivalRoundTime;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float roundEndtime;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float roundEndBigTextTime;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Header("Transitions")]
		public float afterObjective;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float afterSurvival;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("Timeouts")]
		public float waitForPlayersTimeout;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float objectiveTimeout;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Spawner limit, -1 to increase with rounds")]
		public int spawnerLimit;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		public int startingCoins;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("Key press to end round. Leave as None for build.")]
		[Space]
		public KeyCode endRoundKey;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode endGameKey;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool zombieMovement;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool zombieDamage;

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xD438E4", Offset = "0xD438E4", VA = "0xD438E4")]
		public ZombieSettings()
		{
		}
	}

	[Token(Token = "0x200030A")]
	public delegate void XRStatusChange(bool is2d = true);

	[Token(Token = "0x200030B")]
	public delegate void EventSpawn(Vector3 position, EventSpawnType type);

	[Token(Token = "0x200030C")]
	public delegate void DestroyEvent();

	[Token(Token = "0x200030D")]
	[CompilerGenerated]
	private sealed class <EnableVrCoroutine>d__232 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrManager <>4__this;

		[Token(Token = "0x17000291")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xD43DD0", Offset = "0xD43DD0", VA = "0xD43DD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xD43E18", Offset = "0xD43E18", VA = "0xD43E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xD42E48", Offset = "0xD42E48", VA = "0xD42E48")]
		[DebuggerHidden]
		public <EnableVrCoroutine>d__232(int <>1__state)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xD43D2C", Offset = "0xD43D2C", VA = "0xD43D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xD43D30", Offset = "0xD43D30", VA = "0xD43D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xD43DD8", Offset = "0xD43DD8", VA = "0xD43DD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030E")]
	[CompilerGenerated]
	private sealed class <SetupVR>d__234 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrManager <>4__this;

		[Token(Token = "0x17000293")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xD441F8", Offset = "0xD441F8", VA = "0xD441F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xD44240", Offset = "0xD44240", VA = "0xD44240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xD42ED8", Offset = "0xD42ED8", VA = "0xD42ED8")]
		[DebuggerHidden]
		public <SetupVR>d__234(int <>1__state)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xD43E20", Offset = "0xD43E20", VA = "0xD43E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xD43E24", Offset = "0xD43E24", VA = "0xD43E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xD44200", Offset = "0xD44200", VA = "0xD44200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030F")]
	[CompilerGenerated]
	private sealed class <ShutdownVR>d__237 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrManager <>4__this;

		[Token(Token = "0x17000295")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xD443A0", Offset = "0xD443A0", VA = "0xD443A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xD443E8", Offset = "0xD443E8", VA = "0xD443E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xD42F8C", Offset = "0xD42F8C", VA = "0xD42F8C")]
		[DebuggerHidden]
		public <ShutdownVR>d__237(int <>1__state)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xD44248", Offset = "0xD44248", VA = "0xD44248", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xD4424C", Offset = "0xD4424C", VA = "0xD4424C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xD443A8", Offset = "0xD443A8", VA = "0xD443A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Platform platform;

	[Token(Token = "0x4001DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlatformEnhancementConfig _platformEnhancementConfig;

	[Token(Token = "0x4001DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static bool m_OverrideName;

	[Token(Token = "0x4001DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static string m_OverridedName;

	[Token(Token = "0x4001DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VrInGameUIManager m_InGameUIManager;

	[Token(Token = "0x4001DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_UseVr;

	[Token(Token = "0x4001DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	private bool m_IsPsvr;

	[Token(Token = "0x4001DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	public bool m_Beta;

	[Token(Token = "0x4001DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_MasterVersion;

	[Token(Token = "0x4001DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	public bool m_Moderator;

	[Token(Token = "0x4001DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	[Space]
	public bool m_DebugSettings;

	[Token(Token = "0x4001DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	[SerializeField]
	private bool m_DebugWithMouse;

	[Token(Token = "0x4001DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	[SerializeField]
	public bool m_RecordingBuild;

	[Token(Token = "0x4001DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	public bool m_ReleaseMode;

	[Token(Token = "0x4001DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool OverrideAzureAccess;

	[Token(Token = "0x4001E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[Tooltip("Skips the 30-40 seconds searchs, searchs only ones and then creates")]
	public bool skipLongMatchSearch;

	[Token(Token = "0x4001E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	[Tooltip("Disables language selection for android/oculus builds and defaults to english")]
	public bool disableAndroidLocalization;

	[Token(Token = "0x4001E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public GameMode m_JoinAtStart;

	[Token(Token = "0x4001E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool debugInput;

	[Token(Token = "0x4001E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool m_TurnLogsOff;

	[Token(Token = "0x4001E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool skipTutorial;

	[Token(Token = "0x4001E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool invincible;

	[Token(Token = "0x4001E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_NoviceAlwaysFalse;

	[Token(Token = "0x4001E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool overrideRenderScale;

	[Token(Token = "0x4001E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float renderScaleOverrideValue;

	[Token(Token = "0x4001E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_UseLargestLanguageValue;

	[Token(Token = "0x4001E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[Space]
	public bool infiniteAmmo;

	[Token(Token = "0x4001E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool infiniteStamina;

	[Token(Token = "0x4001E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[HideInInspector]
	public bool intentionalDisconnect;

	[Token(Token = "0x4001E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float volumeSpeakerFinal;

	[Token(Token = "0x4001E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space]
	public float volumeSpeakerATM;

	[Token(Token = "0x4001E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public GameObject HeadSet;

	[Token(Token = "0x4001E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public GameObject RigthHandController;

	[Token(Token = "0x4001E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public GameObject gunPos;

	[Token(Token = "0x4001E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public GameObject secondaryHandPos;

	[Token(Token = "0x4001E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public VrPlayerController vrPlayerController;

	[Token(Token = "0x4001E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public VignettingVR vignetteVr;

	[Token(Token = "0x4001E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public VrRigReferences rigReferences;

	[Token(Token = "0x4001E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public VrRigHelper rigHelper;

	[Token(Token = "0x4001E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WeaponBehavior currentWeapon;

	[Token(Token = "0x4001E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public WeaponBehavior currentSecondaryWeapon;

	[Token(Token = "0x4001E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public bool DBConected;

	[Token(Token = "0x4001E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public PlayerManager playerManager;

	[Token(Token = "0x4001E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public LevelManager levelManager;

	[Token(Token = "0x4001E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public ZombieModeConfig zombieModeConfig;

	[Token(Token = "0x4001E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public VrChatWindow vrChatWindow;

	[Token(Token = "0x4001E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public DeathCameraVr DeathCameraVr;

	[Token(Token = "0x4001E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public Transform DeathCameraVrParent;

	[Token(Token = "0x4001E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public bl_MiniMap bl_map;

	[Token(Token = "0x4001E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public PlayerLocalData localData;

	[Token(Token = "0x4001E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public TrackingControl trackingControl;

	[Token(Token = "0x4001E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public VrMainMenu mainMenu;

	[Token(Token = "0x4001E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public int currentPs4Input;

	[Token(Token = "0x4001E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public VRPlaySpace vrPlaySpace;

	[Token(Token = "0x4001E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Transform currentRecenterPosition;

	[Token(Token = "0x4001E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Transform cameraTransform;

	[Token(Token = "0x4001E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public bool showVisualHitMarkers;

	[Token(Token = "0x4001E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool showPointsGained;

	[Token(Token = "0x4001E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[HideInInspector]
	public bool UiInteractionMode;

	[Token(Token = "0x4001E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
	[HideInInspector]
	public bool offsetMainMenu;

	[Token(Token = "0x4001E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public bool useOffset;

	[Token(Token = "0x4001E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	[HideInInspector]
	public bool leftEyeDominant;

	[Token(Token = "0x4001E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
	[HideInInspector]
	public bool disableJoystickRotation;

	[Token(Token = "0x4001E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int idEditor;

	[Token(Token = "0x4001E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public int id0;

	[Token(Token = "0x4001E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public int id1;

	[Token(Token = "0x4001E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int id2;

	[Token(Token = "0x4001E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool useBots;

	[Token(Token = "0x4001E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[HideInInspector]
	public int trainingModeBotDamage;

	[Token(Token = "0x4001E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Range(1f, 9f)]
	public int m_BotsRemovalThreshold;

	[Token(Token = "0x4001E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int releaseModeBotsDamage;

	[Token(Token = "0x4001E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int[] m_TrainingBotsDamage;

	[Token(Token = "0x4001E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Levels defaultLevel;

	[Token(Token = "0x4001E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public CloudRegionCode DefaultCloudRegion;

	[Token(Token = "0x4001E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MatchmakingMode matchMode;

	[Token(Token = "0x4001E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string Lobby;

	[Token(Token = "0x4001E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string PrivateLobby;

	[Token(Token = "0x4001E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool reOpenRoom;

	[Token(Token = "0x4001E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private PlayerRankConfig m_RankingConfig;

	[Token(Token = "0x4001E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float m_InactivityLimit;

	[Token(Token = "0x4001E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float rewardsShowTime;

	[Token(Token = "0x4001E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float gameModeVotingTime;

	[Token(Token = "0x4001E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float mapVotingTime;

	[Token(Token = "0x4001E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float ffaMathTime;

	[Token(Token = "0x4001E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[SerializeField]
	private float m_FFAPreGameTimeShort;

	[Token(Token = "0x4001E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private float m_FFAPreGameTimeLong;

	[Token(Token = "0x4001E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[SerializeField]
	private int m_FFAMinPlayersToStart;

	[Token(Token = "0x4001E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float m_RespawnProtectionTime;

	[Token(Token = "0x4001E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float sndPreGameTime;

	[Token(Token = "0x4001E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float sndPreGameTimeShort;

	[Token(Token = "0x4001E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float sndRoundTime;

	[Token(Token = "0x4001E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float sndScoreTransitionTime;

	[Token(Token = "0x4001E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float sndBombExplosionTime;

	[Token(Token = "0x4001E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public bool sndWaitForPlayers;

	[Token(Token = "0x4001E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public int sndMinPlayersToStart;

	[Token(Token = "0x4001E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public int roundsPerTeam;

	[Token(Token = "0x4001E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int maxRoundWins;

	[Token(Token = "0x4001E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public ZombieSettings zombieSettings;

	[Token(Token = "0x4001E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public HardpointSettings m_HardpointSettings;

	[Token(Token = "0x4001E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	[Header("LOD settings")]
	[Space]
	public int IkUpdatesPerFrame;

	[Token(Token = "0x4001E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private VrMainMenu m_VrMainMenu;

	[Token(Token = "0x4001E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Header("OCULUS QUEST")]
	[SerializeField]
	private bool ConnectUsingOculus;

	[Token(Token = "0x4001E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public float questSystemDisplayFrequency;

	[Token(Token = "0x4001E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[Space]
	[Header("Testing")]
	public bool overrideServer;

	[Token(Token = "0x4001E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public CloudRegionCode OverrideCloudRegion;

	[Token(Token = "0x4001E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public bool forceCreateRoom;

	[Token(Token = "0x4001E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public bool useDebugNotification;

	[Token(Token = "0x4001E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	public bool roomOpen;

	[Token(Token = "0x4001E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	public bool roomVisible;

	[Token(Token = "0x4001E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float ragdollForce;

	[Token(Token = "0x4001E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public float ragdollHeadshotForce;

	[Token(Token = "0x4001E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float ragdollBodyShotForce;

	[Token(Token = "0x4001E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public WeaponList WeaponList;

	[Token(Token = "0x4001E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public bool mirrorVoiceChatTv;

	[Token(Token = "0x4001E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	[Space]
	[Header("Lag Simulation")]
	public int serverTime;

	[Token(Token = "0x4001E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public bool useClientPrediction;

	[Token(Token = "0x4001E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	public bool SimulateLag;

	[Token(Token = "0x4001E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public int rtt;

	[Token(Token = "0x4001E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public int rttVariance;

	[Token(Token = "0x4001E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public int lag;

	[Token(Token = "0x4001E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public int jit;

	[Token(Token = "0x4001E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public int lossPorcentage;

	[Token(Token = "0x4001E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public bool displayPingNumber;

	[Token(Token = "0x4001E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[HideInInspector]
	public FirstTimeMsg[] m_FirstTimeMsgs;

	[Token(Token = "0x4001E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[HideInInspector]
	public bool m_ShowFirstTimeMsgs;

	[Token(Token = "0x4001E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	[HideInInspector]
	public float m_FirstTimeMsgsKeyVersion;

	[Token(Token = "0x4001E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private GameModeMapRelationShip[] MapStatusFromMode;

	[Token(Token = "0x4001E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Dictionary<GameMode, GameModeMapRelationShip> _MapStatusFromModeDictionary;

	[Token(Token = "0x4001E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private int[] m_privateServers;

	[Token(Token = "0x4001E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Coroutine loadingCoroutine;

	[Token(Token = "0x4001E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[HideInInspector]
	public float loadingProgress;

	[Token(Token = "0x4001E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	[Space]
	[Header("PS4 configuration options")]
	public SonyRegions Region;

	[Token(Token = "0x4001E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float renderScale;

	[Token(Token = "0x4001E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x4001E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28D")]
	public bool doSetupOnAwake;

	[Token(Token = "0x4001E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28E")]
	public bool forced2dMode;

	[Token(Token = "0x4001E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public Color minOutColorLow;

	[Token(Token = "0x4001E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[HideInInspector]
	public Color minOutColorHigh;

	[Token(Token = "0x4001E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VrManager m_Instance;

	[Token(Token = "0x4001E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private WaitForSeconds waitEnableVr;

	[Token(Token = "0x4001E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private WaitForSeconds waitEnableVr2;

	[Token(Token = "0x4001E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[Space]
	public SeasonalEvents overrideEvent;

	[Token(Token = "0x4001E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public bool botsCountForEvent;

	[Token(Token = "0x4001E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public string eventText;

	[Token(Token = "0x4001E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[Space]
	private SeasonalEvents m_CurrentEvent;

	[Token(Token = "0x4001E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private int m_EventPoints;

	[Token(Token = "0x4001E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public int eventMatchPoints;

	[Token(Token = "0x4001E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private bool m_eventLoaded;

	[Token(Token = "0x4001E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private int m_MaxPoints;

	[Token(Token = "0x4001E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private bool m_eventReplacePartyCharacters;

	[Token(Token = "0x4001E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public bool[] m_SeasonalEventsCompleted;

	[Token(Token = "0x17000270")]
	public static PlatformEnhancementConfig PlatformEnhancementConfig
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0xD4087C", Offset = "0xD4087C", VA = "0xD4087C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000271")]
	public VrMainMenu VrMainMenu
	{
		[Token(Token = "0x6001386")]
		[Address(RVA = "0xD40948", Offset = "0xD40948", VA = "0xD40948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000272")]
	public float FFAPreGameTimeShort
	{
		[Token(Token = "0x6001387")]
		[Address(RVA = "0xD409E4", Offset = "0xD409E4", VA = "0xD409E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000273")]
	public float FFAPreGameTimeLong
	{
		[Token(Token = "0x6001388")]
		[Address(RVA = "0xD409EC", Offset = "0xD409EC", VA = "0xD409EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000274")]
	public int FFAMinPlayersToStart
	{
		[Token(Token = "0x6001389")]
		[Address(RVA = "0xD409F4", Offset = "0xD409F4", VA = "0xD409F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000275")]
	public float RespawnProtectionTime
	{
		[Token(Token = "0x600138A")]
		[Address(RVA = "0xD409FC", Offset = "0xD409FC", VA = "0xD409FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000276")]
	public PlayerRankConfig PlayerRankConfig
	{
		[Token(Token = "0x600138B")]
		[Address(RVA = "0xD40A04", Offset = "0xD40A04", VA = "0xD40A04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000277")]
	public PlayerRankConfig.XPReward PlayerXPReward
	{
		[Token(Token = "0x600138C")]
		[Address(RVA = "0xD40A0C", Offset = "0xD40A0C", VA = "0xD40A0C")]
		get
		{
			return default(PlayerRankConfig.XPReward);
		}
	}

	[Token(Token = "0x17000278")]
	public PlayerRankConfig.CoinsReward PlayerCoinsReward
	{
		[Token(Token = "0x600138D")]
		[Address(RVA = "0xD40A34", Offset = "0xD40A34", VA = "0xD40A34")]
		get
		{
			return default(PlayerRankConfig.CoinsReward);
		}
	}

	[Token(Token = "0x17000279")]
	public PlayerRankLevels PlayerRankLevels
	{
		[Token(Token = "0x600138E")]
		[Address(RVA = "0xD40A5C", Offset = "0xD40A5C", VA = "0xD40A5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027A")]
	public int[] WeaponRankKills
	{
		[Token(Token = "0x600138F")]
		[Address(RVA = "0xD40A78", Offset = "0xD40A78", VA = "0xD40A78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027B")]
	public PlayerRankConfig.WeaponUnlock[] WeaponUnlocks
	{
		[Token(Token = "0x6001390")]
		[Address(RVA = "0xD40A94", Offset = "0xD40A94", VA = "0xD40A94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027C")]
	public VrInGameUIManager InGameUIManager
	{
		[Token(Token = "0x6001392")]
		[Address(RVA = "0xD3E66C", Offset = "0xD3E66C", VA = "0xD3E66C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001393")]
		[Address(RVA = "0xD40AF0", Offset = "0xD40AF0", VA = "0xD40AF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700027D")]
	public bool joinFFAatStart
	{
		[Token(Token = "0x6001394")]
		[Address(RVA = "0xD40AF8", Offset = "0xD40AF8", VA = "0xD40AF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700027E")]
	public bool joinTDMatStart
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0xD40B08", Offset = "0xD40B08", VA = "0xD40B08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700027F")]
	public bool joinSNDatStart
	{
		[Token(Token = "0x6001396")]
		[Address(RVA = "0xD40B18", Offset = "0xD40B18", VA = "0xD40B18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000280")]
	public bool joinZatStart
	{
		[Token(Token = "0x6001397")]
		[Address(RVA = "0xD40B28", Offset = "0xD40B28", VA = "0xD40B28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000281")]
	public bool joinHPAtStart
	{
		[Token(Token = "0x6001398")]
		[Address(RVA = "0xD40B38", Offset = "0xD40B38", VA = "0xD40B38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000282")]
	public bool allowServerLocationChanges
	{
		[Token(Token = "0x600139A")]
		[Address(RVA = "0xD40B8C", Offset = "0xD40B8C", VA = "0xD40B8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000283")]
	public string regionString
	{
		[Token(Token = "0x600139B")]
		[Address(RVA = "0xD40BAC", Offset = "0xD40BAC", VA = "0xD40BAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000284")]
	public bool connectUsingPlatform
	{
		[Token(Token = "0x600139C")]
		[Address(RVA = "0xD40C74", Offset = "0xD40C74", VA = "0xD40C74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000285")]
	public bool debugWithMouse
	{
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xD41078", Offset = "0xD41078", VA = "0xD41078")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xD410FC", Offset = "0xD410FC", VA = "0xD410FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000286")]
	[Obsolete("This will always be true since we dont maintain the 2d version anymore")]
	[HideInInspector]
	public bool useVr
	{
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xD41108", Offset = "0xD41108", VA = "0xD41108")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xD4118C", Offset = "0xD4118C", VA = "0xD4118C")]
		set
		{
		}
	}

	[Token(Token = "0x17000287")]
	public bool isPsvr
	{
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xD41198", Offset = "0xD41198", VA = "0xD41198")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000288")]
	public bool logInPsvr
	{
		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xD4121C", Offset = "0xD4121C", VA = "0xD4121C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000289")]
	public bool activateNonVr
	{
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xD412A0", Offset = "0xD412A0", VA = "0xD412A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028A")]
	public bool AliveAndPlaying
	{
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xD412B8", Offset = "0xD412B8", VA = "0xD412B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028B")]
	public static VrManager Instance
	{
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xD3E5A4", Offset = "0xD3E5A4", VA = "0xD3E5A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028C")]
	public SeasonalEvents CurrentEvent
	{
		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xD42FF8", Offset = "0xD42FF8", VA = "0xD42FF8")]
		get
		{
			return default(SeasonalEvents);
		}
		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xD43014", Offset = "0xD43014", VA = "0xD43014")]
		set
		{
		}
	}

	[Token(Token = "0x1700028D")]
	public int EventPoints
	{
		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xD4301C", Offset = "0xD4301C", VA = "0xD4301C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xD43024", Offset = "0xD43024", VA = "0xD43024")]
		set
		{
		}
	}

	[Token(Token = "0x1700028E")]
	public bool EventLoaded
	{
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xD4302C", Offset = "0xD4302C", VA = "0xD4302C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xD43034", Offset = "0xD43034", VA = "0xD43034")]
		set
		{
		}
	}

	[Token(Token = "0x1700028F")]
	public int MaxEventPoints
	{
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xD43040", Offset = "0xD43040", VA = "0xD43040")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xD43048", Offset = "0xD43048", VA = "0xD43048")]
		set
		{
		}
	}

	[Token(Token = "0x17000290")]
	public bool EventReplacePartyCharacters
	{
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xD43050", Offset = "0xD43050", VA = "0xD43050")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xD43058", Offset = "0xD43058", VA = "0xD43058")]
		set
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event XRStatusChange OnXRStatusChange
	{
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xD428F8", Offset = "0xD428F8", VA = "0xD428F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xD429B4", Offset = "0xD429B4", VA = "0xD429B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event EventSpawn OnEventSpawn
	{
		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xD43064", Offset = "0xD43064", VA = "0xD43064")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xD43120", Offset = "0xD43120", VA = "0xD43120")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event DestroyEvent OnEventDestroy
	{
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xD431DC", Offset = "0xD431DC", VA = "0xD431DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xD43298", Offset = "0xD43298", VA = "0xD43298")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xD40AB0", Offset = "0xD40AB0", VA = "0xD40AB0")]
	public PlayerRankConfig.WeaponUnlock? WeaponUnlockByNumber(int id)
	{
		return null;
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xD40B48", Offset = "0xD40B48", VA = "0xD40B48")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xD40C7C", Offset = "0xD40C7C", VA = "0xD40C7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xD40DF0", Offset = "0xD40DF0", VA = "0xD40DF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xD40EF0", Offset = "0xD40EF0", VA = "0xD40EF0")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xD41034", Offset = "0xD41034", VA = "0xD41034")]
	public void UpdateHeadsetReference(GameObject hmd, GameObject rigthHandController, VignettingVR vignetting)
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xD413B0", Offset = "0xD413B0", VA = "0xD413B0")]
	public bool GameModeActive(GameMode gameMode)
	{
		return default(bool);
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xD4152C", Offset = "0xD4152C", VA = "0xD4152C")]
	public bool[] GetMapStatusFromGameType(int gameType)
	{
		return null;
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xD4155C", Offset = "0xD4155C", VA = "0xD4155C")]
	public List<AlvoLevels> GetAccessibleMapsFromGameType(int gameType)
	{
		return null;
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xD413D4", Offset = "0xD413D4", VA = "0xD413D4")]
	private GameModeMapRelationShip GetRelationship(GameMode gameMode)
	{
		return default(GameModeMapRelationShip);
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xD41708", Offset = "0xD41708", VA = "0xD41708")]
	public void SetActiveMaps(GameModeMapRelationShip[] GameModes)
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xD41914", Offset = "0xD41914", VA = "0xD41914")]
	public void SetActivePrivateServers(int[] _servers)
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xD4191C", Offset = "0xD4191C", VA = "0xD4191C")]
	public int[] GetActivePrivateServers()
	{
		return null;
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xD41924", Offset = "0xD41924", VA = "0xD41924")]
	public void SetReleaseVrManagerSettings()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0xD41C04", Offset = "0xD41C04", VA = "0xD41C04")]
	public void KilledLocalPlayer(bool dead = true)
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xD423A8", Offset = "0xD423A8", VA = "0xD423A8")]
	public void CheckAllWeaponsMagazines()
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xD3E708", Offset = "0xD3E708", VA = "0xD3E708")]
	public void ResetEffects()
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xD42480", Offset = "0xD42480", VA = "0xD42480")]
	public void SwitchVrAndNonVrGameObjects(GameObject[] vrElements, GameObject[] nonVrelements)
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xD4255C", Offset = "0xD4255C", VA = "0xD4255C")]
	public void SetFlashGranade(float multiplier)
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xD4260C", Offset = "0xD4260C", VA = "0xD4260C")]
	public void CalculateHMDPosition([Optional] Transform parent)
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xD427B8", Offset = "0xD427B8", VA = "0xD427B8")]
	public void ResetEverything()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xD42834", Offset = "0xD42834", VA = "0xD42834")]
	public void RunFirstLoading(string sceneToLoad)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xD41B3C", Offset = "0xD41B3C", VA = "0xD41B3C")]
	[ContextMenu("Set zombie release settings")]
	private void SetZombieSettings()
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xD41BC8", Offset = "0xD41BC8", VA = "0xD41BC8")]
	private void SetSndSettings()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xD42A70", Offset = "0xD42A70", VA = "0xD42A70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xD42D2C", Offset = "0xD42D2C", VA = "0xD42D2C")]
	public void DisableVr()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xD42DAC", Offset = "0xD42DAC", VA = "0xD42DAC")]
	public void EnableVr(bool delayed = false)
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xD42DE0", Offset = "0xD42DE0", VA = "0xD42DE0")]
	[IteratorStateMachine(typeof(<EnableVrCoroutine>d__232))]
	private IEnumerator EnableVrCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xD42D0C", Offset = "0xD42D0C", VA = "0xD42D0C")]
	public void BeginVRSetup()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xD42E70", Offset = "0xD42E70", VA = "0xD42E70")]
	[IteratorStateMachine(typeof(<SetupVR>d__234))]
	private IEnumerator SetupVR()
	{
		return null;
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xD42F00", Offset = "0xD42F00", VA = "0xD42F00")]
	public void DisablePostReprojection()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xD42F04", Offset = "0xD42F04", VA = "0xD42F04")]
	public void BeginShutdownVR()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xD42F24", Offset = "0xD42F24", VA = "0xD42F24")]
	[IteratorStateMachine(typeof(<ShutdownVR>d__237))]
	private IEnumerator ShutdownVR()
	{
		return null;
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xD42FB4", Offset = "0xD42FB4", VA = "0xD42FB4")]
	public void SetupHmdDevice()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xD42FB8", Offset = "0xD42FB8", VA = "0xD42FB8")]
	public void ToggleHmdViewOnMonitor(bool showOnMonitor)
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xD42FCC", Offset = "0xD42FCC", VA = "0xD42FCC")]
	public void ToggleHmdViewOnMonitor()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xD42FEC", Offset = "0xD42FEC", VA = "0xD42FEC")]
	public void ChangeRenderScale(float scale)
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xD42FF4", Offset = "0xD42FF4", VA = "0xD42FF4")]
	public void SystemRecenterPosition()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xD42D08", Offset = "0xD42D08", VA = "0xD42D08")]
	private void PSVR2_Awake()
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xD42830", Offset = "0xD42830", VA = "0xD42830")]
	private void PSVR2_Destroy()
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xD43354", Offset = "0xD43354", VA = "0xD43354")]
	public void SeasonalEventUpdate(SeasonalEvents receivedEvent)
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xD433EC", Offset = "0xD433EC", VA = "0xD433EC")]
	public void SetEvent(int eventNumber, int eventPoints, int eventMaxPoints, string eventString, bool[] completion)
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0xD43520", Offset = "0xD43520", VA = "0xD43520")]
	public void EventDoSpawn(Vector3 position, EventSpawnType type)
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0xD435DC", Offset = "0xD435DC", VA = "0xD435DC")]
	public VrManager()
	{
	}
}
[Token(Token = "0x2000310")]
public class VrUiEventsManager : Singleton<VrUiEventsManager>
{
	[Token(Token = "0x2000311")]
	public delegate void ButtonClick(GameObject btn);

	[Token(Token = "0x2000312")]
	public delegate void ButtonClickTwo(GameObject btn);

	[Token(Token = "0x2000313")]
	public delegate void LoadOutClick(GameObject btn);

	[Token(Token = "0x4001EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrMainMenu mainMenu;

	[Token(Token = "0x1400000C")]
	public static event ButtonClick buttonClick
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xD443F0", Offset = "0xD443F0", VA = "0xD443F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001400")]
		[Address(RVA = "0xD444A8", Offset = "0xD444A8", VA = "0xD444A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ButtonClickTwo buttonClickTwo
	{
		[Token(Token = "0x6001401")]
		[Address(RVA = "0xD44560", Offset = "0xD44560", VA = "0xD44560")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001402")]
		[Address(RVA = "0xD4461C", Offset = "0xD4461C", VA = "0xD4461C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event LoadOutClick loadoutClick
	{
		[Token(Token = "0x6001403")]
		[Address(RVA = "0xD446D8", Offset = "0xD446D8", VA = "0xD446D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001404")]
		[Address(RVA = "0xD44794", Offset = "0xD44794", VA = "0xD44794")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0xD44850", Offset = "0xD44850", VA = "0xD44850")]
	public void OnLoadOutClick(GameObject btn)
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xD448BC", Offset = "0xD448BC", VA = "0xD448BC")]
	public void OnButtonClick(GameObject btn)
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xD44958", Offset = "0xD44958", VA = "0xD44958")]
	public void OnButtonTwo(GameObject btn)
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xD449C4", Offset = "0xD449C4", VA = "0xD449C4")]
	public VrUiEventsManager()
	{
	}
}
[Token(Token = "0x2000314")]
public class GranadeArchMesh : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000315")]
	[CompilerGenerated]
	private sealed class <UpdateRenderPath>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GranadeArchMesh <>4__this;

		[Token(Token = "0x17000297")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xD46368", Offset = "0xD46368", VA = "0xD46368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xD463B0", Offset = "0xD463B0", VA = "0xD463B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xD4567C", Offset = "0xD4567C", VA = "0xD4567C")]
		[DebuggerHidden]
		public <UpdateRenderPath>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xD4630C", Offset = "0xD4630C", VA = "0xD4630C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xD46310", Offset = "0xD46310", VA = "0xD46310", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xD46370", Offset = "0xD46370", VA = "0xD46370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineWith;

	[Token(Token = "0x4001EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrPlayerController controller;

	[Token(Token = "0x4001EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4001EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material mat;

	[Token(Token = "0x4001EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x4001EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> pathVertList;

	[Token(Token = "0x4001EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float time;

	[Token(Token = "0x4001EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Space]
	public float archAnimationSpeed;

	[Token(Token = "0x4001EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fuseTime;

	[Token(Token = "0x4001EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float launchMagnitude;

	[Token(Token = "0x4001EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float launchForce;

	[Token(Token = "0x4001EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float launchAngle;

	[Token(Token = "0x4001EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool preferSmallAng;

	[Token(Token = "0x4001EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 velocity;

	[Token(Token = "0x4001EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 acceleration;

	[Token(Token = "0x4001EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int splits;

	[Token(Token = "0x4001EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Space]
	public Rigidbody testProjectile;

	[Token(Token = "0x4001EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool renderPath;

	[Token(Token = "0x4001EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int refreshPerSecond;

	[Token(Token = "0x4001EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float magChange;

	[Token(Token = "0x4001EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float angChange;

	[Token(Token = "0x4001EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 velChange;

	[Token(Token = "0x4001EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float pathLength;

	[Token(Token = "0x4001EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float sin2Theta;

	[Token(Token = "0x4001EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float cosTheta;

	[Token(Token = "0x4001EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float inner;

	[Token(Token = "0x4001EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float res;

	[Token(Token = "0x4001EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float innerSq;

	[Token(Token = "0x4001EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float innerATan;

	[Token(Token = "0x4001EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float dt;

	[Token(Token = "0x4001EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 d;

	[Token(Token = "0x4001EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform[] localPoints;

	[Token(Token = "0x4001EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3[] pointsArray;

	[Token(Token = "0x4001ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector2 offsetTexture;

	[Token(Token = "0x4001ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform firingPos;

	[Token(Token = "0x4001ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform trowPos;

	[Token(Token = "0x4001ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private WaitForSeconds waitRefreshPerSecond;

	[Token(Token = "0x4001ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool resetLocalPoints;

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xD44D6C", Offset = "0xD44D6C", VA = "0xD44D6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xD44E28", Offset = "0xD44E28", VA = "0xD44E28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xD452F4", Offset = "0xD452F4", VA = "0xD452F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xD453DC", Offset = "0xD453DC", VA = "0xD453DC")]
	private void StopRendering()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xD4542C", Offset = "0xD4542C", VA = "0xD4542C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xD4528C", Offset = "0xD4528C", VA = "0xD4528C")]
	[IteratorStateMachine(typeof(<UpdateRenderPath>d__42))]
	public IEnumerator UpdateRenderPath()
	{
		return null;
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xD45548", Offset = "0xD45548", VA = "0xD45548")]
	private void SetLineRenderer()
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xD456A4", Offset = "0xD456A4", VA = "0xD456A4")]
	public void LaunchGranade(int index)
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xD45928", Offset = "0xD45928", VA = "0xD45928")]
	private void UpdateArcMesh()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xD45FD0", Offset = "0xD45FD0", VA = "0xD45FD0")]
	public float DistanceAccInTime(float u, float a, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xD45FEC", Offset = "0xD45FEC", VA = "0xD45FEC")]
	public float MagnitudeToReachXY(float x, float y, float g, float ang)
	{
		return default(float);
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xD46088", Offset = "0xD46088", VA = "0xD46088")]
	public float AngleToReachXY(float x, float y, float g, float mag)
	{
		return default(float);
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xD45CC8", Offset = "0xD45CC8", VA = "0xD45CC8")]
	public void CalculateTrajectory()
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xD46134", Offset = "0xD46134", VA = "0xD46134")]
	public GranadeArchMesh()
	{
	}
}
[Token(Token = "0x2000316")]
[RequireComponent(typeof(LineRenderer))]
public class GranadeLaunch : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrPlayerController controller;

	[Token(Token = "0x4001ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4001ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] arcPoints;

	[Token(Token = "0x4001ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float velocity;

	[Token(Token = "0x4001ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float angle;

	[Token(Token = "0x4001ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float gravity;

	[Token(Token = "0x4001ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float radianAngle;

	[Token(Token = "0x4001ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int lineResolution;

	[Token(Token = "0x6001429")]
	[Address(RVA = "0xD463B8", Offset = "0xD463B8", VA = "0xD463B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xD46418", Offset = "0xD46418", VA = "0xD46418")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xD46530", Offset = "0xD46530", VA = "0xD46530")]
	private void RenderArc()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xD466EC", Offset = "0xD466EC", VA = "0xD466EC")]
	private Vector3[] CalculateArcArray()
	{
		return null;
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0xD465A0", Offset = "0xD465A0", VA = "0xD465A0")]
	private Vector3[] GetArcPoints()
	{
		return null;
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xD4683C", Offset = "0xD4683C", VA = "0xD4683C")]
	private Vector3 CalculateArcPoint(float t, float maxDistance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xD468B8", Offset = "0xD468B8", VA = "0xD468B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xD468BC", Offset = "0xD468BC", VA = "0xD468BC")]
	public GranadeLaunch()
	{
	}
}
[Token(Token = "0x2000317")]
public class PhysicsJointToggler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000318")]
	[CompilerGenerated]
	private sealed class <DelayCollision>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsJointToggler <>4__this;

		[Token(Token = "0x17000299")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0xD46F7C", Offset = "0xD46F7C", VA = "0xD46F7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0xD46FC4", Offset = "0xD46FC4", VA = "0xD46FC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xD46D00", Offset = "0xD46D00", VA = "0xD46D00")]
		[DebuggerHidden]
		public <DelayCollision>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xD46EF0", Offset = "0xD46EF0", VA = "0xD46EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xD46EF4", Offset = "0xD46EF4", VA = "0xD46EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xD46F84", Offset = "0xD46F84", VA = "0xD46F84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_HandLayer;

	[Token(Token = "0x4001EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rigidBody;

	[Token(Token = "0x4001EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform gunAnchor;

	[Token(Token = "0x4001EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform thisTransform;

	[Token(Token = "0x4001EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool checkForCollisions;

	[Token(Token = "0x4001EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool jointActivated;

	[Token(Token = "0x4001EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool colliding;

	[Token(Token = "0x4001EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool skipFrame;

	[Token(Token = "0x4001EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float delayTime;

	[Token(Token = "0x4001EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float weaponDistance;

	[Token(Token = "0x4001EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxWeaponDistance;

	[Token(Token = "0x4001EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 rPosition;

	[Token(Token = "0x4001EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform playerTransform;

	[Token(Token = "0x4001EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForSeconds waitDelayTime;

	[Token(Token = "0x4001EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool waitingDelay;

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xD468CC", Offset = "0xD468CC", VA = "0xD468CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xD46A30", Offset = "0xD46A30", VA = "0xD46A30")]
	private void Update()
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xD46B70", Offset = "0xD46B70", VA = "0xD46B70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xD46BB8", Offset = "0xD46BB8", VA = "0xD46BB8")]
	public void LateUpdateAnchor()
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xD46B88", Offset = "0xD46B88", VA = "0xD46B88")]
	private void CheckForCollision()
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xD46C68", Offset = "0xD46C68", VA = "0xD46C68")]
	public void TriggerDelayNonKinematic()
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xD46C98", Offset = "0xD46C98", VA = "0xD46C98")]
	[IteratorStateMachine(typeof(<DelayCollision>d__21))]
	private IEnumerator DelayCollision()
	{
		return null;
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0xD46D28", Offset = "0xD46D28", VA = "0xD46D28")]
	private bool CollisionAllowed(Collision collision)
	{
		return default(bool);
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xD46DD4", Offset = "0xD46DD4", VA = "0xD46DD4")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0xD46E34", Offset = "0xD46E34", VA = "0xD46E34")]
	public PhysicsJointToggler()
	{
	}
}
[Token(Token = "0x2000319")]
public class VrScopeController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4001EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cameraObject;

	[Token(Token = "0x4001EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera scopeCamera;

	[Token(Token = "0x4001EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera vrCamera;

	[Token(Token = "0x4001EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform trackingSpace;

	[Token(Token = "0x4001EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color32 whiteColor;

	[Token(Token = "0x4001EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color32 blackColor;

	[Token(Token = "0x4001EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	[SerializeField]
	private float m_OverrideDistance;

	[Token(Token = "0x4001EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	[SerializeField]
	private float m_DirectionalityMultiplier;

	[Token(Token = "0x4001EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	[Tooltip("Unused")]
	[SerializeField]
	private float m_DistanceMultiplier;

	[Token(Token = "0x4001EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PerfectCullingCamera perfectCulling;

	[Token(Token = "0x4001EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distanceToTarget;

	[Token(Token = "0x4001EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float distanceRight;

	[Token(Token = "0x4001EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distanceLeft;

	[Token(Token = "0x4001EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 eyePosition;

	[Token(Token = "0x4001EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 positionRight;

	[Token(Token = "0x4001EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 positionLeft;

	[Token(Token = "0x4001EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 dirFromCamToScope;

	[Token(Token = "0x4001EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 dir1y;

	[Token(Token = "0x4001F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 dir2;

	[Token(Token = "0x4001F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float yAngle;

	[Token(Token = "0x4001F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 dir1x;

	[Token(Token = "0x4001F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float xAngle;

	[Token(Token = "0x4001F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool leftEyeDominant;

	[Token(Token = "0x4001F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private XRNode eyeNode;

	[Token(Token = "0x4001F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int CameraDistance;

	[Token(Token = "0x4001F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int XOffset;

	[Token(Token = "0x4001F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int YOffset;

	[Token(Token = "0x4001F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int Color1;

	[Token(Token = "0x4001F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int BrightnessMultiplier;

	[Token(Token = "0x1700029B")]
	public static List<VrScopeController> ActiveScopes
	{
		[Token(Token = "0x6001441")]
		[Address(RVA = "0xD46FCC", Offset = "0xD46FCC", VA = "0xD46FCC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001442")]
		[Address(RVA = "0xD47024", Offset = "0xD47024", VA = "0xD47024")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xD47080", Offset = "0xD47080", VA = "0xD47080")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xD470EC", Offset = "0xD470EC", VA = "0xD470EC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xD473F4", Offset = "0xD473F4", VA = "0xD473F4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xD4738C", Offset = "0xD4738C", VA = "0xD4738C")]
	public void SetLeftHanded(bool leftHanded)
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xD4750C", Offset = "0xD4750C", VA = "0xD4750C")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xD47DEC", Offset = "0xD47DEC", VA = "0xD47DEC")]
	public VrScopeController()
	{
	}
}
[Token(Token = "0x200031A")]
public class AttachmentController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMainMenu;

	[Token(Token = "0x4001F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool thirdPerson;

	[Token(Token = "0x4001F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponBehavior weaponBehavior;

	[Token(Token = "0x4001F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LineRenderer laserLineRenderer;

	[Token(Token = "0x4001F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] linePos;

	[Token(Token = "0x4001F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject laserAttachment;

	[Token(Token = "0x4001F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject flashligthAttachment;

	[Token(Token = "0x4001F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject silencerAttachment;

	[Token(Token = "0x4001F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform laserStartParent;

	[Token(Token = "0x4001F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform laserStartTransform;

	[Token(Token = "0x4001F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform laserEndTransform;

	[Token(Token = "0x4001F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 laserStartOriginalPos;

	[Token(Token = "0x4001F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Quaternion laserStartOriginalRot;

	[Token(Token = "0x4001F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform laserPoint;

	[Token(Token = "0x4001F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float distanceToIgnoreAim;

	[NonSerialized]
	[Token(Token = "0x4001F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float laserPointMultiplier;

	[Token(Token = "0x4001F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float laserPointRestDistance;

	[Token(Token = "0x4001F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 newPointSize;

	[Token(Token = "0x4001F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float newSizeForPoint;

	[Token(Token = "0x4001F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float pointMinSize;

	[NonSerialized]
	[Token(Token = "0x4001F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float pointMaxSize;

	[NonSerialized]
	[Token(Token = "0x4001F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float thirdPersonLaserMaxDistance;

	[Token(Token = "0x4001F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float thirdPersonUpdateTime;

	[Token(Token = "0x4001F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Ray ray;

	[Token(Token = "0x4001F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private RaycastHit hit;

	[Token(Token = "0x4001F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public LayerMask raycastLayerMask;

	[Token(Token = "0x4001F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private PlayerData playerData;

	[Token(Token = "0x4001F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform root;

	[Token(Token = "0x4001F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public Transform t;

	[Token(Token = "0x4001F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float timeCount;

	[Token(Token = "0x1700029C")]
	public bool SilencerActive
	{
		[Token(Token = "0x600144A")]
		[Address(RVA = "0xD47F74", Offset = "0xD47F74", VA = "0xD47F74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xD47FF8", Offset = "0xD47FF8", VA = "0xD47FF8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xD48100", Offset = "0xD48100", VA = "0xD48100")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0xD487D8", Offset = "0xD487D8", VA = "0xD487D8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0xD48908", Offset = "0xD48908", VA = "0xD48908")]
	public void SetLeftHandedThirdPerson()
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0xD488A4", Offset = "0xD488A4", VA = "0xD488A4")]
	public void ResetLaserPosition()
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0xD4869C", Offset = "0xD4869C", VA = "0xD4869C")]
	public void SetNewLaserPosition()
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0xD48920", Offset = "0xD48920", VA = "0xD48920")]
	public void SetFirstPersonLaser(bool attachmentOn)
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xD48500", Offset = "0xD48500", VA = "0xD48500")]
	public void EnableLaser()
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xD4860C", Offset = "0xD4860C", VA = "0xD4860C")]
	public void DisableLaser()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0xD48974", Offset = "0xD48974", VA = "0xD48974")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xD48A84", Offset = "0xD48A84", VA = "0xD48A84")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0xD489C0", Offset = "0xD489C0", VA = "0xD489C0")]
	public void UpdateLaser()
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0xD48B74", Offset = "0xD48B74", VA = "0xD48B74")]
	public void RaycastFirstPerson()
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0xD48D80", Offset = "0xD48D80", VA = "0xD48D80")]
	public void RaycastThirdPerson()
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0xD48EC4", Offset = "0xD48EC4", VA = "0xD48EC4")]
	public AttachmentController()
	{
	}
}
[Token(Token = "0x200031B")]
[RequireComponent(typeof(CharacterController))]
[RequireComponent(typeof(VrPlayerController))]
public class CameraConstraint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public VrRigHelper CameraRig;

	[Token(Token = "0x4001F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("This value represents the character capsule's distance from the HMD's position. When the player is moving in legal space without collisions, this will be zero.")]
	public float CurrentDistance;

	[Token(Token = "0x4001F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("When true, the camera will fade to black when the HMD is moved into collidable geometry.")]
	public bool EnableFadeout;

	[Token(Token = "0x4001F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[Tooltip("When true, the camera will be prevented from passing through collidable geometry. This is usually considered uncomfortable for users.")]
	public bool EnableCollision;

	[Token(Token = "0x4001F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[Tooltip("When true, adjust the character controller height on the fly to match the HMD's offset from the ground which will allow ducking to go through smaller spaces.")]
	public bool DynamicHeight;

	[Token(Token = "0x4001F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This should be set to 1 to make the screen completely fade out when the HMD is inside world geometry. Lesser values can be useful for testing.")]
	public float MaxFade;

	[Token(Token = "0x4001F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("This value is used to control how far from the character capsule the HMD must be before the fade to black begins.")]
	public float FadeMinDistance;

	[Token(Token = "0x4001F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This value is used to control how far from the character capsule the HMD must be before the fade to black is complete. This should be tuned so that it is fully faded in before the camera will clip geometry that the player should not be able see beyond.")]
	public float FadeMaxDistance;

	[Token(Token = "0x4001F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly System.Action _cameraUpdateAction;

	[Token(Token = "0x4001F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly System.Action _preCharacterMovementAction;

	[Token(Token = "0x4001F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController _character;

	[Token(Token = "0x4001F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VrPlayerController _playerController;

	[Token(Token = "0x600145A")]
	[Address(RVA = "0xD48F90", Offset = "0xD48F90", VA = "0xD48F90")]
	private CameraConstraint()
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0xD49068", Offset = "0xD49068", VA = "0xD49068")]
	private void Awake()
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xD490E4", Offset = "0xD490E4", VA = "0xD490E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0xD49254", Offset = "0xD49254", VA = "0xD49254")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0xD493C4", Offset = "0xD493C4", VA = "0xD493C4")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0xD496A8", Offset = "0xD496A8", VA = "0xD496A8")]
	private void PreCharacterMovement()
	{
	}
}
[Token(Token = "0x200031C")]
public class DeathCameraVr : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x4001F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader m_Shader;

	[Token(Token = "0x4001F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float power;

	[Token(Token = "0x4001F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color32 outlineColorKiller;

	[Token(Token = "0x4001F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color32 outlineNormal;

	[Token(Token = "0x4001F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PerfectCullingCamera m_PerfectCulling;

	[Token(Token = "0x4001F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform headsetTransform;

	[Token(Token = "0x4001F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mainCanvasGo;

	[Token(Token = "0x4001F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VrInGameUIManager menuManager;

	[Token(Token = "0x4001F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera thisCamera;

	[Token(Token = "0x4001F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject UIDeathCamera;

	[Token(Token = "0x4001F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform trackingSpace;

	[Token(Token = "0x4001F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform vrPlayspace;

	[Token(Token = "0x4001F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform t;

	[Token(Token = "0x4001F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool init;

	[Token(Token = "0x4001F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CameraFade CameraFadeComponent;

	[Token(Token = "0x4001F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlayerData killer;

	[Token(Token = "0x4001F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 lookAtPosition;

	[Token(Token = "0x6001460")]
	[Address(RVA = "0xD49A28", Offset = "0xD49A28", VA = "0xD49A28")]
	public void StopCameraTiming()
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0xD49A2C", Offset = "0xD49A2C", VA = "0xD49A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0xD49BA4", Offset = "0xD49BA4", VA = "0xD49BA4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xD49ED4", Offset = "0xD49ED4", VA = "0xD49ED4")]
	public void PrepareDeathCamera(string killerName, int worldNumber)
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0xD4A2B4", Offset = "0xD4A2B4", VA = "0xD4A2B4")]
	public void ActivateDeathCamera()
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xD4A420", Offset = "0xD4A420", VA = "0xD4A420")]
	public void SetDeathCamera(string killerName, int worldNumber)
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xD49E28", Offset = "0xD49E28", VA = "0xD49E28")]
	public void StopDeathCamera()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xD4A910", Offset = "0xD4A910", VA = "0xD4A910")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xD4A984", Offset = "0xD4A984", VA = "0xD4A984")]
	public DeathCameraVr()
	{
	}
}
[Token(Token = "0x200031D")]
public class LaserSight : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4001F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AttachmentController controller;

	[Token(Token = "0x4001F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x4001F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isWeaponHand;

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xD4A9E4", Offset = "0xD4A9E4", VA = "0xD4A9E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xD4AA0C", Offset = "0xD4AA0C", VA = "0xD4AA0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xD4AA34", Offset = "0xD4AA34", VA = "0xD4AA34")]
	public LaserSight()
	{
	}
}
[Token(Token = "0x200031E")]
public class VrGranadeController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200031F")]
	[CompilerGenerated]
	private sealed class <TrowGrenadeCoroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrGranadeController <>4__this;

		[Token(Token = "0x1700029E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xD4C0C0", Offset = "0xD4C0C0", VA = "0xD4C0C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0xD4C108", Offset = "0xD4C108", VA = "0xD4C108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xD4BA0C", Offset = "0xD4BA0C", VA = "0xD4BA0C")]
		[DebuggerHidden]
		public <TrowGrenadeCoroutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xD4BD28", Offset = "0xD4BD28", VA = "0xD4BD28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xD4BD2C", Offset = "0xD4BD2C", VA = "0xD4BD2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xD4C0C8", Offset = "0xD4C0C8", VA = "0xD4C0C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000320")]
	[CompilerGenerated]
	private sealed class <GrenadeSwitchCoroutine>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrGranadeController <>4__this;

		[Token(Token = "0x170002A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xD4C344", Offset = "0xD4C344", VA = "0xD4C344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xD4C38C", Offset = "0xD4C38C", VA = "0xD4C38C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xD4BB30", Offset = "0xD4BB30", VA = "0xD4BB30")]
		[DebuggerHidden]
		public <GrenadeSwitchCoroutine>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xD4C110", Offset = "0xD4C110", VA = "0xD4C110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xD4C114", Offset = "0xD4C114", VA = "0xD4C114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xD4C34C", Offset = "0xD4C34C", VA = "0xD4C34C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GranadeArchMesh granadeArcController;

	[Token(Token = "0x4001F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArmaturePoseMatcher m_APM;

	[Token(Token = "0x4001F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text[] grenadeAmmountLbls;

	[Token(Token = "0x4001F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] grenadeUiGos;

	[Token(Token = "0x4001F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource aSource;

	[Token(Token = "0x4001F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vest vest;

	[Token(Token = "0x4001F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image[] grenadeIcons;

	[Token(Token = "0x4001F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color activeColor;

	[Token(Token = "0x4001F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color otherColor;

	[Token(Token = "0x4001F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] grenadeSounds;

	[Token(Token = "0x4001F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask fragTeam1;

	[Token(Token = "0x4001F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public LayerMask fragTeam2;

	[Token(Token = "0x4001F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool trowing;

	[Token(Token = "0x4001F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool fakeTrow;

	[Token(Token = "0x4001F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool canceled;

	[Token(Token = "0x4001F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float timeTillTrow;

	[Token(Token = "0x4001F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float readyTime;

	[Token(Token = "0x4001F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int[] grenadeHoldAmmount;

	[Token(Token = "0x4001F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string[] grenadeNames;

	[Token(Token = "0x4001F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int currentGrenade;

	[Token(Token = "0x4001F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int primaryG;

	[Token(Token = "0x4001F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int secondaryG;

	[Token(Token = "0x4001F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Space]
	public GameObject[] leftHandGrenades;

	[Token(Token = "0x4001F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] rightHandGrenades;

	[Token(Token = "0x4001F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Space]
	public float switchGrenadeAnimDelay;

	[Token(Token = "0x4001F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float trowGrenadeDelay;

	[Token(Token = "0x4001F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public PlayerLocalData m_LocalData;

	[Token(Token = "0x4001F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SearchDestroyManager m_SearchDestroyManager;

	[Token(Token = "0x4001F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public System.Action onGrenadeThrown;

	[Token(Token = "0x4001F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WaitForSeconds waitGrenadeReturnTracked;

	[Token(Token = "0x4001F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public float m_LastCanceledGrenadeAt;

	[Token(Token = "0x4001F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int count;

	[Token(Token = "0x4001F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int checkForGrenade;

	[Token(Token = "0x4001F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int HCancelGrenade;

	[Token(Token = "0x4001F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Idle;

	[Token(Token = "0x4001F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int TrowGrenade;

	[Token(Token = "0x4001F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int HPalmGrenade;

	[Token(Token = "0x4001F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int SwitchGrenade;

	[Token(Token = "0x1700029D")]
	public int Grenade0Amount
	{
		[Token(Token = "0x6001479")]
		[Address(RVA = "0xD4BAA0", Offset = "0xD4BAA0", VA = "0xD4BAA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xD4AA3C", Offset = "0xD4AA3C", VA = "0xD4AA3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xD3E24C", Offset = "0xD3E24C", VA = "0xD3E24C")]
	public void ResetGrenades()
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xD4AD2C", Offset = "0xD4AD2C", VA = "0xD4AD2C")]
	public void Update()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xD4AAC4", Offset = "0xD4AAC4", VA = "0xD4AAC4")]
	private void HighligthCurrentGrenade()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xD4B684", Offset = "0xD4B684", VA = "0xD4B684")]
	private void UpdateGrenadeAmmounts()
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xD4B140", Offset = "0xD4B140", VA = "0xD4B140")]
	private void PalmGrenade()
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xD4B314", Offset = "0xD4B314", VA = "0xD4B314")]
	private void SwapGrenade()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xD4B61C", Offset = "0xD4B61C", VA = "0xD4B61C")]
	[IteratorStateMachine(typeof(<TrowGrenadeCoroutine>d__38))]
	private IEnumerator TrowGrenadeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xD4B344", Offset = "0xD4B344", VA = "0xD4B344")]
	public void CancelGrenade()
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xD3E344", Offset = "0xD3E344", VA = "0xD3E344")]
	public void ForceCancelGrenade()
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0xD42288", Offset = "0xD42288", VA = "0xD42288")]
	public void ResetInput()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xD4ABF0", Offset = "0xD4ABF0", VA = "0xD4ABF0")]
	public void SetGranadeAmmount()
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xD4BA34", Offset = "0xD4BA34", VA = "0xD4BA34")]
	public void GiveOneGrenade(int index)
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xD4B068", Offset = "0xD4B068", VA = "0xD4B068")]
	private bool HasGrenades()
	{
		return default(bool);
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xD4B78C", Offset = "0xD4B78C", VA = "0xD4B78C")]
	public bool HasCurrentGrenade()
	{
		return default(bool);
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xD4B8C0", Offset = "0xD4B8C0", VA = "0xD4B8C0")]
	private bool HasOtherGrenades()
	{
		return default(bool);
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0xD4B930", Offset = "0xD4B930", VA = "0xD4B930")]
	private void SetNextGrenade(bool grenadeMode = false)
	{
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0xD4BAC8", Offset = "0xD4BAC8", VA = "0xD4BAC8")]
	[IteratorStateMachine(typeof(<GrenadeSwitchCoroutine>d__57))]
	private IEnumerator GrenadeSwitchCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0xD4B7C8", Offset = "0xD4B7C8", VA = "0xD4B7C8")]
	private void ChangeActiveGrenade()
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0xD4B0C4", Offset = "0xD4B0C4", VA = "0xD4B0C4")]
	private void PlaySoundFX(int index)
	{
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0xD4BB58", Offset = "0xD4BB58", VA = "0xD4BB58")]
	public VrGranadeController()
	{
	}
}
[Token(Token = "0x2000321")]
public class VrGunLink : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000322")]
	[CompilerGenerated]
	private sealed class <InitializeIkTargetsCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrGunLink <>4__this;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerData playerToUpdate;

		[Token(Token = "0x170002A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0xD4CC78", Offset = "0xD4CC78", VA = "0xD4CC78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0xD4CCC0", Offset = "0xD4CCC0", VA = "0xD4CCC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xD4C6B0", Offset = "0xD4C6B0", VA = "0xD4C6B0")]
		[DebuggerHidden]
		public <InitializeIkTargetsCoroutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xD4CBD4", Offset = "0xD4CBD4", VA = "0xD4CBD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xD4CBD8", Offset = "0xD4CBD8", VA = "0xD4CBD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xD4CC80", Offset = "0xD4CC80", VA = "0xD4CC80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000323")]
	[CompilerGenerated]
	private sealed class <UpdateGunIk>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrGunLink <>4__this;

		[Token(Token = "0x170002A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xD4CD6C", Offset = "0xD4CD6C", VA = "0xD4CD6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xD4CDB4", Offset = "0xD4CDB4", VA = "0xD4CDB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xD4CB34", Offset = "0xD4CB34", VA = "0xD4CB34")]
		[DebuggerHidden]
		public <UpdateGunIk>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xD4CCC8", Offset = "0xD4CCC8", VA = "0xD4CCC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD4CCCC", Offset = "0xD4CCCC", VA = "0xD4CCCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD4CD74", Offset = "0xD4CD74", VA = "0xD4CD74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AttachmentController attachmentController;

	[Token(Token = "0x4001F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform secondaryHandSync;

	[Token(Token = "0x4001F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform secondaryLocalIkTarget;

	[Token(Token = "0x4001F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform shotOrigin;

	[Token(Token = "0x4001F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlayerData playerData;

	[Token(Token = "0x4001F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3[] RightHandedSecondaryPos;

	[Token(Token = "0x4001F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] RightHandedSecondaryRot;

	[Token(Token = "0x4001F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] LeftHandedSecondaryPos;

	[Token(Token = "0x4001F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] LeftHandedSecondaryRot;

	[Token(Token = "0x4001F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool initDone;

	[Token(Token = "0x4001F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool isMainMenu;

	[Token(Token = "0x4001F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool testing;

	[Token(Token = "0x4001F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform[] leftHandPositionTransforms;

	[Token(Token = "0x4001F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform[] LH_RightHandPositionTransforms;

	[Token(Token = "0x4001F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Dual wield alignment")]
	public Transform mainTransform;

	[Token(Token = "0x4001F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform dualWieldSecondaryPos;

	[Token(Token = "0x4001F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WeaponInformation thisWpn;

	[Token(Token = "0x4001F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool wpnSet;

	[Token(Token = "0x4001F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public WaitForSeconds wait;

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xD4C394", Offset = "0xD4C394", VA = "0xD4C394")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xD4C39C", Offset = "0xD4C39C", VA = "0xD4C39C")]
	public void InitializeIkTargets(PlayerData player, WeaponInformation wpn)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xD4C3F4", Offset = "0xD4C3F4", VA = "0xD4C3F4")]
	public void InitializeIkTargets(PlayerData playerToUpdate)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xD4C45C", Offset = "0xD4C45C", VA = "0xD4C45C")]
	[IteratorStateMachine(typeof(<InitializeIkTargetsCoroutine>d__21))]
	private IEnumerator InitializeIkTargetsCoroutine(PlayerData playerToUpdate)
	{
		return null;
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xD4C4D0", Offset = "0xD4C4D0", VA = "0xD4C4D0")]
	private void DoInitializeIkTargets(PlayerData playerToUpdate)
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xD4C6D8", Offset = "0xD4C6D8", VA = "0xD4C6D8")]
	public void UpdateSecondaryHandTarget(int secondaryHandIndex)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xD4C80C", Offset = "0xD4C80C", VA = "0xD4C80C")]
	[IteratorStateMachine(typeof(<UpdateGunIk>d__25))]
	public IEnumerator UpdateGunIk()
	{
		return null;
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xD4C874", Offset = "0xD4C874", VA = "0xD4C874")]
	public void CacheAndDeleteHandPositions()
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xD4CB5C", Offset = "0xD4CB5C", VA = "0xD4CB5C")]
	public VrGunLink()
	{
	}
}
[Token(Token = "0x2000324")]
[RequireComponent(typeof(CharacterController))]
public class VrPlayerController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000325")]
	[CompilerGenerated]
	private sealed class <DelayHMDReset>d__131 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrPlayerController <>4__this;

		[Token(Token = "0x170002A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xD51CCC", Offset = "0xD51CCC", VA = "0xD51CCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xD51D14", Offset = "0xD51D14", VA = "0xD51D14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xD51C00", Offset = "0xD51C00", VA = "0xD51C00")]
		[DebuggerHidden]
		public <DelayHMDReset>d__131(int <>1__state)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xD51C28", Offset = "0xD51C28", VA = "0xD51C28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xD51C2C", Offset = "0xD51C2C", VA = "0xD51C2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xD51CD4", Offset = "0xD51CD4", VA = "0xD51CD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000326")]
	[CompilerGenerated]
	private sealed class <WaitForCheck>d__160 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrPlayerController <>4__this;

		[Token(Token = "0x170002A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0xD51DB4", Offset = "0xD51DB4", VA = "0xD51DB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0xD51DFC", Offset = "0xD51DFC", VA = "0xD51DFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xD51D1C", Offset = "0xD51D1C", VA = "0xD51D1C")]
		[DebuggerHidden]
		public <WaitForCheck>d__160(int <>1__state)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xD51D44", Offset = "0xD51D44", VA = "0xD51D44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xD51D48", Offset = "0xD51D48", VA = "0xD51D48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xD51DBC", Offset = "0xD51DBC", VA = "0xD51DBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vest vest;

	[Token(Token = "0x4001F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float standingPos;

	[Token(Token = "0x4001F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float crouchPos;

	[Token(Token = "0x4001F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float slidingPos;

	[Token(Token = "0x4001F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pronePos;

	[Token(Token = "0x4001F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lowestHeight;

	[Token(Token = "0x4001F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float highestHeight;

	[Token(Token = "0x4001F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FPSPlayer FPSPlayerComponent;

	[Token(Token = "0x4001F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hmdHeight;

	[Token(Token = "0x4001F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float hmdDiference;

	[Token(Token = "0x4001F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distanceToFloor;

	[Token(Token = "0x4001F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float hmdOffset;

	[Token(Token = "0x4001F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 m_Gravity;

	[Token(Token = "0x4001F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 m_DefaultGravity;

	[Token(Token = "0x4001F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_FallMultiplier;

	[Token(Token = "0x4001F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_FallSpeedLimit;

	[Token(Token = "0x4001FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_DistanceBeforeFallDamage;

	[Token(Token = "0x4001FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float m_FallDamageMultiplier;

	[Token(Token = "0x4001FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool m_IsJumping;

	[Token(Token = "0x4001FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool m_Crouch;

	[Token(Token = "0x4001FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool m_Sprint;

	[Token(Token = "0x4001FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool m_Sliding;

	[Token(Token = "0x4001FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool m_Climbing;

	[Token(Token = "0x4001FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool m_Falling;

	[Token(Token = "0x4001FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool m_Prone;

	[Token(Token = "0x4001FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float proneSpeedMultiplier;

	[Token(Token = "0x4001FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float crouchSpeedMultiplier;

	[Token(Token = "0x4001FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float sprintSpeedMultiplier;

	[Token(Token = "0x4001FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float slideSpeedMultiplier;

	[Token(Token = "0x4001FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public InputControl inputControl;

	[Token(Token = "0x4001FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform vrRigPos;

	[Token(Token = "0x4001FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform playerRigPos;

	[Token(Token = "0x4001FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public VrRigHelper vrRig;

	[Token(Token = "0x4001FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VrRigReferences vrRigReferences;

	[Token(Token = "0x4001FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CharacterController controller;

	[Token(Token = "0x4001FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VignettingVR vignetteController;

	[Token(Token = "0x4001FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform playerSpawn;

	[Token(Token = "0x4001FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AttachmentController attachmentController;

	[Token(Token = "0x4001FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CameraConstraint cameraConstraint;

	[Token(Token = "0x4001FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform rightController;

	[Token(Token = "0x4001FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform leftController;

	[NonSerialized]
	[Token(Token = "0x4001FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float smoothTurningSpeed;

	[Token(Token = "0x4001FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform gunPos;

	[Token(Token = "0x4001FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform gunAnchor;

	[Token(Token = "0x4001FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool m_Locked;

	[Token(Token = "0x4001FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float latestHMDPos;

	[Token(Token = "0x4001FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public bool smoothTurning;

	[Token(Token = "0x4001FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	[HideInInspector]
	public bool vAir;

	[Token(Token = "0x4001FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	[HideInInspector]
	public bool vSprint;

	[Token(Token = "0x4001FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
	[HideInInspector]
	public bool vTurning;

	[Token(Token = "0x4001FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool lookDirection;

	[Token(Token = "0x4001FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	public bool lookAimingMoves;

	[Token(Token = "0x4001FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
	public bool leftHanded;

	[Token(Token = "0x4001FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
	public bool toggleSprint;

	[Token(Token = "0x4001FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool inTrigger;

	[Token(Token = "0x4001FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool playerDown;

	[Token(Token = "0x4001FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float m_CCStandingHeight;

	[Token(Token = "0x4001FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3 m_CCStandingCenter;

	[Token(Token = "0x4001FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float m_CCCrouchingHeight;

	[Token(Token = "0x4001FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector3 m_CCCrouchingCenter;

	[Token(Token = "0x4001FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float m_CCSlidingHeight;

	[Token(Token = "0x4001FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Vector3 m_CCSlidingCenter;

	[Token(Token = "0x4001FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float m_CCProneHeight;

	[Token(Token = "0x4001FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 m_CCProneCenter;

	[Token(Token = "0x4001FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float m_ProneRadious;

	[Token(Token = "0x4001FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float m_NormalRadious;

	[Token(Token = "0x4001FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool sprintToggleOn;

	[Token(Token = "0x4001FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float climbingCheckDistance;

	[Token(Token = "0x4001FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float Acceleration;

	[Token(Token = "0x4001FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float Damping;

	[Token(Token = "0x4001FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float BackAndSideDampen;

	[Token(Token = "0x4001FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float BackAndSideDampenMoves;

	[Token(Token = "0x4001FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float BackAndSideDampenAimJoystickFordward;

	[Token(Token = "0x4001FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float BackAndSideDampenMultiplier;

	[NonSerialized]
	[Token(Token = "0x4001FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float MinAngleForDamp;

	[NonSerialized]
	[Token(Token = "0x4001FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float MaxAngleForDamp;

	[Token(Token = "0x4001FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float JumpForce;

	[Token(Token = "0x4001FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float RotationAmount;

	[Token(Token = "0x4001FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float RotationRatchet;

	[Token(Token = "0x4001FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[Tooltip("The player will rotate in fixed steps if Snap Rotation is enabled.")]
	public bool SnapRotation;

	[Token(Token = "0x4001FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[Tooltip("How many fixed speeds to use with linear movement? 0=linear control")]
	public int FixedSpeedSteps;

	[Token(Token = "0x4001FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool HmdResetsY;

	[Token(Token = "0x4001FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	public bool HmdRotatesY;

	[Token(Token = "0x4001FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
	public bool Moving;

	[Token(Token = "0x4001FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float minMovementBeforeRotating;

	[Token(Token = "0x4001FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float minRotationAngle;

	[Token(Token = "0x4001FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public bool useProfileData;

	[NonSerialized]
	[Token(Token = "0x4001FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float CameraHeight;

	[NonSerialized]
	[Token(Token = "0x4001FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool Teleported;

	[Token(Token = "0x4001FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4001FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	public bool EnableRotation;

	[Token(Token = "0x4001FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4001FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	protected CharacterController Controller;

	[Token(Token = "0x4001FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public VrRigHelper CameraRig;

	[Token(Token = "0x4001FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Transform currentFiringPos;

	[Token(Token = "0x4001FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Transform currentSecondaryFiringPos;

	[Token(Token = "0x4001FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Transform currentGrenadePoint;

	[Token(Token = "0x4001FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Transform currentSecondaryGrenadePoint;

	[Token(Token = "0x4001FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float MoveScale;

	[Token(Token = "0x4001FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public Vector3 MoveThrottle;

	[Token(Token = "0x4001FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	[HideInInspector]
	public float MoveScaleMultiplier;

	[Token(Token = "0x4001FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float RotationScaleMultiplier;

	[Token(Token = "0x4001FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private bool SkipMouseRotation;

	[Token(Token = "0x4001FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22D")]
	private bool HaltUpdateMovement;

	[Token(Token = "0x4001FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22E")]
	private bool prevHatLeft;

	[Token(Token = "0x4001FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22F")]
	private bool prevHatRight;

	[Token(Token = "0x4001FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float SimulationRate;

	[Token(Token = "0x4001FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float buttonRotation;

	[Token(Token = "0x4002000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4002001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
	private bool playerControllerEnabled;

	[Token(Token = "0x4002002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float sprintTotalStamina;

	[Token(Token = "0x4002003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public bool tired;

	[Token(Token = "0x4002004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Transform m_Transform;

	[Token(Token = "0x4002005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public float spawningTimeOut;

	[Token(Token = "0x4002006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public float spawningTimeOutCount;

	[Token(Token = "0x4002007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float dt;

	[Token(Token = "0x4002008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float stairRecoveryTime;

	[Token(Token = "0x4002009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float fallingStarted;

	[Token(Token = "0x400200A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private float fallingEnded;

	[Token(Token = "0x400200B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private float distanceFall;

	[Token(Token = "0x400200C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public float sprintStamina;

	[Token(Token = "0x400200D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private float slideStamina;

	[Token(Token = "0x400200E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private float slideStaminaMin;

	[Token(Token = "0x400200F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float slideStaminaMax;

	[Token(Token = "0x4002010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private PlayerPerks playerPerks;

	[Token(Token = "0x4002011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool isGrounded;

	[Token(Token = "0x4002012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public Vector3 slideRaycastOffset;

	[Token(Token = "0x4002013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Vector3 fwd;

	[Token(Token = "0x4002014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public float slideRaycastLenght;

	[Token(Token = "0x4002015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Transform playerCharacter;

	[Token(Token = "0x4002016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private WaitForSeconds waitCheckTime;

	[Token(Token = "0x4002017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool canCheckHMDDistance;

	[Token(Token = "0x4002018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B9")]
	public bool m_LockMovement;

	[Token(Token = "0x4002019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BA")]
	private bool moveForward;

	[Token(Token = "0x400201A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BB")]
	private bool moveLeft;

	[Token(Token = "0x400201B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private bool moveRight;

	[Token(Token = "0x400201C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BD")]
	private bool moveBack;

	[Token(Token = "0x400201D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Vector3 movDirCal;

	[Token(Token = "0x400201E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private Vector3 lookDirCal;

	[Token(Token = "0x400201F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float movAngle;

	[Token(Token = "0x4002020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public Vector3 upClimbDirection;

	[Token(Token = "0x4002021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Vector3 upWorldDirection;

	[Token(Token = "0x4002022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public Vector2 primaryAxis;

	[Token(Token = "0x4002023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Vector2 sprintingAxis;

	[Token(Token = "0x4002024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private bool startedMoving;

	[Token(Token = "0x4002025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x305")]
	public bool skipOneFrame;

	[Token(Token = "0x4002026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Transform root;

	[Token(Token = "0x4002027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Transform centerEye;

	[Token(Token = "0x4002028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private float raySize;

	[Token(Token = "0x4002029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private Ray ray;

	[Token(Token = "0x400202A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public LayerMask standCheckLayerMask;

	[Token(Token = "0x400202B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private float waitBeforeNextClimb;

	[Token(Token = "0x400202C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private float timeBeforeNextClimb;

	[Token(Token = "0x400202D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public bool canClimb;

	[Token(Token = "0x400202E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private int climbCount;

	[Token(Token = "0x400202F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool climbCollision;

	[Token(Token = "0x4002030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	private bool movingUp;

	[Token(Token = "0x4002031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34A")]
	private bool movingDown;

	[Token(Token = "0x4002032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private RaycastHit hit;

	[Token(Token = "0x4002033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private bool hitDetected;

	[Token(Token = "0x4002034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	private Vector3 boxCastSize;

	[Token(Token = "0x4002035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private Vector3 boxCastOffset;

	[Token(Token = "0x4002036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public LayerMask climbCastLayerMask;

	[Token(Token = "0x4002037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private Tween[] m_controllerCHRTweens;

	[Token(Token = "0x170002A6")]
	public float InitialYRotation
	{
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD4CF24", Offset = "0xD4CF24", VA = "0xD4CF24")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD4CF2C", Offset = "0xD4CF2C", VA = "0xD4CF2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<Transform> TransformUpdated
	{
		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD4CDBC", Offset = "0xD4CDBC", VA = "0xD4CDBC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD4CE70", Offset = "0xD4CE70", VA = "0xD4CE70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event System.Action CameraUpdated
	{
		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xD49114", Offset = "0xD49114", VA = "0xD49114")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xD49324", Offset = "0xD49324", VA = "0xD49324")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event System.Action PreCharacterMove
	{
		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD491B4", Offset = "0xD491B4", VA = "0xD491B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD49284", Offset = "0xD49284", VA = "0xD49284")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0xD4CF34", Offset = "0xD4CF34", VA = "0xD4CF34")]
	public void SetSnapRotation(int index)
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0xD4CF50", Offset = "0xD4CF50", VA = "0xD4CF50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0xD4D000", Offset = "0xD4D000", VA = "0xD4D000")]
	private void Start()
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0xD4D19C", Offset = "0xD4D19C", VA = "0xD4D19C")]
	[IteratorStateMachine(typeof(<DelayHMDReset>d__131))]
	public IEnumerator DelayHMDReset()
	{
		return null;
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0xD4D204", Offset = "0xD4D204", VA = "0xD4D204")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0xD4D3A0", Offset = "0xD4D3A0", VA = "0xD4D3A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0xD4E7CC", Offset = "0xD4E7CC", VA = "0xD4E7CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0xD4DE1C", Offset = "0xD4DE1C", VA = "0xD4DE1C")]
	private void ResetStamina(bool min)
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0xD4E940", Offset = "0xD4E940", VA = "0xD4E940")]
	public bool FallingFromHeight(float height)
	{
		return default(bool);
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0xD4DEE4", Offset = "0xD4DEE4", VA = "0xD4DEE4")]
	private void Vignetting()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0xD4E9A0", Offset = "0xD4E9A0", VA = "0xD4E9A0")]
	public void EndOfMatchHMDPos()
	{
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0xD4E18C", Offset = "0xD4E18C", VA = "0xD4E18C")]
	public void SetHMDPosition()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0xD4E9A4", Offset = "0xD4E9A4", VA = "0xD4E9A4")]
	private void AdjustHMDPos()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0xD42200", Offset = "0xD42200", VA = "0xD42200")]
	public void InitialHMDCalculation()
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0xD4EA58", Offset = "0xD4EA58", VA = "0xD4EA58")]
	private void CalculateHMDHeigth(float height)
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xD4EAC4", Offset = "0xD4EAC4", VA = "0xD4EAC4")]
	[IteratorStateMachine(typeof(<WaitForCheck>d__160))]
	private IEnumerator WaitForCheck()
	{
		return null;
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xD4EB2C", Offset = "0xD4EB2C", VA = "0xD4EB2C")]
	private void CheckIfCrouchOrStanding()
	{
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0xD4EBE8", Offset = "0xD4EBE8", VA = "0xD4EBE8", Slot = "4")]
	protected virtual void UpdateController()
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0xD4F03C", Offset = "0xD4F03C", VA = "0xD4F03C", Slot = "5")]
	public virtual void UpdateMovement()
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xD50968", Offset = "0xD50968", VA = "0xD50968")]
	public void UpdateTransform(VrRigHelper rig)
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0xD50D30", Offset = "0xD50D30", VA = "0xD50D30")]
	public float KeepAngles(float value)
	{
		return default(float);
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0xD4E670", Offset = "0xD4E670", VA = "0xD4E670")]
	public bool Jump(bool skipGroundCheck = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0xD51050", Offset = "0xD51050", VA = "0xD51050")]
	public void Stop()
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xD510F8", Offset = "0xD510F8", VA = "0xD510F8")]
	public void GetMoveScaleMultiplier(ref float moveScaleMultiplier)
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xD51104", Offset = "0xD51104", VA = "0xD51104")]
	public void SetMoveScaleMultiplier(float moveScaleMultiplier)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xD5110C", Offset = "0xD5110C", VA = "0xD5110C")]
	public void GetRotationScaleMultiplier(ref float rotationScaleMultiplier)
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xD51118", Offset = "0xD51118", VA = "0xD51118")]
	public void SetRotationScaleMultiplier(float rotationScaleMultiplier)
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xD51120", Offset = "0xD51120", VA = "0xD51120")]
	public void GetSkipMouseRotation(ref bool skipMouseRotation)
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xD5112C", Offset = "0xD5112C", VA = "0xD5112C")]
	public void SetSkipMouseRotation(bool skipMouseRotation)
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xD51138", Offset = "0xD51138", VA = "0xD51138")]
	public void GetHaltUpdateMovement(ref bool haltUpdateMovement)
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xD51144", Offset = "0xD51144", VA = "0xD51144")]
	public void SetHaltUpdateMovement(bool haltUpdateMovement)
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xD51150", Offset = "0xD51150", VA = "0xD51150")]
	public void ResetOrientation()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0xD4E1E4", Offset = "0xD4E1E4", VA = "0xD4E1E4")]
	private bool CanStand(bool prone = false, bool checkCrouch = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0xD4DDC4", Offset = "0xD4DDC4", VA = "0xD4DDC4")]
	private void CheckIfCanClimb()
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xD50D68", Offset = "0xD50D68", VA = "0xD50D68")]
	private void CheckIfCollisionWhileClimbing()
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xD511E0", Offset = "0xD511E0", VA = "0xD511E0")]
	public void ClimbOn()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xD41E1C", Offset = "0xD41E1C", VA = "0xD41E1C")]
	public void ClimbOff()
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0xD4E084", Offset = "0xD4E084", VA = "0xD4E084")]
	private void SlideOn()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0xD4DE40", Offset = "0xD4DE40", VA = "0xD4DE40")]
	private void SlideOff()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0xD512BC", Offset = "0xD512BC", VA = "0xD512BC")]
	public void PlayerDown(bool value)
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0xD4E4B8", Offset = "0xD4E4B8", VA = "0xD4E4B8")]
	private void ProneOn()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0xD42070", Offset = "0xD42070", VA = "0xD42070")]
	public void ProneOff()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0xD4E2E4", Offset = "0xD4E2E4", VA = "0xD4E2E4")]
	private void CrouchOn()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0xD41ECC", Offset = "0xD41ECC", VA = "0xD41ECC")]
	public void CrouchOff()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0xD50888", Offset = "0xD50888", VA = "0xD50888")]
	private void SprintOn()
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0xD42418", Offset = "0xD42418", VA = "0xD42418")]
	public void SprintOff()
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0xD518DC", Offset = "0xD518DC", VA = "0xD518DC")]
	public bool RaycastObstacles()
	{
		return default(bool);
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0xD518E4", Offset = "0xD518E4", VA = "0xD518E4")]
	public VrPlayerController()
	{
	}
}
[Token(Token = "0x2000328")]
public class VrPlayerToggler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fpsPlayer;

	[Token(Token = "0x4002041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController characterController;

	[Token(Token = "0x4002042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VrPlayerController vrCharacterController;

	[Token(Token = "0x4002043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CameraConstraint cameraConstraint;

	[Token(Token = "0x4002044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigBody;

	[Token(Token = "0x4002045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CapsuleCollider capCollider;

	[Token(Token = "0x4002046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] nonVrElements;

	[Token(Token = "0x4002047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] vrElements;

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xD51F38", Offset = "0xD51F38", VA = "0xD51F38")]
	public void Awake()
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xD520D8", Offset = "0xD520D8", VA = "0xD520D8")]
	private void SwitchVrComponents(bool useVr)
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xD52134", Offset = "0xD52134", VA = "0xD52134")]
	private void SwitchNonVrComponents(bool onOrOff)
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xD5217C", Offset = "0xD5217C", VA = "0xD5217C")]
	public VrPlayerToggler()
	{
	}
}
[Token(Token = "0x2000329")]
public class VrRigHeigthAdjust : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xD52184", Offset = "0xD52184", VA = "0xD52184")]
	private void Start()
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xD52188", Offset = "0xD52188", VA = "0xD52188")]
	private void Update()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xD5218C", Offset = "0xD5218C", VA = "0xD5218C")]
	public VrRigHeigthAdjust()
	{
	}
}
[Token(Token = "0x200032A")]
public class VrScopeChangegeTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] sights;

	[Token(Token = "0x4002049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponBehavior weaponBehavior;

	[Token(Token = "0x400204A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int sigthIndex;

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xD52194", Offset = "0xD52194", VA = "0xD52194")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xD521A0", Offset = "0xD521A0", VA = "0xD521A0")]
	private void HideAllSigths()
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xD52204", Offset = "0xD52204", VA = "0xD52204")]
	public VrScopeChangegeTest()
	{
	}
}
[Token(Token = "0x200032B")]
public class VrSightLink : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400204B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fireRaycastPos;

	[Token(Token = "0x400204C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WeaponBehavior weaponBehaviour;

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0xD52214", Offset = "0xD52214", VA = "0xD52214")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0xD522C4", Offset = "0xD522C4", VA = "0xD522C4")]
	public VrSightLink()
	{
	}
}
[Token(Token = "0x200032C")]
[Obsolete("This class is being replaced by initialization manager")]
public class Ps4SetUpScreen : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xD522CC", Offset = "0xD522CC", VA = "0xD522CC")]
	public Ps4SetUpScreen()
	{
	}
}
[Token(Token = "0x200032D")]
public enum SonyRegions
{
	[Token(Token = "0x400204E")]
	none,
	[Token(Token = "0x400204F")]
	NA,
	[Token(Token = "0x4002050")]
	EU
}
[Token(Token = "0x200032E")]
public class PsvrInputTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debugInput;

	[Token(Token = "0x4002052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VrInput vrInput;

	[Token(Token = "0x4002053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text debugHold;

	[Token(Token = "0x4002054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text debugPress;

	[Token(Token = "0x4002055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text debugUp;

	[Token(Token = "0x4002056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup holdCanvas;

	[Token(Token = "0x4002057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CanvasGroup pressCanvas;

	[Token(Token = "0x4002058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CanvasGroup upCanvas;

	[Token(Token = "0x4002059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float debugFadeSpeed;

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xD522D4", Offset = "0xD522D4", VA = "0xD522D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0xD52364", Offset = "0xD52364", VA = "0xD52364")]
	private void Update()
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0xD525B4", Offset = "0xD525B4", VA = "0xD525B4")]
	public void FadeCanvases()
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0xD5238C", Offset = "0xD5238C", VA = "0xD5238C")]
	public void ButtonChecks()
	{
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0xD526D4", Offset = "0xD526D4", VA = "0xD526D4")]
	public PsvrInputTest()
	{
	}
}
[Token(Token = "0x200032F")]
public class PlayerVrActivator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400205A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camera2d;

	[Token(Token = "0x400205B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cameraVr;

	[Token(Token = "0x400205C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject VrRig;

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xD526EC", Offset = "0xD526EC", VA = "0xD526EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0xD52728", Offset = "0xD52728", VA = "0xD52728")]
	public void EnableVr()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0xD52780", Offset = "0xD52780", VA = "0xD52780")]
	public void DisableVr()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0xD527D8", Offset = "0xD527D8", VA = "0xD527D8")]
	public PlayerVrActivator()
	{
	}
}
[Token(Token = "0x2000330")]
public class VrSceneToggler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400205D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] nonVrElements;

	[Token(Token = "0x400205E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] vrElements;

	[Token(Token = "0x400205F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Canvas mainCanvas;

	[Token(Token = "0x4002060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera eventCameraVR;

	[Token(Token = "0x4002061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera eventCameraNonVr;

	[Token(Token = "0x4002062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SECTR_AudioBus mainBus;

	[Token(Token = "0x4002063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera Camera2d;

	[Token(Token = "0x4002064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera CameraVr;

	[Token(Token = "0x6001507")]
	[Address(RVA = "0xD527E0", Offset = "0xD527E0", VA = "0xD527E0")]
	public void Start()
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0xD527E4", Offset = "0xD527E4", VA = "0xD527E4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xD5295C", Offset = "0xD5295C", VA = "0xD5295C")]
	public void Update1()
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0xD52960", Offset = "0xD52960", VA = "0xD52960")]
	public VrSceneToggler()
	{
	}
}
[Token(Token = "0x2000331")]
public class VrToggler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas mainCanvas;

	[Token(Token = "0x4002066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera eventCameraVR;

	[Token(Token = "0x4002067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera eventCameraNonVr;

	[Token(Token = "0x4002068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] nonVrElements;

	[Token(Token = "0x4002069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] vrElements;

	[Token(Token = "0x600150B")]
	[Address(RVA = "0xD52968", Offset = "0xD52968", VA = "0xD52968")]
	public void Awake()
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0xD52A30", Offset = "0xD52A30", VA = "0xD52A30")]
	public VrToggler()
	{
	}
}
[Token(Token = "0x2000332")]
public class CustomizationHover : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600150D")]
	[Address(RVA = "0xD52A38", Offset = "0xD52A38", VA = "0xD52A38")]
	public CustomizationHover()
	{
	}
}
[Token(Token = "0x2000333")]
public class DeathLineRenderer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400206A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer line;

	[Token(Token = "0x400206B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startPos;

	[Token(Token = "0x400206C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endPos;

	[Token(Token = "0x600150E")]
	[Address(RVA = "0xD52A40", Offset = "0xD52A40", VA = "0xD52A40")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0xD52AA8", Offset = "0xD52AA8", VA = "0xD52AA8")]
	public DeathLineRenderer()
	{
	}
}
[Token(Token = "0x2000334")]
public class BtnSound : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerClickHandler
{
	[Token(Token = "0x400206D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playClickSound;

	[Token(Token = "0x400206E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playHoverSound;

	[Token(Token = "0x400206F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool checkForInteractableButton;

	[Token(Token = "0x4002070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button thisBtn;

	[Token(Token = "0x6001510")]
	[Address(RVA = "0xD52AB0", Offset = "0xD52AB0", VA = "0xD52AB0", Slot = "5")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0xD52B24", Offset = "0xD52B24", VA = "0xD52B24", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0xD52B98", Offset = "0xD52B98", VA = "0xD52B98")]
	public BtnSound()
	{
	}
}
[Token(Token = "0x2000335")]
public class ButtonStyle : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
{
	[Token(Token = "0x4002071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool changeImageSprite;

	[Token(Token = "0x4002072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool changeTextColor;

	[Token(Token = "0x4002073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool changeImageColor;

	[Token(Token = "0x4002074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool secondaryButtonClick;

	[Token(Token = "0x4002075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool unclickOnEnable;

	[Token(Token = "0x4002076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool clickOnEnable;

	[Token(Token = "0x4002077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool isLoadoutBtn;

	[Token(Token = "0x4002078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool multipleClicks;

	[Token(Token = "0x4002079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image btnImg;

	[Token(Token = "0x400207A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite primarySprite;

	[Token(Token = "0x400207B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite secondarySprite;

	[Token(Token = "0x400207C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color32 primaryTextColor;

	[Token(Token = "0x400207D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color32 secondaryTextColor;

	[Token(Token = "0x400207E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color32 primaryImgColor;

	[Token(Token = "0x400207F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color32 secondaryImgColor;

	[Token(Token = "0x4002080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text btnText;

	[Token(Token = "0x4002081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 initialPosition;

	[Token(Token = "0x4002082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool clicked;

	[Token(Token = "0x4002083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject extraGO;

	[Token(Token = "0x4002084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float btnMovementZ;

	[Token(Token = "0x4002085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float btnMovementX;

	[Token(Token = "0x4002086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool init;

	[Token(Token = "0x4002087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool m_StopMovement;

	[Token(Token = "0x4002088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool m_Unclickable;

	[Token(Token = "0x4002089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	public bool m_ClickOnly;

	[Token(Token = "0x400208A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RectTransform m_RectTransform;

	[Token(Token = "0x170002AB")]
	private RectTransform RectTransform
	{
		[Token(Token = "0x6001513")]
		[Address(RVA = "0xD52BA8", Offset = "0xD52BA8", VA = "0xD52BA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0xD52C3C", Offset = "0xD52C3C", VA = "0xD52C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0xD52C48", Offset = "0xD52C48", VA = "0xD52C48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0xD52C4C", Offset = "0xD52C4C", VA = "0xD52C4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0xD52D6C", Offset = "0xD52D6C", VA = "0xD52D6C")]
	public void ClickedBtn(bool noSound = false)
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0xD5323C", Offset = "0xD5323C", VA = "0xD5323C")]
	public void UnclickedBtn()
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0xD53508", Offset = "0xD53508", VA = "0xD53508")]
	private void HoverBtn()
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0xD53758", Offset = "0xD53758", VA = "0xD53758")]
	private void UnHoverBtn()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0xD5384C", Offset = "0xD5384C", VA = "0xD5384C")]
	private void MenuBtnClick(GameObject btn)
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0xD538E4", Offset = "0xD538E4", VA = "0xD538E4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0xD538E8", Offset = "0xD538E8", VA = "0xD538E8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0xD538EC", Offset = "0xD538EC", VA = "0xD538EC", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0xD53A04", Offset = "0xD53A04", VA = "0xD53A04", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xD53B14", Offset = "0xD53B14", VA = "0xD53B14")]
	public ButtonStyle()
	{
	}
}
[Serializable]
[Token(Token = "0x2000336")]
public class ChatElement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000337")]
	public enum CHAT_TYPE
	{
		[Token(Token = "0x40020A0")]
		Text,
		[Token(Token = "0x40020A1")]
		Kill,
		[Token(Token = "0x40020A2")]
		Suicide
	}

	[Token(Token = "0x2000338")]
	[CompilerGenerated]
	private sealed class <FadeAftertime>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChatElement <>4__this;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <canvasOpacity>5__2;

		[Token(Token = "0x170002AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0xD54598", Offset = "0xD54598", VA = "0xD54598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xD545E0", Offset = "0xD545E0", VA = "0xD545E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xD543FC", Offset = "0xD543FC", VA = "0xD543FC")]
		[DebuggerHidden]
		public <FadeAftertime>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xD54490", Offset = "0xD54490", VA = "0xD54490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xD54494", Offset = "0xD54494", VA = "0xD54494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xD545A0", Offset = "0xD545A0", VA = "0xD545A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400208B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup myCanvas;

	[Token(Token = "0x400208C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text textLbl;

	[Token(Token = "0x400208D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text killerLbl;

	[Token(Token = "0x400208E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text killedLbl;

	[Token(Token = "0x400208F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text suicideLbl;

	[Token(Token = "0x4002090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image killGunImg;

	[Token(Token = "0x4002091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image killerImg;

	[Token(Token = "0x4002092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image killedImg;

	[Token(Token = "0x4002093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image suicideImg;

	[Token(Token = "0x4002094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite[] suicideIcons;

	[Token(Token = "0x4002095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color32[] colors;

	[Token(Token = "0x4002096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject chatPnl;

	[Token(Token = "0x4002097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject killPnl;

	[Token(Token = "0x4002098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject suicidePnl;

	[Token(Token = "0x4002099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject headShotImgGo;

	[Token(Token = "0x400209A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float fadeTime;

	[Token(Token = "0x400209B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float fadeSpeed;

	[Token(Token = "0x400209C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private LevelManager levelManager;

	[Token(Token = "0x400209D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForSeconds waitFadeTime;

	[Token(Token = "0x400209E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite emptySprite;

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xD53B24", Offset = "0xD53B24", VA = "0xD53B24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xD53C20", Offset = "0xD53C20", VA = "0xD53C20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0xD53C28", Offset = "0xD53C28", VA = "0xD53C28")]
	public void InitializeChatElement(LevelManager levelManager)
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0xD53C30", Offset = "0xD53C30", VA = "0xD53C30")]
	public void SetChatElement(string text, int color)
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0xD53D2C", Offset = "0xD53D2C", VA = "0xD53D2C")]
	public void SetSuicideElement(string text, int color, short w)
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xD53E74", Offset = "0xD53E74", VA = "0xD53E74")]
	public void SetKillElement(int killedID, int killerID, short w, bool headShot)
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0xD543A4", Offset = "0xD543A4", VA = "0xD543A4")]
	private bool SetKillSprite(short w)
	{
		return default(bool);
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xD53BB8", Offset = "0xD53BB8", VA = "0xD53BB8")]
	[IteratorStateMachine(typeof(<FadeAftertime>d__28))]
	private IEnumerator FadeAftertime()
	{
		return null;
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0xD54424", Offset = "0xD54424", VA = "0xD54424")]
	public ChatElement()
	{
	}
}
[Token(Token = "0x2000339")]
public class DisplayModelInHand : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x200033A")]
	public enum OBJECT_TYPES
	{
		[Token(Token = "0x40020AD")]
		primary,
		[Token(Token = "0x40020AE")]
		secondary,
		[Token(Token = "0x40020AF")]
		attachment,
		[Token(Token = "0x40020B0")]
		scope,
		[Token(Token = "0x40020B1")]
		granade,
		[Token(Token = "0x40020B2")]
		granadeTwo,
		[Token(Token = "0x40020B3")]
		attachmentSecondary,
		[Token(Token = "0x40020B4")]
		scopeSecondary,
		[Token(Token = "0x40020B5")]
		melee,
		[Token(Token = "0x40020B6")]
		melee_secondary,
		[Token(Token = "0x40020B7")]
		tactical
	}

	[Token(Token = "0x40020A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OBJECT_TYPES objectType;

	[Token(Token = "0x40020A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isCurrent;

	[Token(Token = "0x40020A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int objectIndex;

	[Token(Token = "0x40020AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerLocalData m_localData;

	[Token(Token = "0x40020AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CustomizationModelsManager modelsManager;

	[Token(Token = "0x6001530")]
	[Address(RVA = "0xD545E8", Offset = "0xD545E8", VA = "0xD545E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0xD54664", Offset = "0xD54664", VA = "0xD54664", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xD546C4", Offset = "0xD546C4", VA = "0xD546C4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xD5495C", Offset = "0xD5495C", VA = "0xD5495C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xD54960", Offset = "0xD54960", VA = "0xD54960")]
	public void HideTypeModels()
	{
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xD546D4", Offset = "0xD546D4", VA = "0xD546D4")]
	public void ShowCurrent()
	{
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0xD548B0", Offset = "0xD548B0", VA = "0xD548B0")]
	public void ShowSelection()
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0xD55378", Offset = "0xD55378", VA = "0xD55378")]
	public DisplayModelInHand()
	{
	}
}
[Token(Token = "0x200033B")]
public class GameModeButtonStyle : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x40020B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject highLigthGo;

	[Token(Token = "0x6001538")]
	[Address(RVA = "0xD55380", Offset = "0xD55380", VA = "0xD55380")]
	private void Start()
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0xD55384", Offset = "0xD55384", VA = "0xD55384", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0xD553D0", Offset = "0xD553D0", VA = "0xD553D0", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0xD5543C", Offset = "0xD5543C", VA = "0xD5543C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0xD5545C", Offset = "0xD5545C", VA = "0xD5545C")]
	public GameModeButtonStyle()
	{
	}
}
[Token(Token = "0x200033C")]
public class GameModeVrButton : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x40020B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gameMode;

	[Token(Token = "0x40020BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StartupManager startupManager;

	[Token(Token = "0x40020BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrMenuSelectingScript vrselecting;

	[Token(Token = "0x600153D")]
	[Address(RVA = "0xD55464", Offset = "0xD55464", VA = "0xD55464", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0xD555D8", Offset = "0xD555D8", VA = "0xD555D8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0xD55654", Offset = "0xD55654", VA = "0xD55654", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0xD55674", Offset = "0xD55674", VA = "0xD55674")]
	public GameModeVrButton()
	{
	}
}
[Token(Token = "0x200033D")]
public class OffSetButton : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerClickHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x40020BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int offsetIndex;

	[Token(Token = "0x40020BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool restPoints;

	[Token(Token = "0x40020BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float clickWaitTime;

	[Token(Token = "0x40020BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeCount;

	[Token(Token = "0x40020C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrSettings settings;

	[Token(Token = "0x6001541")]
	[Address(RVA = "0xD5567C", Offset = "0xD5567C", VA = "0xD5567C", Slot = "5")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0xD5582C", Offset = "0xD5582C", VA = "0xD5582C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0xD55878", Offset = "0xD55878", VA = "0xD55878", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0xD558FC", Offset = "0xD558FC", VA = "0xD558FC", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0xD5590C", Offset = "0xD5590C", VA = "0xD5590C")]
	public OffSetButton()
	{
	}
}
[Token(Token = "0x200033E")]
public class SkinSelectionElement : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x40020C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image skinImg;

	[Token(Token = "0x40020C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text skinNameText;

	[Token(Token = "0x40020C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectedUi;

	[Token(Token = "0x40020C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject priceObject;

	[Token(Token = "0x40020C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject priceBackground;

	[Token(Token = "0x40020C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TMP_Text price;

	[Token(Token = "0x40020C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	[SerializeField]
	private Color canBuyColor;

	[Token(Token = "0x40020C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color cantBuyColor;

	[Token(Token = "0x40020C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_LockedState;

	[Token(Token = "0x40020CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Sprite skinSprite;

	[Token(Token = "0x40020CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CustomizationModelsManager customizationManager;

	[Token(Token = "0x40020CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int skinIndex;

	[Token(Token = "0x40020CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int weaponIndex;

	[Token(Token = "0x40020CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string skinName;

	[Token(Token = "0x40020CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Action<int> onBuy;

	[Token(Token = "0x40020D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Action<int> onSelect;

	[Token(Token = "0x170002AE")]
	public int SkinIndex
	{
		[Token(Token = "0x6001546")]
		[Address(RVA = "0xD55920", Offset = "0xD55920", VA = "0xD55920")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0xD55928", Offset = "0xD55928", VA = "0xD55928")]
	public void SetSkin(Sprite skinSprite, string skinName, int skinIndex, int weaponIndex, CustomizationModelsManager customizationManager)
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0xD559A4", Offset = "0xD559A4", VA = "0xD559A4")]
	public void SetSelected(bool b)
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0xD559C4", Offset = "0xD559C4", VA = "0xD559C4")]
	public void LockSkin()
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0xD559FC", Offset = "0xD559FC", VA = "0xD559FC")]
	public void SetPrice(int price, bool hasEnoughCoins)
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0xD55AD0", Offset = "0xD55AD0", VA = "0xD55AD0")]
	public void SetBuyCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0xD55AD8", Offset = "0xD55AD8", VA = "0xD55AD8")]
	public void SetSelectCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0xD55AE0", Offset = "0xD55AE0", VA = "0xD55AE0")]
	public void OnBuyClicked()
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0xD55B08", Offset = "0xD55B08", VA = "0xD55B08")]
	public void OnSelectedClicked()
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0xD55B30", Offset = "0xD55B30", VA = "0xD55B30", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0xD55B50", Offset = "0xD55B50", VA = "0xD55B50", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0xD55B68", Offset = "0xD55B68", VA = "0xD55B68", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0xD55B6C", Offset = "0xD55B6C", VA = "0xD55B6C")]
	public SkinSelectionElement()
	{
	}
}
[Token(Token = "0x200033F")]
public class VolumeBtn : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerClickHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x40020D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int soundIndex;

	[Token(Token = "0x40020D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool restPoints;

	[Token(Token = "0x40020D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float clickWaitTime;

	[Token(Token = "0x40020D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeCount;

	[Token(Token = "0x40020D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrSettings settings;

	[Token(Token = "0x40020D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_PointerDown;

	[Token(Token = "0x6001553")]
	[Address(RVA = "0xD55B74", Offset = "0xD55B74", VA = "0xD55B74", Slot = "5")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0xD5627C", Offset = "0xD5627C", VA = "0xD5627C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0xD562C8", Offset = "0xD562C8", VA = "0xD562C8", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0xD562D4", Offset = "0xD562D4", VA = "0xD562D4", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0xD562E8", Offset = "0xD562E8", VA = "0xD562E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0xD56384", Offset = "0xD56384", VA = "0xD56384")]
	public VolumeBtn()
	{
	}
}
[Token(Token = "0x2000340")]
public class VrInGameUIStyle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000341")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIStyle <>4__this;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <canvasOpacity>5__2;

		[Token(Token = "0x170002AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0xD56888", Offset = "0xD56888", VA = "0xD56888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0xD568D0", Offset = "0xD568D0", VA = "0xD568D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xD56750", Offset = "0xD56750", VA = "0xD56750")]
		[DebuggerHidden]
		public <FadeOut>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xD567C4", Offset = "0xD567C4", VA = "0xD567C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xD567C8", Offset = "0xD567C8", VA = "0xD567C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xD56890", Offset = "0xD56890", VA = "0xD56890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000342")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrInGameUIStyle <>4__this;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <canvasOpacity>5__2;

		[Token(Token = "0x170002B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0xD569A4", Offset = "0xD569A4", VA = "0xD569A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0xD569EC", Offset = "0xD569EC", VA = "0xD569EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xD56778", Offset = "0xD56778", VA = "0xD56778")]
		[DebuggerHidden]
		public <FadeIn>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xD568D8", Offset = "0xD568D8", VA = "0xD568D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xD568DC", Offset = "0xD568DC", VA = "0xD568DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xD569AC", Offset = "0xD569AC", VA = "0xD569AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40020D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup myCanvas;

	[Token(Token = "0x40020D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isVisible;

	[Token(Token = "0x40020D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeTime;

	[Token(Token = "0x40020DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAlpha;

	[Token(Token = "0x40020DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minAlpha;

	[Token(Token = "0x40020DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool fadeWhenNotInView;

	[Token(Token = "0x40020DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 fordward;

	[Token(Token = "0x40020DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 normalizedDirection;

	[Token(Token = "0x40020DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float dotProdut;

	[Token(Token = "0x6001559")]
	[Address(RVA = "0xD56398", Offset = "0xD56398", VA = "0xD56398")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0xD563D0", Offset = "0xD563D0", VA = "0xD563D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0xD56640", Offset = "0xD56640", VA = "0xD56640")]
	public void HideElement()
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0xD56660", Offset = "0xD56660", VA = "0xD56660")]
	public void ShowElement()
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0xD56604", Offset = "0xD56604", VA = "0xD56604")]
	public void FadeOutElement()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0xD565C8", Offset = "0xD565C8", VA = "0xD565C8")]
	public void FadeInElement()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0xD56680", Offset = "0xD56680", VA = "0xD56680")]
	[IteratorStateMachine(typeof(<FadeOut>d__15))]
	private IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0xD566E8", Offset = "0xD566E8", VA = "0xD566E8")]
	[IteratorStateMachine(typeof(<FadeIn>d__16))]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0xD567A0", Offset = "0xD567A0", VA = "0xD567A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0xD567A8", Offset = "0xD567A8", VA = "0xD567A8")]
	public VrInGameUIStyle()
	{
	}
}
[Token(Token = "0x2000343")]
public class GunUiManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40020E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform headsetTransform;

	[Token(Token = "0x40020E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 angleDir;

	[Token(Token = "0x40020EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leftPosition;

	[Token(Token = "0x40020EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rigthPosition;

	[Token(Token = "0x40020EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isLeft;

	[Token(Token = "0x40020ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform t;

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xD569F4", Offset = "0xD569F4", VA = "0xD569F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xD56A00", Offset = "0xD56A00", VA = "0xD56A00")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xD56D0C", Offset = "0xD56D0C", VA = "0xD56D0C")]
	private float AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
	{
		return default(float);
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xD56D6C", Offset = "0xD56D6C", VA = "0xD56D6C")]
	public GunUiManager()
	{
	}
}
[Token(Token = "0x2000344")]
public class LaserPewview : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40020EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer line;

	[Token(Token = "0x40020EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startPos;

	[Token(Token = "0x40020F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endPos;

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xD56D74", Offset = "0xD56D74", VA = "0xD56D74")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xD56DDC", Offset = "0xD56DDC", VA = "0xD56DDC")]
	public LaserPewview()
	{
	}
}
[Token(Token = "0x2000345")]
public class UiLinkerAdditionalActions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000346")]
	[CompilerGenerated]
	private sealed class <DelayMiddleGroundReposition>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UiLinkerAdditionalActions <>4__this;

		[Token(Token = "0x170002B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xD56F5C", Offset = "0xD56F5C", VA = "0xD56F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0xD56FA4", Offset = "0xD56FA4", VA = "0xD56FA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xD56E6C", Offset = "0xD56E6C", VA = "0xD56E6C")]
		[DebuggerHidden]
		public <DelayMiddleGroundReposition>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xD56E9C", Offset = "0xD56E9C", VA = "0xD56E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xD56EA0", Offset = "0xD56EA0", VA = "0xD56EA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xD56F64", Offset = "0xD56F64", VA = "0xD56F64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40020F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrInGameUIManager uiManager;

	[Token(Token = "0x40020F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayActionTime;

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xD56DE4", Offset = "0xD56DE4", VA = "0xD56DE4")]
	public void DelayReposition()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xD56E04", Offset = "0xD56E04", VA = "0xD56E04")]
	[IteratorStateMachine(typeof(<DelayMiddleGroundReposition>d__3))]
	private IEnumerator DelayMiddleGroundReposition()
	{
		return null;
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xD56E94", Offset = "0xD56E94", VA = "0xD56E94")]
	public UiLinkerAdditionalActions()
	{
	}
}
[Token(Token = "0x2000347")]
public class VrInGameLinker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40020F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject startPnl;

	[Token(Token = "0x40020F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup startPnlCanvas;

	[Token(Token = "0x40020F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelManager levelManager;

	[Token(Token = "0x40020F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrInGameUIManager vrUiManager;

	[Token(Token = "0x40020FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTransform;

	[Token(Token = "0x600157E")]
	[Address(RVA = "0xD56FAC", Offset = "0xD56FAC", VA = "0xD56FAC")]
	public void LinkLevelManagerForVr(LevelManager levelManager)
	{
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0xD57118", Offset = "0xD57118", VA = "0xD57118")]
	private void RepositionPanel(GameObject pnl)
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0xD572B0", Offset = "0xD572B0", VA = "0xD572B0")]
	public VrInGameLinker()
	{
	}
}
[Token(Token = "0x2000348")]
public class CustomizationModelsManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000349")]
	private struct SpawnedItem
	{
		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int itemId;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject gameObject;

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xD579BC", Offset = "0xD579BC", VA = "0xD579BC")]
		public SpawnedItem(int itemId, GameObject gameObject)
		{
		}
	}

	[Token(Token = "0x200034A")]
	private struct SpawnedModSkin
	{
		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int itemId;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ModSkins modSkins;

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xD579C8", Offset = "0xD579C8", VA = "0xD579C8")]
		public SpawnedModSkin(int itemId, ModSkins modSkins)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200034B")]
	public class SpawnPoints
	{
		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform primaryWeaponHolder;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform secondaryWeaponHolder;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform attachmentHolder;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform scopeHolder;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform primaryGrenadeHolder;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform secondaryGrenadeHolder;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform primaryMeleeHolder;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform secondaryMeleeHolder;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform tacticalGearHolder;

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xD59064", Offset = "0xD59064", VA = "0xD59064")]
		public SpawnPoints()
		{
		}
	}

	[Token(Token = "0x40020FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ps4Models;

	[Token(Token = "0x40020FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject HandObject;

	[Token(Token = "0x40020FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("Spawn Points")]
	private Transform m_ModelHandHolder;

	[Token(Token = "0x40020FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_AttachmentlHandHolder;

	[Token(Token = "0x40020FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Header("SO Dependencies")]
	private WeaponList m_Weapons;

	[Token(Token = "0x4002100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LoadoutPrefabList m_WeaponPrefabs;

	[Token(Token = "0x4002101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LoadoutPrefabList m_AttachmentPrefabs;

	[Token(Token = "0x4002102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LoadoutPrefabList m_ScopePrefabs;

	[Token(Token = "0x4002103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LoadoutPrefabList m_GrenadePrefabs;

	[Token(Token = "0x4002104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TacticalGearList m_TacticalGear;

	[Token(Token = "0x4002105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[Space]
	private LoadoutPrefabList m_WeaponHandPreviews;

	[Token(Token = "0x4002106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private LoadoutPrefabList m_AttachmentHandPreviews;

	[Token(Token = "0x4002107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private LoadoutPrefabList m_ScopeHandPreviews;

	[Token(Token = "0x4002108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private LoadoutPrefabList m_GrenadeHandPreviews;

	[Token(Token = "0x4002109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SpawnPoints m_SpawnPoints;

	[Token(Token = "0x400210A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<SpawnedItem> m_SpawnedWeapons;

	[Token(Token = "0x400210B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SpawnedItem> m_SpawnedAttachmentsDisplay;

	[Token(Token = "0x400210C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<SpawnedItem> m_SpawnedScopes;

	[Token(Token = "0x400210D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<SpawnedItem> m_SpawnedPrimaryGrenades;

	[Token(Token = "0x400210E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<SpawnedItem> m_SpawnedSecondaryGrenades;

	[Token(Token = "0x400210F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<SpawnedItem> m_SpawnedTacticalGear;

	[Token(Token = "0x4002110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<SpawnedItem> m_SpawnedWeaponHandPreviews;

	[Token(Token = "0x4002111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<SpawnedItem> m_SpawnedAttachmentHandPreviews;

	[Token(Token = "0x4002112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<SpawnedItem> m_SpawnedScopeHandPreviews;

	[Token(Token = "0x4002113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<SpawnedItem> m_SpawnedGrenadeHandPreviews;

	[Token(Token = "0x4002114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<SpawnedItem> m_SpawnedTacticalGearHandPreviews;

	[Token(Token = "0x4002115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<SpawnedModSkin> m_ModSkinsDisplay;

	[Token(Token = "0x4002116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<SpawnedModSkin> m_ModSkinsPreview;

	[Token(Token = "0x6001581")]
	[Address(RVA = "0xD572B8", Offset = "0xD572B8", VA = "0xD572B8")]
	public void Start()
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0xD572BC", Offset = "0xD572BC", VA = "0xD572BC")]
	private void PreSpawnAll()
	{
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0xD579D4", Offset = "0xD579D4", VA = "0xD579D4")]
	private void SpawnItemGroup(ref List<SpawnedItem> list, LoadoutPrefabList source, Transform parent)
	{
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0xD57BD0", Offset = "0xD57BD0", VA = "0xD57BD0")]
	private void SpawnItemGroup(ref List<SpawnedItem> list, TacticalGearList source, Transform parent)
	{
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0xD57ED0", Offset = "0xD57ED0", VA = "0xD57ED0")]
	public void SetSpawnPoints(SpawnPoints _spawnPoints)
	{
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0xD57ED8", Offset = "0xD57ED8", VA = "0xD57ED8")]
	public void ShowCurrentLoadOut(Loadout loadout)
	{
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0xD581EC", Offset = "0xD581EC", VA = "0xD581EC")]
	public void HideAllGuns()
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0xD5834C", Offset = "0xD5834C", VA = "0xD5834C")]
	public void ShowPrimaryGun(int primaryIndex, int primarySkin)
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0xD587A0", Offset = "0xD587A0", VA = "0xD587A0")]
	public void ShowSecondaryGun(int secondaryIndex, int secondarySkin)
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0xD58038", Offset = "0xD58038", VA = "0xD58038")]
	public void ShowGuns(int primaryIndex, int secondaryIndex, int primarySkin, int secondarySkin)
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0xD5880C", Offset = "0xD5880C", VA = "0xD5880C")]
	public void ShowMelee(int meleeId, int skinId)
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0xD58104", Offset = "0xD58104", VA = "0xD58104")]
	public void ShowScope(int scopeIndex)
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0xD5812C", Offset = "0xD5812C", VA = "0xD5812C")]
	public void ShowAttachment(int attachmentIndex)
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xD58154", Offset = "0xD58154", VA = "0xD58154")]
	public void ShowGranadeOne(int granadeIndex)
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0xD5817C", Offset = "0xD5817C", VA = "0xD5817C")]
	public void ShowGranadeTwo(int granadeIndex, PerkID perk1, PerkID perk2)
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0xD581C4", Offset = "0xD581C4", VA = "0xD581C4")]
	public void ShowTacticalGear(int _tacticalIndex)
	{
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0xD58A48", Offset = "0xD58A48", VA = "0xD58A48")]
	public void ShowPs4Models()
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0xD58A4C", Offset = "0xD58A4C", VA = "0xD58A4C")]
	public void HidePs4Models()
	{
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0xD58A50", Offset = "0xD58A50", VA = "0xD58A50")]
	[Obsolete]
	public void ResetSkinsForSelection()
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0xD5513C", Offset = "0xD5513C", VA = "0xD5513C")]
	public void SetSkinForHand(int weaponIndex, int skinIndex)
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0xD55100", Offset = "0xD55100", VA = "0xD55100")]
	public void ShowGunInHand(int weaponIndex)
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0xD552C4", Offset = "0xD552C4", VA = "0xD552C4")]
	public void ShowScopeInHand(int scopeIndex)
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0xD55288", Offset = "0xD55288", VA = "0xD55288")]
	public void ShowAttachmentInHand(int attachmentIndex)
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0xD55300", Offset = "0xD55300", VA = "0xD55300")]
	public void ShowGranadeInHand(int granadeIndex)
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0xD5533C", Offset = "0xD5533C", VA = "0xD5533C")]
	public void ShowTacticalGearInHand(int _tacticalIndex)
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0xD54B50", Offset = "0xD54B50", VA = "0xD54B50")]
	public void HideAllGunsInHand()
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xD54E28", Offset = "0xD54E28", VA = "0xD54E28")]
	public void HideAllGranadesInHand()
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0xD54F94", Offset = "0xD54F94", VA = "0xD54F94")]
	public void HideAllTacticalGearInHand()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0xD54CBC", Offset = "0xD54CBC", VA = "0xD54CBC")]
	public void HideAllScopesInHand()
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0xD549E4", Offset = "0xD549E4", VA = "0xD549E4")]
	public void HideAllAttachmentsInHand()
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0xD57FBC", Offset = "0xD57FBC", VA = "0xD57FBC")]
	public void HideAll()
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0xD5467C", Offset = "0xD5467C", VA = "0xD5467C")]
	public void HideHand()
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0xD58A54", Offset = "0xD58A54", VA = "0xD58A54")]
	public void HideCurrent()
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0xD588C8", Offset = "0xD588C8", VA = "0xD588C8")]
	private void ShowItemOnly(List<SpawnedItem> list, int id, Transform parent, bool isSecondary = false)
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0xD585A4", Offset = "0xD585A4", VA = "0xD585A4")]
	private void ShowItem(List<SpawnedItem> list, int id, Transform parent, bool isSecondary = false)
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xD581F4", Offset = "0xD581F4", VA = "0xD581F4")]
	private void HideAllFrom(List<SpawnedItem> list)
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xD58E70", Offset = "0xD58E70", VA = "0xD58E70")]
	private SpawnedItem GetItemById(List<SpawnedItem> list, int id, bool isSecondary = false)
	{
		return default(SpawnedItem);
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0xD583B8", Offset = "0xD583B8", VA = "0xD583B8")]
	private SpawnedModSkin GetItemById(List<SpawnedModSkin> list, int id, bool isSecondary = false)
	{
		return default(SpawnedModSkin);
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0xD5905C", Offset = "0xD5905C", VA = "0xD5905C")]
	public CustomizationModelsManager()
	{
	}
}
[Token(Token = "0x200034C")]
public class VrChatWindow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform elementsParent;

	[Token(Token = "0x4002125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ChatElement currentChatelement;

	[Token(Token = "0x4002126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string text;

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0xD5906C", Offset = "0xD5906C", VA = "0xD5906C")]
	public void Start()
	{
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0xD59090", Offset = "0xD59090", VA = "0xD59090")]
	public void SetChatElement(int id, string message, int color, string name)
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0xD59200", Offset = "0xD59200", VA = "0xD59200")]
	public void SetSuicideElement(int id, string message, int color, short w, string name)
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0xD592BC", Offset = "0xD592BC", VA = "0xD592BC")]
	public void SetKillElement(int killedID, int killerID, short w, bool headShot)
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0xD59144", Offset = "0xD59144", VA = "0xD59144")]
	public void GetChatElement()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0xD5932C", Offset = "0xD5932C", VA = "0xD5932C")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0xD59608", Offset = "0xD59608", VA = "0xD59608")]
	public VrChatWindow()
	{
	}
}
[Token(Token = "0x200034D")]
public class VrMainMenu : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200034E")]
	public struct GameModeUI
	{
		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameMode m_GameMode;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Space]
		public CanvasGroup m_CanvasGroup;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject m_Lock;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button m_Button;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image m_ButtonImg;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameModeButtonStyle m_ButtonStyle;

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xD5A62C", Offset = "0xD5A62C", VA = "0xD5A62C")]
		public void SetAccessible(bool value)
		{
		}
	}

	[Token(Token = "0x200034F")]
	[CompilerGenerated]
	private sealed class <RequestGameModeAccess>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrMainMenu <>4__this;

		[Token(Token = "0x170002B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xD5AEA8", Offset = "0xD5AEA8", VA = "0xD5AEA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xD5AEF0", Offset = "0xD5AEF0", VA = "0xD5AEF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xD5A7F0", Offset = "0xD5A7F0", VA = "0xD5A7F0")]
		[DebuggerHidden]
		public <RequestGameModeAccess>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xD5AD88", Offset = "0xD5AD88", VA = "0xD5AD88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xD5AD8C", Offset = "0xD5AD8C", VA = "0xD5AD8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xD5AEB0", Offset = "0xD5AEB0", VA = "0xD5AEB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000350")]
	[CompilerGenerated]
	private sealed class <RequstGameModeAccessDelayed>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrMainMenu <>4__this;

		[Token(Token = "0x170002B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xD5AFF0", Offset = "0xD5AFF0", VA = "0xD5AFF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0xD5B038", Offset = "0xD5B038", VA = "0xD5B038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xD5A880", Offset = "0xD5A880", VA = "0xD5A880")]
		[DebuggerHidden]
		public <RequstGameModeAccessDelayed>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xD5AEF8", Offset = "0xD5AEF8", VA = "0xD5AEF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xD5AEFC", Offset = "0xD5AEFC", VA = "0xD5AEFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xD5AFF8", Offset = "0xD5AFF8", VA = "0xD5AFF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000351")]
	[CompilerGenerated]
	private sealed class <ShowLoadoutsCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrMainMenu <>4__this;

		[Token(Token = "0x170002B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xD5B108", Offset = "0xD5B108", VA = "0xD5B108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xD5B150", Offset = "0xD5B150", VA = "0xD5B150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xD5ABF8", Offset = "0xD5ABF8", VA = "0xD5ABF8")]
		[DebuggerHidden]
		public <ShowLoadoutsCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xD5B040", Offset = "0xD5B040", VA = "0xD5B040", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xD5B044", Offset = "0xD5B044", VA = "0xD5B044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xD5B110", Offset = "0xD5B110", VA = "0xD5B110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000352")]
	[CompilerGenerated]
	private sealed class <HideLoadoutsCoroutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrMainMenu <>4__this;

		[Token(Token = "0x170002BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xD5B25C", Offset = "0xD5B25C", VA = "0xD5B25C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xD5B2A4", Offset = "0xD5B2A4", VA = "0xD5B2A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xD5AC20", Offset = "0xD5AC20", VA = "0xD5AC20")]
		[DebuggerHidden]
		public <HideLoadoutsCoroutine>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xD5B158", Offset = "0xD5B158", VA = "0xD5B158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xD5B15C", Offset = "0xD5B15C", VA = "0xD5B15C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xD5B264", Offset = "0xD5B264", VA = "0xD5B264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000353")]
	[CompilerGenerated]
	private sealed class <HideAndShow>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isLoadout;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VrMainMenu <>4__this;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CanvasGroup canvasToShow;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <canvasOpacity>5__2;

		[Token(Token = "0x170002BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xD5B5A8", Offset = "0xD5B5A8", VA = "0xD5B5A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xD5B5F0", Offset = "0xD5B5F0", VA = "0xD5B5F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xD5AC48", Offset = "0xD5AC48", VA = "0xD5AC48")]
		[DebuggerHidden]
		public <HideAndShow>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xD5B2AC", Offset = "0xD5B2AC", VA = "0xD5B2AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xD5B2B0", Offset = "0xD5B2B0", VA = "0xD5B2B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xD5B5B0", Offset = "0xD5B5B0", VA = "0xD5B5B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartupManager startupManager;

	[Token(Token = "0x4002128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrLoadOuts loadOuts;

	[Token(Token = "0x4002129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerLocalData localData;

	[Token(Token = "0x400212A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomizationModelsManager customizationModels;

	[Token(Token = "0x400212B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fadeTime;

	[Token(Token = "0x400212C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image lvlImage;

	[Token(Token = "0x400212D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image azureConectionOk;

	[Token(Token = "0x400212E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image m_PhotonPunConnectionOk;

	[Token(Token = "0x400212F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image m_PhotonChatConnectionOk;

	[Token(Token = "0x4002130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image m_PhotonVoiceConnectionOk;

	[Token(Token = "0x4002131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider progressSlider;

	[Token(Token = "0x4002132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite[] lvlSprites;

	[Token(Token = "0x4002133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VerticalLayoutGroup menuVerticalLayout;

	[Token(Token = "0x4002134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GridLayoutGroup settingsGridLayoutGroup;

	[Token(Token = "0x4002135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VrSettings vrSettings;

	[Token(Token = "0x4002136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ButtonStyle vrSettingsBtn;

	[Token(Token = "0x4002137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SimpleUIPanel mainPanelDisplay;

	[Token(Token = "0x4002138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform playerRigPos;

	[Token(Token = "0x4002139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform vrRigPos;

	[Token(Token = "0x400213A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform centerEyeAnchor;

	[Token(Token = "0x400213B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform mainMenuPlayerPos;

	[Token(Token = "0x400213C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform loadoutsPlayerPos;

	[Token(Token = "0x400213D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform ps4PlayerPos;

	[Token(Token = "0x400213E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float eyeHeigth;

	[Token(Token = "0x400213F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float hmdOffset;

	[Token(Token = "0x4002140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<MenuCharacterDisplay> menuCharacters;

	[Token(Token = "0x4002141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Header("Loadout Transition")]
	[Space]
	public float fadeLoadoutTime;

	[Token(Token = "0x4002142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float waitForLoadoutTime;

	[Token(Token = "0x4002143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject welcomePnl;

	[Token(Token = "0x4002144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject selectGameModePnl;

	[Token(Token = "0x4002145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject settingsPnl;

	[Token(Token = "0x4002146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject gameStorePnl;

	[Token(Token = "0x4002147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject loadOutsPnl;

	[Token(Token = "0x4002148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject leftSidePnl;

	[Token(Token = "0x4002149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject rightSidePnl;

	[Token(Token = "0x400214A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform characterTransform;

	[Token(Token = "0x400214B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform mainMenuPos;

	[Token(Token = "0x400214C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform loadoutPos;

	[Token(Token = "0x400214D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Button playBtn;

	[Token(Token = "0x400214E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool init;

	[Token(Token = "0x400214F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public ButtonStyle loadOutBtnStyle;

	[Token(Token = "0x4002150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public ButtonStyle playBtnStyle;

	[Token(Token = "0x4002151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private WaitForSeconds waitFadeLoadout;

	[Token(Token = "0x4002152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public CanvasGroup[] menuPnls;

	[Token(Token = "0x4002153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float baseHeigh;

	[Token(Token = "0x4002154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float movementArea;

	[Token(Token = "0x4002155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float distancetoGround;

	[Token(Token = "0x4002156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	[Header("Game modes panels")]
	[Space]
	public GameObject gameModesParent;

	[Token(Token = "0x4002157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public SimpleUIPanel GameModesUIPanel;

	[Token(Token = "0x4002158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject[] m_MapSelection;

	[Token(Token = "0x4002159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	[Header("New GameMode Panels")]
	private GameModeUI[] m_gameModeUIs;

	[Token(Token = "0x400215A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int gamemodeAccessRequestCount;

	[Token(Token = "0x400215B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Color ok;

	[Token(Token = "0x400215C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Color notOk;

	[Token(Token = "0x400215D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private WaitForSeconds waitRequstGameMode;

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0xD59610", Offset = "0xD59610", VA = "0xD59610")]
	public void CloseMapSelection()
	{
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0xD596F4", Offset = "0xD596F4", VA = "0xD596F4")]
	public void SetLocalData(PlayerLocalData playerLocalData)
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0xD59778", Offset = "0xD59778", VA = "0xD59778")]
	public void RefreshConnectionStatus()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0xD599F4", Offset = "0xD599F4", VA = "0xD599F4")]
	public void OnExitGame()
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0xD599FC", Offset = "0xD599FC", VA = "0xD599FC")]
	public void ShowPlayerStats(string name, int lvl, float progress, int coins, string expProgress)
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0xD59A00", Offset = "0xD59A00", VA = "0xD59A00")]
	public void ShowCanvasByIndex(int index)
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xD59FC0", Offset = "0xD59FC0", VA = "0xD59FC0")]
	public void OpenLoadout()
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xD5A048", Offset = "0xD5A048", VA = "0xD5A048")]
	public void CloseLoadouts()
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0xD5A0D0", Offset = "0xD5A0D0", VA = "0xD5A0D0")]
	public void OpenLoadoutInstant()
	{
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0xD5A228", Offset = "0xD5A228", VA = "0xD5A228")]
	public void CloseLoadoutsInstant()
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0xD53204", Offset = "0xD53204", VA = "0xD53204")]
	public void RefreshSettingsGroup()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xD531CC", Offset = "0xD531CC", VA = "0xD531CC")]
	public void RefreshVerticalGroup()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0xD5A3E8", Offset = "0xD5A3E8", VA = "0xD5A3E8")]
	public void AzureDatabaseCallback(AzureRequestTypes type, string result, int requId)
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0xD5A3FC", Offset = "0xD5A3FC", VA = "0xD5A3FC")]
	public void GameModeAccessResult(string result)
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0xD5A6D8", Offset = "0xD5A6D8", VA = "0xD5A6D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0xD5A788", Offset = "0xD5A788", VA = "0xD5A788")]
	[IteratorStateMachine(typeof(<RequestGameModeAccess>d__70))]
	private IEnumerator RequestGameModeAccess()
	{
		return null;
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0xD5A818", Offset = "0xD5A818", VA = "0xD5A818")]
	[IteratorStateMachine(typeof(<RequstGameModeAccessDelayed>d__72))]
	private IEnumerator RequstGameModeAccessDelayed()
	{
		return null;
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0xD5A8A8", Offset = "0xD5A8A8", VA = "0xD5A8A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0xD5AB14", Offset = "0xD5AB14", VA = "0xD5AB14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0xD5AB9C", Offset = "0xD5AB9C", VA = "0xD5AB9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0xD59FE0", Offset = "0xD59FE0", VA = "0xD59FE0")]
	[IteratorStateMachine(typeof(<ShowLoadoutsCoroutine>d__76))]
	private IEnumerator ShowLoadoutsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0xD5A068", Offset = "0xD5A068", VA = "0xD5A068")]
	[IteratorStateMachine(typeof(<HideLoadoutsCoroutine>d__77))]
	private IEnumerator HideLoadoutsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xD5A9D0", Offset = "0xD5A9D0", VA = "0xD5A9D0")]
	private void CalculateHMDHeigh()
	{
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0xD5AA98", Offset = "0xD5AA98", VA = "0xD5AA98")]
	private void CalculateHMDRotation()
	{
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0xD59B30", Offset = "0xD59B30", VA = "0xD59B30")]
	[IteratorStateMachine(typeof(<HideAndShow>d__80))]
	private IEnumerator HideAndShow(CanvasGroup canvasToShow, bool isLoadout = false)
	{
		return null;
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xD5AC70", Offset = "0xD5AC70", VA = "0xD5AC70")]
	public VrMainMenu()
	{
	}
}
[Token(Token = "0x2000354")]
public class QuickLoadoutChange : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] btns;

	[Token(Token = "0x4002177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color highlightClr;

	[Token(Token = "0x4002178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color normalClr;

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0xD5B5F8", Offset = "0xD5B5F8", VA = "0xD5B5F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0xD5B628", Offset = "0xD5B628", VA = "0xD5B628")]
	public void HighlightCurrentLoadOut(int index)
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0xD5B6B8", Offset = "0xD5B6B8", VA = "0xD5B6B8")]
	public void SelectCurrentLoadout(int index)
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0xD5B85C", Offset = "0xD5B85C", VA = "0xD5B85C")]
	public QuickLoadoutChange()
	{
	}
}
[Token(Token = "0x2000355")]
public class UiCameraFollow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform canvas;

	[Token(Token = "0x400217A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400217B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothSpeed;

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0xD5B864", Offset = "0xD5B864", VA = "0xD5B864")]
	private void Start()
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0xD5B8F0", Offset = "0xD5B8F0", VA = "0xD5B8F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0xD5BA84", Offset = "0xD5BA84", VA = "0xD5BA84")]
	public UiCameraFollow()
	{
	}
}
[Token(Token = "0x2000356")]
public class UiGunLink : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400217C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftHandSync;

	[Token(Token = "0x400217D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rigthHandSync;

	[Token(Token = "0x400217E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftLocalIKTarget;

	[Token(Token = "0x400217F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rigthLocalIKTarget;

	[Token(Token = "0x4002180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform shotOrigin;

	[Token(Token = "0x4002181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool initDone;

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0xD5BA94", Offset = "0xD5BA94", VA = "0xD5BA94")]
	public void InitializeIkTargets(PlayerData playerToUpdate)
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0xD5BB5C", Offset = "0xD5BB5C", VA = "0xD5BB5C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0xD5BC18", Offset = "0xD5BC18", VA = "0xD5BC18")]
	public UiGunLink()
	{
	}
}
[Token(Token = "0x2000357")]
public class UIIkHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000358")]
	[CompilerGenerated]
	private sealed class <FallHandTarget>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIIkHandler <>4__this;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <interpolate>5__2;

		[Token(Token = "0x170002BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xD5C300", Offset = "0xD5C300", VA = "0xD5C300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xD5C348", Offset = "0xD5C348", VA = "0xD5C348", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xD5BF80", Offset = "0xD5BF80", VA = "0xD5BF80")]
		[DebuggerHidden]
		public <FallHandTarget>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xD5BFE4", Offset = "0xD5BFE4", VA = "0xD5BFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xD5BFE8", Offset = "0xD5BFE8", VA = "0xD5BFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xD5C308", Offset = "0xD5C308", VA = "0xD5C308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000359")]
	[CompilerGenerated]
	private sealed class <RecoverHandTarget>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIIkHandler <>4__this;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <interpolate>5__2;

		[Token(Token = "0x170002C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xD5C668", Offset = "0xD5C668", VA = "0xD5C668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xD5C6B0", Offset = "0xD5C6B0", VA = "0xD5C6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xD5BFA8", Offset = "0xD5BFA8", VA = "0xD5BFA8")]
		[DebuggerHidden]
		public <RecoverHandTarget>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xD5C350", Offset = "0xD5C350", VA = "0xD5C350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xD5C354", Offset = "0xD5C354", VA = "0xD5C354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xD5C670", Offset = "0xD5C670", VA = "0xD5C670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmIK leftArm;

	[Token(Token = "0x4002183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArmIK rigthArm;

	[Token(Token = "0x4002184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LookAtIK lookAt;

	[Token(Token = "0x4002185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform headset;

	[Token(Token = "0x4002186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform gunPos;

	[Token(Token = "0x4002187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ikHeadset;

	[Token(Token = "0x4002188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform ikGun;

	[Token(Token = "0x4002189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform leftHandSyncPoint;

	[Token(Token = "0x400218A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rightHandSyncPoint;

	[Token(Token = "0x400218B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ArmIK leftArmIk;

	[Token(Token = "0x400218C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool changingWeapons;

	[Token(Token = "0x400218D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform fallTargetLeftHand;

	[Token(Token = "0x400218E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform fallTransitionTarget;

	[Token(Token = "0x400218F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float lerpFactor;

	[Token(Token = "0x4002190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxLeftArmDistance;

	[Token(Token = "0x4002191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform gunTransform;

	[Token(Token = "0x4002192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform headTransform;

	[Token(Token = "0x4002193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool hasFallen;

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0xD5BC20", Offset = "0xD5BC20", VA = "0xD5BC20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0xD5BEB0", Offset = "0xD5BEB0", VA = "0xD5BEB0")]
	[IteratorStateMachine(typeof(<FallHandTarget>d__19))]
	private IEnumerator FallHandTarget()
	{
		return null;
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0xD5BF18", Offset = "0xD5BF18", VA = "0xD5BF18")]
	[IteratorStateMachine(typeof(<RecoverHandTarget>d__20))]
	private IEnumerator RecoverHandTarget()
	{
		return null;
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0xD5BFD0", Offset = "0xD5BFD0", VA = "0xD5BFD0")]
	public UIIkHandler()
	{
	}
}
[Token(Token = "0x200035A")]
public class VrMainMenuLink : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400219C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject onlineMainPnl;

	[Token(Token = "0x400219D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject connectingPnl;

	[Token(Token = "0x400219E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject joiningPnl;

	[Token(Token = "0x400219F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject creatingPnl;

	[Token(Token = "0x40021A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject searchingPnl;

	[Token(Token = "0x40021A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text playerName;

	[Token(Token = "0x40021A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StartupManager startManager;

	[Token(Token = "0x40021A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TabsManager tabsManager;

	[Token(Token = "0x40021A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrMainMenu mainMenu;

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xD5C6B8", Offset = "0xD5C6B8", VA = "0xD5C6B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xD5C6BC", Offset = "0xD5C6BC", VA = "0xD5C6BC")]
	private void SetUIReferences()
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xD5C71C", Offset = "0xD5C71C", VA = "0xD5C71C")]
	[Obsolete("I don't think this is being used, even by UI events")]
	public void TurnBots(bool value)
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xD5C74C", Offset = "0xD5C74C", VA = "0xD5C74C")]
	public VrMainMenuLink()
	{
	}
}
[Token(Token = "0x200035B")]
public class VrMenuSelectingScript : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40021A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] highlightedObjects;

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xD5C754", Offset = "0xD5C754", VA = "0xD5C754")]
	public void Start()
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xD5552C", Offset = "0xD5552C", VA = "0xD5552C")]
	public void OnHighligthGameMode(int value)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xD555F0", Offset = "0xD555F0", VA = "0xD555F0")]
	public void HideAll()
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xD5C78C", Offset = "0xD5C78C", VA = "0xD5C78C")]
	public VrMenuSelectingScript()
	{
	}
}
[Token(Token = "0x200035C")]
public class VrSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40021A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inGame;

	[Token(Token = "0x40021A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrPlayerController playerController;

	[Token(Token = "0x40021A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrInGameUIManager gameUIManager;

	[Token(Token = "0x40021A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomizationModelsManager modelsManager;

	[Token(Token = "0x40021AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LanguageTextDatabase languageDb;

	[Token(Token = "0x40021AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LanguageText muteLT;

	[Token(Token = "0x40021AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LanguageText unmuteLT;

	[Token(Token = "0x40021AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_SelectionWrap;

	[Token(Token = "0x40021AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool smoothTurning;

	[Token(Token = "0x40021AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool vAir;

	[Token(Token = "0x40021B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool vSprint;

	[Token(Token = "0x40021B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool lookDirection;

	[Token(Token = "0x40021B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool lookAimingMoves;

	[Token(Token = "0x40021B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool vTurning;

	[Token(Token = "0x40021B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool gunOffset;

	[Token(Token = "0x40021B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool leftHanded;

	[Token(Token = "0x40021B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool scoreAlways;

	[Token(Token = "0x40021B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool showHitMarkers;

	[Token(Token = "0x40021B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool showPoints;

	[Token(Token = "0x40021B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool offsetMainMenu;

	[Token(Token = "0x40021BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool showMinimap;

	[Token(Token = "0x40021BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool turnOffUI;

	[Token(Token = "0x40021BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool showAmmoUI;

	[Token(Token = "0x40021BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool showKillfeed;

	[Token(Token = "0x40021BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool showMatchTimer;

	[Token(Token = "0x40021BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool sprintPress;

	[Token(Token = "0x40021C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool leftEyeDominant;

	[Token(Token = "0x40021C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool leftInvertBtns;

	[Token(Token = "0x40021C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool leftInvertJoysticks;

	[Token(Token = "0x40021C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool staticRifle;

	[Token(Token = "0x40021C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool staticDualWield;

	[Token(Token = "0x40021C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool disableJoystickRotation;

	[Token(Token = "0x40021C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool m_HoldGrabGun;

	[Token(Token = "0x40021C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool m_RumbleForceTubeOnDamage;

	[Token(Token = "0x40021C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool m_UseForceTubeRifle;

	[Token(Token = "0x40021C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	public bool m_InvertForceTubePistols;

	[Token(Token = "0x40021CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool m_RecordingFpStrongEye;

	[Token(Token = "0x40021CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int VolumeSFX;

	[Token(Token = "0x40021CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VolumeMusic;

	[Token(Token = "0x40021CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int VolumeVoice;

	[Token(Token = "0x40021CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int VolumeMaster;

	[Token(Token = "0x40021CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int smoothTurningSpeed;

	[Token(Token = "0x40021D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int snapTurningAngle;

	[Token(Token = "0x40021D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int VolumeAmbience;

	[Token(Token = "0x40021D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Toggle toggleSmoothTurning;

	[Token(Token = "0x40021D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Toggle toggleVAir;

	[Token(Token = "0x40021D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Toggle toggleVSprint;

	[Token(Token = "0x40021D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Toggle toggleLookDirection;

	[Token(Token = "0x40021D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Toggle toggleLookAimingMoves;

	[Token(Token = "0x40021D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Toggle toggleGunOffset;

	[Token(Token = "0x40021D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Toggle toggleLeftHanded;

	[Token(Token = "0x40021D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Toggle toggleVTurning;

	[Token(Token = "0x40021DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Toggle toggleScoreAlwaysShow;

	[Token(Token = "0x40021DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Toggle toggleShowHitmarkers;

	[Token(Token = "0x40021DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Toggle toggleShowPoints;

	[Token(Token = "0x40021DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Toggle toggleOffsetMainMenu;

	[Token(Token = "0x40021DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Toggle toggleShowMinimap;

	[Token(Token = "0x40021DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Toggle toggleTurnOffAllUI;

	[Token(Token = "0x40021E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Toggle toggleShowAmmoUI;

	[Token(Token = "0x40021E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Toggle toggleShowKillfeed;

	[Token(Token = "0x40021E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Toggle toggleShowMatchTimer;

	[Token(Token = "0x40021E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Toggle toggleSprint;

	[Token(Token = "0x40021E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Toggle toggleLeftEyeDominant;

	[Token(Token = "0x40021E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Toggle toggleLeftInvertBtns;

	[Token(Token = "0x40021E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Toggle toggleLeftInvertJoysticks;

	[Token(Token = "0x40021E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Toggle toggleVoiceChatTV;

	[Token(Token = "0x40021E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Toggle toggleStaticRifle;

	[Token(Token = "0x40021E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Toggle toggleStaticDualWield;

	[Token(Token = "0x40021EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Toggle toggleDisableJoystickRotation;

	[Token(Token = "0x40021EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Toggle m_ToggleButtonUndockMagazine;

	[Token(Token = "0x40021EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Toggle m_ToggleHoldGrabGun;

	[Token(Token = "0x40021ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Toggle m_ToggleRumbleForceTubeOnDamage;

	[Token(Token = "0x40021EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Toggle m_ToggleForceTubeRifle;

	[Token(Token = "0x40021EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Toggle m_ToggleForceTubePistols;

	[Token(Token = "0x40021F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Toggle m_ToggleRecordingFpStrongEye;

	[Token(Token = "0x40021F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Slider sliderVolumeSFX;

	[Token(Token = "0x40021F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Slider sliderVolumeMusic;

	[Token(Token = "0x40021F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Slider sliderVolumeVoice;

	[Token(Token = "0x40021F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Slider sliderVolumeMaster;

	[Token(Token = "0x40021F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Slider sliderSmoothTurning;

	[Token(Token = "0x40021F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Slider sliderSnapTurning;

	[Token(Token = "0x40021F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Slider sliderVolumeAmbience;

	[Token(Token = "0x40021F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public TMP_Text cSFXLbl;

	[Token(Token = "0x40021F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public TMP_Text cMusicLbl;

	[Token(Token = "0x40021FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public TMP_Text cVoiceLbl;

	[Token(Token = "0x40021FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public TMP_Text cMasterLbl;

	[Token(Token = "0x40021FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public TMP_Text cSmoothTurning;

	[Token(Token = "0x40021FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public TMP_Text cSnapTurning;

	[Token(Token = "0x40021FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public TMP_Text cAmbienceLbl;

	[Token(Token = "0x40021FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Button applyAudioBtn;

	[Token(Token = "0x4002200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Button resetAudioBtn;

	[Token(Token = "0x4002201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject vrSettingsPnl;

	[Token(Token = "0x4002202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject audioSettingsPnl;

	[Token(Token = "0x4002203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject controlsPnl;

	[Token(Token = "0x4002204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject gameSettingsPnl;

	[Token(Token = "0x4002205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject extraPnl;

	[Token(Token = "0x4002206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject SmoothTurningSliderGo;

	[Token(Token = "0x4002207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject SnapturningSliderGo;

	[Token(Token = "0x4002208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject LeftHandedSwapJoysticksGo;

	[Token(Token = "0x4002209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject LeftHandedSwapActionBtns;

	[Token(Token = "0x400220A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject lookAimingMovesGo;

	[Token(Token = "0x400220B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject lookDirectionGo;

	[Token(Token = "0x400220C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject staticRifleOptionGo;

	[Token(Token = "0x400220D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject artificialTurnGo;

	[Token(Token = "0x400220E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject m_HoldGrabGunGo;

	[Token(Token = "0x400220F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject m_ForceTubeSettingsGo;

	[Token(Token = "0x4002210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject m_RecordingSettingsGo;

	[Token(Token = "0x4002211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject offsetSettingsBtn;

	[Token(Token = "0x4002212")]
	public const string prefSmoothTurning = "smoothTurning";

	[Token(Token = "0x4002213")]
	public const string prefVAir = "vAir";

	[Token(Token = "0x4002214")]
	public const string prefVSprint = "vSprint";

	[Token(Token = "0x4002215")]
	public const string prefLookDirection = "lookDirection";

	[Token(Token = "0x4002216")]
	public const string prefLookAimingMoves = "lookAimingMoves";

	[Token(Token = "0x4002217")]
	public const string prefGunOffset = "gunOffset";

	[Token(Token = "0x4002218")]
	public const string prefLeftHanded = "leftHanded";

	[Token(Token = "0x4002219")]
	public const string prefVTurning = "vTurning";

	[Token(Token = "0x400221A")]
	public const string prefVolumeSFX = "SFXV";

	[Token(Token = "0x400221B")]
	public const string prefVolumeAmbience = "AmbienceV";

	[Token(Token = "0x400221C")]
	public const string prefVolumeMusic = "MusicV";

	[Token(Token = "0x400221D")]
	public const string prefVolumeVoice = "VoiceV";

	[Token(Token = "0x400221E")]
	public const string prefAlwaysShowScore = "ScoreAlways";

	[Token(Token = "0x400221F")]
	public const string prefMasterVolume = "MasterV";

	[Token(Token = "0x4002220")]
	public const string prefShowHitMarkers = "ShowHitmarkers";

	[Token(Token = "0x4002221")]
	public const string prefShowPoints = "ShowPoints";

	[Token(Token = "0x4002222")]
	public const string prefOffsetMainMenu = "OffMainMenu";

	[Token(Token = "0x4002223")]
	public const string prefUseOffset = "UseOffset";

	[Token(Token = "0x4002224")]
	public const string prefShowMinimap = "ShowMinimap";

	[Token(Token = "0x4002225")]
	public const string prefTurnOffUI = "TurnOffUI";

	[Token(Token = "0x4002226")]
	public const string prefShowAmmoUI = "ShowAmmoUI";

	[Token(Token = "0x4002227")]
	public const string prefShowKillfeed = "ShowKillfeed";

	[Token(Token = "0x4002228")]
	public const string prefSmothTurningSpeed = "SmothTurningSpeed";

	[Token(Token = "0x4002229")]
	public const string prefSnapTurningAngle = "SnapTurningAngle";

	[Token(Token = "0x400222A")]
	public const string prefShowMatchTimer = "ShowMatchTimer";

	[Token(Token = "0x400222B")]
	public const string prefToggleSprint = "ToggleSprint";

	[Token(Token = "0x400222C")]
	public const string prefLeftEyeDominant = "LeftEyeDominant";

	[Token(Token = "0x400222D")]
	public const string prefLeftInvertBtns = "LeftInvertBtns";

	[Token(Token = "0x400222E")]
	public const string prefLeftInvertJoysticks = "LeftInvertJoysticks";

	[Token(Token = "0x400222F")]
	public const string prefVoiceChatTV = "VoiceChatTV";

	[Token(Token = "0x4002230")]
	public const string prefStaticRifle = "StaticRifle";

	[Token(Token = "0x4002231")]
	public const string prefStaticDualWield = "StaticdualWield";

	[Token(Token = "0x4002232")]
	public const string prefDisableJoystickRotation = "DisableJoystickRotation";

	[Token(Token = "0x4002233")]
	public const string m_prefHoldGrabGun = "HoldGrabGun";

	[Token(Token = "0x4002234")]
	public const string m_prefRumbleForceTubeOnDamage = "RumbleForceTubeOnDamage";

	[Token(Token = "0x4002235")]
	public const string m_prefUseForceTubeRifle = "UseForceTubeRifle";

	[Token(Token = "0x4002236")]
	public const string m_prefInvertForceTubePistols = "InvertForceTubePistols";

	[Token(Token = "0x4002237")]
	public const string m_prefRecordingFpStrongEye = "FpRecordingUseStrongEye";

	[Token(Token = "0x4002238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private string[] snapTurningAngleNames;

	[Token(Token = "0x4002239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[Header("Controls Pnl")]
	[Space]
	public Sprite ds4ControlScheme;

	[Token(Token = "0x400223A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Sprite moveControlScheme;

	[Token(Token = "0x400223B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Sprite aimControlScheme;

	[Token(Token = "0x400223C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[Space]
	[Header("Offset Control")]
	public TrackingControl trackingControl;

	[Token(Token = "0x400223D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Slider[] offsetSliders;

	[Token(Token = "0x400223E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public TMP_Text[] offsetLabels;

	[Token(Token = "0x400223F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject offsetPnl;

	[Token(Token = "0x4002240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject offsetTutorialPnl;

	[Token(Token = "0x4002241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public GameObject offsetSetupPnl;

	[Token(Token = "0x4002242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[Header("Leave Buttons")]
	[Space]
	public GameObject leaveAloneBtn;

	[Token(Token = "0x4002243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public GameObject leaveMatchAndParty;

	[Token(Token = "0x4002244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public GameObject leaveWithParty;

	[Token(Token = "0x4002245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public GameObject muteAllBtnGo;

	[Token(Token = "0x4002246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public TMP_Text muteAllBtnLbl;

	[Token(Token = "0x4002247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Image muteAllImg;

	[Token(Token = "0x4002248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Color32 muteAllColor;

	[Token(Token = "0x4002249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public Color32 unmuteAllColor;

	[Token(Token = "0x400224A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public TMP_Text versionText;

	[Token(Token = "0x400224B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private Platform platform;

	[Token(Token = "0x400224C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VrSettings Instance;

	[Token(Token = "0x400224D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private VRSettingsSubmenu m_currentSubmenu;

	[Token(Token = "0x400224E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private bool subscribedToControllers;

	[Token(Token = "0x400224F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private int currentControler;

	[Token(Token = "0x4002250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string[] prefOffsetKeys;

	[Token(Token = "0x4002251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] deviceKeys;

	[Token(Token = "0x4002252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private int[] offSetValues;

	[Token(Token = "0x4002253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private int offsetLimit;

	[Token(Token = "0x4002254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private bool dontShowOffset;

	[Token(Token = "0x4002255")]
	private const string dontShowOffsetTutorialKey = "prefDontShowOffsetTutorial";

	[Token(Token = "0x4002256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private Vector3 offsetPositionConverted;

	[Token(Token = "0x4002257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private Vector3 offsetRotatonConverted;

	[Token(Token = "0x4002258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private Vector3 offsetPositionConvertedSecondary;

	[Token(Token = "0x4002259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	private Vector3 offsetRotatonConvertedSecondary;

	[Token(Token = "0x400225A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	[Header("Test offset multiplier")]
	[Space]
	public float offsetMultiplier;

	[Token(Token = "0x400225B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public Transform testOffsetmodel;

	[Token(Token = "0x400225C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public Transform trackedDevice;

	[Token(Token = "0x400225D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public Transform trackedDeviceLeftHanded;

	[Token(Token = "0x400225E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public GameObject offsetTestGo;

	[Token(Token = "0x400225F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private Vector3 finalOffsetPosition;

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xD5C794", Offset = "0xD5C794", VA = "0xD5C794")]
	private void Awake()
	{
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xD5C82C", Offset = "0xD5C82C", VA = "0xD5C82C")]
	public void Start()
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0xD5DDDC", Offset = "0xD5DDDC", VA = "0xD5DDDC")]
	private void OnApplicationFocus(bool applicationFocused)
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0xD5E36C", Offset = "0xD5E36C", VA = "0xD5E36C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0xD5E388", Offset = "0xD5E388", VA = "0xD5E388")]
	public void Update()
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0xD59BB0", Offset = "0xD59BB0", VA = "0xD59BB0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0xD5EB44", Offset = "0xD5EB44", VA = "0xD5EB44")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0xD5EC2C", Offset = "0xD5EC2C", VA = "0xD5EC2C")]
	public void OpenSubmenu(VRSettingsSubmenu submenu)
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0xD5EC88", Offset = "0xD5EC88", VA = "0xD5EC88")]
	public void CloseSubmenu()
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0xD5ED2C", Offset = "0xD5ED2C", VA = "0xD5ED2C")]
	public void OpenOffsetSettings()
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0xD5EE84", Offset = "0xD5EE84", VA = "0xD5EE84")]
	public void CloseOffsetSettings()
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0xD5EF24", Offset = "0xD5EF24", VA = "0xD5EF24")]
	public void AcceptOffsetTutorial()
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0xD5EF7C", Offset = "0xD5EF7C", VA = "0xD5EF7C")]
	public void CloseSettings()
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0xD5F00C", Offset = "0xD5F00C", VA = "0xD5F00C")]
	public void OpenControlsPnl(bool open)
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0xD59E70", Offset = "0xD59E70", VA = "0xD59E70")]
	public void OpenMenuPnl(int index)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0xD5C97C", Offset = "0xD5C97C", VA = "0xD5C97C")]
	private void LoadSettings()
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0xD5F02C", Offset = "0xD5F02C", VA = "0xD5F02C")]
	private bool GetPrefsBool(string key, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0xD5F050", Offset = "0xD5F050", VA = "0xD5F050")]
	private void SetPrefsBool(string key, bool value)
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0xD5E38C", Offset = "0xD5E38C", VA = "0xD5E38C")]
	private void SetToggles()
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0xD5D3F4", Offset = "0xD5D3F4", VA = "0xD5D3F4")]
	private void SetSettings()
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0xD5F064", Offset = "0xD5F064", VA = "0xD5F064")]
	public void SetUI()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0xD5DDFC", Offset = "0xD5DDFC", VA = "0xD5DDFC")]
	private void SaveSettings()
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0xD5F104", Offset = "0xD5F104", VA = "0xD5F104")]
	public void SetLeftHanded()
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0xD5F6A0", Offset = "0xD5F6A0", VA = "0xD5F6A0")]
	public void SetLeaveBts()
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0xD5F89C", Offset = "0xD5F89C", VA = "0xD5F89C")]
	public void TurnOffAllLeaveButtons()
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0xD5F94C", Offset = "0xD5F94C", VA = "0xD5F94C")]
	public void MatchCloseDisconect()
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0xD5FB2C", Offset = "0xD5FB2C", VA = "0xD5FB2C")]
	public void InactivityDisconect()
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0xD5FA88", Offset = "0xD5FA88", VA = "0xD5FA88")]
	public void LeaveMatch()
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0xD5FBC4", Offset = "0xD5FBC4", VA = "0xD5FBC4")]
	public void LeaveMatchAndParty()
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0xD5F9E4", Offset = "0xD5F9E4", VA = "0xD5F9E4")]
	public void LeaveMatchWithParty()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0xD5D0C4", Offset = "0xD5D0C4", VA = "0xD5D0C4")]
	private void OnControlersChange(int value, bool reset)
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0xD5EDA4", Offset = "0xD5EDA4", VA = "0xD5EDA4")]
	public void SetCorrentControllerUI()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0xD5FCB0", Offset = "0xD5FCB0", VA = "0xD5FCB0")]
	public string GetDevicePrefixKey(string sufix)
	{
		return null;
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0xD556A4", Offset = "0xD556A4", VA = "0xD556A4")]
	public void ChangeOffsetValue(int index, bool negative = false)
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0xD5FDC4", Offset = "0xD5FDC4", VA = "0xD5FDC4")]
	public void ResetOffsetValues()
	{
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0xD5FEA8", Offset = "0xD5FEA8", VA = "0xD5FEA8")]
	public void ResetToSavedValues()
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0xD5FEAC", Offset = "0xD5FEAC", VA = "0xD5FEAC")]
	public void SaveOffsetValues()
	{
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0xD5D1A0", Offset = "0xD5D1A0", VA = "0xD5D1A0")]
	public void LoadOffsetValues()
	{
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0xD5FFC0", Offset = "0xD5FFC0", VA = "0xD5FFC0")]
	public void ConvertAndSendOffsetValues()
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0xD600BC", Offset = "0xD600BC", VA = "0xD600BC")]
	public void SetDontShowTutorial()
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0xD60134", Offset = "0xD60134", VA = "0xD60134")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0xD5E9BC", Offset = "0xD5E9BC", VA = "0xD5E9BC")]
	private void SetMuteAllBtn()
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0xD60338", Offset = "0xD60338", VA = "0xD60338")]
	public void MuteAllBtn()
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0xD6039C", Offset = "0xD6039C", VA = "0xD6039C")]
	private void MuteAll(bool mute)
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0xD55BA8", Offset = "0xD55BA8", VA = "0xD55BA8")]
	public void AddAudioValue(int index)
	{
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0xD55F14", Offset = "0xD55F14", VA = "0xD55F14")]
	public void RemoveAudioValue(int index)
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0xD60628", Offset = "0xD60628", VA = "0xD60628")]
	public void ApplyAudioSettings()
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0xD606C0", Offset = "0xD606C0", VA = "0xD606C0")]
	public void ResetAudioToDefault()
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0xD5E91C", Offset = "0xD5E91C", VA = "0xD5E91C")]
	public void CheckIfNeedsReset()
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0xD6078C", Offset = "0xD6078C", VA = "0xD6078C")]
	public void ModifySmoothTurning(bool positive)
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0xD60610", Offset = "0xD60610", VA = "0xD60610")]
	public void SetAndSave()
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0xD6088C", Offset = "0xD6088C", VA = "0xD6088C")]
	public void SetVoiceChatTV(bool value)
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0xD608C4", Offset = "0xD608C4", VA = "0xD608C4")]
	public void SetDisableJoystickRotation(bool value)
	{
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0xD608E4", Offset = "0xD608E4", VA = "0xD608E4")]
	public void SetLeftEyeDominant(bool value)
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0xD60904", Offset = "0xD60904", VA = "0xD60904")]
	public void SetLeftInvertBtns(bool value)
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0xD60924", Offset = "0xD60924", VA = "0xD60924")]
	public void SetLeftInvertJoysticks(bool value)
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0xD60970", Offset = "0xD60970", VA = "0xD60970")]
	public void SetShowMatchTimer(bool value)
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0xD60990", Offset = "0xD60990", VA = "0xD60990")]
	public void SetSprintToggle(bool value)
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0xD609B0", Offset = "0xD609B0", VA = "0xD609B0")]
	public void SetShowKillfeed(bool value)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0xD609D0", Offset = "0xD609D0", VA = "0xD609D0")]
	public void SetShowAmmoUI(bool value)
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0xD609F0", Offset = "0xD609F0", VA = "0xD609F0")]
	public void SetShowMinimap(bool value)
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0xD60A10", Offset = "0xD60A10", VA = "0xD60A10")]
	public void SetTurnOffUi(bool value)
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0xD60A30", Offset = "0xD60A30", VA = "0xD60A30")]
	public void SetShowHitMarkers(bool value)
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0xD60A50", Offset = "0xD60A50", VA = "0xD60A50")]
	public void SetShowPoints(bool value)
	{
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0xD60A70", Offset = "0xD60A70", VA = "0xD60A70")]
	public void SetScoreAlways(bool value)
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0xD60A90", Offset = "0xD60A90", VA = "0xD60A90")]
	public void SetSmoothTurning(bool value)
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0xD60AB0", Offset = "0xD60AB0", VA = "0xD60AB0")]
	public void SetVAir(bool value)
	{
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0xD60AD0", Offset = "0xD60AD0", VA = "0xD60AD0")]
	public void SetVSprint(bool value)
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0xD60AF0", Offset = "0xD60AF0", VA = "0xD60AF0")]
	public void SetLookDirection(bool value)
	{
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0xD60B1C", Offset = "0xD60B1C", VA = "0xD60B1C")]
	public void SetLookAimingMoves(bool value)
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0xD60B3C", Offset = "0xD60B3C", VA = "0xD60B3C")]
	public void SetOffsetMainMenu(bool value)
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0xD60B5C", Offset = "0xD60B5C", VA = "0xD60B5C")]
	public void SetGunOffset(bool value)
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0xD60B7C", Offset = "0xD60B7C", VA = "0xD60B7C")]
	public void SetLeftHanded(bool value)
	{
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0xD60BC8", Offset = "0xD60BC8", VA = "0xD60BC8")]
	public void SetVTurning(bool value)
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0xD60BE8", Offset = "0xD60BE8", VA = "0xD60BE8")]
	public void SetStaticRifle(bool value)
	{
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0xD60C08", Offset = "0xD60C08", VA = "0xD60C08")]
	public void SetStaticDualWield(bool value)
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0xD60C28", Offset = "0xD60C28", VA = "0xD60C28")]
	public void SetHoldGrabGun(bool value)
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0xD60C48", Offset = "0xD60C48", VA = "0xD60C48")]
	public VrSettings()
	{
	}
}
[Token(Token = "0x200035D")]
public class VrBombManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LevelManager m_LevelManager;

	[Token(Token = "0x4002261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerManager m_PlayerManager;

	[Token(Token = "0x4002262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DefenseTarget m_CurrentBombPlacement;

	[Token(Token = "0x4002263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool plantingBomb;

	[Token(Token = "0x4002264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool defusingBomb;

	[Token(Token = "0x600165C")]
	[Address(RVA = "0xD612E0", Offset = "0xD612E0", VA = "0xD612E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0xD61390", Offset = "0xD61390", VA = "0xD61390")]
	private void Update()
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0xD616E0", Offset = "0xD616E0", VA = "0xD616E0")]
	public void PlantingBomb(DefenseTarget currentBombPlacement)
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0xD61518", Offset = "0xD61518", VA = "0xD61518")]
	public void CancelPlantingBomb()
	{
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0xD6176C", Offset = "0xD6176C", VA = "0xD6176C")]
	public void FinishPlantBomb()
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0xD61794", Offset = "0xD61794", VA = "0xD61794")]
	public void DefusingBomb(DefenseTarget currentBombPlacement)
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0xD615F4", Offset = "0xD615F4", VA = "0xD615F4")]
	public void CancelDefusingBomb()
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0xD61830", Offset = "0xD61830", VA = "0xD61830")]
	public void FinishDefusingBomb()
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0xD618AC", Offset = "0xD618AC", VA = "0xD618AC")]
	public VrBombManager()
	{
	}
}
[Token(Token = "0x200035E")]
public class Pointer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float defaultLength;

	[Token(Token = "0x4002266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dot;

	[Token(Token = "0x4002267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrInputModule inputModule;

	[Token(Token = "0x4002268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x4002269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Canvas settingsCanvas;

	[Token(Token = "0x400226A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera eventCamera;

	[Token(Token = "0x400226B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x6001665")]
	[Address(RVA = "0xD618B4", Offset = "0xD618B4", VA = "0xD618B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0xD619D8", Offset = "0xD619D8", VA = "0xD619D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0xD61B44", Offset = "0xD61B44", VA = "0xD61B44")]
	private void UpdateLine()
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0xD61D14", Offset = "0xD61D14", VA = "0xD61D14")]
	private RaycastHit CreateRaycast(float length)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0xD61E04", Offset = "0xD61E04", VA = "0xD61E04")]
	public Pointer()
	{
	}
}
[Token(Token = "0x200035F")]
public class TrackedPlayStationDevices : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000360")]
	public enum TrackedDevicesType
	{
		[Token(Token = "0x4002275")]
		DualShock4 = 1,
		[Token(Token = "0x4002276")]
		Aim = 2,
		[Token(Token = "0x4002277")]
		Move = 4
	}

	[Serializable]
	[Token(Token = "0x2000361")]
	public class TrackedDevice
	{
		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int handle;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer light;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion orientation;

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xD622F8", Offset = "0xD622F8", VA = "0xD622F8")]
		public TrackedDevice()
		{
		}
	}

	[Token(Token = "0x2000362")]
	[CompilerGenerated]
	private sealed class <InitializeDevice>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackedPlayStationDevices <>4__this;

		[Token(Token = "0x170002C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xD626C0", Offset = "0xD626C0", VA = "0xD626C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xD62708", Offset = "0xD62708", VA = "0xD62708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xD61E9C", Offset = "0xD61E9C", VA = "0xD61E9C")]
		[DebuggerHidden]
		public <InitializeDevice>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xD62398", Offset = "0xD62398", VA = "0xD62398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xD6239C", Offset = "0xD6239C", VA = "0xD6239C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xD626C8", Offset = "0xD626C8", VA = "0xD626C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000363")]
	[CompilerGenerated]
	private sealed class <RegisterDualShock4Controller>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xD62748", Offset = "0xD62748", VA = "0xD62748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0xD62790", Offset = "0xD62790", VA = "0xD62790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xD62200", Offset = "0xD62200", VA = "0xD62200")]
		[DebuggerHidden]
		public <RegisterDualShock4Controller>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xD62710", Offset = "0xD62710", VA = "0xD62710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xD62714", Offset = "0xD62714", VA = "0xD62714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xD62750", Offset = "0xD62750", VA = "0xD62750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000364")]
	[CompilerGenerated]
	private sealed class <RegisterAimController>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0xD627D0", Offset = "0xD627D0", VA = "0xD627D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0xD62818", Offset = "0xD62818", VA = "0xD62818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xD62228", Offset = "0xD62228", VA = "0xD62228")]
		[DebuggerHidden]
		public <RegisterAimController>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xD62798", Offset = "0xD62798", VA = "0xD62798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xD6279C", Offset = "0xD6279C", VA = "0xD6279C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xD627D8", Offset = "0xD627D8", VA = "0xD627D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000365")]
	[CompilerGenerated]
	private sealed class <RegisterMoveControllers>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0xD62858", Offset = "0xD62858", VA = "0xD62858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xD628A0", Offset = "0xD628A0", VA = "0xD628A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xD62250", Offset = "0xD62250", VA = "0xD62250")]
		[DebuggerHidden]
		public <RegisterMoveControllers>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xD62820", Offset = "0xD62820", VA = "0xD62820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xD62824", Offset = "0xD62824", VA = "0xD62824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xD62860", Offset = "0xD62860", VA = "0xD62860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400226C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackedDevicesType trackedDevicesType;

	[Token(Token = "0x400226D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RigthHandAnchor;

	[Token(Token = "0x400226E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform LeftHandAnchor;

	[Token(Token = "0x400226F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrackedDevice deviceDualShock4;

	[Token(Token = "0x4002270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrackedDevice deviceAim;

	[Token(Token = "0x4002271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevice deviceMovePrimary;

	[Token(Token = "0x4002272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevice deviceMoveSecondary;

	[Token(Token = "0x4002273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds waitUntilDeviceAvailable;

	[Token(Token = "0x600166A")]
	[Address(RVA = "0xD61E14", Offset = "0xD61E14", VA = "0xD61E14")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0xD61E34", Offset = "0xD61E34", VA = "0xD61E34")]
	[IteratorStateMachine(typeof(<InitializeDevice>d__11))]
	private IEnumerator InitializeDevice()
	{
		return null;
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0xD61EC4", Offset = "0xD61EC4", VA = "0xD61EC4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0xD61F68", Offset = "0xD61F68", VA = "0xD61F68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0xD61FCC", Offset = "0xD61FCC", VA = "0xD61FCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0xD61FE8", Offset = "0xD61FE8", VA = "0xD61FE8")]
	private void UpdateAnchorPos(Vector3 localPosition)
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0xD62004", Offset = "0xD62004", VA = "0xD62004")]
	private void UpdateAnchorOrientation(Quaternion localRotation)
	{
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0xD62020", Offset = "0xD62020", VA = "0xD62020")]
	private void UpdateLeftAnchorPos(Vector3 localPosition)
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0xD6203C", Offset = "0xD6203C", VA = "0xD6203C")]
	private void UpdateLeftAnchorOrientation(Quaternion localRotation)
	{
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0xD62058", Offset = "0xD62058", VA = "0xD62058")]
	public void ResetDeviceTracking()
	{
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0xD61F5C", Offset = "0xD61F5C", VA = "0xD61F5C")]
	private void UpdateDualShock4Transforms()
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0xD61F60", Offset = "0xD61F60", VA = "0xD61F60")]
	private void UpdateAimTransforms()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0xD61F64", Offset = "0xD61F64", VA = "0xD61F64")]
	private void UpdateMoveTransforms()
	{
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0xD62070", Offset = "0xD62070", VA = "0xD62070")]
	public void RegisterDevices()
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0xD620E0", Offset = "0xD620E0", VA = "0xD620E0")]
	[IteratorStateMachine(typeof(<RegisterDualShock4Controller>d__24))]
	private IEnumerator RegisterDualShock4Controller()
	{
		return null;
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0xD62140", Offset = "0xD62140", VA = "0xD62140")]
	[IteratorStateMachine(typeof(<RegisterAimController>d__25))]
	private IEnumerator RegisterAimController()
	{
		return null;
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0xD621A0", Offset = "0xD621A0", VA = "0xD621A0")]
	[IteratorStateMachine(typeof(<RegisterMoveControllers>d__26))]
	private IEnumerator RegisterMoveControllers()
	{
		return null;
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0xD61F84", Offset = "0xD61F84", VA = "0xD61F84")]
	public void UnregisterDevices()
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0xD62278", Offset = "0xD62278", VA = "0xD62278")]
	private void UnregisterDualShock4()
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0xD6227C", Offset = "0xD6227C", VA = "0xD6227C")]
	private void UnregisterAimController()
	{
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0xD62280", Offset = "0xD62280", VA = "0xD62280")]
	private void UnregisterMoveControllers()
	{
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0xD62284", Offset = "0xD62284", VA = "0xD62284")]
	public TrackedPlayStationDevices()
	{
	}
}
[Token(Token = "0x2000366")]
public class TrackingControl : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMainMenu;

	[Token(Token = "0x4002287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackedPlayStationDevices psvrDS4poseDriver;

	[Token(Token = "0x4002288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrackedPlayStationDevices psvrAimPoseDriver;

	[Token(Token = "0x4002289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrackedPlayStationDevices moveControllerPoseDriver;

	[Token(Token = "0x400228A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrackedPlayStationDevices leftMoveControllerPoseDriver;

	[Token(Token = "0x400228B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedPlayStationDevices endDS4;

	[Token(Token = "0x400228C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedPlayStationDevices endAIM;

	[Token(Token = "0x400228D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TrackedPlayStationDevices endMove;

	[Token(Token = "0x400228E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TrackedPlayStationDevices endMoveLeft;

	[Token(Token = "0x400228F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TrackedPoseDriver headPoseDriver;

	[Token(Token = "0x4002290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TrackedPoseDriver handPoseDriver;

	[Token(Token = "0x4002291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TrackedPoseDriver handPoseDiver2;

	[Token(Token = "0x4002292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TrackedPoseDriver headPoseDriver2;

	[Token(Token = "0x4002293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TrackedPoseDriver headPoseDriver3;

	[Token(Token = "0x4002294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TrackedPoseDriver headPoseDriver4;

	[Token(Token = "0x4002295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ps4ModelsParent;

	[Token(Token = "0x4002296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject oculusModelsParent;

	[Token(Token = "0x4002297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject ps4LeftHandModelsParent;

	[Token(Token = "0x4002298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform offsetTransform;

	[Token(Token = "0x4002299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform offsetTransformSecondary;

	[Token(Token = "0x400229A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform trackedDeviceRight;

	[Token(Token = "0x400229B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform trackedDeviceLeft;

	[Token(Token = "0x400229C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform gunAnchorRigidBody;

	[Token(Token = "0x400229D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PhysicsJointToggler toggler;

	[Token(Token = "0x400229E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public PhysicsJointToggler togglerSecondary;

	[Token(Token = "0x400229F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool hasToggler;

	[Token(Token = "0x40022A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool hasTogglerSecondary;

	[Token(Token = "0x40022A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[Header("Default Offset Values")]
	[Space]
	public Vector3 defaultAimOffsetPos;

	[Token(Token = "0x40022A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 defaultMoveOffsetPos;

	[Token(Token = "0x40022A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Vector3 defaultMoveOffsetRotation;

	[Token(Token = "0x40022A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector3 defaultDs4Pos;

	[Token(Token = "0x40022A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Vector3 defaultDs4Rotation;

	[Token(Token = "0x40022A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 defaultPs5OffsetPos;

	[Token(Token = "0x40022A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 defaultPs5OffsetRotation;

	[Token(Token = "0x40022A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3 defaultOffsetPosition;

	[Token(Token = "0x40022A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Vector3 defaultOffsetRotation;

	[Token(Token = "0x40022AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 defaultOffsetPositionSecondary;

	[Token(Token = "0x40022AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public Vector3 defaultOffsetRotationSecondary;

	[Token(Token = "0x40022AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Vector3 offsetPosition;

	[Token(Token = "0x40022AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Vector3 offsetRotation;

	[Token(Token = "0x40022AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Vector3 offsetPositionSecondary;

	[Token(Token = "0x40022AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Vector3 offsetRotationSecondary;

	[Token(Token = "0x40022B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 m_RightHandPosition;

	[Token(Token = "0x40022B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 m_LeftHandPosition;

	[Token(Token = "0x40022B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Quaternion m_RightHandRotation;

	[Token(Token = "0x40022B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Quaternion m_LeftHandRotation;

	[Token(Token = "0x40022B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 finalOffset;

	[Token(Token = "0x40022B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private Vector3 finalOffsetRotation;

	[Token(Token = "0x40022B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int count;

	[Token(Token = "0x40022B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Transform trackedDeviceATM;

	[Token(Token = "0x40022B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Transform secondaryTrackedDeviceATM;

	[Token(Token = "0x40022B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 lastTrackedPos;

	[Token(Token = "0x40022BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 relPos;

	[Token(Token = "0x40022BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Quaternion rotation;

	[Token(Token = "0x40022BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool hideTrackingHands;

	[Token(Token = "0x40022BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private Vector3 awayPos;

	[Token(Token = "0x6001699")]
	[Address(RVA = "0xD628A8", Offset = "0xD628A8", VA = "0xD628A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0xD628AC", Offset = "0xD628AC", VA = "0xD628AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0xD628D0", Offset = "0xD628D0", VA = "0xD628D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0xD629FC", Offset = "0xD629FC", VA = "0xD629FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0xD62A00", Offset = "0xD62A00", VA = "0xD62A00")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0xD62BFC", Offset = "0xD62BFC", VA = "0xD62BFC")]
	public void SetOffsetValues(Vector3 offsetPosition, Vector3 offsetRotation, Vector3 secondaryOffsetPosition, Vector3 secondaryOffsetRotation, int deviceIndex)
	{
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0xD62A64", Offset = "0xD62A64", VA = "0xD62A64")]
	public void ApplyOffsetHand()
	{
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0xD632C8", Offset = "0xD632C8", VA = "0xD632C8")]
	private void NoOffsetTracking()
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0xD63410", Offset = "0xD63410", VA = "0xD63410")]
	public void TrackAndOffset(Transform transformToOffset, Vector3 offSetAmmount, Vector3 offsetRotation, Vector3 aditionalOffset, bool secondaryHand = false)
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xD63108", Offset = "0xD63108", VA = "0xD63108")]
	private void DefaultOffsetTracking()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0xD62FF4", Offset = "0xD62FF4", VA = "0xD62FF4")]
	private void UserOffsetTracking()
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0xD63A60", Offset = "0xD63A60", VA = "0xD63A60")]
	public void SetCorrectTrackedDevice(int index, bool reset = false)
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0xD63F2C", Offset = "0xD63F2C", VA = "0xD63F2C")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0xD62BB4", Offset = "0xD62BB4", VA = "0xD62BB4")]
	private void MoveTrackingAway()
	{
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0xD640E0", Offset = "0xD640E0", VA = "0xD640E0")]
	public void DisableGunCollisionChecks()
	{
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0xD64120", Offset = "0xD64120", VA = "0xD64120")]
	public void EnableGunCollisionChecks()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0xD62B30", Offset = "0xD62B30", VA = "0xD62B30")]
	private void ExposeHandPositions()
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0xD64140", Offset = "0xD64140", VA = "0xD64140")]
	public TrackingControl()
	{
	}
}
[Token(Token = "0x2000367")]
public class UnityXRConfigurator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40022BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public TrackingSpaceType TrackingSpaceType;

	[Token(Token = "0x40022BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public bool LockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0xD64294", Offset = "0xD64294", VA = "0xD64294", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0xD64298", Offset = "0xD64298", VA = "0xD64298", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0xD6429C", Offset = "0xD6429C", VA = "0xD6429C", Slot = "6")]
	protected virtual void UpdateTrackingSpaceType()
	{
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0xD642A8", Offset = "0xD642A8", VA = "0xD642A8", Slot = "7")]
	protected virtual void UpdateFixedDeltaTime()
	{
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0xD642AC", Offset = "0xD642AC", VA = "0xD642AC", Slot = "8")]
	protected virtual void OnAfterTrackingSpaceTypeChange()
	{
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0xD642B8", Offset = "0xD642B8", VA = "0xD642B8", Slot = "9")]
	protected virtual void OnAfterLockPhysicsUpdateRateToRenderFrequencyChange()
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0xD642C4", Offset = "0xD642C4", VA = "0xD642C4")]
	public UnityXRConfigurator()
	{
	}
}
[Token(Token = "0x2000368")]
public class VrInputModule : BaseInputModule
{
	[Token(Token = "0x40022C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera eventCamera;

	[Token(Token = "0x40022C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject currentObject;

	[Token(Token = "0x40022C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PointerEventData eventData;

	[Token(Token = "0x40022C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool triggerdown;

	[Token(Token = "0x40022C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool triggerUp;

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0xD642D8", Offset = "0xD642D8", VA = "0xD642D8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0xD6434C", Offset = "0xD6434C", VA = "0xD6434C")]
	private RaycastResult Rc(List<RaycastResult> raycastResults)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0xD64490", Offset = "0xD64490", VA = "0xD64490", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0xD64B68", Offset = "0xD64B68", VA = "0xD64B68")]
	public void RConfirmPress(bool state)
	{
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0xD64B80", Offset = "0xD64B80", VA = "0xD64B80")]
	public PointerEventData GetData()
	{
		return null;
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0xD648D4", Offset = "0xD648D4", VA = "0xD648D4")]
	public void ProcessHold(PointerEventData data)
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0xD647AC", Offset = "0xD647AC", VA = "0xD647AC")]
	public void ProcessPress(PointerEventData data)
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0xD649CC", Offset = "0xD649CC", VA = "0xD649CC")]
	public void ProcessRelease(PointerEventData data)
	{
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0xD64B88", Offset = "0xD64B88", VA = "0xD64B88")]
	public VrInputModule()
	{
	}
}
[Token(Token = "0x200036A")]
public class VrRigHelper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200036B")]
	[CompilerGenerated]
	private sealed class <ToggleCams>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrRigHelper <>4__this;

		[Token(Token = "0x170002CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xD6655C", Offset = "0xD6655C", VA = "0xD6655C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xD665A4", Offset = "0xD665A4", VA = "0xD665A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xD655B8", Offset = "0xD655B8", VA = "0xD655B8")]
		[DebuggerHidden]
		public <ToggleCams>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xD66454", Offset = "0xD66454", VA = "0xD66454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xD66458", Offset = "0xD66458", VA = "0xD66458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xD66564", Offset = "0xD66564", VA = "0xD66564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40022C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform centerEyeAnchor;

	[Token(Token = "0x40022C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform trackingSpace;

	[Token(Token = "0x40022CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AttachmentController> attachmentControllers;

	[Token(Token = "0x40022CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<IkInterpolator> ikInterpolators;

	[Token(Token = "0x40022CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<FootstepsNew> footStepControllers;

	[Token(Token = "0x40022CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ModSkins> modSkins;

	[Token(Token = "0x40022CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Ladder> ladders;

	[Token(Token = "0x40022CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LayerMask laserLayerMask;

	[Token(Token = "0x40022D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform rightHandAnchor;

	[Token(Token = "0x40022D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform leftHandAnchor;

	[Token(Token = "0x40022D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera VrCamera;

	[Token(Token = "0x40022D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Camera SpectatorCamera;

	[Token(Token = "0x40022D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject SpectatorCameraGo;

	[Token(Token = "0x40022D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Camera UICamera;

	[Token(Token = "0x40022D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject UICameraGo;

	[Token(Token = "0x40022D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Camera RecordingCamera;

	[Token(Token = "0x40022D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Camera UiRecordingCamera;

	[Token(Token = "0x40022D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Camera NothingCamera;

	[Token(Token = "0x40022DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Camera EndUICamera;

	[Token(Token = "0x40022DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Camera cinematicCamera;

	[Token(Token = "0x40022DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject flyCameraTarget;

	[Token(Token = "0x40022DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject flyCamera;

	[Token(Token = "0x40022DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject weaponsParent;

	[Token(Token = "0x40022DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject weaponsParentSecondary;

	[Token(Token = "0x40022E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float rightHandVelocity;

	[Token(Token = "0x40022E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float leftHandVelocity;

	[Token(Token = "0x40022E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 previusPosition;

	[Token(Token = "0x40022E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 vel;

	[Token(Token = "0x40022E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 previusPositionLeft;

	[Token(Token = "0x40022E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Vector3 velLeft;

	[Token(Token = "0x40022E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 m_previousAbosluteLeftHandPosition;

	[Token(Token = "0x40022E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[HideInInspector]
	public Vector3 m_AbsoluteLeftHandVelocity;

	[Token(Token = "0x40022E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 m_previousAbosluteRightHandPosition;

	[Token(Token = "0x40022E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[HideInInspector]
	public Vector3 m_AbsoluteRightHandVelocity;

	[Token(Token = "0x40022EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public HandMotionActions leftHandActions;

	[Token(Token = "0x40022EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public HandMotionActions rightHandActions;

	[Token(Token = "0x40022EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool isMainMenu;

	[Token(Token = "0x40022ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private VrInput m_vrInput;

	[Token(Token = "0x40022EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Scene m_Scene;

	[Token(Token = "0x40022EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int codeIndex;

	[Token(Token = "0x40022F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float timer;

	[Token(Token = "0x40022F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool muteAll;

	[Token(Token = "0x40022F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	private bool updateScope;

	[Token(Token = "0x40022F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public VrScopeController scopeController;

	[Token(Token = "0x40022F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int laddersLenght;

	[Token(Token = "0x40022F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int aControllersLenght;

	[Token(Token = "0x40022F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int LateUpdateCount;

	[Token(Token = "0x40022F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool solveNext;

	[Token(Token = "0x40022F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int solvesPerFrame;

	[Token(Token = "0x40022F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int solvedThisFrame;

	[Token(Token = "0x40022FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int lastIndexSolved;

	[Token(Token = "0x40022FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int loopStart;

	[Token(Token = "0x14000012")]
	public event Action<VrRigHelper> UpdatedAnchors
	{
		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xD64C0C", Offset = "0xD64C0C", VA = "0xD64C0C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xD64CBC", Offset = "0xD64CBC", VA = "0xD64CBC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0xD64D6C", Offset = "0xD64D6C", VA = "0xD64D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0xD64EFC", Offset = "0xD64EFC", VA = "0xD64EFC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0xD65010", Offset = "0xD65010", VA = "0xD65010")]
	public void Update()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0xD65550", Offset = "0xD65550", VA = "0xD65550")]
	[IteratorStateMachine(typeof(<ToggleCams>d__48))]
	private IEnumerator ToggleCams()
	{
		return null;
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0xD655E0", Offset = "0xD655E0", VA = "0xD655E0", Slot = "4")]
	protected virtual void RaiseUpdatedAnchorsEvent()
	{
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0xD64F38", Offset = "0xD64F38", VA = "0xD64F38")]
	public void ActivateFlyCamera()
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0xD65600", Offset = "0xD65600", VA = "0xD65600")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0xD65848", Offset = "0xD65848", VA = "0xD65848")]
	public void CheckScopeAvailability()
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0xD659D8", Offset = "0xD659D8", VA = "0xD659D8")]
	public void SetScope(VrScopeController controller)
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0xD659E8", Offset = "0xD659E8", VA = "0xD659E8")]
	public void RemoveScope()
	{
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0xD659F4", Offset = "0xD659F4", VA = "0xD659F4")]
	public void LaddersOff()
	{
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0xD65B38", Offset = "0xD65B38", VA = "0xD65B38")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0xD654B4", Offset = "0xD654B4", VA = "0xD654B4")]
	public void UpdateLadders()
	{
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0xD65DC0", Offset = "0xD65DC0", VA = "0xD65DC0")]
	public void FixedUpdateAttachments()
	{
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0xD65E5C", Offset = "0xD65E5C", VA = "0xD65E5C")]
	public void FixedUpdateFootsteps()
	{
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0xD657AC", Offset = "0xD657AC", VA = "0xD657AC")]
	public void LateUpdateAttachments()
	{
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0xD65704", Offset = "0xD65704", VA = "0xD65704")]
	private void LateUpdateMultipleInterpolators()
	{
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0xD66000", Offset = "0xD66000", VA = "0xD66000")]
	private void SolveOffset()
	{
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0xD65F90", Offset = "0xD65F90", VA = "0xD65F90")]
	private void SolveFromStart()
	{
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0xD65EE8", Offset = "0xD65EE8", VA = "0xD65EE8")]
	private void SolveAll()
	{
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0xD6609C", Offset = "0xD6609C", VA = "0xD6609C")]
	private void UpdateAndCountInterpolator(int index)
	{
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0xD6614C", Offset = "0xD6614C", VA = "0xD6614C")]
	private void LateUpdateInterPolators()
	{
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0xD66238", Offset = "0xD66238", VA = "0xD66238")]
	public VrRigHelper()
	{
	}
}
[Token(Token = "0x200036C")]
public class VrRigReferences : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40022FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space]
	public GameObject PlayArea;

	[Token(Token = "0x4002300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject GunPos;

	[Token(Token = "0x4002301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SecondaryHandPos;

	[Token(Token = "0x4002302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Headset;

	[Token(Token = "0x4002303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera HeadsetCamera;

	[Token(Token = "0x4002304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera UiCamera;

	[Token(Token = "0x4002305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VignettingVR vignetting;

	[Token(Token = "0x4002306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_HeadsetCameraTransform;

	[Token(Token = "0x4002307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject LeftController;

	[Token(Token = "0x4002308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject RightController;

	[Token(Token = "0x4002309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform RecoilTarget;

	[Token(Token = "0x400230A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform GunAnchor;

	[Token(Token = "0x400230B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform secondaryRecoilTarget;

	[Token(Token = "0x400230C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform secondaryGunAnchor;

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0xD665AC", Offset = "0xD665AC", VA = "0xD665AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0xD665D0", Offset = "0xD665D0", VA = "0xD665D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0xD666CC", Offset = "0xD666CC", VA = "0xD666CC")]
	public VrRigReferences()
	{
	}
}
[Token(Token = "0x200036D")]
public class MessagingDialogue : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60016E0")]
	[Address(RVA = "0xD666D4", Offset = "0xD666D4", VA = "0xD666D4")]
	public MessagingDialogue()
	{
	}
}
[Token(Token = "0x200036E")]
public enum Pad_Type
{
	[Token(Token = "0x400230E")]
	Ds4,
	[Token(Token = "0x400230F")]
	Aim,
	[Token(Token = "0x4002310")]
	Move
}
[Token(Token = "0x200036F")]
[Obsolete("This class is being replaced by platform manager")]
public class GamePad : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pad_Type padType;

	[Token(Token = "0x4002312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_Root;

	[Token(Token = "0x4002313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GamePad[] m_GamePads;

	[Token(Token = "0x4002314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int playerId;

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0xD666DC", Offset = "0xD666DC", VA = "0xD666DC")]
	public GamePad()
	{
	}
}
[Token(Token = "0x2000370")]
public class bl_IconItem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000371")]
	[CompilerGenerated]
	private sealed class <FadeIcon>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bl_IconItem <>4__this;

		[Token(Token = "0x170002CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xD6715C", Offset = "0xD6715C", VA = "0xD6715C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xD671A4", Offset = "0xD671A4", VA = "0xD671A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xD66E5C", Offset = "0xD66E5C", VA = "0xD66E5C")]
		[DebuggerHidden]
		public <FadeIcon>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xD67020", Offset = "0xD67020", VA = "0xD67020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xD67024", Offset = "0xD67024", VA = "0xD67024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xD67164", Offset = "0xD67164", VA = "0xD67164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Separator("SETTINGS")]
	public float DestroyIn;

	[Token(Token = "0x4002316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Separator("REFERENCES")]
	[SerializeField]
	public RectTransform CircleAreaRect;

	[Token(Token = "0x4002317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite DeathIcon;

	[Token(Token = "0x4002318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text InfoText;

	[Token(Token = "0x4002319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform m_RootRect;

	[Token(Token = "0x400231A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup m_CanvasGroup;

	[Token(Token = "0x400231B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator Anim;

	[Token(Token = "0x400231C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float delay;

	[Token(Token = "0x400231D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bl_MaskHelper MaskHelper;

	[Token(Token = "0x400231E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int id;

	[Token(Token = "0x400231F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image TargetGrapihc;

	[Token(Token = "0x4002320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForSeconds waitDelayTime;

	[Token(Token = "0x4002321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool open;

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0xD666EC", Offset = "0xD666EC", VA = "0xD666EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0xD668CC", Offset = "0xD668CC", VA = "0xD668CC")]
	public void DestroyIcon(bool inmediate)
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0xD669A4", Offset = "0xD669A4", VA = "0xD669A4")]
	public void DestroyIcon(bool inmediate, Sprite death)
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0xD66A8C", Offset = "0xD66A8C", VA = "0xD66A8C")]
	public void GetInfoItem(string info)
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0xD66B2C", Offset = "0xD66B2C", VA = "0xD66B2C")]
	public void SetIcon(Sprite ico)
	{
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0xD66B48", Offset = "0xD66B48", VA = "0xD66B48")]
	public RectTransform SetCircleArea(float radius, Color AreaColor)
	{
		return null;
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0xD66D9C", Offset = "0xD66D9C", VA = "0xD66D9C")]
	public void HideCircleArea()
	{
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0xD66DF4", Offset = "0xD66DF4", VA = "0xD66DF4")]
	[IteratorStateMachine(typeof(<FadeIcon>d__19))]
	private IEnumerator FadeIcon()
	{
		return null;
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0xD66E84", Offset = "0xD66E84", VA = "0xD66E84")]
	public void SetVisibleAlpha()
	{
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0xD66EA4", Offset = "0xD66EA4", VA = "0xD66EA4")]
	public void OnClickMark()
	{
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0xD66EA8", Offset = "0xD66EA8", VA = "0xD66EA8")]
	public void InfoItem()
	{
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0xD66F28", Offset = "0xD66F28", VA = "0xD66F28")]
	public void DelayStart(float v)
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0xD66F9C", Offset = "0xD66F9C", VA = "0xD66F9C")]
	public bl_IconItem()
	{
	}
}
[Token(Token = "0x2000372")]
public class bl_MiniMap : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000373")]
	public enum RenderType
	{
		[Token(Token = "0x400237D")]
		RealTime,
		[Token(Token = "0x400237E")]
		Picture
	}

	[Serializable]
	[Token(Token = "0x2000374")]
	public enum RenderMode
	{
		[Token(Token = "0x4002380")]
		Mode2D,
		[Token(Token = "0x4002381")]
		Mode3D
	}

	[Serializable]
	[Token(Token = "0x2000375")]
	public enum MapType
	{
		[Token(Token = "0x4002383")]
		Local,
		[Token(Token = "0x4002384")]
		Global
	}

	[Token(Token = "0x2000376")]
	[CompilerGenerated]
	private sealed class <ResetOffset>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bl_MiniMap <>4__this;

		[Token(Token = "0x170002D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xD6A0AC", Offset = "0xD6A0AC", VA = "0xD6A0AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001723")]
			[Address(RVA = "0xD6A0F4", Offset = "0xD6A0F4", VA = "0xD6A0F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xD695B4", Offset = "0xD695B4", VA = "0xD695B4")]
		[DebuggerHidden]
		public <ResetOffset>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xD69EE4", Offset = "0xD69EE4", VA = "0xD69EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xD69EE8", Offset = "0xD69EE8", VA = "0xD69EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xD6A0B4", Offset = "0xD6A0B4", VA = "0xD6A0B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000377")]
	[CompilerGenerated]
	private sealed class <StartFade>d__122 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bl_MiniMap <>4__this;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x170002D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xD6A234", Offset = "0xD6A234", VA = "0xD6A234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0xD6A27C", Offset = "0xD6A27C", VA = "0xD6A27C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xD69BE4", Offset = "0xD69BE4", VA = "0xD69BE4")]
		[DebuggerHidden]
		public <StartFade>d__122(int <>1__state)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xD6A0FC", Offset = "0xD6A0FC", VA = "0xD6A0FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xD6A100", Offset = "0xD6A100", VA = "0xD6A100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xD6A23C", Offset = "0xD6A23C", VA = "0xD6A23C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Separator("General Settings")]
	public GameObject m_Target;

	[Token(Token = "0x4002326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string LevelName;

	[Token(Token = "0x4002327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[LayerMask]
	public int MiniMapLayer;

	[Token(Token = "0x4002328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Keycode to toggle map size mode (world and mini map)")]
	public KeyCode ToogleKey;

	[Token(Token = "0x4002329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera MMCamera;

	[Token(Token = "0x400232A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderType m_Type;

	[Token(Token = "0x400232B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public RenderMode m_Mode;

	[Token(Token = "0x400232C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MapType m_MapType;

	[Token(Token = "0x400232D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool Ortographic2D;

	[Token(Token = "0x400232E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color playerColor;

	[Token(Token = "0x400232F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Separator("Height")]
	[Range(0.05f, 2f)]
	public float IconMultiplier;

	[Token(Token = "0x4002330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("How much should we move for each small movement on the mouse wheel?")]
	[Range(1f, 10f)]
	public int scrollSensitivity;

	[Token(Token = "0x4002331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(5f, 500f)]
	public float DefaultHeight;

	[Token(Token = "0x4002332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Maximum heights that the camera can reach.")]
	public float MaxZoom;

	[Token(Token = "0x4002333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Minimum heights that the camera can reach.")]
	public float MinZoom;

	[Token(Token = "0x4002334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public KeyCode IncreaseHeightKey;

	[Token(Token = "0x4002335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public KeyCode DecreaseHeightKey;

	[Token(Token = "0x4002336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Range(1f, 15f)]
	[Tooltip("Smooth speed to height change.")]
	public float LerpHeight;

	[Token(Token = "0x4002337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite PlayerIconSprite;

	[Token(Token = "0x4002338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Separator("Rotation")]
	[Tooltip("Compass rotation for circle maps, rotate icons around pivot.")]
	public bool useCompassRotation;

	[Token(Token = "0x4002339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Range(25f, 500f)]
	[Tooltip("Size of Compass rotation diameter.")]
	public float CompassSize;

	[Token(Token = "0x400233A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool RotationAlwaysFront;

	[Token(Token = "0x400233B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	[Tooltip("Should the minimap rotate with the player?")]
	public bool DynamicRotation;

	[Token(Token = "0x400233C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	[Tooltip("this work only is dynamic rotation.")]
	public bool SmoothRotation;

	[Token(Token = "0x400233D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Range(1f, 15f)]
	public float LerpRotation;

	[Token(Token = "0x400233E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool AllowMapMarks;

	[Token(Token = "0x400233F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject MapPointerPrefab;

	[Token(Token = "0x4002340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool AllowMultipleMarks;

	[Token(Token = "0x4002341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject mapPointer;

	[Token(Token = "0x4002342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Separator("Area Grid")]
	public bool ShowAreaGrid;

	[Token(Token = "0x4002343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[Range(1f, 20f)]
	public float AreasSize;

	[Token(Token = "0x4002344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material AreaMaterial;

	[Token(Token = "0x4002345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Separator("Animations")]
	public bool ShowLevelName;

	[Token(Token = "0x4002346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool ShowPanelInfo;

	[Token(Token = "0x4002347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public bool FadeOnFullScreen;

	[Token(Token = "0x4002348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Range(0.1f, 5f)]
	public float HitEffectSpeed;

	[Token(Token = "0x4002349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Animator BottonAnimator;

	[Token(Token = "0x400234A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Animator PanelInfoAnimator;

	[Token(Token = "0x400234B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Animator HitEffectAnimator;

	[Token(Token = "0x400234C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("Position for World Map.")]
	[Separator("Map Rect")]
	public Vector3 FullMapPosition;

	[Token(Token = "0x400234D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[Tooltip("Rotation for World Map.")]
	public Vector3 FullMapRotation;

	[Token(Token = "0x400234E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Tooltip("Size of World Map.")]
	public Vector2 FullMapSize;

	[Token(Token = "0x400234F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 MiniMapPosition;

	[Token(Token = "0x4002350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 MiniMapRotation;

	[Token(Token = "0x4002351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector2 MiniMapSize;

	[Token(Token = "0x4002352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Tooltip("Smooth Speed for MiniMap World Map transition.")]
	[Space(5f)]
	[Range(1f, 15f)]
	public float LerpTransition;

	[Token(Token = "0x4002353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[Separator("Drag Settings")]
	public bool CanDragMiniMap;

	[Token(Token = "0x4002354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	public bool DragOnlyOnFullScreen;

	[Token(Token = "0x4002355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
	public bool ResetOffSetOnChange;

	[Token(Token = "0x4002356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Vector2 DragMovementSpeed;

	[Token(Token = "0x4002357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector2 MaxOffSetPosition;

	[Token(Token = "0x4002358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Texture2D DragCursorIcon;

	[Token(Token = "0x4002359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Vector2 HotSpot;

	[Token(Token = "0x400235A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Separator("Picture Mode Settings")]
	[Tooltip("Texture for MiniMap renderer, you can take a snapshot from map.")]
	public Texture MapTexture;

	[Token(Token = "0x400235B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Color TintColor;

	[Token(Token = "0x400235C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Color SpecularColor;

	[Token(Token = "0x400235D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Color EmessiveColor;

	[Token(Token = "0x400235E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Range(0.1f, 4f)]
	public float EmissionAmount;

	[Token(Token = "0x400235F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Material ReferenceMat;

	[Token(Token = "0x4002360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[Space(3f)]
	public GameObject MapPlane;

	[Token(Token = "0x4002361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject AreaPrefab;

	[Token(Token = "0x4002362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public RectTransform WorldSpace;

	[Token(Token = "0x4002363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Separator("UI")]
	public Canvas m_Canvas;

	[Token(Token = "0x4002364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public RectTransform MiniMapUIRoot;

	[Token(Token = "0x4002365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public RectTransform IconsParent;

	[Token(Token = "0x4002366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Image PlayerIcon;

	[Token(Token = "0x4002367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public CanvasGroup RootAlpha;

	[Token(Token = "0x4002368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject ItemPrefabSimple;

	[Token(Token = "0x4002369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject HoofdPuntPrefab;

	[Token(Token = "0x400236A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Dictionary<string, Transform> ItemsList;

	[Token(Token = "0x400236C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Camera MiniMapCamera;

	[Token(Token = "0x400236D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Vector3 DragOffset;

	[Token(Token = "0x400236E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool DefaultRotationMode;

	[Token(Token = "0x400236F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private Vector3 DeafultMapRot;

	[Token(Token = "0x4002370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool DefaultRotationCircle;

	[Token(Token = "0x4002371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private GameObject plane;

	[Token(Token = "0x4002372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private GameObject areaInstance;

	[Token(Token = "0x4002373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float defaultYCameraPosition;

	[Token(Token = "0x4002374")]
	private const string MMHeightKey = "MinimapCameraHeight";

	[Token(Token = "0x4002375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private bool getDelayPositionCamera;

	[Token(Token = "0x4002376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
	private bool isAlphaComplete;

	[Token(Token = "0x4002378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x227")]
	private bool isPlanedCreated;

	[Token(Token = "0x4002379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private RectTransform PlayerIconTransform;

	[Token(Token = "0x400237A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Transform t;

	[Token(Token = "0x400237B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bl_MaskHelper _maskHelper;

	[Token(Token = "0x170002CF")]
	public bool isFullScreen
	{
		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xD671AC", Offset = "0xD671AC", VA = "0xD671AC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xD671B4", Offset = "0xD671B4", VA = "0xD671B4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170002D0")]
	public bool hasError
	{
		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xD671C0", Offset = "0xD671C0", VA = "0xD671C0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xD671C8", Offset = "0xD671C8", VA = "0xD671C8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170002D1")]
	public Transform Target
	{
		[Token(Token = "0x6001719")]
		[Address(RVA = "0xD68604", Offset = "0xD68604", VA = "0xD68604")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002D2")]
	public Vector3 TargetPosition
	{
		[Token(Token = "0x600171A")]
		[Address(RVA = "0xD686B8", Offset = "0xD686B8", VA = "0xD686B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170002D3")]
	private Transform m_Transform
	{
		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD6746C", Offset = "0xD6746C", VA = "0xD6746C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002D4")]
	private bl_MaskHelper m_maskHelper
	{
		[Token(Token = "0x600171C")]
		[Address(RVA = "0xD69084", Offset = "0xD69084", VA = "0xD69084")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0xD671D4", Offset = "0xD671D4", VA = "0xD671D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0xD67D30", Offset = "0xD67D30", VA = "0xD67D30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0xD676F4", Offset = "0xD676F4", VA = "0xD676F4")]
	private void CreateMapPlane(bool area)
	{
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0xD67F30", Offset = "0xD67F30", VA = "0xD67F30")]
	private void DelayPositionInvoke()
	{
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0xD67A78", Offset = "0xD67A78", VA = "0xD67A78")]
	public void ConfigureCamera3D()
	{
	}

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0xD67BB8", Offset = "0xD67BB8", VA = "0xD67BB8")]
	public void ConfigureWorlTarget()
	{
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0xD67F6C", Offset = "0xD67F6C", VA = "0xD67F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0xD6801C", Offset = "0xD6801C", VA = "0xD6801C")]
	private void PositionControll()
	{
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0xD68308", Offset = "0xD68308", VA = "0xD68308")]
	private void RotationControll()
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0xD68830", Offset = "0xD68830", VA = "0xD68830")]
	private void Inputs()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0xD68DAC", Offset = "0xD68DAC", VA = "0xD68DAC")]
	private void MapSize()
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0xD688B0", Offset = "0xD688B0", VA = "0xD688B0")]
	private void ToggleSize()
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0xD692CC", Offset = "0xD692CC", VA = "0xD692CC")]
	public void SetDragPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0xD69338", Offset = "0xD69338", VA = "0xD69338")]
	public void SetPointMark(Vector3 Position)
	{
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0xD69270", Offset = "0xD69270", VA = "0xD69270")]
	public void GoToTarget()
	{
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0xD6954C", Offset = "0xD6954C", VA = "0xD6954C")]
	[IteratorStateMachine(typeof(<ResetOffset>d__106))]
	private IEnumerator ResetOffset()
	{
		return null;
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0xD68D0C", Offset = "0xD68D0C", VA = "0xD68D0C")]
	public void ChangeHeight(bool b)
	{
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0xD695DC", Offset = "0xD695DC", VA = "0xD695DC")]
	public void DoHitEffect()
	{
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0xD67DC4", Offset = "0xD67DC4", VA = "0xD67DC4")]
	public Material CreateMaterial()
	{
		return null;
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0xD696D4", Offset = "0xD696D4", VA = "0xD696D4")]
	public bl_MiniMapItem CreateNewItem(bl_MMItemInfo item)
	{
		return null;
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0xD67500", Offset = "0xD67500", VA = "0xD67500")]
	public void SetHoofdPunt()
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0xD69058", Offset = "0xD69058", VA = "0xD69058")]
	private void ResetMapRotation()
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0xD6988C", Offset = "0xD6988C", VA = "0xD6988C")]
	public void RotationMap(bool mode)
	{
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0xD698A8", Offset = "0xD698A8", VA = "0xD698A8")]
	public void ChangeMapSize(bool fullscreen)
	{
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0xD698B4", Offset = "0xD698B4", VA = "0xD698B4")]
	public void SetTarget(GameObject t)
	{
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0xD698BC", Offset = "0xD698BC", VA = "0xD698BC")]
	public void SetMapTexture(Texture t)
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0xD69984", Offset = "0xD69984", VA = "0xD69984")]
	public void SetGridSize(float value)
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0xD69A4C", Offset = "0xD69A4C", VA = "0xD69A4C")]
	public void SetActiveGrid(bool active)
	{
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0xD69B58", Offset = "0xD69B58", VA = "0xD69B58")]
	public void SetMapRotation(bool dynamic)
	{
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0xD67408", Offset = "0xD67408", VA = "0xD67408")]
	private void GetMiniMapSize()
	{
	}

	[Token(Token = "0x6001717")]
	[Address(RVA = "0xD69B8C", Offset = "0xD69B8C", VA = "0xD69B8C")]
	public void GetFullMapSize()
	{
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0xD67CB8", Offset = "0xD67CB8", VA = "0xD67CB8")]
	[IteratorStateMachine(typeof(<StartFade>d__122))]
	private IEnumerator StartFade(float delay)
	{
		return null;
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0xD69C0C", Offset = "0xD69C0C", VA = "0xD69C0C")]
	public bl_MiniMap()
	{
	}
}
[Token(Token = "0x2000378")]
public class bl_MiniMapBounds : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400238C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Use UI editor Tool for scale the wordSpace")]
	public Color GizmoColor;

	[Token(Token = "0x600172A")]
	[Address(RVA = "0xD6A284", Offset = "0xD6A284", VA = "0xD6A284")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0xD6A370", Offset = "0xD6A370", VA = "0xD6A370")]
	public bl_MiniMapBounds()
	{
	}
}
[Token(Token = "0x2000379")]
public class bl_MiniMapCompass : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400238D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform Target;

	[Token(Token = "0x400238E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform CompassRoot;

	[Token(Token = "0x400238F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform North;

	[Token(Token = "0x4002390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform South;

	[Token(Token = "0x4002391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform East;

	[Token(Token = "0x4002392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform West;

	[Token(Token = "0x4002393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public int Grade;

	[Token(Token = "0x4002394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int Rotation;

	[Token(Token = "0x4002395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bl_MiniMap MiniMap;

	[Token(Token = "0x4002396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TMP_Text angleLbl;

	[Token(Token = "0x4002397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float[] values;

	[Token(Token = "0x4002398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string[] text;

	[Token(Token = "0x4002399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform t;

	[Token(Token = "0x170002D9")]
	private Transform m_Transform
	{
		[Token(Token = "0x6001730")]
		[Address(RVA = "0xD6A8B4", Offset = "0xD6A8B4", VA = "0xD6A8B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0xD6A384", Offset = "0xD6A384", VA = "0xD6A384")]
	private void Awake()
	{
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0xD6A4F4", Offset = "0xD6A4F4", VA = "0xD6A4F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0xD6AA2C", Offset = "0xD6AA2C", VA = "0xD6AA2C")]
	private float angle3602(Vector3 from, Vector3 to, Vector3 right)
	{
		return default(float);
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0xD6AB58", Offset = "0xD6AB58", VA = "0xD6AB58")]
	public float Angle360(Vector2 p1, Vector2 p2, [Optional] Vector2 o)
	{
		return default(float);
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0xD6AEC8", Offset = "0xD6AEC8", VA = "0xD6AEC8")]
	public bl_MiniMapCompass()
	{
	}
}
[Token(Token = "0x200037A")]
public class bl_MiniMapData : ScriptableObject
{
	[Token(Token = "0x400239A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject IconPrefab;

	[Token(Token = "0x400239B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ScreenShotPrefab;

	[Token(Token = "0x400239C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bl_MiniMapData _instance;

	[Token(Token = "0x170002DA")]
	public static bl_MiniMapData Instance
	{
		[Token(Token = "0x6001732")]
		[Address(RVA = "0xD6AED0", Offset = "0xD6AED0", VA = "0xD6AED0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0xD6AF9C", Offset = "0xD6AF9C", VA = "0xD6AF9C")]
	public bl_MiniMapData()
	{
	}
}
[Token(Token = "0x200037B")]
public enum Verticality
{
	[Token(Token = "0x400239E")]
	none,
	[Token(Token = "0x400239F")]
	up,
	[Token(Token = "0x40023A0")]
	down
}
[Token(Token = "0x200037C")]
public class bl_MiniMapItem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40023A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Transform to UI Icon will be follow")]
	[Separator("TARGET")]
	public Transform Target;

	[Token(Token = "0x40023A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool staticItem;

	[Token(Token = "0x40023A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Custom Position from target position")]
	public Vector3 OffSet;

	[Token(Token = "0x40023A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Separator("ICON")]
	public Sprite Icon;

	[Token(Token = "0x40023A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite DeathIcon;

	[Token(Token = "0x40023A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color IconColor;

	[Token(Token = "0x40023A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(1f, 100f)]
	public float Size;

	[Token(Token = "0x40023A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Separator("CIRCLE AREA")]
	public bool ShowCircleArea;

	[Token(Token = "0x40023A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(1f, 100f)]
	public float CircleAreaRadius;

	[Token(Token = "0x40023AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color CircleAreaColor;

	[Token(Token = "0x40023AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("UI can interact when press it?")]
	[Separator("ICON BUTTON")]
	public bool isInteractable;

	[Token(Token = "0x40023AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[TextArea(2, 2)]
	public string InfoItem;

	[Token(Token = "0x40023AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Can Icon show when is off screen?")]
	[Separator("SETTINGS")]
	public bool OffScreen;

	[Token(Token = "0x40023AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool DestroyWithObject;

	[Token(Token = "0x40023AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Range(0f, 5f)]
	public float BorderOffScreen;

	[Token(Token = "0x40023B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Range(1f, 50f)]
	public float OffScreenSize;

	[Token(Token = "0x40023B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool isHoofdPunt;

	[Token(Token = "0x40023B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("Time before render/show item in minimap after instance")]
	[Range(0f, 3f)]
	public float RenderDelay;

	[Token(Token = "0x40023B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public ItemEffect m_Effect;

	[Token(Token = "0x40023B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool useCustomIconPrefab;

	[Token(Token = "0x40023B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject CustomIconPrefab;

	[Token(Token = "0x40023B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite m_DeathIcon;

	[Token(Token = "0x40023B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite m_neutralIcon;

	[Token(Token = "0x40023B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite m_upIcon;

	[Token(Token = "0x40023B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite m_downIcon;

	[Token(Token = "0x40023BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool m_Enemy;

	[Token(Token = "0x40023BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool m_LocalPlayer;

	[Token(Token = "0x40023BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public bool m_RadarKillStreak;

	[Token(Token = "0x40023BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	public bool m_Dead;

	[Token(Token = "0x40023BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_Alpha;

	[Token(Token = "0x40023BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int UID;

	[Token(Token = "0x40023C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool debug;

	[Token(Token = "0x40023C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Verticality vertical;

	[Token(Token = "0x40023C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CanvasGroup graphicCanvasGroup;

	[Token(Token = "0x40023C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image Graphic;

	[Token(Token = "0x40023C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public RectTransform GraphicRect;

	[Token(Token = "0x40023C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public RectTransform RectRoot;

	[Token(Token = "0x40023C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject cacheItem;

	[Token(Token = "0x40023C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RectTransform CircleAreaRect;

	[Token(Token = "0x40023C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 position;

	[Token(Token = "0x40023C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bl_MiniMap MiniMap;

	[Token(Token = "0x40023CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 screenPos;

	[Token(Token = "0x40023CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector2 sizeDelta;

	[Token(Token = "0x40023CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector2 correctSizeDelta;

	[Token(Token = "0x40023CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public LevelManager m_LevelManager;

	[Token(Token = "0x40023CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Color32 colorFriendly;

	[Token(Token = "0x40023CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public Color32 colorEnemy;

	[Token(Token = "0x40023D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool isPhantom;

	[Token(Token = "0x40023D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float deadTimer;

	[Token(Token = "0x40023D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float DeadTimer;

	[Token(Token = "0x40023D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bl_MiniMap _minimap;

	[Token(Token = "0x40023D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bl_MiniMap m_miniMap;

	[Token(Token = "0x170002DB")]
	public Vector3 TargetPosition
	{
		[Token(Token = "0x6001743")]
		[Address(RVA = "0xD6BF20", Offset = "0xD6BF20", VA = "0xD6BF20")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0xD6AFA4", Offset = "0xD6AFA4", VA = "0xD6AFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0xD6B064", Offset = "0xD6B064", VA = "0xD6B064")]
	public void SetEnemy(bool enemy, bool setPhantom = false)
	{
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0xD6B238", Offset = "0xD6B238", VA = "0xD6B238")]
	public void SetVertical(Verticality verticality)
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0xD6B380", Offset = "0xD6B380", VA = "0xD6B380")]
	private void CreateIcon()
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0xD6B740", Offset = "0xD6B740", VA = "0xD6B740")]
	public void KillPlayer(bool teammate)
	{
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0xD6B7A0", Offset = "0xD6B7A0", VA = "0xD6B7A0")]
	public void RevivePlayer(bool teammate)
	{
	}

	[Token(Token = "0x600173A")]
	[Address(RVA = "0xD6B860", Offset = "0xD6B860", VA = "0xD6B860")]
	public void UpdateMinimap()
	{
	}

	[Token(Token = "0x600173B")]
	[Address(RVA = "0xD6B6A0", Offset = "0xD6B6A0", VA = "0xD6B6A0")]
	private void StartEffect()
	{
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0xD6BFFC", Offset = "0xD6BFFC", VA = "0xD6BFFC")]
	public void DestroyItem(bool inmediate)
	{
	}

	[Token(Token = "0x600173D")]
	[Address(RVA = "0xD6C17C", Offset = "0xD6C17C", VA = "0xD6C17C")]
	public void SetIcon(Sprite ico)
	{
	}

	[Token(Token = "0x600173E")]
	[Address(RVA = "0xD6C27C", Offset = "0xD6C27C", VA = "0xD6C27C")]
	public void SetCircleArea(float radius, Color AreaColor)
	{
	}

	[Token(Token = "0x600173F")]
	[Address(RVA = "0xD6C31C", Offset = "0xD6C31C", VA = "0xD6C31C")]
	public void HideCircleArea()
	{
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0xD6C37C", Offset = "0xD6C37C", VA = "0xD6C37C")]
	public void HideItem()
	{
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0xD6C444", Offset = "0xD6C444", VA = "0xD6C444")]
	public void ShowItem()
	{
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0xD6C538", Offset = "0xD6C538", VA = "0xD6C538")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0xD6C610", Offset = "0xD6C610", VA = "0xD6C610")]
	public void BlinkOff()
	{
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0xD6C614", Offset = "0xD6C614", VA = "0xD6C614")]
	public bl_MiniMapItem()
	{
	}
}
[Token(Token = "0x200037D")]
public class bl_MiniMapTexture : UnityEngine.MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40023D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform Area;

	[Token(Token = "0x40023D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bl_MiniMap MiniMap;

	[Token(Token = "0x6001746")]
	[Address(RVA = "0xD6C764", Offset = "0xD6C764", VA = "0xD6C764")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0xD6C7F4", Offset = "0xD6C7F4", VA = "0xD6C7F4", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0xD6C974", Offset = "0xD6C974", VA = "0xD6C974")]
	private void SpawnPointer(Vector2 position)
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0xD6C9FC", Offset = "0xD6C9FC", VA = "0xD6C9FC")]
	public bl_MiniMapTexture()
	{
	}
}
[Token(Token = "0x200037E")]
public class bl_MapPointer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40023D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PlayerTag;

	[Token(Token = "0x40023D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip SpawnSound;

	[Token(Token = "0x40023D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer m_Render;

	[Token(Token = "0x40023DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource ASource;

	[Token(Token = "0x600174A")]
	[Address(RVA = "0xD6CA04", Offset = "0xD6CA04", VA = "0xD6CA04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0xD69490", Offset = "0xD69490", VA = "0xD69490")]
	public void SetColor(Color c)
	{
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0xD6CABC", Offset = "0xD6CABC", VA = "0xD6CABC")]
	private void OnTriggerEnter(Collider c)
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0xD6CB5C", Offset = "0xD6CB5C", VA = "0xD6CB5C")]
	public bl_MapPointer()
	{
	}
}
[Token(Token = "0x200037F")]
public class bl_MaskHelper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40023DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Mask")]
	public Sprite MiniMapMask;

	[Token(Token = "0x40023DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite WorldMapMask;

	[Token(Token = "0x40023DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("References")]
	[SerializeField]
	private Image Background;

	[Token(Token = "0x40023DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite MiniMapBackGround;

	[Token(Token = "0x40023DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite WorldMapBackGround;

	[Token(Token = "0x40023E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform MaskIconRoot;

	[Token(Token = "0x40023E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] OnFullScreenDisable;

	[Token(Token = "0x40023E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image _image;

	[Token(Token = "0x170002DC")]
	private Image m_image
	{
		[Token(Token = "0x600174F")]
		[Address(RVA = "0xD6CBD0", Offset = "0xD6CBD0", VA = "0xD6CBD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0xD6CBAC", Offset = "0xD6CBAC", VA = "0xD6CBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0xD69134", Offset = "0xD69134", VA = "0xD69134")]
	public void OnChange(bool full = false)
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0xD66CEC", Offset = "0xD66CEC", VA = "0xD66CEC")]
	public void SetMaskedIcon(RectTransform trans)
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0xD6CC64", Offset = "0xD6CC64", VA = "0xD6CC64")]
	public bl_MaskHelper()
	{
	}
}
[Token(Token = "0x2000380")]
public class bl_MiniMapDragArea : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler, IPointerUpHandler
{
	[Token(Token = "0x40023E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bl_MiniMap MiniMap;

	[Token(Token = "0x40023E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 origin;

	[Token(Token = "0x40023E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 direction;

	[Token(Token = "0x40023E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 smoothDirection;

	[Token(Token = "0x40023E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool touched;

	[Token(Token = "0x40023E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int pointerID;

	[Token(Token = "0x40023E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D cursorIcon;

	[Token(Token = "0x6001753")]
	[Address(RVA = "0xD6CC6C", Offset = "0xD6CC6C", VA = "0xD6CC6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0xD6CD14", Offset = "0xD6CD14", VA = "0xD6CD14", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0xD6CDF0", Offset = "0xD6CDF0", VA = "0xD6CDF0", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0xD6CED8", Offset = "0xD6CED8", VA = "0xD6CED8", Slot = "6")]
	public void OnPointerUp(PointerEventData data)
	{
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0xD6CFE0", Offset = "0xD6CFE0", VA = "0xD6CFE0")]
	public bl_MiniMapDragArea()
	{
	}
}
[Token(Token = "0x2000381")]
public enum ItemEffect
{
	[Token(Token = "0x40023EB")]
	Pulsing,
	[Token(Token = "0x40023EC")]
	Fade,
	[Token(Token = "0x40023ED")]
	None
}
[Token(Token = "0x2000382")]
public class bl_MMItemInfo
{
	[Token(Token = "0x40023EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Position;

	[Token(Token = "0x40023EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Target;

	[Token(Token = "0x40023F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Size;

	[Token(Token = "0x40023F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color Color;

	[Token(Token = "0x40023F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool Interactable;

	[Token(Token = "0x40023F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite Sprite;

	[Token(Token = "0x40023F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ItemEffect Effect;

	[Token(Token = "0x6001758")]
	[Address(RVA = "0xD6CFE8", Offset = "0xD6CFE8", VA = "0xD6CFE8")]
	public bl_MMItemInfo(Vector3 position)
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0xD6D044", Offset = "0xD6D044", VA = "0xD6D044")]
	public bl_MMItemInfo(Transform target)
	{
	}
}
[Token(Token = "0x2000383")]
public static class bl_MiniMapUtils
{
	[Token(Token = "0x40023F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera _renderCamera;

	[Token(Token = "0x170002DD")]
	public static Camera RenderCamera
	{
		[Token(Token = "0x600175D")]
		[Address(RVA = "0xD6A948", Offset = "0xD6A948", VA = "0xD6A948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0xD687A0", Offset = "0xD687A0", VA = "0xD687A0")]
	public static Vector3 CalculateMiniMapPosition(Vector3 viewPoint, RectTransform maxAnchor)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0xD66D10", Offset = "0xD66D10", VA = "0xD66D10")]
	public static bl_MiniMap GetMiniMap(int id = 0)
	{
		return null;
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0xD6D08C", Offset = "0xD6D08C", VA = "0xD6D08C")]
	public static bool IsInLayerMask(int layer, LayerMask layermask)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000384")]
public class bl_MMExampleManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40023F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MapID;

	[Token(Token = "0x40023F7")]
	public const string MMName = "MMManagerExample";

	[Token(Token = "0x40023F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] Maps;

	[Token(Token = "0x40023F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool Rotation;

	[Token(Token = "0x40023FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bl_MiniMap CurrentMiniMap;

	[Token(Token = "0x170002DE")]
	public bl_MiniMap GetActiveMiniMap
	{
		[Token(Token = "0x6001767")]
		[Address(RVA = "0xD6D3E0", Offset = "0xD6D3E0", VA = "0xD6D3E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0xD6D0D8", Offset = "0xD6D0D8", VA = "0xD6D0D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0xD6D130", Offset = "0xD6D130", VA = "0xD6D130")]
	private void ApplyMap()
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0xD6D210", Offset = "0xD6D210", VA = "0xD6D210")]
	private void Update()
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0xD6D23C", Offset = "0xD6D23C", VA = "0xD6D23C")]
	private void ChangeRotation()
	{
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0xD6D2D4", Offset = "0xD6D2D4", VA = "0xD6D2D4")]
	public void SetIconMulti(float v)
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0xD6D2F0", Offset = "0xD6D2F0", VA = "0xD6D2F0")]
	public void SetGridSize(float v)
	{
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0xD6D308", Offset = "0xD6D308", VA = "0xD6D308")]
	public void SetGrid(bool v)
	{
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0xD6D324", Offset = "0xD6D324", VA = "0xD6D324")]
	public void SetDynamicRot(bool v)
	{
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0xD6D340", Offset = "0xD6D340", VA = "0xD6D340")]
	public void ChangeMap(int i)
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0xD6D450", Offset = "0xD6D450", VA = "0xD6D450")]
	public bl_MMExampleManager()
	{
	}
}
[Token(Token = "0x2000385")]
public class ui_Counter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40023FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int m_counterStart;

	[Token(Token = "0x40023FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI m_textPro;

	[Token(Token = "0x40023FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_counter;

	[Token(Token = "0x6001769")]
	[Address(RVA = "0xD6D468", Offset = "0xD6D468", VA = "0xD6D468")]
	private void Awake()
	{
	}

	[Token(Token = "0x600176A")]
	[Address(RVA = "0xD6D4B8", Offset = "0xD6D4B8", VA = "0xD6D4B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0xD6D518", Offset = "0xD6D518", VA = "0xD6D518")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0xD6D530", Offset = "0xD6D530", VA = "0xD6D530")]
	private void CounterUpdate()
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0xD6D58C", Offset = "0xD6D58C", VA = "0xD6D58C")]
	public ui_Counter()
	{
	}
}
[Token(Token = "0x2000386")]
public static class DebugC
{
	[Token(Token = "0x600176E")]
	[Address(RVA = "0xD6D59C", Offset = "0xD6D59C", VA = "0xD6D59C")]
	public static void LogPM(string _log)
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0xD6D638", Offset = "0xD6D638", VA = "0xD6D638")]
	public static void LogErrorPM(string _log)
	{
	}
}
[Token(Token = "0x2000387")]
public class LoadSceneOnAwake : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40023FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_LoadedScene;

	[Token(Token = "0x40023FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_LoadScene;

	[Token(Token = "0x4002400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string m_SceneToLoad;

	[Token(Token = "0x6001770")]
	[Address(RVA = "0xD6D6D8", Offset = "0xD6D6D8", VA = "0xD6D6D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0xD6D81C", Offset = "0xD6D81C", VA = "0xD6D81C")]
	public LoadSceneOnAwake()
	{
	}
}
[Token(Token = "0x2000388")]
public class SimpleUIPanel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000389")]
	[CompilerGenerated]
	private sealed class <C_Show>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleUIPanel <>4__this;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool show;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <targetAlpha>5__2;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentVelocity>5__3;

		[Token(Token = "0x170002DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0xD6DC54", Offset = "0xD6DC54", VA = "0xD6DC54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0xD6DC9C", Offset = "0xD6DC9C", VA = "0xD6DC9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xD6DA78", Offset = "0xD6DA78", VA = "0xD6DA78")]
		[DebuggerHidden]
		public <C_Show>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xD6DABC", Offset = "0xD6DABC", VA = "0xD6DABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xD6DAC0", Offset = "0xD6DAC0", VA = "0xD6DAC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xD6DC5C", Offset = "0xD6DC5C", VA = "0xD6DC5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_DisableOnAwake;

	[Token(Token = "0x4002402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CanvasGroup m_CanvasGroup;

	[Token(Token = "0x4002403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Range(0.05f, 1.5f)]
	private float m_ShowDuration;

	[Token(Token = "0x4002404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hideOffsetSettings;

	[Token(Token = "0x4002405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool skipShow;

	[Token(Token = "0x4002406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine cShowEffect;

	[Token(Token = "0x4002407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool lastShow;

	[Token(Token = "0x6001772")]
	[Address(RVA = "0xD6D86C", Offset = "0xD6D86C", VA = "0xD6D86C")]
	public void Show(bool show)
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0xD6DA28", Offset = "0xD6DA28", VA = "0xD6DA28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0xD6D9AC", Offset = "0xD6D9AC", VA = "0xD6D9AC")]
	[IteratorStateMachine(typeof(<C_Show>d__9))]
	private IEnumerator C_Show(bool show)
	{
		return null;
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0xD6DAA0", Offset = "0xD6DAA0", VA = "0xD6DAA0")]
	public SimpleUIPanel()
	{
	}
}
[Token(Token = "0x200038A")]
[RequireComponent(typeof(Toggle))]
public class UIToggleEvents : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200038B")]
	private class ToggleEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6001780")]
		[Address(RVA = "0xD6DF98", Offset = "0xD6DF98", VA = "0xD6DF98")]
		public ToggleEvent()
		{
		}
	}

	[Token(Token = "0x400240E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent OnToggledOff;

	[Token(Token = "0x400240F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent OnToggledOn;

	[Token(Token = "0x4002410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ToggleEvent OnToggled;

	[Token(Token = "0x4002411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent<bool> OnEnabled;

	[Token(Token = "0x4002412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool invokeOnAwake;

	[Token(Token = "0x4002413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Toggle m_Toggle;

	[Token(Token = "0x600177C")]
	[Address(RVA = "0xD6DCA4", Offset = "0xD6DCA4", VA = "0xD6DCA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0xD6DE58", Offset = "0xD6DE58", VA = "0xD6DE58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0xD6DDE0", Offset = "0xD6DDE0", VA = "0xD6DDE0")]
	private void OnValueChanged(bool value)
	{
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0xD6DF90", Offset = "0xD6DF90", VA = "0xD6DF90")]
	public UIToggleEvents()
	{
	}
}
[Token(Token = "0x200038C")]
public class AIAudioHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001781")]
	[Address(RVA = "0xD6DFE0", Offset = "0xD6DFE0", VA = "0xD6DFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0xD6DFE4", Offset = "0xD6DFE4", VA = "0xD6DFE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0xD6DFE8", Offset = "0xD6DFE8", VA = "0xD6DFE8")]
	public AIAudioHandler()
	{
	}
}
[Token(Token = "0x200038D")]
public class AIDeathHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001784")]
	[Address(RVA = "0xD6DFF0", Offset = "0xD6DFF0", VA = "0xD6DFF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0xD6DFF4", Offset = "0xD6DFF4", VA = "0xD6DFF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0xD6DFF8", Offset = "0xD6DFF8", VA = "0xD6DFF8")]
	public AIDeathHandler()
	{
	}
}
[Token(Token = "0x200038E")]
public class AIVitals : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001787")]
	[Address(RVA = "0xD6E000", Offset = "0xD6E000", VA = "0xD6E000")]
	private void Start()
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0xD6E004", Offset = "0xD6E004", VA = "0xD6E004")]
	private void Update()
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0xD6E008", Offset = "0xD6E008", VA = "0xD6E008")]
	public AIVitals()
	{
	}
}
[Token(Token = "0x200038F")]
public class MeasureSpaceAround : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x600178A")]
	[Address(RVA = "0xD6E010", Offset = "0xD6E010", VA = "0xD6E010")]
	private void DrawCircle(Vector3 center, float radius, Color color)
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0xD6E148", Offset = "0xD6E148", VA = "0xD6E148")]
	private void Update()
	{
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0xD6E424", Offset = "0xD6E424", VA = "0xD6E424")]
	public MeasureSpaceAround()
	{
	}
}
[Token(Token = "0x2000390")]
public static class AlvoRaiseEventsEXT
{
	[Token(Token = "0x600178D")]
	[Address(RVA = "0xD6E434", Offset = "0xD6E434", VA = "0xD6E434")]
	public static byte Value(this AlvoRaiseEvent alvoRaiseEvent)
	{
		return default(byte);
	}
}
[Token(Token = "0x2000391")]
public enum AlvoRaiseEvent
{
	[Token(Token = "0x4002416")]
	CloseRoom = 71,
	[Token(Token = "0x4002417")]
	NewMatch = 50,
	[Token(Token = "0x4002418")]
	NewPrivateMatch = 51,
	[Token(Token = "0x4002419")]
	RequestPermission = 3,
	[Token(Token = "0x400241A")]
	ReceivedPermission = 4,
	[Token(Token = "0x400241B")]
	PlayerSpawned = 5
}
[Token(Token = "0x2000392")]
public class ASAutoVolume : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000393")]
	public class AS
	{
		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioType tieTo;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float baseVolume;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Leave as 0 to auto assign")]
		public byte id;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[HideInInspector]
		public byte percentageOverride;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Tween reverbAreaTween;

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xD6ED10", Offset = "0xD6ED10", VA = "0xD6ED10")]
		public AS()
		{
		}
	}

	[Token(Token = "0x2000394")]
	public enum AudioType
	{
		[Token(Token = "0x4002428")]
		sfx,
		[Token(Token = "0x4002429")]
		ambience,
		[Token(Token = "0x400242A")]
		music
	}

	[Token(Token = "0x400241C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AS[] audioSources;

	[Token(Token = "0x400241D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<byte, AS> ASDictionary;

	[Token(Token = "0x400241E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ReverbZoneArea currentArea;

	[Token(Token = "0x400241F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VrAudioManager manager;

	[Token(Token = "0x600178E")]
	[Address(RVA = "0xD6E438", Offset = "0xD6E438", VA = "0xD6E438")]
	private void Awake()
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0xD6E774", Offset = "0xD6E774", VA = "0xD6E774")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0xD6E8A8", Offset = "0xD6E8A8", VA = "0xD6E8A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0xD6E9A8", Offset = "0xD6E9A8", VA = "0xD6E9A8")]
	public void AdjustVolume()
	{
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0xD6EBFC", Offset = "0xD6EBFC", VA = "0xD6EBFC")]
	[ContextMenu("Change element names")]
	public void SetElementsNames()
	{
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0xD6E43C", Offset = "0xD6E43C", VA = "0xD6E43C")]
	[ContextMenu("Assign unique IDs")]
	public void AssignUniqueIds()
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0xD6ED08", Offset = "0xD6ED08", VA = "0xD6ED08")]
	public ASAutoVolume()
	{
	}
}
[Token(Token = "0x2000395")]
public class AutoPlayAmbience : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000396")]
	[CompilerGenerated]
	private sealed class <PlaySources>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoPlayAmbience <>4__this;

		[Token(Token = "0x170002E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0xD6F218", Offset = "0xD6F218", VA = "0xD6F218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0xD6F260", Offset = "0xD6F260", VA = "0xD6F260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD6EEB8", Offset = "0xD6EEB8", VA = "0xD6EEB8")]
		[DebuggerHidden]
		public <PlaySources>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD6EFF0", Offset = "0xD6EFF0", VA = "0xD6EFF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD6EFF4", Offset = "0xD6EFF4", VA = "0xD6EFF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xD6F220", Offset = "0xD6F220", VA = "0xD6F220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400242B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource[] random3dAudioSources;

	[Token(Token = "0x400242C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] delay;

	[Token(Token = "0x400242D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> indexes;

	[Token(Token = "0x400242E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<WaitForSeconds> random3dSfxDelay;

	[Token(Token = "0x6001796")]
	[Address(RVA = "0xD6ED18", Offset = "0xD6ED18", VA = "0xD6ED18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0xD6EE50", Offset = "0xD6EE50", VA = "0xD6EE50")]
	[IteratorStateMachine(typeof(<PlaySources>d__5))]
	private IEnumerator PlaySources()
	{
		return null;
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0xD6EEE0", Offset = "0xD6EEE0", VA = "0xD6EEE0")]
	public AutoPlayAmbience()
	{
	}
}
[Token(Token = "0x2000397")]
public class ReverbZoneArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000398")]
	private class AudioReverbZoneCache
	{
		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioReverbZone m_AudioReverbZone;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_OriginalMinDistance;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_OriginalMaxDistance;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tween m_MinTween;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Tween m_MaxTween;

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xD6F3C8", Offset = "0xD6F3C8", VA = "0xD6F3C8")]
		public AudioReverbZoneCache()
		{
		}
	}

	[Token(Token = "0x4002432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject reverbZoneWrap;

	[Token(Token = "0x4002433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource m_WindTunnel;

	[Token(Token = "0x4002434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_WindTunnelVolumeTowardsInside;

	[Token(Token = "0x4002435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_WindTunnelVolumeTowardsOutside;

	[Token(Token = "0x4002436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ASAutoVolume autoVolume;

	[Token(Token = "0x4002437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public byte[] ASToLower;

	[Token(Token = "0x4002438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 100f)]
	public byte percentageToLowerTo;

	[Token(Token = "0x4002439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public byte[] sourcesToPlayInside;

	[Token(Token = "0x400243A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VrAudioManager audioManager;

	[Token(Token = "0x400243B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Assign if there are multiple triggers for this area")]
	public ReverbZoneAreaTrigger[] triggers;

	[Token(Token = "0x400243C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space]
	public ReverbZoneArea overlappingArea;

	[Token(Token = "0x400243D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When entering an overlapping area exclude these from modifying when exiting (as the overlap area will handle it)")]
	public byte[] overlapExcludeFromModifying;

	[Token(Token = "0x400243E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool enabledArea;

	[Token(Token = "0x400243F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioReverbZoneCache[] m_audioReverbZones;

	[Token(Token = "0x4002440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Tween m_windTunnelTween;

	[Token(Token = "0x600179F")]
	[Address(RVA = "0xD6F268", Offset = "0xD6F268", VA = "0xD6F268")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0xD6F3D0", Offset = "0xD6F3D0", VA = "0xD6F3D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0xD6F420", Offset = "0xD6F420", VA = "0xD6F420")]
	public void OnTriggerEvent(bool enableReverbZone, byte assesPercentageTarget, ReverbZoneAreaTrigger eventCaller)
	{
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0xD6FE58", Offset = "0xD6FE58", VA = "0xD6FE58")]
	public void ActivateWindTunnel(Vector3 point, bool goingIn)
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0xD700E4", Offset = "0xD700E4", VA = "0xD700E4")]
	public ReverbZoneArea()
	{
	}
}
[Token(Token = "0x200039C")]
public class ReverbZoneAreaTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200039D")]
	[CompilerGenerated]
	private sealed class <OnEnableDelayed>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReverbZoneAreaTrigger <>4__this;

		[Token(Token = "0x170002E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0xD70DF0", Offset = "0xD70DF0", VA = "0xD70DF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xD70E38", Offset = "0xD70E38", VA = "0xD70E38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xD703F0", Offset = "0xD703F0", VA = "0xD703F0")]
		[DebuggerHidden]
		public <OnEnableDelayed>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xD70CD0", Offset = "0xD70CD0", VA = "0xD70CD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xD70CD4", Offset = "0xD70CD4", VA = "0xD70CD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xD70DF8", Offset = "0xD70DF8", VA = "0xD70DF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039E")]
	[CompilerGenerated]
	private sealed class <DoRefreshCollider>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReverbZoneAreaTrigger <>4__this;

		[Token(Token = "0x170002E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xD70F38", Offset = "0xD70F38", VA = "0xD70F38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0xD70F80", Offset = "0xD70F80", VA = "0xD70F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xD705BC", Offset = "0xD705BC", VA = "0xD705BC")]
		[DebuggerHidden]
		public <DoRefreshCollider>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xD70E40", Offset = "0xD70E40", VA = "0xD70E40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xD70E44", Offset = "0xD70E44", VA = "0xD70E44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xD70F40", Offset = "0xD70F40", VA = "0xD70F40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400244A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_TriggerWindTunnel;

	[Token(Token = "0x400244B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReverbZoneArea area;

	[Token(Token = "0x400244C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool exited;

	[Token(Token = "0x400244D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider m_collider;

	[Token(Token = "0x400244E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine m_refreshingCoroutine;

	[Token(Token = "0x400244F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds m_refreshDelay;

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0xD70308", Offset = "0xD70308", VA = "0xD70308")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0xD70368", Offset = "0xD70368", VA = "0xD70368")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0xD70388", Offset = "0xD70388", VA = "0xD70388")]
	[IteratorStateMachine(typeof(<OnEnableDelayed>d__8))]
	private IEnumerator OnEnableDelayed()
	{
		return null;
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0xD70418", Offset = "0xD70418", VA = "0xD70418")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0xD70514", Offset = "0xD70514", VA = "0xD70514")]
	private void RefreshCollider(LevelManager.EntityState newEntityState)
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0xD70554", Offset = "0xD70554", VA = "0xD70554")]
	[IteratorStateMachine(typeof(<DoRefreshCollider>d__11))]
	private IEnumerator DoRefreshCollider()
	{
		return null;
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0xD705E4", Offset = "0xD705E4", VA = "0xD705E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0xD70688", Offset = "0xD70688", VA = "0xD70688")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0xD6FD14", Offset = "0xD6FD14", VA = "0xD6FD14")]
	public Vector3 GetClosestPointOnBoundsEdge()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0xD70710", Offset = "0xD70710", VA = "0xD70710")]
	private Vector3 ClosestPointsOnBoundsEdge(Vector3 point, Bounds bounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0xD70C60", Offset = "0xD70C60", VA = "0xD70C60")]
	public ReverbZoneAreaTrigger()
	{
	}
}
[Token(Token = "0x200039F")]
public class DevelopmentWindow
{
	[Token(Token = "0x60017C7")]
	[Address(RVA = "0xD70F88", Offset = "0xD70F88", VA = "0xD70F88")]
	public static void EndGame()
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0xD71138", Offset = "0xD71138", VA = "0xD71138")]
	public static void LeaveGame()
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0xD71210", Offset = "0xD71210", VA = "0xD71210")]
	public static void TurnOnOffBots()
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0xD7132C", Offset = "0xD7132C", VA = "0xD7132C")]
	public DevelopmentWindow()
	{
	}
}
[Token(Token = "0x20003A0")]
public static class GamemodeEnumEXT
{
	[Token(Token = "0x60017CB")]
	[Address(RVA = "0xD71334", Offset = "0xD71334", VA = "0xD71334")]
	public static int Value(this GameMode gamemode)
	{
		return default(int);
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0xD71338", Offset = "0xD71338", VA = "0xD71338")]
	public static bool JointTeamMode(this GameMode gamemode)
	{
		return default(bool);
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0xD71358", Offset = "0xD71358", VA = "0xD71358")]
	public static bool IsTeamModeOrZMB(this GameMode gameMode)
	{
		return default(bool);
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0xD7137C", Offset = "0xD7137C", VA = "0xD7137C")]
	public static bool Needs2Players(this GameMode gameMode)
	{
		return default(bool);
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0xD7139C", Offset = "0xD7139C", VA = "0xD7139C")]
	public static bool NeedsTeamBalance(this GameMode gameMode)
	{
		return default(bool);
	}
}
[Token(Token = "0x20003A1")]
public enum GameMode
{
	[Token(Token = "0x4002457")]
	LOBBY,
	[Token(Token = "0x4002458")]
	TDM,
	[Token(Token = "0x4002459")]
	FFA,
	[Token(Token = "0x400245A")]
	SND,
	[Token(Token = "0x400245B")]
	ZMB,
	[Token(Token = "0x400245C")]
	HP,
	[Token(Token = "0x400245D")]
	TUTORIAL,
	[Token(Token = "0x400245E")]
	PRIVATE_LOBBY
}
[Token(Token = "0x20003A2")]
[CreateAssetMenu(fileName = "Gamemode Settings", menuName = "Alvo/Gamemode/Settings")]
public class GamemodeSettings : ScriptableObject
{
	[Token(Token = "0x400245F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool perksAllowed;

	[Token(Token = "0x4002460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool perksIgnoreLoadout;

	[Token(Token = "0x4002461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Space]
	public bool killstreaksAllowed;

	[Token(Token = "0x4002462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool includeArmor;

	[Token(Token = "0x4002463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Space]
	public bool autoSpawn;

	[Token(Token = "0x4002464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Determines if damage should be made to your teammates")]
	[Space]
	public bool teamBased;

	[Token(Token = "0x4002465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool allowBots;

	[Token(Token = "0x4002466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Space]
	public bool goDownWhenKilled;

	[Token(Token = "0x4002467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bleedingOutTime;

	[Token(Token = "0x4002468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float reviveOthersTime;

	[Token(Token = "0x4002469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float reviveSelfTime;

	[Token(Token = "0x400246A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool countAssists;

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0xD713A8", Offset = "0xD713A8", VA = "0xD713A8")]
	public GamemodeSettings()
	{
	}
}
[Token(Token = "0x20003A3")]
public class BHapticsVR : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	[CompilerGenerated]
	private sealed class <DoHeartBeat>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BHapticsVR <>4__this;

		[Token(Token = "0x170002E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xD72500", Offset = "0xD72500", VA = "0xD72500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xD72548", Offset = "0xD72548", VA = "0xD72548", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xD72298", Offset = "0xD72298", VA = "0xD72298")]
		[DebuggerHidden]
		public <DoHeartBeat>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xD72438", Offset = "0xD72438", VA = "0xD72438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xD7243C", Offset = "0xD7243C", VA = "0xD7243C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xD72508", Offset = "0xD72508", VA = "0xD72508", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400246B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BHapticsVR Instance;

	[Token(Token = "0x400246C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly WaitForSeconds m_heartBeatTime;

	[Token(Token = "0x400246D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine m_lowHealthHeartBeatCoroutine;

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0xD713C4", Offset = "0xD713C4", VA = "0xD713C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0xD71410", Offset = "0xD71410", VA = "0xD71410")]
	public void PlayDamage(BodyPart bodyPart, Vector3 firePos)
	{
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0xD71AB4", Offset = "0xD71AB4", VA = "0xD71AB4")]
	public void PlayRecoil(WeaponBehavior weapon, bool bothHands, bool leftArm, bool bayonet)
	{
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0xD71D5C", Offset = "0xD71D5C", VA = "0xD71D5C")]
	public static void Land()
	{
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0xD71E04", Offset = "0xD71E04", VA = "0xD71E04")]
	public static void JumpStart()
	{
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0xD71E6C", Offset = "0xD71E6C", VA = "0xD71E6C")]
	public static void FrontVest()
	{
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0xD71F14", Offset = "0xD71F14", VA = "0xD71F14")]
	public static void BackVest()
	{
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0xD71FD0", Offset = "0xD71FD0", VA = "0xD71FD0")]
	public static void PlayGameStart()
	{
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0xD72038", Offset = "0xD72038", VA = "0xD72038")]
	public static void GrabVestSlot(bool vestLeft, bool leftHand)
	{
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0xD72128", Offset = "0xD72128", VA = "0xD72128")]
	public static void Grab(bool leftHand)
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0xD721BC", Offset = "0xD721BC", VA = "0xD721BC")]
	public static void HeartBeat()
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0xD72230", Offset = "0xD72230", VA = "0xD72230")]
	[IteratorStateMachine(typeof(<DoHeartBeat>d__14))]
	private IEnumerator DoHeartBeat()
	{
		return null;
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0xD722C0", Offset = "0xD722C0", VA = "0xD722C0")]
	public static void ReloadStep(bool primaryHand)
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0xD723CC", Offset = "0xD723CC", VA = "0xD723CC")]
	public BHapticsVR()
	{
	}
}
[Token(Token = "0x20003A5")]
public class ForceTubeVRSettings : VRSettingsSubmenu
{
	[Token(Token = "0x4002471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image m_ProTubeSprite1;

	[Token(Token = "0x4002472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image m_ProTubeSprite2;

	[Token(Token = "0x4002473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeaponBehavior[] m_SimulationWeaponsPrefab;

	[Token(Token = "0x4002474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WeaponBehavior[] m_SimulationWeapons;

	[Token(Token = "0x4002475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Color m_visible;

	[Token(Token = "0x4002476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly Color m_invisible;

	[Token(Token = "0x4002477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color m_sprite1Target;

	[Token(Token = "0x4002478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color m_sprite2Target;

	[Token(Token = "0x4002479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_timeElapsed;

	[Token(Token = "0x400247A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_delay;

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0xD72550", Offset = "0xD72550", VA = "0xD72550")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0xD72778", Offset = "0xD72778", VA = "0xD72778")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0xD727E0", Offset = "0xD727E0", VA = "0xD727E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0xD72A60", Offset = "0xD72A60", VA = "0xD72A60")]
	public void SimulateHaptics(int type)
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0xD72D94", Offset = "0xD72D94", VA = "0xD72D94")]
	public void SetDamageRumble(bool value)
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0xD72E04", Offset = "0xD72E04", VA = "0xD72E04")]
	public void SetUseRifle(bool value)
	{
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0xD72E74", Offset = "0xD72E74", VA = "0xD72E74")]
	public void SetInvertPistols(bool value)
	{
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0xD72EE4", Offset = "0xD72EE4", VA = "0xD72EE4")]
	public ForceTubeVRSettings()
	{
	}
}
[Token(Token = "0x20003A6")]
public class VRSettingsSubmenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60017EF")]
	[Address(RVA = "0xD72F08", Offset = "0xD72F08", VA = "0xD72F08")]
	public void Open(bool value)
	{
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0xD72F30", Offset = "0xD72F30", VA = "0xD72F30")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0xD72F00", Offset = "0xD72F00", VA = "0xD72F00")]
	public VRSettingsSubmenu()
	{
	}
}
[Token(Token = "0x20003A7")]
[CreateAssetMenu(fileName = "Texture array database", menuName = "Alvo/Texture Array Database")]
public class TextureArrayDatabase : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20003A8")]
	public class DarkTexture
	{
		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string textureArrayAssetName;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImpactType[] channels;

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xD7313C", Offset = "0xD7313C", VA = "0xD7313C")]
		public DarkTexture()
		{
		}
	}

	[Token(Token = "0x400247B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DarkTexture[] textures;

	[Token(Token = "0x400247C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, DarkTexture> dictionary;

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0xD72F94", Offset = "0xD72F94", VA = "0xD72F94")]
	public void SetupDictionary()
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0xD73078", Offset = "0xD73078", VA = "0xD73078")]
	public ImpactType TAChannelType(Texture2DArray TA, byte channel)
	{
		return default(ImpactType);
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0xD73134", Offset = "0xD73134", VA = "0xD73134")]
	public TextureArrayDatabase()
	{
	}
}
[Token(Token = "0x20003A9")]
public enum ImpactType
{
	[Token(Token = "0x4002481")]
	Default,
	[Token(Token = "0x4002482")]
	Sand,
	[Token(Token = "0x4002483")]
	Wood,
	[Token(Token = "0x4002484")]
	Concrete,
	[Token(Token = "0x4002485")]
	Flesh,
	[Token(Token = "0x4002486")]
	Snow,
	[Token(Token = "0x4002487")]
	Metal,
	[Token(Token = "0x4002488")]
	Glass
}
[Token(Token = "0x20003AA")]
public class KillstreakGun : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003AB")]
	[CompilerGenerated]
	private sealed class <UpdateUIDelayed>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KillstreakGun <>4__this;

		[Token(Token = "0x170002EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0xD73648", Offset = "0xD73648", VA = "0xD73648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0xD73690", Offset = "0xD73690", VA = "0xD73690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xD735B4", Offset = "0xD735B4", VA = "0xD735B4")]
		[DebuggerHidden]
		public <UpdateUIDelayed>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xD735DC", Offset = "0xD735DC", VA = "0xD735DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xD735E0", Offset = "0xD735E0", VA = "0xD735E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xD73650", Offset = "0xD73650", VA = "0xD73650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Killstreak Gun")]
	protected bool m_Local;

	[Token(Token = "0x400248A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public WeaponBehavior m_Weapon;

	[Token(Token = "0x400248B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected byte m_MaxBullets;

	[Token(Token = "0x400248C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForEndOfFrame m_WaitForEndofFrame;

	[Token(Token = "0x400248D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public System.Action DoSwitchToThisGun;

	[Token(Token = "0x170002E9")]
	public bool m_hasMaxAmmo
	{
		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xD73144", Offset = "0xD73144", VA = "0xD73144")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0xD73174", Offset = "0xD73174", VA = "0xD73174", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0xD732F0", Offset = "0xD732F0", VA = "0xD732F0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0xD733E0", Offset = "0xD733E0", VA = "0xD733E0", Slot = "6")]
	protected virtual void FireWeapon()
	{
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0xD73428", Offset = "0xD73428", VA = "0xD73428")]
	public void RefreshAmmo()
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0xD734AC", Offset = "0xD734AC", VA = "0xD734AC")]
	protected void UseAmmo()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0xD73288", Offset = "0xD73288", VA = "0xD73288")]
	[IteratorStateMachine(typeof(<UpdateUIDelayed>d__11))]
	private IEnumerator UpdateUIDelayed()
	{
		return null;
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0xD734F8", Offset = "0xD734F8", VA = "0xD734F8")]
	protected bool DeactivateKillstreak()
	{
		return default(bool);
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0xD7354C", Offset = "0xD7354C", VA = "0xD7354C")]
	public KillstreakGun()
	{
	}
}
[Token(Token = "0x20003AC")]
public class BazookaKillstreak : KillstreakGun
{
	[Token(Token = "0x20003AD")]
	[CompilerGenerated]
	private sealed class <DisableKillstreak>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BazookaKillstreak <>4__this;

		[Token(Token = "0x170002EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0xD73DDC", Offset = "0xD73DDC", VA = "0xD73DDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0xD73E24", Offset = "0xD73E24", VA = "0xD73E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xD73CA0", Offset = "0xD73CA0", VA = "0xD73CA0")]
		[DebuggerHidden]
		public <DisableKillstreak>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xD73D40", Offset = "0xD73D40", VA = "0xD73D40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xD73D44", Offset = "0xD73D44", VA = "0xD73D44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xD73DE4", Offset = "0xD73DE4", VA = "0xD73DE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Bazooka")]
	public Transform projectileSpawnPos;

	[Token(Token = "0x4002492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform sightAlignment;

	[Token(Token = "0x4002493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem[] particles;

	[Token(Token = "0x4002494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator animator;

	[Token(Token = "0x4002495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource aSource1;

	[Token(Token = "0x4002496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform t;

	[Token(Token = "0x4002497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip fireSnd1;

	[Token(Token = "0x4002498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float disableTime;

	[Token(Token = "0x4002499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitDisableTime;

	[Token(Token = "0x400249A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Fire;

	[Token(Token = "0x6001805")]
	[Address(RVA = "0xD73698", Offset = "0xD73698", VA = "0xD73698")]
	private void Start()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0xD73708", Offset = "0xD73708", VA = "0xD73708", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0xD7378C", Offset = "0xD7378C", VA = "0xD7378C", Slot = "6")]
	protected override void FireWeapon()
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0xD73894", Offset = "0xD73894", VA = "0xD73894")]
	private void SpawnProjectile(Transform t)
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0xD73B08", Offset = "0xD73B08", VA = "0xD73B08")]
	public void FireFX()
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0xD73AA0", Offset = "0xD73AA0", VA = "0xD73AA0")]
	[IteratorStateMachine(typeof(<DisableKillstreak>d__15))]
	private IEnumerator DisableKillstreak()
	{
		return null;
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0xD73CC8", Offset = "0xD73CC8", VA = "0xD73CC8")]
	public BazookaKillstreak()
	{
	}
}
[Token(Token = "0x20003AE")]
public class BazookaProjectile : PunBehaviour
{
	[Token(Token = "0x20003AF")]
	[CompilerGenerated]
	private sealed class <Fire>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BazookaProjectile <>4__this;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <torqueLifetime>5__2;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lifeTime>5__3;

		[Token(Token = "0x170002EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0xD74564", Offset = "0xD74564", VA = "0xD74564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0xD745AC", Offset = "0xD745AC", VA = "0xD745AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xD74230", Offset = "0xD74230", VA = "0xD74230")]
		[DebuggerHidden]
		public <Fire>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xD74344", Offset = "0xD74344", VA = "0xD74344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xD74348", Offset = "0xD74348", VA = "0xD74348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xD7456C", Offset = "0xD7456C", VA = "0xD7456C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400249E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x400249F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExplosiveObject ExplosiveObjectComponent;

	[Token(Token = "0x40024A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject disableOnExplosion;

	[Token(Token = "0x40024A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource aSource;

	[Token(Token = "0x40024A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float acceleration;

	[Token(Token = "0x40024A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float accelerationPorcentage;

	[Token(Token = "0x40024A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxLifeTime;

	[Token(Token = "0x6001813")]
	[Address(RVA = "0xD73E2C", Offset = "0xD73E2C", VA = "0xD73E2C", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0xD74034", Offset = "0xD74034", VA = "0xD74034")]
	public void SetupProjectile(int worldNumber, int team)
	{
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0xD7412C", Offset = "0xD7412C", VA = "0xD7412C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0xD74134", Offset = "0xD74134", VA = "0xD74134")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0xD73FCC", Offset = "0xD73FCC", VA = "0xD73FCC")]
	[IteratorStateMachine(typeof(<Fire>d__11))]
	public IEnumerator Fire()
	{
		return null;
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0xD74258", Offset = "0xD74258", VA = "0xD74258")]
	[PunRPC]
	private void DetonateProjectile()
	{
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0xD74334", Offset = "0xD74334", VA = "0xD74334")]
	public BazookaProjectile()
	{
	}
}
[Token(Token = "0x20003B0")]
public class BlinkingAnimation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40024AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image m_Image;

	[Token(Token = "0x6001820")]
	[Address(RVA = "0xD745B4", Offset = "0xD745B4", VA = "0xD745B4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0xD74604", Offset = "0xD74604", VA = "0xD74604")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0xD7464C", Offset = "0xD7464C", VA = "0xD7464C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0xD74608", Offset = "0xD74608", VA = "0xD74608")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0xD746BC", Offset = "0xD746BC", VA = "0xD746BC")]
	public BlinkingAnimation()
	{
	}
}
[Token(Token = "0x20003B1")]
public class AlvoBulletmark : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40024AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FadeOutDecals m_FadeOutDecals;

	[Token(Token = "0x6001825")]
	[Address(RVA = "0xD746C4", Offset = "0xD746C4", VA = "0xD746C4")]
	public AlvoBulletmark()
	{
	}
}
[Token(Token = "0x20003B2")]
public static class DrawArrow
{
	[Token(Token = "0x6001826")]
	[Address(RVA = "0xD746CC", Offset = "0xD746CC", VA = "0xD746CC")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0xD7493C", Offset = "0xD7493C", VA = "0xD7493C")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0xD74BF0", Offset = "0xD74BF0", VA = "0xD74BF0")]
	public static void ForDebug(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0xD74EBC", Offset = "0xD74EBC", VA = "0xD74EBC")]
	public static void ForDebug(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}
}
[Token(Token = "0x20003B3")]
public static class LevelDesignSceneValidation
{
}
[Token(Token = "0x20003B4")]
public class PostProcessingEnabler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40024AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PostProcessLayer m_postProcessLayer;

	[Token(Token = "0x600182A")]
	[Address(RVA = "0xD751E0", Offset = "0xD751E0", VA = "0xD751E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0xD75220", Offset = "0xD75220", VA = "0xD75220")]
	public PostProcessingEnabler()
	{
	}
}
[Token(Token = "0x20003B5")]
public class SkinnedToRegularMeshConverter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600182C")]
	[Address(RVA = "0xD75228", Offset = "0xD75228", VA = "0xD75228")]
	public SkinnedToRegularMeshConverter()
	{
	}
}
[Token(Token = "0x20003B6")]
public class FireAoEDamage : PunBehaviour
{
	[Token(Token = "0x20003B7")]
	[CompilerGenerated]
	private sealed class <IE_Recycle>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireAoEDamage <>4__this;

		[Token(Token = "0x170002F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0xD76008", Offset = "0xD76008", VA = "0xD76008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0xD76050", Offset = "0xD76050", VA = "0xD76050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xD75520", Offset = "0xD75520", VA = "0xD75520")]
		[DebuggerHidden]
		public <IE_Recycle>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xD75E18", Offset = "0xD75E18", VA = "0xD75E18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xD75E1C", Offset = "0xD75E1C", VA = "0xD75E1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xD76010", Offset = "0xD76010", VA = "0xD76010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40024AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Fire")]
	[SerializeField]
	private AudioSource m_fireAudioSource;

	[Token(Token = "0x40024AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystemRenderer fireRenderer;

	[Token(Token = "0x40024AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem m_smoke;

	[Token(Token = "0x40024B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem m_ParticleSystem;

	[Token(Token = "0x40024B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool m_Owner;

	[Token(Token = "0x40024B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds m_destroyTime;

	[Token(Token = "0x40024B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Tween m_fadeInTween;

	[Token(Token = "0x40024B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tween m_fadeOutTween;

	[Token(Token = "0x40024B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_fireExtinguished;

	[Token(Token = "0x40024B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem.Particle[] m_particles;

	[Token(Token = "0x40024B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_iStartedTheFire;

	[Token(Token = "0x40024B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 m_average;

	[Token(Token = "0x40024B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_timeBeforeNextCalculation;

	[Token(Token = "0x40024BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform m_fireAudioSourceTransform;

	[Token(Token = "0x40024BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform m_smokeTransform;

	[Token(Token = "0x40024BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerManager m_playerManager;

	[Token(Token = "0x40024BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private byte m_currentPlayerCalculation;

	[Token(Token = "0x600182D")]
	[Address(RVA = "0xD75230", Offset = "0xD75230", VA = "0xD75230")]
	private void Awake()
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0xD75270", Offset = "0xD75270", VA = "0xD75270", Slot = "44")]
	public override void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0xD75518", Offset = "0xD75518", VA = "0xD75518")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0xD75474", Offset = "0xD75474", VA = "0xD75474")]
	[IteratorStateMachine(typeof(<IE_Recycle>d__20))]
	private IEnumerator IE_Recycle()
	{
		return null;
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0xD754DC", Offset = "0xD754DC", VA = "0xD754DC")]
	private void TryKillTween()
	{
	}

	[Token(Token = "0x6001832")]
	[Address(RVA = "0xD75548", Offset = "0xD75548", VA = "0xD75548")]
	private bool AudioBeingTweened()
	{
		return default(bool);
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0xD7558C", Offset = "0xD7558C", VA = "0xD7558C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0xD75974", Offset = "0xD75974", VA = "0xD75974")]
	public void OnParticleTrigger()
	{
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0xD75D08", Offset = "0xD75D08", VA = "0xD75D08")]
	private void StartTheOnFireState(PlayerData player)
	{
	}

	[Token(Token = "0x6001836")]
	[Address(RVA = "0xD75D68", Offset = "0xD75D68", VA = "0xD75D68")]
	public FireAoEDamage()
	{
	}
}
[Token(Token = "0x20003BA")]
public class ShotDrawer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001843")]
	[Address(RVA = "0xD761C0", Offset = "0xD761C0", VA = "0xD761C0")]
	public ShotDrawer()
	{
	}
}
[Token(Token = "0x20003BB")]
public class GunInteractable : Interactable
{
	[Token(Token = "0x6001844")]
	[Address(RVA = "0xD761C8", Offset = "0xD761C8", VA = "0xD761C8")]
	public GunInteractable()
	{
	}
}
[Token(Token = "0x20003BC")]
[DisallowMultipleComponent]
public class Outline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003BD")]
	public enum Mode
	{
		[Token(Token = "0x40024D6")]
		OutlineAll,
		[Token(Token = "0x40024D7")]
		OutlineVisible,
		[Token(Token = "0x40024D8")]
		OutlineHidden,
		[Token(Token = "0x40024D9")]
		OutlineAndSilhouette,
		[Token(Token = "0x40024DA")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x20003BE")]
	private class ListVector3
	{
		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xD781E8", Offset = "0xD781E8", VA = "0xD781E8")]
		public ListVector3()
		{
		}
	}

	[Token(Token = "0x40024C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x40024C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x40024C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x40024C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[Range(0f, 10f)]
	private float outlineWidth;

	[Token(Token = "0x40024C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Optional")]
	[SerializeField]
	[Tooltip("Precompute enabled: Per-vertex calculations are performed in the editor and serialized with the object. Precompute disabled: Per-vertex calculations are performed at runtime in Awake(). This may cause a pause for large meshes.")]
	private bool precomputeOutline;

	[Token(Token = "0x40024C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool m_IncludeInactive;

	[Token(Token = "0x40024CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Transform> m_ExcludeChildOf;

	[Token(Token = "0x40024CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x40024CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x40024CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Renderer> renderers;

	[Token(Token = "0x40024CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x40024CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material outlineFillMaterial;

	[Token(Token = "0x40024D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool needsUpdate;

	[Token(Token = "0x40024D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool m_forceValidate;

	[Token(Token = "0x40024D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int OutlineColor1;

	[Token(Token = "0x40024D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int ZTest;

	[Token(Token = "0x40024D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int Width;

	[Token(Token = "0x170002F2")]
	public Mode OutlineMode
	{
		[Token(Token = "0x6001845")]
		[Address(RVA = "0xD76220", Offset = "0xD76220", VA = "0xD76220")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6001846")]
		[Address(RVA = "0xD76228", Offset = "0xD76228", VA = "0xD76228")]
		set
		{
		}
	}

	[Token(Token = "0x170002F3")]
	public Color OutlineColor
	{
		[Token(Token = "0x6001847")]
		[Address(RVA = "0xD76238", Offset = "0xD76238", VA = "0xD76238")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6001848")]
		[Address(RVA = "0xD76244", Offset = "0xD76244", VA = "0xD76244")]
		set
		{
		}
	}

	[Token(Token = "0x170002F4")]
	public float OutlineWidth
	{
		[Token(Token = "0x6001849")]
		[Address(RVA = "0xD76258", Offset = "0xD76258", VA = "0xD76258")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600184A")]
		[Address(RVA = "0xD76260", Offset = "0xD76260", VA = "0xD76260")]
		set
		{
		}
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0xD76270", Offset = "0xD76270", VA = "0xD76270")]
	private void Awake()
	{
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0xD76414", Offset = "0xD76414", VA = "0xD76414")]
	private void SearchAndExclude(ref List<Renderer> excludeFrom)
	{
	}

	[Token(Token = "0x600184D")]
	[Address(RVA = "0xD76B14", Offset = "0xD76B14", VA = "0xD76B14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0xD76DB4", Offset = "0xD76DB4", VA = "0xD76DB4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0xD771C0", Offset = "0xD771C0", VA = "0xD771C0")]
	private void DoValidate()
	{
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0xD771CC", Offset = "0xD771CC", VA = "0xD771CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001851")]
	[Address(RVA = "0xD77418", Offset = "0xD77418", VA = "0xD77418")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001852")]
	[Address(RVA = "0xD77620", Offset = "0xD77620", VA = "0xD77620")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0xD76ED4", Offset = "0xD76ED4", VA = "0xD76ED4")]
	private void Bake()
	{
	}

	[Token(Token = "0x6001854")]
	[Address(RVA = "0xD7654C", Offset = "0xD7654C", VA = "0xD7654C")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0xD77688", Offset = "0xD77688", VA = "0xD77688")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0xD781F0", Offset = "0xD781F0", VA = "0xD781F0")]
	private void CombineSubmeshes(Mesh mesh, Material[] materials)
	{
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0xD771E0", Offset = "0xD771E0", VA = "0xD771E0")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x6001858")]
	[Address(RVA = "0xD78298", Offset = "0xD78298", VA = "0xD78298")]
	public void AddToOutline(MeshRenderer[] meshRenderers)
	{
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0xD783B8", Offset = "0xD783B8", VA = "0xD783B8")]
	public void RemoveFromOutline(MeshRenderer[] meshRenderers)
	{
	}

	[Token(Token = "0x600185A")]
	[Address(RVA = "0xD78490", Offset = "0xD78490", VA = "0xD78490")]
	public Outline()
	{
	}
}
[Token(Token = "0x20003C0")]
public static class AlvoErrorReporter
{
	[Token(Token = "0x6001862")]
	[Address(RVA = "0xD78870", Offset = "0xD78870", VA = "0xD78870")]
	public static void Report(params string[] errorReport)
	{
	}
}
[Token(Token = "0x20003C1")]
public class AutoFaceY : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40024DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform transformToMove;

	[Token(Token = "0x40024E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform target;

	[Token(Token = "0x6001863")]
	[Address(RVA = "0xD7890C", Offset = "0xD7890C", VA = "0xD7890C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001864")]
	[Address(RVA = "0xD7893C", Offset = "0xD7893C", VA = "0xD7893C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001865")]
	[Address(RVA = "0xD789CC", Offset = "0xD789CC", VA = "0xD789CC")]
	public AutoFaceY()
	{
	}
}
[Token(Token = "0x20003C2")]
public static class NavMeshAntiClip
{
	[Token(Token = "0x20003C3")]
	private class HitCheck
	{
		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NavMeshHit hit;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 direction;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool applied;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int doNotApplyIfHitAtIndexApplied1;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int doNotApplyIfHitAtIndexApplied2;

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xD7951C", Offset = "0xD7951C", VA = "0xD7951C")]
		public HitCheck(Vector3 _dir, [Optional] int? _doNotApplyIfHitAtIndexApplied1, [Optional] int? _doNotApplyIfHitAtIndexApplied2)
		{
		}
	}

	[Token(Token = "0x40024E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HitCheck[] hitChecks;

	[Token(Token = "0x6001866")]
	[Address(RVA = "0xD789D4", Offset = "0xD789D4", VA = "0xD789D4")]
	public static Vector3 CheckAt(Vector3 desiredPosition, float objRadius, string navArea = "Walkable")
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001867")]
	[Address(RVA = "0xD78F0C", Offset = "0xD78F0C", VA = "0xD78F0C")]
	private static void SubstractOnDirection(ref Vector3 substractFrom, float hitDistance, float objRadius, Vector3 dir)
	{
	}

	[Token(Token = "0x6001868")]
	[Address(RVA = "0xD78E28", Offset = "0xD78E28", VA = "0xD78E28")]
	private static NavMeshHit TryGetPositionOnNavMesh(Vector3 sourcePosition, string navigationArea = "Walkable")
	{
		return default(NavMeshHit);
	}
}
[Token(Token = "0x20003C4")]
public static class TagComparison
{
	[Token(Token = "0x40024E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, ImpactType> impactTypeDictionary;

	[Token(Token = "0x40024E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<ImpactType, float> impactMinDistance;

	[Token(Token = "0x40024E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static HashSet<string> NoHitMarks;

	[Token(Token = "0x40024EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static HashSet<string> DamageableTags;

	[Token(Token = "0x40024EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static HashSet<string> Vest;

	[Token(Token = "0x600186B")]
	[Address(RVA = "0xD795F0", Offset = "0xD795F0", VA = "0xD795F0")]
	public static bool IsVest(string tag)
	{
		return default(bool);
	}

	[Token(Token = "0x600186C")]
	[Address(RVA = "0xD79670", Offset = "0xD79670", VA = "0xD79670")]
	public static bool Damageable(string tag)
	{
		return default(bool);
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0xD796F0", Offset = "0xD796F0", VA = "0xD796F0")]
	public static bool HitMarkAllowed(string tag)
	{
		return default(bool);
	}

	[Token(Token = "0x600186E")]
	[Address(RVA = "0xD7977C", Offset = "0xD7977C", VA = "0xD7977C")]
	public static ImpactType GetImpactType(string tag)
	{
		return default(ImpactType);
	}

	[Token(Token = "0x600186F")]
	[Address(RVA = "0xD79814", Offset = "0xD79814", VA = "0xD79814")]
	public static float GetImpactMinDistance(ImpactType impactType)
	{
		return default(float);
	}
}
[Token(Token = "0x20003C5")]
public class AlvoPatcher
{
	[Token(Token = "0x6001871")]
	[Address(RVA = "0xD7A038", Offset = "0xD7A038", VA = "0xD7A038")]
	private bool UseUnityInteralSplashScreen(Platform platform)
	{
		return default(bool);
	}

	[Token(Token = "0x6001872")]
	[Address(RVA = "0xD7A058", Offset = "0xD7A058", VA = "0xD7A058")]
	private static string GetProductName(Platform platform, bool beta)
	{
		return null;
	}

	[Token(Token = "0x6001873")]
	[Address(RVA = "0xD7A0CC", Offset = "0xD7A0CC", VA = "0xD7A0CC")]
	public AlvoPatcher()
	{
	}
}
[Token(Token = "0x20003C6")]
public class RecordingBuildSubmenu : VRSettingsSubmenu
{
	[Token(Token = "0x6001874")]
	[Address(RVA = "0xD7A0D4", Offset = "0xD7A0D4", VA = "0xD7A0D4")]
	public void SetFirstPersonModeUseStrongEye(bool value)
	{
	}

	[Token(Token = "0x6001875")]
	[Address(RVA = "0xD7A144", Offset = "0xD7A144", VA = "0xD7A144")]
	public RecordingBuildSubmenu()
	{
	}
}
[Token(Token = "0x20003C7")]
public class Vest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40024EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform headPositionAnchor;

	[Token(Token = "0x40024ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform headTransform;

	[Token(Token = "0x40024EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationDamping;

	[Token(Token = "0x40024EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotationDampingLookingDown;

	[Token(Token = "0x40024F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lookingDownThreshold;

	[Token(Token = "0x40024F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrGranadeController grenadeController;

	[Token(Token = "0x40024F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] grenadeModels;

	[Token(Token = "0x40024F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MagazineInteractable[] magazines;

	[Token(Token = "0x40024F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject grenadesParent;

	[Token(Token = "0x40024F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject magazinesParent;

	[Token(Token = "0x40024F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject vestMesh;

	[Token(Token = "0x40024F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform magazineHolster;

	[Token(Token = "0x40024F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform grenadeHolster;

	[Token(Token = "0x40024F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform grenadeHolster_LH;

	[Token(Token = "0x40024FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform magazineHolster_LH;

	[Token(Token = "0x40024FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MagazineInteractable m_lastSpawnedMag;

	[Token(Token = "0x40024FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int m_lastActivatedGrenade;

	[Token(Token = "0x40024FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform m_transform;

	[Token(Token = "0x40024FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VrInput m_vrInput;

	[Token(Token = "0x40024FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VrManager m_vrManager;

	[Token(Token = "0x6001876")]
	[Address(RVA = "0xD7A14C", Offset = "0xD7A14C", VA = "0xD7A14C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001877")]
	[Address(RVA = "0xD7A1F8", Offset = "0xD7A1F8", VA = "0xD7A1F8")]
	public void SetEverything()
	{
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0xD7A51C", Offset = "0xD7A51C", VA = "0xD7A51C")]
	private void DebugSetLeftHanded()
	{
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0xD7A524", Offset = "0xD7A524", VA = "0xD7A524")]
	private void DebugSetRightHanded()
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0xD7A3E4", Offset = "0xD7A3E4", VA = "0xD7A3E4")]
	private void SetLeftHanded(bool value)
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0xD7A398", Offset = "0xD7A398", VA = "0xD7A398")]
	public void HideEverything()
	{
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0xD7A52C", Offset = "0xD7A52C", VA = "0xD7A52C")]
	public void UpdateGrenades(int index, int ammt)
	{
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0xD7A688", Offset = "0xD7A688", VA = "0xD7A688")]
	public void UpdateMagazines(int ammo)
	{
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0xD7A6C0", Offset = "0xD7A6C0", VA = "0xD7A6C0")]
	public void RefreshMagazines()
	{
	}

	[Token(Token = "0x600187F")]
	[Address(RVA = "0xD7A850", Offset = "0xD7A850", VA = "0xD7A850")]
	public void GetRidOfMagazine()
	{
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0xD7A6F0", Offset = "0xD7A6F0", VA = "0xD7A6F0")]
	public void SetAmmoType(int index)
	{
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0xD7A9D4", Offset = "0xD7A9D4", VA = "0xD7A9D4")]
	public MagazineInteractable SpawnMagazine(int gunIndex)
	{
		return null;
	}

	[Token(Token = "0x6001882")]
	[Address(RVA = "0xD7AB98", Offset = "0xD7AB98", VA = "0xD7AB98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0xD7AD48", Offset = "0xD7AD48", VA = "0xD7AD48")]
	public Vest()
	{
	}
}
[Token(Token = "0x20003C8")]
public class AlvoWatchSkin : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Regular;

	[Token(Token = "0x4002501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_Mirror;

	[Token(Token = "0x4002502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_Canvas;

	[Token(Token = "0x4002503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_CanvasRegularPosition;

	[Token(Token = "0x4002504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 m_CanvasMirrorPosition;

	[Token(Token = "0x4002505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI m_AmmoText;

	[Token(Token = "0x4002506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_mirrorOffset;

	[Token(Token = "0x6001884")]
	[Address(RVA = "0xD7AD68", Offset = "0xD7AD68", VA = "0xD7AD68")]
	public void Mirror(bool leftHanded)
	{
	}

	[Token(Token = "0x6001885")]
	[Address(RVA = "0xD7AE34", Offset = "0xD7AE34", VA = "0xD7AE34")]
	public void UpdateAmmo(int bulletsLeft, int ammoLeft, bool dualWield)
	{
	}

	[Token(Token = "0x6001886")]
	[Address(RVA = "0xD7AF28", Offset = "0xD7AF28", VA = "0xD7AF28")]
	public void ClearAmmo()
	{
	}

	[Token(Token = "0x6001887")]
	[Address(RVA = "0xD7AF84", Offset = "0xD7AF84", VA = "0xD7AF84")]
	public AlvoWatchSkin()
	{
	}
}
[Token(Token = "0x20003C9")]
public static class WFilterHelper
{
	[Token(Token = "0x4002507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static byte[] m_AllowedBotGuns;

	[Token(Token = "0x4002508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static HashSet<short> m_Guns;

	[Token(Token = "0x4002509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static HashSet<short> m_meleeWeapons;

	[Token(Token = "0x400250A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static HashSet<short> m_Duals;

	[Token(Token = "0x400250B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<WFilter, HashSet<int>> m_forbiddenAttachments;

	[Token(Token = "0x6001888")]
	[Address(RVA = "0xD7AF9C", Offset = "0xD7AF9C", VA = "0xD7AF9C")]
	public static short Value(this WFilter wFilter)
	{
		return default(short);
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0xD7AFA0", Offset = "0xD7AFA0", VA = "0xD7AFA0")]
	public static byte Value(this BodyPart bodyPart)
	{
		return default(byte);
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0xD7AFA4", Offset = "0xD7AFA4", VA = "0xD7AFA4")]
	public static bool IsGrenade(short w)
	{
		return default(bool);
	}

	[Token(Token = "0x600188B")]
	[Address(RVA = "0xD7B020", Offset = "0xD7B020", VA = "0xD7B020")]
	public static bool IsKillstreak(short w)
	{
		return default(bool);
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0xD7B034", Offset = "0xD7B034", VA = "0xD7B034")]
	public static bool IsMelee(short w)
	{
		return default(bool);
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0xD7A8D4", Offset = "0xD7A8D4", VA = "0xD7A8D4")]
	public static bool IsGun(short w)
	{
		return default(bool);
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0xD7A954", Offset = "0xD7A954", VA = "0xD7A954")]
	public static bool IsDual(short w)
	{
		return default(bool);
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0xD7B0B4", Offset = "0xD7B0B4", VA = "0xD7B0B4")]
	public static bool CanDealDamageEvenWhenOwnerIsDead(short w)
	{
		return default(bool);
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0xD7B154", Offset = "0xD7B154", VA = "0xD7B154")]
	public static bool DamageSound(short w)
	{
		return default(bool);
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0xD7B1B0", Offset = "0xD7B1B0", VA = "0xD7B1B0")]
	public static bool AttachmentIsForbidden(int weaponId, int attachmentId)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x20003CA")]
public class WStuff
{
	[Token(Token = "0x400250C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WFilter m_WFilter;

	[Token(Token = "0x400250D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SECTR_AudioCue m_ThirdPersonCue;

	[Token(Token = "0x400250E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue m_MuffledThirdPersonCue;

	[Token(Token = "0x400250F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite m_ChatSprite;

	[Token(Token = "0x6001893")]
	[Address(RVA = "0xD7B790", Offset = "0xD7B790", VA = "0xD7B790")]
	public WStuff()
	{
	}
}
[Token(Token = "0x20003CB")]
public enum WFilter
{
	[Token(Token = "0x4002511")]
	Empty = 0,
	[Token(Token = "0x4002512")]
	Annihilator = 1,
	[Token(Token = "0x4002513")]
	Hornet = 2,
	[Token(Token = "0x4002514")]
	Sabre = 3,
	[Token(Token = "0x4002515")]
	Viper = 4,
	[Token(Token = "0x4002516")]
	Falcon = 5,
	[Token(Token = "0x4002517")]
	Choco = 6,
	[Token(Token = "0x4002518")]
	Comet = 7,
	[Token(Token = "0x4002519")]
	Proto = 8,
	[Token(Token = "0x400251A")]
	Hurricane = 9,
	[Token(Token = "0x400251B")]
	DualWSmg = 12,
	[Token(Token = "0x400251C")]
	DualWShotgun = 13,
	[Token(Token = "0x400251D")]
	CombatKnife = 14,
	[Token(Token = "0x400251E")]
	Machete = 15,
	[Token(Token = "0x400251F")]
	DualWPistol = 16,
	[Token(Token = "0x4002520")]
	D17 = 17,
	[Token(Token = "0x4002521")]
	G36 = 18,
	[Token(Token = "0x4002522")]
	Molotov = 56,
	[Token(Token = "0x4002523")]
	Sticky = 57,
	[Token(Token = "0x4002524")]
	Frag = 58,
	[Token(Token = "0x4002525")]
	AttackDogs = 59,
	[Token(Token = "0x4002526")]
	Drone = 60,
	[Token(Token = "0x4002527")]
	RCCar = 61,
	[Token(Token = "0x4002528")]
	Turret = 62,
	[Token(Token = "0x4002529")]
	Bazooka = 63,
	[Token(Token = "0x400252A")]
	Melee = 77,
	[Token(Token = "0x400252B")]
	Bayonet = 78,
	[Token(Token = "0x400252C")]
	BleedingOut = 458,
	[Token(Token = "0x400252D")]
	Bleedout = 459,
	[Token(Token = "0x400252E")]
	JumpOut = 666,
	[Token(Token = "0x400252F")]
	Fall = 460,
	[Token(Token = "0x4002530")]
	Basic = 800,
	[Token(Token = "0x4002531")]
	Speed = 801,
	[Token(Token = "0x4002532")]
	Explosive = 802,
	[Token(Token = "0x4002533")]
	Projectile = 803,
	[Token(Token = "0x4002534")]
	Tank = 804,
	[Token(Token = "0x4002535")]
	FloorPoison = 700
}
[Token(Token = "0x20003CC")]
public enum BodyPart
{
	[Token(Token = "0x4002537")]
	Generic,
	[Token(Token = "0x4002538")]
	Head,
	[Token(Token = "0x4002539")]
	Chest,
	[Token(Token = "0x400253A")]
	Limb,
	[Token(Token = "0x400253B")]
	Explosion,
	[Token(Token = "0x400253C")]
	LeftArm,
	[Token(Token = "0x400253D")]
	RightArm,
	[Token(Token = "0x400253E")]
	Feet
}
[Token(Token = "0x20003CD")]
public class HPBar : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400253F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup cg;

	[Token(Token = "0x4002540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cgGO;

	[Token(Token = "0x4002541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image fill;

	[Token(Token = "0x4002542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image damageFill;

	[Token(Token = "0x4002543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Transform target;

	[Token(Token = "0x6001894")]
	[Address(RVA = "0xD7B798", Offset = "0xD7B798", VA = "0xD7B798")]
	public HPBar()
	{
	}
}
[Token(Token = "0x20003CE")]
public class ZombieKillCashEffect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4002545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI tmpro;

	[Token(Token = "0x4002546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform target;

	[Token(Token = "0x4002547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x4002548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float originalScale;

	[Token(Token = "0x6001895")]
	[Address(RVA = "0xD7B7A0", Offset = "0xD7B7A0", VA = "0xD7B7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0xD7B7F0", Offset = "0xD7B7F0", VA = "0xD7B7F0")]
	public void Setup()
	{
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0xD7BAAC", Offset = "0xD7BAAC", VA = "0xD7BAAC")]
	private void DoDestroy()
	{
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0xD7BB48", Offset = "0xD7BB48", VA = "0xD7BB48")]
	private void Update()
	{
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0xD7BCF0", Offset = "0xD7BCF0", VA = "0xD7BCF0")]
	public ZombieKillCashEffect()
	{
	}
}
[Token(Token = "0x20003CF")]
public class ZombieNpcManager : Photon.MonoBehaviour
{
	[Token(Token = "0x4002549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int floatsToSync;

	[Token(Token = "0x400254A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string latestCorrectPos;

	[Token(Token = "0x400254B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> floats;

	[Token(Token = "0x400254C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, string> dic;

	[Token(Token = "0x400254D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, string> dic2;

	[Token(Token = "0x400254E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<byte, ZombieNpcElement> npcs;

	[Token(Token = "0x400254F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<ZombieAI> activeZombies;

	[Token(Token = "0x4002550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CultureInfo invC;

	[Token(Token = "0x4002551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IFormatProvider invCProvider;

	[Token(Token = "0x4002552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int zIndex;

	[Token(Token = "0x4002553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<byte> lastIds;

	[Token(Token = "0x600189C")]
	[Address(RVA = "0xD7BDD8", Offset = "0xD7BDD8", VA = "0xD7BDD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0xD7C064", Offset = "0xD7C064", VA = "0xD7C064")]
	private void Update()
	{
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0xD7C1F8", Offset = "0xD7C1F8", VA = "0xD7C1F8")]
	private void UpdateZombies()
	{
	}

	[Token(Token = "0x600189F")]
	[Address(RVA = "0xD7C2C8", Offset = "0xD7C2C8", VA = "0xD7C2C8")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0xD7D050", Offset = "0xD7D050", VA = "0xD7D050")]
	public byte GetUniqueByteID()
	{
		return default(byte);
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0xD7D1A4", Offset = "0xD7D1A4", VA = "0xD7D1A4")]
	public ZombieNpcManager()
	{
	}
}
[Token(Token = "0x20003D1")]
public class ObjectiveSpawnPoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Leave blank to default")]
	public Transform progressImageLocation;

	[Token(Token = "0x4002557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shopLocation;

	[Token(Token = "0x4002558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shopCarouselLocation;

	[Token(Token = "0x4002559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte areaCode;

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0xD7D424", Offset = "0xD7D424", VA = "0xD7D424")]
	public ObjectiveSpawnPoint()
	{
	}
}
[Token(Token = "0x20003D2")]
public class ChristmasLightSequence : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003D3")]
	public class XmasLights
	{
		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Renderer> m_Renderers;

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xD7DC9C", Offset = "0xD7DC9C", VA = "0xD7DC9C")]
		public XmasLights()
		{
		}
	}

	[Token(Token = "0x20003D4")]
	[CompilerGenerated]
	private sealed class <Mode1>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChristmasLightSequence <>4__this;

		[Token(Token = "0x170002F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0xD7DE68", Offset = "0xD7DE68", VA = "0xD7DE68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xD7DEB0", Offset = "0xD7DEB0", VA = "0xD7DEB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xD7D8C4", Offset = "0xD7D8C4", VA = "0xD7D8C4")]
		[DebuggerHidden]
		public <Mode1>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xD7DD18", Offset = "0xD7DD18", VA = "0xD7DD18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xD7DD1C", Offset = "0xD7DD1C", VA = "0xD7DD1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xD7DE70", Offset = "0xD7DE70", VA = "0xD7DE70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400255A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XmasLights[] m_ChristmasLights;

	[Token(Token = "0x400255B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material DefaultMaterialColour;

	[Token(Token = "0x400255C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] ChristmasMaterialColour;

	[Token(Token = "0x400255D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ChristmasMode1Timer;

	[Token(Token = "0x400255E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ChristmasMode2Timer;

	[Token(Token = "0x400255F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ChristmasMode3Timer;

	[Token(Token = "0x4002560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Mode2MaxLength;

	[Token(Token = "0x4002561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Mode3MaxLength;

	[Token(Token = "0x4002562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int ActiveMaterialID;

	[Token(Token = "0x4002563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool someStopFlag;

	[Token(Token = "0x4002564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int mode_id;

	[Token(Token = "0x4002565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int ChildLoopCount;

	[Token(Token = "0x4002566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int StartPointLoopCount;

	[Token(Token = "0x4002567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int StartMaterialID;

	[Token(Token = "0x4002568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int Mode3Cycle;

	[Token(Token = "0x4002569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int StartMode3Cycle;

	[Token(Token = "0x400256A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int iloop;

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0xD7D42C", Offset = "0xD7D42C", VA = "0xD7D42C")]
	private void Start()
	{
	}

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0xD7D4B4", Offset = "0xD7D4B4", VA = "0xD7D4B4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0xD7D44C", Offset = "0xD7D44C", VA = "0xD7D44C")]
	[IteratorStateMachine(typeof(<Mode1>d__20))]
	private IEnumerator Mode1()
	{
		return null;
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0xD7D8EC", Offset = "0xD7D8EC", VA = "0xD7D8EC")]
	public void LightSequence1()
	{
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0xD7DC80", Offset = "0xD7DC80", VA = "0xD7DC80")]
	public ChristmasLightSequence()
	{
	}
}
[Token(Token = "0x20003D5")]
public class PMSettingsFormMapBtn : UnityEngine.MonoBehaviour, IMonoPoolable
{
	[Token(Token = "0x20003D6")]
	public class Pool : MonoPool<PMSettingsFormMapBtn>
	{
		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xD7DFD0", Offset = "0xD7DFD0", VA = "0xD7DFD0")]
		public Pool(PMSettingsFormMapBtn _pfb, Transform _holder)
		{
		}
	}

	[Token(Token = "0x4002570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_selectedHighlight;

	[Token(Token = "0x4002571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_mapName;

	[Token(Token = "0x4002572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image m_mapImage;

	[Token(Token = "0x4002573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button button;

	[Token(Token = "0x4002574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int mapId;

	[Token(Token = "0x4002575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PrivateMatchSettingsForm m_settingsForm;

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0xD7DEB8", Offset = "0xD7DEB8", VA = "0xD7DEB8")]
	public void Setup(int _mapId, string _name, Sprite _image, PrivateMatchSettingsForm _form)
	{
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0xD7DF18", Offset = "0xD7DF18", VA = "0xD7DF18")]
	public void SelectedHighlight(bool v)
	{
	}

	[Token(Token = "0x60018B4")]
	[Address(RVA = "0xD7DF38", Offset = "0xD7DF38", VA = "0xD7DF38")]
	public void OnClicked()
	{
	}

	[Token(Token = "0x60018B5")]
	[Address(RVA = "0xD7DFC0", Offset = "0xD7DFC0", VA = "0xD7DFC0")]
	public void OnDespawn()
	{
	}

	[Token(Token = "0x60018B6")]
	[Address(RVA = "0xD7DFC4", Offset = "0xD7DFC4", VA = "0xD7DFC4", Slot = "4")]
	public void OnSpawn()
	{
	}

	[Token(Token = "0x60018B7")]
	[Address(RVA = "0xD7DFC8", Offset = "0xD7DFC8", VA = "0xD7DFC8")]
	public PMSettingsFormMapBtn()
	{
	}
}
[Token(Token = "0x20003D7")]
public class TempHideMPSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60018B9")]
	[Address(RVA = "0xD7E030", Offset = "0xD7E030", VA = "0xD7E030")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0xD7E100", Offset = "0xD7E100", VA = "0xD7E100")]
	public TempHideMPSettings()
	{
	}
}
[Token(Token = "0x20003D8")]
public class TestLTChanger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI[] tmps;

	[Token(Token = "0x4002577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI keyDisplay;

	[Token(Token = "0x4002578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LanguageText[] texts;

	[Token(Token = "0x4002579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int current;

	[Token(Token = "0x60018BB")]
	[Address(RVA = "0xD7E108", Offset = "0xD7E108", VA = "0xD7E108")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018BC")]
	[Address(RVA = "0xD7E208", Offset = "0xD7E208", VA = "0xD7E208")]
	public void Next()
	{
	}

	[Token(Token = "0x60018BD")]
	[Address(RVA = "0xD7E2A4", Offset = "0xD7E2A4", VA = "0xD7E2A4")]
	public void Prev()
	{
	}

	[Token(Token = "0x60018BE")]
	[Address(RVA = "0xD7E110", Offset = "0xD7E110", VA = "0xD7E110")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x60018BF")]
	[Address(RVA = "0xD7E37C", Offset = "0xD7E37C", VA = "0xD7E37C")]
	private void Update()
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0xD7E40C", Offset = "0xD7E40C", VA = "0xD7E40C")]
	public TestLTChanger()
	{
	}
}
[Token(Token = "0x20003D9")]
public class tempUpdateCallerForSpawns : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400257A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static tempUpdateCallerForSpawns instance;

	[Token(Token = "0x400257B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform obj;

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0xD7E414", Offset = "0xD7E414", VA = "0xD7E414")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0xD7E460", Offset = "0xD7E460", VA = "0xD7E460")]
	private void Update()
	{
	}

	[Token(Token = "0x60018C3")]
	[Address(RVA = "0xD7E490", Offset = "0xD7E490", VA = "0xD7E490")]
	public tempUpdateCallerForSpawns()
	{
	}
}
[Token(Token = "0x20003DA")]
public class AzureQueryResponseHook : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400257C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AzureRequestTypes m_requestType;

	[Token(Token = "0x400257D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent hook;

	[Token(Token = "0x60018C4")]
	[Address(RVA = "0xD7E498", Offset = "0xD7E498", VA = "0xD7E498")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0xD7E53C", Offset = "0xD7E53C", VA = "0xD7E53C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0xD7E5E0", Offset = "0xD7E5E0", VA = "0xD7E5E0")]
	private void OnResults(AzureRequestTypes type, string result, int requId)
	{
	}

	[Token(Token = "0x60018C7")]
	[Address(RVA = "0xD7E600", Offset = "0xD7E600", VA = "0xD7E600")]
	public AzureQueryResponseHook()
	{
	}
}
[Token(Token = "0x20003DB")]
public class CurvedUIDropdownItemHelper : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerExitHandler
{
	[Token(Token = "0x400257E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle toggle;

	[Token(Token = "0x400257F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool down;

	[Token(Token = "0x60018C8")]
	[Address(RVA = "0xD7E608", Offset = "0xD7E608", VA = "0xD7E608")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60018C9")]
	[Address(RVA = "0xD7E690", Offset = "0xD7E690", VA = "0xD7E690", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60018CA")]
	[Address(RVA = "0xD7E69C", Offset = "0xD7E69C", VA = "0xD7E69C", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60018CB")]
	[Address(RVA = "0xD7E6CC", Offset = "0xD7E6CC", VA = "0xD7E6CC", Slot = "6")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60018CC")]
	[Address(RVA = "0xD7E6D4", Offset = "0xD7E6D4", VA = "0xD7E6D4")]
	public CurvedUIDropdownItemHelper()
	{
	}
}
[Token(Token = "0x20003DC")]
public class DetectTransformChange : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool debugBreak;

	[Token(Token = "0x4002581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 pos;

	[Token(Token = "0x4002582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 scale;

	[Token(Token = "0x4002583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Quaternion rot;

	[Token(Token = "0x60018CD")]
	[Address(RVA = "0xD7E6DC", Offset = "0xD7E6DC", VA = "0xD7E6DC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60018CE")]
	[Address(RVA = "0xD7E74C", Offset = "0xD7E74C", VA = "0xD7E74C")]
	private void Update()
	{
	}

	[Token(Token = "0x60018CF")]
	[Address(RVA = "0xD7EE40", Offset = "0xD7EE40", VA = "0xD7EE40")]
	public void Register()
	{
	}

	[Token(Token = "0x60018D0")]
	[Address(RVA = "0xD7EEB0", Offset = "0xD7EEB0", VA = "0xD7EEB0")]
	public DetectTransformChange()
	{
	}
}
[Token(Token = "0x20003DD")]
public class SetParent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60018D1")]
	[Address(RVA = "0xD7EEB8", Offset = "0xD7EEB8", VA = "0xD7EEB8")]
	public void DoSetParent(Transform parent)
	{
	}

	[Token(Token = "0x60018D2")]
	[Address(RVA = "0xD7EEE0", Offset = "0xD7EEE0", VA = "0xD7EEE0")]
	public SetParent()
	{
	}
}
[Token(Token = "0x20003DE")]
public class TranslationNeededTag : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003DF")]
	public enum Status
	{
		[Token(Token = "0x4002587")]
		Certainly_Used,
		[Token(Token = "0x4002588")]
		Not_sure_if_used
	}

	[Token(Token = "0x4002584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Status status;

	[Token(Token = "0x4002585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string notes;

	[Token(Token = "0x60018D3")]
	[Address(RVA = "0xD7EEE8", Offset = "0xD7EEE8", VA = "0xD7EEE8")]
	public TranslationNeededTag()
	{
	}
}
[Token(Token = "0x20003E0")]
public interface IMonoPoolable
{
	[Token(Token = "0x60018D4")]
	void OnSpawn();
}
[Token(Token = "0x20003E1")]
public class MonoPool<T> where T : UnityEngine.MonoBehaviour, IMonoPoolable
{
	[Token(Token = "0x4002589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T m_prefab;

	[Token(Token = "0x400258A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Transform m_holder;

	[Token(Token = "0x400258B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<T> list;

	[Token(Token = "0x60018D5")]
	public MonoPool(T _pfb, Transform _holder)
	{
	}

	[Token(Token = "0x60018D6")]
	public T Spawn()
	{
		return null;
	}

	[Token(Token = "0x60018D7")]
	public void DespawnAll()
	{
	}
}
[Token(Token = "0x20003E2")]
public enum OffMeshLinkMoveMethod
{
	[Token(Token = "0x400258D")]
	Teleport,
	[Token(Token = "0x400258E")]
	NormalSpeed,
	[Token(Token = "0x400258F")]
	Parabola,
	[Token(Token = "0x4002590")]
	Curve
}
[Token(Token = "0x20003E3")]
[RequireComponent(typeof(NavMeshAgent))]
public class AgentLinkMover : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003E4")]
	[CompilerGenerated]
	private sealed class <_Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AgentLinkMover <>4__this;

		[Token(Token = "0x170002F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xD7F3D8", Offset = "0xD7F3D8", VA = "0xD7F3D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xD7F420", Offset = "0xD7F420", VA = "0xD7F420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xD7F024", Offset = "0xD7F024", VA = "0xD7F024")]
		[DebuggerHidden]
		public <_Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xD7F29C", Offset = "0xD7F29C", VA = "0xD7F29C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xD7F2A0", Offset = "0xD7F2A0", VA = "0xD7F2A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xD7F3E0", Offset = "0xD7F3E0", VA = "0xD7F3E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E5")]
	[CompilerGenerated]
	private sealed class <NormalSpeed>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <endPos>5__2;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xD7F6C0", Offset = "0xD7F6C0", VA = "0xD7F6C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xD7F708", Offset = "0xD7F708", VA = "0xD7F708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xD7F0B4", Offset = "0xD7F0B4", VA = "0xD7F0B4")]
		[DebuggerHidden]
		public <NormalSpeed>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xD7F428", Offset = "0xD7F428", VA = "0xD7F428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xD7F42C", Offset = "0xD7F42C", VA = "0xD7F42C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xD7F6C8", Offset = "0xD7F6C8", VA = "0xD7F6C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E6")]
	[CompilerGenerated]
	private sealed class <Parabola>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float height;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <endPos>5__3;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <normalizedTime>5__4;

		[Token(Token = "0x170002FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0xD7F928", Offset = "0xD7F928", VA = "0xD7F928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0xD7F970", Offset = "0xD7F970", VA = "0xD7F970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xD7F158", Offset = "0xD7F158", VA = "0xD7F158")]
		[DebuggerHidden]
		public <Parabola>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xD7F710", Offset = "0xD7F710", VA = "0xD7F710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xD7F714", Offset = "0xD7F714", VA = "0xD7F714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xD7F930", Offset = "0xD7F930", VA = "0xD7F930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E7")]
	[CompilerGenerated]
	private sealed class <Curve>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AgentLinkMover <>4__this;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <endPos>5__3;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <normalizedTime>5__4;

		[Token(Token = "0x170002FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0xD7FB90", Offset = "0xD7FB90", VA = "0xD7FB90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0xD7FBD8", Offset = "0xD7FBD8", VA = "0xD7FBD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xD7F204", Offset = "0xD7F204", VA = "0xD7F204")]
		[DebuggerHidden]
		public <Curve>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xD7F978", Offset = "0xD7F978", VA = "0xD7F978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xD7F97C", Offset = "0xD7F97C", VA = "0xD7F97C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xD7FB98", Offset = "0xD7FB98", VA = "0xD7FB98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OffMeshLinkMoveMethod m_Method;

	[Token(Token = "0x4002592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve m_Curve;

	[Token(Token = "0x4002593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine m_Coroutine;

	[Token(Token = "0x4002594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavMeshAgent m_Agent;

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0xD7EEF0", Offset = "0xD7EEF0", VA = "0xD7EEF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0xD7EFBC", Offset = "0xD7EFBC", VA = "0xD7EFBC")]
	[IteratorStateMachine(typeof(<_Start>d__5))]
	private IEnumerator _Start()
	{
		return null;
	}

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0xD7F04C", Offset = "0xD7F04C", VA = "0xD7F04C")]
	[IteratorStateMachine(typeof(<NormalSpeed>d__6))]
	private IEnumerator NormalSpeed(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0xD7F0DC", Offset = "0xD7F0DC", VA = "0xD7F0DC")]
	[IteratorStateMachine(typeof(<Parabola>d__7))]
	private IEnumerator Parabola(NavMeshAgent agent, float height, float duration)
	{
		return null;
	}

	[Token(Token = "0x60018DC")]
	[Address(RVA = "0xD7F180", Offset = "0xD7F180", VA = "0xD7F180")]
	[IteratorStateMachine(typeof(<Curve>d__8))]
	private IEnumerator Curve(NavMeshAgent agent, float duration)
	{
		return null;
	}

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0xD7F22C", Offset = "0xD7F22C", VA = "0xD7F22C")]
	public AgentLinkMover()
	{
	}
}
[Token(Token = "0x20003E8")]
public class BillboardGO : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40025AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_UseYAxis;

	[Token(Token = "0x40025AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform target;

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0xD7FBE0", Offset = "0xD7FBE0", VA = "0xD7FBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0xD7FC60", Offset = "0xD7FC60", VA = "0xD7FC60")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60018F8")]
	[Address(RVA = "0xD7FCDC", Offset = "0xD7FCDC", VA = "0xD7FCDC")]
	public BillboardGO()
	{
	}
}
[Token(Token = "0x20003E9")]
public class GameobjectOnDisableTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60018F9")]
	[Address(RVA = "0xD7FCEC", Offset = "0xD7FCEC", VA = "0xD7FCEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018FA")]
	[Address(RVA = "0xD7FD90", Offset = "0xD7FD90", VA = "0xD7FD90")]
	public GameobjectOnDisableTest()
	{
	}
}
[Token(Token = "0x20003EA")]
[Obsolete("Not in use")]
public class NewWeaponsManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003EB")]
	public enum EquipmentSlots
	{
		[Token(Token = "0x40025B1")]
		PRIMARY,
		[Token(Token = "0x40025B2")]
		SECONDARY,
		[Token(Token = "0x40025B3")]
		GRENADES,
		[Token(Token = "0x40025B4")]
		EXTRA
	}

	[Token(Token = "0x40025AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerWeapons oldManager;

	[Token(Token = "0x40025AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] m_weaponOrder;

	[Token(Token = "0x60018FB")]
	[Address(RVA = "0xD7FD98", Offset = "0xD7FD98", VA = "0xD7FD98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018FC")]
	[Address(RVA = "0xD7FE08", Offset = "0xD7FE08", VA = "0xD7FE08")]
	private void Start()
	{
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0xD7FE28", Offset = "0xD7FE28", VA = "0xD7FE28")]
	public NewWeaponsManager()
	{
	}
}
[Token(Token = "0x20003EC")]
public class NodeLinker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60018FE")]
	[Address(RVA = "0xD7FE30", Offset = "0xD7FE30", VA = "0xD7FE30")]
	public NodeLinker()
	{
	}
}
[Token(Token = "0x20003ED")]
public class NewZombieSpawner : PunBehaviour
{
	[Token(Token = "0x40025B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NewZombieSpawner Instance;

	[Token(Token = "0x40025B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LevelManager levelManager;

	[Token(Token = "0x40025B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float posUpdateDelay;

	[Token(Token = "0x40025B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Ammount of zombies to appear at once per defined rate")]
	public int m_zombieSpawnAmount;

	[Token(Token = "0x40025B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Total amount of zombies that can be active at once")]
	public int m_zombieSpawnLimit;

	[Token(Token = "0x40025BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Delay between each batch of zombies spawned, picks random number between 2 integers")]
	public Vector2 zombieSpawnDelay;

	[Token(Token = "0x40025BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ZombieSpawnsSO.ZSpawnItem[] allZombieTypes;

	[Token(Token = "0x40025BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ZombieHealth> m_spawnedZombies;

	[Token(Token = "0x40025BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ZombieModeConfig m_config;

	[Token(Token = "0x40025BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_canSpawn;

	[Token(Token = "0x40025BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float lastSpawnTime;

	[Token(Token = "0x40025C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastUpdateTime;

	[Token(Token = "0x40025C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] allPositions;

	[Token(Token = "0x40025C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ZombieSpawnsSO spawnConfig;

	[Token(Token = "0x40025C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform objPos;

	[Token(Token = "0x40025C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public byte minLimit;

	[Token(Token = "0x40025C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private byte minRoundToStartIncrease;

	[Token(Token = "0x40025C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private byte maxLimit;

	[Token(Token = "0x60018FF")]
	[Address(RVA = "0xD7FE38", Offset = "0xD7FE38", VA = "0xD7FE38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001900")]
	[Address(RVA = "0xD7FEA4", Offset = "0xD7FEA4", VA = "0xD7FEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001901")]
	[Address(RVA = "0xD7FEF0", Offset = "0xD7FEF0", VA = "0xD7FEF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001902")]
	[Address(RVA = "0xD80084", Offset = "0xD80084", VA = "0xD80084")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001903")]
	[Address(RVA = "0xD801F8", Offset = "0xD801F8", VA = "0xD801F8")]
	private void IncreaseSpawnLimit(int currentRound)
	{
	}

	[Token(Token = "0x6001904")]
	[Address(RVA = "0xD802F4", Offset = "0xD802F4", VA = "0xD802F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001905")]
	[Address(RVA = "0xD805E4", Offset = "0xD805E4", VA = "0xD805E4")]
	public void AddZombie(ZombieHealth zombie)
	{
	}

	[Token(Token = "0x6001906")]
	[Address(RVA = "0xD808AC", Offset = "0xD808AC", VA = "0xD808AC")]
	public string GetRandomZombieFromConfig()
	{
		return null;
	}

	[Token(Token = "0x6001907")]
	[Address(RVA = "0xD80D38", Offset = "0xD80D38", VA = "0xD80D38")]
	public string GetRandomZombieFromAll()
	{
		return null;
	}

	[Token(Token = "0x6001908")]
	[Address(RVA = "0xD80D7C", Offset = "0xD80D7C", VA = "0xD80D7C")]
	public void SetObjectivePos(Transform _pos)
	{
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0xD80460", Offset = "0xD80460", VA = "0xD80460")]
	public void SpawnZombies(int _amount)
	{
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0xD80D84", Offset = "0xD80D84", VA = "0xD80D84")]
	public NewZombieSpawner()
	{
	}
}
[Token(Token = "0x20003EE")]
public class ZombieGlow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40025C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] m_renderers;

	[Token(Token = "0x40025C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaterialPropertyBlock[] m_matPropBlocks;

	[Token(Token = "0x40025C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ColorUsage(false, true)]
	public Color level1Col;

	[Token(Token = "0x40025CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ColorUsage(false, true)]
	public Color level2Col;

	[Token(Token = "0x40025CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ColorUsage(false, true)]
	public Color level3Col;

	[Token(Token = "0x40025CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool breatheEffect;

	[Token(Token = "0x40025CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool breathing;

	[Token(Token = "0x40025CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color emissiveTint;

	[Token(Token = "0x40025CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Color m_emissiveColor;

	[Token(Token = "0x40025D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float intensity;

	[Token(Token = "0x40025D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool initialized;

	[Token(Token = "0x600190B")]
	[Address(RVA = "0xD80E24", Offset = "0xD80E24", VA = "0xD80E24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0xD80F68", Offset = "0xD80F68", VA = "0xD80F68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0xD80F7C", Offset = "0xD80F7C", VA = "0xD80F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0xD80F80", Offset = "0xD80F80", VA = "0xD80F80")]
	public void Explosion()
	{
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0xD80F84", Offset = "0xD80F84", VA = "0xD80F84")]
	public void Blackout()
	{
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0xD80E28", Offset = "0xD80E28", VA = "0xD80E28")]
	private void GetPropertyBlocks()
	{
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0xD80F88", Offset = "0xD80F88", VA = "0xD80F88")]
	public void SetLevelColor(int _lvl)
	{
	}

	[Token(Token = "0x6001912")]
	[Address(RVA = "0xD80FC4", Offset = "0xD80FC4", VA = "0xD80FC4")]
	public void UpdateMatBlock()
	{
	}

	[Token(Token = "0x6001913")]
	[Address(RVA = "0xD810DC", Offset = "0xD810DC", VA = "0xD810DC")]
	public ZombieGlow()
	{
	}
}
[Token(Token = "0x20003EF")]
[CreateAssetMenu(fileName = "newZombieSpawns", menuName = "Alvo/Zombies/Spawns", order = 0)]
public class ZombieSpawnsSO : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20003F0")]
	public class ZSpawnConfig
	{
		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string configName;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Round Configuration")]
		public int roundToSpawnIn;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 3f)]
		public int zombieLevel;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Round Spawns")]
		public ZSpawnItem[] spawns;

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xD81460", Offset = "0xD81460", VA = "0xD81460")]
		public ZSpawnItem GetRandomZombie()
		{
			return null;
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xD809D4", Offset = "0xD809D4", VA = "0xD809D4")]
		public ZSpawnItem GetRandomZombieWeighted()
		{
			return null;
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xD814A0", Offset = "0xD814A0", VA = "0xD814A0")]
		public ZSpawnConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003F1")]
	public class ZSpawnItem
	{
		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string spawnName;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZombieType zombieType;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 100f)]
		public int spawnPercent;

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xD80C0C", Offset = "0xD80C0C", VA = "0xD80C0C")]
		public string GetZombieName()
		{
			return null;
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xD814B0", Offset = "0xD814B0", VA = "0xD814B0")]
		public ZSpawnItem()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003F2")]
	public enum ZombieType
	{
		[Token(Token = "0x40025DB")]
		BASIC,
		[Token(Token = "0x40025DC")]
		SPEED,
		[Token(Token = "0x40025DD")]
		EXPLOSIVE,
		[Token(Token = "0x40025DE")]
		PROJECTILE,
		[Token(Token = "0x40025DF")]
		TANK
	}

	[Token(Token = "0x40025D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZSpawnConfig[] spawnConfigs;

	[Token(Token = "0x6001914")]
	[Address(RVA = "0xD810F4", Offset = "0xD810F4", VA = "0xD810F4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001915")]
	[Address(RVA = "0xD81458", Offset = "0xD81458", VA = "0xD81458")]
	public ZombieSpawnsSO()
	{
	}
}
[Token(Token = "0x20003F3")]
public class ZombiesRestartBtn : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40025E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartupManager m_startupManager;

	[Token(Token = "0x40025E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button m_restartBtn;

	[Token(Token = "0x600191B")]
	[Address(RVA = "0xD814B8", Offset = "0xD814B8", VA = "0xD814B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600191C")]
	[Address(RVA = "0xD81528", Offset = "0xD81528", VA = "0xD81528")]
	private void Start()
	{
	}

	[Token(Token = "0x600191D")]
	[Address(RVA = "0xD815BC", Offset = "0xD815BC", VA = "0xD815BC")]
	public ZombiesRestartBtn()
	{
	}
}
[Token(Token = "0x20003F4")]
public class CameraGrayscaleEffect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40025E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x40025E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float power;

	[Token(Token = "0x40025E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material material;

	[Token(Token = "0x600191F")]
	[Address(RVA = "0xD815E4", Offset = "0xD815E4", VA = "0xD815E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0xD81684", Offset = "0xD81684", VA = "0xD81684")]
	public void Enable(bool toEnable)
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0xD81690", Offset = "0xD81690", VA = "0xD81690")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6001922")]
	[Address(RVA = "0xD81704", Offset = "0xD81704", VA = "0xD81704")]
	public CameraGrayscaleEffect()
	{
	}
}
[Token(Token = "0x20003F5")]
public class ForceTubeVR : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40025E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DamageRumble;

	[Token(Token = "0x40025E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_UseRifle;

	[Token(Token = "0x40025E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_InvertPistols;

	[Token(Token = "0x40025E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VrSettings m_vrSettings;

	[Token(Token = "0x6001923")]
	[Address(RVA = "0xD8170C", Offset = "0xD8170C", VA = "0xD8170C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001924")]
	[Address(RVA = "0xD81718", Offset = "0xD81718", VA = "0xD81718")]
	public static bool MoreThanXDevicesConnected(byte x = 0)
	{
		return default(bool);
	}

	[Token(Token = "0x6001925")]
	[Address(RVA = "0xD818E0", Offset = "0xD818E0", VA = "0xD818E0")]
	public void Shoot(WeaponBehavior weaponBehavior, bool bayonet)
	{
	}

	[Token(Token = "0x6001926")]
	[Address(RVA = "0xD81AA0", Offset = "0xD81AA0", VA = "0xD81AA0")]
	public void Rumble(float rumblePower = 0.75f, float duration = 0.2f)
	{
	}

	[Token(Token = "0x6001927")]
	[Address(RVA = "0xD81AD8", Offset = "0xD81AD8", VA = "0xD81AD8")]
	public ForceTubeVR()
	{
	}
}
[Token(Token = "0x20003F8")]
public class CrossgenSessions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600192D")]
	[Address(RVA = "0xD81BC8", Offset = "0xD81BC8", VA = "0xD81BC8")]
	public CrossgenSessions()
	{
	}
}
[Token(Token = "0x20003F9")]
public class LoadingSnowflakes : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003FA")]
	public struct Snowflake
	{
		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_MovementSpeed;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_RotationSpeed;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RectTransform m_RectTransform;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform m_Parent;

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xD81EB0", Offset = "0xD81EB0", VA = "0xD81EB0")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40025EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_AutoSpawnHere;

	[Token(Token = "0x40025ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 m_RandomMovementSpeed;

	[Token(Token = "0x40025EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 m_RandomRotationSpeed;

	[Token(Token = "0x40025EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_SpawnEveryXSecond;

	[Token(Token = "0x40025F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform[] m_SnowflakeVariants;

	[Token(Token = "0x40025F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Snowflake> m_allSnowflakes;

	[Token(Token = "0x40025F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Snowflake> m_activeSnowflakes;

	[Token(Token = "0x40025F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_lastActivationTime;

	[Token(Token = "0x600192E")]
	[Address(RVA = "0xD81BD0", Offset = "0xD81BD0", VA = "0xD81BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0xD81C00", Offset = "0xD81C00", VA = "0xD81C00")]
	public void Setup(Transform parent)
	{
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0xD81FA8", Offset = "0xD81FA8", VA = "0xD81FA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0xD823AC", Offset = "0xD823AC", VA = "0xD823AC")]
	public LoadingSnowflakes()
	{
	}
}
[Token(Token = "0x20003FB")]
public class CUI_CameraRotationOnButtonHeld : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40025F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x40025F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x40025FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x6001933")]
	[Address(RVA = "0xD82460", Offset = "0xD82460", VA = "0xD82460")]
	private void Start()
	{
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0xD82480", Offset = "0xD82480", VA = "0xD82480")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x20003FC")]
public class CUI_MoveAlong : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6001935")]
	[Address(RVA = "0xD82498", Offset = "0xD82498", VA = "0xD82498")]
	private void Start()
	{
	}

	[Token(Token = "0x6001936")]
	[Address(RVA = "0xD8249C", Offset = "0xD8249C", VA = "0xD8249C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001937")]
	[Address(RVA = "0xD826B8", Offset = "0xD826B8", VA = "0xD826B8")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x20003FD")]
public class CUI_MoveHeartbeat : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40025FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40025FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x40025FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x40025FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x6001938")]
	[Address(RVA = "0xD826C0", Offset = "0xD826C0", VA = "0xD826C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001939")]
	[Address(RVA = "0xD82768", Offset = "0xD82768", VA = "0xD82768")]
	private void Update()
	{
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0xD82888", Offset = "0xD82888", VA = "0xD82888")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x20003FE")]
public class CUI_rotation_anim : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40025FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x600193B")]
	[Address(RVA = "0xD82898", Offset = "0xD82898", VA = "0xD82898")]
	private void Start()
	{
	}

	[Token(Token = "0x600193C")]
	[Address(RVA = "0xD8289C", Offset = "0xD8289C", VA = "0xD8289C")]
	private void Update()
	{
	}

	[Token(Token = "0x600193D")]
	[Address(RVA = "0xD82A80", Offset = "0xD82A80", VA = "0xD82A80")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x20003FF")]
public class CUI_ShowParentCoordinates : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600193E")]
	[Address(RVA = "0xD82A88", Offset = "0xD82A88", VA = "0xD82A88")]
	private void Start()
	{
	}

	[Token(Token = "0x600193F")]
	[Address(RVA = "0xD82B58", Offset = "0xD82B58", VA = "0xD82B58")]
	private void Update()
	{
	}

	[Token(Token = "0x6001940")]
	[Address(RVA = "0xD82B5C", Offset = "0xD82B5C", VA = "0xD82B5C")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x2000400")]
public class CUI_touchpad : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4002600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x4002601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x6001941")]
	[Address(RVA = "0xD82B64", Offset = "0xD82B64", VA = "0xD82B64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001942")]
	[Address(RVA = "0xD82BD0", Offset = "0xD82BD0", VA = "0xD82BD0")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x6001943")]
	[Address(RVA = "0xD82C84", Offset = "0xD82C84", VA = "0xD82C84")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x2000401")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x2000402")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x400261E")]
		MOUSE = 0,
		[Token(Token = "0x400261F")]
		GAZE = 1,
		[Token(Token = "0x4002620")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4002621")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4002622")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4002623")]
		OCULUSVR = 5,
		[Token(Token = "0x4002624")]
		GOOGLEVR = 7,
		[Token(Token = "0x4002625")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4002626")]
		UNITY_XR = 9
	}

	[Token(Token = "0x2000403")]
	public enum Hand
	{
		[Token(Token = "0x4002628")]
		Both,
		[Token(Token = "0x4002629")]
		Right,
		[Token(Token = "0x400262A")]
		Left
	}

	[Token(Token = "0x4002602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x4002603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x4002604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x4002605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x4002606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private LayerMask titleRaycastLayerMask;

	[Token(Token = "0x4002607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4002608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4002609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x400260A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x400260B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x400260C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x400260D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	[FormerlySerializedAs("controllerTransformOverride")]
	private Transform pointerTransformOverride;

	[Token(Token = "0x400260E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x400260F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x4002610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject currentDragging;

	[Token(Token = "0x4002611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject currentPointedAt;

	[Token(Token = "0x4002612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject m_rightController;

	[Token(Token = "0x4002613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject m_leftController;

	[Token(Token = "0x4002614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float gazeTimerProgress;

	[Token(Token = "0x4002615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Ray customControllerRay;

	[Token(Token = "0x4002616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float dragThreshold;

	[Token(Token = "0x4002617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool pressedDown;

	[Token(Token = "0x4002618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool pressedLastFrame;

	[Token(Token = "0x4002619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x400261A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x400261B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x400261C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x170002FF")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6001951")]
		[Address(RVA = "0xD83430", Offset = "0xD83430", VA = "0xD83430")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001952")]
		[Address(RVA = "0xD8351C", Offset = "0xD8351C", VA = "0xD8351C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000300")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x6001953")]
		[Address(RVA = "0xD8339C", Offset = "0xD8339C", VA = "0xD8339C")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x6001954")]
		[Address(RVA = "0xD83578", Offset = "0xD83578", VA = "0xD83578")]
		set
		{
		}
	}

	[Token(Token = "0x17000301")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD835FC", Offset = "0xD835FC", VA = "0xD835FC")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6001956")]
		[Address(RVA = "0xD83738", Offset = "0xD83738", VA = "0xD83738")]
		set
		{
		}
	}

	[Token(Token = "0x17000302")]
	public Hand UsedHand
	{
		[Token(Token = "0x6001957")]
		[Address(RVA = "0xD83740", Offset = "0xD83740", VA = "0xD83740")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x6001958")]
		[Address(RVA = "0xD83748", Offset = "0xD83748", VA = "0xD83748")]
		set
		{
		}
	}

	[Token(Token = "0x17000303")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6001959")]
		[Address(RVA = "0xD83750", Offset = "0xD83750", VA = "0xD83750")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000304")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x600195A")]
		[Address(RVA = "0xD83874", Offset = "0xD83874", VA = "0xD83874")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000305")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x600195B")]
		[Address(RVA = "0xD83918", Offset = "0xD83918", VA = "0xD83918")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000306")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x600195C")]
		[Address(RVA = "0xD83810", Offset = "0xD83810", VA = "0xD83810")]
		get
		{
			return null;
		}
		[Token(Token = "0x600195D")]
		[Address(RVA = "0xD839BC", Offset = "0xD839BC", VA = "0xD839BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000307")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x600195E")]
		[Address(RVA = "0xD83A24", Offset = "0xD83A24", VA = "0xD83A24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000308")]
	public Camera EventCamera
	{
		[Token(Token = "0x600195F")]
		[Address(RVA = "0xD83A2C", Offset = "0xD83A2C", VA = "0xD83A2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001960")]
		[Address(RVA = "0xD82DD8", Offset = "0xD82DD8", VA = "0xD82DD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000309")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x6001962")]
		[Address(RVA = "0xD83C68", Offset = "0xD83C68", VA = "0xD83C68")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD83CD8", Offset = "0xD83CD8", VA = "0xD83CD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700030A")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x6001964")]
		[Address(RVA = "0xD83D60", Offset = "0xD83D60", VA = "0xD83D60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD83DBC", Offset = "0xD83DBC", VA = "0xD83DBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700030B")]
	[Obsolete("Use CustomControllerButtonState instead.")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD83E20", Offset = "0xD83E20", VA = "0xD83E20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001967")]
		[Address(RVA = "0xD83E7C", Offset = "0xD83E7C", VA = "0xD83E7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700030C")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD83EE0", Offset = "0xD83EE0", VA = "0xD83EE0")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6001969")]
		[Address(RVA = "0xD83EEC", Offset = "0xD83EEC", VA = "0xD83EEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700030D")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x600196A")]
		[Address(RVA = "0xD83F00", Offset = "0xD83F00", VA = "0xD83F00")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700030E")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x600196B")]
		[Address(RVA = "0xD83F10", Offset = "0xD83F10", VA = "0xD83F10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD83F18", Offset = "0xD83F18", VA = "0xD83F18")]
		set
		{
		}
	}

	[Token(Token = "0x1700030F")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD83F20", Offset = "0xD83F20", VA = "0xD83F20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD83F28", Offset = "0xD83F28", VA = "0xD83F28")]
		set
		{
		}
	}

	[Token(Token = "0x17000310")]
	public float GazeClickTimer
	{
		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD83F34", Offset = "0xD83F34", VA = "0xD83F34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD83F3C", Offset = "0xD83F3C", VA = "0xD83F3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000311")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x6001971")]
		[Address(RVA = "0xD83F4C", Offset = "0xD83F4C", VA = "0xD83F4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD83F54", Offset = "0xD83F54", VA = "0xD83F54")]
		set
		{
		}
	}

	[Token(Token = "0x17000312")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD83F64", Offset = "0xD83F64", VA = "0xD83F64")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000313")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD83F6C", Offset = "0xD83F6C", VA = "0xD83F6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD83F74", Offset = "0xD83F74", VA = "0xD83F74")]
		set
		{
		}
	}

	[Token(Token = "0x6001944")]
	[Address(RVA = "0xD82C8C", Offset = "0xD82C8C", VA = "0xD82C8C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001945")]
	[Address(RVA = "0xD82E78", Offset = "0xD82E78", VA = "0xD82E78", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001946")]
	[Address(RVA = "0xD82EA4", Offset = "0xD82EA4", VA = "0xD82EA4", Slot = "32")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001947")]
	[Address(RVA = "0xD830A0", Offset = "0xD830A0", VA = "0xD830A0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0xD83230", Offset = "0xD83230", VA = "0xD83230", Slot = "33")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0xD8328C", Offset = "0xD8328C", VA = "0xD8328C", Slot = "34")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x600194A")]
	[Address(RVA = "0xD83294", Offset = "0xD83294", VA = "0xD83294", Slot = "28")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x600194B")]
	[Address(RVA = "0xD833F8", Offset = "0xD833F8", VA = "0xD833F8")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x600194C")]
	[Address(RVA = "0xD83424", Offset = "0xD83424", VA = "0xD83424", Slot = "35")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x600194D")]
	[Address(RVA = "0xD83428", Offset = "0xD83428", VA = "0xD83428", Slot = "36")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0xD8322C", Offset = "0xD8322C", VA = "0xD8322C")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0xD8342C", Offset = "0xD8342C", VA = "0xD8342C", Slot = "37")]
	protected virtual void ProcessUnityXRController()
	{
	}

	[Token(Token = "0x6001950")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6001961")]
	[Address(RVA = "0xD83A34", Offset = "0xD83A34", VA = "0xD83A34")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0xD83F7C", Offset = "0xD83F7C", VA = "0xD83F7C")]
	public CurvedUIInputModule()
	{
	}
}
namespace Bhaptics.SDK2
{
	[Token(Token = "0x2000404")]
	public class PlayParamSample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000405")]
		[CompilerGenerated]
		private sealed class <OnClickPlayCor>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400264A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayParamSample <>4__this;

			[Token(Token = "0x17000319")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001993")]
				[Address(RVA = "0xD857D0", Offset = "0xD857D0", VA = "0xD857D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001995")]
				[Address(RVA = "0xD85818", Offset = "0xD85818", VA = "0xD85818", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001990")]
			[Address(RVA = "0xD85204", Offset = "0xD85204", VA = "0xD85204")]
			[DebuggerHidden]
			public <OnClickPlayCor>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6001991")]
			[Address(RVA = "0xD8557C", Offset = "0xD8557C", VA = "0xD8557C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001992")]
			[Address(RVA = "0xD85580", Offset = "0xD85580", VA = "0xD85580", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001994")]
			[Address(RVA = "0xD857D8", Offset = "0xD857D8", VA = "0xD857D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string SampleAppID;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string SampleApiKey;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("Canvas")]
		private Canvas initCanvas;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Canvas mainCanvas;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("Dropdown")]
		private Dropdown eventsDropdown;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Slider")]
		[SerializeField]
		private Slider sliderIntensity;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider sliderDuration;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Slider sliderAngleX;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Slider sliderOffsetY;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Text")]
		[SerializeField]
		private Text intensityValueText;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text durationValueText;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Text angleXValueText;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Text offsetYValueText;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text playButtonText;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Header("Button")]
		private Button intensityResetButton;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button durationResetButton;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button angleXResetButton;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button offsetYResetButton;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Header("Sample")]
		[SerializeField]
		private BhapticsSettings sampleSettings;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int requestId;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string eventName;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MappingMetaData[] events;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine onClickPlayCoroutine;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private BhapticsSettings currentSettings;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float intensity;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float duration;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float angleX;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float offsetY;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int selectedIndex;

		[Token(Token = "0x17000314")]
		public float Intensity
		{
			[Token(Token = "0x6001978")]
			[Address(RVA = "0xD840AC", Offset = "0xD840AC", VA = "0xD840AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001979")]
			[Address(RVA = "0xD840B4", Offset = "0xD840B4", VA = "0xD840B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public float Duration
		{
			[Token(Token = "0x600197A")]
			[Address(RVA = "0xD841F4", Offset = "0xD841F4", VA = "0xD841F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600197B")]
			[Address(RVA = "0xD841FC", Offset = "0xD841FC", VA = "0xD841FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public float AngleX
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0xD8433C", Offset = "0xD8433C", VA = "0xD8433C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xD84344", Offset = "0xD84344", VA = "0xD84344")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public float OffsetY
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0xD84484", Offset = "0xD84484", VA = "0xD84484")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600197F")]
			[Address(RVA = "0xD8448C", Offset = "0xD8448C", VA = "0xD8448C")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public int SelectedIndex
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0xD845CC", Offset = "0xD845CC", VA = "0xD845CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001981")]
			[Address(RVA = "0xD845D4", Offset = "0xD845D4", VA = "0xD845D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD845DC", Offset = "0xD845DC", VA = "0xD845DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD846A4", Offset = "0xD846A4", VA = "0xD846A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD846C0", Offset = "0xD846C0", VA = "0xD846C0")]
		public void OnClickPlay()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD8490C", Offset = "0xD8490C", VA = "0xD8490C")]
		public void SetOffsetY(string offsetYStr)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD8494C", Offset = "0xD8494C", VA = "0xD8494C")]
		public void OpenDeveloperPortal()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD84990", Offset = "0xD84990", VA = "0xD84990")]
		public void OpenGuideLink()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD849D4", Offset = "0xD849D4", VA = "0xD849D4")]
		public void UseSampleSettings()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xD84DC0", Offset = "0xD84DC0", VA = "0xD84DC0")]
		private void PlayHaptic(string eventName, float intensity, float duration, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD847BC", Offset = "0xD847BC", VA = "0xD847BC")]
		private void StopHaptic()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD8514C", Offset = "0xD8514C", VA = "0xD8514C")]
		private void ResetValues()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD84754", Offset = "0xD84754", VA = "0xD84754")]
		[IteratorStateMachine(typeof(<OnClickPlayCor>d__54))]
		private IEnumerator OnClickPlayCor()
		{
			return null;
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD8522C", Offset = "0xD8522C", VA = "0xD8522C")]
		private void SetupApplicationData()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD845FC", Offset = "0xD845FC", VA = "0xD845FC")]
		private void CheckApplicationSetting()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD854D0", Offset = "0xD854D0", VA = "0xD854D0")]
		public PlayParamSample()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class AndroidHaptic
	{
		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] PlayParams;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly object[] PlayParamParams;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly object[] IsPlayingParams;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly object[] StopByRequestIdParams;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly object[] StopByEventIdParams;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object[] PingParams;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<HapticDevice> deviceList;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected IntPtr InitializePtr;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IntPtr PlayPtr;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr PlayPosPtr;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr PlayParamPtr;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr PlayPosParamPtr;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr StopIntPtr;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr StopByEventIdPtr;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr StopAllPtr;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr IsPlayingByEventIdPtr;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected IntPtr IsPlayingByRequestIdPtr;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD85820", Offset = "0xD85820", VA = "0xD85820")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD864C4", Offset = "0xD864C4", VA = "0xD864C4")]
		public bool CheckBhapticsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD86260", Offset = "0xD86260", VA = "0xD86260")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD865D8", Offset = "0xD865D8", VA = "0xD865D8")]
		public void Initialize(string workspaceId, string sdkKey, string json)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD86814", Offset = "0xD86814", VA = "0xD86814")]
		public bool IsConnect()
		{
			return default(bool);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD8681C", Offset = "0xD8681C", VA = "0xD8681C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xD86940", Offset = "0xD86940", VA = "0xD86940")]
		public bool IsPlayingByEventId(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xD86A28", Offset = "0xD86A28", VA = "0xD86A28")]
		public bool IsPlayingByRequestId(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xD86B3C", Offset = "0xD86B3C", VA = "0xD86B3C")]
		public int Play(string eventId)
		{
			return default(int);
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD86CB4", Offset = "0xD86CB4", VA = "0xD86CB4")]
		public int PlayParam(string eventId, float intensity, float duration, float angleX, float offsetY)
		{
			return default(int);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD86F60", Offset = "0xD86F60", VA = "0xD86F60")]
		public int PlayMotors(int position, int[] motors, int durationMillis)
		{
			return default(int);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD8712C", Offset = "0xD8712C", VA = "0xD8712C")]
		public bool StopByRequestId(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD87240", Offset = "0xD87240", VA = "0xD87240")]
		public bool StopByEventId(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD87438", Offset = "0xD87438", VA = "0xD87438")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xD875DC", Offset = "0xD875DC", VA = "0xD875DC")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xD876DC", Offset = "0xD876DC", VA = "0xD876DC")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xD87810", Offset = "0xD87810", VA = "0xD87810")]
		public void PingAll()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xD878A0", Offset = "0xD878A0", VA = "0xD878A0")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xD86788", Offset = "0xD86788", VA = "0xD86788")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xD868B0", Offset = "0xD868B0", VA = "0xD868B0")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xD86C24", Offset = "0xD86C24", VA = "0xD86C24")]
		private int CallNativeIntMethod(IntPtr methodPtr, object[] param)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000407")]
	internal class AndroidUtils
	{
		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xD87984", Offset = "0xD87984", VA = "0xD87984")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xD87B80", Offset = "0xD87B80", VA = "0xD87B80")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xD87D84", Offset = "0xD87D84", VA = "0xD87D84")]
		public static int CallNativeIntMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(int);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xD88080", Offset = "0xD88080", VA = "0xD88080")]
		public AndroidUtils()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class BhapticsLibrary
	{
		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object Lock;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<HapticDevice> EmptyDevices;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidHaptic android;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool _initialized;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool isAvailable;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private static bool isAvailableChecked;

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xD88088", Offset = "0xD88088", VA = "0xD88088")]
		public static bool IsBhapticsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xD8811C", Offset = "0xD8811C", VA = "0xD8811C")]
		public static bool IsBhapticsAvailableForce()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xD84A58", Offset = "0xD84A58", VA = "0xD84A58")]
		public static bool Initialize(string appId, string apiKey, string json)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xD8837C", Offset = "0xD8837C", VA = "0xD8837C")]
		public static void Destroy()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xD884E0", Offset = "0xD884E0", VA = "0xD884E0")]
		public static bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xD88808", Offset = "0xD88808", VA = "0xD88808")]
		public static int Play(string eventId)
		{
			return default(int);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xD84F04", Offset = "0xD84F04", VA = "0xD84F04")]
		public static int PlayParam(string eventId, float intensity, float duration, float angleX, float offsetY)
		{
			return default(int);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xD88920", Offset = "0xD88920", VA = "0xD88920")]
		public static int PlayMotors(int position, int[] motors, int durationMillis)
		{
			return default(int);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xD88A28", Offset = "0xD88A28", VA = "0xD88A28")]
		public static bool StopByEventId(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xD85070", Offset = "0xD85070", VA = "0xD85070")]
		public static bool StopInt(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xD88B04", Offset = "0xD88B04", VA = "0xD88B04")]
		public static bool StopAll()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xD88BD4", Offset = "0xD88BD4", VA = "0xD88BD4")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xD88CA4", Offset = "0xD88CA4", VA = "0xD88CA4")]
		public static bool IsPlayingByEventId(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xD856F4", Offset = "0xD856F4", VA = "0xD856F4")]
		public static bool IsPlayingByRequestId(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xD88D80", Offset = "0xD88D80", VA = "0xD88D80")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xD8857C", Offset = "0xD8857C", VA = "0xD8857C")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xD88E74", Offset = "0xD88E74", VA = "0xD88E74")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xD890F8", Offset = "0xD890F8", VA = "0xD890F8")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xD89284", Offset = "0xD89284", VA = "0xD89284")]
		public static void Ping(HapticDevice targetDevice)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xD89364", Offset = "0xD89364", VA = "0xD89364")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xD89430", Offset = "0xD89430", VA = "0xD89430")]
		public static void TogglePosition(HapticDevice targetDevice)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xD8950C", Offset = "0xD8950C", VA = "0xD8950C")]
		public static void OnApplicationFocus()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xD89558", Offset = "0xD89558", VA = "0xD89558")]
		public static void OnApplicationPause()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xD895A4", Offset = "0xD895A4", VA = "0xD895A4")]
		public BhapticsLibrary()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class bhaptics_library
	{
		[Token(Token = "0x4002673")]
		private const string ModuleName = "bhaptics_library";

		[PreserveSig]
		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xD8A674", Offset = "0xD8A674", VA = "0xD8A674")]
		public static extern bool registryAndInit(string sdkAPIKey, string workspaceId, string initData);

		[PreserveSig]
		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xD8A750", Offset = "0xD8A750", VA = "0xD8A750")]
		public static extern bool registryAndInitHost(string sdkAPIKey, string workspaceId, string initData, string url);

		[PreserveSig]
		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xD8A848", Offset = "0xD8A848", VA = "0xD8A848")]
		public static extern bool wsIsConnected();

		[PreserveSig]
		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xD8A8B8", Offset = "0xD8A8B8", VA = "0xD8A8B8")]
		public static extern void wsClose();

		[PreserveSig]
		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xD8A91C", Offset = "0xD8A91C", VA = "0xD8A91C")]
		public static extern bool reInitMessage(string sdkAPIKey, string workspaceId, string initData);

		[PreserveSig]
		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xD8A9F8", Offset = "0xD8A9F8", VA = "0xD8A9F8")]
		public static extern int play(string key);

		[PreserveSig]
		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xD8AA8C", Offset = "0xD8AA8C", VA = "0xD8AA8C")]
		public static extern int playPosParam(string key, int position, float intensity, float duration, float angleX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xD8AB58", Offset = "0xD8AB58", VA = "0xD8AB58")]
		public static extern bool stop(int key);

		[PreserveSig]
		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xD8ABD8", Offset = "0xD8ABD8", VA = "0xD8ABD8")]
		public static extern bool stopByEventId(string eventId);

		[PreserveSig]
		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xD8AC70", Offset = "0xD8AC70", VA = "0xD8AC70")]
		public static extern bool stopAll();

		[PreserveSig]
		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xD8ACE0", Offset = "0xD8ACE0", VA = "0xD8ACE0")]
		public static extern bool isPlaying();

		[PreserveSig]
		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xD8AD50", Offset = "0xD8AD50", VA = "0xD8AD50")]
		public static extern bool isPlayingByRequestId(int key);

		[PreserveSig]
		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xD8ADD4", Offset = "0xD8ADD4", VA = "0xD8ADD4")]
		public static extern bool isPlayingByEventId(string eventId);

		[PreserveSig]
		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xD8AE6C", Offset = "0xD8AE6C", VA = "0xD8AE6C")]
		public static extern bool isbHapticsConnected(int position);

		[PreserveSig]
		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xD8AEF0", Offset = "0xD8AEF0", VA = "0xD8AEF0")]
		public static extern bool ping(string address);

		[PreserveSig]
		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xD8AF88", Offset = "0xD8AF88", VA = "0xD8AF88")]
		public static extern bool pingAll();

		[PreserveSig]
		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xD8AFF8", Offset = "0xD8AFF8", VA = "0xD8AFF8")]
		public static extern bool swapPosition(string address);

		[PreserveSig]
		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xD8B090", Offset = "0xD8B090", VA = "0xD8B090")]
		public static extern IntPtr getDeviceInfoJson();

		[PreserveSig]
		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xD8B0F8", Offset = "0xD8B0F8", VA = "0xD8B0F8")]
		public static extern bool isPlayerInstalled();

		[PreserveSig]
		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xD8B168", Offset = "0xD8B168", VA = "0xD8B168")]
		public static extern bool isPlayerRunning();

		[PreserveSig]
		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xD8B1D8", Offset = "0xD8B1D8", VA = "0xD8B1D8")]
		public static extern bool launchPlayer(bool b);

		[PreserveSig]
		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xD8B25C", Offset = "0xD8B25C", VA = "0xD8B25C")]
		public static extern IntPtr bHapticsGetHapticMessage(string apiKey, string appId, int lastVersion, out int status);

		[PreserveSig]
		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD8B328", Offset = "0xD8B328", VA = "0xD8B328")]
		public static extern IntPtr bHapticsGetHapticMappings(string apiKey, string appId, int lastVersion, out int status);

		[PreserveSig]
		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD8B3F4", Offset = "0xD8B3F4", VA = "0xD8B3F4")]
		public static extern int playDot(int position, int durationMillis, int[] motors, int size);

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xD8B498", Offset = "0xD8B498", VA = "0xD8B498")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xD8B898", Offset = "0xD8B898", VA = "0xD8B898")]
		public static List<MappingMetaData> EditorGetEventList(string appId, string apiKey, int lastVersion, out int status)
		{
			return null;
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD8BA78", Offset = "0xD8BA78", VA = "0xD8BA78")]
		public static string EditorGetSettings(string appId, string apiKey, int lastVersion, out int status2)
		{
			return null;
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xD8B62C", Offset = "0xD8B62C", VA = "0xD8B62C")]
		private static string PtrToStringUtf8(IntPtr ptr)
		{
			return null;
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xD8BB04", Offset = "0xD8BB04", VA = "0xD8BB04")]
		public bhaptics_library()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class BhapticsEvent
	{
		[Token(Token = "0x4002674")]
		public const string DAMAGE_VEST = "damage_vest";

		[Token(Token = "0x4002675")]
		public const string HEARTBEAT_FAST = "heartbeat_fast";

		[Token(Token = "0x4002676")]
		public const string PUTBACKSLOT_RIGHT = "putbackslot_right";

		[Token(Token = "0x4002677")]
		public const string RELOAD_RIGHT_HAND = "reload_right_hand";

		[Token(Token = "0x4002678")]
		public const string PRONING = "proning";

		[Token(Token = "0x4002679")]
		public const string JUMP_START = "jump_start";

		[Token(Token = "0x400267A")]
		public const string GRABOBJECT_RIGHT_VEST = "grabobject_right_vest";

		[Token(Token = "0x400267B")]
		public const string GRABOBJECT_RIGHT = "grabobject_right";

		[Token(Token = "0x400267C")]
		public const string PUTWAISTSLOT_CENTER = "putwaistslot_center";

		[Token(Token = "0x400267D")]
		public const string DAMAGE_RIGHT_ARM = "damage_right_arm";

		[Token(Token = "0x400267E")]
		public const string PUTWAISTSLOT_LEFT = "putwaistslot_left";

		[Token(Token = "0x400267F")]
		public const string DAMAGE_LEFT_ARM = "damage_left_arm";

		[Token(Token = "0x4002680")]
		public const string HEARTBEAT = "heartbeat";

		[Token(Token = "0x4002681")]
		public const string BACK_VEST = "back_vest";

		[Token(Token = "0x4002682")]
		public const string FRONT_VEST = "front_vest";

		[Token(Token = "0x4002683")]
		public const string RECOIL_LEVEL2_RIGHT = "recoil_level2_right";

		[Token(Token = "0x4002684")]
		public const string RECOIL_LEVEL2_LEFT = "recoil_level2_left";

		[Token(Token = "0x4002685")]
		public const string GRABOBJECT_LEFT_VEST = "grabobject_left_vest";

		[Token(Token = "0x4002686")]
		public const string JUMP_END = "jump_end";

		[Token(Token = "0x4002687")]
		public const string PUTBACKSLOT_LEFT = "putbackslot_left";

		[Token(Token = "0x4002688")]
		public const string DAMAGE_HEAD = "damage_head";

		[Token(Token = "0x4002689")]
		public const string RELOAD_LEFT_HAND = "reload_left_hand";

		[Token(Token = "0x400268A")]
		public const string GRABOBJECT_RIGHT_ARM = "grabobject_right_arm";

		[Token(Token = "0x400268B")]
		public const string RECOIL_RIGHT_ARM = "recoil_right_arm";

		[Token(Token = "0x400268C")]
		public const string DAMAGE_FEET = "damage_feet";

		[Token(Token = "0x400268D")]
		public const string GRABOBJECT_LEFT = "grabobject_left";

		[Token(Token = "0x400268E")]
		public const string GRABOBJECT_LEFT_ARM = "grabobject_left_arm";

		[Token(Token = "0x400268F")]
		public const string PUTWAISTSLOT_RIGHT = "putwaistslot_right";

		[Token(Token = "0x4002690")]
		public const string GAME_START = "game_start";

		[Token(Token = "0x4002691")]
		public const string RECOIL_LEFT_ARM = "recoil_left_arm";

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xD8BB0C", Offset = "0xD8BB0C", VA = "0xD8BB0C")]
		public BhapticsEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040B")]
	internal class Device
	{
		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool paired;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string deviceName;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int position;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool connected;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string address;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int battery;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool audioJackIn;

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xD8BB14", Offset = "0xD8BB14", VA = "0xD8BB14")]
		public Device()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public enum PositionType
	{
		[Token(Token = "0x400269A")]
		Vest,
		[Token(Token = "0x400269B")]
		ForearmL,
		[Token(Token = "0x400269C")]
		ForearmR,
		[Token(Token = "0x400269D")]
		Head,
		[Token(Token = "0x400269E")]
		HandL,
		[Token(Token = "0x400269F")]
		HandR,
		[Token(Token = "0x40026A0")]
		FootL,
		[Token(Token = "0x40026A1")]
		FootR,
		[Token(Token = "0x40026A2")]
		GloveL,
		[Token(Token = "0x40026A3")]
		GloveR
	}
	[Serializable]
	[Token(Token = "0x200040D")]
	public class MappingMetaData
	{
		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int durationMillis;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isAudio;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long updateTime;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] positions;

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xD8BB1C", Offset = "0xD8BB1C", VA = "0xD8BB1C")]
		public MappingMetaData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040E")]
	internal class MappingMessage
	{
		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool status;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MappingMetaData> message;

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xD8BA30", Offset = "0xD8BA30", VA = "0xD8BA30")]
		public static MappingMessage CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xD8BB24", Offset = "0xD8BB24", VA = "0xD8BB24")]
		public MappingMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public class DeployMessage
	{
		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int version;

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xD8BB2C", Offset = "0xD8BB2C", VA = "0xD8BB2C")]
		public DeployMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000410")]
	public class DeployHttpMessage
	{
		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool status;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DeployMessage message;

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xD8BB34", Offset = "0xD8BB34", VA = "0xD8BB34")]
		public static DeployHttpMessage CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xD8BB7C", Offset = "0xD8BB7C", VA = "0xD8BB7C")]
		public DeployHttpMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000411")]
	public class HapticDevice
	{
		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsAudioJack;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xD8BB84", Offset = "0xD8BB84", VA = "0xD8BB84")]
		public HapticDevice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000412")]
	internal class DeviceListMessage
	{
		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Device[] devices;

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xD8BB8C", Offset = "0xD8BB8C", VA = "0xD8BB8C")]
		public DeviceListMessage()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class BhapticsHelpers
	{
		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xD8BB94", Offset = "0xD8BB94", VA = "0xD8BB94")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xD8BD38", Offset = "0xD8BD38", VA = "0xD8BD38")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xD8BD90", Offset = "0xD8BD90", VA = "0xD8BD90")]
		public static string ErrorCodeToMessage(int code)
		{
			return null;
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xD8BEA8", Offset = "0xD8BEA8", VA = "0xD8BEA8")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xD8B770", Offset = "0xD8B770", VA = "0xD8B770")]
		internal static List<HapticDevice> Convert(Device[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xD8BFF4", Offset = "0xD8BFF4", VA = "0xD8BFF4")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xD8C0B4", Offset = "0xD8C0B4", VA = "0xD8C0B4")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xD8C0A4", Offset = "0xD8C0A4", VA = "0xD8C0A4")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xD8C214", Offset = "0xD8C214", VA = "0xD8C214")]
		public BhapticsHelpers()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class BhapticsSDK2 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsSDK2 instance;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BhapticsSettings bhapticsSettings;

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xD8C21C", Offset = "0xD8C21C", VA = "0xD8C21C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xD8C6F8", Offset = "0xD8C6F8", VA = "0xD8C6F8")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xD8C75C", Offset = "0xD8C75C", VA = "0xD8C75C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xD8C804", Offset = "0xD8C804", VA = "0xD8C804")]
		public BhapticsSDK2()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000415")]
	public class BhapticsConfig
	{
		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string appId;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string apiKey;

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xD8C80C", Offset = "0xD8C80C", VA = "0xD8C80C")]
		public BhapticsConfig()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class BhapticsSettings : ScriptableObject
	{
		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsSettings instance;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string appName;

		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string appId;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string apiKey;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int lastDeployVersion;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MappingMetaData[] eventData;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private string defaultDeploy;

		[Token(Token = "0x1700031B")]
		public static BhapticsSettings Instance
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xD8C6AC", Offset = "0xD8C6AC", VA = "0xD8C6AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public string AppName
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xD8CA24", Offset = "0xD8CA24", VA = "0xD8CA24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0xD8CA2C", Offset = "0xD8CA2C", VA = "0xD8CA2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public string AppId
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xD8CA34", Offset = "0xD8CA34", VA = "0xD8CA34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xD8CA3C", Offset = "0xD8CA3C", VA = "0xD8CA3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public string ApiKey
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xD8CA44", Offset = "0xD8CA44", VA = "0xD8CA44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0xD8CA4C", Offset = "0xD8CA4C", VA = "0xD8CA4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public MappingMetaData[] EventData
		{
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0xD8CA54", Offset = "0xD8CA54", VA = "0xD8CA54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0xD8CA5C", Offset = "0xD8CA5C", VA = "0xD8CA5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public int LastDeployVersion
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xD8CA64", Offset = "0xD8CA64", VA = "0xD8CA64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xD8CA6C", Offset = "0xD8CA6C", VA = "0xD8CA6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public string DefaultDeploy
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xD8CA74", Offset = "0xD8CA74", VA = "0xD8CA74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xD8CA7C", Offset = "0xD8CA7C", VA = "0xD8CA7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xD8CA84", Offset = "0xD8CA84", VA = "0xD8CA84")]
		public static void VerifyScriptableObject()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xD8CA88", Offset = "0xD8CA88", VA = "0xD8CA88")]
		public static void ResetInstance()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xD8C85C", Offset = "0xD8C85C", VA = "0xD8C85C")]
		private static void LoadInstance()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xD8CC00", Offset = "0xD8CC00", VA = "0xD8CC00")]
		public BhapticsSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000417")]
	public class PositonIconSetting
	{
		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xD8CC60", Offset = "0xD8CC60", VA = "0xD8CC60")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000418")]
	public class IconSetting
	{
		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Setting Icons")]
		public PositonIconSetting Vest;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PositonIconSetting GloveL;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PositonIconSetting GloveR;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xD8CC68", Offset = "0xD8CC68", VA = "0xD8CC68")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class BhapticsDeviceUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("UI")]
		private Image icon;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Connect Menu")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Header("Disconnect Menu")]
		private GameObject DisconnectMenu;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xD8CC70", Offset = "0xD8CC70", VA = "0xD8CC70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xD8CE50", Offset = "0xD8CE50", VA = "0xD8CE50")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xD8D014", Offset = "0xD8D014", VA = "0xD8D014")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xD8D09C", Offset = "0xD8D09C", VA = "0xD8D09C")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xD8D10C", Offset = "0xD8D10C", VA = "0xD8D10C")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xD8CEE8", Offset = "0xD8CEE8", VA = "0xD8CEE8")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xD8D4F0", Offset = "0xD8D4F0", VA = "0xD8D4F0")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xD8D514", Offset = "0xD8D514", VA = "0xD8D514")]
		private void Ping()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xD8D580", Offset = "0xD8D580", VA = "0xD8D580")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xD8D644", Offset = "0xD8D644", VA = "0xD8D644")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xD8D708", Offset = "0xD8D708", VA = "0xD8D708")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xD8D3BC", Offset = "0xD8D3BC", VA = "0xD8D3BC")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xD8D374", Offset = "0xD8D374", VA = "0xD8D374")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xD8D398", Offset = "0xD8D398", VA = "0xD8D398")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xD8D73C", Offset = "0xD8D73C", VA = "0xD8D73C")]
		public BhapticsDeviceUI()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class BhapticsUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float intervalRefreshTime;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Devices UI")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BhapticsDeviceUI devicePrefab;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("No Paired Device UI")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button bHapticsLinkButton;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject helpDescriptionPC;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject helpDescriptionQuest;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<BhapticsDeviceUI> controllers;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int deviceListSize;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int deviceListPageIndex;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int expandHeight;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int expandDeviceCount;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int pageExpandHeight;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int maxPageIndex;

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xD8D810", Offset = "0xD8D810", VA = "0xD8D810")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xD8DCA4", Offset = "0xD8DCA4", VA = "0xD8DCA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xD8DCF0", Offset = "0xD8DCF0", VA = "0xD8DCF0")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xD8E3D4", Offset = "0xD8E3D4", VA = "0xD8E3D4")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xD8E3DC", Offset = "0xD8E3DC", VA = "0xD8E3DC")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xD8E3E4", Offset = "0xD8E3E4", VA = "0xD8E3E4")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xD8E428", Offset = "0xD8E428", VA = "0xD8E428")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xD8E44C", Offset = "0xD8E44C", VA = "0xD8E44C")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xD8E348", Offset = "0xD8E348", VA = "0xD8E348")]
		private void SetActiveHelpGameObject(bool value)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xD8E470", Offset = "0xD8E470", VA = "0xD8E470")]
		public BhapticsUI()
		{
		}
	}
}
namespace DuloGames.UI
{
	[Token(Token = "0x200041B")]
	[AddComponentMenu("UI/Flippable", 8)]
	[DisallowMultipleComponent]
	[RequireComponent(typeof(Graphic))]
	[RequireComponent(typeof(RectTransform))]
	public class UIFlippable : UnityEngine.MonoBehaviour, IMeshModifier
	{
		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Horizontal;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_Veritical;

		[Token(Token = "0x17000322")]
		public bool horizontal
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xD8E508", Offset = "0xD8E508", VA = "0xD8E508")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xD8E510", Offset = "0xD8E510", VA = "0xD8E510")]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public bool vertical
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xD8E580", Offset = "0xD8E580", VA = "0xD8E580")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0xD8E588", Offset = "0xD8E588", VA = "0xD8E588")]
			set
			{
			}
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xD8E5F8", Offset = "0xD8E5F8", VA = "0xD8E5F8", Slot = "5")]
		public void ModifyMesh(VertexHelper vertexHelper)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xD8E8A4", Offset = "0xD8E8A4", VA = "0xD8E8A4", Slot = "4")]
		public void ModifyMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xD8E6C0", Offset = "0xD8E6C0", VA = "0xD8E6C0")]
		public void ModifyVertices(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xD8EBF8", Offset = "0xD8EBF8", VA = "0xD8EBF8")]
		public UIFlippable()
		{
		}
	}
}
namespace VolumetricLines
{
	[Token(Token = "0x200041C")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(MeshFilter))]
	[RequireComponent(typeof(MeshRenderer))]
	public class VolumetricLineBehavior : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 Average;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_startPos;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_endPos;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_material;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MeshRenderer m_meshRenderer;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Width;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int SaberFactor;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int LineScale;

		[Token(Token = "0x17000324")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xD8EC00", Offset = "0xD8EC00", VA = "0xD8EC00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xD8EC08", Offset = "0xD8EC08", VA = "0xD8EC08")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xD8EC10", Offset = "0xD8EC10", VA = "0xD8EC10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xD8EC18", Offset = "0xD8EC18", VA = "0xD8EC18")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public Color LineColor
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xD8EC24", Offset = "0xD8EC24", VA = "0xD8EC24")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xD8EC30", Offset = "0xD8EC30", VA = "0xD8EC30")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public float LineWidth
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xD8EE74", Offset = "0xD8EE74", VA = "0xD8EE74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xD8EE7C", Offset = "0xD8EE7C", VA = "0xD8EE7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xD8F02C", Offset = "0xD8F02C", VA = "0xD8F02C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0xD8F034", Offset = "0xD8F034", VA = "0xD8F034")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public Vector3 StartPos
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xD8F10C", Offset = "0xD8F10C", VA = "0xD8F10C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0xD8F118", Offset = "0xD8F118", VA = "0xD8F118")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public Vector3 EndPos
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xD8F41C", Offset = "0xD8F41C", VA = "0xD8F41C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xD8F428", Offset = "0xD8F428", VA = "0xD8F428")]
			set
			{
			}
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xD8ECFC", Offset = "0xD8ECFC", VA = "0xD8ECFC")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xD8F560", Offset = "0xD8F560", VA = "0xD8F560")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xD8F5EC", Offset = "0xD8F5EC", VA = "0xD8F5EC")]
		private float CalculateLineScale()
		{
			return default(float);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xD8F698", Offset = "0xD8F698", VA = "0xD8F698")]
		public void UpdateLineScale()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xD8F448", Offset = "0xD8F448", VA = "0xD8F448")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xD8F75C", Offset = "0xD8F75C", VA = "0xD8F75C")]
		private Bounds CalculateBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xD8EF4C", Offset = "0xD8EF4C", VA = "0xD8EF4C")]
		public void UpdateBounds()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xD8F12C", Offset = "0xD8F12C", VA = "0xD8F12C")]
		public void SetStartAndEndPoints(Vector3 startPoint, Vector3 endPoint)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xD8F914", Offset = "0xD8F914", VA = "0xD8F914")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD8F964", Offset = "0xD8F964", VA = "0xD8F964")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xD8FA80", Offset = "0xD8FA80", VA = "0xD8FA80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xD8FAA0", Offset = "0xD8FAA0", VA = "0xD8FAA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xD8FAC0", Offset = "0xD8FAC0", VA = "0xD8FAC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xD8FB94", Offset = "0xD8FB94", VA = "0xD8FB94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xD8FBD4", Offset = "0xD8FBD4", VA = "0xD8FBD4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xD8FC70", Offset = "0xD8FC70", VA = "0xD8FC70")]
		public VolumetricLineBehavior()
		{
		}
	}
	[Token(Token = "0x200041D")]
	[RequireComponent(typeof(MeshFilter))]
	[RequireComponent(typeof(MeshRenderer))]
	[ExecuteInEditMode]
	public class VolumetricLineStripBehavior : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 Average;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_material;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Width;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int SaberFactor;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int LineScale;

		[Token(Token = "0x1700032B")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xD8FD68", Offset = "0xD8FD68", VA = "0xD8FD68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xD8FD70", Offset = "0xD8FD70", VA = "0xD8FD70")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xD8FD78", Offset = "0xD8FD78", VA = "0xD8FD78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xD8FD80", Offset = "0xD8FD80", VA = "0xD8FD80")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public Color LineColor
		{
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xD8FD8C", Offset = "0xD8FD8C", VA = "0xD8FD8C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xD8FD98", Offset = "0xD8FD98", VA = "0xD8FD98")]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public float LineWidth
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xD8FFDC", Offset = "0xD8FFDC", VA = "0xD8FFDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xD8FFE4", Offset = "0xD8FFE4", VA = "0xD8FFE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xD90194", Offset = "0xD90194", VA = "0xD90194")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xD9019C", Offset = "0xD9019C", VA = "0xD9019C")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public Vector3[] LineVertices
		{
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xD90274", Offset = "0xD90274", VA = "0xD90274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xD8FE64", Offset = "0xD8FE64", VA = "0xD8FE64")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xD9038C", Offset = "0xD9038C", VA = "0xD9038C")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xD90418", Offset = "0xD90418", VA = "0xD90418")]
		private float CalculateLineScale()
		{
			return default(float);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xD904C4", Offset = "0xD904C4", VA = "0xD904C4")]
		public void UpdateLineScale()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xD9027C", Offset = "0xD9027C", VA = "0xD9027C")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xD9119C", Offset = "0xD9119C", VA = "0xD9119C")]
		private Bounds CalculateBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xD900B4", Offset = "0xD900B4", VA = "0xD900B4")]
		public void UpdateBounds()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xD90588", Offset = "0xD90588", VA = "0xD90588")]
		public void UpdateLineVertices(Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xD913B8", Offset = "0xD913B8", VA = "0xD913B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xD91458", Offset = "0xD91458", VA = "0xD91458")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xD9152C", Offset = "0xD9152C", VA = "0xD9152C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xD9156C", Offset = "0xD9156C", VA = "0xD9156C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xD91608", Offset = "0xD91608", VA = "0xD91608")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xD9175C", Offset = "0xD9175C", VA = "0xD9175C")]
		public VolumetricLineStripBehavior()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public static class VolumetricLineVertexData
	{
		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2[] TexCoords;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2[] VertexOffsets;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int[] Indices;
	}
}
namespace Assets.Editor
{
	[Token(Token = "0x200041F")]
	public class HierarchyHighlightManager
	{
		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xD91A24", Offset = "0xD91A24", VA = "0xD91A24")]
		public HierarchyHighlightManager()
		{
		}
	}
}
namespace Darketomaly
{
	[Token(Token = "0x2000420")]
	public class Bazooka : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject mesh;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Bullet behavior")]
		[SerializeField]
		private BazookaBullet bullet;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Effects")]
		public Transform muzzle;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rear;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject fireVfxFront;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fireVfxRear;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource fireSfx;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject impactVfx;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Damage")]
		public float Damage;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool firedOnce;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xD91A2C", Offset = "0xD91A2C", VA = "0xD91A2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xD91A94", Offset = "0xD91A94", VA = "0xD91A94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xD91AA0", Offset = "0xD91AA0", VA = "0xD91AA0")]
		private void Explode(Vector3 at)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xD91C50", Offset = "0xD91C50", VA = "0xD91C50")]
		public Bazooka()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class BazookaBullet : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000422")]
		[CompilerGenerated]
		private sealed class <Fire>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BazookaBullet <>4__this;

			[Token(Token = "0x4002728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <torqueForce>5__2;

			[Token(Token = "0x4002729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <torqueLifetime>5__3;

			[Token(Token = "0x400272A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lifeTime>5__4;

			[Token(Token = "0x17000331")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A79")]
				[Address(RVA = "0xD920DC", Offset = "0xD920DC", VA = "0xD920DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000332")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A7B")]
				[Address(RVA = "0xD92124", Offset = "0xD92124", VA = "0xD92124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A76")]
			[Address(RVA = "0xD91E78", Offset = "0xD91E78", VA = "0xD91E78")]
			[DebuggerHidden]
			public <Fire>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xD91F1C", Offset = "0xD91F1C", VA = "0xD91F1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A78")]
			[Address(RVA = "0xD91F20", Offset = "0xD91F20", VA = "0xD91F20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0xD920E4", Offset = "0xD920E4", VA = "0xD920E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Vector3> onBulletHit;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rb;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float acceleration;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxLifeTime;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Collision")]
		[SerializeField]
		private Collider ownCollider;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Collider> ignoreColliders;

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xD91C58", Offset = "0xD91C58", VA = "0xD91C58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xD91D90", Offset = "0xD91D90", VA = "0xD91D90")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xD91E10", Offset = "0xD91E10", VA = "0xD91E10")]
		[IteratorStateMachine(typeof(<Fire>d__8))]
		public IEnumerator Fire()
		{
			return null;
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xD91EA0", Offset = "0xD91EA0", VA = "0xD91EA0")]
		public BazookaBullet()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class BindExtension : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000424")]
		public class Replacement
		{
			[Token(Token = "0x4002733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Remember to use whole replacement values. I.e.: {val1}")]
			public string replaceFrom;

			[Token(Token = "0x4002734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string replaceTo;

			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0xD92C60", Offset = "0xD92C60", VA = "0xD92C60")]
			public Replacement()
			{
			}
		}

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Method 1")]
		[Tooltip("Text to be binded after translation")]
		[TextArea]
		public string textToBind;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Before or after original text?")]
		public bool afterOriginal;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool insertSpace;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Method 2")]
		public List<Replacement> replacements;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI tmpro;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LanguageTextTMProBind bind;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text normalText;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LanguageTextBind normalBind;

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xD9212C", Offset = "0xD9212C", VA = "0xD9212C")]
		private void BindText()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xD92A54", Offset = "0xD92A54", VA = "0xD92A54")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xD92BDC", Offset = "0xD92BDC", VA = "0xD92BDC")]
		public BindExtension()
		{
		}
	}
}
namespace Malee
{
	[Serializable]
	[Token(Token = "0x2000425")]
	public abstract class ReorderableArray<T> : ICloneable, IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> m_Array;

		[Token(Token = "0x17000333")]
		public List<T> Array
		{
			[Token(Token = "0x6001A80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A81")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public T this[int index]
		{
			[Token(Token = "0x6001A84")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001A85")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public int Length
		{
			[Token(Token = "0x6001A86")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000336")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6001A87")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000337")]
		public int Count
		{
			[Token(Token = "0x6001A88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A82")]
		public ReorderableArray()
		{
		}

		[Token(Token = "0x6001A83")]
		public ReorderableArray(int length)
		{
		}

		[Token(Token = "0x6001A89")]
		public object Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A8A")]
		public void CopyFrom(IEnumerable<T> value)
		{
		}

		[Token(Token = "0x6001A8B")]
		public bool Contains(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8C")]
		public int IndexOf(T value)
		{
			return default(int);
		}

		[Token(Token = "0x6001A8D")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001A8E")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001A8F")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001A90")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A91")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001A92")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A93")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001A95")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace k
{
	[Token(Token = "0x2000426")]
	public static class Layers
	{
		[Token(Token = "0x4002736")]
		public const int Default = 0;

		[Token(Token = "0x4002737")]
		public const int TransparentFX = 1;

		[Token(Token = "0x4002738")]
		public const int Ignore_Raycast = 2;

		[Token(Token = "0x4002739")]
		public const int Water = 4;

		[Token(Token = "0x400273A")]
		public const int UI = 5;

		[Token(Token = "0x400273B")]
		public const int Gun2 = 7;

		[Token(Token = "0x400273C")]
		public const int Gun = 8;

		[Token(Token = "0x400273D")]
		public const int MiniMap = 9;

		[Token(Token = "0x400273E")]
		public const int InvisibleWall = 10;

		[Token(Token = "0x400273F")]
		public const int Player = 11;

		[Token(Token = "0x4002740")]
		public const int Bullet_Shells = 12;

		[Token(Token = "0x4002741")]
		public const int NPCs = 13;

		[Token(Token = "0x4002742")]
		public const int GUICamera = 14;

		[Token(Token = "0x4002743")]
		public const int FogVolume = 15;

		[Token(Token = "0x4002744")]
		public const int VrGunProximiti = 16;

		[Token(Token = "0x4002745")]
		public const int EnemyPlayer = 17;

		[Token(Token = "0x4002746")]
		public const int RC_Cam = 18;

		[Token(Token = "0x4002747")]
		public const int UIVR = 19;

		[Token(Token = "0x4002748")]
		public const int LeanCollider = 20;

		[Token(Token = "0x4002749")]
		public const int Player_Clip = 21;

		[Token(Token = "0x400274A")]
		public const int LocalPlayer = 22;

		[Token(Token = "0x400274B")]
		public const int VrGranade = 23;

		[Token(Token = "0x400274C")]
		public const int Team1Local = 24;

		[Token(Token = "0x400274D")]
		public const int Team2Local = 25;

		[Token(Token = "0x400274E")]
		public const int Team1 = 26;

		[Token(Token = "0x400274F")]
		public const int Team2 = 27;

		[Token(Token = "0x4002750")]
		public const int Ragdoll = 28;

		[Token(Token = "0x4002751")]
		public const int Defense = 29;

		[Token(Token = "0x4002752")]
		public const int VrCameraIgnore = 30;

		[Token(Token = "0x4002753")]
		public const int VrGunCollision = 31;

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xD92C68", Offset = "0xD92C68", VA = "0xD92C68")]
		public static int onlyIncluding(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xD92CD0", Offset = "0xD92CD0", VA = "0xD92CD0")]
		public static int everythingBut(params int[] layers)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000427")]
	public static class Resources
	{
		[Token(Token = "0x4002754")]
		public const string BillingMode = "BillingMode";

		[Token(Token = "0x4002755")]
		public const string ChatSettingsFile = "ChatSettingsFile";

		[Token(Token = "0x4002756")]
		public const string DOTweenSettings = "DOTweenSettings";

		[Token(Token = "0x4002757")]
		public const string OculusPlatformSettings = "OculusPlatformSettings";

		[Token(Token = "0x4002758")]
		public const string OculusRuntimeSettings = "OculusRuntimeSettings";

		[Token(Token = "0x4002759")]
		public const string ONSPSettings = "ONSPSettings";

		[Token(Token = "0x400275A")]
		public const string OVRBuildConfig = "OVRBuildConfig";

		[Token(Token = "0x400275B")]
		public const string OVRPlatformToolSettings = "OVRPlatformToolSettings";

		[Token(Token = "0x400275C")]
		public const string PXR_PlatformSetting = "PXR_PlatformSetting";

		[Token(Token = "0x400275D")]
		public const string PXR_ProjectSetting = "PXR_ProjectSetting";

		[Token(Token = "0x400275E")]
		public const string PXR_SDKSettingAsset = "PXR_SDKSettingAsset";

		[Token(Token = "0x400275F")]
		public const string test = "test";

		[Token(Token = "0x4002760")]
		public const string TestShake = "TestShake";

		[Token(Token = "0x4002761")]
		public const string _Empty = "_Empty";

		[Token(Token = "0x4002762")]
		public const string AI_New = "AI/AI New";

		[Token(Token = "0x4002763")]
		public const string BulletTrail = "Effects/BulletTrail";

		[Token(Token = "0x4002764")]
		public const string AttackDog = "KillStreaks/AttackDog";

		[Token(Token = "0x4002765")]
		public const string Car = "KillStreaks/Car";

		[Token(Token = "0x4002766")]
		public const string Drone = "KillStreaks/Drone";

		[Token(Token = "0x4002767")]
		public const string RC = "KillStreaks/RC";

		[Token(Token = "0x4002768")]
		public const string Turret = "KillStreaks/Turret";

		[Token(Token = "0x4002769")]
		public const string Cube = "Players/Cube";

		[Token(Token = "0x400276A")]
		public const string NewCharacterLoad = "Players/NewCharacterLoad";

		[Token(Token = "0x400276B")]
		public const string NewCharacterLoadAsync = "Players/NewCharacterLoadAsync";

		[Token(Token = "0x400276C")]
		public const string BazookaProjectile = "Projectiles/BazookaProjectile";

		[Token(Token = "0x400276D")]
		public const string FlashGrenade = "Projectiles/FlashGrenade";

		[Token(Token = "0x400276E")]
		public const string FragGrenade = "Projectiles/FragGrenade";

		[Token(Token = "0x400276F")]
		public const string Molotov = "Projectiles/Molotov";

		[Token(Token = "0x4002770")]
		public const string SmokeGrenade = "Projectiles/SmokeGrenade";

		[Token(Token = "0x4002771")]
		public const string StickyGrenade = "Projectiles/StickyGrenade";

		[Token(Token = "0x4002772")]
		public const string DroppedBomb = "Props/DroppedBomb";

		[Token(Token = "0x4002773")]
		public const string AI_New_Ragdoll = "Ragdolls/AI New Ragdoll";

		[Token(Token = "0x4002774")]
		public const string AI = "Ragdolls/AI";

		[Token(Token = "0x4002775")]
		public const string FinalRig3_Ragdoll = "Ragdolls/FinalRig3 Ragdoll";

		[Token(Token = "0x4002776")]
		public const string Player = "Ragdolls/Player";

		[Token(Token = "0x4002777")]
		public const string AntiProjectileSystem = "TacticalGear/AntiProjectileSystem";

		[Token(Token = "0x4002778")]
		public const string ProximityMine = "TacticalGear/ProximityMine";

		[Token(Token = "0x4002779")]
		public const string Tactical_None = "TacticalGear/Tactical None";

		[Token(Token = "0x400277A")]
		public const string Friend = "UI/Friend";

		[Token(Token = "0x400277B")]
		public const string Game = "UI/Game";

		[Token(Token = "0x400277C")]
		public const string Notification = "UI/Notification";

		[Token(Token = "0x400277D")]
		public const string StandardRadarThroughObject = "Voice/StandardRadarThroughObject";

		[Token(Token = "0x400277E")]
		public const string Voice = "Voice/Voice";

		[Token(Token = "0x400277F")]
		public const string VoiceTitle = "Voice/VoiceTitle";

		[Token(Token = "0x4002780")]
		public const string AoEDropFire_pfb = "Zombies/AoEDropFire_pfb";

		[Token(Token = "0x4002781")]
		public const string AoEFire_Physics = "Zombies/AoEFire_Physics";

		[Token(Token = "0x4002782")]
		public const string CratesObjective_Pfb = "Zombies/CratesObjective_Pfb";

		[Token(Token = "0x4002783")]
		public const string ZombieBasic_pfb = "Zombies/ZombieBasic_pfb";

		[Token(Token = "0x4002784")]
		public const string ZombieDog_pfb = "Zombies/ZombieDog_pfb";

		[Token(Token = "0x4002785")]
		public const string ZombieExplosive_pfb = "Zombies/ZombieExplosive_pfb";

		[Token(Token = "0x4002786")]
		public const string ZombieProjectile_pfb = "Zombies/ZombieProjectile_pfb";

		[Token(Token = "0x4002787")]
		public const string ZombieTank_pfb = "Zombies/ZombieTank_pfb";

		[Token(Token = "0x4002788")]
		public const string green = "green";

		[Token(Token = "0x4002789")]
		public const string grid = "grid";

		[Token(Token = "0x400278A")]
		public const string plane = "plane";

		[Token(Token = "0x400278B")]
		public const string standardcontroller = "standardcontroller";

		[Token(Token = "0x400278C")]
		public const string UnderlayHole = "UnderlayHole";

		[Token(Token = "0x400278D")]
		public const string unlitcontroller = "unlitcontroller";

		[Token(Token = "0x400278E")]
		public const string G2 = "Controller/G2";

		[Token(Token = "0x400278F")]
		public const string generalMat = "Controller/generalMat";

		[Token(Token = "0x4002790")]
		public const string Neo2_L = "Controller/Neo2_L";

		[Token(Token = "0x4002791")]
		public const string Neo2_R = "Controller/Neo2_R";

		[Token(Token = "0x4002792")]
		public const string Neo3_L = "Controller/Neo3_L";

		[Token(Token = "0x4002793")]
		public const string Neo3_R = "Controller/Neo3_R";

		[Token(Token = "0x4002794")]
		public const string PICO_4_L = "Controller/PICO 4_L";

		[Token(Token = "0x4002795")]
		public const string PICO_4_R = "Controller/PICO 4_R";

		[Token(Token = "0x4002796")]
		public const string pptouch = "Controller/pptouch";

		[Token(Token = "0x4002797")]
		public const string tipsBg = "Controller/tipsBg";

		[Token(Token = "0x4002798")]
		public const string tipsLine = "Controller/tipsLine";

		[Token(Token = "0x4002799")]
		public const string FPS = "Prefabs/FPS";

		[Token(Token = "0x400279A")]
		public const string HandLeft = "Prefabs/HandLeft";

		[Token(Token = "0x400279B")]
		public const string HandRight = "Prefabs/HandRight";

		[Token(Token = "0x400279C")]
		public const string LeftControllerModel = "Prefabs/LeftControllerModel";

		[Token(Token = "0x400279D")]
		public const string RightControllerModel_ = "Prefabs/RightControllerModel ";

		[Token(Token = "0x400279E")]
		public const string PXR_EyeMask = "Shader/PXR_EyeMask";

		[Token(Token = "0x400279F")]
		public const string PXR_Fade = "Shader/PXR_Fade";

		[Token(Token = "0x40027A0")]
		public const string PXR_UnderlayHole = "Shader/PXR_UnderlayHole";

		[Token(Token = "0x40027A1")]
		public const string controller3 = "Controller/G2/controller3";

		[Token(Token = "0x40027A2")]
		public const string controller3_app = "Controller/G2/controller3_app";

		[Token(Token = "0x40027A3")]
		public const string controller3_home = "Controller/G2/controller3_home";

		[Token(Token = "0x40027A4")]
		public const string controller3_idle = "Controller/G2/controller3_idle";

		[Token(Token = "0x40027A5")]
		public const string controller3_touch = "Controller/G2/controller3_touch";

		[Token(Token = "0x40027A6")]
		public const string controller3_trigger = "Controller/G2/controller3_trigger";

		[Token(Token = "0x40027A7")]
		public const string controller3_volume_down = "Controller/G2/controller3_volume_down";

		[Token(Token = "0x40027A8")]
		public const string controller3_volume_up = "Controller/G2/controller3_volume_up";

		[Token(Token = "0x40027A9")]
		public const string controller4 = "Controller/Neo2/controller4";

		[Token(Token = "0x40027AA")]
		public const string controller4_a = "Controller/Neo2/controller4_a";

		[Token(Token = "0x40027AB")]
		public const string controller4_app = "Controller/Neo2/controller4_app";

		[Token(Token = "0x40027AC")]
		public const string controller4_b = "Controller/Neo2/controller4_b";

		[Token(Token = "0x40027AD")]
		public const string controller4_grip = "Controller/Neo2/controller4_grip";

		[Token(Token = "0x40027AE")]
		public const string controller4_home = "Controller/Neo2/controller4_home";

		[Token(Token = "0x40027AF")]
		public const string controller4_idle = "Controller/Neo2/controller4_idle";

		[Token(Token = "0x40027B0")]
		public const string controller4_touch = "Controller/Neo2/controller4_touch";

		[Token(Token = "0x40027B1")]
		public const string controller4_trigger = "Controller/Neo2/controller4_trigger";

		[Token(Token = "0x40027B2")]
		public const string controller4_x = "Controller/Neo2/controller4_x";

		[Token(Token = "0x40027B3")]
		public const string controller4_y = "Controller/Neo2/controller4_y";

		[Token(Token = "0x40027B4")]
		public const string ppController_NEO2_Left = "Controller/Neo2/ppController_NEO2_Left";

		[Token(Token = "0x40027B5")]
		public const string ppController_NEO2_L_tag = "Controller/Neo2/ppController_NEO2_L_tag";

		[Token(Token = "0x40027B6")]
		public const string ppController_NEO2_Right = "Controller/Neo2/ppController_NEO2_Right";

		[Token(Token = "0x40027B7")]
		public const string ppController_NEO2_R_tag = "Controller/Neo2/ppController_NEO2_R_tag";

		[Token(Token = "0x40027B8")]
		public const string controller5 = "Controller/Neo3/controller5";

		[Token(Token = "0x40027B9")]
		public const string controller5_a = "Controller/Neo3/controller5_a";

		[Token(Token = "0x40027BA")]
		public const string controller5_app = "Controller/Neo3/controller5_app";

		[Token(Token = "0x40027BB")]
		public const string controller5_b = "Controller/Neo3/controller5_b";

		[Token(Token = "0x40027BC")]
		public const string controller5_grip = "Controller/Neo3/controller5_grip";

		[Token(Token = "0x40027BD")]
		public const string controller5_home = "Controller/Neo3/controller5_home";

		[Token(Token = "0x40027BE")]
		public const string controller5_idle = "Controller/Neo3/controller5_idle";

		[Token(Token = "0x40027BF")]
		public const string controller5_touch = "Controller/Neo3/controller5_touch";

		[Token(Token = "0x40027C0")]
		public const string controller5_trigger = "Controller/Neo3/controller5_trigger";

		[Token(Token = "0x40027C1")]
		public const string controller5_x = "Controller/Neo3/controller5_x";

		[Token(Token = "0x40027C2")]
		public const string controller5_y = "Controller/Neo3/controller5_y";

		[Token(Token = "0x40027C3")]
		public const string ppController_NEO3_L = "Controller/Neo3/ppController_NEO3_L";

		[Token(Token = "0x40027C4")]
		public const string ppController_NEO3_R = "Controller/Neo3/ppController_NEO3_R";

		[Token(Token = "0x40027C5")]
		public const string CustomController = "Controller/PICO 4/CustomController";

		[Token(Token = "0x40027C6")]
		public const string CustomPower = "Controller/PICO 4/CustomPower";

		[Token(Token = "0x40027C7")]
		public const string LController = "Controller/PICO 4/LController";

		[Token(Token = "0x40027C8")]
		public const string LPower = "Controller/PICO 4/LPower";

		[Token(Token = "0x40027C9")]
		public const string RController = "Controller/PICO 4/RController";

		[Token(Token = "0x40027CA")]
		public const string RPower = "Controller/PICO 4/RPower";

		[Token(Token = "0x40027CB")]
		public const string XRInputSystem = "Controller/PICO 4/XRInputSystem";

		[Token(Token = "0x40027CC")]
		public const string power1 = "Controller/power/power1";

		[Token(Token = "0x40027CD")]
		public const string power2 = "Controller/power/power2";

		[Token(Token = "0x40027CE")]
		public const string power3 = "Controller/power/power3";

		[Token(Token = "0x40027CF")]
		public const string power4 = "Controller/power/power4";

		[Token(Token = "0x40027D0")]
		public const string power5 = "Controller/power/power5";

		[Token(Token = "0x40027D1")]
		public const string HandRay = "Hand/Materials/HandRay";

		[Token(Token = "0x40027D2")]
		public const string Hand_L = "Hand/Materials/Hand_L";

		[Token(Token = "0x40027D3")]
		public const string Hand_R = "Hand/Materials/Hand_R";

		[Token(Token = "0x40027D4")]
		public const string URPHandRay = "Hand/Materials/URPHandRay";

		[Token(Token = "0x40027D5")]
		public const string URPHand_L = "Hand/Materials/URPHand_L";

		[Token(Token = "0x40027D6")]
		public const string URPHand_R = "Hand/Materials/URPHand_R";

		[Token(Token = "0x40027D7")]
		public const string Hand_Ray = "Hand/Models/Hand_Ray";

		[Token(Token = "0x40027D8")]
		public const string CustomHand2 = "Hand/Shaders/CustomHand2";

		[Token(Token = "0x40027D9")]
		public const string CustomHandRay = "Hand/Shaders/CustomHandRay";

		[Token(Token = "0x40027DA")]
		public const string URPCustomHand = "Hand/Shaders/URPCustomHand";

		[Token(Token = "0x40027DB")]
		public const string URPHandFresnel = "Hand/Shaders/URPHandFresnel";

		[Token(Token = "0x40027DC")]
		public const string dianliang_01 = "Controller/PICO 4/Textures/dianliang_01";

		[Token(Token = "0x40027DD")]
		public const string dianliang_02 = "Controller/PICO 4/Textures/dianliang_02";

		[Token(Token = "0x40027DE")]
		public const string dianliang_03 = "Controller/PICO 4/Textures/dianliang_03";

		[Token(Token = "0x40027DF")]
		public const string dianliang_04 = "Controller/PICO 4/Textures/dianliang_04";

		[Token(Token = "0x40027E0")]
		public const string dianliang_05 = "Controller/PICO 4/Textures/dianliang_05";

		[Token(Token = "0x40027E1")]
		public const string PICO_4_Albedo = "Controller/PICO 4/Textures/PICO 4_Albedo";

		[Token(Token = "0x40027E2")]
		public const string OutlineFill = "Materials/OutlineFill";

		[Token(Token = "0x40027E3")]
		public const string OutlineMask = "Materials/OutlineMask";
	}
	[Token(Token = "0x2000428")]
	public static class Tags
	{
		[Token(Token = "0x40027E4")]
		public const string Untagged = "Untagged";

		[Token(Token = "0x40027E5")]
		public const string Respawn = "Respawn";

		[Token(Token = "0x40027E6")]
		public const string Finish = "Finish";

		[Token(Token = "0x40027E7")]
		public const string EditorOnly = "EditorOnly";

		[Token(Token = "0x40027E8")]
		public const string MainCamera = "MainCamera";

		[Token(Token = "0x40027E9")]
		public const string Player = "Player";

		[Token(Token = "0x40027EA")]
		public const string GameController = "GameController";

		[Token(Token = "0x40027EB")]
		public const string NoHitMark = "NoHitMark";

		[Token(Token = "0x40027EC")]
		public const string Usable = "Usable";

		[Token(Token = "0x40027ED")]
		public const string NPC = "NPC";

		[Token(Token = "0x40027EE")]
		public const string gun = "gun";

		[Token(Token = "0x40027EF")]
		public const string PhysicsObject = "PhysicsObject";

		[Token(Token = "0x40027F0")]
		public const string Climbable = "Climbable";

		[Token(Token = "0x40027F1")]
		public const string Water = "Water";

		[Token(Token = "0x40027F2")]
		public const string Dirt = "Dirt";

		[Token(Token = "0x40027F3")]
		public const string Metal = "Metal";

		[Token(Token = "0x40027F4")]
		public const string Wood = "Wood";

		[Token(Token = "0x40027F5")]
		public const string Glass = "Glass";

		[Token(Token = "0x40027F6")]
		public const string Flesh = "Flesh";

		[Token(Token = "0x40027F7")]
		public const string Stone = "Stone";

		[Token(Token = "0x40027F8")]
		public const string metal = "metal";

		[Token(Token = "0x40027F9")]
		public const string head = "head";

		[Token(Token = "0x40027FA")]
		public const string enemyPlayer = "enemyPlayer";

		[Token(Token = "0x40027FB")]
		public const string shooterBot = "shooterBot";

		[Token(Token = "0x40027FC")]
		public const string Camera2d = "Camera2d";

		[Token(Token = "0x40027FD")]
		public const string CameraVr = "CameraVr";

		[Token(Token = "0x40027FE")]
		public const string SpawnPoint = "SpawnPoint";

		[Token(Token = "0x40027FF")]
		public const string MyWeapon = "MyWeapon";

		[Token(Token = "0x4002800")]
		public const string ExcludeTeleport = "ExcludeTeleport";

		[Token(Token = "0x4002801")]
		public const string TeleportIgnore = "TeleportIgnore";

		[Token(Token = "0x4002802")]
		public const string VRGazeInteractable = "VRGazeInteractable";

		[Token(Token = "0x4002803")]
		public const string AttackDog = "AttackDog";

		[Token(Token = "0x4002804")]
		public const string AttackDogHead = "AttackDogHead";

		[Token(Token = "0x4002805")]
		public const string BulletShell = "BulletShell";

		[Token(Token = "0x4002806")]
		public const string Drone = "Drone";

		[Token(Token = "0x4002807")]
		public const string RC = "RC";

		[Token(Token = "0x4002808")]
		public const string _c = "_c";

		[Token(Token = "0x4002809")]
		public const string _wo = "_wo";

		[Token(Token = "0x400280A")]
		public const string _met = "_met";

		[Token(Token = "0x400280B")]
		public const string _dirt = "_dirt";

		[Token(Token = "0x400280C")]
		public const string _snoww = "_snoww";

		[Token(Token = "0x400280D")]
		public const string _sanddd = "_sanddd";

		[Token(Token = "0x400280E")]
		public const string _marblee = "_marblee";

		[Token(Token = "0x400280F")]
		public const string _clothhhh = "_clothhhh";

		[Token(Token = "0x4002810")]
		public const string Limb = "Limb";

		[Token(Token = "0x4002811")]
		public const string Duck = "Duck";

		[Token(Token = "0x4002812")]
		public const string RespawnPoint = "RespawnPoint";

		[Token(Token = "0x4002813")]
		public const string Zombie = "Zombie";

		[Token(Token = "0x4002814")]
		public const string Turret = "Turret";

		[Token(Token = "0x4002815")]
		public const string Chest = "Chest";

		[Token(Token = "0x4002816")]
		public const string UpperLimb = "UpperLimb";

		[Token(Token = "0x4002817")]
		public const string GrabGrenade = "GrabGrenade";

		[Token(Token = "0x4002818")]
		public const string VRHandLeft = "VRHandLeft";

		[Token(Token = "0x4002819")]
		public const string VRHandRight = "VRHandRight";

		[Token(Token = "0x400281A")]
		public const string Dock = "Dock";

		[Token(Token = "0x400281B")]
		public const string GrabGun = "GrabGun";

		[Token(Token = "0x400281C")]
		public const string Fire = "Fire";

		[Token(Token = "0x400281D")]
		public const string Interactable = "Interactable";

		[Token(Token = "0x400281E")]
		public const string ArmLeft = "ArmLeft";

		[Token(Token = "0x400281F")]
		public const string ArmRight = "ArmRight";
	}
}
namespace UGUIMiniMap
{
	[Token(Token = "0x2000429")]
	public class LayerMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xD92CE4", Offset = "0xD92CE4", VA = "0xD92CE4")]
		public LayerMaskAttribute()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class SeparatorAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string title;

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD92CEC", Offset = "0xD92CEC", VA = "0xD92CEC")]
		public SeparatorAttribute()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD92D40", Offset = "0xD92D40", VA = "0xD92D40")]
		public SeparatorAttribute(string _title)
		{
		}
	}
	[Token(Token = "0x200042B")]
	[RequireComponent(typeof(Camera))]
	public class bl_MiniMapScreenShot : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int msaa;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Resolutions;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int CurrentResolution;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _folderPath;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bl_MiniMap miniMap;

		[Token(Token = "0x17000338")]
		public static string FolderPath
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xD92D68", Offset = "0xD92D68", VA = "0xD92D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xD92DC0", Offset = "0xD92DC0", VA = "0xD92DC0")]
		private string SnapshotName(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xD92EAC", Offset = "0xD92EAC", VA = "0xD92EAC")]
		private string GetFullFolderPath()
		{
			return null;
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xD92F1C", Offset = "0xD92F1C", VA = "0xD92F1C")]
		public void TakeSnapshot()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xD92F20", Offset = "0xD92F20", VA = "0xD92F20")]
		private Vector2 GetResolution()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xD92F4C", Offset = "0xD92F4C", VA = "0xD92F4C")]
		public void SetMiniMap(bl_MiniMap mm)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xD92F54", Offset = "0xD92F54", VA = "0xD92F54")]
		public void CenterBounds()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xD9304C", Offset = "0xD9304C", VA = "0xD9304C")]
		public bl_MiniMapScreenShot()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class bl_CreateItemExample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bl_MMExampleManager exampler;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bl_MiniMap MiniMap;

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xD9326C", Offset = "0xD9326C", VA = "0xD9326C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xD932D0", Offset = "0xD932D0", VA = "0xD932D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xD93390", Offset = "0xD93390", VA = "0xD93390")]
		private void CreateItem()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xD9352C", Offset = "0xD9352C", VA = "0xD9352C")]
		public bl_CreateItemExample()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class bl_RandomBot : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float Radius;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NavMeshAgent m_Agent;

		[Token(Token = "0x17000339")]
		private NavMeshAgent Agent
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xD93568", Offset = "0xD93568", VA = "0xD93568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xD93534", Offset = "0xD93534", VA = "0xD93534")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xD935FC", Offset = "0xD935FC", VA = "0xD935FC")]
		private void RandomBot()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xD936CC", Offset = "0xD936CC", VA = "0xD936CC")]
		public bl_RandomBot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042E")]
	public class bl_CurveControlledBob
	{
		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xD936DC", Offset = "0xD936DC", VA = "0xD936DC")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xD9377C", Offset = "0xD9377C", VA = "0xD9377C")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xD9386C", Offset = "0xD9386C", VA = "0xD9386C")]
		public bl_CurveControlledBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042F")]
	public class bl_FOVKick
	{
		[Token(Token = "0x2000430")]
		[CompilerGenerated]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400283A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400283B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bl_FOVKick <>4__this;

			[Token(Token = "0x400283C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700033A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AB8")]
				[Address(RVA = "0xD93E40", Offset = "0xD93E40", VA = "0xD93E40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ABA")]
				[Address(RVA = "0xD93E88", Offset = "0xD93E88", VA = "0xD93E88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xD93C40", Offset = "0xD93C40", VA = "0xD93C40")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xD93D14", Offset = "0xD93D14", VA = "0xD93D14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xD93D18", Offset = "0xD93D18", VA = "0xD93D18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xD93E48", Offset = "0xD93E48", VA = "0xD93E48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000431")]
		[CompilerGenerated]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400283D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400283E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400283F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bl_FOVKick <>4__this;

			[Token(Token = "0x4002840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700033C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ABE")]
				[Address(RVA = "0xD93FD0", Offset = "0xD93FD0", VA = "0xD93FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AC0")]
				[Address(RVA = "0xD94018", Offset = "0xD94018", VA = "0xD94018", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xD93CD0", Offset = "0xD93CD0", VA = "0xD93CD0")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xD93E90", Offset = "0xD93E90", VA = "0xD93E90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xD93E94", Offset = "0xD93E94", VA = "0xD93E94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xD93FD8", Offset = "0xD93FD8", VA = "0xD93FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xD93AAC", Offset = "0xD93AAC", VA = "0xD93AAC")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xD93AE8", Offset = "0xD93AE8", VA = "0xD93AE8")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xD93BD0", Offset = "0xD93BD0", VA = "0xD93BD0")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xD93BD8", Offset = "0xD93BD8", VA = "0xD93BD8")]
		[IteratorStateMachine(typeof(<FOVKickUp>d__9))]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xD93C68", Offset = "0xD93C68", VA = "0xD93C68")]
		[IteratorStateMachine(typeof(<FOVKickDown>d__10))]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xD93CF8", Offset = "0xD93CF8", VA = "0xD93CF8")]
		public bl_FOVKick()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000432")]
	public class bl_LerpControlledBob
	{
		[Token(Token = "0x2000433")]
		[CompilerGenerated]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bl_LerpControlledBob <>4__this;

			[Token(Token = "0x4002847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700033E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AC7")]
				[Address(RVA = "0xD94260", Offset = "0xD94260", VA = "0xD94260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AC9")]
				[Address(RVA = "0xD942A8", Offset = "0xD942A8", VA = "0xD942A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xD94090", Offset = "0xD94090", VA = "0xD94090")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xD940C0", Offset = "0xD940C0", VA = "0xD940C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0xD940C4", Offset = "0xD940C4", VA = "0xD940C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xD94268", Offset = "0xD94268", VA = "0xD94268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xD94020", Offset = "0xD94020", VA = "0xD94020")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xD94028", Offset = "0xD94028", VA = "0xD94028")]
		[IteratorStateMachine(typeof(<DoBobCycle>d__4))]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xD940B8", Offset = "0xD940B8", VA = "0xD940B8")]
		public bl_LerpControlledBob()
		{
		}
	}
}
namespace CameraFading
{
	[Token(Token = "0x2000434")]
	public class CameraFade : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000436")]
		[CompilerGenerated]
		private sealed class <CameraFadeIn>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool dontWait;

			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CameraFade <>4__this;

			[Token(Token = "0x400285A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool restart;

			[Token(Token = "0x400285B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool fixedDuration;

			[Token(Token = "0x400285C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float duration;

			[Token(Token = "0x400285D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <i>5__2;

			[Token(Token = "0x17000343")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AE6")]
				[Address(RVA = "0xD958EC", Offset = "0xD958EC", VA = "0xD958EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AE8")]
				[Address(RVA = "0xD95934", Offset = "0xD95934", VA = "0xD95934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xD95580", Offset = "0xD95580", VA = "0xD95580")]
			[DebuggerHidden]
			public <CameraFadeIn>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xD957CC", Offset = "0xD957CC", VA = "0xD957CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xD957D0", Offset = "0xD957D0", VA = "0xD957D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xD958F4", Offset = "0xD958F4", VA = "0xD958F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000437")]
		[CompilerGenerated]
		private sealed class <CameraFadeIn>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400285E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraFade <>4__this;

			[Token(Token = "0x4002861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool restart;

			[Token(Token = "0x4002862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool fixedDuration;

			[Token(Token = "0x4002863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4002864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public System.Action Callback;

			[Token(Token = "0x4002865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <i>5__2;

			[Token(Token = "0x17000345")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AEC")]
				[Address(RVA = "0xD95A6C", Offset = "0xD95A6C", VA = "0xD95A6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AEE")]
				[Address(RVA = "0xD95AB4", Offset = "0xD95AB4", VA = "0xD95AB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xD955A8", Offset = "0xD955A8", VA = "0xD955A8")]
			[DebuggerHidden]
			public <CameraFadeIn>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xD9593C", Offset = "0xD9593C", VA = "0xD9593C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xD95940", Offset = "0xD95940", VA = "0xD95940", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xD95A74", Offset = "0xD95A74", VA = "0xD95A74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000438")]
		[CompilerGenerated]
		private sealed class <CameraFadeOut>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool restart;

			[Token(Token = "0x4002869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool fixedDuration;

			[Token(Token = "0x400286A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float duration;

			[Token(Token = "0x400286B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <i>5__2;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF2")]
				[Address(RVA = "0xD95B98", Offset = "0xD95B98", VA = "0xD95B98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF4")]
				[Address(RVA = "0xD95BE0", Offset = "0xD95BE0", VA = "0xD95BE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xD955D0", Offset = "0xD955D0", VA = "0xD955D0")]
			[DebuggerHidden]
			public <CameraFadeOut>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xD95ABC", Offset = "0xD95ABC", VA = "0xD95ABC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xD95AC0", Offset = "0xD95AC0", VA = "0xD95AC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xD95BA0", Offset = "0xD95BA0", VA = "0xD95BA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000439")]
		[CompilerGenerated]
		private sealed class <CameraFadeOut>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400286C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400286D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400286E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool restart;

			[Token(Token = "0x400286F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool fixedDuration;

			[Token(Token = "0x4002870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float duration;

			[Token(Token = "0x4002871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Action Callback;

			[Token(Token = "0x4002872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <i>5__2;

			[Token(Token = "0x17000349")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF8")]
				[Address(RVA = "0xD95CE0", Offset = "0xD95CE0", VA = "0xD95CE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AFA")]
				[Address(RVA = "0xD95D28", Offset = "0xD95D28", VA = "0xD95D28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xD95690", Offset = "0xD95690", VA = "0xD95690")]
			[DebuggerHidden]
			public <CameraFadeOut>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xD95BE8", Offset = "0xD95BE8", VA = "0xD95BE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xD95BEC", Offset = "0xD95BEC", VA = "0xD95BEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xD95CE8", Offset = "0xD95CE8", VA = "0xD95CE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043A")]
		[CompilerGenerated]
		private sealed class <CameraOutAndIn>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool restart;

			[Token(Token = "0x4002876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool fixedDuration;

			[Token(Token = "0x4002877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float duration;

			[Token(Token = "0x4002878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float wait;

			[Token(Token = "0x4002879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <i>5__2;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AFE")]
				[Address(RVA = "0xD95EFC", Offset = "0xD95EFC", VA = "0xD95EFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B00")]
				[Address(RVA = "0xD95F44", Offset = "0xD95F44", VA = "0xD95F44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xD956B8", Offset = "0xD956B8", VA = "0xD956B8")]
			[DebuggerHidden]
			public <CameraOutAndIn>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xD95D30", Offset = "0xD95D30", VA = "0xD95D30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xD95D34", Offset = "0xD95D34", VA = "0xD95D34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0xD95F04", Offset = "0xD95F04", VA = "0xD95F04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float alpha;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool waitBeforeFadeIn;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ammountToWait;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool SetAlphaOnStart;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool FadeOutOnStart;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool noAlphaOnEnable;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material material;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int materialColorID;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds wait;

		[Token(Token = "0x17000340")]
		public static CameraFade Instance
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0xD942B0", Offset = "0xD942B0", VA = "0xD942B0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0xD942F8", Offset = "0xD942F8", VA = "0xD942F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public static Color Color
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0xD94344", Offset = "0xD94344", VA = "0xD94344")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0xD94420", Offset = "0xD94420", VA = "0xD94420")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public static float Alpha
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xD94548", Offset = "0xD94548", VA = "0xD94548")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xD94614", Offset = "0xD94614", VA = "0xD94614")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xD9471C", Offset = "0xD9471C", VA = "0xD9471C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xD9479C", Offset = "0xD9479C", VA = "0xD9479C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xD94DAC", Offset = "0xD94DAC", VA = "0xD94DAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xD94E70", Offset = "0xD94E70", VA = "0xD94E70")]
		public void OnPostRender()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xD94F1C", Offset = "0xD94F1C", VA = "0xD94F1C")]
		public static void In(float duration = 1f, bool restart = false, bool fixedDuration = false, bool dontWait = false)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xD94B0C", Offset = "0xD94B0C", VA = "0xD94B0C")]
		public static void In(System.Action Callback, float duration = 1f, bool restart = false, bool fixedDuration = false)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xD951CC", Offset = "0xD951CC", VA = "0xD951CC")]
		public static void Out(float duration = 1f, bool restart = false, bool fixedDuration = false)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xD953A0", Offset = "0xD953A0", VA = "0xD953A0")]
		public static void OutAndIn(float duration = 1f, bool restart = false, bool fixedDuration = false, float wait = 0f)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xD94C68", Offset = "0xD94C68", VA = "0xD94C68")]
		public static void Out(System.Action Callback, float duration = 1f, bool restart = false, bool fixedDuration = false)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xD95078", Offset = "0xD95078", VA = "0xD95078")]
		[IteratorStateMachine(typeof(<CameraFadeIn>d__29))]
		private IEnumerator CameraFadeIn(float duration, bool restart, bool fixedDuration, bool dontWait = false)
		{
			return null;
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xD95124", Offset = "0xD95124", VA = "0xD95124")]
		[IteratorStateMachine(typeof(<CameraFadeIn>d__30))]
		private IEnumerator CameraFadeIn(System.Action Callback, float duration, bool restart, bool fixedDuration)
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xD95310", Offset = "0xD95310", VA = "0xD95310")]
		[IteratorStateMachine(typeof(<CameraFadeOut>d__31))]
		private IEnumerator CameraFadeOut(float duration, bool restart, bool fixedDuration)
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xD955F8", Offset = "0xD955F8", VA = "0xD955F8")]
		[IteratorStateMachine(typeof(<CameraFadeOut>d__32))]
		private IEnumerator CameraFadeOut(System.Action Callback, float duration, bool restart, bool fixedDuration)
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xD954EC", Offset = "0xD954EC", VA = "0xD954EC")]
		[IteratorStateMachine(typeof(<CameraOutAndIn>d__33))]
		private IEnumerator CameraOutAndIn(float duration, bool restart, bool fixedDuration, float wait)
		{
			return null;
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xD956E0", Offset = "0xD956E0", VA = "0xD956E0")]
		public CameraFade()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x200043B")]
	public enum CurvedUIPriorities
	{
		[Token(Token = "0x400287B")]
		low,
		[Token(Token = "0x400287C")]
		high
	}
	[Token(Token = "0x200043C")]
	public class CurvedUIUpdater : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool overrideAndUpdateAll;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nonInitializedelementsToUpdate;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CurvedUIVertexEffect> lowElementsNonInitialized;

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<CurvedUITMP> lowElementsTMPNonInitialized;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<CurvedUIVertexEffect> lowElements;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<CurvedUITMP> lowElementsTMP;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int initializedCounter;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int lowElementsCounter;

		[Token(Token = "0x4002885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lowElementsTMPCounter;

		[Token(Token = "0x4002886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<CurvedUIVertexEffect> highElements;

		[Token(Token = "0x4002887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<CurvedUITMP> highElementsTMP;

		[Token(Token = "0x4002888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CurvedUIUpdater m_Instance;

		[Token(Token = "0x1700034D")]
		public static CurvedUIUpdater Instance
		{
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0xD95F4C", Offset = "0xD95F4C", VA = "0xD95F4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xD95F94", Offset = "0xD95F94", VA = "0xD95F94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xD96098", Offset = "0xD96098", VA = "0xD96098")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xD9677C", Offset = "0xD9677C", VA = "0xD9677C")]
		public void AddElement(CurvedUIVertexEffect element)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xD96844", Offset = "0xD96844", VA = "0xD96844")]
		public void AddInitElement(CurvedUIVertexEffect element)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xD96900", Offset = "0xD96900", VA = "0xD96900")]
		public void AddInitElement(CurvedUITMP elementTMP)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xD969BC", Offset = "0xD969BC", VA = "0xD969BC")]
		public void RemoveElement(CurvedUIVertexEffect element)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xD96A50", Offset = "0xD96A50", VA = "0xD96A50")]
		public void AddElement(CurvedUITMP elementTMP)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD96B18", Offset = "0xD96B18", VA = "0xD96B18")]
		public void RemoveElement(CurvedUITMP elementTMP)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xD964BC", Offset = "0xD964BC", VA = "0xD964BC")]
		public void CheckListsForEmpty()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xD96BAC", Offset = "0xD96BAC", VA = "0xD96BAC")]
		public CurvedUIUpdater()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class CUI_AnimateCurvedFillOnStart : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xD96BBC", Offset = "0xD96BBC", VA = "0xD96BBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xD96D58", Offset = "0xD96D58", VA = "0xD96D58")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class CUI_CameraController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x400288A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x400288B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x400288C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xD96D60", Offset = "0xD96D60", VA = "0xD96D60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xD96DAC", Offset = "0xD96DAC", VA = "0xD96DAC")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class CUI_ChangeColor : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xD96DC4", Offset = "0xD96DC4", VA = "0xD96DC4")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xD96E38", Offset = "0xD96E38", VA = "0xD96E38")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xD96EAC", Offset = "0xD96EAC", VA = "0xD96EAC")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xD96F20", Offset = "0xD96F20", VA = "0xD96F20")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class CUI_ChangeValueOnHold : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xD96F28", Offset = "0xD96F28", VA = "0xD96F28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD96FA4", Offset = "0xD96FA4", VA = "0xD96FA4")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xD970F4", Offset = "0xD970F4", VA = "0xD970F4", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xD97180", Offset = "0xD97180", VA = "0xD97180", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xD97208", Offset = "0xD97208", VA = "0xD97208")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class CUI_DragBetweenCanvases : UnityEngine.MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xD97210", Offset = "0xD97210", VA = "0xD97210", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xD9752C", Offset = "0xD9752C", VA = "0xD9752C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xD979D0", Offset = "0xD979D0", VA = "0xD979D0", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xD97350", Offset = "0xD97350", VA = "0xD97350")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xD97A38", Offset = "0xD97A38", VA = "0xD97A38")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class CUI_draggable : UnityEngine.MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xD97A40", Offset = "0xD97A40", VA = "0xD97A40", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xD97D64", Offset = "0xD97D64", VA = "0xD97D64", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xD97D68", Offset = "0xD97D68", VA = "0xD97D68", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xD97DDC", Offset = "0xD97DDC", VA = "0xD97DDC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xD97B88", Offset = "0xD97B88", VA = "0xD97B88")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD97EF0", Offset = "0xD97EF0", VA = "0xD97EF0")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class CUI_GunController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xD97EF8", Offset = "0xD97EF8", VA = "0xD97EF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xD98388", Offset = "0xD98388", VA = "0xD98388")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class CUI_GunMovement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xD984B8", Offset = "0xD984B8", VA = "0xD984B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xD984D8", Offset = "0xD984D8", VA = "0xD984D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xD98660", Offset = "0xD98660", VA = "0xD98660")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class CUI_inventory_paralax : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xD98674", Offset = "0xD98674", VA = "0xD98674")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xD986B8", Offset = "0xD986B8", VA = "0xD986B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xD988CC", Offset = "0xD988CC", VA = "0xD988CC")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class CUI_OrientOnCurvedSpace : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xD988DC", Offset = "0xD988DC", VA = "0xD988DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xD9892C", Offset = "0xD9892C", VA = "0xD9892C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xD98AC8", Offset = "0xD98AC8", VA = "0xD98AC8")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class CUI_PerlinNoisePosition : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xD98AD0", Offset = "0xD98AD0", VA = "0xD98AD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD98B3C", Offset = "0xD98B3C", VA = "0xD98B3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xD98C10", Offset = "0xD98C10", VA = "0xD98C10")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class CUI_PerlinNoiseRotation : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD98C20", Offset = "0xD98C20", VA = "0xD98C20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xD98C8C", Offset = "0xD98C8C", VA = "0xD98C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xD98D0C", Offset = "0xD98D0C", VA = "0xD98D0C")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class CUI_PickImageFromSet : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xD98D20", Offset = "0xD98D20", VA = "0xD98D20")]
		public void PickThis()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xD98EB0", Offset = "0xD98EB0", VA = "0xD98EB0")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class CUI_RaycastToCanvas : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xD98EB8", Offset = "0xD98EB8", VA = "0xD98EB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xD98F08", Offset = "0xD98F08", VA = "0xD98F08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xD98FEC", Offset = "0xD98FEC", VA = "0xD98FEC")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class CUI_RiseChildrenOverTime : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xD98FF4", Offset = "0xD98FF4", VA = "0xD98FF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xD98FF8", Offset = "0xD98FF8", VA = "0xD98FF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xD99378", Offset = "0xD99378", VA = "0xD99378")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class CUI_TMPChecker : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xD9938C", Offset = "0xD9938C", VA = "0xD9938C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xD993FC", Offset = "0xD993FC", VA = "0xD993FC")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class CUI_ViveButtonState : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200044F")]
		private enum ViveButton
		{
			[Token(Token = "0x40028B7")]
			Trigger,
			[Token(Token = "0x40028B8")]
			TouchpadTouch,
			[Token(Token = "0x40028B9")]
			TouchpadPress,
			[Token(Token = "0x40028BA")]
			Grip,
			[Token(Token = "0x40028BB")]
			Menu
		}

		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xD99404", Offset = "0xD99404", VA = "0xD99404")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class CUI_ViveHapticPulse : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xD99424", Offset = "0xD99424", VA = "0xD99424")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xD99430", Offset = "0xD99430", VA = "0xD99430")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xD9944C", Offset = "0xD9944C", VA = "0xD9944C")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xD99450", Offset = "0xD99450", VA = "0xD99450")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class CUI_WorldSpaceCursorFollow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xD99458", Offset = "0xD99458", VA = "0xD99458")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xD99578", Offset = "0xD99578", VA = "0xD99578")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xD99604", Offset = "0xD99604", VA = "0xD99604")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class CUI_WorldSpaceMouseMultipleCanvases : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xD9960C", Offset = "0xD9960C", VA = "0xD9960C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xD99908", Offset = "0xD99908", VA = "0xD99908")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VrInGameUIManager m_UiManager;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xD99910", Offset = "0xD99910", VA = "0xD99910", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xD999C0", Offset = "0xD999C0", VA = "0xD999C0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xD99A70", Offset = "0xD99A70", VA = "0xD99A70", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xD99B20", Offset = "0xD99B20", VA = "0xD99B20", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xD99D44", Offset = "0xD99D44", VA = "0xD99D44")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xD99C2C", Offset = "0xD99C2C", VA = "0xD99C2C")]
		private void CheckForDuplicates()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xD99D48", Offset = "0xD99D48", VA = "0xD99D48", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xD99D54", Offset = "0xD99D54", VA = "0xD99D54")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xD99DAC", Offset = "0xD99DAC", VA = "0xD99DAC")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xD988B0", Offset = "0xD988B0", VA = "0xD988B0")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xD99DDC", Offset = "0xD99DDC", VA = "0xD99DDC")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xD99E1C", Offset = "0xD99E1C", VA = "0xD99E1C")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xD99E3C", Offset = "0xD99E3C", VA = "0xD99E3C")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xD99E08", Offset = "0xD99E08", VA = "0xD99E08")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xD99E58", Offset = "0xD99E58", VA = "0xD99E58")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xD99E70", Offset = "0xD99E70", VA = "0xD99E70")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xD99EC8", Offset = "0xD99EC8", VA = "0xD99EC8")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xD99ED0", Offset = "0xD99ED0", VA = "0xD99ED0")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xD99FAC", Offset = "0xD99FAC", VA = "0xD99FAC")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xD9A018", Offset = "0xD9A018", VA = "0xD9A018")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xD98378", Offset = "0xD98378", VA = "0xD98378")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xD98380", Offset = "0xD98380", VA = "0xD98380")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xD98370", Offset = "0xD98370", VA = "0xD98370")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xD9A084", Offset = "0xD9A084", VA = "0xD9A084")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xD9A08C", Offset = "0xD9A08C", VA = "0xD9A08C")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xD978F0", Offset = "0xD978F0", VA = "0xD978F0")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x6001B66")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001B67")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000455")]
	public class CurvedUIHandSwitcher : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("If true, when player clicks the trigger on the other hand, we'll instantly set it as UI controlling hand and move the pointer to it.")]
		private bool autoSwitchHands;

		[Token(Token = "0x40028C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("If set, pointer will be placed as a child of this transform, instead of the current VR SDKs Camera Rig.")]
		[SerializeField]
		[Header("Optional")]
		private Transform leftHandOverride;

		[Token(Token = "0x40028C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Tooltip("If set, pointer will be placed as a child of this transform, instead of the current VR SDKs Camera Rig.")]
		private Transform rightHandOverride;

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xD9A094", Offset = "0xD9A094", VA = "0xD9A094")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xD9A330", Offset = "0xD9A330", VA = "0xD9A330")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class CurvedUIInputFieldCaret : UnityEngine.MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000457")]
		[CompilerGenerated]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B7C")]
				[Address(RVA = "0xD9AED0", Offset = "0xD9AED0", VA = "0xD9AED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B7E")]
				[Address(RVA = "0xD9AF18", Offset = "0xD9AF18", VA = "0xD9AF18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xD9AACC", Offset = "0xD9AACC", VA = "0xD9AACC")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xD9ADC0", Offset = "0xD9ADC0", VA = "0xD9ADC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xD9ADC4", Offset = "0xD9ADC4", VA = "0xD9ADC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xD9AED8", Offset = "0xD9AED8", VA = "0xD9AED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40028C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x40028CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x1700034E")]
		public Color CaretColor
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0xD9AD48", Offset = "0xD9AD48", VA = "0xD9AD48")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xD9AD54", Offset = "0xD9AD54", VA = "0xD9AD54")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public Color SelectionColor
		{
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0xD9AD60", Offset = "0xD9AD60", VA = "0xD9AD60")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xD9AD6C", Offset = "0xD9AD6C", VA = "0xD9AD6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xD9AD78", Offset = "0xD9AD78", VA = "0xD9AD78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0xD9AD94", Offset = "0xD9AD94", VA = "0xD9AD94")]
			set
			{
			}
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xD9A340", Offset = "0xD9A340", VA = "0xD9A340")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xD9A390", Offset = "0xD9A390", VA = "0xD9A390")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xD9A654", Offset = "0xD9A654", VA = "0xD9A654", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xD9AA98", Offset = "0xD9AA98", VA = "0xD9AA98", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xD9AA30", Offset = "0xD9AA30", VA = "0xD9AA30")]
		[IteratorStateMachine(typeof(<CaretBlinker>d__11))]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xD9A704", Offset = "0xD9A704", VA = "0xD9A704")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xD9A3A0", Offset = "0xD9A3A0", VA = "0xD9A3A0")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xD9AAF4", Offset = "0xD9AAF4", VA = "0xD9AAF4")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xD9ADB0", Offset = "0xD9ADB0", VA = "0xD9ADB0")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class CurvedUILaserBeam : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool neverGoTrough;

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xD9AF20", Offset = "0xD9AF20", VA = "0xD9AF20")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xD9B3A4", Offset = "0xD9B3A4", VA = "0xD9B3A4")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x40028D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x40028D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x17000353")]
		public int CompoundEventMask
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xD9B84C", Offset = "0xD9B84C", VA = "0xD9B84C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000354")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0xD9B948", Offset = "0xD9B948", VA = "0xD9B948", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public virtual int Depth
		{
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0xD9BA04", Offset = "0xD9BA04", VA = "0xD9BA04", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000356")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xD9BAC8", Offset = "0xD9BAC8", VA = "0xD9BAC8", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xD9B4F8", Offset = "0xD9B4F8", VA = "0xD9B4F8")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xD9B508", Offset = "0xD9B508", VA = "0xD9B508", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x200045C")]
		public enum ControllerType
		{
			[Token(Token = "0x40028DD")]
			NONE = -1,
			[Token(Token = "0x40028DE")]
			VIVE
		}

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject Controller;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xD9BAD0", Offset = "0xD9BAD0", VA = "0xD9BAD0")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x17000357")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xD9C8A8", Offset = "0xD9C8A8", VA = "0xD9C8A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xDA3698", Offset = "0xDA3698", VA = "0xDA3698")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xD9BB30", Offset = "0xD9BB30", VA = "0xD9BB30", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xD9BC20", Offset = "0xD9BC20", VA = "0xD9BC20", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xD9C330", Offset = "0xD9C330", VA = "0xD9C330", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xD9C70C", Offset = "0xD9C70C", VA = "0xD9C70C")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xD9C6EC", Offset = "0xD9C6EC", VA = "0xD9C6EC")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xD9CE10", Offset = "0xD9CE10", VA = "0xD9CE10", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xD9DFFC", Offset = "0xD9DFFC", VA = "0xD9DFFC", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xD9E7AC", Offset = "0xD9E7AC", VA = "0xD9E7AC", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xD9EE80", Offset = "0xD9EE80", VA = "0xD9EE80", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xD9F47C", Offset = "0xD9F47C", VA = "0xD9F47C", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xD9DA00", Offset = "0xD9DA00", VA = "0xD9DA00")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xD9FF98", Offset = "0xD9FF98", VA = "0xD9FF98")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xD9BE70", Offset = "0xD9BE70", VA = "0xD9BE70")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xDA1FF8", Offset = "0xDA1FF8", VA = "0xDA1FF8")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xDA0570", Offset = "0xDA0570", VA = "0xDA0570")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xDA1208", Offset = "0xDA1208", VA = "0xDA1208")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xDA20AC", Offset = "0xDA20AC", VA = "0xDA20AC")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xDA2DAC", Offset = "0xDA2DAC", VA = "0xDA2DAC")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xD9E6D4", Offset = "0xD9E6D4", VA = "0xD9E6D4")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xD9E73C", Offset = "0xD9E73C", VA = "0xD9E73C")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xDA2DF8", Offset = "0xDA2DF8", VA = "0xDA2DF8")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xDA2E28", Offset = "0xDA2E28", VA = "0xDA2E28", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xD9D4D0", Offset = "0xD9D4D0", VA = "0xD9D4D0")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xDA2E40", Offset = "0xDA2E40", VA = "0xDA2E40")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xDA33E4", Offset = "0xDA33E4", VA = "0xDA33E4")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xDA3558", Offset = "0xDA3558", VA = "0xDA3558")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xD9BCA0", Offset = "0xD9BCA0", VA = "0xD9BCA0")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xDA36A0", Offset = "0xDA36A0", VA = "0xDA36A0")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xD982F0", Offset = "0xD982F0", VA = "0xD982F0")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xDA36D4", Offset = "0xDA36D4", VA = "0xDA36D4")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xDA37B0", Offset = "0xDA37B0", VA = "0xDA37B0")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xD9C908", Offset = "0xD9C908", VA = "0xD9C908")]
		public void Click()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xDA2868", Offset = "0xDA2868", VA = "0xDA2868")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xDA3D00", Offset = "0xDA3D00", VA = "0xDA3D00")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xDA3FF4", Offset = "0xDA3FF4", VA = "0xDA3FF4")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x200045F")]
	[AddComponentMenu("CurvedUI/CurvedUISettings")]
	[RequireComponent(typeof(Canvas))]
	public class CurvedUISettings : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000460")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x400290A")]
			CYLINDER,
			[Token(Token = "0x400290B")]
			RING,
			[Token(Token = "0x400290C")]
			SPHERE,
			[Token(Token = "0x400290D")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x40028F8")]
		public const string Version = "3.1p1";

		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x40028FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x17000359")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0xDBE16C", Offset = "0xDBE16C", VA = "0xDBE16C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0xDBFB6C", Offset = "0xDBFB6C", VA = "0xDBFB6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035B")]
		public int Angle
		{
			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0xDBFB74", Offset = "0xDBFB74", VA = "0xDBFB74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0xDBFB7C", Offset = "0xDBFB7C", VA = "0xDBFB7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public float Quality
		{
			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0xDBFB90", Offset = "0xDBFB90", VA = "0xDBFB90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0xDBFB98", Offset = "0xDBFB98", VA = "0xDBFB98")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xDBFBB4", Offset = "0xDBFBB4", VA = "0xDBFBB4")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xDBFBBC", Offset = "0xDBFBBC", VA = "0xDBFBBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public int VerticalAngle
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0xDBFBDC", Offset = "0xDBFBDC", VA = "0xDBFBDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xDBFBE4", Offset = "0xDBFBE4", VA = "0xDBFBE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public float RingFill
		{
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xDBFC04", Offset = "0xDBFC04", VA = "0xDBFC04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xDBFC0C", Offset = "0xDBFC0C", VA = "0xDBFC0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public float SavedRadius
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0xDBEC04", Offset = "0xDBEC04", VA = "0xDBEC04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000361")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xDBFC28", Offset = "0xDBFC28", VA = "0xDBFC28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xDBFC30", Offset = "0xDBFC30", VA = "0xDBFC30")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xDBFC50", Offset = "0xDBFC50", VA = "0xDBFC50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xDBFC58", Offset = "0xDBFC58", VA = "0xDBFC58")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xDBFC78", Offset = "0xDBFC78", VA = "0xDBFC78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xDBFC80", Offset = "0xDBFC80", VA = "0xDBFC80")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public bool Interactable
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xDBFCA0", Offset = "0xDBFCA0", VA = "0xDBFCA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0xDBFCA8", Offset = "0xDBFCA8", VA = "0xDBFCA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xDBFCB4", Offset = "0xDBFCB4", VA = "0xDBFCB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xDBFCBC", Offset = "0xDBFCBC", VA = "0xDBFCBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xDBFCC8", Offset = "0xDBFCC8", VA = "0xDBFCC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xDBFCD0", Offset = "0xDBFCD0", VA = "0xDBFCD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		[Obsolete("Use RaycastLayerMask property instead.")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xDBFDA0", Offset = "0xDBFDA0", VA = "0xDBFDA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xDBFDA8", Offset = "0xDBFDA8", VA = "0xDBFDA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xDBFE48", Offset = "0xDBFE48", VA = "0xDBFE48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000369")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xDC0004", Offset = "0xDC0004", VA = "0xDC0004")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0xDC0054", Offset = "0xDC0054", VA = "0xDC0054")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xDC0434", Offset = "0xDC0434", VA = "0xDC0434")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xDC0494", Offset = "0xDC0494", VA = "0xDC0494")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xDC04FC", Offset = "0xDC04FC", VA = "0xDC04FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0xDC055C", Offset = "0xDC055C", VA = "0xDC055C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xDC05CC", Offset = "0xDC05CC", VA = "0xDC05CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xDC062C", Offset = "0xDC062C", VA = "0xDC062C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xDC069C", Offset = "0xDC069C", VA = "0xDC069C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xDBE0EC", Offset = "0xDBE0EC", VA = "0xDBE0EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xDBE21C", Offset = "0xDBE21C", VA = "0xDBE21C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xDBE6CC", Offset = "0xDBE6CC", VA = "0xDBE6CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xDBE76C", Offset = "0xDBE76C", VA = "0xDBE76C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xDBE80C", Offset = "0xDBE80C", VA = "0xDBE80C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xDBE92C", Offset = "0xDBE92C", VA = "0xDBE92C")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xDBEB2C", Offset = "0xDBEB2C", VA = "0xDBEB2C")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xDBEC28", Offset = "0xDBEC28", VA = "0xDBEC28")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xDBED00", Offset = "0xDBED00", VA = "0xDBED00")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xDBEDE0", Offset = "0xDBEDE0", VA = "0xDBEDE0")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xDBEF90", Offset = "0xDBEF90", VA = "0xDBEF90")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xDBF31C", Offset = "0xDBF31C", VA = "0xDBF31C")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xDBF3A4", Offset = "0xDBF3A4", VA = "0xDBF3A4")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xDBF50C", Offset = "0xDBF50C", VA = "0xDBF50C")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xDBF7B4", Offset = "0xDBF7B4", VA = "0xDBF7B4")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xDBE594", Offset = "0xDBE594", VA = "0xDBE594")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xDBF968", Offset = "0xDBF968", VA = "0xDBF968")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xDBFAD0", Offset = "0xDBFAD0", VA = "0xDBFAD0")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xDBFDAC", Offset = "0xDBFDAC", VA = "0xDBFDAC")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xDBFF48", Offset = "0xDBFF48", VA = "0xDBFF48")]
		public void Click()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xDC00AC", Offset = "0xDC00AC", VA = "0xDC00AC")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xDC01AC", Offset = "0xDC01AC", VA = "0xDC01AC")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xDC0308", Offset = "0xDC0308", VA = "0xDC0308")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xDC06FC", Offset = "0xDC06FC", VA = "0xDC06FC")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Elements marked as static will only update once enabled, and only 1 every frame, Elements marked as low will update constantly, but only 1 every frame,  Elements marked as high, will update every single frame (use only on moving or dynamic ui elements)")]
		public CurvedUIPriorities priority;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool enabledUpdate;

		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[Tooltip("Check to skip tesselation pass on this object. CurvedUI will not create additional vertices to make this object have a smoother curve. Checking this can solve some issues if you create your own procedural mesh for this object. Default false.")]
		public bool DoNotTesselate;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float[] m_weights;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[HideInInspector]
		[SerializeField]
		private Vector3 savedPos;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[HideInInspector]
		[SerializeField]
		private Color savedColor;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private bool init;

		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Vector2 _uv0;

		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Vector2 _uv1;

		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Vector3 _pos;

		[Token(Token = "0x1700036E")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xDC0740", Offset = "0xDC0740", VA = "0xDC0740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xDC0748", Offset = "0xDC0748", VA = "0xDC0748")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xDC3BAC", Offset = "0xDC3BAC", VA = "0xDC3BAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xDC3BA0", Offset = "0xDC3BA0", VA = "0xDC3BA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xDC3BB4", Offset = "0xDC3BB4", VA = "0xDC3BB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xDC3BBC", Offset = "0xDC3BBC", VA = "0xDC3BBC")]
			set
			{
			}
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xDC0754", Offset = "0xDC0754", VA = "0xDC0754", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xDC082C", Offset = "0xDC082C", VA = "0xDC082C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xDC0B88", Offset = "0xDC0B88", VA = "0xDC0B88", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xDC1158", Offset = "0xDC1158", VA = "0xDC1158", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xDC134C", Offset = "0xDC134C", VA = "0xDC134C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xDC13C8", Offset = "0xDC13C8", VA = "0xDC13C8")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xDC13D4", Offset = "0xDC13D4", VA = "0xDC13D4")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xDC14AC", Offset = "0xDC14AC", VA = "0xDC14AC")]
		public void DoLateUpdate()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xDC1C00", Offset = "0xDC1C00", VA = "0xDC1C00", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xDC2B78", Offset = "0xDC2B78", VA = "0xDC2B78")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xDC22AC", Offset = "0xDC22AC", VA = "0xDC22AC")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xDC2390", Offset = "0xDC2390", VA = "0xDC2390")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xDC0A8C", Offset = "0xDC0A8C", VA = "0xDC0A8C")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xDC2868", Offset = "0xDC2868", VA = "0xDC2868")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xDC25E8", Offset = "0xDC25E8", VA = "0xDC25E8")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xDC326C", Offset = "0xDC326C", VA = "0xDC326C")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xDC2E54", Offset = "0xDC2E54", VA = "0xDC2E54")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xDC3978", Offset = "0xDC3978", VA = "0xDC3978")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xDBEB20", Offset = "0xDBEB20", VA = "0xDBEB20")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xDC3BC8", Offset = "0xDC3BC8", VA = "0xDC3BC8")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class CurvedUIViveController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xDC3CD4", Offset = "0xDC3CD4", VA = "0xDC3CD4")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000464")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x2000465")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x2000466")]
	[ExecuteInEditMode]
	public class CurvedUITMP : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Elements marked as static will only update once enabled, and only 1 every frame, Elements marked as low will update constantly, but only 1 every frame,  Elements marked as high, will update every single frame (use only on moving or dynamic ui elements)")]
		public CurvedUIPriorities priority;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector2 savedSize;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 savedUp;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 savedPos;

		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool Dirty;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool curvingRequired;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		private bool tesselationRequired;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		private bool quitting;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3[] vertices;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool init;

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xDC402C", Offset = "0xDC402C", VA = "0xDC402C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xDC40B8", Offset = "0xDC40B8", VA = "0xDC40B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xDC445C", Offset = "0xDC445C", VA = "0xDC445C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xDC4634", Offset = "0xDC4634", VA = "0xDC4634")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xDC46B0", Offset = "0xDC46B0", VA = "0xDC46B0")]
		public void DoLateUpdate()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xDC4EC0", Offset = "0xDC4EC0", VA = "0xDC4EC0")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xDC57F0", Offset = "0xDC57F0", VA = "0xDC57F0")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xDC517C", Offset = "0xDC517C", VA = "0xDC517C")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xDC4310", Offset = "0xDC4310", VA = "0xDC4310")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xDC52DC", Offset = "0xDC52DC", VA = "0xDC52DC")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xDC4BD8", Offset = "0xDC4BD8", VA = "0xDC4BD8")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xDC5834", Offset = "0xDC5834", VA = "0xDC5834")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xDC5850", Offset = "0xDC5850", VA = "0xDC5850")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xDC585C", Offset = "0xDC585C", VA = "0xDC585C")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x2000467")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : UnityEngine.MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000468")]
		[CompilerGenerated]
		private sealed class <CaretBlinker>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400294E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x17000374")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C39")]
				[Address(RVA = "0xDC6D74", Offset = "0xDC6D74", VA = "0xDC6D74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000375")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C3B")]
				[Address(RVA = "0xDC6DBC", Offset = "0xDC6DBC", VA = "0xDC6DBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xDC651C", Offset = "0xDC651C", VA = "0xDC651C")]
			[DebuggerHidden]
			public <CaretBlinker>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xDC6C64", Offset = "0xDC6C64", VA = "0xDC6C64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xDC6C68", Offset = "0xDC6C68", VA = "0xDC6C68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xDC6D7C", Offset = "0xDC6D7C", VA = "0xDC6D7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool overrideCaretHeight;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float caretHeight;

		[Token(Token = "0x17000371")]
		public Color CaretColor
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xDC6BF4", Offset = "0xDC6BF4", VA = "0xDC6BF4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0xDC6C00", Offset = "0xDC6C00", VA = "0xDC6C00")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public Color SelectionColor
		{
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0xDC6C0C", Offset = "0xDC6C0C", VA = "0xDC6C0C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0xDC6C18", Offset = "0xDC6C18", VA = "0xDC6C18")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xDC6C24", Offset = "0xDC6C24", VA = "0xDC6C24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xDC6C40", Offset = "0xDC6C40", VA = "0xDC6C40")]
			set
			{
			}
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xDC591C", Offset = "0xDC591C", VA = "0xDC591C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xDC5D80", Offset = "0xDC5D80", VA = "0xDC5D80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xDC6024", Offset = "0xDC6024", VA = "0xDC6024", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xDC64E8", Offset = "0xDC64E8", VA = "0xDC64E8", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xDC6480", Offset = "0xDC6480", VA = "0xDC6480")]
		[IteratorStateMachine(typeof(<CaretBlinker>d__12))]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xDC60E0", Offset = "0xDC60E0", VA = "0xDC60E0")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xDC5D90", Offset = "0xDC5D90", VA = "0xDC5D90")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xDC6544", Offset = "0xDC6544", VA = "0xDC6544")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xDC65FC", Offset = "0xDC65FC", VA = "0xDC65FC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xDC59C0", Offset = "0xDC59C0", VA = "0xDC59C0")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xDC6C5C", Offset = "0xDC6C5C", VA = "0xDC6C5C")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x200046A")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text TMPtext;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool searchedComponents;

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xDC6DC4", Offset = "0xDC6DC4", VA = "0xDC6DC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xDC6F38", Offset = "0xDC6F38", VA = "0xDC6F38")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xDC6DD4", Offset = "0xDC6DD4", VA = "0xDC6DD4")]
		private void FindComponents()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xDC5444", Offset = "0xDC5444", VA = "0xDC5444")]
		public void UpdateSubmesh(bool tesselate, bool curve, int idx)
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xDC7010", Offset = "0xDC7010", VA = "0xDC7010")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x200046B")]
	[Conditional("UNITY_CCU")]
	[AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xDC7018", Offset = "0xDC7018", VA = "0xDC7018")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace AzureDatabase
{
	[Token(Token = "0x200046C")]
	public enum EndPoints
	{
		[Token(Token = "0x400295B")]
		RetrievePlayerStats,
		[Token(Token = "0x400295C")]
		GameModeAccessRequest,
		[Token(Token = "0x400295D")]
		UpdateStats,
		[Token(Token = "0x400295E")]
		GetScoreboard,
		[Token(Token = "0x400295F")]
		EntryCheck,
		[Token(Token = "0x4002960")]
		WeaponPurchase,
		[Token(Token = "0x4002961")]
		CharacterPurchase,
		[Token(Token = "0x4002962")]
		PerkPurchase,
		[Token(Token = "0x4002963")]
		ResetChallenge,
		[Token(Token = "0x4002964")]
		RedeemChallenge,
		[Token(Token = "0x4002965")]
		ChangeServer,
		[Token(Token = "0x4002966")]
		UpdateLogin,
		[Token(Token = "0x4002967")]
		UpdateZombieStats,
		[Token(Token = "0x4002968")]
		RequestFriendlist,
		[Token(Token = "0x4002969")]
		FriendInviteRequest,
		[Token(Token = "0x400296A")]
		FriendInviteResponse,
		[Token(Token = "0x400296B")]
		RemoveFriend,
		[Token(Token = "0x400296C")]
		ReportUser,
		[Token(Token = "0x400296D")]
		BlockUser,
		[Token(Token = "0x400296E")]
		ResetPlayerStats,
		[Token(Token = "0x400296F")]
		TacticalPurchase,
		[Token(Token = "0x4002970")]
		ChallengeLocalisation,
		[Token(Token = "0x4002971")]
		DiscordDebugReport
	}
	[Serializable]
	[Token(Token = "0x200046D")]
	public struct EndPointData
	{
		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EndPoints endPoint;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string endPointString;
	}
	[Token(Token = "0x200046E")]
	[CreateAssetMenu(fileName = "ApiEndpoints", menuName = "ScriptableObjects/ApiEndpoints", order = 1)]
	public class ApiEndpoints : ScriptableObject
	{
		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string baseURL;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string liveEndpointBase;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string betaEndpointBase;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EndPointData[] endPoints;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<EndPoints, string> endPointsDic;

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xDC7044", Offset = "0xDC7044", VA = "0xDC7044")]
		public string GetEndpoint(EndPoints endPoint)
		{
			return null;
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xDC709C", Offset = "0xDC709C", VA = "0xDC709C")]
		public void Initialize(bool beta)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xDC7248", Offset = "0xDC7248", VA = "0xDC7248")]
		public ApiEndpoints()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public enum AzureRequestTypes
	{
		[Token(Token = "0x400297A")]
		None = 0,
		[Token(Token = "0x400297B")]
		PlayerStats = 1,
		[Token(Token = "0x400297C")]
		GameModesAccess = 2,
		[Token(Token = "0x400297D")]
		Scoreboard = 4,
		[Token(Token = "0x400297E")]
		Entry = 5,
		[Token(Token = "0x400297F")]
		ChallengeReset = 6,
		[Token(Token = "0x4002980")]
		RequestServerStatus = 7,
		[Token(Token = "0x4002981")]
		RequestUpdateLogin = 8,
		[Token(Token = "0x4002982")]
		FriendlistFetch = 9,
		[Token(Token = "0x4002983")]
		FriendInvite = 10,
		[Token(Token = "0x4002984")]
		FriendInviteAnswer = 11,
		[Token(Token = "0x4002985")]
		FriendRemove = 12,
		[Token(Token = "0x4002986")]
		BlockUser = 13,
		[Token(Token = "0x4002987")]
		ReportUser = 14,
		[Token(Token = "0x4002988")]
		Tactical = 15,
		[Token(Token = "0x4002989")]
		ChallengeLocalisation = 16,
		[Token(Token = "0x400298A")]
		DiscordDebugReport = 17
	}
	[Token(Token = "0x2000470")]
	public class AzureQuery : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000471")]
		public delegate void OnQueryResults(AzureRequestTypes types, string result, int requId);

		[Token(Token = "0x2000472")]
		[CompilerGenerated]
		private sealed class <GetRequest>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400299A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400299B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AzureRequestTypes type;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string uri;

			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int requId;

			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AzureQuery <>4__this;

			[Token(Token = "0x40029A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C79")]
				[Address(RVA = "0xDCB8B8", Offset = "0xDCB8B8", VA = "0xDCB8B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7B")]
				[Address(RVA = "0xDCB900", Offset = "0xDCB900", VA = "0xDCB900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xDCAC78", Offset = "0xDCAC78", VA = "0xDCAC78")]
			[DebuggerHidden]
			public <GetRequest>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xDCB354", Offset = "0xDCB354", VA = "0xDCB354", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xDCB358", Offset = "0xDCB358", VA = "0xDCB358", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xDCB8C0", Offset = "0xDCB8C0", VA = "0xDCB8C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400298C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<UnityWebRequest.Result, int> RequestErrorEvent;

		[Token(Token = "0x400298D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<int> RequestUnknownResultEvent;

		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ApiEndpoints endpoints;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool callWeaponBuys;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] o;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string q;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int p;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AzureQuery m_Instance;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_PlatformID;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_Nonce;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_AuthToken;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_localFID;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_MasterNonce;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int requestCount;

		[Token(Token = "0x17000376")]
		public static AzureQuery Instance
		{
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xDC7474", Offset = "0xDC7474", VA = "0xDC7474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public string Nonce
		{
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0xDC7608", Offset = "0xDC7608", VA = "0xDC7608")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public string PlatformID
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xDC7610", Offset = "0xDC7610", VA = "0xDC7610")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public string AuthToken
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xDC7620", Offset = "0xDC7620", VA = "0xDC7620")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xDC7618", Offset = "0xDC7618", VA = "0xDC7618")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public string LocalFID
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xDC7630", Offset = "0xDC7630", VA = "0xDC7630")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xDC7628", Offset = "0xDC7628", VA = "0xDC7628")]
			set
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event OnQueryResults QueryResultsEvent
		{
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0xDC72C4", Offset = "0xDC72C4", VA = "0xDC72C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xDC739C", Offset = "0xDC739C", VA = "0xDC739C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xDC74CC", Offset = "0xDC74CC", VA = "0xDC74CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xDC7638", Offset = "0xDC7638", VA = "0xDC7638")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xDC76CC", Offset = "0xDC76CC", VA = "0xDC76CC")]
		public void Login(string PID, string Name, string version, string region, string ps4Region = "")
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xDC7D54", Offset = "0xDC7D54", VA = "0xDC7D54")]
		public int RequestPlayerStats(int playerID, string avatarUrl)
		{
			return default(int);
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xDC87EC", Offset = "0xDC87EC", VA = "0xDC87EC")]
		public void RequestGameModeAccess(int playerID)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xDC8880", Offset = "0xDC8880", VA = "0xDC8880")]
		public void PutPlayerStats(PlayerStatsUploadPackage stats)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xDC8A20", Offset = "0xDC8A20", VA = "0xDC8A20")]
		public void RequestScoreboard()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xDC8B3C", Offset = "0xDC8B3C", VA = "0xDC8B3C")]
		public void PutWeaponBuy(WeaponBoughtPackage data)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xDC8CA8", Offset = "0xDC8CA8", VA = "0xDC8CA8")]
		public void PutCharacterBuy(CharacterBoughtPackage data)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xDC8E50", Offset = "0xDC8E50", VA = "0xDC8E50")]
		public void PutPerkBuy(PerkBoughtPackage data)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xDC8FF8", Offset = "0xDC8FF8", VA = "0xDC8FF8")]
		public void PutTacticalGearBuy(TacticalBoughtPackage _data)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xDC91F0", Offset = "0xDC91F0", VA = "0xDC91F0")]
		public void ResetPlayerStats(string uid, int wid)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xDC93BC", Offset = "0xDC93BC", VA = "0xDC93BC")]
		public void ChallengeLocalisation(int[] challenges, int region)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xDC9518", Offset = "0xDC9518", VA = "0xDC9518")]
		public void RedeemMission(string uid, int id)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xDC975C", Offset = "0xDC975C", VA = "0xDC975C")]
		public void ResetMission(string uid, int id)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xDC9994", Offset = "0xDC9994", VA = "0xDC9994")]
		public void RequestServerStatus(int playerID)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xDC9A44", Offset = "0xDC9A44", VA = "0xDC9A44")]
		public void RequestUpdateLogin(int playerID)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xDC9AD8", Offset = "0xDC9AD8", VA = "0xDC9AD8")]
		public void PutZombiesStats(ZombiesStatsPackage stats)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xDC9C84", Offset = "0xDC9C84", VA = "0xDC9C84")]
		public void RequestFriendlist(FriendlistRequest data)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xDC9E2C", Offset = "0xDC9E2C", VA = "0xDC9E2C")]
		public int SendFriendInvite(FriendInviteRequest invite)
		{
			return default(int);
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xDC9FD4", Offset = "0xDC9FD4", VA = "0xDC9FD4")]
		public int RespondToFriendInvite(FriendInviteAnswer answer)
		{
			return default(int);
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xDCA174", Offset = "0xDCA174", VA = "0xDCA174")]
		public int RemoveFriend(FriendRemoveRequest data)
		{
			return default(int);
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xDCA31C", Offset = "0xDCA31C", VA = "0xDCA31C")]
		public int ReportUser(ReportUserRequest data)
		{
			return default(int);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xDCA4B4", Offset = "0xDCA4B4", VA = "0xDCA4B4")]
		public int BlockUser(BlockUserRequest data)
		{
			return default(int);
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xDCA65C", Offset = "0xDCA65C", VA = "0xDCA65C")]
		public void SendDiscordDebugReport(string PID, string Name, string version, string region, string[] variables, string[] logs)
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xDCA660", Offset = "0xDCA660", VA = "0xDCA660")]
		public void SendAlvoErrorReport(params string[] errorReport)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xDC7970", Offset = "0xDC7970", VA = "0xDC7970")]
		public string GetAuthDetails(bool entry = false, bool photonAuth = false)
		{
			return null;
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xDCAA78", Offset = "0xDCAA78", VA = "0xDCAA78")]
		private void QueryResultsCallback(AzureRequestTypes type, string received, int requId)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xDCABC8", Offset = "0xDCABC8", VA = "0xDCABC8")]
		private void DatabaseRequest(AzureRequestTypes requestType, string uri, int requId)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xDCABE8", Offset = "0xDCABE8", VA = "0xDCABE8")]
		[IteratorStateMachine(typeof(<GetRequest>d__58))]
		private IEnumerator GetRequest(AzureRequestTypes type, string uri, int requId)
		{
			return null;
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xDC7D08", Offset = "0xDC7D08", VA = "0xDC7D08")]
		private int SendRequest(AzureRequestTypes type, string uri)
		{
			return default(int);
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xDC7E70", Offset = "0xDC7E70", VA = "0xDC7E70")]
		public string GetPlayerString(int playerdID, string avatarUrl = "", bool sendAvatar = false)
		{
			return null;
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xDC78B0", Offset = "0xDC78B0", VA = "0xDC78B0")]
		public string EncryptString(string text)
		{
			return null;
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xDCACA0", Offset = "0xDCACA0", VA = "0xDCACA0")]
		public string DecryptAESBase64String(string text)
		{
			return null;
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xDCB080", Offset = "0xDCB080", VA = "0xDCB080")]
		public AzureQuery()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public struct UpdateLogin
	{
		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool ResponseUpdateLogin;
	}
	[Token(Token = "0x2000474")]
	public struct ServerStatus
	{
		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int NewServer;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool ChangeServer;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int EventNumber;
	}
	[Token(Token = "0x2000475")]
	public struct LoginData
	{
		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string PID;

		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Version;

		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Region;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Platform;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Ps4Region;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int TextRegion;
	}
	[Serializable]
	[Token(Token = "0x2000476")]
	public struct ScoreboardStatsArray
	{
		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScoreboardData[] StatsToDisplay;

		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ScoreboardData[] StatsWeekly;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string error;
	}
	[Serializable]
	[Token(Token = "0x2000477")]
	public struct ScoreboardData
	{
		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float KDR;

		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long Kills;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long Deaths;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long Headshots;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long Logins;
	}
	[Serializable]
	[Token(Token = "0x2000478")]
	public struct Access
	{
		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string FID;

		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string UID;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int returnID;

		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool CanLogin;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ServerLocation;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Lobby;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MatchMode;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Character;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Perks;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Tactical;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool Moderator;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool DebugSettings;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int XP;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string AuthToken;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int EventNumber;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int EventPoints;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int EventPointsRequired;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string EventTitle;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool[] SeasonalEventsCompleted;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int MaxNoviceLevel;

		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool OptOutNovice;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameModeMapRelationShip[] GameModes;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int[] PrivateServers;

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool ShowFirstTimeMsgs;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float FirstTimeMsgsKeyVersion;

		[Token(Token = "0x40029CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FirstTimeMsg[] FirstTimeMsgs;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool D1;

		[Token(Token = "0x40029D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool D2;

		[Token(Token = "0x40029D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool D3;

		[Token(Token = "0x40029D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		public bool D4;

		[Token(Token = "0x40029D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool D5;

		[Token(Token = "0x40029D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool D6;

		[Token(Token = "0x40029D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		public bool D7;

		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
		public bool D8;

		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool D9;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool D12;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool D13;

		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		public bool D14;

		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool D15;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool D16;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		public bool D17;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		public bool D18;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string D1Attach;

		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string D2Attach;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string D3Attach;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string D4Attach;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string D5Attach;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string D6Attach;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string D7Attach;

		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string D8Attach;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string D9Attach;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string D12Attach;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string D13Attach;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string D14Attach;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public string D15Attach;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string D16Attach;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string D17Attach;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string D18Attach;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public int D1Skin;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public int D2Skin;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int D3Skin;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public int D4Skin;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int D5Skin;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public int D6Skin;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int D7Skin;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public int D8Skin;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public int D9Skin;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public int D12Skin;

		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int D13Skin;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public int D14Skin;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public int D15Skin;

		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public int D16Skin;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public int D17Skin;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public int D18Skin;

		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool Crossplay;

		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool CrossplayOptOut;

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xDCB908", Offset = "0xDCB908", VA = "0xDCB908")]
		public void AddToPlayerStats(PlayerStats stats)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000479")]
	public struct FirstTimeMsg
	{
		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Header;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Content;
	}
	[Serializable]
	[Token(Token = "0x200047A")]
	public struct DailyXPInfo
	{
		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Day;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int XP;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Coins;

		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public byte BonusPercentage;
	}
	[Serializable]
	[Token(Token = "0x200047B")]
	public struct GameModeMapRelationShip
	{
		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mode;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool active;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool M0;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool M1;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool M2;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool M3;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool M4;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool M5;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool M6;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool M7;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool M8;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool M9;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool M10;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool M11;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool M12;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool M13;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool M14;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool M15;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool M16;

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xDCC324", Offset = "0xDCC324", VA = "0xDCC324")]
		public bool[] GetMapAccess()
		{
			return null;
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xDCC48C", Offset = "0xDCC48C", VA = "0xDCC48C")]
		public void SetAllTrue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047C")]
	public struct GameModeAccess
	{
		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameModeMapRelationShip[] GameModes;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string error;
	}
	[Token(Token = "0x200047D")]
	public struct AzureErrorMessage
	{
		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string error;
	}
	[Token(Token = "0x200047E")]
	public struct ReportUserRequest
	{
		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Platform;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ReporterFID;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ReportedFID;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ReporterName;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ReportedName;

		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Reason;

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xDCC49C", Offset = "0xDCC49C", VA = "0xDCC49C")]
		public ReportUserRequest(string uID, string fID, string reportedFID, string reporterName, string reportedName, int reason)
		{
		}
	}
	[Token(Token = "0x200047F")]
	public struct BlockUserRequest
	{
		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Platform;

		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FID;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BlockedFID;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string blocked;

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xDCC4B4", Offset = "0xDCC4B4", VA = "0xDCC4B4")]
		public BlockUserRequest(string uID, string fID, string blockedFID, bool blocked)
		{
		}
	}
	[Token(Token = "0x2000480")]
	public struct DiscordDebugReporter
	{
		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Server;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Platform;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsMaster;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Logs;
	}
	[Serializable]
	[Token(Token = "0x2000481")]
	public class PlayerStatsUploadPackage
	{
		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int XP;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Coins;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string UID;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Platform;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int TDMWin;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int TDMLoss;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int FFAFirstPlace;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int FFASecondPlace;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int FFAThirdPlace;

		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int FFAGamesPlayed;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int SNDWin;

		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int SNDLoss;

		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int SNDRoundWin;

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int SNDPlant;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int SNDDefuse;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int HpWin;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int HpLoss;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int HpPersonalPoints;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int HpTeamPoints;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int Kills;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int BotKills;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int Deaths;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int BotDeaths;

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int Assists;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int BotAssists;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int Meleekills;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int GunKills;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int Headshots;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int BotHeadshots;

		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int Grenadekills;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int Killsgun1;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int Killsgun2;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int Killsgun3;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int Killsgun4;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int Killsgun5;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int Killsgun6;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Killsgun7;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int Killsgun8;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int Killsgun9;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int Killsgun12;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int Killsgun13;

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int Killsgun14;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int Killsgun15;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int Killsgun16;

		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int Killsgun17;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int Killsgun18;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int Killstreak1;

		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int Killstreak2;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int Killstreak3;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int Killstreak4;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int Killstreak5;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int ChallengeStat1;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int ChallengeStat2;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int ChallengeStat3;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string RoomId;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int PlayerTeam;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public int EventPoints;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float ExpMultiplier;

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xDCC508", Offset = "0xDCC508", VA = "0xDCC508")]
		public PlayerStatsUploadPackage()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xDCC510", Offset = "0xDCC510", VA = "0xDCC510")]
		public PlayerStatsUploadPackage(PlayerStats stats, [Optional] Mission[] missions, string roomId = "", int playerTeam = 0, int eventPoints = 0)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000482")]
	public class PlayerStatsDownloadPackage
	{
		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int XP;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Coins;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TDMWin;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TDMLoss;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int FFAFirstPlace;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int FFASecondPlace;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int FFAThirdPlace;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int FFAGamesPlayed;

		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int SNDWin;

		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int SNDLoss;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int SNDRoundWin;

		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int SNDPlant;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int SNDDefuse;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int HpWin;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int HpLoss;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int HpPersonalPoints;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int HpTeamPoints;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int Kills;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int BotKills;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int Deaths;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int BotDeaths;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int Assists;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int BotAssists;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int Meleekills;

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int GunKills;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int Headshots;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int BotHeadshots;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int Grenadekills;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int Killsgun1;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int Killsgun2;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int Killsgun3;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int Killsgun4;

		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int Killsgun5;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int Killsgun6;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int Killsgun7;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int Killsgun8;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int Killsgun9;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Killsgun12;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int Killsgun13;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int Killsgun14;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int Killsgun15;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int Killsgun16;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int Killsgun17;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int Killsgun18;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int Killstreak1;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int Killstreak2;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int Killstreak3;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int Killstreak4;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int Killstreak5;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int WeeklyKills;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int WeeklyDeaths;

		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float WeeklyKDR;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int WeeklyHeadshots;

		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int LeaderboardKills;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int LeaderboardDeaths;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public int LeaderboardHeadshots;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float LeaderboardKDR;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string Lobby;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool OpenRoom;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int MatchMode;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool Message;

		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string MessageString;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public DailyXPInfo DailyBonusXP;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public string Challenge1;

		[Token(Token = "0x4002AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public string Challenge2;

		[Token(Token = "0x4002AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public string Challenge3;

		[Token(Token = "0x4002AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string error;

		[Token(Token = "0x4002AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public string Character14Unlock;

		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public string Character15Unlock;

		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public string Character16Unlock;

		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public int EventNumber;

		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public int EventPoints;

		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public int EventPointsRequired;

		[Token(Token = "0x4002AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string EventTitle;

		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool[] SeasonalEventsCompleted;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public int MaxNoviceLevel;

		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool OptOutNovice;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int XPBonusRank;

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xDCC820", Offset = "0xDCC820", VA = "0xDCC820")]
		public PlayerStatsDownloadPackage()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xDCC8A0", Offset = "0xDCC8A0", VA = "0xDCC8A0")]
		public PlayerStats AsPlayerStats([Optional] PlayerStats stats, bool doLeaderboards = true)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000483")]
	public class WeaponBoughtPackage
	{
		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string UID;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int WID;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Platform;

		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Purchased;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string AttachmentPurchases;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int SkinPurchases;

		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Cost;

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xDCCCD0", Offset = "0xDCCCD0", VA = "0xDCCCD0")]
		public WeaponBoughtPackage(string _UID, int _WID, bool _Purchased, BitArray _AP, BitVector32 _Skins, int cost)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000484")]
	public struct CharacterBoughtPackage
	{
		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Character;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Platform;

		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Cost;

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xDCCD84", Offset = "0xDCCD84", VA = "0xDCCD84")]
		public CharacterBoughtPackage(string uID, BitVector32 character, int cost)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000485")]
	public struct PerkBoughtPackage
	{
		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Perk;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Platform;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Cost;

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xDCCD94", Offset = "0xDCCD94", VA = "0xDCCD94")]
		public PerkBoughtPackage(string uID, BitVector32 perks, int cost)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000486")]
	public struct TacticalBoughtPackage
	{
		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Tactical;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Platform;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Cost;

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xDCCDA4", Offset = "0xDCCDA4", VA = "0xDCCDA4")]
		public TacticalBoughtPackage(string uID, BitVector32 tactical, int cost)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000487")]
	public struct ResetPackage
	{
		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int WID;

		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Platform;

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xDC93B0", Offset = "0xDC93B0", VA = "0xDC93B0")]
		public ResetPackage(string uID, int wID, int platform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000488")]
	public struct MissionBundle
	{
		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mission[] missions;
	}
	[Serializable]
	[Token(Token = "0x2000489")]
	public struct MissionPackage
	{
		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ID;

		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Challenge;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ChallengeReward;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ChallengeDuration;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ChallengeDescription;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ChallengeShortDescription;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long ChallengeTime;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int ChallengeStat;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ChallengeRedeemed;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int ChallengeID;

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xDCCDB4", Offset = "0xDCCDB4", VA = "0xDCCDB4")]
		public MissionPackage(Mission _mission, PlayerStats _currentStats)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xDCCF4C", Offset = "0xDCCF4C", VA = "0xDCCF4C")]
		public Mission AsMission()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200048A")]
	public struct MissionIdPackage
	{
		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Platform;

		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SlotID;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int TextRegion;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xDC974C", Offset = "0xDC974C", VA = "0xDC974C")]
		public MissionIdPackage(string uID, int platform, int sID, int l)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048B")]
	public struct MissionLocalizationPackage
	{
		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int[] Challenges;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int TextRegion;
	}
	[Serializable]
	[Token(Token = "0x200048C")]
	public struct MissionLocalization
	{
		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Challenge1Description;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Challenge1ShortDescription;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Challenge2Description;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Challenge2ShortDescription;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Challenge3Description;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Challenge3ShortDescription;
	}
	[Serializable]
	[Token(Token = "0x200048D")]
	public struct ZombiesStatsPackage
	{
		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Platform;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Kills;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int TeamKills;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TimesRevived;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int PlayersRevived;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Deaths;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int TeamDeaths;

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int RoundsReached;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Players;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ActivatedBackrooms;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool SafelyEscaped;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string RoomID;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int PlayerTeam;

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xDCD328", Offset = "0xDCD328", VA = "0xDCD328")]
		public ZombiesStatsPackage(string uID, StatTracking stats, string roomID, int playerTeam)
		{
		}
	}
	[Token(Token = "0x200048E")]
	public struct FriendlistRequest
	{
		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Platform;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FID;

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xDCD36C", Offset = "0xDCD36C", VA = "0xDCD36C")]
		public FriendlistRequest(string uID, string fID)
		{
		}
	}
	[Token(Token = "0x200048F")]
	public struct FriendInviteRequest
	{
		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Platform;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int FID;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Type;

		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int InviteFID;

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xDCD37C", Offset = "0xDCD37C", VA = "0xDCD37C")]
		public FriendInviteRequest(string uID, int fID, int inviteFID)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xDCD390", Offset = "0xDCD390", VA = "0xDCD390")]
		public FriendInviteRequest(string uID, string fID, string inviteFID)
		{
		}
	}
	[Token(Token = "0x2000490")]
	public struct StatusResponse
	{
		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string status;

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xDCD3D8", Offset = "0xDCD3D8", VA = "0xDCD3D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000491")]
	public struct FriendInviteAnswer
	{
		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Platform;

		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int FID;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string UpdateType;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string NotificationId;

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xDCD424", Offset = "0xDCD424", VA = "0xDCD424")]
		public FriendInviteAnswer(string uID, string fID, string updateType, string notificationId)
		{
		}
	}
	[Token(Token = "0x2000492")]
	public struct FriendRemoveRequest
	{
		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UID;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Platform;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int FID;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int FriendID;

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xDCD460", Offset = "0xDCD460", VA = "0xDCD460")]
		public FriendRemoveRequest(string uID, int fID, int friendID)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xDCD470", Offset = "0xDCD470", VA = "0xDCD470")]
		public FriendRemoveRequest(string uID, string fID, string friendID)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000493")]
	public struct FriendlistReceivePackage
	{
		[Serializable]
		[Token(Token = "0x2000494")]
		private class FriendData
		{
			[Serializable]
			[Token(Token = "0x2000495")]
			public class Wrapper : JsonArrWrapper<FriendData>
			{
				[Token(Token = "0x4002B0D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public FriendData[] FriendsList;

				[Token(Token = "0x6001C9A")]
				[Address(RVA = "0xDCD9F8", Offset = "0xDCD9F8", VA = "0xDCD9F8", Slot = "4")]
				public FriendData[] GetItems()
				{
					return null;
				}

				[Token(Token = "0x6001C9B")]
				[Address(RVA = "0xDCDA00", Offset = "0xDCDA00", VA = "0xDCDA00")]
				public Wrapper()
				{
				}
			}

			[Token(Token = "0x4002B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string PSNName;

			[Token(Token = "0x4002B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string FID;

			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Platform;

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xDCD9F0", Offset = "0xDCD9F0", VA = "0xDCD9F0")]
			public FriendData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000496")]
		private class NotificationData : FriendData
		{
			[Serializable]
			[Token(Token = "0x2000497")]
			public new class Wrapper : JsonArrWrapper<NotificationData>
			{
				[Token(Token = "0x4002B11")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public NotificationData[] Notifications;

				[Token(Token = "0x6001C9D")]
				[Address(RVA = "0xDCDA10", Offset = "0xDCDA10", VA = "0xDCDA10", Slot = "4")]
				public NotificationData[] GetItems()
				{
					return null;
				}

				[Token(Token = "0x6001C9E")]
				[Address(RVA = "0xDCDA18", Offset = "0xDCDA18", VA = "0xDCDA18")]
				public Wrapper()
				{
				}
			}

			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string NotificationId;

			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string NotificationType;

			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string Date;

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0xDCDA08", Offset = "0xDCDA08", VA = "0xDCDA08")]
			public NotificationData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000498")]
		private class BlockListData : FriendData
		{
			[Serializable]
			[Token(Token = "0x2000499")]
			public new class Wrapper : JsonArrWrapper<BlockListData>
			{
				[Token(Token = "0x4002B12")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public BlockListData[] BlockedList;

				[Token(Token = "0x6001CA0")]
				[Address(RVA = "0xDCDA28", Offset = "0xDCDA28", VA = "0xDCDA28", Slot = "4")]
				public BlockListData[] GetItems()
				{
					return null;
				}

				[Token(Token = "0x6001CA1")]
				[Address(RVA = "0xDCDA30", Offset = "0xDCDA30", VA = "0xDCDA30")]
				public Wrapper()
				{
				}
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xDCDA20", Offset = "0xDCDA20", VA = "0xDCDA20")]
			public BlockListData()
			{
			}
		}

		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FriendData[] friends;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private NotificationData[] notifications;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BlockListData[] blockedList;

		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string error;

		[Token(Token = "0x4002B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Friend[] friendData;

		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FriendIncomingInvite[] notificationData;

		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Friend[] blockedListData;

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xDCD4B4", Offset = "0xDCD4B4", VA = "0xDCD4B4")]
		public FriendlistReceivePackage(string json)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xDCD594", Offset = "0xDCD594", VA = "0xDCD594")]
		public Friend[] GetFriends()
		{
			return null;
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xDCD704", Offset = "0xDCD704", VA = "0xDCD704")]
		public FriendIncomingInvite[] GetNotifications()
		{
			return null;
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xDCD880", Offset = "0xDCD880", VA = "0xDCD880")]
		public Friend[] GetBlockList()
		{
			return null;
		}
	}
	[Token(Token = "0x200049A")]
	public interface JsonArrWrapper<T>
	{
		[Token(Token = "0x6001CA2")]
		T[] GetItems();
	}
	[Token(Token = "0x200049B")]
	public static class JsonHelper
	{
		[Serializable]
		[Token(Token = "0x200049C")]
		private class Wrapper<T> : JsonArrWrapper<T>
		{
			[Token(Token = "0x4002B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Items;

			[Token(Token = "0x6001CA6")]
			public T[] GetItems()
			{
				return null;
			}

			[Token(Token = "0x6001CA7")]
			public Wrapper()
			{
			}
		}

		[Token(Token = "0x6001CA3")]
		public static T[] FromJson<T, T2>(string json) where T2 : JsonArrWrapper<T>
		{
			return null;
		}

		[Token(Token = "0x6001CA4")]
		public static string ToJson<T>(T[] array)
		{
			return null;
		}

		[Token(Token = "0x6001CA5")]
		public static string ToJson<T>(T[] array, bool prettyPrint)
		{
			return null;
		}
	}
	[Token(Token = "0x200049D")]
	public class ChatMessage
	{
		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte type;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string senderFID;

		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bytesLenght;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] data;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string actionFID;

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xDCDA38", Offset = "0xDCDA38", VA = "0xDCDA38")]
		public ChatMessage()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xDCDA90", Offset = "0xDCDA90", VA = "0xDCDA90")]
		private ChatMessage(byte messageType, string senderUID)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xDCDB04", Offset = "0xDCDB04", VA = "0xDCDB04")]
		public static byte[] Serialize(ChatMessage dataMessage)
		{
			return null;
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xDCDC1C", Offset = "0xDCDC1C", VA = "0xDCDC1C")]
		public static ChatMessage Deserialize(byte[] bytes)
		{
			return null;
		}
	}
	[Token(Token = "0x200049E")]
	public static class Cipher
	{
		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xDCA87C", Offset = "0xDCA87C", VA = "0xDCA87C")]
		public static string EncryptString(string plainText, byte[] key, byte[] iv)
		{
			return null;
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xDCAD60", Offset = "0xDCAD60", VA = "0xDCAD60")]
		public static string DecryptString(string cipherText, byte[] key, byte[] iv)
		{
			return null;
		}
	}
	[Token(Token = "0x200049F")]
	public class NetServices : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004A0")]
		public delegate void Connected(bool online);

		[Token(Token = "0x20004A1")]
		[CompilerGenerated]
		private sealed class <PingGoogle>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700037D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CBA")]
				[Address(RVA = "0xDCE204", Offset = "0xDCE204", VA = "0xDCE204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CBC")]
				[Address(RVA = "0xDCE24C", Offset = "0xDCE24C", VA = "0xDCE24C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xDCDF40", Offset = "0xDCDF40", VA = "0xDCDF40")]
			[DebuggerHidden]
			public <PingGoogle>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xDCE0E0", Offset = "0xDCE0E0", VA = "0xDCE0E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xDCE0E4", Offset = "0xDCE0E4", VA = "0xDCE0E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xDCE20C", Offset = "0xDCE20C", VA = "0xDCE20C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event Connected connectionCallback
		{
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xDCDD50", Offset = "0xDCDD50", VA = "0xDCDD50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xDCDE08", Offset = "0xDCDE08", VA = "0xDCDE08")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xDCDEC0", Offset = "0xDCDEC0", VA = "0xDCDEC0")]
		public void CheckConnection()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xDCDEE0", Offset = "0xDCDEE0", VA = "0xDCDEE0")]
		[IteratorStateMachine(typeof(<PingGoogle>d__5))]
		private IEnumerator PingGoogle()
		{
			return null;
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xDCDF68", Offset = "0xDCDF68", VA = "0xDCDF68")]
		public NetServices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A2")]
	public class ScoreboardStats
	{
		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Level;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Experience;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Coins;

		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string UID;

		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ID;

		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string PSID;

		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int Platform;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int TDMWin;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int TDMLoss;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int FFAFirstPlace;

		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int FFASecondPlace;

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int FFAThirdPlace;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int FFAGamesPlayed;

		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int SNDWin;

		[Token(Token = "0x4002B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int SNDLoss;

		[Token(Token = "0x4002B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int SNDRoundWin;

		[Token(Token = "0x4002B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int SNDPlant;

		[Token(Token = "0x4002B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SNDDefuse;

		[Token(Token = "0x4002B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int HpWin;

		[Token(Token = "0x4002B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int HpLoss;

		[Token(Token = "0x4002B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int HpPersonalPoints;

		[Token(Token = "0x4002B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int HpTeamPoints;

		[Token(Token = "0x4002B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int Kills;

		[Token(Token = "0x4002B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int BotKills;

		[Token(Token = "0x4002B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int Deaths;

		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int Meleekills;

		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int GunKills;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int Headshots;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int Grenadekills;

		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int Killsgun1;

		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int Killsgun2;

		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Killsgun3;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int Killsgun4;

		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int Killsgun5;

		[Token(Token = "0x4002B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int Killsgun6;

		[Token(Token = "0x4002B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int Killsgun7;

		[Token(Token = "0x4002B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int Killsgun8;

		[Token(Token = "0x4002B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int Killsgun9;

		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int Killstreak1;

		[Token(Token = "0x4002B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int Killstreak2;

		[Token(Token = "0x4002B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int Killstreak3;

		[Token(Token = "0x4002B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int Killstreak4;

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xDCE254", Offset = "0xDCE254", VA = "0xDCE254")]
		public ScoreboardStats()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xDCE25C", Offset = "0xDCE25C", VA = "0xDCE25C")]
		public ScoreboardStats(PlayerStats stats)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xDCE3FC", Offset = "0xDCE3FC", VA = "0xDCE3FC")]
		public static ScoreboardStats Deserialize(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xDCE754", Offset = "0xDCE754", VA = "0xDCE754")]
		public static byte[] Serialize(ScoreboardStats stats, int version)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A3")]
	public static class Extensions
	{
		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xDCEA90", Offset = "0xDCEA90", VA = "0xDCEA90")]
		public static string ToBitString(this BitArray bits)
		{
			return null;
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x20004A4")]
	public class AxisTouchButton : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xDCEB44", Offset = "0xDCEB44", VA = "0xDCEB44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xDCEDA0", Offset = "0xDCEDA0", VA = "0xDCEDA0")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xDCEF1C", Offset = "0xDCEF1C", VA = "0xDCEF1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xDCEF8C", Offset = "0xDCEF8C", VA = "0xDCEF8C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xDCF058", Offset = "0xDCF058", VA = "0xDCF058", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xDCF0BC", Offset = "0xDCF0BC", VA = "0xDCF0BC")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class ButtonHandler : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xDCF120", Offset = "0xDCF120", VA = "0xDCF120")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xDCF124", Offset = "0xDCF124", VA = "0xDCF124")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xDCF1EC", Offset = "0xDCF1EC", VA = "0xDCF1EC")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xDCF2B4", Offset = "0xDCF2B4", VA = "0xDCF2B4")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xDCF37C", Offset = "0xDCF37C", VA = "0xDCF37C")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xDCF444", Offset = "0xDCF444", VA = "0xDCF444")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xDCF50C", Offset = "0xDCF50C", VA = "0xDCF50C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xDCF510", Offset = "0xDCF510", VA = "0xDCF510")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x20004A7")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4002B53")]
			Hardware,
			[Token(Token = "0x4002B54")]
			Touch
		}

		[Token(Token = "0x20004A8")]
		public class VirtualAxis
		{
			[Token(Token = "0x4002B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x17000380")]
			public string name
			{
				[Token(Token = "0x6001CE9")]
				[Address(RVA = "0xDCFD2C", Offset = "0xDCFD2C", VA = "0xDCFD2C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CEA")]
				[Address(RVA = "0xDCFD34", Offset = "0xDCFD34", VA = "0xDCFD34")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000381")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001CEB")]
				[Address(RVA = "0xDCFD3C", Offset = "0xDCFD3C", VA = "0xDCFD3C")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001CEC")]
				[Address(RVA = "0xDCFD44", Offset = "0xDCFD44", VA = "0xDCFD44")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000382")]
			public float GetValue
			{
				[Token(Token = "0x6001CF1")]
				[Address(RVA = "0xDCFD8C", Offset = "0xDCFD8C", VA = "0xDCFD8C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000383")]
			public float GetValueRaw
			{
				[Token(Token = "0x6001CF2")]
				[Address(RVA = "0xDCFD94", Offset = "0xDCFD94", VA = "0xDCFD94")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xDCEC98", Offset = "0xDCEC98", VA = "0xDCEC98")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xDCFD50", Offset = "0xDCFD50", VA = "0xDCFD50")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0xDCEF34", Offset = "0xDCEF34", VA = "0xDCEF34")]
			public void Remove()
			{
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xDCFD84", Offset = "0xDCFD84", VA = "0xDCFD84")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x20004A9")]
		public class VirtualButton
		{
			[Token(Token = "0x4002B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4002B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4002B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000384")]
			public string name
			{
				[Token(Token = "0x6001CF3")]
				[Address(RVA = "0xDCFD9C", Offset = "0xDCFD9C", VA = "0xDCFD9C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CF4")]
				[Address(RVA = "0xDCFDA4", Offset = "0xDCFDA4", VA = "0xDCFDA4")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000385")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001CF5")]
				[Address(RVA = "0xDCFDAC", Offset = "0xDCFDAC", VA = "0xDCFDAC")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001CF6")]
				[Address(RVA = "0xDCFDB4", Offset = "0xDCFDB4", VA = "0xDCFDB4")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000386")]
			public bool GetButton
			{
				[Token(Token = "0x6001CFC")]
				[Address(RVA = "0xDCFED8", Offset = "0xDCFED8", VA = "0xDCFED8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000387")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6001CFD")]
				[Address(RVA = "0xDCFEE0", Offset = "0xDCFEE0", VA = "0xDCFEE0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000388")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6001CFE")]
				[Address(RVA = "0xDCFF04", Offset = "0xDCFF04", VA = "0xDCFF04")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xDCFDC0", Offset = "0xDCFDC0", VA = "0xDCFDC0")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xDCFDF8", Offset = "0xDCFDF8", VA = "0xDCFDF8")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xDCFE34", Offset = "0xDCFE34", VA = "0xDCFE34")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xDCFE60", Offset = "0xDCFE60", VA = "0xDCFE60")]
			public void Released()
			{
			}

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xDCFE80", Offset = "0xDCFE80", VA = "0xDCFE80")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4002B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4002B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x1700037F")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xDCFB64", Offset = "0xDCFB64", VA = "0xDCFB64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xDCF518", Offset = "0xDCF518", VA = "0xDCF518")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xDCF5D0", Offset = "0xDCF5D0", VA = "0xDCF5D0")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xDCEC2C", Offset = "0xDCEC2C", VA = "0xDCEC2C")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xDCF660", Offset = "0xDCF660", VA = "0xDCF660")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xDCECC8", Offset = "0xDCECC8", VA = "0xDCECC8")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xDCF6CC", Offset = "0xDCF6CC", VA = "0xDCF6CC")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xDCF738", Offset = "0xDCF738", VA = "0xDCF738")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xDCF7F4", Offset = "0xDCF7F4", VA = "0xDCF7F4")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xDCED34", Offset = "0xDCED34", VA = "0xDCED34")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xDCF860", Offset = "0xDCF860", VA = "0xDCF860")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xDCF938", Offset = "0xDCF938", VA = "0xDCF938")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xDCF8B8", Offset = "0xDCF8B8", VA = "0xDCF8B8")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xDCF990", Offset = "0xDCF990", VA = "0xDCF990")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xDCFA00", Offset = "0xDCFA00", VA = "0xDCFA00")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xDCFA70", Offset = "0xDCFA70", VA = "0xDCFA70")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xDCF17C", Offset = "0xDCF17C", VA = "0xDCF17C")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xDCF244", Offset = "0xDCF244", VA = "0xDCF244")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xDCF30C", Offset = "0xDCF30C", VA = "0xDCF30C")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xDCF49C", Offset = "0xDCF49C", VA = "0xDCF49C")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xDCF3D4", Offset = "0xDCF3D4", VA = "0xDCF3D4")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xDCFAE0", Offset = "0xDCFAE0", VA = "0xDCFAE0")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xDCFBD0", Offset = "0xDCFBD0", VA = "0xDCFBD0")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xDCFC44", Offset = "0xDCFC44", VA = "0xDCFC44")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xDCFCB8", Offset = "0xDCFCB8", VA = "0xDCFCB8")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class InputAxisScrollbar : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xDCFF28", Offset = "0xDCFF28", VA = "0xDCFF28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xDCFF2C", Offset = "0xDCFF2C", VA = "0xDCFF2C")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xDCFF9C", Offset = "0xDCFF9C", VA = "0xDCFF9C")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class Joystick : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x20004AC")]
		public enum AxisOption
		{
			[Token(Token = "0x4002B68")]
			Both,
			[Token(Token = "0x4002B69")]
			OnlyHorizontal,
			[Token(Token = "0x4002B6A")]
			OnlyVertical
		}

		[Token(Token = "0x4002B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x4002B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x4002B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4002B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4002B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xDCFFA4", Offset = "0xDCFFA4", VA = "0xDCFFA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xDD00CC", Offset = "0xDD00CC", VA = "0xDD00CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xDD00FC", Offset = "0xDD00FC", VA = "0xDD00FC")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xDCFFA8", Offset = "0xDCFFA8", VA = "0xDCFFA8")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xDD015C", Offset = "0xDD015C", VA = "0xDD015C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xDD02A8", Offset = "0xDD02A8", VA = "0xDD02A8", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xDD02E4", Offset = "0xDD02E4", VA = "0xDD02E4", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xDD02E8", Offset = "0xDD02E8", VA = "0xDD02E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xDD0328", Offset = "0xDD0328", VA = "0xDD0328")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	[ExecuteInEditMode]
	public class MobileControlRig : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xDD03A4", Offset = "0xDD03A4", VA = "0xDD03A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xDD03B4", Offset = "0xDD03B4", VA = "0xDD03B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xDD03AC", Offset = "0xDD03AC", VA = "0xDD03AC")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xDD04BC", Offset = "0xDD04BC", VA = "0xDD04BC")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xDD07B4", Offset = "0xDD07B4", VA = "0xDD07B4")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	[RequireComponent(typeof(Image))]
	public class TouchPad : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x20004AF")]
		public enum AxisOption
		{
			[Token(Token = "0x4002B7E")]
			Both,
			[Token(Token = "0x4002B7F")]
			OnlyHorizontal,
			[Token(Token = "0x4002B80")]
			OnlyVertical
		}

		[Token(Token = "0x20004B0")]
		public enum ControlStyle
		{
			[Token(Token = "0x4002B82")]
			Absolute,
			[Token(Token = "0x4002B83")]
			Relative,
			[Token(Token = "0x4002B84")]
			Swipe
		}

		[Token(Token = "0x4002B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x4002B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4002B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4002B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4002B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4002B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4002B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4002B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4002B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4002B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x4002B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4002B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x4002B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x4002B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x4002B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4002B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4002B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xDD07BC", Offset = "0xDD07BC", VA = "0xDD07BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xDD08DC", Offset = "0xDD08DC", VA = "0xDD08DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xDD07C0", Offset = "0xDD07C0", VA = "0xDD07C0")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xDD0950", Offset = "0xDD0950", VA = "0xDD0950")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xDD0A50", Offset = "0xDD0A50", VA = "0xDD0A50", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xDD0A88", Offset = "0xDD0A88", VA = "0xDD0A88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xDD0C60", Offset = "0xDD0C60", VA = "0xDD0C60", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xDD0CC0", Offset = "0xDD0CC0", VA = "0xDD0CC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xDD0D90", Offset = "0xDD0D90", VA = "0xDD0D90")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4002B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4002B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4002B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000389")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xDD0E14", Offset = "0xDD0E14", VA = "0xDD0E14")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xDD0E20", Offset = "0xDD0E20", VA = "0xDD0E20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xDD0E2C", Offset = "0xDD0E2C", VA = "0xDD0E2C")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xDD0E84", Offset = "0xDD0E84", VA = "0xDD0E84")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xDD0EDC", Offset = "0xDD0EDC", VA = "0xDD0EDC")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xDD1064", Offset = "0xDD1064", VA = "0xDD1064")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xDD11EC", Offset = "0xDD11EC", VA = "0xDD11EC")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xDD127C", Offset = "0xDD127C", VA = "0xDD127C")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xDD130C", Offset = "0xDD130C", VA = "0xDD130C")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xDD13A0", Offset = "0xDD13A0", VA = "0xDD13A0")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xDD13A8", Offset = "0xDD13A8", VA = "0xDD13A8")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xDD13B0", Offset = "0xDD13B0", VA = "0xDD13B0")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6001D25")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6001D26")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6001D27")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6001D28")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6001D29")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6001D2A")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6001D2B")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001D2C")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001D2D")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001D2E")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001D2F")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xDD13B8", Offset = "0xDD13B8", VA = "0xDD13B8")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x20004B2")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xDD14BC", Offset = "0xDD14BC", VA = "0xDD14BC")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xDD1548", Offset = "0xDD1548", VA = "0xDD1548")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xDD15D4", Offset = "0xDD15D4", VA = "0xDD15D4", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xDD166C", Offset = "0xDD166C", VA = "0xDD166C", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xDD1704", Offset = "0xDD1704", VA = "0xDD1704", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xDD179C", Offset = "0xDD179C", VA = "0xDD179C", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xDD1838", Offset = "0xDD1838", VA = "0xDD1838", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xDD18D4", Offset = "0xDD18D4", VA = "0xDD18D4", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xDD196C", Offset = "0xDD196C", VA = "0xDD196C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xDD1A10", Offset = "0xDD1A10", VA = "0xDD1A10", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xDD1AA8", Offset = "0xDD1AA8", VA = "0xDD1AA8", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xDD1B40", Offset = "0xDD1B40", VA = "0xDD1B40", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xDD1BD8", Offset = "0xDD1BD8", VA = "0xDD1BD8", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xDD1BE4", Offset = "0xDD1BE4", VA = "0xDD1BE4")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xDD1BE8", Offset = "0xDD1BE8", VA = "0xDD1BE8", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xDD1BFC", Offset = "0xDD1BFC", VA = "0xDD1BFC", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xDD1C08", Offset = "0xDD1C08", VA = "0xDD1C08", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xDD1C14", Offset = "0xDD1C14", VA = "0xDD1C14", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xDD1C20", Offset = "0xDD1C20", VA = "0xDD1C20", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xDD1C70", Offset = "0xDD1C70", VA = "0xDD1C70", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xDD1CC0", Offset = "0xDD1CC0", VA = "0xDD1CC0", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xDD1D10", Offset = "0xDD1D10", VA = "0xDD1D10", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xDD1D60", Offset = "0xDD1D60", VA = "0xDD1D60", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xDD1DB0", Offset = "0xDD1DB0", VA = "0xDD1DB0", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xDD1E00", Offset = "0xDD1E00", VA = "0xDD1E00", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xDD1E08", Offset = "0xDD1E08", VA = "0xDD1E08")]
		public StandaloneInput()
		{
		}
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x20004B4")]
	public class VRPlaySpace : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform frustumTransform;

		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float safeDistance;

		[Token(Token = "0x4002B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float fadeSpeed;

		[Token(Token = "0x4002B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color showColor;

		[Token(Token = "0x4002B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color hideColor;

		[Token(Token = "0x4002B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool activateGrid;

		[Token(Token = "0x4002B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_ShowFrustum;

		[Token(Token = "0x4002B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_CamAcceleration;

		[Token(Token = "0x4002B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_HmdPositionRaw;

		[Token(Token = "0x4002B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_HmdPositionUnity;

		[Token(Token = "0x4002B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion m_HmdRotationUnity;

		[Token(Token = "0x4002B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion m_HmdRotationRaw;

		[Token(Token = "0x4002B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshProUGUI debugText;

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xDD1E0C", Offset = "0xDD1E0C", VA = "0xDD1E0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xDD1E30", Offset = "0xDD1E30", VA = "0xDD1E30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xDD1E34", Offset = "0xDD1E34", VA = "0xDD1E34")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xDD1E98", Offset = "0xDD1E98", VA = "0xDD1E98")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xDD1FE4", Offset = "0xDD1FE4", VA = "0xDD1FE4")]
		public VRPlaySpace()
		{
		}
	}
}
namespace Photon
{
	[Token(Token = "0x20004B5")]
	public class MonoBehaviour : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pvCache;

		[Token(Token = "0x1700038A")]
		public PhotonView photonView
		{
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xDD1FF8", Offset = "0xDD1FF8", VA = "0xDD1FF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xDD2078", Offset = "0xDD2078", VA = "0xDD2078")]
		public MonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class PunBehaviour : MonoBehaviour, IPunCallbacks
	{
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xDD2080", Offset = "0xDD2080", VA = "0xDD2080", Slot = "33")]
		public virtual void OnConnectedToPhoton()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xDD2084", Offset = "0xDD2084", VA = "0xDD2084", Slot = "34")]
		public virtual void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xDD2088", Offset = "0xDD2088", VA = "0xDD2088", Slot = "35")]
		public virtual void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xDD208C", Offset = "0xDD208C", VA = "0xDD208C", Slot = "36")]
		public virtual void OnPhotonCreateRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xDD2090", Offset = "0xDD2090", VA = "0xDD2090", Slot = "37")]
		public virtual void OnPhotonJoinRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xDD2094", Offset = "0xDD2094", VA = "0xDD2094", Slot = "38")]
		public virtual void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xDD2098", Offset = "0xDD2098", VA = "0xDD2098", Slot = "39")]
		public virtual void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xDD209C", Offset = "0xDD209C", VA = "0xDD209C", Slot = "40")]
		public virtual void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xDD20A0", Offset = "0xDD20A0", VA = "0xDD20A0", Slot = "41")]
		public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xDD20A4", Offset = "0xDD20A4", VA = "0xDD20A4", Slot = "42")]
		public virtual void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xDD20A8", Offset = "0xDD20A8", VA = "0xDD20A8", Slot = "43")]
		public virtual void OnConnectionFail(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xDD20AC", Offset = "0xDD20AC", VA = "0xDD20AC", Slot = "44")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xDD20B0", Offset = "0xDD20B0", VA = "0xDD20B0", Slot = "45")]
		public virtual void OnReceivedRoomListUpdate()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xDD20B4", Offset = "0xDD20B4", VA = "0xDD20B4", Slot = "46")]
		public virtual void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xDD20B8", Offset = "0xDD20B8", VA = "0xDD20B8", Slot = "47")]
		public virtual void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xDD20BC", Offset = "0xDD20BC", VA = "0xDD20BC", Slot = "48")]
		public virtual void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xDD20C0", Offset = "0xDD20C0", VA = "0xDD20C0", Slot = "49")]
		public virtual void OnPhotonRandomJoinFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xDD20C4", Offset = "0xDD20C4", VA = "0xDD20C4", Slot = "50")]
		public virtual void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xDD20C8", Offset = "0xDD20C8", VA = "0xDD20C8", Slot = "51")]
		public virtual void OnPhotonMaxCccuReached()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xDD20CC", Offset = "0xDD20CC", VA = "0xDD20CC", Slot = "52")]
		public virtual void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xDD20D0", Offset = "0xDD20D0", VA = "0xDD20D0", Slot = "53")]
		public virtual void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xDD20D4", Offset = "0xDD20D4", VA = "0xDD20D4", Slot = "54")]
		public virtual void OnUpdatedFriendList()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xDD20D8", Offset = "0xDD20D8", VA = "0xDD20D8", Slot = "55")]
		public virtual void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xDD20DC", Offset = "0xDD20DC", VA = "0xDD20DC", Slot = "56")]
		public virtual void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xDD20E0", Offset = "0xDD20E0", VA = "0xDD20E0", Slot = "57")]
		public virtual void OnWebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xDD20E4", Offset = "0xDD20E4", VA = "0xDD20E4", Slot = "58")]
		public virtual void OnOwnershipRequest(object[] viewAndPlayer)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xDD20E8", Offset = "0xDD20E8", VA = "0xDD20E8", Slot = "59")]
		public virtual void OnLobbyStatisticsUpdate()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xDD20EC", Offset = "0xDD20EC", VA = "0xDD20EC", Slot = "60")]
		public virtual void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xDD20F0", Offset = "0xDD20F0", VA = "0xDD20F0", Slot = "61")]
		public virtual void OnOwnershipTransfered(object[] viewAndPlayers)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xDD20F4", Offset = "0xDD20F4", VA = "0xDD20F4")]
		public PunBehaviour()
		{
		}
	}
}
namespace Photon.Chat
{
	[Token(Token = "0x20004B7")]
	public class ChannelCreationOptions
	{
		[Token(Token = "0x4002B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ChannelCreationOptions Default;

		[Token(Token = "0x1700038B")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xDD20FC", Offset = "0xDD20FC", VA = "0xDD20FC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xDD2104", Offset = "0xDD2104", VA = "0xDD2104")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xDD2110", Offset = "0xDD2110", VA = "0xDD2110")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xDD2118", Offset = "0xDD2118", VA = "0xDD2118")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xDD2120", Offset = "0xDD2120", VA = "0xDD2120")]
		public ChannelCreationOptions()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class ChannelWellKnownProperties
	{
		[Token(Token = "0x4002B9B")]
		public const byte MaxSubscribers = byte.MaxValue;

		[Token(Token = "0x4002B9C")]
		public const byte PublishSubscribers = 254;

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xDD218C", Offset = "0xDD218C", VA = "0xDD218C")]
		public ChannelWellKnownProperties()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class ChatChannel
	{
		[Token(Token = "0x4002B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4002B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<string> Senders;

		[Token(Token = "0x4002B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<object> Messages;

		[Token(Token = "0x4002BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MessageLimit;

		[Token(Token = "0x4002BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<object, object> properties;

		[Token(Token = "0x4002BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly HashSet<string> Subscribers;

		[Token(Token = "0x1700038D")]
		public bool IsPrivate
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xDD2194", Offset = "0xDD2194", VA = "0xDD2194")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D78")]
			[Address(RVA = "0xDD219C", Offset = "0xDD219C", VA = "0xDD219C")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public int MessageCount
		{
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xDD21A8", Offset = "0xDD21A8", VA = "0xDD21A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038F")]
		public int LastMsgId
		{
			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0xDD21F0", Offset = "0xDD21F0", VA = "0xDD21F0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xDD21F8", Offset = "0xDD21F8", VA = "0xDD21F8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xDD2200", Offset = "0xDD2200", VA = "0xDD2200")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xDD2208", Offset = "0xDD2208", VA = "0xDD2208")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xDD2214", Offset = "0xDD2214", VA = "0xDD2214")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xDD221C", Offset = "0xDD221C", VA = "0xDD221C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xDD2224", Offset = "0xDD2224", VA = "0xDD2224")]
		public ChatChannel(string name)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xDD233C", Offset = "0xDD233C", VA = "0xDD233C")]
		public void Add(string sender, object message, int msgId)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xDD2524", Offset = "0xDD2524", VA = "0xDD2524")]
		public void Add(string[] senders, object[] messages, int lastMsgId)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xDD2468", Offset = "0xDD2468", VA = "0xDD2468")]
		public void TruncateMessages()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xDD25C0", Offset = "0xDD25C0", VA = "0xDD25C0")]
		public void ClearMessages()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xDD2668", Offset = "0xDD2668", VA = "0xDD2668")]
		public string ToStringMessages()
		{
			return null;
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xDD27A4", Offset = "0xDD27A4", VA = "0xDD27A4")]
		internal void ReadProperties(Dictionary<object, object> newProperties)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xDD2BB4", Offset = "0xDD2BB4", VA = "0xDD2BB4")]
		internal void AddSubscribers(string[] users)
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xDD2C50", Offset = "0xDD2C50", VA = "0xDD2C50")]
		internal void ClearProperties()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class ChatClient : IPhotonPeerListener
	{
		[Token(Token = "0x4002BA7")]
		private const int FriendRequestListMax = 1024;

		[Token(Token = "0x4002BA8")]
		public const int DefaultMaxSubscribers = 100;

		[Token(Token = "0x4002BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string chatRegion;

		[Token(Token = "0x4002BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int MessageLimit;

		[Token(Token = "0x4002BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly Dictionary<string, ChatChannel> PublicChannels;

		[Token(Token = "0x4002BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly Dictionary<string, ChatChannel> PrivateChannels;

		[Token(Token = "0x4002BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly HashSet<string> PublicChannelsUnsubscribing;

		[Token(Token = "0x4002BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly IChatClientListener listener;

		[Token(Token = "0x4002BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChatPeer chatPeer;

		[Token(Token = "0x4002BB7")]
		private const string ChatAppName = "chat";

		[Token(Token = "0x4002BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool didAuthenticate;

		[Token(Token = "0x4002BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int? statusToSetWhenConnected;

		[Token(Token = "0x4002BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private object messageToSetWhenConnected;

		[Token(Token = "0x4002BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int msDeltaForServiceCalls;

		[Token(Token = "0x4002BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int msTimestampOfLastServiceCall;

		[Token(Token = "0x4002BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private StatusCode lastStatusCode;

		[Token(Token = "0x17000392")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xDD2CD8", Offset = "0xDD2CD8", VA = "0xDD2CD8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xDD2CE0", Offset = "0xDD2CE0", VA = "0xDD2CE0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public string FrontendAddress
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0xDD2CE8", Offset = "0xDD2CE8", VA = "0xDD2CE8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0xDD2CF0", Offset = "0xDD2CF0", VA = "0xDD2CF0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public string ChatRegion
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xDD2CF8", Offset = "0xDD2CF8", VA = "0xDD2CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xDD2D00", Offset = "0xDD2D00", VA = "0xDD2D00")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public ChatState State
		{
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xDD2D08", Offset = "0xDD2D08", VA = "0xDD2D08")]
			[CompilerGenerated]
			get
			{
				return default(ChatState);
			}
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xDD2D10", Offset = "0xDD2D10", VA = "0xDD2D10")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public ChatDisconnectCause DisconnectedCause
		{
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0xDD2D18", Offset = "0xDD2D18", VA = "0xDD2D18")]
			[CompilerGenerated]
			get
			{
				return default(ChatDisconnectCause);
			}
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0xDD2D20", Offset = "0xDD2D20", VA = "0xDD2D20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public bool CanChat
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xDD2D28", Offset = "0xDD2D28", VA = "0xDD2D28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000398")]
		private bool HasPeer
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xDD2D4C", Offset = "0xDD2D4C", VA = "0xDD2D4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000399")]
		public string AppVersion
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xDD2E08", Offset = "0xDD2E08", VA = "0xDD2E08")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xDD2E10", Offset = "0xDD2E10", VA = "0xDD2E10")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public string AppId
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xDD2E18", Offset = "0xDD2E18", VA = "0xDD2E18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0xDD2E20", Offset = "0xDD2E20", VA = "0xDD2E20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xDD2E28", Offset = "0xDD2E28", VA = "0xDD2E28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xDD2E30", Offset = "0xDD2E30", VA = "0xDD2E30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public string UserId
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xDD2E38", Offset = "0xDD2E38", VA = "0xDD2E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xDD2E50", Offset = "0xDD2E50", VA = "0xDD2E50")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public bool UseBackgroundWorkerForSending
		{
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0xDD2ED8", Offset = "0xDD2ED8", VA = "0xDD2ED8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0xDD2EE0", Offset = "0xDD2EE0", VA = "0xDD2EE0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0xDD2EEC", Offset = "0xDD2EEC", VA = "0xDD2EEC")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xDD2F08", Offset = "0xDD2F08", VA = "0xDD2F08")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xDD30A8", Offset = "0xDD30A8", VA = "0xDD30A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		public DebugLevel DebugOut
		{
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xDD3CD0", Offset = "0xDD3CD0", VA = "0xDD3CD0")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0xDD508C", Offset = "0xDD508C", VA = "0xDD508C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xDD2D5C", Offset = "0xDD2D5C", VA = "0xDD2D5C")]
		public bool CanChatInChannel(string channelName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xDD30C4", Offset = "0xDD30C4", VA = "0xDD30C4")]
		public ChatClient(IChatClientListener listener, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xDD329C", Offset = "0xDD329C", VA = "0xDD329C")]
		public bool Connect(string appId, string appVersion, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xDD356C", Offset = "0xDD356C", VA = "0xDD356C")]
		public bool ConnectAndSetStatus(string appId, string appVersion, AuthenticationValues authValues, int status = 2, [Optional] object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xDD3610", Offset = "0xDD3610", VA = "0xDD3610")]
		public void Service()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xDD3688", Offset = "0xDD3688", VA = "0xDD3688")]
		private bool SendOutgoingInBackground()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xDD36BC", Offset = "0xDD36BC", VA = "0xDD36BC")]
		[Obsolete("Better use UseBackgroundWorkerForSending and Service().")]
		public void SendAcksOnly()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xDD36D8", Offset = "0xDD36D8", VA = "0xDD36D8")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xDD371C", Offset = "0xDD371C", VA = "0xDD371C")]
		public void StopThread()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xDD3734", Offset = "0xDD3734", VA = "0xDD3734")]
		public bool Subscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xDD38E8", Offset = "0xDD38E8", VA = "0xDD38E8")]
		public bool Subscribe(string[] channels, int[] lastMsgIds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xDD373C", Offset = "0xDD373C", VA = "0xDD373C")]
		public bool Subscribe(string[] channels, int messagesFromHistory)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xDD3E3C", Offset = "0xDD3E3C", VA = "0xDD3E3C")]
		public bool Unsubscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xDD4038", Offset = "0xDD4038", VA = "0xDD4038")]
		public bool PublishMessage(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xDD4304", Offset = "0xDD4304", VA = "0xDD4304")]
		internal bool PublishMessageUnreliable(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xDD4044", Offset = "0xDD4044", VA = "0xDD4044")]
		private bool publishMessage(string channelName, object message, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xDD4310", Offset = "0xDD4310", VA = "0xDD4310")]
		public bool SendPrivateMessage(string target, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xDD4320", Offset = "0xDD4320", VA = "0xDD4320")]
		public bool SendPrivateMessage(string target, object message, bool encrypt, bool forwardAsWebhook)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xDD45FC", Offset = "0xDD45FC", VA = "0xDD45FC")]
		internal bool SendPrivateMessageUnreliable(string target, object message, bool encrypt, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xDD4330", Offset = "0xDD4330", VA = "0xDD4330")]
		private bool sendPrivateMessage(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xDD460C", Offset = "0xDD460C", VA = "0xDD460C")]
		private bool SetOnlineStatus(int status, object message, bool skipMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xDD4874", Offset = "0xDD4874", VA = "0xDD4874")]
		public bool SetOnlineStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xDD4880", Offset = "0xDD4880", VA = "0xDD4880")]
		public bool SetOnlineStatus(int status, object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xDD4888", Offset = "0xDD4888", VA = "0xDD4888")]
		public bool AddFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xDD4BA0", Offset = "0xDD4BA0", VA = "0xDD4BA0")]
		public bool RemoveFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xDD4EB8", Offset = "0xDD4EB8", VA = "0xDD4EB8")]
		public string GetPrivateChannelNameByUser(string userName)
		{
			return null;
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xDD4F1C", Offset = "0xDD4F1C", VA = "0xDD4F1C")]
		public bool TryGetChannel(string channelName, bool isPrivate, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xDD4F94", Offset = "0xDD4F94", VA = "0xDD4F94")]
		public bool TryGetChannel(string channelName, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xDD502C", Offset = "0xDD502C", VA = "0xDD502C")]
		public bool TryGetPrivateChannelByUser(string userId, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xDD50A8", Offset = "0xDD50A8", VA = "0xDD50A8", Slot = "4")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xDD5160", Offset = "0xDD5160", VA = "0xDD5160", Slot = "7")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xDD6888", Offset = "0xDD6888", VA = "0xDD6888", Slot = "5")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xDD721C", Offset = "0xDD721C", VA = "0xDD721C", Slot = "6")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xDD3CEC", Offset = "0xDD3CEC", VA = "0xDD3CEC")]
		private bool SendChannelOperation(string[] channels, byte operation, int historyLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xDD5504", Offset = "0xDD5504", VA = "0xDD5504")]
		private void HandlePrivateMessageEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xDD51D0", Offset = "0xDD51D0", VA = "0xDD51D0")]
		private void HandleChatMessagesEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xDD598C", Offset = "0xDD598C", VA = "0xDD598C")]
		private void HandleSubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xDD5EC8", Offset = "0xDD5EC8", VA = "0xDD5EC8")]
		private void HandleUnsubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xDD6A9C", Offset = "0xDD6A9C", VA = "0xDD6A9C")]
		private void HandleAuthResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xDD57C4", Offset = "0xDD57C4", VA = "0xDD57C4")]
		private void HandleStatusUpdate(EventData eventData)
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xDD7C7C", Offset = "0xDD7C7C", VA = "0xDD7C7C")]
		private void ConnectToFrontEnd()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xDD7A5C", Offset = "0xDD7A5C", VA = "0xDD7A5C")]
		private bool AuthenticateOnFrontEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xDD64F4", Offset = "0xDD64F4", VA = "0xDD64F4")]
		private void HandleUserUnsubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xDD605C", Offset = "0xDD605C", VA = "0xDD605C")]
		private void HandleUserSubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xDD7D98", Offset = "0xDD7D98", VA = "0xDD7D98")]
		public bool Subscribe(string channel, int lastMsgId = 0, int messagesFromHistory = -1, [Optional] ChannelCreationOptions creationOptions)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004BB")]
	public enum ChatDisconnectCause
	{
		[Token(Token = "0x4002BC0")]
		None,
		[Token(Token = "0x4002BC1")]
		DisconnectByServerUserLimit,
		[Token(Token = "0x4002BC2")]
		ExceptionOnConnect,
		[Token(Token = "0x4002BC3")]
		DisconnectByServer,
		[Token(Token = "0x4002BC4")]
		TimeoutDisconnect,
		[Token(Token = "0x4002BC5")]
		Exception,
		[Token(Token = "0x4002BC6")]
		InvalidAuthentication,
		[Token(Token = "0x4002BC7")]
		MaxCcuReached,
		[Token(Token = "0x4002BC8")]
		InvalidRegion,
		[Token(Token = "0x4002BC9")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x4002BCA")]
		CustomAuthenticationFailed
	}
	[Token(Token = "0x20004BC")]
	public class ChatEventCode
	{
		[Token(Token = "0x4002BCB")]
		public const byte ChatMessages = 0;

		[Token(Token = "0x4002BCC")]
		public const byte Users = 1;

		[Token(Token = "0x4002BCD")]
		public const byte PrivateMessage = 2;

		[Token(Token = "0x4002BCE")]
		public const byte FriendsList = 3;

		[Token(Token = "0x4002BCF")]
		public const byte StatusUpdate = 4;

		[Token(Token = "0x4002BD0")]
		public const byte Subscribe = 5;

		[Token(Token = "0x4002BD1")]
		public const byte Unsubscribe = 6;

		[Token(Token = "0x4002BD2")]
		public const byte UserSubscribed = 8;

		[Token(Token = "0x4002BD3")]
		public const byte UserUnsubscribed = 9;

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xDD84A8", Offset = "0xDD84A8", VA = "0xDD84A8")]
		public ChatEventCode()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class ChatOperationCode
	{
		[Token(Token = "0x4002BD4")]
		public const byte Authenticate = 230;

		[Token(Token = "0x4002BD5")]
		public const byte Subscribe = 0;

		[Token(Token = "0x4002BD6")]
		public const byte Unsubscribe = 1;

		[Token(Token = "0x4002BD7")]
		public const byte Publish = 2;

		[Token(Token = "0x4002BD8")]
		public const byte SendPrivate = 3;

		[Token(Token = "0x4002BD9")]
		public const byte ChannelHistory = 4;

		[Token(Token = "0x4002BDA")]
		public const byte UpdateStatus = 5;

		[Token(Token = "0x4002BDB")]
		public const byte AddFriends = 6;

		[Token(Token = "0x4002BDC")]
		public const byte RemoveFriends = 7;

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xDD84B0", Offset = "0xDD84B0", VA = "0xDD84B0")]
		public ChatOperationCode()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class ChatParameterCode
	{
		[Token(Token = "0x4002BDD")]
		public const byte Channels = 0;

		[Token(Token = "0x4002BDE")]
		public const byte Channel = 1;

		[Token(Token = "0x4002BDF")]
		public const byte Messages = 2;

		[Token(Token = "0x4002BE0")]
		public const byte Message = 3;

		[Token(Token = "0x4002BE1")]
		public const byte Senders = 4;

		[Token(Token = "0x4002BE2")]
		public const byte Sender = 5;

		[Token(Token = "0x4002BE3")]
		public const byte ChannelUserCount = 6;

		[Token(Token = "0x4002BE4")]
		public const byte UserId = 225;

		[Token(Token = "0x4002BE5")]
		public const byte MsgId = 8;

		[Token(Token = "0x4002BE6")]
		public const byte MsgIds = 9;

		[Token(Token = "0x4002BE7")]
		public const byte Secret = 221;

		[Token(Token = "0x4002BE8")]
		public const byte SubscribeResults = 15;

		[Token(Token = "0x4002BE9")]
		public const byte Status = 10;

		[Token(Token = "0x4002BEA")]
		public const byte Friends = 11;

		[Token(Token = "0x4002BEB")]
		public const byte SkipMessage = 12;

		[Token(Token = "0x4002BEC")]
		public const byte HistoryLength = 14;

		[Token(Token = "0x4002BED")]
		public const byte WebFlags = 21;

		[Token(Token = "0x4002BEE")]
		public const byte Properties = 22;

		[Token(Token = "0x4002BEF")]
		public const byte ChannelSubscribers = 23;

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xDD84B8", Offset = "0xDD84B8", VA = "0xDD84B8")]
		public ChatParameterCode()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class ChatPeer : PhotonPeer
	{
		[Token(Token = "0x4002BF0")]
		public const string NameServerHost = "ns.exitgames.com";

		[Token(Token = "0x4002BF1")]
		public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x170003A1")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xDD344C", Offset = "0xDD344C", VA = "0xDD344C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A2")]
		internal virtual bool IsProtocolSecure
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xDD865C", Offset = "0xDD865C", VA = "0xDD865C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xDD3224", Offset = "0xDD3224", VA = "0xDD3224")]
		public ChatPeer(IPhotonPeerListener listener, ConnectionProtocol protocol)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xDD867C", Offset = "0xDD867C", VA = "0xDD867C")]
		[Conditional("SUPPORTED_UNITY")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xDD84C0", Offset = "0xDD84C0", VA = "0xDD84C0")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xDD3450", Offset = "0xDD3450", VA = "0xDD3450")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xDD77BC", Offset = "0xDD77BC", VA = "0xDD77BC")]
		public bool AuthenticateOnNameServer(string appId, string appVersion, string region, AuthenticationValues authValues)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004C0")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x4002BF4")]
		Custom = 0,
		[Token(Token = "0x4002BF5")]
		Steam = 1,
		[Token(Token = "0x4002BF6")]
		Facebook = 2,
		[Token(Token = "0x4002BF7")]
		Oculus = 3,
		[Token(Token = "0x4002BF8")]
		PlayStation = 4,
		[Token(Token = "0x4002BF9")]
		Xbox = 5,
		[Token(Token = "0x4002BFA")]
		Viveport = 10,
		[Token(Token = "0x4002BFB")]
		None = byte.MaxValue
	}
	[Token(Token = "0x20004C1")]
	public class AuthenticationValues
	{
		[Token(Token = "0x4002BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x170003A3")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xDD893C", Offset = "0xDD893C", VA = "0xDD893C")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xDD8944", Offset = "0xDD8944", VA = "0xDD8944")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public string AuthGetParameters
		{
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0xDD894C", Offset = "0xDD894C", VA = "0xDD894C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0xDD8954", Offset = "0xDD8954", VA = "0xDD8954")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public object AuthPostData
		{
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0xDD895C", Offset = "0xDD895C", VA = "0xDD895C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0xDD8964", Offset = "0xDD8964", VA = "0xDD8964")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public string Token
		{
			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0xDD896C", Offset = "0xDD896C", VA = "0xDD896C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0xDD8974", Offset = "0xDD8974", VA = "0xDD8974")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public string UserId
		{
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0xDD897C", Offset = "0xDD897C", VA = "0xDD897C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0xDD8984", Offset = "0xDD8984", VA = "0xDD8984")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xDD2EC8", Offset = "0xDD2EC8", VA = "0xDD2EC8")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xDD898C", Offset = "0xDD898C", VA = "0xDD898C")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xDD89BC", Offset = "0xDD89BC", VA = "0xDD89BC", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xDD89F8", Offset = "0xDD89F8", VA = "0xDD89F8", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xDD8A00", Offset = "0xDD8A00", VA = "0xDD8A00", Slot = "6")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xDD8BD4", Offset = "0xDD8BD4", VA = "0xDD8BD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004C2")]
	public class ParameterCode
	{
		[Token(Token = "0x4002C01")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x4002C02")]
		public const byte Secret = 221;

		[Token(Token = "0x4002C03")]
		public const byte AppVersion = 220;

		[Token(Token = "0x4002C04")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x4002C05")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x4002C06")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x4002C07")]
		public const byte Region = 210;

		[Token(Token = "0x4002C08")]
		public const byte Address = 230;

		[Token(Token = "0x4002C09")]
		public const byte UserId = 225;

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xDD8C6C", Offset = "0xDD8C6C", VA = "0xDD8C6C")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class ErrorCode
	{
		[Token(Token = "0x4002C0A")]
		public const int Ok = 0;

		[Token(Token = "0x4002C0B")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x4002C0C")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x4002C0D")]
		public const int InternalServerError = -1;

		[Token(Token = "0x4002C0E")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x4002C0F")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x4002C10")]
		public const int GameFull = 32765;

		[Token(Token = "0x4002C11")]
		public const int GameClosed = 32764;

		[Token(Token = "0x4002C12")]
		public const int ServerFull = 32762;

		[Token(Token = "0x4002C13")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x4002C14")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x4002C15")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x4002C16")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x4002C17")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x4002C18")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xDD8C74", Offset = "0xDD8C74", VA = "0xDD8C74")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public enum ChatState
	{
		[Token(Token = "0x4002C1A")]
		Uninitialized,
		[Token(Token = "0x4002C1B")]
		ConnectingToNameServer,
		[Token(Token = "0x4002C1C")]
		ConnectedToNameServer,
		[Token(Token = "0x4002C1D")]
		Authenticating,
		[Token(Token = "0x4002C1E")]
		Authenticated,
		[Token(Token = "0x4002C1F")]
		DisconnectingFromNameServer,
		[Token(Token = "0x4002C20")]
		ConnectingToFrontEnd,
		[Token(Token = "0x4002C21")]
		ConnectedToFrontEnd,
		[Token(Token = "0x4002C22")]
		DisconnectingFromFrontEnd,
		[Token(Token = "0x4002C23")]
		QueuedComingFromFrontEnd,
		[Token(Token = "0x4002C24")]
		Disconnecting,
		[Token(Token = "0x4002C25")]
		Disconnected
	}
	[Token(Token = "0x20004C5")]
	public static class ChatUserStatus
	{
		[Token(Token = "0x4002C26")]
		public const int Offline = 0;

		[Token(Token = "0x4002C27")]
		public const int Invisible = 1;

		[Token(Token = "0x4002C28")]
		public const int Online = 2;

		[Token(Token = "0x4002C29")]
		public const int Away = 3;

		[Token(Token = "0x4002C2A")]
		public const int DND = 4;

		[Token(Token = "0x4002C2B")]
		public const int LFG = 5;

		[Token(Token = "0x4002C2C")]
		public const int Playing = 6;
	}
	[Token(Token = "0x20004C6")]
	public interface IChatClientListener
	{
		[Token(Token = "0x6001DEE")]
		void DebugReturn(DebugLevel level, string message);

		[Token(Token = "0x6001DEF")]
		void OnDisconnected();

		[Token(Token = "0x6001DF0")]
		void OnConnected();

		[Token(Token = "0x6001DF1")]
		void OnChatStateChange(ChatState state);

		[Token(Token = "0x6001DF2")]
		void OnGetMessages(string channelName, string[] senders, object[] messages);

		[Token(Token = "0x6001DF3")]
		void OnPrivateMessage(string sender, object message, string channelName);

		[Token(Token = "0x6001DF4")]
		void OnSubscribed(string[] channels, bool[] results);

		[Token(Token = "0x6001DF5")]
		void OnUnsubscribed(string[] channels);

		[Token(Token = "0x6001DF6")]
		void OnStatusUpdate(string user, int status, bool gotMessage, object message);

		[Token(Token = "0x6001DF7")]
		void OnUserSubscribed(string channel, string user);

		[Token(Token = "0x6001DF8")]
		void OnUserUnsubscribed(string channel, string user);
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x20004C7")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xDD8C7C", Offset = "0xDD8C7C", VA = "0xDD8C7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xDD8D84", Offset = "0xDD8D84", VA = "0xDD8D84")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xDD8D8C", Offset = "0xDD8D8C", VA = "0xDD8D8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xDD8DF8", Offset = "0xDD8DF8", VA = "0xDD8DF8")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4002C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Selectable Selectable;

		[Token(Token = "0x4002C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color NormalColor;

		[Token(Token = "0x4002C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color HoverColor;

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xDD8E00", Offset = "0xDD8E00", VA = "0xDD8E00")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xDD8E50", Offset = "0xDD8E50", VA = "0xDD8E50")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xDD8E80", Offset = "0xDD8E80", VA = "0xDD8E80")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xDD8EB0", Offset = "0xDD8EB0", VA = "0xDD8EB0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xDD8F60", Offset = "0xDD8F60", VA = "0xDD8F60", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xDD9010", Offset = "0xDD9010", VA = "0xDD9010")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle toggle;

		[Token(Token = "0x4002C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text _text;

		[Token(Token = "0x4002C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color NormalOnColor;

		[Token(Token = "0x4002C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color NormalOffColor;

		[Token(Token = "0x4002C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color HoverOnColor;

		[Token(Token = "0x4002C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color HoverOffColor;

		[Token(Token = "0x4002C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isHover;

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xDD9028", Offset = "0xDD9028", VA = "0xDD9028")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xDD916C", Offset = "0xDD916C", VA = "0xDD916C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xDD9108", Offset = "0xDD9108", VA = "0xDD9108")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xDD9214", Offset = "0xDD9214", VA = "0xDD9214", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xDD9288", Offset = "0xDD9288", VA = "0xDD9288", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xDD92F8", Offset = "0xDD92F8", VA = "0xDD92F8")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace Photon.Realtime
{
	[Token(Token = "0x20004CB")]
	public abstract class PhotonPing : IDisposable
	{
		[Token(Token = "0x4002C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string DebugString;

		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Successful;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected internal bool GotResult;

		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected internal int PingLength;

		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected internal byte[] PingBytes;

		[Token(Token = "0x4002C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected internal byte PingId;

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xDD9314", Offset = "0xDD9314", VA = "0xDD9314", Slot = "5")]
		public virtual bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xDD9354", Offset = "0xDD9354", VA = "0xDD9354", Slot = "6")]
		public virtual bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xDD9394", Offset = "0xDD9394", VA = "0xDD9394", Slot = "7")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xDD93D4", Offset = "0xDD93D4", VA = "0xDD93D4")]
		protected internal void Init()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xDD9414", Offset = "0xDD9414", VA = "0xDD9414")]
		protected PhotonPing()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class PingMono : PhotonPing
	{
		[Token(Token = "0x4002C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Socket sock;

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xDD94BC", Offset = "0xDD94BC", VA = "0xDD94BC", Slot = "5")]
		public override bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xDD9734", Offset = "0xDD9734", VA = "0xDD9734", Slot = "6")]
		public override bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xDD985C", Offset = "0xDD985C", VA = "0xDD985C", Slot = "7")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xDD98FC", Offset = "0xDD98FC", VA = "0xDD98FC")]
		public PingMono()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x20004CD")]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(PhotonView))]
	[RequireComponent(typeof(Animator))]
	public abstract class BaseController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x4002C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x4002C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x4002C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x4002C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Touch myTouch;

		[Token(Token = "0x4002C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float x;

		[Token(Token = "0x4002C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float y;

		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 touchOrigin;

		[Token(Token = "0x4002C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xDD9900", Offset = "0xDD9900", VA = "0xDD9900", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xDD9AF8", Offset = "0xDD9AF8", VA = "0xDD9AF8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xDD9C1C", Offset = "0xDD9C1C", VA = "0xDD9C1C", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xDD9CC4", Offset = "0xDD9CC4", VA = "0xDD9CC4", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xDD9D58", Offset = "0xDD9D58", VA = "0xDD9D58", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xDD9DD4", Offset = "0xDD9DD4", VA = "0xDD9DD4", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xDD9E6C", Offset = "0xDD9E6C", VA = "0xDD9E6C", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xDD9EE4", Offset = "0xDD9EE4", VA = "0xDD9EE4", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xDD9FE0", Offset = "0xDD9FE0", VA = "0xDD9FE0", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xDDA070", Offset = "0xDDA070", VA = "0xDDA070", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001E1C")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xDDA100", Offset = "0xDDA100", VA = "0xDDA100")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	[RequireComponent(typeof(Toggle))]
	[DisallowMultipleComponent]
	public class BetterToggle : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004CF")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000015")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xDDA164", Offset = "0xDDA164", VA = "0xDDA164")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xDDA21C", Offset = "0xDDA21C", VA = "0xDDA21C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xDDA2D4", Offset = "0xDDA2D4", VA = "0xDDA2D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xDDA39C", Offset = "0xDDA39C", VA = "0xDDA39C")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xDDA408", Offset = "0xDDA408", VA = "0xDDA408")]
		public BetterToggle()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class ChangePOV : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004D1")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x4002C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x4002C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x4002C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x4002C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x4002C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x4002C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x4002C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x4002C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x4002C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x4002C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000016")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xDD9A40", Offset = "0xDD9A40", VA = "0xDD9A40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E29")]
			[Address(RVA = "0xDD9B64", Offset = "0xDD9B64", VA = "0xDD9B64")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xDDA580", Offset = "0xDDA580", VA = "0xDDA580")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xDDA784", Offset = "0xDDA784", VA = "0xDDA784")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xDDA8B4", Offset = "0xDDA8B4", VA = "0xDDA8B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xDDAAC4", Offset = "0xDDAAC4", VA = "0xDDAAC4")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xDDAB9C", Offset = "0xDDAB9C", VA = "0xDDAB9C")]
		private void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xDDAC64", Offset = "0xDDAC64", VA = "0xDDAC64")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xDDADE8", Offset = "0xDDADE8", VA = "0xDDADE8")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xDDADF0", Offset = "0xDDADF0", VA = "0xDDADF0")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xDDAC6C", Offset = "0xDDAC6C", VA = "0xDDAC6C")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xDDADF8", Offset = "0xDDADF8", VA = "0xDDADF8")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xDDAE9C", Offset = "0xDDAE9C", VA = "0xDDAE9C")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class CharacterInstantiation : OnJoinedInstantiate
	{
		[Token(Token = "0x20004D3")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x14000017")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xDDA6CC", Offset = "0xDDA6CC", VA = "0xDDA6CC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xDDA7FC", Offset = "0xDDA7FC", VA = "0xDDA7FC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xDDAEE4", Offset = "0xDDAEE4", VA = "0xDDAEE4")]
		public new void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xDDB210", Offset = "0xDDB210", VA = "0xDDB210")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x4002C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x4002C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float oldYRotation;

		[Token(Token = "0x4002C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion velRotation;

		[Token(Token = "0x170003A8")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xDDB258", Offset = "0xDDB258", VA = "0xDDB258")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xDDB274", Offset = "0xDDB274", VA = "0xDDB274", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xDDB2B8", Offset = "0xDDB2B8", VA = "0xDDB2B8", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xDDB340", Offset = "0xDDB340", VA = "0xDDB340")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xDDB344", Offset = "0xDDB344", VA = "0xDDB344")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xDDB46C", Offset = "0xDDB46C", VA = "0xDDB46C")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	[RequireComponent(typeof(Canvas))]
	public class Highlighter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x4002C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotonVoiceRecorder recorder;

		[Token(Token = "0x4002C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PhotonVoiceSpeaker speaker;

		[Token(Token = "0x4002C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4002C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4002C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4002C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool showSpeakerLag;

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xDDB4D0", Offset = "0xDDB4D0", VA = "0xDDB4D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xDDB710", Offset = "0xDDB710", VA = "0xDDB710")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xDDB88C", Offset = "0xDDB88C", VA = "0xDDB88C")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xDDB898", Offset = "0xDDB898", VA = "0xDDB898")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xDDB8B4", Offset = "0xDDB8B4", VA = "0xDDB8B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xDDB9B4", Offset = "0xDDB9B4", VA = "0xDDB9B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xDDBBE4", Offset = "0xDDBBE4", VA = "0xDDBBE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xDDBCFC", Offset = "0xDDBCFC", VA = "0xDDBCFC")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x4002C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float smoothing;

		[Token(Token = "0x4002C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 offset;

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xDDBD04", Offset = "0xDDBD04", VA = "0xDDBD04", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xDDBD24", Offset = "0xDDBD24", VA = "0xDDBD24", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xDDBD94", Offset = "0xDDBD94", VA = "0xDDBD94", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xDDBF28", Offset = "0xDDBF28", VA = "0xDDBF28")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xDDBFFC", Offset = "0xDDBFFC", VA = "0xDDBFFC")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	[RequireComponent(typeof(Button))]
	[DisallowMultipleComponent]
	[SelectionBase]
	public class PushToTalkPrivateButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button pushToTalkPrivateButton;

		[Token(Token = "0x4002C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text buttonText;

		[Token(Token = "0x4002C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PushToTalkScript pttScript;

		[Token(Token = "0x4002C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int TargetActorNr;

		[Token(Token = "0x4002C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public byte AudioGroup;

		[Token(Token = "0x4002C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool Subscribed;

		[Token(Token = "0x4002C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private KeyCode keyCode;

		[Token(Token = "0x4002C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private KeyCode keyCode2;

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xDDC018", Offset = "0xDDC018", VA = "0xDDC018")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xDDC14C", Offset = "0xDDC14C", VA = "0xDDC14C")]
		private void OnVoiceClientStateChanged(ExitGames.Client.Photon.LoadBalancing.ClientState state)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xDDC2F0", Offset = "0xDDC2F0", VA = "0xDDC2F0")]
		public void SetAudioGroup(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xDDC610", Offset = "0xDDC610", VA = "0xDDC610")]
		public void PushToTalkOn()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xDDCAB4", Offset = "0xDDCAB4", VA = "0xDDCAB4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xDDCB1C", Offset = "0xDDCB1C", VA = "0xDDCB1C")]
		public void PushToTalkOff()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xDDC220", Offset = "0xDDC220", VA = "0xDDC220")]
		public bool Subscribe()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xDDCC04", Offset = "0xDDCC04", VA = "0xDDCC04")]
		public PushToTalkPrivateButton()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class PushToTalkScript : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button pushToTalkButton;

		[Token(Token = "0x4002C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text pushToTalkText;

		[Token(Token = "0x4002C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceRecorder rec;

		[Token(Token = "0x4002C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform parent;

		[Token(Token = "0x4002C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject buttonPrefab;

		[Token(Token = "0x4002C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, PushToTalkPrivateButton> buttons;

		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool MuteOthersWhileTalking;

		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int CurrentTargetGroup;

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xDDCC0C", Offset = "0xDDCC0C", VA = "0xDDCC0C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xDDCC84", Offset = "0xDDCC84", VA = "0xDDCC84")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xDDCCFC", Offset = "0xDDCCFC", VA = "0xDDCCFC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xDDCF78", Offset = "0xDDCF78", VA = "0xDDCF78")]
		public void OnToggleValueChanged(bool v)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xDDD3B0", Offset = "0xDDD3B0", VA = "0xDDD3B0")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xDDD464", Offset = "0xDDD464", VA = "0xDDD464")]
		private void OnVoiceClientStateChanged(ExitGames.Client.Photon.LoadBalancing.ClientState state)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xDDC874", Offset = "0xDDC874", VA = "0xDDC874")]
		public void PushToTalkOn(int group)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xDDCBD4", Offset = "0xDDCBD4", VA = "0xDDCBD4")]
		public void PushToTalkOff(int group)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xDDD8B0", Offset = "0xDDD8B0", VA = "0xDDD8B0")]
		public void PushToTalkOff()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xDDD960", Offset = "0xDDD960", VA = "0xDDD960")]
		public void PushToTalkOn()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xDDD810", Offset = "0xDDD810", VA = "0xDDD810")]
		public void PushToTalk(bool toggle)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xDDD968", Offset = "0xDDD968", VA = "0xDDD968")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xDDD9EC", Offset = "0xDDD9EC", VA = "0xDDD9EC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xDDD5A0", Offset = "0xDDD5A0", VA = "0xDDD5A0")]
		public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xDDDA70", Offset = "0xDDDA70", VA = "0xDDDA70")]
		public void OnPhotonPlayerDisconnected(PhotonPlayer leavingPlayer)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xDDD244", Offset = "0xDDD244", VA = "0xDDD244")]
		private void SubscribeToAllPrivateGroups()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xDDD04C", Offset = "0xDDD04C", VA = "0xDDD04C")]
		private void KeepOnlyOneGroup(byte group)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xDDDCFC", Offset = "0xDDDCFC", VA = "0xDDDCFC")]
		public PushToTalkScript()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x4002C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xDDBDAC", Offset = "0xDDBDAC", VA = "0xDDBDAC", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xDDC00C", Offset = "0xDDC00C", VA = "0xDDC00C")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class VoiceDemoUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004DB")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x4002C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x4002C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4002C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas canvas;

		[Token(Token = "0x4002C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4002C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text punSwitchText;

		[Token(Token = "0x4002C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4002C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Text voiceSwitchText;

		[Token(Token = "0x4002C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x4002C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Text calibrateText;

		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PhotonVoiceRecorder rec;

		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x4002C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject debugGO;

		[Token(Token = "0x4002C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool debugMode;

		[Token(Token = "0x4002C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float volumeBeforeMute;

		[Token(Token = "0x4002C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4002C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x170003A9")]
		public bool DebugMode
		{
			[Token(Token = "0x6001E70")]
			[Address(RVA = "0xDDDD0C", Offset = "0xDDDD0C", VA = "0xDDDD0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E71")]
			[Address(RVA = "0xDDDD14", Offset = "0xDDDD14", VA = "0xDDDD14")]
			set
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xDDB658", Offset = "0xDDB658", VA = "0xDDB658")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xDDB7D4", Offset = "0xDDB7D4", VA = "0xDDB7D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xDDDE50", Offset = "0xDDDE50", VA = "0xDDDE50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xDDDF60", Offset = "0xDDDF60", VA = "0xDDDF60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xDDE070", Offset = "0xDDE070", VA = "0xDDE070")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xDDE4AC", Offset = "0xDDE4AC", VA = "0xDDE4AC")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xDDE514", Offset = "0xDDE514", VA = "0xDDE514")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xDDE954", Offset = "0xDDE954", VA = "0xDDE954")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xDDE970", Offset = "0xDDE970", VA = "0xDDE970")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xDDEF28", Offset = "0xDDEF28", VA = "0xDDEF28")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xDDF094", Offset = "0xDDF094", VA = "0xDDF094")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xDDF164", Offset = "0xDDF164", VA = "0xDDF164")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xDDF1FC", Offset = "0xDDF1FC", VA = "0xDDF1FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xDDF9E0", Offset = "0xDDF9E0", VA = "0xDDF9E0")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace ExitGames.UtilityScripts
{
	[Token(Token = "0x20004DC")]
	public class PlayerRoomIndexing : PunBehaviour
	{
		[Token(Token = "0x20004DD")]
		public delegate void RoomIndexingChanged();

		[Token(Token = "0x4002C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerRoomIndexing instance;

		[Token(Token = "0x4002C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomIndexingChanged OnRoomIndexingChanged;

		[Token(Token = "0x4002C8C")]
		public const string RoomPlayerIndexedProp = "PlayerIndexes";

		[Token(Token = "0x4002C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _playerIds;

		[Token(Token = "0x4002C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object _indexes;

		[Token(Token = "0x4002C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> _indexesLUT;

		[Token(Token = "0x4002C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<bool> _indexesPool;

		[Token(Token = "0x4002C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PhotonPlayer _p;

		[Token(Token = "0x170003AA")]
		public int[] PlayerIds
		{
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0xDDFA9C", Offset = "0xDDFA9C", VA = "0xDDFA9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xDDFAA4", Offset = "0xDDFAA4", VA = "0xDDFAA4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xDDFE18", Offset = "0xDDFE18", VA = "0xDDFE18", Slot = "46")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xDE0614", Offset = "0xDE0614", VA = "0xDE0614", Slot = "34")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xDE0618", Offset = "0xDE0618", VA = "0xDE0618", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xDE0698", Offset = "0xDE0698", VA = "0xDE0698", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xDE08FC", Offset = "0xDE08FC", VA = "0xDE08FC", Slot = "52")]
		public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xDE0980", Offset = "0xDE0980", VA = "0xDE0980", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xDE09F0", Offset = "0xDE09F0", VA = "0xDE09F0")]
		public int GetRoomIndex(PhotonPlayer player)
		{
			return default(int);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xDDFBC8", Offset = "0xDDFBC8", VA = "0xDDFBC8")]
		private void SanitizeIndexing(bool forceIndexing = false)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xDE02F8", Offset = "0xDE02F8", VA = "0xDE02F8")]
		private void RefreshData()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xDDFEA4", Offset = "0xDDFEA4", VA = "0xDDFEA4")]
		private void AssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xDE0718", Offset = "0xDE0718", VA = "0xDE0718")]
		private void UnAssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xDE0A88", Offset = "0xDE0A88", VA = "0xDE0A88")]
		public PlayerRoomIndexing()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public static class PlayerRoomIndexingExtensions
	{
		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xDE0B8C", Offset = "0xDE0B8C", VA = "0xDE0B8C")]
		public static int GetRoomIndex(this PhotonPlayer player)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004DF")]
	public class ButtonInsideScrollList : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4002C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect scrollRect;

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xDE0C88", Offset = "0xDE0C88", VA = "0xDE0C88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xDE0CD8", Offset = "0xDE0CD8", VA = "0xDE0CD8", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xDE0D78", Offset = "0xDE0D78", VA = "0xDE0D78", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xDE0E14", Offset = "0xDE0E14", VA = "0xDE0E14")]
		public ButtonInsideScrollList()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4002C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color NormalColor;

		[Token(Token = "0x4002C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color HoverColor;

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xDE0E1C", Offset = "0xDE0E1C", VA = "0xDE0E1C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xDE0E6C", Offset = "0xDE0E6C", VA = "0xDE0E6C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xDE0E9C", Offset = "0xDE0E9C", VA = "0xDE0E9C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xDE0ECC", Offset = "0xDE0ECC", VA = "0xDE0ECC")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4002C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4002C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4002C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4002C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4002C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4002C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xDE0EE4", Offset = "0xDE0EE4", VA = "0xDE0EE4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xDE0FB0", Offset = "0xDE0FB0", VA = "0xDE0FB0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xDE1058", Offset = "0xDE1058", VA = "0xDE1058")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xDE10F4", Offset = "0xDE10F4", VA = "0xDE10F4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xDE1168", Offset = "0xDE1168", VA = "0xDE1168", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xDE11D8", Offset = "0xDE11D8", VA = "0xDE11D8")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace ExitGames.Client.DemoParticle
{
	[Token(Token = "0x20004E2")]
	public class TimeKeeper
	{
		[Token(Token = "0x4002C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastExecutionTime;

		[Token(Token = "0x4002C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool shouldExecute;

		[Token(Token = "0x170003AB")]
		public int Interval
		{
			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0xDE11FC", Offset = "0xDE11FC", VA = "0xDE11FC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xDE1204", Offset = "0xDE1204", VA = "0xDE1204")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xDE120C", Offset = "0xDE120C", VA = "0xDE120C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xDE1214", Offset = "0xDE1214", VA = "0xDE1214")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public bool ShouldExecute
		{
			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0xDE1220", Offset = "0xDE1220", VA = "0xDE1220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xDE126C", Offset = "0xDE126C", VA = "0xDE126C")]
			set
			{
			}
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xDE1278", Offset = "0xDE1278", VA = "0xDE1278")]
		public TimeKeeper(int interval)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xDE12B8", Offset = "0xDE12B8", VA = "0xDE12B8")]
		public void Reset()
		{
		}
	}
}
namespace ExitGames.Client.GUI
{
	[Token(Token = "0x20004E3")]
	public enum GizmoType
	{
		[Token(Token = "0x4002CA2")]
		WireSphere,
		[Token(Token = "0x4002CA3")]
		Sphere,
		[Token(Token = "0x4002CA4")]
		WireCube,
		[Token(Token = "0x4002CA5")]
		Cube
	}
	[Token(Token = "0x20004E4")]
	public class GizmoTypeDrawer
	{
		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xDE12D8", Offset = "0xDE12D8", VA = "0xDE12D8")]
		public static void Draw(Vector3 center, GizmoType type, Color color, float size)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xDE145C", Offset = "0xDE145C", VA = "0xDE145C")]
		public GizmoTypeDrawer()
		{
		}
	}
}
namespace NSL.LanguageTexts
{
	[Token(Token = "0x20004E5")]
	public class BaseLanguageTextBind : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected LanguageText languageText;

		[Token(Token = "0x4002CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool forceAllUpercase;

		[Token(Token = "0x4002CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		protected bool updateOnLanguageChange;

		[Token(Token = "0x4002CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public UnityEvent afterTextSet;

		[Token(Token = "0x4002CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public System.Action bindExtensionEvent;

		[Token(Token = "0x4002CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public System.Action leftHandedEvent;

		[Token(Token = "0x170003AE")]
		public bool UpdateOnLanguageChange
		{
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xDE1464", Offset = "0xDE1464", VA = "0xDE1464")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xDE146C", Offset = "0xDE146C", VA = "0xDE146C")]
			set
			{
			}
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xDE18F4", Offset = "0xDE18F4", VA = "0xDE18F4", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xDE19E4", Offset = "0xDE19E4", VA = "0xDE19E4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xDE1AC8", Offset = "0xDE1AC8", VA = "0xDE1AC8", Slot = "6")]
		protected virtual void Setup()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xDE1ACC", Offset = "0xDE1ACC", VA = "0xDE1ACC", Slot = "7")]
		public virtual void SetText(LanguageText _l)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xDE1AD0", Offset = "0xDE1AD0", VA = "0xDE1AD0")]
		public void SetCurrentText()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xDE1AE0", Offset = "0xDE1AE0", VA = "0xDE1AE0")]
		public void SetLongestText()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xDE1E18", Offset = "0xDE1E18", VA = "0xDE1E18")]
		public BaseLanguageTextBind()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class LanguageFontBind : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text textGui;

		[Token(Token = "0x4002CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI tmpro;

		[Token(Token = "0x4002CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Font defaultFont;

		[Token(Token = "0x4002CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected TMP_FontAsset defaultFontTMPro;

		[Token(Token = "0x4002CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Material defaultFontMaterial;

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xDE1E20", Offset = "0xDE1E20", VA = "0xDE1E20", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xDE22EC", Offset = "0xDE22EC", VA = "0xDE22EC", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xDE2428", Offset = "0xDE2428", VA = "0xDE2428")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xDE1F60", Offset = "0xDE1F60", VA = "0xDE1F60")]
		protected void Setup()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xDE28CC", Offset = "0xDE28CC", VA = "0xDE28CC")]
		public LanguageFontBind()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class LanguageTextBind : BaseLanguageTextBind
	{
		[Token(Token = "0x4002CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text textGui;

		[Token(Token = "0x4002CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Font defaultFont;

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xDE28D4", Offset = "0xDE28D4", VA = "0xDE28D4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xDE295C", Offset = "0xDE295C", VA = "0xDE295C", Slot = "6")]
		protected override void Setup()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xDE2AD4", Offset = "0xDE2AD4", VA = "0xDE2AD4", Slot = "7")]
		public override void SetText(LanguageText _l)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xDE2C8C", Offset = "0xDE2C8C", VA = "0xDE2C8C")]
		public LanguageTextBind()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class LanguageTextDatabase : ScriptableObject
	{
		[Token(Token = "0x20004E9")]
		public delegate void Event();

		[Serializable]
		[Token(Token = "0x20004EA")]
		public class LanguagePack
		{
			[Token(Token = "0x4002CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string languageName;

			[Token(Token = "0x4002CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[SerializeField]
			private LanguageTextDatabase db;

			[Token(Token = "0x4002CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private List<string> serializedValues;

			[Token(Token = "0x4002CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, string> texts;

			[Token(Token = "0x170003B7")]
			public Dictionary<string, string> Texts
			{
				[Token(Token = "0x6001EED")]
				[Address(RVA = "0xDE3170", Offset = "0xDE3170", VA = "0xDE3170")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B8")]
			public IList<string> Values
			{
				[Token(Token = "0x6001EEE")]
				[Address(RVA = "0xDE78CC", Offset = "0xDE78CC", VA = "0xDE78CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xDE4158", Offset = "0xDE4158", VA = "0xDE4158")]
			public void Add(string _key, string _value)
			{
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xDE464C", Offset = "0xDE464C", VA = "0xDE464C")]
			public void Remove(string _key)
			{
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xDE4080", Offset = "0xDE4080", VA = "0xDE4080")]
			public LanguagePack(string languageName, LanguageTextDatabase _db)
			{
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xDE791C", Offset = "0xDE791C", VA = "0xDE791C")]
			public LanguagePack(string languageName, List<string> keys, List<string> values, LanguageTextDatabase _db)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EB")]
		private class LanguagePackList
		{
			[Token(Token = "0x4002CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<SerializableLanguagePack> languages;

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xDE5B94", Offset = "0xDE5B94", VA = "0xDE5B94")]
			public LanguagePackList(List<SerializableLanguagePack> _languages)
			{
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xDE540C", Offset = "0xDE540C", VA = "0xDE540C")]
			public List<LanguagePack> AsLanguagePacks(LanguageTextDatabase db)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20004EC")]
		private class SerializableLanguagePack
		{
			[Token(Token = "0x4002CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string language;

			[Token(Token = "0x4002CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<LanguageKeyValuePair> items;

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xDE5908", Offset = "0xDE5908", VA = "0xDE5908")]
			public SerializableLanguagePack(LanguagePack languagePack)
			{
			}

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xDE7A68", Offset = "0xDE7A68", VA = "0xDE7A68")]
			public List<string> GetKeys()
			{
				return null;
			}

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xDE7C6C", Offset = "0xDE7C6C", VA = "0xDE7C6C")]
			public List<string> GetValues()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20004ED")]
		private class LanguageKeyValuePair
		{
			[Token(Token = "0x4002CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x4002CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string value;

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xDE7E70", Offset = "0xDE7E70", VA = "0xDE7E70")]
			public LanguageKeyValuePair(string key, string value)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EE")]
		private class FontCollection
		{
			[Serializable]
			[Token(Token = "0x20004EF")]
			public class Config
			{
				[Token(Token = "0x4002CCB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TMP_FontAsset font;

				[Token(Token = "0x4002CCC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Material material;

				[Token(Token = "0x6001EFC")]
				[Address(RVA = "0xDE7F70", Offset = "0xDE7F70", VA = "0xDE7F70")]
				public Config()
				{
				}
			}

			[Token(Token = "0x4002CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4002CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string language;

			[Token(Token = "0x4002CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Config> configs;

			[Token(Token = "0x4002CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, int> nameIndex;

			[Token(Token = "0x170003B9")]
			public Dictionary<string, int> NameIndex
			{
				[Token(Token = "0x6001EF9")]
				[Address(RVA = "0xDE7550", Offset = "0xDE7550", VA = "0xDE7550")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xDE7E9C", Offset = "0xDE7E9C", VA = "0xDE7E9C")]
			private List<string> LanguageNames()
			{
				return null;
			}

			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xDE7EF4", Offset = "0xDE7EF4", VA = "0xDE7EF4")]
			public FontCollection()
			{
			}
		}

		[Token(Token = "0x4002CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, LanguagePack> languagePacks;

		[Token(Token = "0x4002CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<LanguagePack> serializedLanguagePacks;

		[Token(Token = "0x4002CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<string> keys;

		[Token(Token = "0x4002CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<string> languages;

		[Token(Token = "0x4002CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FontCollection originalFontIndexes;

		[Token(Token = "0x4002CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<FontCollection> fontAssets;

		[Token(Token = "0x4002CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int currentLanguage;

		[Token(Token = "0x4002CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string resourcePath;

		[Token(Token = "0x4002CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static LanguageTextDatabase languagesAsset;

		[Token(Token = "0x4002CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Event OnLanguageChanged;

		[Token(Token = "0x4002CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, FontCollection> dicFontAssets;

		[Token(Token = "0x170003AF")]
		public int CurrentLanguage
		{
			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0xDE2C94", Offset = "0xDE2C94", VA = "0xDE2C94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B0")]
		private Dictionary<string, LanguagePack> LanguagePacks
		{
			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0xDE2C9C", Offset = "0xDE2C9C", VA = "0xDE2C9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		private List<string> Keys
		{
			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0xDE2E14", Offset = "0xDE2E14", VA = "0xDE2E14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		private List<string> Languages
		{
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xDE2E94", Offset = "0xDE2E94", VA = "0xDE2E94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private Dictionary<string, FontCollection> FontAssets
		{
			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0xDE2F14", Offset = "0xDE2F14", VA = "0xDE2F14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		public static LanguageTextDatabase LanguagesAsset
		{
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0xDE161C", Offset = "0xDE161C", VA = "0xDE161C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xDE32B8", Offset = "0xDE32B8", VA = "0xDE32B8")]
			set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public List<LanguagePack> LanguagePackAsList
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0xDE3314", Offset = "0xDE3314", VA = "0xDE3314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		public static IEnumerable LTEnumerable
		{
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xDE37C0", Offset = "0xDE37C0", VA = "0xDE37C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xDE1BDC", Offset = "0xDE1BDC", VA = "0xDE1BDC")]
		public string GetLongestText(LanguageText _language)
		{
			return null;
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xDE331C", Offset = "0xDE331C", VA = "0xDE331C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xDE350C", Offset = "0xDE350C", VA = "0xDE350C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xDE3738", Offset = "0xDE3738", VA = "0xDE3738")]
		public List<string> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xDE39CC", Offset = "0xDE39CC", VA = "0xDE39CC")]
		public void SetLanguage(int _i)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xDE3A70", Offset = "0xDE3A70", VA = "0xDE3A70")]
		public void AddLanguage(string _languageName, [Optional] string[] _texts)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xDE4234", Offset = "0xDE4234", VA = "0xDE4234")]
		public void AddText(string _key, [Optional] string[] _texts)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xDE4464", Offset = "0xDE4464", VA = "0xDE4464")]
		public void RemoveText(string _key)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xDE4734", Offset = "0xDE4734", VA = "0xDE4734")]
		public void EditText(string _language, string _key, string _newText)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xDE48F4", Offset = "0xDE48F4", VA = "0xDE48F4")]
		public string GetText(string _key, int _lang = -1, bool allowDefault = true)
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xDE4BE4", Offset = "0xDE4BE4", VA = "0xDE4BE4")]
		public bool KeyExists(string _key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xDE4CCC", Offset = "0xDE4CCC", VA = "0xDE4CCC")]
		public List<string> GetLanguages()
		{
			return null;
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xDE26E4", Offset = "0xDE26E4", VA = "0xDE26E4")]
		public (TMP_FontAsset, Material) GetFontAssetReplacement(TMP_FontAsset ogFontAsset)
		{
			return default((TMP_FontAsset, Material));
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xDE2500", Offset = "0xDE2500", VA = "0xDE2500")]
		public (TMP_FontAsset, Material) GetFontAssetReplacement(Font ogFont)
		{
			return default((TMP_FontAsset, Material));
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xDE4FE0", Offset = "0xDE4FE0", VA = "0xDE4FE0")]
		public void LoadFromJson(string json)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xDE5690", Offset = "0xDE5690", VA = "0xDE5690")]
		public string SerializeAsJson()
		{
			return null;
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xDE5BBC", Offset = "0xDE5BBC", VA = "0xDE5BBC")]
		public void LoadFromCSV(string filePath)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xDE674C", Offset = "0xDE674C", VA = "0xDE674C")]
		public void UpdateFromCSV(string filePath)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xDE6478", Offset = "0xDE6478", VA = "0xDE6478")]
		private void LoadWithTableValues(List<string> tableValues, int columns)
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xDE5CA0", Offset = "0xDE5CA0", VA = "0xDE5CA0")]
		public static (List<string>, int) GetCsvValues(string filePath)
		{
			return default((List<string>, int));
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xDE67B4", Offset = "0xDE67B4", VA = "0xDE67B4")]
		public static void WriteToCsv(string filePath, Dictionary<string, List<string>> values, List<string> languages)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xDE6DF8", Offset = "0xDE6DF8", VA = "0xDE6DF8")]
		public void LoadFromTSV(string filePath)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xDE6EDC", Offset = "0xDE6EDC", VA = "0xDE6EDC")]
		private static (List<string>, int) GetTsvValues(string filePath)
		{
			return default((List<string>, int));
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xDE74A4", Offset = "0xDE74A4", VA = "0xDE74A4")]
		private int SerializedPackIndex(string _language)
		{
			return default(int);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xDE3F18", Offset = "0xDE3F18", VA = "0xDE3F18")]
		private string RemoveSpecialCharacters(string str)
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xDE2CC0", Offset = "0xDE2CC0", VA = "0xDE2CC0")]
		private void DeserializeLanguagePacks()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xDE4D54", Offset = "0xDE4D54", VA = "0xDE4D54")]
		private int GetFontIndex(TMP_FontAsset fontAsset)
		{
			return default(int);
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xDE4E24", Offset = "0xDE4E24", VA = "0xDE4E24")]
		private int GetFontIndex(Font font)
		{
			return default(int);
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xDE77B0", Offset = "0xDE77B0", VA = "0xDE77B0")]
		public LanguageTextDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F0")]
	public class LanguageText
	{
		[Token(Token = "0x4002CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string text;

		[Token(Token = "0x4002CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string key;

		[Token(Token = "0x4002CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string lastKeyUsed;

		[Token(Token = "0x4002CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lastLanguageUsed;

		[Token(Token = "0x170003BA")]
		public string Key
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xDE7F78", Offset = "0xDE7F78", VA = "0xDE7F78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xDE7F80", Offset = "0xDE7F80", VA = "0xDE7F80")]
			set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public string Value
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xDE2C04", Offset = "0xDE2C04", VA = "0xDE2C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xDE39A0", Offset = "0xDE39A0", VA = "0xDE39A0")]
		public LanguageText(string key)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xDE7F88", Offset = "0xDE7F88", VA = "0xDE7F88")]
		private void SetText()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xDE8084", Offset = "0xDE8084", VA = "0xDE8084", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004F1")]
	public class LanguageTextLH : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI tmpro;

		[Token(Token = "0x4002CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text normalText;

		[Token(Token = "0x4002CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LanguageTextTMProBind bind;

		[Token(Token = "0x4002CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LanguageTextBind normalBind;

		[Token(Token = "0x4002CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, string> ButtonDictionary;

		[Token(Token = "0x4002CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private bool setUp;

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xDE808C", Offset = "0xDE808C", VA = "0xDE808C")]
		public static string InvertLeftHandedButtons(string text)
		{
			return null;
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xDE82C8", Offset = "0xDE82C8", VA = "0xDE82C8")]
		public void ReplaceLeftHandedText()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xDE84D8", Offset = "0xDE84D8", VA = "0xDE84D8")]
		public LanguageTextLH()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class LanguageTextTMProBind : BaseLanguageTextBind
	{
		[Token(Token = "0x4002CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI tmpro;

		[Token(Token = "0x4002CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TMP_FontAsset defaultFont;

		[Token(Token = "0x4002CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material defaultMaterial;

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xDE96E0", Offset = "0xDE96E0", VA = "0xDE96E0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xDE9768", Offset = "0xDE9768", VA = "0xDE9768", Slot = "6")]
		protected override void Setup()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xDE9944", Offset = "0xDE9944", VA = "0xDE9944", Slot = "7")]
		public override void SetText(LanguageText _l)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xDE9A78", Offset = "0xDE9A78", VA = "0xDE9A78")]
		public LanguageTextTMProBind()
		{
		}
	}
}
namespace Alvo
{
	[Token(Token = "0x20004F3")]
	public class AIUtility : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002CDA")]
		public const int k_RandomPointIterations = 10;

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xDE9A80", Offset = "0xDE9A80", VA = "0xDE9A80")]
		public static bool GetRandomPoint(Vector3 center, float radius, out Vector3 result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xDE9B7C", Offset = "0xDE9B7C", VA = "0xDE9B7C")]
		public static SpawnArea[] FindSpawnPoints(int gameType, int tdmTeam, bool sndOffense, bool enableOverrides)
		{
			return null;
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xDE9F38", Offset = "0xDE9F38", VA = "0xDE9F38")]
		public AIUtility()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class AttackDogFSM
	{
		[Token(Token = "0x20004F5")]
		public enum State
		{
			[Token(Token = "0x4002CEA")]
			Init,
			[Token(Token = "0x4002CEB")]
			Patrol,
			[Token(Token = "0x4002CEC")]
			Chase,
			[Token(Token = "0x4002CED")]
			Attack,
			[Token(Token = "0x4002CEE")]
			Recover,
			[Token(Token = "0x4002CEF")]
			None
		}

		[Token(Token = "0x20004F6")]
		public delegate bool TargetCheck(float rangeCanEngage, out Transform target);

		[Token(Token = "0x4002CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Transform;

		[Token(Token = "0x4002CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NavMeshAgent m_Agent;

		[Token(Token = "0x4002CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator m_Animator;

		[Token(Token = "0x4002CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_OriginPosition;

		[Token(Token = "0x4002CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_OriginForward;

		[Token(Token = "0x4002CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private State m_PreviousState;

		[Token(Token = "0x4002CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private State m_State;

		[Token(Token = "0x4002CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_ScanTimer;

		[Token(Token = "0x4002CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshPath m_PendingPath;

		[Token(Token = "0x4002CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_Target;

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_InitPoint;

		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_GotoPoint;

		[Token(Token = "0x170003BC")]
		public TargetCheck FindTarget
		{
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xDE9F40", Offset = "0xDE9F40", VA = "0xDE9F40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xDE9F48", Offset = "0xDE9F48", VA = "0xDE9F48")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public Transform Target
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xDEA0B0", Offset = "0xDEA0B0", VA = "0xDEA0B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000019")]
		public event Action<State> StateChanged
		{
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xDE9F50", Offset = "0xDE9F50", VA = "0xDE9F50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xDEA000", Offset = "0xDEA000", VA = "0xDEA000")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xDEA0B8", Offset = "0xDEA0B8", VA = "0xDEA0B8")]
		public AttackDogFSM(Transform transform, NavMeshAgent agent, Animator animator, Transform origin)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xDEA12C", Offset = "0xDEA12C", VA = "0xDEA12C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xDEA1C4", Offset = "0xDEA1C4", VA = "0xDEA1C4")]
		private void InitState()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xDEA354", Offset = "0xDEA354", VA = "0xDEA354")]
		private void PatrolState()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xDEA43C", Offset = "0xDEA43C", VA = "0xDEA43C")]
		private void ChaseState()
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xDEA610", Offset = "0xDEA610", VA = "0xDEA610")]
		private void AttackState()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xDEA778", Offset = "0xDEA778", VA = "0xDEA778")]
		private void RecoverState()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xDEA784", Offset = "0xDEA784", VA = "0xDEA784")]
		private void NoneState()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	[AttributeUsage(AttributeTargets.Field, Inherited = true)]
	public class BitMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type EnumType;

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xDEA920", Offset = "0xDEA920", VA = "0xDEA920")]
		public BitMaskAttribute(Type enumType)
		{
		}
	}
	[Token(Token = "0x20004F8")]
	[AttributeUsage(AttributeTargets.Field, Inherited = true)]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string text;

		[Token(Token = "0x4002CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly MessageType type;

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xDEA948", Offset = "0xDEA948", VA = "0xDEA948")]
		public HelpAttribute(string text, MessageType type = MessageType.Info)
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public enum MessageType
	{
		[Token(Token = "0x4002CF4")]
		None,
		[Token(Token = "0x4002CF5")]
		Info,
		[Token(Token = "0x4002CF6")]
		Warning,
		[Token(Token = "0x4002CF7")]
		Error
	}
	[Token(Token = "0x20004FA")]
	public class CharacterLodIndicator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int lodLevel;

		[Token(Token = "0x4002CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public PlayerData playerdata;

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xDEA978", Offset = "0xDEA978", VA = "0xDEA978")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xDEA9A0", Offset = "0xDEA9A0", VA = "0xDEA9A0")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xDEA9C8", Offset = "0xDEA9C8", VA = "0xDEA9C8")]
		public CharacterLodIndicator()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class PlayerCharacter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004FC")]
		public enum Gender
		{
			[Token(Token = "0x4002D2F")]
			male,
			[Token(Token = "0x4002D30")]
			female
		}

		[Token(Token = "0x4002CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerData playerData;

		[Token(Token = "0x4002CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandHeadSync handHeadSync;

		[Token(Token = "0x4002CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IkToggler ikToggler;

		[Token(Token = "0x4002CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int characterID;

		[Token(Token = "0x4002CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int leftHandIndex;

		[Token(Token = "0x4002CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EventHatManagement.EventHatTransform[] m_EventHatTransforms;

		[Token(Token = "0x4002D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Gender gender;

		[Token(Token = "0x4002D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SECTR_AudioCue[] m_Vocals;

		[Token(Token = "0x4002D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject go;

		[Token(Token = "0x4002D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform t;

		[Token(Token = "0x4002D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Animator animator;

		[Token(Token = "0x4002D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VRIK vrIk;

		[Token(Token = "0x4002D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtIK lookAtIk;

		[Token(Token = "0x4002D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKExecutionOrder TwoHandedIkExec;

		[Token(Token = "0x4002D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKExecutionOrder onlyHeadIkExec;

		[Token(Token = "0x4002D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public LaserSight laserSight;

		[Token(Token = "0x4002D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LaserSight laserSight2;

		[Token(Token = "0x4002D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Head head;

		[Token(Token = "0x4002D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject[] gos;

		[Token(Token = "0x4002D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject bombObject;

		[Token(Token = "0x4002D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[Header("Ragdoll Settings")]
		private BodyRagdoll m_RagdollPrefab;

		[Token(Token = "0x4002D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Range(1f, 60f)]
		[SerializeField]
		private float m_RagdollDisableTime;

		[Token(Token = "0x4002D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Skeleton references")]
		public Transform root;

		[Token(Token = "0x4002D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform cameraRoot;

		[Token(Token = "0x4002D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform leftArm;

		[Token(Token = "0x4002D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform rightArm;

		[Token(Token = "0x4002D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform leftArmFallTarget;

		[Token(Token = "0x4002D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform fallTransitionTarget;

		[Token(Token = "0x4002D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform fallTransitionTargetProne;

		[Token(Token = "0x4002D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform rightArmFallTarget;

		[Token(Token = "0x4002D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform rightArmFallTargetProne;

		[Token(Token = "0x4002D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform weaponHolder;

		[Token(Token = "0x4002D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Transform leftHandedWeaponHolder;

		[Token(Token = "0x4002D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Transform defaultMuzzleFirePos;

		[Token(Token = "0x4002D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform rightHand;

		[Token(Token = "0x4002D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform leftHand;

		[Token(Token = "0x4002D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Transform[] IkBones;

		[Token(Token = "0x4002D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Header("Head Positioning")]
		public bool replaceOffsets;

		[Token(Token = "0x4002D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public Vector3 walkHeadPosition;

		[Token(Token = "0x4002D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Vector3 crouchHeadPosition;

		[Token(Token = "0x4002D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public Vector3 sprintHeadPosition;

		[Token(Token = "0x4002D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[Header("Secondary hands offset")]
		public Vector3 leftHandIkRotationOffset;

		[Token(Token = "0x4002D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public Vector3 RightHandIkRotationOffset;

		[Token(Token = "0x4002D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[Header("Primary Guns offset")]
		public float maxLeftHandDistance;

		[Token(Token = "0x4002D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public bool useIkGunOffset;

		[Token(Token = "0x4002D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Vector3 leftIkOffsetPosition;

		[Token(Token = "0x4002D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public Vector3 leftIkOffsetRotation;

		[Token(Token = "0x4002D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Vector3 rightIkOffsetPosition;

		[Token(Token = "0x4002D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public Vector3 rightIkOffsetRotation;

		[Token(Token = "0x4002D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Quaternion characterRotation;

		[Token(Token = "0x4002D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public BodyRagdoll m_CachedRagdoll;

		[Token(Token = "0x4002D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public RespawnProtectMaterial m_RespawnProtectMaterial;

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xDEA9D0", Offset = "0xDEA9D0", VA = "0xDEA9D0")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xDEADAC", Offset = "0xDEADAC", VA = "0xDEADAC")]
		public void SetIkOffset()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xDEAF98", Offset = "0xDEAF98", VA = "0xDEAF98")]
		public void ActivateRagdoll(Vector3 killerPosition, bool diedByExplosion, bool diedByHeadshot, float killForceMultiplier)
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xDEB31C", Offset = "0xDEB31C", VA = "0xDEB31C")]
		public void DeactivateRagdollImmediately()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xDEB3AC", Offset = "0xDEB3AC", VA = "0xDEB3AC")]
		public void ShowRespawnProtection(bool show, float hideDelay)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xDEB49C", Offset = "0xDEB49C", VA = "0xDEB49C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xDEB5F8", Offset = "0xDEB5F8", VA = "0xDEB5F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xDEB530", Offset = "0xDEB530", VA = "0xDEB530")]
		private void CacheRagdoll()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xDEB69C", Offset = "0xDEB69C", VA = "0xDEB69C")]
		public void TestFootstep()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xDEB6A0", Offset = "0xDEB6A0", VA = "0xDEB6A0")]
		public PlayerCharacter()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public abstract class AnyItemList<T> : ScriptableObject where T : IndexedItem
	{
		[Token(Token = "0x4002D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T[] items;

		[Token(Token = "0x4002D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, T> itemMap;

		[Token(Token = "0x170003BE")]
		private Dictionary<int, T> ItemMap
		{
			[Token(Token = "0x6001F2E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		public T this[int i]
		{
			[Token(Token = "0x6001F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C0")]
		public int Count
		{
			[Token(Token = "0x6001F31")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F2F")]
		public T GetByItemId(int id)
		{
			return null;
		}

		[Token(Token = "0x6001F32")]
		public static AnyItemList<T> Combine(AnyItemList<T> a, AnyItemList<T> b)
		{
			return null;
		}

		[Token(Token = "0x6001F33")]
		protected AnyItemList()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class IndexedItem
	{
		[Token(Token = "0x4002D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ItemNumber;

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xDEB7AC", Offset = "0xDEB7AC", VA = "0xDEB7AC")]
		public IndexedItem()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	[CreateAssetMenu(fileName = "New Item List", menuName = "Alvo/Character Skin Store List")]
	public class CharacterSkinStoreList : AnyItemList<CharacterStoreInfo>
	{
		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xDEB7B4", Offset = "0xDEB7B4", VA = "0xDEB7B4")]
		public CharacterSkinStoreList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000500")]
	public class CharacterStoreInfo : IndexedItem
	{
		[Token(Token = "0x4002D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool EventExclusive;

		[Token(Token = "0x4002D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SeasonalEvents Event;

		[Token(Token = "0x4002D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Price;

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xDEB7FC", Offset = "0xDEB7FC", VA = "0xDEB7FC")]
		public CharacterStoreInfo()
		{
		}
	}
	[Token(Token = "0x2000501")]
	[CreateAssetMenu(fileName = "New Loadout Icon List", menuName = "Alvo/Loadout Icon List")]
	public class LoadoutIconList : ScriptableObject
	{
		[Token(Token = "0x4002D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LoadoutIcon[] icons;

		[Token(Token = "0x4002D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, LoadoutIcon> iconMap;

		[Token(Token = "0x170003C1")]
		private Dictionary<int, LoadoutIcon> IconMap
		{
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xDEB804", Offset = "0xDEB804", VA = "0xDEB804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		public LoadoutIcon this[int i]
		{
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xDEBA10", Offset = "0xDEBA10", VA = "0xDEBA10")]
			get
			{
				return default(LoadoutIcon);
			}
		}

		[Token(Token = "0x170003C3")]
		public int Count
		{
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0xDEBA44", Offset = "0xDEBA44", VA = "0xDEBA44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xDEB8F8", Offset = "0xDEB8F8", VA = "0xDEB8F8")]
		public LoadoutIcon GetByItemId(int id)
		{
			return default(LoadoutIcon);
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xDEBA60", Offset = "0xDEBA60", VA = "0xDEBA60")]
		public static LoadoutIconList Combine(LoadoutIconList a, LoadoutIconList b)
		{
			return null;
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xDEBB88", Offset = "0xDEBB88", VA = "0xDEBB88")]
		public LoadoutIconList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000502")]
	public struct LoadoutIcon
	{
		[Token(Token = "0x4002D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ItemNumber;

		[Token(Token = "0x4002D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite Icon;
	}
	[Token(Token = "0x2000503")]
	[CreateAssetMenu(fileName = "Loadout Prefab List", menuName = "Alvo/Loadout Prefab List")]
	public class LoadoutPrefabList : ScriptableObject
	{
		[Token(Token = "0x4002D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LoadoutPrefab> items;

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xDEBB90", Offset = "0xDEBB90", VA = "0xDEBB90")]
		public GameObject GetPrefabById(int id)
		{
			return null;
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xDEBC54", Offset = "0xDEBC54", VA = "0xDEBC54")]
		public LoadoutPrefabList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000504")]
	public class LoadoutPrefab
	{
		[Token(Token = "0x4002D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int itemNumber;

		[Token(Token = "0x4002D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xDEBC5C", Offset = "0xDEBC5C", VA = "0xDEBC5C")]
		public LoadoutPrefab()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class PlayerLoadoutAttachmentsAndScopes : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000506")]
		public struct GameObjectIdPair
		{
			[Token(Token = "0x4002D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject gameObject;

			[Token(Token = "0x4002D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int id;
		}

		[Token(Token = "0x4002D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObjectIdPair[] m_Attachments;

		[Token(Token = "0x4002D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObjectIdPair[] m_Scopes;

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xDEBC64", Offset = "0xDEBC64", VA = "0xDEBC64")]
		public GameObject GetAnyById(int id)
		{
			return null;
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xDEBD10", Offset = "0xDEBD10", VA = "0xDEBD10")]
		public GameObject GetAttachmentById(int id)
		{
			return null;
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xDEBD20", Offset = "0xDEBD20", VA = "0xDEBD20")]
		public GameObject GetScopeById(int id)
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xDEBD84", Offset = "0xDEBD84", VA = "0xDEBD84")]
		public void ResetScopes()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xDEBE4C", Offset = "0xDEBE4C", VA = "0xDEBE4C")]
		public void ResetAttachments()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xDEBD30", Offset = "0xDEBD30", VA = "0xDEBD30")]
		private GameObjectIdPair GetPairById(GameObjectIdPair[] arr, int id)
		{
			return default(GameObjectIdPair);
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xDEBF14", Offset = "0xDEBF14", VA = "0xDEBF14")]
		public PlayerLoadoutAttachmentsAndScopes()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class PlayerLoadoutsManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public System.Action OnPerksChange;

		[Token(Token = "0x4002D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Dependencies")]
		private PlayerRankConfig m_RankConfig;

		[Token(Token = "0x4002D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WeaponStatsList m_WeaponStats;

		[Token(Token = "0x4002D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WeaponList m_Weapons;

		[Token(Token = "0x4002D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WeaponList m_Grenades;

		[Token(Token = "0x4002D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SkinsList m_Skins;

		[Token(Token = "0x4002D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Space]
		private WeaponAddonList m_AttachmentList;

		[Token(Token = "0x4002D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WeaponAddonList m_SniperAttachmentList;

		[Token(Token = "0x4002D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private WeaponAddonList m_PistolAttachmentList;

		[Token(Token = "0x4002D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private WeaponAddonList m_ShotgunAttachmentList;

		[Token(Token = "0x4002D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private WeaponAddonList m_DualAttachmentList;

		[Token(Token = "0x4002D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private WeaponAddonList m_DualShotgunAttachmentList;

		[Token(Token = "0x4002D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private WeaponAddonList m_NormalScopeList;

		[Token(Token = "0x4002D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private WeaponAddonList m_SniperScopeList;

		[Token(Token = "0x4002D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private WeaponAddonList m_PistolScopeList;

		[Token(Token = "0x4002D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private WeaponAddonList m_ShotgunScopeList;

		[Token(Token = "0x4002D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private WeaponAddonList m_DualScopeList;

		[Token(Token = "0x4002D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private WeaponAddonList m_DualShotgunScopeList;

		[Token(Token = "0x4002D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public PlayerPerkDatabase m_PerkDatabase;

		[Token(Token = "0x4002D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private List<Perk> m_PerksList;

		[Token(Token = "0x4002D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TacticalGearList m_TacticalGearList;

		[Token(Token = "0x4002D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private bool m_DisableTacticalGear;

		[Token(Token = "0x4002D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Header("Texts")]
		[SerializeField]
		private LanguageText m_DefaultWeaponLT;

		[Token(Token = "0x4002D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private LanguageText m_DefaultAttachmentLT;

		[Token(Token = "0x4002D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private LanguageText m_DefaultScopeLT;

		[Token(Token = "0x4002D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private LanguageText m_NoneNameLT;

		[Token(Token = "0x4002D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private LanguageText m_BazookaNameLT;

		[Token(Token = "0x4002D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private LanguageText m_BombNameLT;

		[Token(Token = "0x4002D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private PlayerLocalData m_LocalData;

		[Token(Token = "0x4002D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private UINotification uiNotificator;

		[Token(Token = "0x4002D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerLoadoutsManager instance;

		[Token(Token = "0x4002D61")]
		public const int PrimaryWeaponDefaultIndex = 9;

		[Token(Token = "0x4002D62")]
		public const int SecondaryWeaponDefaultIndex = 5;

		[Token(Token = "0x4002D63")]
		public const int MeleeWeaponDefaultIndex = 14;

		[Token(Token = "0x170003C4")]
		public static PlayerLoadoutsManager Instance
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0xDEBF1C", Offset = "0xDEBF1C", VA = "0xDEBF1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0xDEBFDC", Offset = "0xDEBFDC", VA = "0xDEBFDC")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public WeaponList Weapons
		{
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0xDEC09C", Offset = "0xDEC09C", VA = "0xDEC09C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C6")]
		public WeaponList Grenades
		{
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0xDEC0A4", Offset = "0xDEC0A4", VA = "0xDEC0A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		public TacticalGearList TacticalGear
		{
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0xDEC0AC", Offset = "0xDEC0AC", VA = "0xDEC0AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xDEC028", Offset = "0xDEC028", VA = "0xDEC028")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xDEC074", Offset = "0xDEC074", VA = "0xDEC074")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xDEC0B4", Offset = "0xDEC0B4", VA = "0xDEC0B4")]
		public WeaponAddonList GetAttachmentList(WeaponType type)
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xDEC150", Offset = "0xDEC150", VA = "0xDEC150")]
		public WeaponAddonList GetAttachmentList(int weaponId)
		{
			return null;
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xDEC188", Offset = "0xDEC188", VA = "0xDEC188")]
		public WeaponAddonList GetScopeList(WeaponType type)
		{
			return null;
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xDEC224", Offset = "0xDEC224", VA = "0xDEC224")]
		public WeaponAddonList GetScopeList(int weaponId)
		{
			return null;
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xDEC25C", Offset = "0xDEC25C", VA = "0xDEC25C")]
		public PlayerPerkDatabase GetPerks()
		{
			return null;
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xDEC264", Offset = "0xDEC264", VA = "0xDEC264")]
		public Skins GetSkin(int wid, int sid)
		{
			return null;
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xDEC280", Offset = "0xDEC280", VA = "0xDEC280")]
		public void ValidateSelections(Loadout loadout)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xDED67C", Offset = "0xDED67C", VA = "0xDED67C")]
		public void SetLoadoutIndex(int index)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xDED6E8", Offset = "0xDED6E8", VA = "0xDED6E8")]
		public void SelectPrimaryWeapon(int wid)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xDED85C", Offset = "0xDED85C", VA = "0xDED85C")]
		public void SelectSecondaryWeapon(int wid)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xDEDA6C", Offset = "0xDEDA6C", VA = "0xDEDA6C")]
		public void SelectPrimaryMelee(int wid)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xDEDB24", Offset = "0xDEDB24", VA = "0xDEDB24")]
		public void SelectSecondaryMelee(int wid)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xDEDBDC", Offset = "0xDEDBDC", VA = "0xDEDBDC")]
		public void SelectPrimarySkin(int sid)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xDEDC20", Offset = "0xDEDC20", VA = "0xDEDC20")]
		public void SelectSecondarySkin(int sid)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xDEDC64", Offset = "0xDEDC64", VA = "0xDEDC64")]
		public void SelectPrimaryMeleeSkin(int sid)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xDEDCA8", Offset = "0xDEDCA8", VA = "0xDEDCA8")]
		public void SelectSecondaryMeleeSkin(int sid)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xDEDCEC", Offset = "0xDEDCEC", VA = "0xDEDCEC")]
		public void SelectAttachment(int aid)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xDEDD30", Offset = "0xDEDD30", VA = "0xDEDD30")]
		public void SelectSecondaryAttachment(int aid)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xDEDD74", Offset = "0xDEDD74", VA = "0xDEDD74")]
		public void SelectScope(int sid)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xDEDDB8", Offset = "0xDEDDB8", VA = "0xDEDDB8")]
		public void SelectSecondaryScope(int sid)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xDEDDFC", Offset = "0xDEDDFC", VA = "0xDEDDFC")]
		public void SelectPrimaryGrenade(int gid)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xDEDE5C", Offset = "0xDEDE5C", VA = "0xDEDE5C")]
		public void SelectSecondaryGrenade(int gid)
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xDECEBC", Offset = "0xDECEBC", VA = "0xDECEBC")]
		public void SelectPrimaryPerk(int pid, bool validate = true, bool _triggerAction = true)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xDED0B8", Offset = "0xDED0B8", VA = "0xDED0B8")]
		public void SelectSecondaryPerk(int pid, bool validate = true, bool _triggerAction = true)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xDED570", Offset = "0xDED570", VA = "0xDED570")]
		public void SelectTacticalGear(int _id, int _dummy, bool _validate = true)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xDEE2D8", Offset = "0xDEE2D8", VA = "0xDEE2D8")]
		public void BuyWeapon(int wid, int dummy)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xDEE574", Offset = "0xDEE574", VA = "0xDEE574")]
		public void BuyAndSelectPrimaryWeapon(int wid, int dummy)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xDEE59C", Offset = "0xDEE59C", VA = "0xDEE59C")]
		public void BuyAndSelectSecondaryWeapon(int wid, int dummy)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xDEE5C4", Offset = "0xDEE5C4", VA = "0xDEE5C4")]
		public void BuyAndSelectMeleeWeapon(int wid, int isPrimary)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xDEE600", Offset = "0xDEE600", VA = "0xDEE600")]
		public void BuyAttachment(int iid, int wid)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xDEE91C", Offset = "0xDEE91C", VA = "0xDEE91C")]
		public void BuyAndSelectAttachment(int iid, int wid, bool isPrimary)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xDEE958", Offset = "0xDEE958", VA = "0xDEE958")]
		public void BuyScope(int iid, int wid)
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xDEECCC", Offset = "0xDEECCC", VA = "0xDEECCC")]
		public void BuyAndSelectScope(int iid, int wid, bool isPrimary)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xDEE770", Offset = "0xDEE770", VA = "0xDEE770")]
		public void BuyWeaponAddon(int iid, int wid, PlayerRankConfig.EquipmentUnlock unlock, bool callAzure = true)
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xDEED08", Offset = "0xDEED08", VA = "0xDEED08")]
		public void BuySkin(int sid, int wid)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xDEF114", Offset = "0xDEF114", VA = "0xDEF114")]
		public void BuyAndSelectPrimarySkin(int sid, int wid)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xDEF13C", Offset = "0xDEF13C", VA = "0xDEF13C")]
		public void BuyAndSelectPrimaryMeleeSkin(int sid, int wid)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xDEF164", Offset = "0xDEF164", VA = "0xDEF164")]
		public void BuyAndSelectSecondarySkin(int sid, int wid)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xDEF18C", Offset = "0xDEF18C", VA = "0xDEF18C")]
		public void BuyAndSelectSecondaryMeleeSkin(int sid, int wid)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xDEF1B4", Offset = "0xDEF1B4", VA = "0xDEF1B4")]
		public void BuyPerk(int pid, int dummy)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xDEF4A4", Offset = "0xDEF4A4", VA = "0xDEF4A4")]
		public void BuyAndSelectPerk(int pid, bool primarySlot)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xDEF4E8", Offset = "0xDEF4E8", VA = "0xDEF4E8")]
		public void BuyTacticalGear(int _id, int _dummy)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xDEF9E8", Offset = "0xDEF9E8", VA = "0xDEF9E8")]
		public void BuyAndSelectTacticalGear(int _id, int _dummy)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xDECDD8", Offset = "0xDECDD8", VA = "0xDECDD8")]
		public bool IsOverloadReady(Loadout loadout)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xDEDEBC", Offset = "0xDEDEBC", VA = "0xDEDEBC")]
		private void LoadoutPerkMod(PerkID prevPerk, PerkID cPerk1, PerkID prevPerk2)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xDEFCBC", Offset = "0xDEFCBC", VA = "0xDEFCBC")]
		public string GetWeaponName(int wid)
		{
			return null;
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xDEFD34", Offset = "0xDEFD34", VA = "0xDEFD34")]
		public string GetAttachmentName(int wid, int aid)
		{
			return null;
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xDEFF30", Offset = "0xDEFF30", VA = "0xDEFF30")]
		public string GetScopeName(int wid, int sid)
		{
			return null;
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xDF0000", Offset = "0xDF0000", VA = "0xDF0000")]
		public int CurrentLoadoutSecondaryType()
		{
			return default(int);
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xDF0118", Offset = "0xDF0118", VA = "0xDF0118")]
		public bool IsMelee(int wid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xDED2B4", Offset = "0xDED2B4", VA = "0xDED2B4")]
		private int SecondaryType(bool _overloaded, bool _dualWield)
		{
			return default(int);
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xDF0148", Offset = "0xDF0148", VA = "0xDF0148")]
		public List<int> GetMeleeIndexes()
		{
			return null;
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xDF037C", Offset = "0xDF037C", VA = "0xDF037C")]
		public PlayerLoadoutsManager()
		{
		}
	}
	[Token(Token = "0x2000509")]
	[CreateAssetMenu(fileName = "New Weapon Addon List", menuName = "Alvo/Weapon Addon List")]
	public class WeaponAddonList : ScriptableObject
	{
		[Token(Token = "0x4002D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WeaponAddonData> items;

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xDEFE04", Offset = "0xDEFE04", VA = "0xDEFE04")]
		public WeaponAddonData? GetByItemId(int id)
		{
			return null;
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xDF0460", Offset = "0xDF0460", VA = "0xDF0460")]
		public static WeaponAddonList Combine(WeaponAddonList a, WeaponAddonList b)
		{
			return null;
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xDF0508", Offset = "0xDF0508", VA = "0xDF0508")]
		public WeaponAddonList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050A")]
	public struct WeaponAddonData
	{
		[Token(Token = "0x4002D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4002D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LanguageText nameLocalization;

		[Token(Token = "0x4002D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int itemNumber;
	}
	[Token(Token = "0x200050B")]
	public class AsyncAssetLoadManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200050E")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetLoadRequest request;

			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xDF2C1C", Offset = "0xDF2C1C", VA = "0xDF2C1C")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xDF2C24", Offset = "0xDF2C24", VA = "0xDF2C24")]
			internal bool <ProccessWaitRequests>b__0(GunSkin s)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xDF2C38", Offset = "0xDF2C38", VA = "0xDF2C38")]
			internal bool <ProccessWaitRequests>b__1(GunSkin s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200050F")]
		[CompilerGenerated]
		private sealed class <ProccessWaitRequests>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncAssetLoadManager <>4__this;

			[Token(Token = "0x4002D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass26_0 <>8__1;

			[Token(Token = "0x4002D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4002D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperationHandle<GameObject> <goHandle>5__3;

			[Token(Token = "0x4002D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AsyncOperationHandle<Material> <goHandle>5__4;

			[Token(Token = "0x170003C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FA7")]
				[Address(RVA = "0xDF368C", Offset = "0xDF368C", VA = "0xDF368C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FA9")]
				[Address(RVA = "0xDF36D4", Offset = "0xDF36D4", VA = "0xDF36D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xDF1FF4", Offset = "0xDF1FF4", VA = "0xDF1FF4")]
			[DebuggerHidden]
			public <ProccessWaitRequests>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xDF2C4C", Offset = "0xDF2C4C", VA = "0xDF2C4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xDF2C50", Offset = "0xDF2C50", VA = "0xDF2C50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xDF3694", Offset = "0xDF3694", VA = "0xDF3694", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000511")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetLoadRequest request;

			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0xDF3704", Offset = "0xDF3704", VA = "0xDF3704")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0xDF370C", Offset = "0xDF370C", VA = "0xDF370C")]
			internal bool <ProcessAssetsLoadRequest>b__0(GunSkin s)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0xDF3720", Offset = "0xDF3720", VA = "0xDF3720")]
			internal bool <ProcessAssetsLoadRequest>b__1(GunSkin s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000512")]
		[CompilerGenerated]
		private sealed class <ProcessAssetsLoadRequest>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncAssetLoadManager <>4__this;

			[Token(Token = "0x4002D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass29_0 <>8__1;

			[Token(Token = "0x4002D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperationHandle<GameObject> <goHandle>5__2;

			[Token(Token = "0x4002D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private AsyncOperationHandle<Material> <goHandle>5__3;

			[Token(Token = "0x170003CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FB3")]
				[Address(RVA = "0xDF4450", Offset = "0xDF4450", VA = "0xDF4450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FB5")]
				[Address(RVA = "0xDF4498", Offset = "0xDF4498", VA = "0xDF4498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0xDF21EC", Offset = "0xDF21EC", VA = "0xDF21EC")]
			[DebuggerHidden]
			public <ProcessAssetsLoadRequest>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0xDF3734", Offset = "0xDF3734", VA = "0xDF3734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0xDF3738", Offset = "0xDF3738", VA = "0xDF3738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0xDF4458", Offset = "0xDF4458", VA = "0xDF4458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference[] playerCharactersAssets;

		[Token(Token = "0x4002D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public GameObject[] loadedCharacters;

		[Token(Token = "0x4002D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetReference[] mainMenuCharactersAssets;

		[Token(Token = "0x4002D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] loadedMainMenuCharacters;

		[Token(Token = "0x4002D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<GunSkin> loadedSkins;

		[Token(Token = "0x4002D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<AssetLoadRequest> liveRequestQueue;

		[Token(Token = "0x4002D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public List<AssetLoadRequest> timedRequestQueue;

		[Token(Token = "0x4002D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public List<AssetLoadRequest> timedRequestQueueWaitlist;

		[Token(Token = "0x4002D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public List<AsyncOperationHandle> extraLoadedObjects;

		[Token(Token = "0x4002D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WaitForSeconds wait;

		[Token(Token = "0x4002D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool processing;

		[Token(Token = "0x4002D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GPULoader gpuLoader;

		[Token(Token = "0x4002D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AsyncAssetLoadManager m_Instance;

		[Token(Token = "0x170003C8")]
		public static AsyncAssetLoadManager Instance
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xDF0584", Offset = "0xDF0584", VA = "0xDF0584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xDF05CC", Offset = "0xDF05CC", VA = "0xDF05CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xDF06D0", Offset = "0xDF06D0", VA = "0xDF06D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xDF07B4", Offset = "0xDF07B4", VA = "0xDF07B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xDF07BC", Offset = "0xDF07BC", VA = "0xDF07BC")]
		public void RequestCharacter(PlayerCustomization load, int index)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xDF0B28", Offset = "0xDF0B28", VA = "0xDF0B28")]
		public void RequestMainMenuCharacter(MenuCharacterDisplay characterSelection, int index)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xDF0D0C", Offset = "0xDF0D0C", VA = "0xDF0D0C")]
		public void RequestGunSkin(ModSkins modSkins, int weaponId, int skinID, bool local = false, bool mainMenu = false)
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xDF13E0", Offset = "0xDF13E0", VA = "0xDF13E0")]
		public void RequestLoadoutChange(Loadout loadout)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xDF1900", Offset = "0xDF1900", VA = "0xDF1900")]
		public void ReleaseLocalSkins()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xDF1904", Offset = "0xDF1904", VA = "0xDF1904")]
		public void RequestUnloadAll(LoadRequestTypes type)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xDF1B34", Offset = "0xDF1B34", VA = "0xDF1B34")]
		public void RequestUnloadAll()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xDF1F6C", Offset = "0xDF1F6C", VA = "0xDF1F6C")]
		public void ProccessTimedQue()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xDF1F8C", Offset = "0xDF1F8C", VA = "0xDF1F8C")]
		[IteratorStateMachine(typeof(<ProccessWaitRequests>d__26))]
		private IEnumerator ProccessWaitRequests()
		{
			return null;
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xDF1220", Offset = "0xDF1220", VA = "0xDF1220")]
		private bool SetMaterial(AssetLoadRequest request, bool local = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xDF09EC", Offset = "0xDF09EC", VA = "0xDF09EC")]
		public bool SetChartacter(AssetLoadRequest request)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xDF074C", Offset = "0xDF074C", VA = "0xDF074C")]
		[IteratorStateMachine(typeof(<ProcessAssetsLoadRequest>d__29))]
		private IEnumerator ProcessAssetsLoadRequest()
		{
			return null;
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xDF2214", Offset = "0xDF2214", VA = "0xDF2214")]
		private void CheckForUnussedGunSkins()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xDF2474", Offset = "0xDF2474", VA = "0xDF2474")]
		private void CheckForUnussedAssets()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xDF2744", Offset = "0xDF2744", VA = "0xDF2744")]
		private void CheckForUnussedMainMenuCharacters()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xDF2A1C", Offset = "0xDF2A1C", VA = "0xDF2A1C")]
		public AsyncAssetLoadManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000516")]
	public struct AssetLoadRequest
	{
		[Token(Token = "0x4002D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoadRequestTypes type;

		[Token(Token = "0x4002D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PlayerCustomization playerCustomization;

		[Token(Token = "0x4002D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuCharacterDisplay menuCharacterdisplay;

		[Token(Token = "0x4002D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModSkins modSkins;

		[Token(Token = "0x4002D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x4002D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int secondaryIndex;

		[Token(Token = "0x4002D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string address;

		[Token(Token = "0x4002D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isDone;

		[Token(Token = "0x4002D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool local;

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xDF1AC4", Offset = "0xDF1AC4", VA = "0xDF1AC4")]
		public AssetLoadRequest(LoadRequestTypes type)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xDF0978", Offset = "0xDF0978", VA = "0xDF0978")]
		public AssetLoadRequest(PlayerCustomization loadTo, int index)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xDF0C94", Offset = "0xDF0C94", VA = "0xDF0C94")]
		public AssetLoadRequest(MenuCharacterDisplay charSelection, int index)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xDF11F8", Offset = "0xDF11F8", VA = "0xDF11F8")]
		public AssetLoadRequest(ModSkins modSkins, string address, bool local, int index, int secondaryIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000517")]
	public struct GunSkin
	{
		[Token(Token = "0x4002D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material mat;

		[Token(Token = "0x4002D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string address;

		[Token(Token = "0x4002D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncOperationHandle handle;

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xDF3674", Offset = "0xDF3674", VA = "0xDF3674")]
		public GunSkin(Material mat, string address, AsyncOperationHandle handle)
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class GPULoader : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000519")]
		[CompilerGenerated]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GPULoader <>4__this;

			[Token(Token = "0x4002DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncAssetLoadManager <loadManager>5__2;

			[Token(Token = "0x4002DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<AsyncOperationHandle<Material>> <goHandles>5__3;

			[Token(Token = "0x4002DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<AssetLoadRequest> <reqs>5__4;

			[Token(Token = "0x4002DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<AsyncOperationHandle<Material>>.Enumerator <>7__wrap4;

			[Token(Token = "0x170003CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FCF")]
				[Address(RVA = "0xDF6DA8", Offset = "0xDF6DA8", VA = "0xDF6DA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD1")]
				[Address(RVA = "0xDF6DF0", Offset = "0xDF6DF0", VA = "0xDF6DF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0xDF46A4", Offset = "0xDF46A4", VA = "0xDF46A4")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0xDF5960", Offset = "0xDF5960", VA = "0xDF5960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0xDF597C", Offset = "0xDF597C", VA = "0xDF597C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0xDF6D58", Offset = "0xDF6D58", VA = "0xDF6D58")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0xDF6DB0", Offset = "0xDF6DB0", VA = "0xDF6DB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200051A")]
		[CompilerGenerated]
		private sealed class <LoadedObjectsRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GPULoader <>4__this;

			[Token(Token = "0x170003CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FD5")]
				[Address(RVA = "0xDF71B4", Offset = "0xDF71B4", VA = "0xDF71B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD7")]
				[Address(RVA = "0xDF71FC", Offset = "0xDF71FC", VA = "0xDF71FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0xDF4754", Offset = "0xDF4754", VA = "0xDF4754")]
			[DebuggerHidden]
			public <LoadedObjectsRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0xDF6DF8", Offset = "0xDF6DF8", VA = "0xDF6DF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0xDF6DFC", Offset = "0xDF6DFC", VA = "0xDF6DFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0xDF71BC", Offset = "0xDF71BC", VA = "0xDF71BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> preloadObjects;

		[Token(Token = "0x4002D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> preloadedMaterials;

		[Token(Token = "0x4002D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer[] allMeshRenderers;

		[Token(Token = "0x4002DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SkinnedMeshRenderer[] allSkinnedMesh;

		[Token(Token = "0x4002DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject otherObjects;

		[Token(Token = "0x4002DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ModSkins> modSkins;

		[Token(Token = "0x4002DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Camera mainCamera;

		[Token(Token = "0x4002DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Camera sCamera;

		[Token(Token = "0x4002DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerWeapons weapons;

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xDF45CC", Offset = "0xDF45CC", VA = "0xDF45CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xDF463C", Offset = "0xDF463C", VA = "0xDF463C")]
		[IteratorStateMachine(typeof(<Start>d__10))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xDF46CC", Offset = "0xDF46CC", VA = "0xDF46CC")]
		public void StartLoadToGPURoutine()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xDF46EC", Offset = "0xDF46EC", VA = "0xDF46EC")]
		[IteratorStateMachine(typeof(<LoadedObjectsRoutine>d__12))]
		private IEnumerator LoadedObjectsRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xDF477C", Offset = "0xDF477C", VA = "0xDF477C")]
		private void GetAllMaterials()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xDF4A0C", Offset = "0xDF4A0C", VA = "0xDF4A0C")]
		private void Render()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xDF5524", Offset = "0xDF5524", VA = "0xDF5524")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xDF580C", Offset = "0xDF580C", VA = "0xDF580C")]
		public GPULoader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051B")]
	public sealed class IntUnityEvent : UnityEvent<int>
	{
		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xDF7204", Offset = "0xDF7204", VA = "0xDF7204")]
		public IntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051C")]
	public sealed class FloatUnityEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xDF724C", Offset = "0xDF724C", VA = "0xDF724C")]
		public FloatUnityEvent()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public enum KillType
	{
		[Token(Token = "0x4002DB1")]
		gun = 0,
		[Token(Token = "0x4002DB2")]
		grenades = 1,
		[Token(Token = "0x4002DB3")]
		killstreak = 4
	}
	[Serializable]
	[Token(Token = "0x200051E")]
	public class TrophyData
	{
		[Token(Token = "0x4002DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool[] trophiesUnlocked;

		[Token(Token = "0x4002DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool[] ducksFound;

		[Token(Token = "0x4002DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] progress;

		[Token(Token = "0x4002DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool allKillsUnlocked;

		[Token(Token = "0x4002DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool allEndOfMatchUnlocked;

		[Token(Token = "0x4002DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool allTrophiesUnlocked;

		[Token(Token = "0x4002DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool lowerRequirements;

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xDF7294", Offset = "0xDF7294", VA = "0xDF7294")]
		public TrophyData()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class AlvoTrophies : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrophyData currentData;

		[Token(Token = "0x4002DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] requirementsATM;

		[Token(Token = "0x4002DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] requirements;

		[Token(Token = "0x4002DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] alternateRequirements;

		[Token(Token = "0x4002DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly string PrefKey;

		[Token(Token = "0x4002DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool stopSaving;

		[Token(Token = "0x4002DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int killsWhileSliding;

		[Token(Token = "0x4002DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int killsInRound;

		[Token(Token = "0x4002DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AlvoTrophies m_Instance;

		[Token(Token = "0x4002DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private KillType type;

		[Token(Token = "0x170003D1")]
		public static AlvoTrophies Instance
		{
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xDF7328", Offset = "0xDF7328", VA = "0xDF7328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xDF7370", Offset = "0xDF7370", VA = "0xDF7370")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xDF7474", Offset = "0xDF7474", VA = "0xDF7474")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xDF7514", Offset = "0xDF7514", VA = "0xDF7514")]
		public void UpdateTrophiesData()
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xDF754C", Offset = "0xDF754C", VA = "0xDF754C")]
		public void SwapRequirements()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xDF7588", Offset = "0xDF7588", VA = "0xDF7588")]
		private bool UpdateAndCheckTrophie(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xDF7774", Offset = "0xDF7774", VA = "0xDF7774")]
		public void RegisterSpecial(int id)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xDF78B0", Offset = "0xDF78B0", VA = "0xDF78B0")]
		public void RegisterBomb(bool planted)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xDF78C0", Offset = "0xDF78C0", VA = "0xDF78C0")]
		public bool RegisterDuck(int duckID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xDF79C8", Offset = "0xDF79C8", VA = "0xDF79C8")]
		public void RegisterEndOfMatch(int gametype, bool first = false)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xDF7AD4", Offset = "0xDF7AD4", VA = "0xDF7AD4")]
		public void RegisterKill(short w, bool headShot = false, bool sliding = false, bool inAir = false, bool snd = false)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xDF7620", Offset = "0xDF7620", VA = "0xDF7620")]
		private void Unlock(int id)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xDF7ECC", Offset = "0xDF7ECC", VA = "0xDF7ECC")]
		private void UnlockResponse(int id)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xDF7F10", Offset = "0xDF7F10", VA = "0xDF7F10")]
		public AlvoTrophies()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class PlayerCustomization : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public PlayerCharacter currentCharacter;

		[Token(Token = "0x4002DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerData playerData;

		[Token(Token = "0x4002DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int currentCharacterID;

		[Token(Token = "0x4002DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool overrideCustomization;

		[Token(Token = "0x4002DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool disable;

		[Token(Token = "0x4002DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] m_Customization;

		[Token(Token = "0x4002DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool teamSkinInit;

		[Token(Token = "0x4002DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Outline characterOutline;

		[Token(Token = "0x4002DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer[] lodRenderers;

		[Token(Token = "0x4002DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool disableOutline;

		[Token(Token = "0x4002DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private LayerMask outlineLayerMask;

		[Token(Token = "0x4002DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float outlineCheckInterval;

		[Token(Token = "0x4002DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float outlineCheckTimer;

		[Token(Token = "0x4002DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int currentIndex;

		[Token(Token = "0x4002DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform weaponHolderATM;

		[Token(Token = "0x4002DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform weaponHolderATMSecondary;

		[Token(Token = "0x4002DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform newWeaponHolderATM;

		[Token(Token = "0x4002DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform newWeaponHolderATMSecondary;

		[Token(Token = "0x4002DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Tween m_characterOutlineTween;

		[Token(Token = "0x4002DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform gun;

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xDF7F98", Offset = "0xDF7F98", VA = "0xDF7F98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xDF82A0", Offset = "0xDF82A0", VA = "0xDF82A0")]
		public void UpdateCharacter()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xDF2024", Offset = "0xDF2024", VA = "0xDF2024")]
		public void InstantiateCharacter(GameObject character)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xDF8498", Offset = "0xDF8498", VA = "0xDF8498")]
		private void AddCharacterOutline(GameObject character)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xDF8ADC", Offset = "0xDF8ADC", VA = "0xDF8ADC")]
		public void TurnCharacterOutlineOff(bool turnOff)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xDF8BFC", Offset = "0xDF8BFC", VA = "0xDF8BFC")]
		private void EnableCharacterOutline(bool enable)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xDF7FF8", Offset = "0xDF7FF8", VA = "0xDF7FF8")]
		private void CheckIfHeadIsVisible()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xDF86A8", Offset = "0xDF86A8", VA = "0xDF86A8")]
		private void SwapCharacter(PlayerCharacter newCharacter)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xDF8E28", Offset = "0xDF8E28", VA = "0xDF8E28")]
		private void CopyPlayerAnimationState(Animator originalAnimator, Animator newAnimator)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xDF90F0", Offset = "0xDF90F0", VA = "0xDF90F0")]
		private void SetAnimatorState(Animator animator)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xDF9260", Offset = "0xDF9260", VA = "0xDF9260")]
		public PlayerCustomization()
		{
		}
	}
	[Token(Token = "0x2000523")]
	[CreateAssetMenu(fileName = "New ZInv Weapon UI List", menuName = "Alvo/ZInv Weapon UI List")]
	public class ZInvWeaponsUIList : ScriptableObject
	{
		[Token(Token = "0x4002DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ZInvIcon[] zInvIcons;

		[Token(Token = "0x170003D2")]
		public ZInvIcon this[int i]
		{
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0xDF94C4", Offset = "0xDF94C4", VA = "0xDF94C4")]
			get
			{
				return default(ZInvIcon);
			}
		}

		[Token(Token = "0x170003D3")]
		public int Count
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0xDF94F8", Offset = "0xDF94F8", VA = "0xDF94F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xDF93B8", Offset = "0xDF93B8", VA = "0xDF93B8")]
		public ZInvIcon GetByItemId(int id)
		{
			return default(ZInvIcon);
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xDF9514", Offset = "0xDF9514", VA = "0xDF9514")]
		public ZInvWeaponsUIList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000524")]
	public struct ZInvIcon
	{
		[Token(Token = "0x4002DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int itemNumber;

		[Token(Token = "0x4002DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject uiPfb;
	}
	[Token(Token = "0x2000525")]
	[CreateAssetMenu(fileName = "New ZShop Cost List", menuName = "Alvo/ZShop Cost List")]
	public class ZShopCostList : ScriptableObject
	{
		[Token(Token = "0x4002DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ItemCost[] costs;

		[Token(Token = "0x170003D4")]
		public ItemCost this[int i]
		{
			[Token(Token = "0x6002001")]
			[Address(RVA = "0xDF9618", Offset = "0xDF9618", VA = "0xDF9618")]
			get
			{
				return default(ItemCost);
			}
		}

		[Token(Token = "0x170003D5")]
		public int Count
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0xDF9648", Offset = "0xDF9648", VA = "0xDF9648")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xDF951C", Offset = "0xDF951C", VA = "0xDF951C")]
		public ItemCost GetByItemId(int id)
		{
			return default(ItemCost);
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xDF9664", Offset = "0xDF9664", VA = "0xDF9664")]
		public ZShopCostList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000526")]
	public struct ItemCost
	{
		[Token(Token = "0x4002DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ItemNumber;

		[Token(Token = "0x4002DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Cost;
	}
	[Token(Token = "0x2000527")]
	public class NetworkSpawner : PunBehaviour
	{
		[Token(Token = "0x2000528")]
		public struct LocalSpawnRequest
		{
			[Token(Token = "0x4002DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool HasReceivedPermision;

			[Token(Token = "0x4002DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int PlayerId;

			[Token(Token = "0x4002DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Action<Vector3> Callback;

			[Token(Token = "0x4002DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double StartTime;

			[Token(Token = "0x6002011")]
			[Address(RVA = "0xDFB0D0", Offset = "0xDFB0D0", VA = "0xDFB0D0")]
			public void FlagPermissionReceival()
			{
			}
		}

		[Token(Token = "0x2000529")]
		public struct PlayerToRespawn
		{
			[Token(Token = "0x4002DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int PingCount;

			[Token(Token = "0x4002DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int PhotonId;

			[Token(Token = "0x4002DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int PlayerId;

			[Token(Token = "0x4002DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double StartTime;

			[Token(Token = "0x6002012")]
			[Address(RVA = "0xDFA39C", Offset = "0xDFA39C", VA = "0xDFA39C")]
			public void Ping()
			{
			}
		}

		[Token(Token = "0x4002DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerManager m_PlayerManager;

		[Token(Token = "0x4002DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaiseEventOptions m_MasterEventOptions;

		[Token(Token = "0x4002DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RaiseEventOptions m_TargetActorEventOptions;

		[Token(Token = "0x4002DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<PlayerToRespawn> m_MasterClientRespawnQueue;

		[Token(Token = "0x4002DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<LocalSpawnRequest> m_LocalRequests;

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xDF966C", Offset = "0xDF966C", VA = "0xDF966C")]
		public void RequestSpawnPermission(int playerId, Action<Vector3> callback)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xDF9900", Offset = "0xDF9900", VA = "0xDF9900")]
		public void NotifySpawnCompletion(int playerId, Vector3 spawnPosition)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xDF9B30", Offset = "0xDF9B30", VA = "0xDF9B30", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xDF9D94", Offset = "0xDF9D94", VA = "0xDF9D94", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xDF9E70", Offset = "0xDF9E70", VA = "0xDF9E70")]
		private void Update()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xDFA3AC", Offset = "0xDFA3AC", VA = "0xDFA3AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xDFA450", Offset = "0xDFA450", VA = "0xDFA450")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xDFA4F4", Offset = "0xDFA4F4", VA = "0xDFA4F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xDFA5E8", Offset = "0xDFA5E8", VA = "0xDFA5E8")]
		private void OnPhotonEvent(byte eventCode, object content, int senderId)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xDFA85C", Offset = "0xDFA85C", VA = "0xDFA85C")]
		private void Master_OnPlayerRequestsPermission(int photonId, int playerId)
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xDFAB9C", Offset = "0xDFAB9C", VA = "0xDFAB9C")]
		private void Local_OnReceivedPermission(int playerId, Vector3 lastInQueuePosition)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xDFACD0", Offset = "0xDFACD0", VA = "0xDFACD0")]
		private void Master_OnPlayerSpawned(int playerId, Vector3 spawnPosition)
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xDFB0DC", Offset = "0xDFB0DC", VA = "0xDFB0DC")]
		public NetworkSpawner()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class SpawnAreaOverride : SpawnArea
	{
		[Token(Token = "0x4002DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[Space]
		[Help("SpawnAreaOverride is used to override all the SpawnArea objects from a map, so new players can spawn quickly in a single location.", MessageType.Info)]
		private bool m_UseInEditor;

		[Token(Token = "0x4002DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[SerializeField]
		private bool m_UseInDevelopmentBuild;

		[Token(Token = "0x4002DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[SerializeField]
		private bool m_UseInReleaseBuild;

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xDE9E70", Offset = "0xDE9E70", VA = "0xDE9E70")]
		public bool CanBeUsed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xDFB1E0", Offset = "0xDFB1E0", VA = "0xDFB1E0")]
		public SpawnAreaOverride()
		{
		}
	}
	[Token(Token = "0x200052D")]
	public class SpawnLocationFinder
	{
		[Token(Token = "0x200052E")]
		public enum Stage
		{
			[Token(Token = "0x4002E07")]
			NotUsed,
			[Token(Token = "0x4002E08")]
			TryingRandomPoints,
			[Token(Token = "0x4002E09")]
			PickingTopPoints,
			[Token(Token = "0x4002E0A")]
			Done
		}

		[Token(Token = "0x200052F")]
		[CompilerGenerated]
		private sealed class <FindLocation>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnLocationFinder <>4__this;

			[Token(Token = "0x4002E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerData player;

			[Token(Token = "0x4002E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpawnArea[] spawnPoints;

			[Token(Token = "0x4002E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<PlayerData> players;

			[Token(Token = "0x4002E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<Vector3, Vector3> callback;

			[Token(Token = "0x4002E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <myTeam>5__2;

			[Token(Token = "0x4002E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <spawnIndex>5__3;

			[Token(Token = "0x4002E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <minDistanceToEnemy>5__4;

			[Token(Token = "0x170003DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600202A")]
				[Address(RVA = "0xDFC118", Offset = "0xDFC118", VA = "0xDFC118", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600202C")]
				[Address(RVA = "0xDFC160", Offset = "0xDFC160", VA = "0xDFC160", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002027")]
			[Address(RVA = "0xDFB6F0", Offset = "0xDFB6F0", VA = "0xDFB6F0")]
			[DebuggerHidden]
			public <FindLocation>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002028")]
			[Address(RVA = "0xDFB734", Offset = "0xDFB734", VA = "0xDFB734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0xDFB738", Offset = "0xDFB738", VA = "0xDFB738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600202B")]
			[Address(RVA = "0xDFC120", Offset = "0xDFC120", VA = "0xDFC120", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NetworkSpawner m_NetSpawner;

		[Token(Token = "0x4002DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_GameType;

		[Token(Token = "0x4002DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private LayerMask m_ObstructionMask;

		[Token(Token = "0x4002DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stage m_Stage;

		[Token(Token = "0x4002DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_IterationCount;

		[Token(Token = "0x4002E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<SpawnArea> m_BestPoints;

		[Token(Token = "0x4002E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<float> m_BestDistances;

		[Token(Token = "0x4002E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Vector3> m_ExtraPointsToAvoid;

		[Token(Token = "0x4002E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WaitUntil m_WaitUntilWeGetPermission;

		[Token(Token = "0x4002E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_ReceivedPermission;

		[Token(Token = "0x4002E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_PositionOfLastInQueue;

		[Token(Token = "0x170003D6")]
		public PlayerData Player
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0xDFB1F0", Offset = "0xDFB1F0", VA = "0xDFB1F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600201A")]
			[Address(RVA = "0xDFB1F8", Offset = "0xDFB1F8", VA = "0xDFB1F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public bool IsDone
		{
			[Token(Token = "0x600201B")]
			[Address(RVA = "0xDFB200", Offset = "0xDFB200", VA = "0xDFB200")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600201C")]
			[Address(RVA = "0xDFB208", Offset = "0xDFB208", VA = "0xDFB208")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public Vector3 SpawnLocation
		{
			[Token(Token = "0x600201D")]
			[Address(RVA = "0xDFB214", Offset = "0xDFB214", VA = "0xDFB214")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600201E")]
			[Address(RVA = "0xDFB220", Offset = "0xDFB220", VA = "0xDFB220")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		public Vector3 SpawnRotation
		{
			[Token(Token = "0x600201F")]
			[Address(RVA = "0xDFB22C", Offset = "0xDFB22C", VA = "0xDFB22C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002020")]
			[Address(RVA = "0xDFB238", Offset = "0xDFB238", VA = "0xDFB238")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		public double CompletionTime
		{
			[Token(Token = "0x6002021")]
			[Address(RVA = "0xDFB244", Offset = "0xDFB244", VA = "0xDFB244")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002022")]
			[Address(RVA = "0xDFB24C", Offset = "0xDFB24C", VA = "0xDFB24C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xDFB254", Offset = "0xDFB254", VA = "0xDFB254")]
		public SpawnLocationFinder(LevelManager levelManager)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xDFB660", Offset = "0xDFB660", VA = "0xDFB660")]
		[IteratorStateMachine(typeof(<FindLocation>d__33))]
		public IEnumerator FindLocation(PlayerData player, List<PlayerData> players, SpawnArea[] spawnPoints, Action<Vector3, Vector3> callback)
		{
			return null;
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xDFB718", Offset = "0xDFB718", VA = "0xDFB718")]
		private void OnReceivedPermission(Vector3 positionOfLastInQueue)
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class TDMSpawnConfig : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_ShowSpawnsGizmo;

		[Token(Token = "0x4002E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color m_TeamOneColor;

		[Token(Token = "0x4002E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color m_TeamTwoColor;

		[Token(Token = "0x4002E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		[SerializeField]
		private SpawnArea[] m_TeamOneSpawns;

		[Token(Token = "0x4002E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SpawnArea[] m_TeamTwoSpawns;

		[Token(Token = "0x4002E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Space]
		private SpawnArea m_TeamOneStart;

		[Token(Token = "0x4002E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SpawnArea m_TeamTwoStart;

		[Token(Token = "0x4002E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space]
		[SerializeField]
		private TDMSpawnVolume m_TeamOneVolume;

		[Token(Token = "0x4002E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TDMSpawnVolume m_TeamTwoVolume;

		[Token(Token = "0x170003DD")]
		public SpawnArea[] TeamOneSpawns
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0xDFD168", Offset = "0xDFD168", VA = "0xDFD168")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		public SpawnArea[] TeamTwoSpawns
		{
			[Token(Token = "0x600202E")]
			[Address(RVA = "0xDFD170", Offset = "0xDFD170", VA = "0xDFD170")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		public SpawnArea TeamOneStart
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0xDFD178", Offset = "0xDFD178", VA = "0xDFD178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		public SpawnArea TeamTwoStart
		{
			[Token(Token = "0x6002030")]
			[Address(RVA = "0xDFD180", Offset = "0xDFD180", VA = "0xDFD180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		public TDMSpawnVolume TeamOneVolume
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0xDFD188", Offset = "0xDFD188", VA = "0xDFD188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		public TDMSpawnVolume TeamTwoVolume
		{
			[Token(Token = "0x6002032")]
			[Address(RVA = "0xDFD190", Offset = "0xDFD190", VA = "0xDFD190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xDFD198", Offset = "0xDFD198", VA = "0xDFD198")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xDFD34C", Offset = "0xDFD34C", VA = "0xDFD34C")]
		public TDMSpawnConfig()
		{
		}
	}
	[Token(Token = "0x2000531")]
	[RequireComponent(typeof(BoxCollider))]
	public class TDMSpawnVolume : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_ShowGizmos;

		[Token(Token = "0x4002E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoxCollider m_Trigger;

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xDFD374", Offset = "0xDFD374", VA = "0xDFD374")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xDFD490", Offset = "0xDFD490", VA = "0xDFD490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xDFD4F0", Offset = "0xDFD4F0", VA = "0xDFD4F0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xDFD644", Offset = "0xDFD644", VA = "0xDFD644")]
		public TDMSpawnVolume()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class MenuCharacterDisplayStartSetter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MenuCharacterDisplay m_MenuCharacterDisplay;

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xDFD654", Offset = "0xDFD654", VA = "0xDFD654")]
		private void Start()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xDFD7CC", Offset = "0xDFD7CC", VA = "0xDFD7CC")]
		public MenuCharacterDisplayStartSetter()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class RotateSteps : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform rectComponent;

		[Token(Token = "0x4002E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_lastRotationTime;

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xDFD7D4", Offset = "0xDFD7D4", VA = "0xDFD7D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xDFD824", Offset = "0xDFD824", VA = "0xDFD824")]
		private void Update()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xDFD8D4", Offset = "0xDFD8D4", VA = "0xDFD8D4")]
		public RotateSteps()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class HandAnim : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRNode xrNode;

		[Token(Token = "0x4002E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] touchInputs;

		[Token(Token = "0x4002E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator m_animator;

		[Token(Token = "0x4002E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandMotionActions handMotion;

		[Token(Token = "0x4002E27")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4002E28")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4002E29")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4002E2A")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4002E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4002E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4002E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4002E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4002E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float anim_frames;

		[Token(Token = "0x4002E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float grip_state;

		[Token(Token = "0x4002E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float trigger_state;

		[Token(Token = "0x4002E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float triggerCap_state;

		[Token(Token = "0x4002E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float thumbCap_state;

		[Token(Token = "0x4002E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space]
		public Transform m_Hand;

		[Token(Token = "0x4002E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Space]
		public Transform[] m_Thumb;

		[Token(Token = "0x4002E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform[] m_Index;

		[Token(Token = "0x4002E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform[] m_Middle;

		[Token(Token = "0x4002E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform[] m_Ring;

		[Token(Token = "0x4002E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] m_Pinky;

		[Token(Token = "0x4002E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float target;

		[Token(Token = "0x4002E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float delta;

		[Token(Token = "0x4002E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool gripState;

		[Token(Token = "0x4002E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool indexState;

		[Token(Token = "0x4002E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool thumbState;

		[Token(Token = "0x4002E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float timeCount;

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xDFD8DC", Offset = "0xDFD8DC", VA = "0xDFD8DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xDFD950", Offset = "0xDFD950", VA = "0xDFD950")]
		private void Start()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xDFDA24", Offset = "0xDFDA24", VA = "0xDFDA24")]
		private void Update()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xDFE070", Offset = "0xDFE070", VA = "0xDFE070")]
		public HandAnim()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class HandGrabber : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LayerMask gunLayer;

		[Token(Token = "0x4002E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private LayerMask grabAreaLayer;

		[Token(Token = "0x4002E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandAnim hand;

		[Token(Token = "0x4002E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandMotionActions handActions;

		[Token(Token = "0x4002E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool leftHand;

		[Token(Token = "0x4002E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VrInput m_vrInput;

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xDFE088", Offset = "0xDFE088", VA = "0xDFE088")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xDFE178", Offset = "0xDFE178", VA = "0xDFE178")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xDFE1AC", Offset = "0xDFE1AC", VA = "0xDFE1AC")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xDFE314", Offset = "0xDFE314", VA = "0xDFE314")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xDFE45C", Offset = "0xDFE45C", VA = "0xDFE45C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xDFE58C", Offset = "0xDFE58C", VA = "0xDFE58C")]
		public HandGrabber()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public enum MotionActions
	{
		[Token(Token = "0x4002E47")]
		None,
		[Token(Token = "0x4002E48")]
		Grenade,
		[Token(Token = "0x4002E49")]
		Interactable,
		[Token(Token = "0x4002E4A")]
		Switch
	}
	[Token(Token = "0x2000537")]
	public enum GrabbingArea
	{
		[Token(Token = "0x4002E4C")]
		None,
		[Token(Token = "0x4002E4D")]
		Grenade,
		[Token(Token = "0x4002E4E")]
		Interactable
	}
	[Token(Token = "0x2000538")]
	public class HandMotionActions : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000539")]
		public class InteractableReference
		{
			[Token(Token = "0x4002E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InteractableID m_InteractableID;

			[Token(Token = "0x4002E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform m_Transform;

			[Token(Token = "0x6002067")]
			[Address(RVA = "0xE00EF0", Offset = "0xE00EF0", VA = "0xE00EF0")]
			public InteractableReference()
			{
			}
		}

		[Token(Token = "0x4002E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandAnim m_Hand;

		[Token(Token = "0x4002E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_T;

		[Token(Token = "0x4002E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VrKeycode m_InputButton;

		[Token(Token = "0x4002E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VrRigHelper m_RigHelper;

		[Token(Token = "0x4002E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform m_Head;

		[Token(Token = "0x4002E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HandMotionActions m_OtherHand;

		[Token(Token = "0x4002E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ArmaturePoseMatcher m_Apm;

		[Token(Token = "0x4002E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GrabbingArea m_CurrentGrabArea;

		[Token(Token = "0x4002E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Header("Head Distance checks")]
		public float m_HeadsetMaxDistance;

		[Token(Token = "0x4002E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_HeadsetYDiference;

		[Token(Token = "0x4002E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_HeadsetBehindTreshold;

		[Token(Token = "0x4002E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Waist distanc checks")]
		public float m_WaistYDiference;

		[Token(Token = "0x4002E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Header("Grenade Actions")]
		public float m_TrowSpeed;

		[Token(Token = "0x4002E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_GrenadeDistanceToTrow;

		[Token(Token = "0x4002E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VrGranadeController m_grenadeController;

		[Token(Token = "0x4002E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool m_LeftHand;

		[Token(Token = "0x4002E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_distanceAtCheck;

		[Token(Token = "0x4002E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MotionActions m_CurrentAction;

		[Token(Token = "0x4002E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Interactable> m_CurrentHoveredInteractables;

		[Token(Token = "0x4002E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Interactable m_CurrentGrabbedInteractable;

		[Token(Token = "0x4002E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Reload Gos")]
		public InteractableReference[] m_InteractableReferences;

		[Token(Token = "0x4002E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject[] m_MagazineGos;

		[Token(Token = "0x4002E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<InteractableID, Transform> m_InteractableReferencesDictionary;

		[Token(Token = "0x4002E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioSource m_SfxAudioSource;

		[Token(Token = "0x4002E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip m_GrabClip;

		[Token(Token = "0x4002E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip m_LetGoClip;

		[Token(Token = "0x4002E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform m_originalParent;

		[Token(Token = "0x4002E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public VrKeycode m_LastGrabbedInteractableWith;

		[Token(Token = "0x4002E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public bool m_LockedInteractablePulled;

		[Token(Token = "0x4002E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VrManager m_vrManager;

		[Token(Token = "0x4002E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private VrInput m_vrInput;

		[Token(Token = "0x4002E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private VrAudioManager m_vrAudioManager;

		[Token(Token = "0x4002E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TheForce m_TheForce;

		[Token(Token = "0x170003E3")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6002048")]
			[Address(RVA = "0xDFE594", Offset = "0xDFE594", VA = "0xDFE594")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xDFE5E4", Offset = "0xDFE5E4", VA = "0xDFE5E4")]
		public bool IsHovered(Interactable interactable)
		{
			return default(bool);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xDFE63C", Offset = "0xDFE63C", VA = "0xDFE63C")]
		private bool HoveringSomething()
		{
			return default(bool);
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xDFE690", Offset = "0xDFE690", VA = "0xDFE690")]
		public void AddHover(Interactable interactable)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xDFE764", Offset = "0xDFE764", VA = "0xDFE764")]
		public void RemoveHover(Interactable interactable)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xDFE7F4", Offset = "0xDFE7F4", VA = "0xDFE7F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xDFE92C", Offset = "0xDFE92C", VA = "0xDFE92C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xDFE954", Offset = "0xDFE954", VA = "0xDFE954")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xDFE974", Offset = "0xDFE974", VA = "0xDFE974")]
		public void SetUp()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xDFEAE0", Offset = "0xDFEAE0", VA = "0xDFEAE0")]
		private void TrySetupDictionary()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xDFEBD0", Offset = "0xDFEBD0", VA = "0xDFEBD0")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xDFF4EC", Offset = "0xDFF4EC", VA = "0xDFF4EC")]
		public void DoLateUpdate()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xDFF2FC", Offset = "0xDFF2FC", VA = "0xDFF2FC")]
		public bool GrabbedInteractableIsPump()
		{
			return default(bool);
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xDFEDB8", Offset = "0xDFEDB8", VA = "0xDFEDB8")]
		private void UpdateActions()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xDFFD44", Offset = "0xDFFD44", VA = "0xDFFD44")]
		private void GrenadeAction()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xDFF84C", Offset = "0xDFF84C", VA = "0xDFF84C")]
		private void UpdateGrenadeAction()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xDFFDFC", Offset = "0xDFFDFC", VA = "0xDFFDFC")]
		private void SwitchGunAction(bool mainSide)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xE000CC", Offset = "0xE000CC", VA = "0xE000CC")]
		public void LockPosition()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xE00248", Offset = "0xE00248", VA = "0xE00248")]
		public void UnlockPosition()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xE003DC", Offset = "0xE003DC", VA = "0xE003DC")]
		public void InteractableAction(Interactable interactableToGrab, bool usingTheForce)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xDFFA60", Offset = "0xDFFA60", VA = "0xDFFA60")]
		private void UpdateInteractableAction()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xDFF3E0", Offset = "0xDFF3E0", VA = "0xDFF3E0")]
		public void LetInterctableGo(bool fromButtonPress = false)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xE00B70", Offset = "0xE00B70", VA = "0xE00B70")]
		public void ForceGrabPump(Interactable interactable)
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xE00DE8", Offset = "0xE00DE8", VA = "0xE00DE8")]
		public void PlayGrabClip()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xE00DF0", Offset = "0xE00DF0", VA = "0xE00DF0")]
		public void PlayLetGoClip()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xE008D4", Offset = "0xE008D4", VA = "0xE008D4")]
		public void PlayClip(AudioClip clip)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xDFEDD8", Offset = "0xDFEDD8", VA = "0xDFEDD8")]
		private bool HeadGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xDFF01C", Offset = "0xDFF01C", VA = "0xDFF01C")]
		private bool WaistGrab(VrKeycode attemptedToGrabWithKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xE00098", Offset = "0xE00098", VA = "0xE00098")]
		public bool IsMainHand()
		{
			return default(bool);
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xE00E58", Offset = "0xE00E58", VA = "0xE00E58")]
		public HandMotionActions()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class HandsSetup : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space]
		[Header("HAND TRACKING TYPE")]
		public HandMatchTypes m_LeftHandMatchType;

		[Token(Token = "0x4002E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public HandMatchTypes m_RightHandMatchType;

		[Token(Token = "0x4002E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_IgnoreTrackedHand;

		[Token(Token = "0x4002E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Hands")]
		[Space]
		public Hand m_LeftHand;

		[Token(Token = "0x4002E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Hand m_RightHand;

		[Token(Token = "0x4002E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Helpers Set Up Targets")]
		[Space]
		public ArmaturePoseMatcher m_Apm;

		[Token(Token = "0x4002E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HandAnim m_LeftTrackedHand;

		[Token(Token = "0x4002E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HandAnim m_RightTrackedHand;

		[Token(Token = "0x4002E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform m_SourcePalmL;

		[Token(Token = "0x4002E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform m_SourcePalmR;

		[Token(Token = "0x4002E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Debug Test")]
		[Space]
		public bool m_TwoHands;

		[Token(Token = "0x4002E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool m_LeftHanded;

		[Token(Token = "0x4002E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool m_GrabbingGun;

		[Token(Token = "0x4002E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool m_DualWield;

		[Token(Token = "0x4002E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_UpdateInEditorActive;

		[Token(Token = "0x4002E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Space]
		private PositionRotation m_offsetAtm;

		[Token(Token = "0x4002E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform m_sourceAtm;

		[Token(Token = "0x4002E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_anchorAtm;

		[Token(Token = "0x4002E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WeaponBehavior m_weaponBehaviour;

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xE00EF8", Offset = "0xE00EF8", VA = "0xE00EF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xE01918", Offset = "0xE01918", VA = "0xE01918")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xE0103C", Offset = "0xE0103C", VA = "0xE0103C")]
		public void SetValuesToArmaturePoseMatcher()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xE01B6C", Offset = "0xE01B6C", VA = "0xE01B6C")]
		public void SetAllValuesToPoseMatcher()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xE01A68", Offset = "0xE01A68", VA = "0xE01A68")]
		private void SetLeftHandValuesPoseMatcher()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xE01964", Offset = "0xE01964", VA = "0xE01964")]
		private void SetRightHandValuesPoseMatcher()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xE01B84", Offset = "0xE01B84", VA = "0xE01B84")]
		private void SetFingersvalues(BonePair[] origin, BonePair[] destination)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xE01C1C", Offset = "0xE01C1C", VA = "0xE01C1C")]
		public void TemporaryHandFollow()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xE011CC", Offset = "0xE011CC", VA = "0xE011CC")]
		public void SetEverything()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xE02090", Offset = "0xE02090", VA = "0xE02090")]
		public HandsSetup()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class RespawnLoadingUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_FFAMessage;

		[Token(Token = "0x4002E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform m_FFALoadIcon;

		[Token(Token = "0x4002E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		[SerializeField]
		private GameObject m_TDMMessage;

		[Token(Token = "0x4002E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform m_TDMLoadIcon;

		[Token(Token = "0x4002E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Space]
		private GameObject m_HPMessage;

		[Token(Token = "0x4002E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform m_HPIcon;

		[Token(Token = "0x4002E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Space]
		private GameObject m_message;

		[Token(Token = "0x4002E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform m_icon;

		[Token(Token = "0x4002E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Space]
		[SerializeField]
		private float m_IconRotationSpeed;

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xE02098", Offset = "0xE02098", VA = "0xE02098")]
		public void Show(bool show, int gameType)
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xE021E0", Offset = "0xE021E0", VA = "0xE021E0")]
		public void Show(bool _show, GameMode _gameMode)
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xE02214", Offset = "0xE02214", VA = "0xE02214")]
		private void Update()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xE022A8", Offset = "0xE022A8", VA = "0xE022A8")]
		public RespawnLoadingUI()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public static class AlvoConsoleAlarm
	{
		[Token(Token = "0x6002076")]
		[Address(RVA = "0xE022B8", Offset = "0xE022B8", VA = "0xE022B8")]
		public static void WorldNumberDebug(int _worldNumber)
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class RadialFillControler : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpriteRenderer m_renderer;

		[Token(Token = "0x4002E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MaterialPropertyBlock m_matBlock;

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xE02474", Offset = "0xE02474", VA = "0xE02474")]
		private void Init()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xE02510", Offset = "0xE02510", VA = "0xE02510")]
		public void SetAmount(float _p)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xE025C4", Offset = "0xE025C4", VA = "0xE025C4")]
		public void SetAmount(double _p)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xE025CC", Offset = "0xE025CC", VA = "0xE025CC")]
		public void SetFullAmount()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xE02644", Offset = "0xE02644", VA = "0xE02644")]
		public RadialFillControler()
		{
		}
	}
	[Token(Token = "0x200053E")]
	public class SpaceMarkerV2 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002E90")]
		private const float kDistanceBeginScale = 28f;

		[Token(Token = "0x4002E91")]
		private const float kDistanceMaxScale = 125f;

		[Token(Token = "0x4002E92")]
		private const float kMaxScale = 7f;

		[Token(Token = "0x4002E93")]
		private const float kAlphaDistanceBegin = 30f;

		[Token(Token = "0x4002E94")]
		private const float kAlphaMinPercent = 0.2f;

		[Token(Token = "0x4002E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_originalAlpha;

		[Token(Token = "0x4002E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_lookAtTf;

		[Token(Token = "0x4002E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x4002E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpriteRenderer m_spriteRenderer;

		[Token(Token = "0x4002E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RadialFillControler m_cooldownRadial;

		[Token(Token = "0x4002E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_originalScale;

		[Token(Token = "0x4002E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_maxScaleSize;

		[Token(Token = "0x4002E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SpriteRenderer m_symbolRenderer;

		[Token(Token = "0x4002E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpriteRenderer m_minimapMarker;

		[Token(Token = "0x170003E4")]
		public RadialFillControler CoolDownRadial
		{
			[Token(Token = "0x600207C")]
			[Address(RVA = "0xE0264C", Offset = "0xE0264C", VA = "0xE0264C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		public SpriteRenderer MinimapMarker
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0xE026E4", Offset = "0xE026E4", VA = "0xE026E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xE026EC", Offset = "0xE026EC", VA = "0xE026EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xE0282C", Offset = "0xE0282C", VA = "0xE0282C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xE02998", Offset = "0xE02998", VA = "0xE02998")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xE02C30", Offset = "0xE02C30", VA = "0xE02C30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xE02E1C", Offset = "0xE02E1C", VA = "0xE02E1C")]
		private void CacheLookAt()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xE02E5C", Offset = "0xE02E5C", VA = "0xE02E5C")]
		public void SetActive(bool _active)
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xE02F08", Offset = "0xE02F08", VA = "0xE02F08")]
		public void SetColor(Color _color)
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xE02B94", Offset = "0xE02B94", VA = "0xE02B94")]
		private void SetAlpha(float _a)
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xE02F60", Offset = "0xE02F60", VA = "0xE02F60")]
		private void OnSettingsOpened()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xE03000", Offset = "0xE03000", VA = "0xE03000")]
		private void OnSettingsClosed()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xE030A0", Offset = "0xE030A0", VA = "0xE030A0")]
		public SpaceMarkerV2()
		{
		}
	}
	[Token(Token = "0x200053F")]
	[AttributeUsage(AttributeTargets.Field)]
	public class ShowIf : PropertyAttribute
	{
		[Token(Token = "0x4002E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string m_ConditionProperty;

		[Token(Token = "0x4002E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool m_RequiredBool;

		[Token(Token = "0x4002EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int m_RequiredInt;

		[Token(Token = "0x4002EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly float m_RequiredFloat;

		[Token(Token = "0x4002EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string m_RequiredString;

		[Token(Token = "0x4002EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Vector3 m_RequiredVector3;

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xE030A8", Offset = "0xE030A8", VA = "0xE030A8")]
		public ShowIf(string condition, bool requiredValue)
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xE03130", Offset = "0xE03130", VA = "0xE03130")]
		public ShowIf(string condition, int requiredValue)
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xE031B8", Offset = "0xE031B8", VA = "0xE031B8")]
		public ShowIf(string condition, float requiredValue)
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xE03248", Offset = "0xE03248", VA = "0xE03248")]
		public ShowIf(string condition, string requiredValue)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xE032D0", Offset = "0xE032D0", VA = "0xE032D0")]
		public ShowIf(string condition, Vector3 requiredValue)
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class TagAttribute : PropertyAttribute
	{
		[Token(Token = "0x600208E")]
		[Address(RVA = "0xE03374", Offset = "0xE03374", VA = "0xE03374")]
		public TagAttribute()
		{
		}
	}
	[Token(Token = "0x2000541")]
	public enum HandMatchTypes
	{
		[Token(Token = "0x4002EA5")]
		None,
		[Token(Token = "0x4002EA6")]
		MatchOculusHand,
		[Token(Token = "0x4002EA7")]
		MatchOnlyGunHandPos,
		[Token(Token = "0x4002EA8")]
		FullMatchGun,
		[Token(Token = "0x4002EA9")]
		SetPose,
		[Token(Token = "0x4002EAA")]
		SetFull,
		[Token(Token = "0x4002EAB")]
		MatchOnlyOculusHandPos
	}
	[Token(Token = "0x2000542")]
	[ExecuteInEditMode]
	public class ArmaturePoseMatcher : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("DEBUG & SETUP")]
		[Space]
		public bool m_MatchBonesInEditor;

		[Token(Token = "0x4002EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandAnim m_LeftTrackedHand;

		[Token(Token = "0x4002EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandAnim m_RightTrackedHand;

		[Token(Token = "0x4002EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_SetUp;

		[Token(Token = "0x4002EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_HandsMesh;

		[Token(Token = "0x4002EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_LeftHanded;

		[Token(Token = "0x4002EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AlvoWatch m_Watch;

		[Token(Token = "0x4002EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HandMatchTypes m_leftHandMatchType;

		[Token(Token = "0x4002EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private HandMatchTypes m_rightHandMatchType;

		[Token(Token = "0x4002EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("HANDS")]
		[Space]
		public Hand m_LeftHand;

		[Token(Token = "0x4002EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Hand m_RightHand;

		[Token(Token = "0x4002EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WeaponInformation m_GrenadeWpn;

		[Token(Token = "0x4002EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<BonePair> m_bonesToMatchL;

		[Token(Token = "0x4002EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<BonePair> m_bonesToMatchR;

		[Token(Token = "0x4002EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PositionRotation m_offsetAtm;

		[Token(Token = "0x4002EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_sourceAtm;

		[Token(Token = "0x4002EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_anchorAtm;

		[Token(Token = "0x170003E6")]
		public HandMatchTypes LeftHandMatchType
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0xE0337C", Offset = "0xE0337C", VA = "0xE0337C")]
			get
			{
				return default(HandMatchTypes);
			}
			[Token(Token = "0x6002090")]
			[Address(RVA = "0xE01DD0", Offset = "0xE01DD0", VA = "0xE01DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public HandMatchTypes RightHandMatchType
		{
			[Token(Token = "0x6002091")]
			[Address(RVA = "0xE03384", Offset = "0xE03384", VA = "0xE03384")]
			get
			{
				return default(HandMatchTypes);
			}
			[Token(Token = "0x6002092")]
			[Address(RVA = "0xE01EDC", Offset = "0xE01EDC", VA = "0xE01EDC")]
			set
			{
			}
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xE0338C", Offset = "0xE0338C", VA = "0xE0338C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xE03628", Offset = "0xE03628", VA = "0xE03628")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xE0372C", Offset = "0xE0372C", VA = "0xE0372C")]
		private void MatchHand(Hand hand, HandMatchTypes status, List<BonePair> bonesToMatch, bool leftHanded)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xE038A4", Offset = "0xE038A4", VA = "0xE038A4")]
		private void MatchBone(BonePair bonePair, bool trackedHand = false, bool grenadeGrab = false, bool leftHanded = false)
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xE03B08", Offset = "0xE03B08", VA = "0xE03B08")]
		public void SetGrenadeGrab()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xE00648", Offset = "0xE00648", VA = "0xE00648")]
		public void SetInteractableGrab(DarkPose darkPose, bool leftHand)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xE00B5C", Offset = "0xE00B5C", VA = "0xE00B5C")]
		public void SetHandFullMatch(bool rightHand = true)
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xE01FE8", Offset = "0xE01FE8", VA = "0xE01FE8")]
		public void SetHandPose(Hand poseMatcherHand, Hand localHand, int type = 0, bool leftHanded = false)
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xE03FFC", Offset = "0xE03FFC", VA = "0xE03FFC")]
		public void SetFingerPose(BonePair[] poseMatcherFinger, BonePair[] localFinger, int type = 0, bool leftHanded = false)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xE040FC", Offset = "0xE040FC", VA = "0xE040FC")]
		public ArmaturePoseMatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000543")]
	public class Hand
	{
		[Token(Token = "0x4002EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public BonePair m_Hand;

		[Token(Token = "0x4002EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space]
		[SerializeField]
		public BonePair[] m_Thumb;

		[Token(Token = "0x4002EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public BonePair[] m_Index;

		[Token(Token = "0x4002EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public BonePair[] m_Middle;

		[Token(Token = "0x4002EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public BonePair[] m_Ring;

		[Token(Token = "0x4002EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public BonePair[] m_Pinky;

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xE0419C", Offset = "0xE0419C", VA = "0xE0419C")]
		public Hand()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000544")]
	public class BonePair
	{
		[Token(Token = "0x4002EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Source;

		[Token(Token = "0x4002EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_SourceLeftHanded;

		[Token(Token = "0x4002EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_TrackedHandSource;

		[Token(Token = "0x4002EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_Target;

		[Token(Token = "0x4002EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space]
		public Transform m_Anchor;

		[Token(Token = "0x4002EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform m_AnchorLeftHanded;

		[Token(Token = "0x4002EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_MatchPosition;

		[Token(Token = "0x4002ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool m_MatchRotation;

		[Token(Token = "0x4002ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space]
		public PositionRotation m_DefaultOffset;

		[Token(Token = "0x4002ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PositionRotation m_TrackedHandOffset;

		[Token(Token = "0x4002ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PositionRotation m_GunGrabPose;

		[Token(Token = "0x4002ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PositionRotation m_GrenadeGrabPose;

		[Token(Token = "0x4002ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PositionRotation m_LeftHandedDefaultOffset;

		[Token(Token = "0x4002ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PositionRotation m_LeftHandedGunGrabPose;

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xE04234", Offset = "0xE04234", VA = "0xE04234")]
		public BonePair()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000545")]
	public class PositionRotation
	{
		[Token(Token = "0x4002ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 m_Position;

		[Token(Token = "0x4002ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion m_Rotation;

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xE04244", Offset = "0xE04244", VA = "0xE04244")]
		public PositionRotation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000546")]
	public class PositionAndRotationVector
	{
		[Token(Token = "0x4002ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 m_Position;

		[Token(Token = "0x4002ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 m_Rotation;

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xE0424C", Offset = "0xE0424C", VA = "0xE0424C")]
		public PositionAndRotationVector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000547")]
	public class AnimationOverrideClips
	{
		[Serializable]
		[Token(Token = "0x2000548")]
		public struct AnimationClipPair
		{
			[Token(Token = "0x4002ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnimationClip Original;

			[Token(Token = "0x4002ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AnimationClip Override;
		}

		[Token(Token = "0x4002ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private RuntimeAnimatorController m_Controller;

		[Token(Token = "0x4002ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationClipPair[] m_Clips;

		[Token(Token = "0x170003E8")]
		public RuntimeAnimatorController Controller
		{
			[Token(Token = "0x60020A2")]
			[Address(RVA = "0xE04254", Offset = "0xE04254", VA = "0xE04254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E9")]
		public AnimationClipPair[] Clips
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0xE0425C", Offset = "0xE0425C", VA = "0xE0425C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xE04264", Offset = "0xE04264", VA = "0xE04264")]
		public AnimationOverrideClips()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public static class ItemSelection
	{
		[Token(Token = "0x60020A5")]
		public static T SelectRandom<T>(this T[] array)
		{
			return (T)null;
		}

		[Token(Token = "0x60020A6")]
		public static T Select<T>(this T[] array, ref int last, SelectionType selectionMethod = SelectionType.Random)
		{
			return (T)null;
		}

		[Token(Token = "0x60020A7")]
		public static T Select<T>(this List<T> list, ref int last, SelectionType selectionMethod = SelectionType.Random)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200054A")]
	public enum SelectionType
	{
		[Token(Token = "0x4002EDA")]
		Random,
		[Token(Token = "0x4002EDB")]
		RandomExcludeLast,
		[Token(Token = "0x4002EDC")]
		Sequence
	}
	[Token(Token = "0x200054B")]
	public class LoadoutIconDisplayer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_PrimaryIcon;

		[Token(Token = "0x4002EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_SecondaryIcon;

		[Token(Token = "0x4002EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_Grenade1Icon;

		[Token(Token = "0x4002EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image m_Grenade2Icon;

		[Token(Token = "0x4002EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image m_TacticalIcon;

		[Token(Token = "0x4002EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_SecondaryDualIcon;

		[Token(Token = "0x4002EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image m_Perk1;

		[Token(Token = "0x4002EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image m_Perk2;

		[Token(Token = "0x4002EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image m_KillStreak1;

		[Token(Token = "0x4002EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image m_KillStreak2;

		[Token(Token = "0x4002EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image m_KillStreak3;

		[Token(Token = "0x4002EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image m_TitleBackground;

		[Token(Token = "0x4002EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color32 m_ActiveColor;

		[Token(Token = "0x4002EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color32 m_InactiveColor;

		[Token(Token = "0x4002EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LoadoutIconDisplayer m_PrevActiveLoadout;

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xE0426C", Offset = "0xE0426C", VA = "0xE0426C")]
		public void ShowIcons(Sprite primary, Sprite secondary, Sprite grenade1, Sprite grenade2, Sprite tactical, Sprite perk1, Sprite perk2, Sprite killStreak1, Sprite killStreak2, Sprite killStreak3, bool isDual, bool hasDoubleTrouble)
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xE04420", Offset = "0xE04420", VA = "0xE04420")]
		public void SetAccent(bool enable)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xE0456C", Offset = "0xE0456C", VA = "0xE0456C")]
		public LoadoutIconDisplayer()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool alwaysOpen;

		[Token(Token = "0x4002EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool add;

		[Token(Token = "0x4002EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool remove;

		[Token(Token = "0x4002EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool draggable;

		[Token(Token = "0x4002EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool singleLine;

		[Token(Token = "0x4002EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool paginate;

		[Token(Token = "0x4002EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool sortable;

		[Token(Token = "0x4002EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int pageSize;

		[Token(Token = "0x4002EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string elementNameProperty;

		[Token(Token = "0x4002EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string elementNameOverride;

		[Token(Token = "0x4002EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string elementIconPath;

		[Token(Token = "0x4002EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Type surrogateType;

		[Token(Token = "0x4002EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string surrogateProperty;

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xE04580", Offset = "0xE04580", VA = "0xE04580")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xE045C0", Offset = "0xE045C0", VA = "0xE045C0")]
		public ReorderableAttribute(string elementNameProperty)
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xE04674", Offset = "0xE04674", VA = "0xE04674")]
		public ReorderableAttribute(string elementNameProperty, string elementIconPath)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xE046C4", Offset = "0xE046C4", VA = "0xE046C4")]
		public ReorderableAttribute(string elementNameProperty, string elementNameOverride, string elementIconPath)
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xE04718", Offset = "0xE04718", VA = "0xE04718")]
		public ReorderableAttribute(bool add, bool remove, bool draggable, [Optional] string elementNameProperty, [Optional] string elementIconPath)
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xE04604", Offset = "0xE04604", VA = "0xE04604")]
		public ReorderableAttribute(bool add, bool remove, bool draggable, [Optional] string elementNameProperty, [Optional] string elementNameOverride, [Optional] string elementIconPath)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054D")]
	public class BooleanList : ReorderableArray<bool>
	{
		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xE0477C", Offset = "0xE0477C", VA = "0xE0477C")]
		public BooleanList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054E")]
	public class IntegerList : ReorderableArray<int>
	{
		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xE047C4", Offset = "0xE047C4", VA = "0xE047C4")]
		public IntegerList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054F")]
	public class FloatList : ReorderableArray<float>
	{
		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xE0480C", Offset = "0xE0480C", VA = "0xE0480C")]
		public FloatList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000550")]
	public class StringList : ReorderableArray<string>
	{
		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xE04854", Offset = "0xE04854", VA = "0xE04854")]
		public StringList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000551")]
	public class Vector2List : ReorderableArray<Vector2>
	{
		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xE0489C", Offset = "0xE0489C", VA = "0xE0489C")]
		public Vector2List()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000552")]
	public class Vector3List : ReorderableArray<Vector3>
	{
		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xE048E4", Offset = "0xE048E4", VA = "0xE048E4")]
		public Vector3List()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000553")]
	public class QuaternionList : ReorderableArray<Quaternion>
	{
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xE0492C", Offset = "0xE0492C", VA = "0xE0492C")]
		public QuaternionList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000554")]
	public class TransformList : ReorderableArray<Transform>
	{
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xE04974", Offset = "0xE04974", VA = "0xE04974")]
		public TransformList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000555")]
	public class RectTransformList : ReorderableArray<RectTransform>
	{
		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xE049BC", Offset = "0xE049BC", VA = "0xE049BC")]
		public RectTransformList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000556")]
	public class TextureList : ReorderableArray<Texture>
	{
		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xE04A04", Offset = "0xE04A04", VA = "0xE04A04")]
		public TextureList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000557")]
	public class AudioClipList : ReorderableArray<AudioClip>
	{
		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xE04A4C", Offset = "0xE04A4C", VA = "0xE04A4C")]
		public AudioClipList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000558")]
	public class ParticleSystemList : ReorderableArray<ParticleSystem>
	{
		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xE04A94", Offset = "0xE04A94", VA = "0xE04A94")]
		public ParticleSystemList()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class RespawnProtectMaterial : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_MaterialToAnimate;

		[Token(Token = "0x4002EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_AddMaterialOnAwake;

		[Token(Token = "0x4002EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Property Animation")]
		[SerializeField]
		private string m_PropertyToAnimate;

		[Token(Token = "0x4002EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 m_PropertyMinMax;

		[Token(Token = "0x4002EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_AnimSpeed;

		[Token(Token = "0x4002EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Space]
		[SerializeField]
		private bool m_UsePropOverride;

		[Token(Token = "0x4002EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_OverridePropValue;

		[Token(Token = "0x4002F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_AnimateProperty;

		[Token(Token = "0x4002F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float m_CurPropertyValue;

		[Token(Token = "0x4002F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_PropertyId;

		[Token(Token = "0x4002F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_RemovedMaterial;

		[Token(Token = "0x4002F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_MaterialRemovalTime;

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xE04ADC", Offset = "0xE04ADC", VA = "0xE04ADC")]
		public void AddMaterialToObject(GameObject obj)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xE04D30", Offset = "0xE04D30", VA = "0xE04D30")]
		public void RemoveMaterialFromObject(GameObject obj)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xE04FF0", Offset = "0xE04FF0", VA = "0xE04FF0")]
		public void QueueMaterialRemoval(float removalTime)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xE04FFC", Offset = "0xE04FFC", VA = "0xE04FFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xE05040", Offset = "0xE05040", VA = "0xE05040")]
		private void Update()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xE05194", Offset = "0xE05194", VA = "0xE05194")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xE051E8", Offset = "0xE051E8", VA = "0xE051E8")]
		public RespawnProtectMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055A")]
	public class SoundPlayerNew
	{
		[Token(Token = "0x4002F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[Reorderable]
		private AudioClipList m_Clips;

		[Token(Token = "0x4002F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_Volume;

		[Token(Token = "0x4002F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 0.5f)]
		[SerializeField]
		private float m_VolumeJitter;

		[Token(Token = "0x4002F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 0.5f)]
		[SerializeField]
		private float m_PitchJitter;

		[Token(Token = "0x4002F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_LastClipPlayed;

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xE051F8", Offset = "0xE051F8", VA = "0xE051F8")]
		public SoundPlayer Clone()
		{
			return null;
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xE05278", Offset = "0xE05278", VA = "0xE05278")]
		public void Play(AudioSource audioSource, float volumeFactor = 1f)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xE05284", Offset = "0xE05284", VA = "0xE05284")]
		public void Play(SelectionType selectionMethod, AudioSource audioSource, float volumeFactor = 1f)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xE0544C", Offset = "0xE0544C", VA = "0xE0544C")]
		public void PlayAtPosition(SelectionType selectionMethod, Vector3 position, float volumeFactor = 1f)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xE05424", Offset = "0xE05424", VA = "0xE05424")]
		private float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xE05554", Offset = "0xE05554", VA = "0xE05554")]
		public SoundPlayerNew()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055B")]
	public class SoundPlayer
	{
		[Token(Token = "0x4002F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[Reorderable]
		private AudioClipList m_Clips;

		[Token(Token = "0x4002F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_VolumeMultiplier;

		[Token(Token = "0x4002F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector2 m_VolumeRange;

		[Token(Token = "0x4002F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector2 m_PitchRange;

		[Token(Token = "0x4002F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_LastClipPlayed;

		[Token(Token = "0x170003EA")]
		public int ClipCount
		{
			[Token(Token = "0x60020CA")]
			[Address(RVA = "0xE05574", Offset = "0xE05574", VA = "0xE05574")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xE055C4", Offset = "0xE055C4", VA = "0xE055C4")]
		public SoundPlayer Clone()
		{
			return null;
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xE05644", Offset = "0xE05644", VA = "0xE05644")]
		public void Play(AudioSource audioSource, float volumeFactor = 1f)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xE05650", Offset = "0xE05650", VA = "0xE05650")]
		public void Play(SelectionType selectionMethod, AudioSource audioSource, float volumeFactor = 1f)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xE0580C", Offset = "0xE0580C", VA = "0xE0580C")]
		public void PlayAtPosition(SelectionType selectionMethod, Vector3 position, float volumeFactor = 1f)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xE057E8", Offset = "0xE057E8", VA = "0xE057E8")]
		private float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xE05908", Offset = "0xE05908", VA = "0xE05908")]
		public SoundPlayer()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class AIAnimationHandler : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055D")]
		public struct NeckSegment
		{
			[Token(Token = "0x4002F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform Transform;

			[Token(Token = "0x4002F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 RotationWeight;
		}

		[Token(Token = "0x4002F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshAgent m_Agent;

		[Token(Token = "0x4002F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Animation Clips")]
		[SerializeField]
		private AnimationOverrideClips m_Clips;

		[Token(Token = "0x4002F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Space]
		private NeckSegment[] m_NeckChain;

		[Token(Token = "0x4002F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_TurnOffset;

		[Token(Token = "0x4002F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_TurnSmoothness;

		[Token(Token = "0x4002F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_RotationHelper;

		[Token(Token = "0x4002F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Space]
		[SerializeField]
		private LayerMask m_GroundMask;

		[Token(Token = "0x4002F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(0f, 5f)]
		private float m_ActorLength;

		[Token(Token = "0x4002F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[Range(0f, 3f)]
		private float m_ActorHeight;

		[Token(Token = "0x4002F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_GroundAngleFwdOffset;

		[Token(Token = "0x4002F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_GroundAngleOverride;

		[Token(Token = "0x4002F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator m_Animator;

		[Token(Token = "0x4002F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_CurOffset;

		[Token(Token = "0x4002F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion m_AgentBaseRotation;

		[Token(Token = "0x4002F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_GroundAngle;

		[Token(Token = "0x4002F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_YPosition;

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xE0592C", Offset = "0xE0592C", VA = "0xE0592C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xE05D7C", Offset = "0xE05D7C", VA = "0xE05D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xE05DB4", Offset = "0xE05DB4", VA = "0xE05DB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xE05E90", Offset = "0xE05E90", VA = "0xE05E90")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xE06694", Offset = "0xE06694", VA = "0xE06694")]
		private void OnChanged_Velocity()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xE06698", Offset = "0xE06698", VA = "0xE06698")]
		private void OnStart_Walk()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xE066F0", Offset = "0xE066F0", VA = "0xE066F0")]
		private void OnStop_Walk()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xE0620C", Offset = "0xE0620C", VA = "0xE0620C")]
		private float CalcGroundAngle()
		{
			return default(float);
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xE06748", Offset = "0xE06748", VA = "0xE06748")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xE06834", Offset = "0xE06834", VA = "0xE06834")]
		public AIAnimationHandler()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public struct DamageInfo
	{
		[Token(Token = "0x170003EB")]
		public float Damage
		{
			[Token(Token = "0x60020DB")]
			[Address(RVA = "0xE06854", Offset = "0xE06854", VA = "0xE06854")]
			[CompilerGenerated]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x60020DC")]
			[Address(RVA = "0xE0685C", Offset = "0xE0685C", VA = "0xE0685C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public Vector3 PositionOfDamager
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0xE06864", Offset = "0xE06864", VA = "0xE06864")]
			[CompilerGenerated]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60020DE")]
			[Address(RVA = "0xE06870", Offset = "0xE06870", VA = "0xE06870")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public Vector3 Direction
		{
			[Token(Token = "0x60020DF")]
			[Address(RVA = "0xE0687C", Offset = "0xE0687C", VA = "0xE0687C")]
			[CompilerGenerated]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60020E0")]
			[Address(RVA = "0xE06888", Offset = "0xE06888", VA = "0xE06888")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public RaycastHit HitInfo
		{
			[Token(Token = "0x60020E1")]
			[Address(RVA = "0xE06894", Offset = "0xE06894", VA = "0xE06894")]
			[CompilerGenerated]
			readonly get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x60020E2")]
			[Address(RVA = "0xE068AC", Offset = "0xE068AC", VA = "0xE068AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public bool IsExplosion
		{
			[Token(Token = "0x60020E3")]
			[Address(RVA = "0xE068CC", Offset = "0xE068CC", VA = "0xE068CC")]
			[CompilerGenerated]
			readonly get
			{
				return default(bool);
			}
			[Token(Token = "0x60020E4")]
			[Address(RVA = "0xE068D4", Offset = "0xE068D4", VA = "0xE068D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public int AttackerID
		{
			[Token(Token = "0x60020E5")]
			[Address(RVA = "0xE068E0", Offset = "0xE068E0", VA = "0xE068E0")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x60020E6")]
			[Address(RVA = "0xE068E8", Offset = "0xE068E8", VA = "0xE068E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public int weaponNumber
		{
			[Token(Token = "0x60020E7")]
			[Address(RVA = "0xE068F0", Offset = "0xE068F0", VA = "0xE068F0")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0xE068F8", Offset = "0xE068F8", VA = "0xE068F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xE06900", Offset = "0xE06900", VA = "0xE06900")]
		public DamageInfo(float damage, Vector3 positionOfDamager, Vector3 direction, RaycastHit hitInfo, bool isExplosion, int weaponNumber, int attackerID)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xE0693C", Offset = "0xE0693C", VA = "0xE0693C")]
		public DamageInfo(float damage, Vector3 positionOfDamager, int weaponNumber, int attackerID)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055F")]
	public class DamageUnityEvent : UnityEvent<DamageReceiver, DamageInfo>
	{
		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xE069C0", Offset = "0xE069C0", VA = "0xE069C0")]
		public DamageUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class DamageReceiver : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DamageUnityEvent DamageTakenEvent;

		[Token(Token = "0x4002F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_IsHead;

		[Token(Token = "0x4002F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Tooltip("Always enabled on mesh colliders")]
		public bool bulletMarks;

		[Token(Token = "0x4002F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool m_CanHitWithGunSwing;

		[Token(Token = "0x4002F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool showHitMarkers;

		[Token(Token = "0x170003F2")]
		public bool IsHead
		{
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xE06A08", Offset = "0xE06A08", VA = "0xE06A08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xE06A10", Offset = "0xE06A10", VA = "0xE06A10")]
		public void AddDamageListener(UnityAction<DamageReceiver, DamageInfo> listener)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xE06A68", Offset = "0xE06A68", VA = "0xE06A68")]
		public void RemoveDamageListener(UnityAction<DamageReceiver, DamageInfo> listener)
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xE06AC0", Offset = "0xE06AC0", VA = "0xE06AC0", Slot = "4")]
		public virtual void TakeDamage(DamageInfo dmgInfo)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xE06B50", Offset = "0xE06B50", VA = "0xE06B50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xE06CA4", Offset = "0xE06CA4", VA = "0xE06CA4")]
		public DamageReceiver()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class BHapticsVRFakeSource : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BodyPart m_BodyPart;

		[Token(Token = "0x4002F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 360f)]
		public float m_AngleX;

		[Token(Token = "0x4002F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_distanceFromHmd;

		[Token(Token = "0x4002F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_timer;

		[Token(Token = "0x4002F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BHapticsVR m_manager;

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xE06CB4", Offset = "0xE06CB4", VA = "0xE06CB4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xE0702C", Offset = "0xE0702C", VA = "0xE0702C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xE07108", Offset = "0xE07108", VA = "0xE07108")]
		public BHapticsVRFakeSource()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class AlvoHinge : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody m_rigidbody;

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xE07110", Offset = "0xE07110", VA = "0xE07110")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xE07168", Offset = "0xE07168", VA = "0xE07168")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xE071E4", Offset = "0xE071E4", VA = "0xE071E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xE072F0", Offset = "0xE072F0", VA = "0xE072F0")]
		public void AdjustHinge(bool leftHanded)
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xE07310", Offset = "0xE07310", VA = "0xE07310")]
		public AlvoHinge()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class NPInteractableManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000564")]
		public class NPInteractable
		{
			[Token(Token = "0x4002F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactable m_Interactable;

			[Token(Token = "0x4002F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 m_OriginalPosition;

			[Token(Token = "0x4002F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public Quaternion m_OriginalRotation;

			[Token(Token = "0x6002100")]
			[Address(RVA = "0xE078E0", Offset = "0xE078E0", VA = "0xE078E0")]
			public NPInteractable()
			{
			}
		}

		[Token(Token = "0x2000567")]
		[CompilerGenerated]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPInteractableManager <>4__this;

			[Token(Token = "0x170003F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002108")]
				[Address(RVA = "0xE07A18", Offset = "0xE07A18", VA = "0xE07A18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600210A")]
				[Address(RVA = "0xE07A60", Offset = "0xE07A60", VA = "0xE07A60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002105")]
			[Address(RVA = "0xE076E0", Offset = "0xE076E0", VA = "0xE076E0")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002106")]
			[Address(RVA = "0xE07920", Offset = "0xE07920", VA = "0xE07920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002107")]
			[Address(RVA = "0xE07924", Offset = "0xE07924", VA = "0xE07924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002109")]
			[Address(RVA = "0xE07A20", Offset = "0xE07A20", VA = "0xE07A20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NPInteractable[] m_NpInteractables;

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xE07318", Offset = "0xE07318", VA = "0xE07318")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xE07478", Offset = "0xE07478", VA = "0xE07478")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xE075D8", Offset = "0xE075D8", VA = "0xE075D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xE07678", Offset = "0xE07678", VA = "0xE07678")]
		[IteratorStateMachine(typeof(<Start>d__4))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xE07708", Offset = "0xE07708", VA = "0xE07708")]
		private void ResetToOriginalState(NPInteractable npInteractable)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xE078D8", Offset = "0xE078D8", VA = "0xE078D8")]
		public NPInteractableManager()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class PlatformEnhancementConfig : ScriptableObject
	{
		[Token(Token = "0x2000569")]
		public enum AlvoQualitySettings
		{
			[Token(Token = "0x4002F43")]
			None,
			[Token(Token = "0x4002F44")]
			Low,
			[Token(Token = "0x4002F45")]
			Mid,
			[Token(Token = "0x4002F46")]
			High
		}

		[Token(Token = "0x4002F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_MuzzleFlashLight;

		[Token(Token = "0x4002F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_PostProcessing;

		[Token(Token = "0x4002F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_WatchLight;

		[Token(Token = "0x4002F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AlvoQualitySettings m_EnvironmentParticles;

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xE07A68", Offset = "0xE07A68", VA = "0xE07A68")]
		public PlatformEnhancementConfig()
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class ColliderListener : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Collider, ColliderListener> m_OnTriggerEnter;

		[Token(Token = "0x4002F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Collider, ColliderListener> m_OnTriggerExit;

		[Token(Token = "0x4002F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<Collision, ColliderListener> m_OnCollisionEnter;

		[Token(Token = "0x4002F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<Collision, ColliderListener> m_OnCollisionExit;

		[Token(Token = "0x4002F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Dictates wether to execute OnTriggerEnter or OnCollisionEnter. Non-trigger events will only be executed if attached to a gameobject with rigidbody.")]
		[SerializeField]
		private bool m_Trigger;

		[Token(Token = "0x4002F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool m_Entered;

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xE07A70", Offset = "0xE07A70", VA = "0xE07A70")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xE07A98", Offset = "0xE07A98", VA = "0xE07A98")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xE07AC0", Offset = "0xE07AC0", VA = "0xE07AC0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xE07AE8", Offset = "0xE07AE8", VA = "0xE07AE8")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xE07B10", Offset = "0xE07B10", VA = "0xE07B10")]
		public ColliderListener()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class DarkPose : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200056C")]
		public class DarkHandSchemePose
		{
			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("When grabbing a docked or locked interactable")]
			public Transform m_DesiredHandTransform;

			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Space]
			public PositionRotation[] m_Thumb;

			[Token(Token = "0x4002F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PositionRotation[] m_Index;

			[Token(Token = "0x4002F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PositionRotation[] m_Middle;

			[Token(Token = "0x4002F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PositionRotation[] m_Ring;

			[Token(Token = "0x4002F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PositionRotation[] m_Pinky;

			[Token(Token = "0x6002113")]
			[Address(RVA = "0xE07B20", Offset = "0xE07B20", VA = "0xE07B20")]
			public DarkHandSchemePose()
			{
			}
		}

		[Token(Token = "0x4002F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DarkHandSchemePose m_LeftHandScheme;

		[Token(Token = "0x4002F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DarkHandSchemePose m_RightHandScheme;

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xE00230", Offset = "0xE00230", VA = "0xE00230")]
		public DarkHandSchemePose GetHandScheme(bool leftHand)
		{
			return null;
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xE07B18", Offset = "0xE07B18", VA = "0xE07B18")]
		public DarkPose()
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class Dock : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200056E")]
		[CompilerGenerated]
		private sealed class <IERefreshCollider>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dock <>4__this;

			[Token(Token = "0x170003F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600211C")]
				[Address(RVA = "0xE07EA0", Offset = "0xE07EA0", VA = "0xE07EA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600211E")]
				[Address(RVA = "0xE07EE8", Offset = "0xE07EE8", VA = "0xE07EE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002119")]
			[Address(RVA = "0xE07D08", Offset = "0xE07D08", VA = "0xE07D08")]
			[DebuggerHidden]
			public <IERefreshCollider>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600211A")]
			[Address(RVA = "0xE07DA0", Offset = "0xE07DA0", VA = "0xE07DA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600211B")]
			[Address(RVA = "0xE07DA4", Offset = "0xE07DA4", VA = "0xE07DA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600211D")]
			[Address(RVA = "0xE07EA8", Offset = "0xE07EA8", VA = "0xE07EA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Only interactables marked with this ID can be docked")]
		public InteractableID m_AllowedInteractable;

		[Token(Token = "0x4002F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Desired position, rotation and scale. Magazines will ignore this and use the gun it's docked in")]
		public Transform m_DockedTransform;

		[Token(Token = "0x4002F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		[HideInInspector]
		public Interactable m_CurrentDockedInterctable;

		[Token(Token = "0x4002F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string m_LastUndockedInteractable;

		[Token(Token = "0x4002F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WeaponBehavior m_WeaponBehavior;

		[Token(Token = "0x4002F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool m_IgnoreNextEvent;

		[Token(Token = "0x4002F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Collider[] m_colliders;

		[Token(Token = "0x4002F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForSeconds m_colliderDelay;

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xE07BB8", Offset = "0xE07BB8", VA = "0xE07BB8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xE07C10", Offset = "0xE07C10", VA = "0xE07C10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xE07C74", Offset = "0xE07C74", VA = "0xE07C74")]
		public void RefreshCollider()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xE07CA0", Offset = "0xE07CA0", VA = "0xE07CA0")]
		[IteratorStateMachine(typeof(<IERefreshCollider>d__11))]
		private IEnumerator IERefreshCollider()
		{
			return null;
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xE07D30", Offset = "0xE07D30", VA = "0xE07D30")]
		public Dock()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public enum InteractableID
	{
		[Token(Token = "0x4002F61")]
		Unspecified,
		[Token(Token = "0x4002F62")]
		D1Mag,
		[Token(Token = "0x4002F63")]
		D2Mag,
		[Token(Token = "0x4002F64")]
		D3Mag,
		[Token(Token = "0x4002F65")]
		D4Mag,
		[Token(Token = "0x4002F66")]
		D5Mag,
		[Token(Token = "0x4002F67")]
		D6Mag,
		[Token(Token = "0x4002F68")]
		D7Mag,
		[Token(Token = "0x4002F69")]
		D8Mag,
		[Token(Token = "0x4002F6A")]
		D9Mag,
		[Token(Token = "0x4002F6B")]
		Skin04Funko,
		[Token(Token = "0x4002F6C")]
		D17Mag,
		[Token(Token = "0x4002F6D")]
		D18Mag
	}
	[Token(Token = "0x2000570")]
	public enum InteractableType
	{
		[Token(Token = "0x4002F6F")]
		Normal,
		[Token(Token = "0x4002F70")]
		LockedInPlace,
		[Token(Token = "0x4002F71")]
		Gun
	}
	[Token(Token = "0x2000571")]
	public class Interactable : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000572")]
		[CompilerGenerated]
		private sealed class <IEOnGrabGunModified>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Interactable <>4__this;

			[Token(Token = "0x170003F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600215B")]
				[Address(RVA = "0xE0B0C8", Offset = "0xE0B0C8", VA = "0xE0B0C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600215D")]
				[Address(RVA = "0xE0B110", Offset = "0xE0B110", VA = "0xE0B110", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002158")]
			[Address(RVA = "0xE0937C", Offset = "0xE0937C", VA = "0xE0937C")]
			[DebuggerHidden]
			public <IEOnGrabGunModified>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6002159")]
			[Address(RVA = "0xE0AFBC", Offset = "0xE0AFBC", VA = "0xE0AFBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600215A")]
			[Address(RVA = "0xE0AFC0", Offset = "0xE0AFC0", VA = "0xE0AFC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600215C")]
			[Address(RVA = "0xE0B0D0", Offset = "0xE0B0D0", VA = "0xE0B0D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000573")]
		[CompilerGenerated]
		private sealed class <DOPlaySfx>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip clip;

			[Token(Token = "0x4002FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Interactable <>4__this;

			[Token(Token = "0x4002FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float? volume;

			[Token(Token = "0x170003FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002161")]
				[Address(RVA = "0xE0B340", Offset = "0xE0B340", VA = "0xE0B340", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002163")]
				[Address(RVA = "0xE0B388", Offset = "0xE0B388", VA = "0xE0B388", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600215E")]
			[Address(RVA = "0xE09DA8", Offset = "0xE09DA8", VA = "0xE09DA8")]
			[DebuggerHidden]
			public <DOPlaySfx>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600215F")]
			[Address(RVA = "0xE0B118", Offset = "0xE0B118", VA = "0xE0B118", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002160")]
			[Address(RVA = "0xE0B11C", Offset = "0xE0B11C", VA = "0xE0B11C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002162")]
			[Address(RVA = "0xE0B348", Offset = "0xE0B348", VA = "0xE0B348", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000574")]
		[CompilerGenerated]
		private sealed class <DoAutoFall>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Interactable <>4__this;

			[Token(Token = "0x170003FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002167")]
				[Address(RVA = "0xE0B63C", Offset = "0xE0B63C", VA = "0xE0B63C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002169")]
				[Address(RVA = "0xE0B684", Offset = "0xE0B684", VA = "0xE0B684", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002164")]
			[Address(RVA = "0xE0A90C", Offset = "0xE0A90C", VA = "0xE0A90C")]
			[DebuggerHidden]
			public <DoAutoFall>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6002165")]
			[Address(RVA = "0xE0B390", Offset = "0xE0B390", VA = "0xE0B390", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002166")]
			[Address(RVA = "0xE0B394", Offset = "0xE0B394", VA = "0xE0B394", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002168")]
			[Address(RVA = "0xE0B644", Offset = "0xE0B644", VA = "0xE0B644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000575")]
		[CompilerGenerated]
		private sealed class <Recycle>d__81 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Interactable <>4__this;

			[Token(Token = "0x170003FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600216D")]
				[Address(RVA = "0xE0B6FC", Offset = "0xE0B6FC", VA = "0xE0B6FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600216F")]
				[Address(RVA = "0xE0B744", Offset = "0xE0B744", VA = "0xE0B744", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600216A")]
			[Address(RVA = "0xE0ACA4", Offset = "0xE0ACA4", VA = "0xE0ACA4")]
			[DebuggerHidden]
			public <Recycle>d__81(int <>1__state)
			{
			}

			[Token(Token = "0x600216B")]
			[Address(RVA = "0xE0B68C", Offset = "0xE0B68C", VA = "0xE0B68C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600216C")]
			[Address(RVA = "0xE0B690", Offset = "0xE0B690", VA = "0xE0B690", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600216E")]
			[Address(RVA = "0xE0B704", Offset = "0xE0B704", VA = "0xE0B704", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002F72")]
		private const float Alpha = 0.35f;

		[Token(Token = "0x4002F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color Red;

		[Token(Token = "0x4002F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Identifies which dock it's allowed in")]
		public InteractableID m_InteractableID;

		[Token(Token = "0x4002F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Controls how the grab and release is handled")]
		public InteractableType m_InteractableType;

		[Token(Token = "0x4002F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_PoolIndex;

		[Token(Token = "0x4002F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VrKeycode[] m_canGrabWith;

		[Token(Token = "0x4002F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VrKeycode[] m_canGrabWithPS4;

		[Token(Token = "0x4002F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<VrKeycode> m_CanGrabWithHash;

		[Token(Token = "0x4002F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public string m_hash;

		[Token(Token = "0x4002F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ColliderListener[] m_GrabTriggers;

		[Token(Token = "0x4002F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Tooltip("Is the interactable inside something?")]
		private bool _docked;

		[Token(Token = "0x4002F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("If docked, which area it's docked on?")]
		public Dock m_DockArea;

		[Token(Token = "0x4002F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool m_OnHand;

		[Token(Token = "0x4002F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[HideInInspector]
		public bool m_OnVest;

		[Token(Token = "0x4002F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool m_PhysicsByDefault;

		[Token(Token = "0x4002F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Outline[] m_Outline;

		[Token(Token = "0x4002F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_RegularHoverOutline;

		[Token(Token = "0x4002F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Tween[] m_outlineFadeTween;

		[Token(Token = "0x4002F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Sequence[] m_outlineBlinkSequence;

		[Token(Token = "0x4002F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_outlineBlinking;

		[Token(Token = "0x4002F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color m_originalOutlineColor;

		[Token(Token = "0x4002F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MeshRenderer[] m_MeshRenderers;

		[Token(Token = "0x4002F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Rigidbody m_Rigidbody;

		[Token(Token = "0x4002F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ColliderListener[] m_MeshColliders;

		[Token(Token = "0x4002F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Collider[] m_ExtraMeshColliders;

		[Token(Token = "0x4002F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Collider[] m_colliders;

		[Token(Token = "0x4002F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioSource m_AudioSource;

		[Token(Token = "0x4002F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip m_ImpactClip;

		[Token(Token = "0x4002F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioClip m_DockingClip;

		[Token(Token = "0x4002F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip m_UndockingClip;

		[Token(Token = "0x4002F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private AudioClip m_lastPlayedClip;

		[Token(Token = "0x4002F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_lastPlayedClipAt;

		[Token(Token = "0x4002F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public DarkPose m_HandPose;

		[Token(Token = "0x4002F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Tooltip("Is the Interactable impossible to grab when docked?")]
		public bool m_InteractableHiddenWhenDocked;

		[Token(Token = "0x4002F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Coroutine m_sfxCoroutine;

		[Token(Token = "0x4002F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Coroutine m_recycleCoroutine;

		[Token(Token = "0x4002F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Coroutine m_onGrabGunModifiedCoroutine;

		[Token(Token = "0x4002F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public System.Action m_OnRecycled;

		[Token(Token = "0x4002F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private WaitForSeconds m_recycleTime;

		[Token(Token = "0x4002F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private WaitForSeconds m_meshColliderTime;

		[Token(Token = "0x4002F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VrManager m_vrManager;

		[Token(Token = "0x4002F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected AzuObjectPool m_pool;

		[Token(Token = "0x4002F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected VrInput m_vrInput;

		[Token(Token = "0x4002F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private VrAudioManager m_audioManager;

		[Token(Token = "0x4002F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color UninitializedColor;

		[Token(Token = "0x170003F7")]
		public bool m_Docked
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0xE07EF0", Offset = "0xE07EF0", VA = "0xE07EF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002120")]
			[Address(RVA = "0xE07EF8", Offset = "0xE07EF8", VA = "0xE07EF8")]
			set
			{
			}
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xE07F8C", Offset = "0xE07F8C", VA = "0xE07F8C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xE081D4", Offset = "0xE081D4", VA = "0xE081D4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xE08344", Offset = "0xE08344", VA = "0xE08344")]
		private void BuildHash()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xE0841C", Offset = "0xE0841C", VA = "0xE0841C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xE08D74", Offset = "0xE08D74", VA = "0xE08D74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xE09290", Offset = "0xE09290", VA = "0xE09290", Slot = "5")]
		protected virtual void OnInteractableDisabled()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xE09294", Offset = "0xE09294", VA = "0xE09294")]
		private void OnGameModeEnded()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xE092D0", Offset = "0xE092D0", VA = "0xE092D0")]
		private void OnGrabGunModified(bool grabbed)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xE09314", Offset = "0xE09314", VA = "0xE09314")]
		[IteratorStateMachine(typeof(<IEOnGrabGunModified>d__56))]
		private IEnumerator IEOnGrabGunModified()
		{
			return null;
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xE07F04", Offset = "0xE07F04", VA = "0xE07F04")]
		private void UpdateOutlineMode()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xE0824C", Offset = "0xE0824C", VA = "0xE0824C")]
		private void CacheReferences()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xE093A4", Offset = "0xE093A4", VA = "0xE093A4")]
		private void OnTriggerListenerEnter(Collider other, ColliderListener listener)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xE0991C", Offset = "0xE0991C", VA = "0xE0991C")]
		private void OnTriggerListenerExit(Collider other, ColliderListener listener)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xE09AC8", Offset = "0xE09AC8", VA = "0xE09AC8")]
		private void OnMeshCollisionEnter(Collision collision, ColliderListener listener)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xE09CD0", Offset = "0xE09CD0", VA = "0xE09CD0")]
		protected void PlaySfx(AudioClip clip, [Optional] float? volume)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xE09D2C", Offset = "0xE09D2C", VA = "0xE09D2C")]
		[IteratorStateMachine(typeof(<DOPlaySfx>d__63))]
		private IEnumerator DOPlaySfx(AudioClip clip, [Optional] float? volume)
		{
			return null;
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xE09DD0", Offset = "0xE09DD0", VA = "0xE09DD0", Slot = "6")]
		public virtual bool GrabbingNotAllowed(HandMotionActions hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xE09598", Offset = "0xE09598", VA = "0xE09598")]
		private void OnInteractableGrabAreaEnter(bool leftHand)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xE00CBC", Offset = "0xE00CBC", VA = "0xE00CBC")]
		public void OnInteractableGrabAreaExit(bool leftHand)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xE006EC", Offset = "0xE006EC", VA = "0xE006EC")]
		public void Grab(HandMotionActions handActions, bool usingTheForce)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xE0A5D4", Offset = "0xE0A5D4", VA = "0xE0A5D4")]
		private void DoGrab(HandMotionActions handActions, bool usingTheForce)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xE00990", Offset = "0xE00990", VA = "0xE00990")]
		public void LetGo(HandMotionActions handActions, bool fromButtonPress)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xE00944", Offset = "0xE00944", VA = "0xE00944")]
		public void PullInteractable(HandMotionActions hand, Vector3? velocity, float? byDistanceDot)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xE0A884", Offset = "0xE0A884", VA = "0xE0A884")]
		public void AutoFall()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xE0A8A4", Offset = "0xE0A8A4", VA = "0xE0A8A4")]
		[IteratorStateMachine(typeof(<DoAutoFall>d__72))]
		private IEnumerator DoAutoFall()
		{
			return null;
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xE0A934", Offset = "0xE0A934", VA = "0xE0A934", Slot = "7")]
		protected virtual bool DockingDisallowed(Dock dock)
		{
			return default(bool);
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xE0967C", Offset = "0xE0967C", VA = "0xE0967C")]
		private void OnDockAreaEnter(Collider dockTrigger)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xE09A94", Offset = "0xE09A94", VA = "0xE09A94")]
		public void OnDockAreaExit(Collider dockTrigger)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xE0A9C4", Offset = "0xE0A9C4", VA = "0xE0A9C4")]
		public void UpdateTransform(Transform desiredTransform)
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xE0A724", Offset = "0xE0A724", VA = "0xE0A724")]
		public void Undock(HandMotionActions handActions)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xE0AA94", Offset = "0xE0AA94", VA = "0xE0AA94", Slot = "8")]
		public virtual void Setup()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xE0ABEC", Offset = "0xE0ABEC", VA = "0xE0ABEC", Slot = "9")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xE0A6DC", Offset = "0xE0A6DC", VA = "0xE0A6DC")]
		private void BeginRecycling()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xE0AC3C", Offset = "0xE0AC3C", VA = "0xE0AC3C")]
		[IteratorStateMachine(typeof(<Recycle>d__81))]
		private IEnumerator Recycle()
		{
			return null;
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xE0ACCC", Offset = "0xE0ACCC", VA = "0xE0ACCC")]
		public void DoRecycle()
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xE0A5C0", Offset = "0xE0A5C0", VA = "0xE0A5C0")]
		private void CancelRecycle()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xE0AD44", Offset = "0xE0AD44", VA = "0xE0AD44")]
		public void RestartRecyclingIfRecycling()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xE0AB84", Offset = "0xE0AB84", VA = "0xE0AB84")]
		protected void EnableOutline(bool value)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xE09F90", Offset = "0xE09F90", VA = "0xE09F90")]
		public void FadeOutline(bool fadeIn, [Optional] Color? newColor, bool overrideRegularHoverOutline = false)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xE0882C", Offset = "0xE0882C", VA = "0xE0882C")]
		public void OutlineBlink(bool value, bool bypassCheck = false)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xE0AD7C", Offset = "0xE0AD7C", VA = "0xE0AD7C", Slot = "10")]
		public virtual bool CompatibleInteractableGun()
		{
			return default(bool);
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xE0AD84", Offset = "0xE0AD84", VA = "0xE0AD84", Slot = "11")]
		public virtual void OnLetGo(bool fromButtonPress)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xE0AD88", Offset = "0xE0AD88", VA = "0xE0AD88", Slot = "12")]
		public virtual void OnUndock()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xE0AD8C", Offset = "0xE0AD8C", VA = "0xE0AD8C", Slot = "13")]
		public virtual void OnPredock()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xE0AD90", Offset = "0xE0AD90", VA = "0xE0AD90", Slot = "14")]
		public virtual void OnDock(bool defaultDock)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xE0AD94", Offset = "0xE0AD94", VA = "0xE0AD94", Slot = "15")]
		public virtual void OnLockedInterctablePulled(HandMotionActions hand, [Optional] Vector3? direction, [Optional] float? byDistanceDot)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xE0AD98", Offset = "0xE0AD98", VA = "0xE0AD98", Slot = "16")]
		public virtual bool OnCorrectDirection(Vector3 direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xE0ADA0", Offset = "0xE0ADA0", VA = "0xE0ADA0", Slot = "17")]
		public virtual void OnGrabbed()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xE0ADA4", Offset = "0xE0ADA4", VA = "0xE0ADA4", Slot = "18")]
		public virtual void OnHandLockedIn(HandMotionActions hand)
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xE0ADA8", Offset = "0xE0ADA8", VA = "0xE0ADA8")]
		protected void EnableMeshRenderers(bool value)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xE0778C", Offset = "0xE0778C", VA = "0xE0778C")]
		public void ModifyMeshColliders(bool enable, int layer)
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xE0925C", Offset = "0xE0925C", VA = "0xE0925C")]
		private HandMotionActions GetHandActions(bool leftHand)
		{
			return null;
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xE00DF8", Offset = "0xE00DF8", VA = "0xE00DF8")]
		public bool CanGrabInteractableWith(VrKeycode vrKeycode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xE0AE10", Offset = "0xE0AE10", VA = "0xE0AE10")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class MagazineInteractable : Interactable
	{
		[Token(Token = "0x4002FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public WFilter m_WeaponId;

		[Token(Token = "0x4002FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[Tooltip("Is a bullet and not a magazine")]
		public bool m_IsBullet;

		[Token(Token = "0x4002FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public MeshRenderer[] m_DisableWhenGrabbed;

		[Token(Token = "0x4002FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[Tooltip("Bullet inside the magazine")]
		public MeshRenderer m_BulletMesh;

		[Token(Token = "0x4002FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[Tooltip("Bullet inside the magazine")]
		public MeshRenderer m_SecondaryBulletMesh;

		[Token(Token = "0x4002FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool m_GunTracksTwoHandsWhenHandLockedOn;

		[Token(Token = "0x4002FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		[HideInInspector]
		public bool m_Cocked;

		[Token(Token = "0x4002FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private int m_bulletsInMagazine;

		[Token(Token = "0x4002FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool m_PreviousBulletWasCocked;

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xE0B8EC", Offset = "0xE0B8EC", VA = "0xE0B8EC", Slot = "8")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xE0B968", Offset = "0xE0B968", VA = "0xE0B968", Slot = "9")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xE0B970", Offset = "0xE0B970", VA = "0xE0B970", Slot = "7")]
		protected override bool DockingDisallowed(Dock dock)
		{
			return default(bool);
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xE0BB48", Offset = "0xE0BB48", VA = "0xE0BB48", Slot = "6")]
		public override bool GrabbingNotAllowed(HandMotionActions hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xE0BB64", Offset = "0xE0BB64", VA = "0xE0BB64", Slot = "13")]
		public override void OnPredock()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xE0BC48", Offset = "0xE0BC48", VA = "0xE0BC48", Slot = "14")]
		public override void OnDock(bool defaultDock)
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xE0C05C", Offset = "0xE0C05C", VA = "0xE0C05C", Slot = "12")]
		public override void OnUndock()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xE0C150", Offset = "0xE0C150", VA = "0xE0C150", Slot = "17")]
		public override void OnGrabbed()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xE0C200", Offset = "0xE0C200", VA = "0xE0C200", Slot = "18")]
		public override void OnHandLockedIn(HandMotionActions hand)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xE0C228", Offset = "0xE0C228", VA = "0xE0C228")]
		public void SetBullets(int bullets)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xE0B928", Offset = "0xE0B928", VA = "0xE0B928")]
		private void FillBullets()
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xE0BAA4", Offset = "0xE0BAA4", VA = "0xE0BAA4")]
		private int MaxBullets()
		{
			return default(int);
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xE0BF5C", Offset = "0xE0BF5C", VA = "0xE0BF5C")]
		private void TryEnableBulletMesh(bool primaryValue, bool secondaryValue)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xE0C230", Offset = "0xE0C230", VA = "0xE0C230")]
		public MagazineInteractable()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class Pump : RechargeSliderInteractable
	{
		[Token(Token = "0x600218D")]
		[Address(RVA = "0xE0C284", Offset = "0xE0C284", VA = "0xE0C284", Slot = "19")]
		protected override bool CanPull()
		{
			return default(bool);
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xE0C2C0", Offset = "0xE0C2C0", VA = "0xE0C2C0", Slot = "18")]
		public override void OnHandLockedIn(HandMotionActions hand)
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xE0C338", Offset = "0xE0C338", VA = "0xE0C338", Slot = "11")]
		public override void OnLetGo(bool fromButtonPress)
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xE0C3A8", Offset = "0xE0C3A8", VA = "0xE0C3A8", Slot = "20")]
		protected override bool EjectShellCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xE0C3D0", Offset = "0xE0C3D0", VA = "0xE0C3D0")]
		public Pump()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public class RechargeSliderInteractable : Interactable
	{
		[Token(Token = "0x200057E")]
		[CompilerGenerated]
		private sealed class <BeginRecharge>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RechargeSliderInteractable <>4__this;

			[Token(Token = "0x17000400")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021A4")]
				[Address(RVA = "0xE0CE44", Offset = "0xE0CE44", VA = "0xE0CE44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000401")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021A6")]
				[Address(RVA = "0xE0CE8C", Offset = "0xE0CE8C", VA = "0xE0CE8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021A1")]
			[Address(RVA = "0xE0CAAC", Offset = "0xE0CAAC", VA = "0xE0CAAC")]
			[DebuggerHidden]
			public <BeginRecharge>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xE0CBE8", Offset = "0xE0CBE8", VA = "0xE0CBE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021A3")]
			[Address(RVA = "0xE0CBEC", Offset = "0xE0CBEC", VA = "0xE0CBEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021A5")]
			[Address(RVA = "0xE0CE4C", Offset = "0xE0CE4C", VA = "0xE0CE4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public AudioClip m_PullingClip;

		[Token(Token = "0x4002FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public AudioClip m_BackOnPlaceClip;

		[Token(Token = "0x4002FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public WeaponBehavior m_WeaponBehavior;

		[Token(Token = "0x4002FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public bool m_GunTracksTwoHandsWhenHandLockedOn;

		[Token(Token = "0x4002FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[Space]
		public Vector3 m_PunchDirection;

		[Token(Token = "0x4002FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public float m_DistancePullBias;

		[Token(Token = "0x4002FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float m_PunchAnimationMultiplier;

		[Token(Token = "0x4002FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[Tooltip("Make sure it's different from what the weapon animation modifies")]
		public Transform m_Bolt;

		[Token(Token = "0x4002FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Vector3 m_BoltPunchDirection;

		[Token(Token = "0x4002FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[Space]
		public bool m_DisableWeaponAnimatorWhilePunching;

		[Token(Token = "0x4002FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
		public bool m_AutoReleaseHandWhenCocking;

		[Token(Token = "0x4002FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3 m_desiredPunchDirection;

		[Token(Token = "0x4002FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private float m_lastPunchTime;

		[Token(Token = "0x4002FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Coroutine m_rechargingCoroutine;

		[Token(Token = "0x4002FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private WaitForSeconds m_rechargeAnimSimTime;

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xE0C490", Offset = "0xE0C490", VA = "0xE0C490", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xE0C518", Offset = "0xE0C518", VA = "0xE0C518", Slot = "5")]
		protected override void OnInteractableDisabled()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xE0C53C", Offset = "0xE0C53C", VA = "0xE0C53C", Slot = "19")]
		protected virtual bool CanPull()
		{
			return default(bool);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xE0C544", Offset = "0xE0C544", VA = "0xE0C544", Slot = "15")]
		public override void OnLockedInterctablePulled(HandMotionActions hand, Vector3? velocity, float? byDistanceDot)
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xE0C8C0", Offset = "0xE0C8C0", VA = "0xE0C8C0", Slot = "16")]
		public override bool OnCorrectDirection(Vector3 direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xE0C4F8", Offset = "0xE0C4F8", VA = "0xE0C4F8")]
		private float FloorOrCeil(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xE0C6FC", Offset = "0xE0C6FC", VA = "0xE0C6FC")]
		[IteratorStateMachine(typeof(<BeginRecharge>d__21))]
		private IEnumerator BeginRecharge()
		{
			return null;
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xE0CAD4", Offset = "0xE0CAD4", VA = "0xE0CAD4")]
		private void EnableAnim(bool value)
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xE0C764", Offset = "0xE0C764", VA = "0xE0C764")]
		private void Cock()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xE0CB98", Offset = "0xE0CB98", VA = "0xE0CB98", Slot = "20")]
		protected virtual bool EjectShellCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xE0CB0C", Offset = "0xE0CB0C", VA = "0xE0CB0C")]
		private void EjectShell()
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xE0C310", Offset = "0xE0C310", VA = "0xE0C310", Slot = "18")]
		public override void OnHandLockedIn(HandMotionActions hand)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xE0C3D4", Offset = "0xE0C3D4", VA = "0xE0C3D4")]
		public RechargeSliderInteractable()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class TheForce : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandMotionActions m_Hand;

		[Token(Token = "0x4002FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_Start;

		[Token(Token = "0x4002FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask m_RaycastMask;

		[Token(Token = "0x4002FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_Hidden;

		[Token(Token = "0x4002FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip m_WooshSfx;

		[Token(Token = "0x4002FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VolumetricLineBehavior m_lineRenderer;

		[Token(Token = "0x4002FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VrInput m_vrInput;

		[Token(Token = "0x4002FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputControl m_inputControl;

		[Token(Token = "0x4002FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_transform;

		[Token(Token = "0x4002FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerManager m_playerManager;

		[Token(Token = "0x4002FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Interactable m_currentHoveredInteractable;

		[Token(Token = "0x4002FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<Transform, Interactable> m_cachedInteractables;

		[Token(Token = "0x4002FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_tweening;

		[Token(Token = "0x4002FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Interactable m_tweenedInteractable;

		[Token(Token = "0x4002FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_tweenedInteractableTransform;

		[Token(Token = "0x4002FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_tweenObjective;

		[Token(Token = "0x4002FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_tweenLifetime;

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xE0CE94", Offset = "0xE0CE94", VA = "0xE0CE94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xE0CF58", Offset = "0xE0CF58", VA = "0xE0CF58")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xE0CFC0", Offset = "0xE0CFC0", VA = "0xE0CFC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xDFF504", Offset = "0xDFF504", VA = "0xDFF504")]
		public void DoLateUpdate()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xE00890", Offset = "0xE00890", VA = "0xE00890")]
		public void TweenInteractable(Interactable interactable, Transform reference)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xE0CFDC", Offset = "0xE0CFDC", VA = "0xE0CFDC")]
		private void CancelTween()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xE0D054", Offset = "0xE0D054", VA = "0xE0D054")]
		private bool IsUsable()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xE0D094", Offset = "0xE0D094", VA = "0xE0D094")]
		private Vector3 End()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xE0D488", Offset = "0xE0D488", VA = "0xE0D488")]
		private void ClearHover()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xE0D010", Offset = "0xE0D010", VA = "0xE0D010")]
		private void Hide()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xE0D05C", Offset = "0xE0D05C", VA = "0xE0D05C")]
		private void Show()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xE0D52C", Offset = "0xE0D52C", VA = "0xE0D52C")]
		public TheForce()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class ModeratorMenu : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI m_NameText;

		[Token(Token = "0x4002FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FriendlistUI m_FriendlistUI;

		[Token(Token = "0x4002FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Items")]
		public Toggle m_UseBotsToggle;

		[Token(Token = "0x4002FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button m_EndGameButton;

		[Token(Token = "0x4002FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerLocalData m_localData;

		[Token(Token = "0x4002FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LevelManager m_levelManager;

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xE0D5A8", Offset = "0xE0D5A8", VA = "0xE0D5A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xE0D75C", Offset = "0xE0D75C", VA = "0xE0D75C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xE0D858", Offset = "0xE0D858", VA = "0xE0D858")]
		private void UIOverlapped(bool value)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xE0D884", Offset = "0xE0D884", VA = "0xE0D884")]
		public void TurnBots(bool value)
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xE0D8D8", Offset = "0xE0D8D8", VA = "0xE0D8D8")]
		public void EndGame()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xE0D94C", Offset = "0xE0D94C", VA = "0xE0D94C")]
		public ModeratorMenu()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public class Suicider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000582")]
		[CompilerGenerated]
		private sealed class <DoKillmyself>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DamageInfo info;

			[Token(Token = "0x4002FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Suicider <>4__this;

			[Token(Token = "0x17000402")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021C0")]
				[Address(RVA = "0xE0DBB8", Offset = "0xE0DBB8", VA = "0xE0DBB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000403")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021C2")]
				[Address(RVA = "0xE0DC00", Offset = "0xE0DC00", VA = "0xE0DC00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021BD")]
			[Address(RVA = "0xE0DA30", Offset = "0xE0DA30", VA = "0xE0DA30")]
			[DebuggerHidden]
			public <DoKillmyself>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60021BE")]
			[Address(RVA = "0xE0DA60", Offset = "0xE0DA60", VA = "0xE0DA60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021BF")]
			[Address(RVA = "0xE0DA64", Offset = "0xE0DA64", VA = "0xE0DA64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C1")]
			[Address(RVA = "0xE0DBC0", Offset = "0xE0DBC0", VA = "0xE0DBC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine m_coroutine;

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xE0D954", Offset = "0xE0D954", VA = "0xE0D954")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xE0D95C", Offset = "0xE0D95C", VA = "0xE0D95C")]
		public void KillMyself(DamageReceiver receiver, DamageInfo info)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xE0D9AC", Offset = "0xE0D9AC", VA = "0xE0D9AC")]
		[IteratorStateMachine(typeof(<DoKillmyself>d__3))]
		private IEnumerator DoKillmyself(DamageReceiver receiver, DamageInfo info)
		{
			return null;
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xE0DA58", Offset = "0xE0DA58", VA = "0xE0DA58")]
		public Suicider()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class AutoKillCube : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000584")]
		[CompilerGenerated]
		private sealed class <DelayedDamage>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoKillCube <>4__this;

			[Token(Token = "0x17000404")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021CA")]
				[Address(RVA = "0xE0DFA0", Offset = "0xE0DFA0", VA = "0xE0DFA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000405")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021CC")]
				[Address(RVA = "0xE0DFE8", Offset = "0xE0DFE8", VA = "0xE0DFE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0xE0DE10", Offset = "0xE0DE10", VA = "0xE0DE10")]
			[DebuggerHidden]
			public <DelayedDamage>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0xE0DE40", Offset = "0xE0DE40", VA = "0xE0DE40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021C9")]
			[Address(RVA = "0xE0DE44", Offset = "0xE0DE44", VA = "0xE0DE44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021CB")]
			[Address(RVA = "0xE0DFA8", Offset = "0xE0DFA8", VA = "0xE0DFA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine m_delayedDamage;

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xE0DC08", Offset = "0xE0DC08", VA = "0xE0DC08")]
		public void OnDamageTaken(DamageReceiver damageReceiver, DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xE0DCA0", Offset = "0xE0DCA0", VA = "0xE0DCA0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xE0DC38", Offset = "0xE0DC38", VA = "0xE0DC38")]
		[IteratorStateMachine(typeof(<DelayedDamage>d__3))]
		private IEnumerator DelayedDamage()
		{
			return null;
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xE0DE38", Offset = "0xE0DE38", VA = "0xE0DE38")]
		public AutoKillCube()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public class AlvoWatch : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AlvoWatchSkin m_CurrentSkin;

		[Token(Token = "0x4002FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light m_Light;

		[Token(Token = "0x4002FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_Body;

		[Token(Token = "0x4002FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform m_LeftPalm;

		[Token(Token = "0x4002FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform m_RightPalm;

		[Token(Token = "0x4002FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PositionAndRotationVector m_LeftPalmLocalPR;

		[Token(Token = "0x4002FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PositionAndRotationVector m_RightPalmLocalPR;

		[Token(Token = "0x4002FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_leftHanded;

		[Token(Token = "0x4002FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Transform m_transform;

		[Token(Token = "0x4002FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_eye;

		[Token(Token = "0x4002FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_active;

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xE0DFF0", Offset = "0xE0DFF0", VA = "0xE0DFF0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xE0E00C", Offset = "0xE0E00C", VA = "0xE0E00C")]
		public void EnableMesh(bool value)
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xE0E010", Offset = "0xE0E010", VA = "0xE0E010")]
		public void Setup()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xE0E0D0", Offset = "0xE0E0D0", VA = "0xE0E0D0")]
		private void UpdateWrist(bool leftHanded)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xE0E174", Offset = "0xE0E174", VA = "0xE0E174")]
		public void AlvoWatchLateUpdate()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xE0E480", Offset = "0xE0E480", VA = "0xE0E480")]
		public void UpdateAmmo(int bulletsLeft, int ammoLeft, bool dualWield)
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xE0E538", Offset = "0xE0E538", VA = "0xE0E538")]
		public void ClearAmmo()
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xE0E5C0", Offset = "0xE0E5C0", VA = "0xE0E5C0")]
		private void DebugSetOnLeftWrist()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xE0E5C8", Offset = "0xE0E5C8", VA = "0xE0E5C8")]
		private void DebugSetOnRightWrist()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xE0E5D0", Offset = "0xE0E5D0", VA = "0xE0E5D0")]
		public AlvoWatch()
		{
		}
	}
	[Token(Token = "0x2000586")]
	public class PrivateMatchTeamPanelUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4002FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_header;

		[Token(Token = "0x4002FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_joinButton;

		[Token(Token = "0x4002FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform listHolder;

		[Token(Token = "0x4003000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PrivateMatchManager m_manager;

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xE0E5D8", Offset = "0xE0E5D8", VA = "0xE0E5D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xE0E664", Offset = "0xE0E664", VA = "0xE0E664")]
		public void OnJoinClicked(int team)
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xE0E690", Offset = "0xE0E690", VA = "0xE0E690")]
		public void SetJoinButtonActive(bool active)
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xE0E6B0", Offset = "0xE0E6B0", VA = "0xE0E6B0")]
		public PrivateMatchTeamPanelUI()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public class DamageOverTimeArea : UnityEngine.MonoBehaviour, IDOTDamager
	{
		[Token(Token = "0x4003001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Damage per second")]
		private float DPS;

		[Token(Token = "0x4003002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Ticks per second")]
		[SerializeField]
		private float TPS;

		[Token(Token = "0x4003003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WFilter WFilter;

		[Token(Token = "0x4003004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_PlayerInside;

		[Token(Token = "0x4003005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_LastDamageTime;

		[Token(Token = "0x4003006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_TickLength;

		[Token(Token = "0x4003007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_DamagePerTick;

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xE0E6B8", Offset = "0xE0E6B8", VA = "0xE0E6B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xE0E888", Offset = "0xE0E888", VA = "0xE0E888")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xE0E978", Offset = "0xE0E978", VA = "0xE0E978")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xE0E9E0", Offset = "0xE0E9E0", VA = "0xE0E9E0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xE0EA44", Offset = "0xE0EA44", VA = "0xE0EA44", Slot = "4")]
		public bool IsTickReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xE0EA7C", Offset = "0xE0EA7C", VA = "0xE0EA7C", Slot = "5")]
		public int GetDamage()
		{
			return default(int);
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xE0EA84", Offset = "0xE0EA84", VA = "0xE0EA84", Slot = "6")]
		public void OnTickDone()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xE0EAA0", Offset = "0xE0EAA0", VA = "0xE0EAA0", Slot = "7")]
		public short GetWFilter()
		{
			return default(short);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xE0EAA8", Offset = "0xE0EAA8", VA = "0xE0EAA8", Slot = "8")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xE0EAC8", Offset = "0xE0EAC8", VA = "0xE0EAC8")]
		public DamageOverTimeArea()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public interface IDOTDamager
	{
		[Token(Token = "0x60021E5")]
		bool IsTickReady();

		[Token(Token = "0x60021E6")]
		int GetDamage();

		[Token(Token = "0x60021E7")]
		void OnTickDone();

		[Token(Token = "0x60021E8")]
		short GetWFilter();

		[Token(Token = "0x60021E9")]
		Vector3 GetPosition();
	}
	[Token(Token = "0x2000589")]
	public class AutoValidateLoadouts : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool onEnable;

		[Token(Token = "0x4003009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool onStart;

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xE0EAD0", Offset = "0xE0EAD0", VA = "0xE0EAD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xE0EB94", Offset = "0xE0EB94", VA = "0xE0EB94")]
		private void Start()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xE0EAE0", Offset = "0xE0EAE0", VA = "0xE0EAE0")]
		private void ValidateAllLoadouts()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xE0EBA4", Offset = "0xE0EBA4", VA = "0xE0EBA4")]
		public AutoValidateLoadouts()
		{
		}
	}
	[Token(Token = "0x200058A")]
	public class FontAddressableLoader : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400300A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LanguageTextDatabase textDb;

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xE0EBAC", Offset = "0xE0EBAC", VA = "0xE0EBAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xE0EC68", Offset = "0xE0EC68", VA = "0xE0EC68")]
		public FontAddressableLoader()
		{
		}
	}
	[Token(Token = "0x200058B")]
	[CreateAssetMenu(fileName = "Skin Icon List", menuName = "Alvo/Skin Icon List")]
	public class SkinIconList : ScriptableObject
	{
		[Token(Token = "0x400300B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinIcon> skinIcons;

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xE0EC70", Offset = "0xE0EC70", VA = "0xE0EC70")]
		public Sprite GetSpriteBySkinIndex(int wid, int sid)
		{
			return null;
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xE0ED88", Offset = "0xE0ED88", VA = "0xE0ED88")]
		public SkinIconList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058C")]
	public class SkinIcon
	{
		[Token(Token = "0x400300C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("The weapon indexes that use this skin icon have 1 value bit in the same index, use 4,294,967,295 for global value")]
		public int skinIndex;

		[Token(Token = "0x400300D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite sprite;

		[Token(Token = "0x400300E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int weaponIndexBitData;

		[Token(Token = "0x17000406")]
		public BitVector32 UsableWeapons
		{
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0xE0ED80", Offset = "0xE0ED80", VA = "0xE0ED80")]
			get
			{
				return default(BitVector32);
			}
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xE0ED90", Offset = "0xE0ED90", VA = "0xE0ED90")]
		public SkinIcon()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class Easer
	{
		[Token(Token = "0x4003010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_Time;

		[Token(Token = "0x4003011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Duration;

		[Token(Token = "0x4003012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Easings.Function m_Function;

		[Token(Token = "0x4003013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_Speed;

		[Token(Token = "0x17000407")]
		public float InterpolatedValue
		{
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0xE0ED98", Offset = "0xE0ED98", VA = "0xE0ED98")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0xE0EDA0", Offset = "0xE0EDA0", VA = "0xE0EDA0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public Easings.Function Function
		{
			[Token(Token = "0x60021F6")]
			[Address(RVA = "0xE0EDA8", Offset = "0xE0EDA8", VA = "0xE0EDA8")]
			get
			{
				return default(Easings.Function);
			}
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0xE0EDB0", Offset = "0xE0EDB0", VA = "0xE0EDB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public float Duration
		{
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0xE0EDB8", Offset = "0xE0EDB8", VA = "0xE0EDB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021F9")]
			[Address(RVA = "0xE0EDC0", Offset = "0xE0EDC0", VA = "0xE0EDC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public bool IsDone
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0xE0EDD4", Offset = "0xE0EDD4", VA = "0xE0EDD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xE0EDE8", Offset = "0xE0EDE8", VA = "0xE0EDE8")]
		public Easer(Easings.Function function, float duration)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xE0EE28", Offset = "0xE0EE28", VA = "0xE0EE28")]
		public void Reset()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xE0EE30", Offset = "0xE0EE30", VA = "0xE0EE30")]
		public float Update(float deltaTime)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x200058E")]
	public struct EasingOptions
	{
		[Token(Token = "0x4003014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Easings.Function Function;

		[Token(Token = "0x4003015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Duration;
	}
	[Token(Token = "0x200058F")]
	public static class Easings
	{
		[Token(Token = "0x2000590")]
		public enum Function
		{
			[Token(Token = "0x4003019")]
			Linear,
			[Token(Token = "0x400301A")]
			QuadraticEaseIn,
			[Token(Token = "0x400301B")]
			QuadraticEaseOut,
			[Token(Token = "0x400301C")]
			QuadraticEaseInOut,
			[Token(Token = "0x400301D")]
			CubicEaseIn,
			[Token(Token = "0x400301E")]
			CubicEaseOut,
			[Token(Token = "0x400301F")]
			CubicEaseInOut,
			[Token(Token = "0x4003020")]
			QuarticEaseIn,
			[Token(Token = "0x4003021")]
			QuarticEaseOut,
			[Token(Token = "0x4003022")]
			QuarticEaseInOut,
			[Token(Token = "0x4003023")]
			QuinticEaseIn,
			[Token(Token = "0x4003024")]
			QuinticEaseOut,
			[Token(Token = "0x4003025")]
			QuinticEaseInOut,
			[Token(Token = "0x4003026")]
			SineEaseIn,
			[Token(Token = "0x4003027")]
			SineEaseOut,
			[Token(Token = "0x4003028")]
			SineEaseInOut,
			[Token(Token = "0x4003029")]
			CircularEaseIn,
			[Token(Token = "0x400302A")]
			CircularEaseOut,
			[Token(Token = "0x400302B")]
			CircularEaseInOut,
			[Token(Token = "0x400302C")]
			ExponentialEaseIn,
			[Token(Token = "0x400302D")]
			ExponentialEaseOut,
			[Token(Token = "0x400302E")]
			ExponentialEaseInOut,
			[Token(Token = "0x400302F")]
			ElasticEaseIn,
			[Token(Token = "0x4003030")]
			ElasticEaseOut,
			[Token(Token = "0x4003031")]
			ElasticEaseInOut,
			[Token(Token = "0x4003032")]
			BackEaseIn,
			[Token(Token = "0x4003033")]
			BackEaseOut,
			[Token(Token = "0x4003034")]
			BackEaseInOut,
			[Token(Token = "0x4003035")]
			BounceEaseIn,
			[Token(Token = "0x4003036")]
			BounceEaseOut,
			[Token(Token = "0x4003037")]
			BounceEaseInOut
		}

		[Token(Token = "0x4003016")]
		private const float PI = (float)Math.PI;

		[Token(Token = "0x4003017")]
		private const float HALFPI = (float)Math.PI / 2f;

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xE0F2AC", Offset = "0xE0F2AC", VA = "0xE0F2AC")]
		public static float Interpolate(ref float currentTime, float duration, float deltaTime, bool reverse = false, Function function = Function.Linear)
		{
			return default(float);
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xE0EE74", Offset = "0xE0EE74", VA = "0xE0EE74")]
		public static float Interpolate(float p, Function function)
		{
			return default(float);
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xE0F2E8", Offset = "0xE0F2E8", VA = "0xE0F2E8")]
		public static float Linear(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xE0F2FC", Offset = "0xE0F2FC", VA = "0xE0F2FC")]
		public static float QuadraticEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xE0F2EC", Offset = "0xE0F2EC", VA = "0xE0F2EC")]
		public static float QuadraticEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xE0F304", Offset = "0xE0F304", VA = "0xE0F304")]
		public static float QuadraticEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xE0F340", Offset = "0xE0F340", VA = "0xE0F340")]
		public static float CubicEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xE0F34C", Offset = "0xE0F34C", VA = "0xE0F34C")]
		public static float CubicEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xE0F368", Offset = "0xE0F368", VA = "0xE0F368")]
		public static float CubicEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xE0F3AC", Offset = "0xE0F3AC", VA = "0xE0F3AC")]
		public static float QuarticEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xE0F3BC", Offset = "0xE0F3BC", VA = "0xE0F3BC")]
		public static float QuarticEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xE0F3E0", Offset = "0xE0F3E0", VA = "0xE0F3E0")]
		public static float QuarticEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xE0F42C", Offset = "0xE0F42C", VA = "0xE0F42C")]
		public static float QuinticEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xE0F440", Offset = "0xE0F440", VA = "0xE0F440")]
		public static float QuinticEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xE0F464", Offset = "0xE0F464", VA = "0xE0F464")]
		public static float QuinticEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xE0F4B8", Offset = "0xE0F4B8", VA = "0xE0F4B8")]
		public static float SineEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xE0F4E4", Offset = "0xE0F4E4", VA = "0xE0F4E4")]
		public static float SineEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xE0F4F4", Offset = "0xE0F4F4", VA = "0xE0F4F4")]
		public static float SineEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xE0F520", Offset = "0xE0F520", VA = "0xE0F520")]
		public static float CircularEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xE0F538", Offset = "0xE0F538", VA = "0xE0F538")]
		public static float CircularEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xE0F54C", Offset = "0xE0F54C", VA = "0xE0F54C")]
		public static float CircularEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xE0F5A4", Offset = "0xE0F5A4", VA = "0xE0F5A4")]
		public static float ExponentialEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xE0F5C4", Offset = "0xE0F5C4", VA = "0xE0F5C4")]
		public static float ExponentialEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xE0F5F4", Offset = "0xE0F5F4", VA = "0xE0F5F4")]
		public static float ExponentialEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xE0F65C", Offset = "0xE0F65C", VA = "0xE0F65C")]
		public static float ElasticEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xE0F6A0", Offset = "0xE0F6A0", VA = "0xE0F6A0")]
		public static float ElasticEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xE0F6F0", Offset = "0xE0F6F0", VA = "0xE0F6F0")]
		public static float ElasticEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xE0F790", Offset = "0xE0F790", VA = "0xE0F790")]
		public static float BackEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xE0F7C8", Offset = "0xE0F7C8", VA = "0xE0F7C8")]
		public static float BackEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xE0F808", Offset = "0xE0F808", VA = "0xE0F808")]
		public static float BackEaseInOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xE0F898", Offset = "0xE0F898", VA = "0xE0F898")]
		public static float BounceEaseIn(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xE0F8BC", Offset = "0xE0F8BC", VA = "0xE0F8BC")]
		public static float BounceEaseOut(float p)
		{
			return default(float);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xE0F974", Offset = "0xE0F974", VA = "0xE0F974")]
		public static float BounceEaseInOut(float p)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000591")]
	public class AlternativePosition : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform[] m_objectsToMove;

		[Token(Token = "0x4003039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform[] m_positions;

		[Token(Token = "0x400303A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_moveOnEnable;

		[Token(Token = "0x400303B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_moveOnlyOnce;

		[Token(Token = "0x400303C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool m_moved;

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xE0F9C4", Offset = "0xE0F9C4", VA = "0xE0F9C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xE0F9D4", Offset = "0xE0F9D4", VA = "0xE0F9D4")]
		public void Move()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xE0FC28", Offset = "0xE0FC28", VA = "0xE0FC28")]
		public AlternativePosition()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class PlatformObject : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000593")]
		private enum Behaviour
		{
			[Token(Token = "0x4003041")]
			EnableOnlyInThesePlatforms,
			[Token(Token = "0x4003042")]
			DisableOnlyInThesePlatforms
		}

		[Token(Token = "0x400303D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_target;

		[Token(Token = "0x400303E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Platform[] m_platforms;

		[Token(Token = "0x400303F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Behaviour m_behaviour;

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xE0FC30", Offset = "0xE0FC30", VA = "0xE0FC30")]
		public void Start()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xE0FCDC", Offset = "0xE0FCDC", VA = "0xE0FCDC")]
		private void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xE0FC34", Offset = "0xE0FC34", VA = "0xE0FC34")]
		private void CheckRegion()
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xE0FCE0", Offset = "0xE0FCE0", VA = "0xE0FCE0")]
		public PlatformObject()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class BreakableScreen : DamageReceiver
	{
		[Token(Token = "0x4003043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool isBroken;

		[Token(Token = "0x4003044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2Int tileDimension;

		[Token(Token = "0x4003045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<int> skipTiles;

		[Token(Token = "0x4003046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<int> tiles;

		[Token(Token = "0x4003047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Tooltip("In seconds")]
		private Vector2 changeImageIntervalRange;

		[Token(Token = "0x4003048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Space]
		[Tooltip("Texture #1 - fully broken screen, last texture - working screen")]
		private Texture[] textures;

		[Token(Token = "0x4003049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material material;

		[Token(Token = "0x400304A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 offsetDelta;

		[Token(Token = "0x400304B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isGlitching;

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xE0FCE8", Offset = "0xE0FCE8", VA = "0xE0FCE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xE0FF58", Offset = "0xE0FF58", VA = "0xE0FF58", Slot = "4")]
		public override void TakeDamage(DamageInfo dmgInfo)
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xE0FF94", Offset = "0xE0FF94", VA = "0xE0FF94")]
		public void BreakScreen()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xE0FE54", Offset = "0xE0FE54", VA = "0xE0FE54")]
		private void ChangeScreenImage()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xE0FFF0", Offset = "0xE0FFF0", VA = "0xE0FFF0")]
		private void PeriodicGlitch()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xE100AC", Offset = "0xE100AC", VA = "0xE100AC")]
		public BreakableScreen()
		{
		}
	}
	[Token(Token = "0x2000595")]
	public class BreakableScreenParent : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400304C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<BreakableScreen> screens;

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xE101C4", Offset = "0xE101C4", VA = "0xE101C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xE10614", Offset = "0xE10614", VA = "0xE10614")]
		public void BreakScreens(byte[] indices)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xE106B8", Offset = "0xE106B8", VA = "0xE106B8")]
		public void OnScreenDamageTaken(DamageReceiver receiver, DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xE10810", Offset = "0xE10810", VA = "0xE10810")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xE10908", Offset = "0xE10908", VA = "0xE10908")]
		private void OnPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xE10AFC", Offset = "0xE10AFC", VA = "0xE10AFC")]
		public BreakableScreenParent()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class EventHatManagement : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000598")]
		public struct EventHat
		{
			[Token(Token = "0x4003055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public EventHatType m_Type;

			[Token(Token = "0x4003056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject m_GameObject;
		}

		[Serializable]
		[Token(Token = "0x2000599")]
		public struct EventHatTransform
		{
			[Token(Token = "0x4003057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public EventHatType m_Type;

			[Token(Token = "0x4003058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform m_Transform;
		}

		[Token(Token = "0x200059A")]
		public enum EventHatType
		{
			[Token(Token = "0x400305A")]
			None,
			[Token(Token = "0x400305B")]
			SantaHat,
			[Token(Token = "0x400305C")]
			ElfHat
		}

		[Token(Token = "0x400304E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_BotsOnly;

		[Token(Token = "0x400304F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventHat[] m_Hats;

		[Token(Token = "0x4003050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EventHatPool m_HatPool;

		[Token(Token = "0x4003051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EventHatManagement Instance;

		[Token(Token = "0x4003052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventManager m_eventManager;

		[Token(Token = "0x4003053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<EventHatType, int> m_hatOrder;

		[Token(Token = "0x4003054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_lastRandomIndex;

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xE10BE4", Offset = "0xE10BE4", VA = "0xE10BE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xE10C30", Offset = "0xE10C30", VA = "0xE10C30")]
		public static void SpawnHat(PlayerCharacter playerCharacter, PlayerData entity)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xE116F4", Offset = "0xE116F4", VA = "0xE116F4")]
		public static void SpawnHat(BodyRagdoll ragdoll, PlayerData entity)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xE11984", Offset = "0xE11984", VA = "0xE11984")]
		private void TryBuildDictionary()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xE10F74", Offset = "0xE10F74", VA = "0xE10F74")]
		private static bool HatSpawningAllowed(PlayerData entity, ref EventHatTransform[] hatTranformArray)
		{
			return default(bool);
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xE11AA4", Offset = "0xE11AA4", VA = "0xE11AA4")]
		public EventHatManagement()
		{
		}
	}
}
namespace Alvo.Spawning
{
	[Token(Token = "0x200059E")]
	public class InitialFFASpawns : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpawnArea[] m_ffaSpawns;

		[Token(Token = "0x4003063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_ShowGizmos;

		[Token(Token = "0x1700040B")]
		public SpawnArea[] FFASpawns
		{
			[Token(Token = "0x6002243")]
			[Address(RVA = "0xE11B48", Offset = "0xE11B48", VA = "0xE11B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xE11B50", Offset = "0xE11B50", VA = "0xE11B50")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xE11BF8", Offset = "0xE11BF8", VA = "0xE11BF8")]
		public InitialFFASpawns()
		{
		}
	}
}
namespace Alvo.SeasonalEvent
{
	[Token(Token = "0x200059F")]
	public class EventDrop : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] dropModels;

		[Token(Token = "0x4003065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] pickUpAClips;

		[Token(Token = "0x4003066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float pickUpVolumeMultiplier;

		[Token(Token = "0x4003067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource aSource;

		[Token(Token = "0x4003068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particle;

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xE11C00", Offset = "0xE11C00", VA = "0xE11C00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xE11C90", Offset = "0xE11C90", VA = "0xE11C90")]
		public void OnPickUpStart()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xE11D90", Offset = "0xE11D90", VA = "0xE11D90")]
		public void OnPickUpEnd()
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xE11E0C", Offset = "0xE11E0C", VA = "0xE11E0C")]
		public EventDrop()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class EventManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20005A1")]
		[CompilerGenerated]
		private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventManager <>4__this;

			[Token(Token = "0x1700040C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002256")]
				[Address(RVA = "0xE12E20", Offset = "0xE12E20", VA = "0xE12E20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002258")]
				[Address(RVA = "0xE12E68", Offset = "0xE12E68", VA = "0xE12E68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002253")]
			[Address(RVA = "0xE11F0C", Offset = "0xE11F0C", VA = "0xE11F0C")]
			[DebuggerHidden]
			public <Start>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002254")]
			[Address(RVA = "0xE12B88", Offset = "0xE12B88", VA = "0xE12B88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002255")]
			[Address(RVA = "0xE12B8C", Offset = "0xE12B8C", VA = "0xE12B8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002257")]
			[Address(RVA = "0xE12E28", Offset = "0xE12E28", VA = "0xE12E28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventsUI eventUI;

		[Token(Token = "0x400306A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventsSoundManager soundManager;

		[Token(Token = "0x400306B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SimpleDisablePool pool;

		[Token(Token = "0x400306C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SeasonalEvents eventType;

		[Token(Token = "0x400306D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space]
		[SerializeField]
		private GameObject characterDisplaysPrefab;

		[Token(Token = "0x400306E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool eventReplacesPartyCharacters;

		[Token(Token = "0x400306F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public Vector3 killDropSpawnOffset;

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xE11E1C", Offset = "0xE11E1C", VA = "0xE11E1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xE11EA4", Offset = "0xE11EA4", VA = "0xE11EA4")]
		[IteratorStateMachine(typeof(<Start>d__8))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xE11F34", Offset = "0xE11F34", VA = "0xE11F34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xE120DC", Offset = "0xE120DC", VA = "0xE120DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xE12284", Offset = "0xE12284", VA = "0xE12284")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xE12934", Offset = "0xE12934", VA = "0xE12934")]
		private void ResetEverything()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xE12444", Offset = "0xE12444", VA = "0xE12444")]
		private void OnEventDestroy()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xE12A0C", Offset = "0xE12A0C", VA = "0xE12A0C")]
		private void OnEventSpawn(Vector3 position, EventSpawnType type)
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xE12B70", Offset = "0xE12B70", VA = "0xE12B70")]
		public EventManager()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public enum EventSpawnType
	{
		[Token(Token = "0x4003074")]
		None,
		[Token(Token = "0x4003075")]
		OtherPlayerDeath,
		[Token(Token = "0x4003076")]
		LocalPlayerDeath,
		[Token(Token = "0x4003077")]
		WeKilledPlayer,
		[Token(Token = "0x4003078")]
		WeKilledBot
	}
	[Token(Token = "0x20005A3")]
	public enum SeasonalEvents
	{
		[Token(Token = "0x400307A")]
		None = 0,
		[Token(Token = "0x400307B")]
		Halloween = 1,
		[Token(Token = "0x400307C")]
		Christmas2022 = 2,
		[Token(Token = "0x400307D")]
		Empty = 99
	}
	[Token(Token = "0x20005A4")]
	public class EventsSoundManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400307E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[FormerlySerializedAs("horrorStinger")]
		private AudioClip m_EventActivatedStinger;

		[Token(Token = "0x400307F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip titleMusic;

		[Token(Token = "0x4003080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip matchCloseToFinish;

		[Token(Token = "0x4003081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip matchEndWin;

		[Token(Token = "0x4003082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip matchEndLoss;

		[Token(Token = "0x4003083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SECTR_AudioCue matchEndWinStinger;

		[Token(Token = "0x4003084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SECTR_AudioCue matchEndLossStinger;

		[Token(Token = "0x4003085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SECTR_AudioCue headshot;

		[Token(Token = "0x4003086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4003087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip originalTitleMusic;

		[Token(Token = "0x4003088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioClip originalMatchEndWin;

		[Token(Token = "0x4003089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioClip originalMatchEndLoss;

		[Token(Token = "0x400308A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioClip originalMatchCloseToFinish;

		[Token(Token = "0x400308B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public byte m_TitleMusicDelay;

		[Token(Token = "0x400308C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float stingerMultiplier;

		[Token(Token = "0x400308D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float musicMultiplier;

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xE12E70", Offset = "0xE12E70", VA = "0xE12E70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xE12500", Offset = "0xE12500", VA = "0xE12500")]
		public void OnGameplaySceneLoaded()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xE12C7C", Offset = "0xE12C7C", VA = "0xE12C7C")]
		public void ReplaceAudioFiles()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xE129A0", Offset = "0xE129A0", VA = "0xE129A0")]
		public void RestoreAudio()
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xE12D00", Offset = "0xE12D00", VA = "0xE12D00")]
		public void OnTitleMusic()
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xE12F68", Offset = "0xE12F68", VA = "0xE12F68")]
		public EventsSoundManager()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class EventsUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400308E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string loadingParentName;

		[Token(Token = "0x400308F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string titleParentName;

		[Token(Token = "0x4003090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject loadingPrefab;

		[Token(Token = "0x4003091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject bannerPrefab;

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xE1275C", Offset = "0xE1275C", VA = "0xE1275C")]
		public void SetLoadingOverlay()
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xE12870", Offset = "0xE12870", VA = "0xE12870")]
		public void SetTitle()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xE1265C", Offset = "0xE1265C", VA = "0xE1265C")]
		public void SetEndGame()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xE12F80", Offset = "0xE12F80", VA = "0xE12F80")]
		public EventsUI()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class EventTitleBanner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text eventProgLbl;

		[Token(Token = "0x4003093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image rewardImage;

		[Token(Token = "0x4003094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite rewardSprite;

		[Token(Token = "0x4003095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider progSlider;

		[Token(Token = "0x4003096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image sliderFill;

		[Token(Token = "0x4003097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color32 sliderFillColor;

		[Token(Token = "0x4003098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject lockedGo;

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xE13014", Offset = "0xE13014", VA = "0xE13014")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xE130B8", Offset = "0xE130B8", VA = "0xE130B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xE1315C", Offset = "0xE1315C", VA = "0xE1315C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xE13160", Offset = "0xE13160", VA = "0xE13160")]
		private void SetEventPoints()
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xE132E4", Offset = "0xE132E4", VA = "0xE132E4")]
		private void AzureDatabaseCallback(AzureRequestTypes type, string result, int requId)
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xE133B4", Offset = "0xE133B4", VA = "0xE133B4")]
		public EventTitleBanner()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class EventHatPool : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventHatManagement m_Manager;

		[Token(Token = "0x400309A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_AmountPerType;

		[Token(Token = "0x400309B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<EventHatManagement.EventHat> m_pool;

		[Token(Token = "0x400309C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<EventHatManagement.EventHat> m_activeHats;

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xE133BC", Offset = "0xE133BC", VA = "0xE133BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xE11078", Offset = "0xE11078", VA = "0xE11078")]
		public void DestroyHat(EventHatManagement.EventHat eventHat)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xE11198", Offset = "0xE11198", VA = "0xE11198")]
		public EventHatManagement.EventHat SpawnHat(EventHatManagement.EventHatType hatType, Transform parentAndTransform)
		{
			return default(EventHatManagement.EventHat);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xE1355C", Offset = "0xE1355C", VA = "0xE1355C")]
		public EventHatPool()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class TitleCharacterOverride : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400309D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RuntimeAnimatorController animatorOverride;

		[Token(Token = "0x400309E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x400309F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MenuCharacterDisplay characterDisplay;

		[Token(Token = "0x40030A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform t;

		[Token(Token = "0x40030A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useRootMotion;

		[Token(Token = "0x40030A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 pos;

		[Token(Token = "0x40030A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion rot;

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xE135FC", Offset = "0xE135FC", VA = "0xE135FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xE13640", Offset = "0xE13640", VA = "0xE13640")]
		public void OnCharacterSpawn()
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xE136EC", Offset = "0xE136EC", VA = "0xE136EC")]
		public TitleCharacterOverride()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class TitleCharacters : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40030A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TitleCharacterOverride[] charactersSpawns;

		[Token(Token = "0x40030A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MenuCharacterDisplay> characterDisplays;

		[Token(Token = "0x40030A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MenuCharacterDisplay[] charactersArray;

		[Token(Token = "0x40030A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EventManager eventManager;

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xE136F4", Offset = "0xE136F4", VA = "0xE136F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xE1396C", Offset = "0xE1396C", VA = "0xE1396C")]
		public TitleCharacters()
		{
		}
	}
}
namespace Alvo.PSVR2
{
	[Token(Token = "0x20005AA")]
	[Obsolete("This class is being replaced by platform manager")]
	public class NPManagerPs5 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002273")]
		[Address(RVA = "0xE13974", Offset = "0xE13974", VA = "0xE13974")]
		public NPManagerPs5()
		{
		}
	}
}
namespace Alvo.Platforms
{
	[Token(Token = "0x20005AB")]
	public abstract class PlatformBase : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x1700040E")]
		public string AvatarURL
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0xE1397C", Offset = "0xE1397C", VA = "0xE1397C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002275")]
			[Address(RVA = "0xE13984", Offset = "0xE13984", VA = "0xE13984")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public string UserName
		{
			[Token(Token = "0x6002276")]
			[Address(RVA = "0xE1398C", Offset = "0xE1398C", VA = "0xE1398C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002277")]
			[Address(RVA = "0xE13994", Offset = "0xE13994", VA = "0xE13994")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000410")]
		public string PlatformID
		{
			[Token(Token = "0x6002278")]
			[Address(RVA = "0xE1399C", Offset = "0xE1399C", VA = "0xE1399C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002279")]
			[Address(RVA = "0xE139A4", Offset = "0xE139A4", VA = "0xE139A4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public string AlvoID
		{
			[Token(Token = "0x600227A")]
			[Address(RVA = "0xE139AC", Offset = "0xE139AC", VA = "0xE139AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600227B")]
			[Address(RVA = "0xE139B4", Offset = "0xE139B4", VA = "0xE139B4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public string SessionHostFID
		{
			[Token(Token = "0x600227C")]
			[Address(RVA = "0xE139BC", Offset = "0xE139BC", VA = "0xE139BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600227D")]
			[Address(RVA = "0xE139C4", Offset = "0xE139C4", VA = "0xE139C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public ulong AccountID
		{
			[Token(Token = "0x600227E")]
			[Address(RVA = "0xE139CC", Offset = "0xE139CC", VA = "0xE139CC")]
			[CompilerGenerated]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600227F")]
			[Address(RVA = "0xE139D4", Offset = "0xE139D4", VA = "0xE139D4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public bool ReceivedInvitationEvent
		{
			[Token(Token = "0x6002280")]
			[Address(RVA = "0xE139DC", Offset = "0xE139DC", VA = "0xE139DC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002281")]
			[Address(RVA = "0xE139E4", Offset = "0xE139E4", VA = "0xE139E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public PlatformRestrictions Restriction
		{
			[Token(Token = "0x6002282")]
			[Address(RVA = "0xE139F0", Offset = "0xE139F0", VA = "0xE139F0")]
			[CompilerGenerated]
			get
			{
				return default(PlatformRestrictions);
			}
			[Token(Token = "0x6002283")]
			[Address(RVA = "0xE139F8", Offset = "0xE139F8", VA = "0xE139F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public bool Ready
		{
			[Token(Token = "0x6002284")]
			[Address(RVA = "0xE13A00", Offset = "0xE13A00", VA = "0xE13A00")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002285")]
			[Address(RVA = "0xE13A08", Offset = "0xE13A08", VA = "0xE13A08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000417")]
		public bool ComsRestricted
		{
			[Token(Token = "0x6002286")]
			[Address(RVA = "0xE13A14", Offset = "0xE13A14", VA = "0xE13A14")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002287")]
			[Address(RVA = "0xE13A1C", Offset = "0xE13A1C", VA = "0xE13A1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public bool PremiumFeatures
		{
			[Token(Token = "0x6002288")]
			[Address(RVA = "0xE13A28", Offset = "0xE13A28", VA = "0xE13A28")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002289")]
			[Address(RVA = "0xE13A30", Offset = "0xE13A30", VA = "0xE13A30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600228A")]
		public abstract void Initialize();

		[Token(Token = "0x600228B")]
		public abstract void UnlockTrophy(int id);

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xE13A3C", Offset = "0xE13A3C", VA = "0xE13A3C", Slot = "6")]
		public virtual void DisplaySystemDialog(SystemDialogs dialog)
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xE13B08", Offset = "0xE13B08", VA = "0xE13B08", Slot = "7")]
		public virtual void NotifyRealTimeMultiplay(bool crossplay = false)
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xE13B48", Offset = "0xE13B48", VA = "0xE13B48", Slot = "8")]
		public virtual void CheckPremiumFeatures()
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xE13B88", Offset = "0xE13B88", VA = "0xE13B88", Slot = "9")]
		public virtual void ButtonInvitation()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xE13BC8", Offset = "0xE13BC8", VA = "0xE13BC8", Slot = "10")]
		public virtual void JoinPlatformSession()
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xE13C08", Offset = "0xE13C08", VA = "0xE13C08", Slot = "11")]
		public virtual void ResetPlatformSession()
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xE13C48", Offset = "0xE13C48", VA = "0xE13C48", Slot = "12")]
		public virtual void SetPlatformSessionData()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xE13A7C", Offset = "0xE13A7C", VA = "0xE13A7C")]
		public void Log(string text)
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xE13C88", Offset = "0xE13C88", VA = "0xE13C88")]
		protected PlatformBase()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public abstract class State
	{
		[Token(Token = "0x20005AD")]
		[CompilerGenerated]
		private sealed class <OnStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000419")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600229A")]
				[Address(RVA = "0xE13D78", Offset = "0xE13D78", VA = "0xE13D78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600229C")]
				[Address(RVA = "0xE13DC0", Offset = "0xE13DC0", VA = "0xE13DC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0xE13D18", Offset = "0xE13D18", VA = "0xE13D18")]
			[DebuggerHidden]
			public <OnStart>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002298")]
			[Address(RVA = "0xE13D40", Offset = "0xE13D40", VA = "0xE13D40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002299")]
			[Address(RVA = "0xE13D44", Offset = "0xE13D44", VA = "0xE13D44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600229B")]
			[Address(RVA = "0xE13D80", Offset = "0xE13D80", VA = "0xE13D80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40030B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly PlatformManager m_Manager;

		[Token(Token = "0x40030B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_receiveInteractInput;

		[Token(Token = "0x40030B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_Input;

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xE13C90", Offset = "0xE13C90", VA = "0xE13C90")]
		public State(PlatformManager manager)
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xE13CB8", Offset = "0xE13CB8", VA = "0xE13CB8", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__4))]
		public virtual IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005AE")]
	public class LandingUIManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40030B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_ShowDebugLbl;

		[Token(Token = "0x40030B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space]
		public UIState[] m_UIStates;

		[Token(Token = "0x40030BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		public TMP_Text m_VersionLbl;

		[Token(Token = "0x40030BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text m_TitleLbl;

		[Token(Token = "0x40030BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TMP_Text m_BodyLbl;

		[Token(Token = "0x40030BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text m_ErrorLbl;

		[Token(Token = "0x40030BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TMP_Text m_DebugLbl;

		[Token(Token = "0x40030BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_WarningGo;

		[Token(Token = "0x40030C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_ErrorGo;

		[Token(Token = "0x40030C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject mainCameraGo;

		[Token(Token = "0x40030C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject secondaryCameraGo;

		[Token(Token = "0x40030C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<InitializationStates, UIState> m_uiStatesDictionary;

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xE13DC8", Offset = "0xE13DC8", VA = "0xE13DC8")]
		private void Start()
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xE13E10", Offset = "0xE13E10", VA = "0xE13E10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xE14080", Offset = "0xE14080", VA = "0xE14080")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xE1422C", Offset = "0xE1422C", VA = "0xE1422C")]
		private void Enable2dMode(bool is2d = true)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xE14264", Offset = "0xE14264", VA = "0xE14264")]
		private UIState GetStateData(InitializationStates state)
		{
			return default(UIState);
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xE14410", Offset = "0xE14410", VA = "0xE14410")]
		private void OnStateChanged(InitializationStates state)
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xE14920", Offset = "0xE14920", VA = "0xE14920")]
		public LandingUIManager()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public class AcceptWarningUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40030C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float holdTimeAmmount;

		[Token(Token = "0x40030C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currentHoldTime;

		[Token(Token = "0x40030C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space]
		public Image holdCircleBtn;

		[Token(Token = "0x40030C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool warningDone;

		[Token(Token = "0x40030C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CanvasGroup holdXGroup;

		[Token(Token = "0x40030C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject playSafe;

		[Token(Token = "0x40030CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject holdxGo;

		[Token(Token = "0x40030CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform mainCamera;

		[Token(Token = "0x40030CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Ray ray;

		[Token(Token = "0x40030CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RaycastHit hit;

		[Token(Token = "0x40030CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool isLooking;

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xE14928", Offset = "0xE14928", VA = "0xE14928")]
		private void Update()
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xE14C1C", Offset = "0xE14C1C", VA = "0xE14C1C")]
		public AcceptWarningUI()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	public enum InitializationStates
	{
		[Token(Token = "0x40030D0")]
		None,
		[Token(Token = "0x40030D1")]
		Init,
		[Token(Token = "0x40030D2")]
		CheckConnection,
		[Token(Token = "0x40030D3")]
		NoConnection,
		[Token(Token = "0x40030D4")]
		PlatformChecks,
		[Token(Token = "0x40030D5")]
		NeedPlatformSignIn,
		[Token(Token = "0x40030D6")]
		NeedPlatformEntitlement,
		[Token(Token = "0x40030D7")]
		NeedPlatformPremium,
		[Token(Token = "0x40030D8")]
		PlatformAgeParentalRestriction,
		[Token(Token = "0x40030D9")]
		EnableHeadsetCheck,
		[Token(Token = "0x40030DA")]
		AcceptWarning,
		[Token(Token = "0x40030DB")]
		Login,
		[Token(Token = "0x40030DC")]
		CantLogin,
		[Token(Token = "0x40030DD")]
		LogingSuccess,
		[Token(Token = "0x40030DE")]
		ConnectPhoton,
		[Token(Token = "0x40030DF")]
		Loading,
		[Token(Token = "0x40030E0")]
		JoiningMatch,
		[Token(Token = "0x40030E1")]
		Done
	}
	[Token(Token = "0x20005B1")]
	public enum PlatformRestrictions
	{
		[Token(Token = "0x40030E3")]
		None,
		[Token(Token = "0x40030E4")]
		NoSignin,
		[Token(Token = "0x40030E5")]
		EntitlementRestriction,
		[Token(Token = "0x40030E6")]
		NoPremiumRestriction,
		[Token(Token = "0x40030E7")]
		AgeRestriction,
		[Token(Token = "0x40030E8")]
		ParentalControlRestriction,
		[Token(Token = "0x40030E9")]
		CommunicationsRestriction
	}
	[Token(Token = "0x20005B2")]
	public enum SystemDialogs
	{
		[Token(Token = "0x40030EB")]
		None,
		[Token(Token = "0x40030EC")]
		Signin,
		[Token(Token = "0x40030ED")]
		Premium,
		[Token(Token = "0x40030EE")]
		ComsRestriction,
		[Token(Token = "0x40030EF")]
		NetworkError
	}
	[Serializable]
	[Token(Token = "0x20005B3")]
	public struct PlatformData
	{
		[Token(Token = "0x40030F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Platform m_Platform;

		[Token(Token = "0x40030F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_GameObject;

		[Token(Token = "0x40030F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlatformBase m_InitManager;

		[Token(Token = "0x40030F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformSettings m_Settings;
	}
	[Serializable]
	[Token(Token = "0x20005B4")]
	public struct UIState
	{
		[Token(Token = "0x40030F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InitializationStates state;

		[Token(Token = "0x40030F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextLabel titleText;

		[Token(Token = "0x40030F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextLabel bodyText;

		[Token(Token = "0x40030F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextLabel errorText;
	}
	[Serializable]
	[Token(Token = "0x20005B5")]
	public struct TextLabel
	{
		[Token(Token = "0x40030F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LanguageText languageText;

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xE14878", Offset = "0xE14878", VA = "0xE14878")]
		public string GetString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005B6")]
	public class PlatformManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20005B7")]
		public delegate void StateChanged(InitializationStates state);

		[Token(Token = "0x40030F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public State m_CurrentState;

		[Token(Token = "0x40030FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_HotLaunch;

		[Token(Token = "0x40030FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlatformData[] m_Platforms;

		[Token(Token = "0x40030FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_ShowLogs;

		[Token(Token = "0x40030FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public InitializationStates m_State;

		[Token(Token = "0x40030FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public PlatformSettings m_PlatformSettings;

		[Token(Token = "0x40030FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public PlatformBase m_Platform;

		[Token(Token = "0x4003101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager m_Instance;

		[Token(Token = "0x1700041B")]
		public static PlatformManager Instance
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xE14C30", Offset = "0xE14C30", VA = "0xE14C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001A")]
		public event StateChanged OnStateChanged
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xE13FE4", Offset = "0xE13FE4", VA = "0xE13FE4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xE14190", Offset = "0xE14190", VA = "0xE14190")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xE14C78", Offset = "0xE14C78", VA = "0xE14C78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xE14D7C", Offset = "0xE14D7C", VA = "0xE14D7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xE15030", Offset = "0xE15030", VA = "0xE15030")]
		private void Update()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xE150F4", Offset = "0xE150F4", VA = "0xE150F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xE15174", Offset = "0xE15174", VA = "0xE15174")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xE14F40", Offset = "0xE14F40", VA = "0xE14F40")]
		public void SetState(State state)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xE14E60", Offset = "0xE14E60", VA = "0xE14E60")]
		private void SetPlatform()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xE151F4", Offset = "0xE151F4", VA = "0xE151F4")]
		private void ResetEverything()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xE147DC", Offset = "0xE147DC", VA = "0xE147DC")]
		public void Log(string text)
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xE15260", Offset = "0xE15260", VA = "0xE15260")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public enum Destinations
	{
		[Token(Token = "0x4003103")]
		lobby,
		[Token(Token = "0x4003104")]
		ffa,
		[Token(Token = "0x4003105")]
		team_match,
		[Token(Token = "0x4003106")]
		zombies,
		[Token(Token = "0x4003107")]
		training,
		[Token(Token = "0x4003108")]
		PrivateMatch
	}
	[Token(Token = "0x20005B9")]
	public class OculusPlatform : PlatformBase
	{
		[Token(Token = "0x20005BB")]
		[CompilerGenerated]
		private sealed class <GroupJoinCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400310F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string lobbySessionID;

			[Token(Token = "0x4003112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OculusPlatform <>4__this;

			[Token(Token = "0x4003113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Destinations intent;

			[Token(Token = "0x4003114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AlvoPartyNet <partyNet>5__2;

			[Token(Token = "0x1700041C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022CF")]
				[Address(RVA = "0xE17104", Offset = "0xE17104", VA = "0xE17104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D1")]
				[Address(RVA = "0xE1714C", Offset = "0xE1714C", VA = "0xE1714C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022CC")]
			[Address(RVA = "0xE161CC", Offset = "0xE161CC", VA = "0xE161CC")]
			[DebuggerHidden]
			public <GroupJoinCoroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60022CD")]
			[Address(RVA = "0xE16C48", Offset = "0xE16C48", VA = "0xE16C48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022CE")]
			[Address(RVA = "0xE16C4C", Offset = "0xE16C4C", VA = "0xE16C4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D0")]
			[Address(RVA = "0xE1710C", Offset = "0xE1710C", VA = "0xE1710C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BC")]
		[CompilerGenerated]
		private sealed class <DirectLaunchCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusPlatform <>4__this;

			[Token(Token = "0x4003118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Destinations intent;

			[Token(Token = "0x1700041E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022D5")]
				[Address(RVA = "0xE17318", Offset = "0xE17318", VA = "0xE17318", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D7")]
				[Address(RVA = "0xE17360", Offset = "0xE17360", VA = "0xE17360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0xE16460", Offset = "0xE16460", VA = "0xE16460")]
			[DebuggerHidden]
			public <DirectLaunchCoroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xE17154", Offset = "0xE17154", VA = "0xE17154", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0xE17158", Offset = "0xE17158", VA = "0xE17158", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0xE17320", Offset = "0xE17320", VA = "0xE17320", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public User m_LocalUser;

		[Token(Token = "0x400310A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Destinations destinationIntent;

		[Token(Token = "0x400310B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, Destinations> destinationsDic;

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xE1530C", Offset = "0xE1530C", VA = "0xE1530C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xE15340", Offset = "0xE15340", VA = "0xE15340")]
		private void InitializeOculusPlatform()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xE154C8", Offset = "0xE154C8", VA = "0xE154C8")]
		public void SetCallbacks()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xE155F4", Offset = "0xE155F4", VA = "0xE155F4")]
		private void EntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xE15698", Offset = "0xE15698", VA = "0xE15698")]
		private void OnLoggedInUser(Message<User> message)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xE15AC4", Offset = "0xE15AC4", VA = "0xE15AC4")]
		private void OnGetUserProof(Message<UserProof> message)
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xE15CB0", Offset = "0xE15CB0", VA = "0xE15CB0")]
		private void OnJoinIntentReceived(Message<GroupPresenceJoinIntent> message)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xE16150", Offset = "0xE16150", VA = "0xE16150")]
		[IteratorStateMachine(typeof(<GroupJoinCoroutine>d__10))]
		private IEnumerator GroupJoinCoroutine(Destinations intent, string lobbySessionID)
		{
			return null;
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xE161F4", Offset = "0xE161F4", VA = "0xE161F4")]
		private void LeaderDeepLinkLaunch(Destinations intent)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xE160D8", Offset = "0xE160D8", VA = "0xE160D8")]
		[IteratorStateMachine(typeof(<DirectLaunchCoroutine>d__12))]
		private IEnumerator DirectLaunchCoroutine(Destinations intent)
		{
			return null;
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xE16488", Offset = "0xE16488", VA = "0xE16488")]
		private void DirectDestinationCall(Destinations intent)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xE165F4", Offset = "0xE165F4", VA = "0xE165F4", Slot = "9")]
		public override void ButtonInvitation()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xE16730", Offset = "0xE16730", VA = "0xE16730", Slot = "5")]
		public override void UnlockTrophy(int id)
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xE16798", Offset = "0xE16798", VA = "0xE16798")]
		public OculusPlatform()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class PicoLogin : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PicoPlatform m_Platform;

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xE17368", Offset = "0xE17368", VA = "0xE17368")]
		public void LoginCallback(string LoginInfo)
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xE17424", Offset = "0xE17424", VA = "0xE17424")]
		public void UserInfoCallback(string userInfo)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xE17728", Offset = "0xE17728", VA = "0xE17728")]
		public PicoLogin()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class PicoPlatform : PlatformBase
	{
		[Token(Token = "0x400311A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		public bool loginAttempt;

		[Token(Token = "0x400311B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool coreServiceInit;

		[Token(Token = "0x400311C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool platformSDK;

		[Token(Token = "0x400311D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int controllerType;

		[Token(Token = "0x400311E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int apiVersion;

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xE17730", Offset = "0xE17730", VA = "0xE17730", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xE17828", Offset = "0xE17828", VA = "0xE17828")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xE1773C", Offset = "0xE1773C", VA = "0xE1773C")]
		private void Login()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xE1784C", Offset = "0xE1784C", VA = "0xE1784C")]
		private void InitCoreService()
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xE17A48", Offset = "0xE17A48", VA = "0xE17A48")]
		private void GetUserPlatformSDK()
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xE17AF4", Offset = "0xE17AF4", VA = "0xE17AF4", Slot = "9")]
		public override void ButtonInvitation()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xE17B5C", Offset = "0xE17B5C", VA = "0xE17B5C", Slot = "5")]
		public override void UnlockTrophy(int id)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xE17BC4", Offset = "0xE17BC4", VA = "0xE17BC4")]
		public PicoPlatform()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class PS4Platform : PlatformBase
	{
		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xE18168", Offset = "0xE18168", VA = "0xE18168", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xE1816C", Offset = "0xE1816C", VA = "0xE1816C", Slot = "5")]
		public override void UnlockTrophy(int id)
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xE18170", Offset = "0xE18170", VA = "0xE18170", Slot = "6")]
		public override void DisplaySystemDialog(SystemDialogs dialog)
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xE18174", Offset = "0xE18174", VA = "0xE18174", Slot = "7")]
		public override void NotifyRealTimeMultiplay(bool crossplay = false)
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xE18178", Offset = "0xE18178", VA = "0xE18178", Slot = "8")]
		public override void CheckPremiumFeatures()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xE1817C", Offset = "0xE1817C", VA = "0xE1817C")]
		public PS4Platform()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	public class PS5Platform : PlatformBase
	{
		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xE18184", Offset = "0xE18184", VA = "0xE18184", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xE18188", Offset = "0xE18188", VA = "0xE18188", Slot = "9")]
		public override void ButtonInvitation()
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xE1818C", Offset = "0xE1818C", VA = "0xE1818C", Slot = "6")]
		public override void DisplaySystemDialog(SystemDialogs dialog)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xE18190", Offset = "0xE18190", VA = "0xE18190", Slot = "7")]
		public override void NotifyRealTimeMultiplay(bool crossplay = false)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xE18194", Offset = "0xE18194", VA = "0xE18194", Slot = "8")]
		public override void CheckPremiumFeatures()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xE18198", Offset = "0xE18198", VA = "0xE18198", Slot = "5")]
		public override void UnlockTrophy(int id)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xE18200", Offset = "0xE18200", VA = "0xE18200")]
		public PS5Platform()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	[CreateAssetMenu(fileName = "Platform Settings", menuName = "Alvo/Platform/Settings")]
	public class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x400311F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool skipAllPlatformChecks;

		[Token(Token = "0x4003120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool requiresHDMSetup;

		[Token(Token = "0x4003121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool requiresActiveGameWarning;

		[Token(Token = "0x4003122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool requiresSignInCheck;

		[Token(Token = "0x4003123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool requiresPremiumCheck;

		[Token(Token = "0x4003124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool requiresEntitlementCheck;

		[Token(Token = "0x4003125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool ageRestrictionCheck;

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xE18208", Offset = "0xE18208", VA = "0xE18208")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class AcceptWarningState : State
	{
		[Token(Token = "0x20005C3")]
		[CompilerGenerated]
		private sealed class <OnStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400312A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AcceptWarningState <>4__this;

			[Token(Token = "0x17000420")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022F8")]
				[Address(RVA = "0xE184D8", Offset = "0xE184D8", VA = "0xE184D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000421")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022FA")]
				[Address(RVA = "0xE18520", Offset = "0xE18520", VA = "0xE18520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xE18320", Offset = "0xE18320", VA = "0xE18320")]
			[DebuggerHidden]
			public <OnStart>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xE18348", Offset = "0xE18348", VA = "0xE18348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xE1834C", Offset = "0xE1834C", VA = "0xE1834C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022F9")]
			[Address(RVA = "0xE184E0", Offset = "0xE184E0", VA = "0xE184E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForSeconds waitActiveGameWarning1;

		[Token(Token = "0x4003127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds waitActiveGameWarning2;

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xE18210", Offset = "0xE18210", VA = "0xE18210")]
		public AcceptWarningState(PlatformManager manager)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xE182B8", Offset = "0xE182B8", VA = "0xE182B8", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__3))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005C4")]
	public class CantLoginState : State
	{
		[Token(Token = "0x20005C5")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400312B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400312C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400312D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CantLoginState <>4__this;

			[Token(Token = "0x17000422")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002300")]
				[Address(RVA = "0xE186B4", Offset = "0xE186B4", VA = "0xE186B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000423")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002302")]
				[Address(RVA = "0xE186FC", Offset = "0xE186FC", VA = "0xE186FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022FD")]
			[Address(RVA = "0xE185B8", Offset = "0xE185B8", VA = "0xE185B8")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60022FE")]
			[Address(RVA = "0xE185E0", Offset = "0xE185E0", VA = "0xE185E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022FF")]
			[Address(RVA = "0xE185E4", Offset = "0xE185E4", VA = "0xE185E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002301")]
			[Address(RVA = "0xE186BC", Offset = "0xE186BC", VA = "0xE186BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xE18528", Offset = "0xE18528", VA = "0xE18528")]
		public CantLoginState(PlatformManager manager)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xE18550", Offset = "0xE18550", VA = "0xE18550", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005C6")]
	public class CheckConnectionState : State
	{
		[Token(Token = "0x20005C7")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400312E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400312F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckConnectionState <>4__this;

			[Token(Token = "0x4003131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000424")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002308")]
				[Address(RVA = "0xE189DC", Offset = "0xE189DC", VA = "0xE189DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000425")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600230A")]
				[Address(RVA = "0xE18A24", Offset = "0xE18A24", VA = "0xE18A24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002305")]
			[Address(RVA = "0xE18794", Offset = "0xE18794", VA = "0xE18794")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002306")]
			[Address(RVA = "0xE187BC", Offset = "0xE187BC", VA = "0xE187BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002307")]
			[Address(RVA = "0xE187C0", Offset = "0xE187C0", VA = "0xE187C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002309")]
			[Address(RVA = "0xE189E4", Offset = "0xE189E4", VA = "0xE189E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xE18704", Offset = "0xE18704", VA = "0xE18704")]
		public CheckConnectionState(PlatformManager manager)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xE1872C", Offset = "0xE1872C", VA = "0xE1872C", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005C8")]
	public class ConnectToPhotonState : State
	{
		[Token(Token = "0x20005C9")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConnectToPhotonState <>4__this;

			[Token(Token = "0x17000426")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002310")]
				[Address(RVA = "0xE18BF4", Offset = "0xE18BF4", VA = "0xE18BF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000427")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002312")]
				[Address(RVA = "0xE18C3C", Offset = "0xE18C3C", VA = "0xE18C3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600230D")]
			[Address(RVA = "0xE18ABC", Offset = "0xE18ABC", VA = "0xE18ABC")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600230E")]
			[Address(RVA = "0xE18AE4", Offset = "0xE18AE4", VA = "0xE18AE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600230F")]
			[Address(RVA = "0xE18AE8", Offset = "0xE18AE8", VA = "0xE18AE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002311")]
			[Address(RVA = "0xE18BFC", Offset = "0xE18BFC", VA = "0xE18BFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xE18A2C", Offset = "0xE18A2C", VA = "0xE18A2C")]
		public ConnectToPhotonState(PlatformManager manager)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xE18A54", Offset = "0xE18A54", VA = "0xE18A54", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005CA")]
	public class InitState : State
	{
		[Token(Token = "0x20005CB")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InitState <>4__this;

			[Token(Token = "0x17000428")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002318")]
				[Address(RVA = "0xE18E64", Offset = "0xE18E64", VA = "0xE18E64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000429")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600231A")]
				[Address(RVA = "0xE18EAC", Offset = "0xE18EAC", VA = "0xE18EAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002315")]
			[Address(RVA = "0xE18CAC", Offset = "0xE18CAC", VA = "0xE18CAC")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002316")]
			[Address(RVA = "0xE18CD4", Offset = "0xE18CD4", VA = "0xE18CD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002317")]
			[Address(RVA = "0xE18CD8", Offset = "0xE18CD8", VA = "0xE18CD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002319")]
			[Address(RVA = "0xE18E6C", Offset = "0xE18E6C", VA = "0xE18E6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xE14F18", Offset = "0xE14F18", VA = "0xE14F18")]
		public InitState(PlatformManager manager)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xE18C44", Offset = "0xE18C44", VA = "0xE18C44", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005CC")]
	public class LoginState : State
	{
		[Token(Token = "0x20005CD")]
		[CompilerGenerated]
		private sealed class <OnStart>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400313A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400313B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginState <>4__this;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002320")]
				[Address(RVA = "0xE19AD8", Offset = "0xE19AD8", VA = "0xE19AD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002322")]
				[Address(RVA = "0xE19B20", Offset = "0xE19B20", VA = "0xE19B20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600231D")]
			[Address(RVA = "0xE18F1C", Offset = "0xE18F1C", VA = "0xE18F1C")]
			[DebuggerHidden]
			public <OnStart>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600231E")]
			[Address(RVA = "0xE18F44", Offset = "0xE18F44", VA = "0xE18F44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600231F")]
			[Address(RVA = "0xE18F48", Offset = "0xE18F48", VA = "0xE18F48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002321")]
			[Address(RVA = "0xE19AE0", Offset = "0xE19AE0", VA = "0xE19AE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerLocalData m_LocalData;

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xE184B0", Offset = "0xE184B0", VA = "0xE184B0")]
		public LoginState(PlatformManager manager)
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xE18EB4", Offset = "0xE18EB4", VA = "0xE18EB4", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__2))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005CE")]
	public class NoConnectionState : State
	{
		[Token(Token = "0x20005CF")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400313C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400313D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400313E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NoConnectionState <>4__this;

			[Token(Token = "0x1700042C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002328")]
				[Address(RVA = "0xE19C94", Offset = "0xE19C94", VA = "0xE19C94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600232A")]
				[Address(RVA = "0xE19CDC", Offset = "0xE19CDC", VA = "0xE19CDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002325")]
			[Address(RVA = "0xE19B90", Offset = "0xE19B90", VA = "0xE19B90")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002326")]
			[Address(RVA = "0xE19BB8", Offset = "0xE19BB8", VA = "0xE19BB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002327")]
			[Address(RVA = "0xE19BBC", Offset = "0xE19BBC", VA = "0xE19BBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002329")]
			[Address(RVA = "0xE19C9C", Offset = "0xE19C9C", VA = "0xE19C9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xE15C88", Offset = "0xE15C88", VA = "0xE15C88")]
		public NoConnectionState(PlatformManager manager)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xE19B28", Offset = "0xE19B28", VA = "0xE19B28", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D0")]
	public class NeedPlatformEntitlementState : State
	{
		[Token(Token = "0x20005D1")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400313F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NeedPlatformEntitlementState <>4__this;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002330")]
				[Address(RVA = "0xE19DDC", Offset = "0xE19DDC", VA = "0xE19DDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002332")]
				[Address(RVA = "0xE19E24", Offset = "0xE19E24", VA = "0xE19E24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600232D")]
			[Address(RVA = "0xE19D74", Offset = "0xE19D74", VA = "0xE19D74")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600232E")]
			[Address(RVA = "0xE19D9C", Offset = "0xE19D9C", VA = "0xE19D9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600232F")]
			[Address(RVA = "0xE19DA0", Offset = "0xE19DA0", VA = "0xE19DA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002331")]
			[Address(RVA = "0xE19DE4", Offset = "0xE19DE4", VA = "0xE19DE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xE19CE4", Offset = "0xE19CE4", VA = "0xE19CE4")]
		public NeedPlatformEntitlementState(PlatformManager manager)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xE19D0C", Offset = "0xE19D0C", VA = "0xE19D0C", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D2")]
	public class NeedPlatformPremiumState : State
	{
		[Token(Token = "0x20005D3")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NeedPlatformPremiumState <>4__this;

			[Token(Token = "0x17000430")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002338")]
				[Address(RVA = "0xE1A078", Offset = "0xE1A078", VA = "0xE1A078", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000431")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600233A")]
				[Address(RVA = "0xE1A0C0", Offset = "0xE1A0C0", VA = "0xE1A0C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002335")]
			[Address(RVA = "0xE19EBC", Offset = "0xE19EBC", VA = "0xE19EBC")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002336")]
			[Address(RVA = "0xE19EE4", Offset = "0xE19EE4", VA = "0xE19EE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002337")]
			[Address(RVA = "0xE19EE8", Offset = "0xE19EE8", VA = "0xE19EE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002339")]
			[Address(RVA = "0xE1A080", Offset = "0xE1A080", VA = "0xE1A080", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xE19E2C", Offset = "0xE19E2C", VA = "0xE19E2C")]
		public NeedPlatformPremiumState(PlatformManager manager)
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xE19E54", Offset = "0xE19E54", VA = "0xE19E54", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D4")]
	public class NeedPlatformSignInState : State
	{
		[Token(Token = "0x20005D5")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NeedPlatformSignInState <>4__this;

			[Token(Token = "0x17000432")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002340")]
				[Address(RVA = "0xE1A2CC", Offset = "0xE1A2CC", VA = "0xE1A2CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002342")]
				[Address(RVA = "0xE1A314", Offset = "0xE1A314", VA = "0xE1A314", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0xE1A158", Offset = "0xE1A158", VA = "0xE1A158")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600233E")]
			[Address(RVA = "0xE1A180", Offset = "0xE1A180", VA = "0xE1A180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600233F")]
			[Address(RVA = "0xE1A184", Offset = "0xE1A184", VA = "0xE1A184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002341")]
			[Address(RVA = "0xE1A2D4", Offset = "0xE1A2D4", VA = "0xE1A2D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xE1A0C8", Offset = "0xE1A0C8", VA = "0xE1A0C8")]
		public NeedPlatformSignInState(PlatformManager manager)
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xE1A0F0", Offset = "0xE1A0F0", VA = "0xE1A0F0", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D6")]
	public class PlatformAgeRestrictedState : State
	{
		[Token(Token = "0x20005D7")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400314A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformAgeRestrictedState <>4__this;

			[Token(Token = "0x17000434")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002348")]
				[Address(RVA = "0xE1A478", Offset = "0xE1A478", VA = "0xE1A478", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000435")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600234A")]
				[Address(RVA = "0xE1A4C0", Offset = "0xE1A4C0", VA = "0xE1A4C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002345")]
			[Address(RVA = "0xE1A3AC", Offset = "0xE1A3AC", VA = "0xE1A3AC")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002346")]
			[Address(RVA = "0xE1A3D4", Offset = "0xE1A3D4", VA = "0xE1A3D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002347")]
			[Address(RVA = "0xE1A3D8", Offset = "0xE1A3D8", VA = "0xE1A3D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002349")]
			[Address(RVA = "0xE1A480", Offset = "0xE1A480", VA = "0xE1A480", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xE1A31C", Offset = "0xE1A31C", VA = "0xE1A31C")]
		public PlatformAgeRestrictedState(PlatformManager manager)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xE1A344", Offset = "0xE1A344", VA = "0xE1A344", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D8")]
	public class PlatformChecksState : State
	{
		[Token(Token = "0x20005D9")]
		[CompilerGenerated]
		private sealed class <OnStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400314B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400314C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400314D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformChecksState <>4__this;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002351")]
				[Address(RVA = "0xE1A80C", Offset = "0xE1A80C", VA = "0xE1A80C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002353")]
				[Address(RVA = "0xE1A854", Offset = "0xE1A854", VA = "0xE1A854", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600234E")]
			[Address(RVA = "0xE1A530", Offset = "0xE1A530", VA = "0xE1A530")]
			[DebuggerHidden]
			public <OnStart>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0xE1A650", Offset = "0xE1A650", VA = "0xE1A650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002350")]
			[Address(RVA = "0xE1A654", Offset = "0xE1A654", VA = "0xE1A654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002352")]
			[Address(RVA = "0xE1A814", Offset = "0xE1A814", VA = "0xE1A814", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xE189B4", Offset = "0xE189B4", VA = "0xE189B4")]
		public PlatformChecksState(PlatformManager manager)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xE1A4C8", Offset = "0xE1A4C8", VA = "0xE1A4C8", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__1))]
		public override IEnumerator OnStart()
		{
			return null;
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xE1A558", Offset = "0xE1A558", VA = "0xE1A558")]
		private void FinishPlatformChecks()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class SetupHeadsetState : State
	{
		[Token(Token = "0x20005DB")]
		[CompilerGenerated]
		private sealed class <OnStart>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400314F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetupHeadsetState <>4__this;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600235A")]
				[Address(RVA = "0xE1AA48", Offset = "0xE1AA48", VA = "0xE1AA48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600235C")]
				[Address(RVA = "0xE1AA90", Offset = "0xE1AA90", VA = "0xE1AA90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002357")]
			[Address(RVA = "0xE1A8C4", Offset = "0xE1A8C4", VA = "0xE1A8C4")]
			[DebuggerHidden]
			public <OnStart>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002358")]
			[Address(RVA = "0xE1A8F0", Offset = "0xE1A8F0", VA = "0xE1A8F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0xE1A8F4", Offset = "0xE1A8F4", VA = "0xE1A8F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0xE1AA50", Offset = "0xE1AA50", VA = "0xE1AA50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400314E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool returning;

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xE1A628", Offset = "0xE1A628", VA = "0xE1A628")]
		public SetupHeadsetState(PlatformManager manager)
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xE1A85C", Offset = "0xE1A85C", VA = "0xE1A85C", Slot = "4")]
		[IteratorStateMachine(typeof(<OnStart>d__2))]
		public override IEnumerator OnStart()
		{
			return null;
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xE1A8EC", Offset = "0xE1A8EC", VA = "0xE1A8EC")]
		private void Ps4HeadsetSetup()
		{
		}
	}
}
namespace Alvo.Initialization
{
	[Token(Token = "0x20005DC")]
	public class HotLaunchManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] gos;

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xE1AA98", Offset = "0xE1AA98", VA = "0xE1AA98")]
		private void Awake()
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xE1AC04", Offset = "0xE1AC04", VA = "0xE1AC04")]
		public HotLaunchManager()
		{
		}
	}
}
namespace Alvo.Testing
{
	[Token(Token = "0x20005DD")]
	public class MissionTesting : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MissionMainUI missionMainUi;

		[Token(Token = "0x4003154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MockPlayerStats mockPlayerStats;

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xE1AC0C", Offset = "0xE1AC0C", VA = "0xE1AC0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xE1B44C", Offset = "0xE1B44C", VA = "0xE1B44C")]
		public void ReloadMissions()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xE1B49C", Offset = "0xE1B49C", VA = "0xE1B49C")]
		public void ResetMission(int slot)
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xE1B524", Offset = "0xE1B524", VA = "0xE1B524")]
		public MissionTesting()
		{
		}
	}
	[Token(Token = "0x20005DE")]
	public class MockMissionLoader : IMissionLoader
	{
		[Token(Token = "0x4003155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PlayerStats currentStats;

		[Token(Token = "0x4003156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<Mission[]> callback;

		[Token(Token = "0x4003157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mission[] mockMissions;

		[Token(Token = "0x4003158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string jsonPath;

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xE1B52C", Offset = "0xE1B52C", VA = "0xE1B52C")]
		public MockMissionLoader(PlayerStats _currentStats)
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xE1B920", Offset = "0xE1B920", VA = "0xE1B920", Slot = "1")]
		~MockMissionLoader()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xE1B928", Offset = "0xE1B928", VA = "0xE1B928", Slot = "4")]
		public void GetMissions(Action<Mission[]> _callback)
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xE1B94C", Offset = "0xE1B94C", VA = "0xE1B94C", Slot = "5")]
		public void SaveMissions(Mission[] missions)
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xE1B9C8", Offset = "0xE1B9C8", VA = "0xE1B9C8")]
		public void ReceivePlayerStats(AzureRequestTypes type, string result)
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public class MockPlayerStats : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setup")]
		public int UID;

		[Token(Token = "0x400315A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Settings")]
		public short w;

		[Token(Token = "0x400315B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool isBot;

		[Token(Token = "0x400315C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool isHeadshot;

		[Token(Token = "0x400315D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int WID;

		[Token(Token = "0x400315E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int AID;

		[Token(Token = "0x400315F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Watches")]
		public PlayerStats sessionStats;

		[Token(Token = "0x4003160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] o;

		[Token(Token = "0x4003161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int p;

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xE1BC1C", Offset = "0xE1BC1C", VA = "0xE1BC1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xE1BC44", Offset = "0xE1BC44", VA = "0xE1BC44")]
		public void UpdateStats()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xE1BEC8", Offset = "0xE1BEC8", VA = "0xE1BEC8")]
		public void PrintPlayerStatsJson()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xE1C0C0", Offset = "0xE1C0C0", VA = "0xE1C0C0")]
		public void SendPlayerStats()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xE1C1C0", Offset = "0xE1C1C0", VA = "0xE1C1C0")]
		public void PrintWeaponBuyJson()
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xE1BC58", Offset = "0xE1BC58", VA = "0xE1BC58")]
		public void UpdateStats(PlayerStats stats, short stat, bool h = false, bool isBot = false)
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xE1BFFC", Offset = "0xE1BFFC", VA = "0xE1BFFC")]
		private string EncryptString(string text)
		{
			return null;
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xE1C334", Offset = "0xE1C334", VA = "0xE1C334")]
		public MockPlayerStats()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public class TestLineOfSight : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002370")]
		[Address(RVA = "0xE1C3B8", Offset = "0xE1C3B8", VA = "0xE1C3B8")]
		public TestLineOfSight()
		{
		}
	}
}
namespace Alvo.Testing.Rewards
{
	[Token(Token = "0x20005E1")]
	public class LoadoutTestings : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LoadoutPanel loadoutPanel;

		[Token(Token = "0x4003163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Only need to set when PlayerLocalData won't be present")]
		public MockPlayerStats mockPlayerStats;

		[Token(Token = "0x4003164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MockPlayerStats mockSessionStats;

		[Token(Token = "0x4003165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AzureQuery azureQuery;

		[Token(Token = "0x4003166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerLocalData playerLocalData;

		[Token(Token = "0x4003167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerStats playerStats;

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xE1C3C0", Offset = "0xE1C3C0", VA = "0xE1C3C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xE1C518", Offset = "0xE1C518", VA = "0xE1C518")]
		public void AddCoinsAndExp()
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xE1C930", Offset = "0xE1C930", VA = "0xE1C930")]
		public void ResetPurchases()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xE1CD00", Offset = "0xE1CD00", VA = "0xE1CD00")]
		public void SetDBCallsActive(bool b)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xE1CD20", Offset = "0xE1CD20", VA = "0xE1CD20")]
		public LoadoutTestings()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public class MockRewards : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setup")]
		public MatchRewardsUI matchRewardsUI;

		[Token(Token = "0x4003169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MockPlayerStats mockStats;

		[Token(Token = "0x400316A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Settings")]
		public PlayerStats playerStats;

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xE1CD28", Offset = "0xE1CD28", VA = "0xE1CD28")]
		private void Update()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xE1CF0C", Offset = "0xE1CF0C", VA = "0xE1CF0C")]
		public void ShowRewards(PlayerStats _sessionStats)
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xE1CE10", Offset = "0xE1CE10", VA = "0xE1CE10")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xE1CF2C", Offset = "0xE1CF2C", VA = "0xE1CF2C")]
		public MockRewards()
		{
		}
	}
}
namespace Alvo.Missions
{
	[Token(Token = "0x20005E3")]
	public class AzureMissionLoader : IMissionLoader
	{
		[Token(Token = "0x400316B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<Mission[]> callback;

		[Token(Token = "0x400316C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mission[] missionsLoaded;

		[Token(Token = "0x400316D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool invokeCallback;

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xE1CF34", Offset = "0xE1CF34", VA = "0xE1CF34")]
		public AzureMissionLoader()
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xE1CFE4", Offset = "0xE1CFE4", VA = "0xE1CFE4", Slot = "1")]
		~AzureMissionLoader()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xE1D108", Offset = "0xE1D108", VA = "0xE1D108", Slot = "4")]
		public void GetMissions(Action<Mission[]> _callback)
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xE1D1E8", Offset = "0xE1D1E8", VA = "0xE1D1E8", Slot = "5")]
		public void SaveMissions(Mission[] _missions)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xE1D1F0", Offset = "0xE1D1F0", VA = "0xE1D1F0")]
		public void OnQueryResults(AzureRequestTypes type, string result, int requId)
		{
		}
	}
	[Token(Token = "0x20005E4")]
	public class AzureSimMissionLoader : IMissionLoader
	{
		[Token(Token = "0x400316E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mission[] localMissions;

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xE1D670", Offset = "0xE1D670", VA = "0xE1D670")]
		public AzureSimMissionLoader(Mission[] _localMissions)
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xE1D698", Offset = "0xE1D698", VA = "0xE1D698", Slot = "4")]
		public void GetMissions(Action<Mission[]> callback)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xE1D6C0", Offset = "0xE1D6C0", VA = "0xE1D6C0", Slot = "5")]
		public void SaveMissions(Mission[] _missions)
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class MissionManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20005E6")]
		public delegate void Event(Mission[] _m);

		[Token(Token = "0x20005E7")]
		private struct MissionCallResult
		{
			[Token(Token = "0x4003177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string error;

			[Token(Token = "0x4003178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool redeemed;

			[Token(Token = "0x4003179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ChallengeReset;
		}

		[Token(Token = "0x400316F")]
		public const int MissionCount = 3;

		[Token(Token = "0x4003170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IMissionLoader missionLoader;

		[Token(Token = "0x4003171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerStats playerStats;

		[Token(Token = "0x4003172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Testing")]
		[Tooltip("Turn on when testing on a separate scene")]
		[SerializeField]
		private bool testing;

		[Token(Token = "0x4003173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MockPlayerStats mockPlayerStats;

		[Token(Token = "0x4003174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Mission[] m_Missions;

		[Token(Token = "0x4003175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MissionManager instance;

		[Token(Token = "0x4003176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Event onMissionsLoaded;

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xE1D6C8", Offset = "0xE1D6C8", VA = "0xE1D6C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xE1D76C", Offset = "0xE1D76C", VA = "0xE1D76C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xE1D810", Offset = "0xE1D810", VA = "0xE1D810")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xE1D85C", Offset = "0xE1D85C", VA = "0xE1D85C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xE1AF4C", Offset = "0xE1AF4C", VA = "0xE1AF4C")]
		public void LoadCurrentMissions()
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xE1D9D8", Offset = "0xE1D9D8", VA = "0xE1D9D8")]
		private void OnMissionsLoaded(Mission[] _missions)
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xE1C770", Offset = "0xE1C770", VA = "0xE1C770")]
		public void MatchEndMissionUpdate(PlayerStats _sessionStats)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xE1E070", Offset = "0xE1E070", VA = "0xE1E070")]
		public void ClearSessionProgress()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xE1E0B4", Offset = "0xE1E0B4", VA = "0xE1E0B4")]
		public Mission[] GetMissionsData()
		{
			return null;
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xE1E0BC", Offset = "0xE1E0BC", VA = "0xE1E0BC")]
		public List<Mission> GetMissionsByTerm(TimeframeType termType)
		{
			return null;
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xE1E1EC", Offset = "0xE1E1EC", VA = "0xE1E1EC")]
		public void RedeemMission(Mission _mission)
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xE1B4F4", Offset = "0xE1B4F4", VA = "0xE1B4F4")]
		public void ResetMission(int id)
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xE1E4A8", Offset = "0xE1E4A8", VA = "0xE1E4A8")]
		public void ResetMission(Mission _mission)
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xE1E584", Offset = "0xE1E584", VA = "0xE1E584")]
		private void MissionResetResponse(AzureRequestTypes types, string result, int requId)
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xE1E774", Offset = "0xE1E774", VA = "0xE1E774")]
		public MissionManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E8")]
	public class Mission
	{
		[Serializable]
		[Token(Token = "0x20005E9")]
		public struct Rewards
		{
			[Token(Token = "0x4003186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Coins;

			[Token(Token = "0x4003187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int XP;
		}

		[Token(Token = "0x400317A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400317B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TimeframeType timeframeType;

		[Token(Token = "0x400317C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerMissionData requirements;

		[Token(Token = "0x400317D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Rewards rewards;

		[Token(Token = "0x400317E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int progressStat;

		[Token(Token = "0x400317F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int sessionProgressStat;

		[Token(Token = "0x4003180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string description;

		[Token(Token = "0x4003181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string shortDescription;

		[Token(Token = "0x4003182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool isRedeemed;

		[Token(Token = "0x4003183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int ChallengeID;

		[Token(Token = "0x4003184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private long m_DateTimeStart;

		[Token(Token = "0x4003185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DateTime? m_DateStart;

		[Token(Token = "0x1700043A")]
		public DateTime DateStart
		{
			[Token(Token = "0x6002396")]
			[Address(RVA = "0xE1B86C", Offset = "0xE1B86C", VA = "0xE1B86C")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xE1E8E8", Offset = "0xE1E8E8", VA = "0xE1E8E8")]
		public Mission(int _id, long _dateTimeStart, TimeframeType _termType, PlayerMissionData _requirements, int _challengeStat, Rewards _rewards, string _desc, string _shortDesc, bool _redeemed, int _challengeID)
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xE1E984", Offset = "0xE1E984", VA = "0xE1E984")]
		public bool IsFulfilled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xE1E9C0", Offset = "0xE1E9C0", VA = "0xE1E9C0")]
		public void SetTimeStart(long ticks)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EA")]
	public struct PlayerMissionData
	{
		[Token(Token = "0x4003188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Kills;

		[Token(Token = "0x4003189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int TDMWin;

		[Token(Token = "0x400318A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int FFAFirstPlace;

		[Token(Token = "0x400318B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int FFASecondPlace;

		[Token(Token = "0x400318C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int FFAThirdPlace;

		[Token(Token = "0x400318D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int FFAGamesPlayed;

		[Token(Token = "0x400318E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SNDWin;

		[Token(Token = "0x400318F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SNDRoundWin;

		[Token(Token = "0x4003190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int SNDPlant;

		[Token(Token = "0x4003191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int SNDDefuse;

		[Token(Token = "0x4003192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int HpWin;

		[Token(Token = "0x4003193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MeleeKills;

		[Token(Token = "0x4003194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int GunKills;

		[Token(Token = "0x4003195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Headshots;

		[Token(Token = "0x4003196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Grenadekills;

		[Token(Token = "0x4003197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] KillsGuns;

		[Token(Token = "0x4003198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[] KillstreakKills;

		[Token(Token = "0x4003199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int Weapon;

		[Token(Token = "0x400319A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int Killstreak;

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xE1E9C8", Offset = "0xE1E9C8", VA = "0xE1E9C8")]
		public PlayerMissionData(PlayerStats stats)
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xE1EABC", Offset = "0xE1EABC", VA = "0xE1EABC")]
		public void SetupKillsById()
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xE1EB10", Offset = "0xE1EB10", VA = "0xE1EB10")]
		public static PlayerMissionData operator -(PlayerMissionData a, PlayerMissionData b)
		{
			return default(PlayerMissionData);
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xE1DA68", Offset = "0xE1DA68", VA = "0xE1DA68")]
		public int GetMatchProgress(PlayerStats _stats)
		{
			return default(int);
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xE1DCC8", Offset = "0xE1DCC8", VA = "0xE1DCC8")]
		public int GetRequirementValue()
		{
			return default(int);
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xE1E9A4", Offset = "0xE1E9A4", VA = "0xE1E9A4")]
		public bool IsFulfilled(int _progress)
		{
			return default(bool);
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xE1ECE0", Offset = "0xE1ECE0", VA = "0xE1ECE0")]
		private int[] GetValuesList()
		{
			return null;
		}
	}
	[Token(Token = "0x20005EB")]
	public enum TimeframeType
	{
		[Token(Token = "0x400319C")]
		DAILY,
		[Token(Token = "0x400319D")]
		WEEKLY
	}
	[Token(Token = "0x20005EC")]
	public interface IMissionLoader
	{
		[Token(Token = "0x60023A1")]
		void GetMissions(Action<Mission[]> callback);

		[Token(Token = "0x60023A2")]
		void SaveMissions(Mission[] missions);
	}
}
namespace Alvo.Missions.UI
{
	[Token(Token = "0x20005ED")]
	public class MissionMainUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20005EE")]
		[CompilerGenerated]
		private sealed class <TurnOnFor1Frame>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionMainUI <>4__this;

			[Token(Token = "0x1700043B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B4")]
				[Address(RVA = "0xE1FB50", Offset = "0xE1FB50", VA = "0xE1FB50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B6")]
				[Address(RVA = "0xE1FB98", Offset = "0xE1FB98", VA = "0xE1FB98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B1")]
			[Address(RVA = "0xE1FA18", Offset = "0xE1FA18", VA = "0xE1FA18")]
			[DebuggerHidden]
			public <TurnOnFor1Frame>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60023B2")]
			[Address(RVA = "0xE1FAC4", Offset = "0xE1FAC4", VA = "0xE1FAC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B3")]
			[Address(RVA = "0xE1FAC8", Offset = "0xE1FAC8", VA = "0xE1FAC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xE1FB58", Offset = "0xE1FB58", VA = "0xE1FB58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400319E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Mission[] missions;

		[Token(Token = "0x400319F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MissionProgressValue[] progresses;

		[Token(Token = "0x40031A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerStats currentPlayerStats;

		[Token(Token = "0x40031A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WeaponList weaponList;

		[Token(Token = "0x40031A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_MissionItemContainer;

		[Token(Token = "0x40031A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MissionUIItem m_MissionUIItemPrefab;

		[Token(Token = "0x40031A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_MissionRedeemableNotif;

		[Token(Token = "0x40031A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_ContentContainer;

		[Token(Token = "0x40031A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool turnOnFor1Frame;

		[Token(Token = "0x40031A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int languageOnLastOpen;

		[Token(Token = "0x40031A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Testing")]
		public bool useTestingVars;

		[Token(Token = "0x40031A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MockPlayerStats mockPlayerStats;

		[Token(Token = "0x40031AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WeaponList mockWeaponList;

		[Token(Token = "0x40031AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<MissionUIItem> pool;

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xE1EE28", Offset = "0xE1EE28", VA = "0xE1EE28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xE1EF08", Offset = "0xE1EF08", VA = "0xE1EF08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xE1EFE8", Offset = "0xE1EFE8", VA = "0xE1EFE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xE1F314", Offset = "0xE1F314", VA = "0xE1F314")]
		public void CheckLanguageChanged()
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xE1F3D0", Offset = "0xE1F3D0", VA = "0xE1F3D0")]
		public void LoadAllMission()
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xE1F8D4", Offset = "0xE1F8D4", VA = "0xE1F8D4")]
		public void LoadMissionByTimeframe(int _v)
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xE1ACB8", Offset = "0xE1ACB8", VA = "0xE1ACB8")]
		public void LoadMissionByTimeframe(TimeframeType type)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xE1B3AC", Offset = "0xE1B3AC", VA = "0xE1B3AC")]
		public void UpdateProgresses()
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xE1F230", Offset = "0xE1F230", VA = "0xE1F230")]
		private void OnMissionsLoaded(Mission[] _missions)
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0xE1F8D8", Offset = "0xE1F8D8", VA = "0xE1F8D8")]
		private List<int> GetMissionIdsByTimeframe(TimeframeType type)
		{
			return null;
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xE1F5F0", Offset = "0xE1F5F0", VA = "0xE1F5F0")]
		private MissionUIItem GetFromPool()
		{
			return null;
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xE1F48C", Offset = "0xE1F48C", VA = "0xE1F48C")]
		private void CleanPool()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xE1F1C8", Offset = "0xE1F1C8", VA = "0xE1F1C8")]
		[IteratorStateMachine(typeof(<TurnOnFor1Frame>d__26))]
		private IEnumerator TurnOnFor1Frame()
		{
			return null;
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xE1FA40", Offset = "0xE1FA40", VA = "0xE1FA40")]
		public MissionMainUI()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	public struct MissionProgressValue
	{
		[Token(Token = "0x40031AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x40031B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int currentVal;

		[Token(Token = "0x40031B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int requiredVal;

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xE1FA0C", Offset = "0xE1FA0C", VA = "0xE1FA0C")]
		public MissionProgressValue(string _name, int _curr, int _requ)
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public class MissionProgressEndgameData : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40031B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MissionUIItem[] missionItems;

		[Token(Token = "0x40031B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission[] m;

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xE1FBA0", Offset = "0xE1FBA0", VA = "0xE1FBA0")]
		public void UpdateMissionsUI(Mission[] missions)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xE1FD0C", Offset = "0xE1FD0C", VA = "0xE1FD0C")]
		public MissionProgressEndgameData()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	public class MissionRequirementUIItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40031B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI labelTextMesh;

		[Token(Token = "0x40031B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI rewardsTextMesh;

		[Token(Token = "0x40031B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI progressTextmesh;

		[Token(Token = "0x40031B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LanguageText coinsText;

		[Token(Token = "0x40031B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LanguageText shortXpText;

		[Token(Token = "0x40031B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LanguageText progressText;

		[Token(Token = "0x40031BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool jumpLine;

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xE1FD14", Offset = "0xE1FD14", VA = "0xE1FD14")]
		public void Setup(string _label, int _progress, int _requirement, Mission.Rewards _rewards, Color _color)
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xE20488", Offset = "0xE20488", VA = "0xE20488")]
		public void HideProgress()
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xE20518", Offset = "0xE20518", VA = "0xE20518")]
		public MissionRequirementUIItem()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public class MissionUIItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40031BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_ButtonLabel;

		[Token(Token = "0x40031BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_TimerTextMesh;

		[Token(Token = "0x40031BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_NextMissionTimerTextMesh;

		[Token(Token = "0x40031BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_MissionRequirementContainer;

		[Token(Token = "0x40031BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button button;

		[Token(Token = "0x40031C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_MissionInfoContainer;

		[Token(Token = "0x40031C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_TimerContainer;

		[Token(Token = "0x40031C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MissionRequirementUIItem m_RequirementUIItem;

		[Token(Token = "0x40031C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color m_HighlightColor;

		[Token(Token = "0x40031C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_NextMissionContainer;

		[Token(Token = "0x40031C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_MainContentContaier;

		[Token(Token = "0x40031C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Space]
		[SerializeField]
		private Mission m_Mission;

		[Token(Token = "0x40031C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool timerRunning;

		[Token(Token = "0x40031C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private long unlockTime;

		[Token(Token = "0x40031C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private long ticksAtStart;

		[Token(Token = "0x40031CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private long prevTicks;

		[Token(Token = "0x40031CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TimeSpan timerTimeSpan;

		[Token(Token = "0x40031CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float timeAtStart;

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xE20528", Offset = "0xE20528", VA = "0xE20528")]
		private void Update()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xE20914", Offset = "0xE20914", VA = "0xE20914")]
		public void Setup(Mission _mission, PlayerStats currentStats)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xE20BE8", Offset = "0xE20BE8", VA = "0xE20BE8")]
		public void SetRequirements(MissionProgressValue _progress)
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xE20C4C", Offset = "0xE20C4C", VA = "0xE20C4C")]
		public void RedeemMission()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xE20CBC", Offset = "0xE20CBC", VA = "0xE20CBC")]
		public void ResetMission()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xE20A80", Offset = "0xE20A80", VA = "0xE20A80")]
		private void SetupTimer()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xE20988", Offset = "0xE20988", VA = "0xE20988")]
		private void SetupButton()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xE20D18", Offset = "0xE20D18", VA = "0xE20D18")]
		public MissionUIItem()
		{
		}
	}
}
namespace Alvo.PrivateMatch
{
	[Serializable]
	[Token(Token = "0x20005F3")]
	public class PrivateMatchCreationForm : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40031CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PrivateMatchSettingsForm m_settingsForm;

		[Token(Token = "0x40031CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerStats localPlayerStats;

		[Token(Token = "0x1700043D")]
		public PrivateMatchSettings Settings
		{
			[Token(Token = "0x60023C5")]
			[Address(RVA = "0xE20D28", Offset = "0xE20D28", VA = "0xE20D28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043E")]
		public PrivateMatchSettingsForm SettingsForm
		{
			[Token(Token = "0x60023C6")]
			[Address(RVA = "0xE20D44", Offset = "0xE20D44", VA = "0xE20D44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xE20D4C", Offset = "0xE20D4C", VA = "0xE20D4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xE21828", Offset = "0xE21828", VA = "0xE21828")]
		public PrivateMatchCreationForm()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	public class PrivateMatchEventHook : UnityEngine.MonoBehaviour, IPrivateMatchListener
	{
		[Token(Token = "0x40031CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent<PrivateMatchSettings> OnCreatedRoom;

		[Token(Token = "0x40031D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent<PrivateMatchSettings> OnJoinedRoom;

		[Token(Token = "0x40031D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnExitedPrivateRoom;

		[Token(Token = "0x40031D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent<RoomInfo[], List<PrivateMatchSettings>> OnReceivedRoomListUpdate;

		[Token(Token = "0x40031D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent<Dictionary<int, PrivateMatchPlayerStatus>> OnPlayerListUpdated;

		[Token(Token = "0x40031D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent<int, PrivateMatchPlayerStatus> OnPlayerStatusUpdated;

		[Token(Token = "0x40031D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent<PrivateMatchSettings> OnRoomPropertiesUpdate;

		[Token(Token = "0x40031D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnMatchEnded;

		[Token(Token = "0x40031D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent OnMovingToNewMatch;

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xE21830", Offset = "0xE21830", VA = "0xE21830")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xE2198C", Offset = "0xE2198C", VA = "0xE2198C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xE21AA0", Offset = "0xE21AA0", VA = "0xE21AA0", Slot = "4")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnCreatedRoom(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xE21B00", Offset = "0xE21B00", VA = "0xE21B00", Slot = "5")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnJoinedRoom(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xE21B60", Offset = "0xE21B60", VA = "0xE21B60", Slot = "6")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnExitedPrivateRoom()
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xE21B74", Offset = "0xE21B74", VA = "0xE21B74", Slot = "7")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnReceivedRoomListUpdate(RoomInfo[] roomList, List<PrivateMatchSettings> settingList)
		{
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xE21BE8", Offset = "0xE21BE8", VA = "0xE21BE8", Slot = "8")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnPlayerListUpdated(Dictionary<int, PrivateMatchPlayerStatus> players)
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xE21C48", Offset = "0xE21C48", VA = "0xE21C48", Slot = "9")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnPlayerStatusUpdated(int actorId, PrivateMatchPlayerStatus status)
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xE21CBC", Offset = "0xE21CBC", VA = "0xE21CBC", Slot = "10")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnRoomPropertiesUpdate(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xE21D1C", Offset = "0xE21D1C", VA = "0xE21D1C", Slot = "11")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnMatchEnded()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xE21D30", Offset = "0xE21D30", VA = "0xE21D30", Slot = "12")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnMovingToNewMatch()
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xE21D44", Offset = "0xE21D44", VA = "0xE21D44")]
		public PrivateMatchEventHook()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class PrivateMatchManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20005F6")]
		private class EventLogger : IPrivateMatchListener
		{
			[Token(Token = "0x600240A")]
			[Address(RVA = "0xE283E4", Offset = "0xE283E4", VA = "0xE283E4", Slot = "4")]
			public void OnCreatedRoom(PrivateMatchSettings roomSettings)
			{
			}

			[Token(Token = "0x600240B")]
			[Address(RVA = "0xE2846C", Offset = "0xE2846C", VA = "0xE2846C", Slot = "6")]
			public void OnExitedPrivateRoom()
			{
			}

			[Token(Token = "0x600240C")]
			[Address(RVA = "0xE284B0", Offset = "0xE284B0", VA = "0xE284B0", Slot = "5")]
			public void OnJoinedRoom(PrivateMatchSettings roomSettings)
			{
			}

			[Token(Token = "0x600240D")]
			[Address(RVA = "0xE28540", Offset = "0xE28540", VA = "0xE28540", Slot = "11")]
			public void OnMatchEnded()
			{
			}

			[Token(Token = "0x600240E")]
			[Address(RVA = "0xE28584", Offset = "0xE28584", VA = "0xE28584", Slot = "12")]
			public void OnMovingToNewMatch()
			{
			}

			[Token(Token = "0x600240F")]
			[Address(RVA = "0xE285C8", Offset = "0xE285C8", VA = "0xE285C8", Slot = "8")]
			public void OnPlayerListUpdated(Dictionary<int, PrivateMatchPlayerStatus> players)
			{
			}

			[Token(Token = "0x6002410")]
			[Address(RVA = "0xE28668", Offset = "0xE28668", VA = "0xE28668", Slot = "9")]
			public void OnPlayerStatusUpdated(int actorId, PrivateMatchPlayerStatus status)
			{
			}

			[Token(Token = "0x6002411")]
			[Address(RVA = "0xE28824", Offset = "0xE28824", VA = "0xE28824", Slot = "7")]
			public void OnReceivedRoomListUpdate(RoomInfo[] roomList, List<PrivateMatchSettings> settingList)
			{
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0xE28A7C", Offset = "0xE28A7C", VA = "0xE28A7C", Slot = "10")]
			public void OnRoomPropertiesUpdate(PrivateMatchSettings roomSettings)
			{
			}

			[Token(Token = "0x6002413")]
			[Address(RVA = "0xE22634", Offset = "0xE22634", VA = "0xE22634")]
			public EventLogger()
			{
			}
		}

		[Token(Token = "0x20005F7")]
		[CompilerGenerated]
		private sealed class <MoveToEoMUI>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PrivateMatchManager <>4__this;

			[Token(Token = "0x17000448")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002417")]
				[Address(RVA = "0xE28BE4", Offset = "0xE28BE4", VA = "0xE28BE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000449")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002419")]
				[Address(RVA = "0xE28C2C", Offset = "0xE28C2C", VA = "0xE28C2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0xE227E8", Offset = "0xE227E8", VA = "0xE227E8")]
			[DebuggerHidden]
			public <MoveToEoMUI>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6002415")]
			[Address(RVA = "0xE28B04", Offset = "0xE28B04", VA = "0xE28B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002416")]
			[Address(RVA = "0xE28B08", Offset = "0xE28B08", VA = "0xE28B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002418")]
			[Address(RVA = "0xE28BEC", Offset = "0xE28BEC", VA = "0xE28BEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F8")]
		[CompilerGenerated]
		private sealed class <RoomSearchRoutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PrivateMatchManager <>4__this;

			[Token(Token = "0x1700044A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600241D")]
				[Address(RVA = "0xE28D60", Offset = "0xE28D60", VA = "0xE28D60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600241F")]
				[Address(RVA = "0xE28DA8", Offset = "0xE28DA8", VA = "0xE28DA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600241A")]
			[Address(RVA = "0xE248BC", Offset = "0xE248BC", VA = "0xE248BC")]
			[DebuggerHidden]
			public <RoomSearchRoutine>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x600241B")]
			[Address(RVA = "0xE28C34", Offset = "0xE28C34", VA = "0xE28C34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600241C")]
			[Address(RVA = "0xE28C38", Offset = "0xE28C38", VA = "0xE28C38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600241E")]
			[Address(RVA = "0xE28D68", Offset = "0xE28D68", VA = "0xE28D68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40031D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PrivateMatchManager Instance;

		[Token(Token = "0x40031D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<int, PrivateMatchPlayerStatus> players;

		[Token(Token = "0x40031DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrivateMatchSettings roomSettings;

		[Token(Token = "0x40031DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PrivateMatchPlayerStatus localPlayerStatus;

		[Token(Token = "0x40031DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string unEncryptedPassword;

		[Token(Token = "0x40031DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] teamMemberCount;

		[Token(Token = "0x40031DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_inPrivateRoom;

		[Token(Token = "0x40031DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_creatingRoom;

		[Token(Token = "0x40031E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_joiningRoom;

		[Token(Token = "0x40031E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool m_movingToWaitingRoomUI;

		[Token(Token = "0x40031E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_inNonPrivateRoom;

		[Token(Token = "0x40031E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private byte m_previousTeam;

		[Token(Token = "0x40031E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PrivateMatchSearchFilter searchFilter;

		[Token(Token = "0x40031E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PrivateMatchSearchFilter lastSearchFilter;

		[Token(Token = "0x40031E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AlvoPhotonManager m_photonManager;

		[Token(Token = "0x40031E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerLocalData m_localData;

		[Token(Token = "0x40031E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<IPrivateMatchListener> m_listeners;

		[Token(Token = "0x40031E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool forceUpdateTeam;

		[Token(Token = "0x40031EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[Header("For build")]
		public bool hideNewSettings;

		[Token(Token = "0x40031EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TypedLobby privateMatchLobby;

		[Token(Token = "0x40031EC")]
		private const string k_ready = "pm-ready";

		[Token(Token = "0x40031ED")]
		private const string k_team = "pm-team";

		[Token(Token = "0x40031EE")]
		private const string k_moving = "pm-moving";

		[Token(Token = "0x40031EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EventLogger logger;

		[Token(Token = "0x40031F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_firstTimeConnectingToServer;

		[Token(Token = "0x1700043F")]
		public bool IsJoiningRoom
		{
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0xE21D4C", Offset = "0xE21D4C", VA = "0xE21D4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000440")]
		public TypedLobby PrivateMatchLobby
		{
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xE21D54", Offset = "0xE21D54", VA = "0xE21D54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		public static bool InPrivateRoom
		{
			[Token(Token = "0x60023D7")]
			[Address(RVA = "0xE21DD8", Offset = "0xE21DD8", VA = "0xE21DD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000442")]
		public static bool InPrivateWaitingRoom
		{
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xE21E94", Offset = "0xE21E94", VA = "0xE21E94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000443")]
		public static bool InPrivateEndOfMatch
		{
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0xE21F60", Offset = "0xE21F60", VA = "0xE21F60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000444")]
		public static bool InPrivateWaitingRoomOrEndOfMatch
		{
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0xE2202C", Offset = "0xE2202C", VA = "0xE2202C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000445")]
		public static bool InNonPrivateRoom
		{
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xE220F8", Offset = "0xE220F8", VA = "0xE220F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000446")]
		public static bool IsHost
		{
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0xE2219C", Offset = "0xE2219C", VA = "0xE2219C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000447")]
		public PrivateMatchStartAvailability MatchStartAvailability
		{
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0xE22250", Offset = "0xE22250", VA = "0xE22250")]
			get
			{
				return default(PrivateMatchStartAvailability);
			}
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xE2245C", Offset = "0xE2245C", VA = "0xE2245C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xE22500", Offset = "0xE22500", VA = "0xE22500")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xE225A4", Offset = "0xE225A4", VA = "0xE225A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xE2263C", Offset = "0xE2263C", VA = "0xE2263C")]
		private void Start()
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xE226E4", Offset = "0xE226E4", VA = "0xE226E4")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xE22780", Offset = "0xE22780", VA = "0xE22780")]
		[IteratorStateMachine(typeof(<MoveToEoMUI>d__47))]
		private IEnumerator MoveToEoMUI()
		{
			return null;
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xE218E4", Offset = "0xE218E4", VA = "0xE218E4")]
		public void Subscribe(IPrivateMatchListener _listener)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xE21A40", Offset = "0xE21A40", VA = "0xE21A40")]
		public void Unsubscribe(IPrivateMatchListener _listener)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xE22810", Offset = "0xE22810", VA = "0xE22810")]
		public void CreateMatch(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xE22AC0", Offset = "0xE22AC0", VA = "0xE22AC0")]
		public void CreateAndJoinMatch(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xE22818", Offset = "0xE22818", VA = "0xE22818")]
		private void CreateMatch(PrivateMatchSettings _settings, bool _join)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xE22BF0", Offset = "0xE22BF0", VA = "0xE22BF0")]
		public void JoinMatch(string _roomName)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xE22C88", Offset = "0xE22C88", VA = "0xE22C88")]
		public void LeaveMatch()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xE22ECC", Offset = "0xE22ECC", VA = "0xE22ECC")]
		public void SetJoiningMatch()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xE22ED8", Offset = "0xE22ED8", VA = "0xE22ED8")]
		public void StartPrivateMatchGamemode(PrivateMatchSettings settings)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xE2316C", Offset = "0xE2316C", VA = "0xE2316C")]
		public void UpdateRoomPrivateMatchSettings(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xE23B18", Offset = "0xE23B18", VA = "0xE23B18")]
		public void OnEndOfMatch()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xE23DD0", Offset = "0xE23DD0", VA = "0xE23DD0")]
		public void JoinTeam(byte team)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xE23F2C", Offset = "0xE23F2C", VA = "0xE23F2C")]
		public bool GameModeEditChangeTeam(GameMode prev, GameMode current)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xE2418C", Offset = "0xE2418C", VA = "0xE2418C")]
		public void SetReady(bool ready)
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xE242BC", Offset = "0xE242BC", VA = "0xE242BC")]
		private void FindNewHost()
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xE24420", Offset = "0xE24420", VA = "0xE24420")]
		private void ChangeHostTo(int actorId)
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xE24630", Offset = "0xE24630", VA = "0xE24630")]
		private void SetHost(int actorId)
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xE247D0", Offset = "0xE247D0", VA = "0xE247D0")]
		public void SearchRooms()
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xE24854", Offset = "0xE24854", VA = "0xE24854")]
		[IteratorStateMachine(typeof(<RoomSearchRoutine>d__66))]
		private IEnumerator RoomSearchRoutine()
		{
			return null;
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xE248E4", Offset = "0xE248E4", VA = "0xE248E4")]
		public void AddPlayerProfile(PlayerProfile profile)
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xE24E80", Offset = "0xE24E80", VA = "0xE24E80")]
		private void TryToAddPhotonPlayer(PhotonPlayer player)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xE2517C", Offset = "0xE2517C", VA = "0xE2517C")]
		public void RemovePlayerProfile(int actorId)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xE25390", Offset = "0xE25390", VA = "0xE25390")]
		public bool TestPassword(string encryptedPass, string pass)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xE25404", Offset = "0xE25404", VA = "0xE25404")]
		public bool IsPlayerInSameTeamOfLocalPlayer(int _playerActorId)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xE254CC", Offset = "0xE254CC", VA = "0xE254CC")]
		private int GetFewestMemberTeam()
		{
			return default(int);
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xE2553C", Offset = "0xE2553C", VA = "0xE2553C")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xE25658", Offset = "0xE25658", VA = "0xE25658")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xE2569C", Offset = "0xE2569C", VA = "0xE2569C")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xE258A0", Offset = "0xE258A0", VA = "0xE258A0")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xE262E0", Offset = "0xE262E0", VA = "0xE262E0")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xE266BC", Offset = "0xE266BC", VA = "0xE266BC")]
		public void OnPhotonJoinRoomFailed(object[] codeAndMs)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xE26908", Offset = "0xE26908", VA = "0xE26908")]
		public void OnReceivedRoomListUpdate()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xE26B78", Offset = "0xE26B78", VA = "0xE26B78")]
		public void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable changedProperties)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xE271F8", Offset = "0xE271F8", VA = "0xE271F8")]
		public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xE27C84", Offset = "0xE27C84", VA = "0xE27C84")]
		public void OnPhotonPlayerConnected(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xE27D14", Offset = "0xE27D14", VA = "0xE27D14")]
		public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xE2809C", Offset = "0xE2809C", VA = "0xE2809C")]
		private void CheckForHost()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xE2829C", Offset = "0xE2829C", VA = "0xE2829C")]
		public PrivateMatchManager()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public enum PrivateMatchStatus
	{
		[Token(Token = "0x40031F8")]
		WaitingForPlayers,
		[Token(Token = "0x40031F9")]
		Playing,
		[Token(Token = "0x40031FA")]
		EndOfMatch
	}
	[Token(Token = "0x20005FA")]
	public enum PrivateMatchStartAvailability
	{
		[Token(Token = "0x40031FC")]
		Available,
		[Token(Token = "0x40031FD")]
		NotEnoughPlayers,
		[Token(Token = "0x40031FE")]
		TeamsNotValid
	}
	[Token(Token = "0x20005FB")]
	public interface IPrivateMatchListener
	{
		[Token(Token = "0x6002420")]
		void OnCreatedRoom(PrivateMatchSettings roomSettings);

		[Token(Token = "0x6002421")]
		void OnJoinedRoom(PrivateMatchSettings roomSettings);

		[Token(Token = "0x6002422")]
		void OnExitedPrivateRoom();

		[Token(Token = "0x6002423")]
		void OnReceivedRoomListUpdate(RoomInfo[] roomList, List<PrivateMatchSettings> settingList);

		[Token(Token = "0x6002424")]
		void OnPlayerListUpdated(Dictionary<int, PrivateMatchPlayerStatus> players);

		[Token(Token = "0x6002425")]
		void OnPlayerStatusUpdated(int actorId, PrivateMatchPlayerStatus status);

		[Token(Token = "0x6002426")]
		void OnRoomPropertiesUpdate(PrivateMatchSettings roomSettings);

		[Token(Token = "0x6002427")]
		void OnMatchEnded();

		[Token(Token = "0x6002428")]
		void OnMovingToNewMatch();
	}
	[Token(Token = "0x20005FC")]
	public abstract class PrivateMatchListener : IPrivateMatchListener
	{
		[Token(Token = "0x6002429")]
		[Address(RVA = "0xE28DB0", Offset = "0xE28DB0", VA = "0xE28DB0", Slot = "13")]
		public virtual void OnCreatedRoom(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xE28DB4", Offset = "0xE28DB4", VA = "0xE28DB4", Slot = "14")]
		public virtual void OnExitedPrivateRoom()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xE28DB8", Offset = "0xE28DB8", VA = "0xE28DB8", Slot = "15")]
		public virtual void OnJoinedRoom(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xE28DBC", Offset = "0xE28DBC", VA = "0xE28DBC", Slot = "16")]
		public virtual void OnPlayerListUpdated(Dictionary<int, PrivateMatchPlayerStatus> players)
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xE28DC0", Offset = "0xE28DC0", VA = "0xE28DC0", Slot = "17")]
		public virtual void OnPlayerStatusUpdated(int fid, PrivateMatchPlayerStatus status)
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xE28DC4", Offset = "0xE28DC4", VA = "0xE28DC4", Slot = "18")]
		public virtual void OnReceivedRoomListUpdate(RoomInfo[] roomList, List<PrivateMatchSettings> settingList)
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xE28DC8", Offset = "0xE28DC8", VA = "0xE28DC8", Slot = "19")]
		public virtual void OnRoomPropertiesUpdate(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xE28DCC", Offset = "0xE28DCC", VA = "0xE28DCC", Slot = "20")]
		public virtual void OnNextRoomPropertiesUpdate(PrivateMatchSettings nextRoomSettings)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xE28DD0", Offset = "0xE28DD0", VA = "0xE28DD0", Slot = "11")]
		public void OnMatchEnded()
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xE28DD4", Offset = "0xE28DD4", VA = "0xE28DD4", Slot = "12")]
		public void OnMovingToNewMatch()
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xE28DD8", Offset = "0xE28DD8", VA = "0xE28DD8")]
		protected PrivateMatchListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FD")]
	public class PrivateMatchSettings
	{
		[Token(Token = "0x20005FE")]
		public enum Validity
		{
			[Token(Token = "0x4003215")]
			Valid,
			[Token(Token = "0x4003216")]
			BadPassword
		}

		[Token(Token = "0x20005FF")]
		public enum Display
		{
			[Token(Token = "0x4003218")]
			Show,
			[Token(Token = "0x4003219")]
			Hide
		}

		[Token(Token = "0x40031FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayName;

		[Token(Token = "0x4003200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameMode gameMode;

		[Token(Token = "0x4003201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public byte mapNumber;

		[Token(Token = "0x4003202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public byte nextMapNumber;

		[Token(Token = "0x4003203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool friendlyFire;

		[Token(Token = "0x4003204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public byte serverLocation;

		[Token(Token = "0x4003205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfkTimer;

		[Token(Token = "0x4003206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool allowBots;

		[Token(Token = "0x4003207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public byte minPlayersForNoBots;

		[Token(Token = "0x4003208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public byte sndRounds;

		[Token(Token = "0x4003209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool canJoinInProgress;

		[Token(Token = "0x400320A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public byte sndAttackingTeam;

		[Token(Token = "0x400320B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool allowRevives;

		[Token(Token = "0x400320C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string password;

		[Token(Token = "0x400320D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string version;

		[Token(Token = "0x400320E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Display display;

		[Token(Token = "0x400320F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public PrivateMatchStatus status;

		[Token(Token = "0x4003210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int hostFID;

		[Token(Token = "0x4003211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int hostID;

		[Token(Token = "0x4003212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string roomName;

		[Token(Token = "0x4003213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public byte maxPlayers;

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xE20E34", Offset = "0xE20E34", VA = "0xE20E34")]
		public PrivateMatchSettings()
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xE22AC8", Offset = "0xE22AC8", VA = "0xE22AC8")]
		public PrivateMatchSettings(PrivateMatchSettings source)
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xE261B4", Offset = "0xE261B4", VA = "0xE261B4")]
		public static bool CreatePrivateMatchSettings(RoomInfo roomInfo, out PrivateMatchSettings output)
		{
			return default(bool);
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xE22B4C", Offset = "0xE22B4C", VA = "0xE22B4C")]
		public void SetNameNow()
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xE29490", Offset = "0xE29490", VA = "0xE29490")]
		public void FindHostID()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xE29620", Offset = "0xE29620", VA = "0xE29620")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xE29860", Offset = "0xE29860", VA = "0xE29860")]
		public static bool CreatePrivateMatchSettings(byte[] bytes, out PrivateMatchSettings output)
		{
			return default(bool);
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0xE27180", Offset = "0xE27180", VA = "0xE27180")]
		public void UpdateWithHashtable(ExitGames.Client.Photon.Hashtable hash)
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0xE29CC0", Offset = "0xE29CC0", VA = "0xE29CC0")]
		public Validity GetValidity()
		{
			return default(Validity);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xE29CF0", Offset = "0xE29CF0", VA = "0xE29CF0")]
		public void SetGenericProperties(List<object> values)
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0xE28FB4", Offset = "0xE28FB4", VA = "0xE28FB4")]
		public bool SetAllProperties(List<object> values)
		{
			return default(bool);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xE234F0", Offset = "0xE234F0", VA = "0xE234F0")]
		public List<object> GetGenericProperties()
		{
			return null;
		}

		[Token(Token = "0x6002440")]
		private void SetIfNotNull<T>(ref T toSet, object value)
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xE28DE0", Offset = "0xE28DE0", VA = "0xE28DE0")]
		private static List<object> GetOrderedProperties(string[] keys, ExitGames.Client.Photon.Hashtable hash)
		{
			return null;
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xE2A0C4", Offset = "0xE2A0C4", VA = "0xE2A0C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000600")]
	public class PrivateMatchPlayerStatus
	{
		[Token(Token = "0x400321A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerProfile profile;

		[Token(Token = "0x400321B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isHost;

		[Token(Token = "0x400321C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isLocal;

		[Token(Token = "0x400321D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ready;

		[Token(Token = "0x400321E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public byte team;

		[Token(Token = "0x400321F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool movingRoom;

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xE24E50", Offset = "0xE24E50", VA = "0xE24E50")]
		public PrivateMatchPlayerStatus(PlayerProfile _profile)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xE2AA90", Offset = "0xE2AA90", VA = "0xE2AA90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000601")]
	public class PrivateMatchSearchFilter
	{
		[Token(Token = "0x4003220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int serverLocation;

		[Token(Token = "0x4003221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string platformCode;

		[Token(Token = "0x4003222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string version;

		[Token(Token = "0x6002445")]
		[Address(RVA = "0xE283DC", Offset = "0xE283DC", VA = "0xE283DC")]
		public PrivateMatchSearchFilter()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xE2561C", Offset = "0xE2561C", VA = "0xE2561C")]
		public PrivateMatchSearchFilter(PrivateMatchSearchFilter og)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xE2AD4C", Offset = "0xE2AD4C", VA = "0xE2AD4C")]
		public string GetSQLFilter()
		{
			return null;
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xE2AED8", Offset = "0xE2AED8", VA = "0xE2AED8")]
		public static bool operator ==(PrivateMatchSearchFilter a, PrivateMatchSearchFilter b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xE2AF40", Offset = "0xE2AF40", VA = "0xE2AF40")]
		public static bool operator !=(PrivateMatchSearchFilter a, PrivateMatchSearchFilter b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000602")]
	public class PrivateMatchMenuUI : UnityEngine.MonoBehaviour, IPrivateMatchListener
	{
		[Token(Token = "0x2000603")]
		private enum Panel
		{
			[Token(Token = "0x4003241")]
			Selection,
			[Token(Token = "0x4003242")]
			Creation,
			[Token(Token = "0x4003243")]
			Search,
			[Token(Token = "0x4003244")]
			RoomView,
			[Token(Token = "0x4003245")]
			RoomPreJoin
		}

		[Serializable]
		[Token(Token = "0x2000604")]
		private class ValidityMessage
		{
			[Token(Token = "0x4003246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PrivateMatchSettings.Validity type;

			[Token(Token = "0x4003247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LanguageText lt;

			[Token(Token = "0x600246E")]
			[Address(RVA = "0xE2DAD8", Offset = "0xE2DAD8", VA = "0xE2DAD8")]
			public ValidityMessage()
			{
			}
		}

		[Token(Token = "0x4003223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Section objects")]
		[SerializeField]
		private RectTransform m_mainPanel;

		[Token(Token = "0x4003224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform m_selectionPanel;

		[Token(Token = "0x4003225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform m_creationPanel;

		[Token(Token = "0x4003226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform m_searchPanel;

		[Token(Token = "0x4003227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform m_roomViewPanel;

		[Token(Token = "0x4003228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform m_roomPreViewPanel;

		[Token(Token = "0x4003229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectTransform m_changingRoomUI;

		[Token(Token = "0x400322A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_changingRoomCounter;

		[Token(Token = "0x400322B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform[] m_sectionPanels;

		[Token(Token = "0x400322C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Sction managers")]
		[SerializeField]
		private PrivateMatchCreationForm m_matchCreationForm;

		[Token(Token = "0x400322D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private PrivateMatchRoomViewUI m_roomView;

		[Token(Token = "0x400322E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PrivateMatchRoomSearchUI m_roomSearch;

		[Token(Token = "0x400322F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PrivateMatchRoomPreviewUI m_roomPreview;

		[Token(Token = "0x4003230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Other references")]
		public VrMainMenu mainMenu;

		[Token(Token = "0x4003231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public LanguageText PartyWarningText;

		[Token(Token = "0x4003232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public SimpleUIPanel PrivateMatchUI;

		[Token(Token = "0x4003233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button m_createMatchButton;

		[Token(Token = "0x4003234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshProUGUI m_settingsValidationMessageTmp;

		[Token(Token = "0x4003235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Header("Localization")]
		[SerializeField]
		private List<ValidityMessage> m_validityMessageLt;

		[Token(Token = "0x4003236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<PrivateMatchSettings.Validity, LanguageText> m_valdMessLtDic;

		[Token(Token = "0x4003237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_joinCreatedMatch;

		[Token(Token = "0x4003238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Panel m_currentPanel;

		[Token(Token = "0x4003239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private StandaloneInputModule m_standaloneInput;

		[Token(Token = "0x400323A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private VrInputModule m_vrInput;

		[Token(Token = "0x400323B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CurvedUIInputModule m_curvedInput;

		[Token(Token = "0x400323C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_hadDebugInput;

		[Token(Token = "0x400323D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool m_eventSysObjectWasActive;

		[Token(Token = "0x400323E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private PrivateMatchManager m_manager;

		[Token(Token = "0x400323F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private PlayerLocalData m_localData;

		[Token(Token = "0x1700044C")]
		private Dictionary<PrivateMatchSettings.Validity, LanguageText> ValidityMessages
		{
			[Token(Token = "0x600244A")]
			[Address(RVA = "0xE2AFA8", Offset = "0xE2AFA8", VA = "0xE2AFA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xE2B178", Offset = "0xE2B178", VA = "0xE2B178")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xE2B55C", Offset = "0xE2B55C", VA = "0xE2B55C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xE2B73C", Offset = "0xE2B73C", VA = "0xE2B73C")]
		public void CheckTitleUI()
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xE2BAF4", Offset = "0xE2BAF4", VA = "0xE2BAF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xE2BCDC", Offset = "0xE2BCDC", VA = "0xE2BCDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xE2BFA4", Offset = "0xE2BFA4", VA = "0xE2BFA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xE2C1B0", Offset = "0xE2C1B0", VA = "0xE2C1B0")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xE2C1B4", Offset = "0xE2C1B4", VA = "0xE2C1B4")]
		private void OnSceneUnloaded(Scene scene)
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xE2C22C", Offset = "0xE2C22C", VA = "0xE2C22C")]
		private void CheckCreationFormValidity(string prevPass, string newPass)
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xE2C230", Offset = "0xE2C230", VA = "0xE2C230")]
		public void CheckCreationFormValidity()
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xE2C394", Offset = "0xE2C394", VA = "0xE2C394")]
		public static int GameModeToDropdown(GameMode _gm)
		{
			return default(int);
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xE2C3B8", Offset = "0xE2C3B8", VA = "0xE2C3B8")]
		public static GameMode DropDownToGameMode(int _gm)
		{
			return default(GameMode);
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xE2BE58", Offset = "0xE2BE58", VA = "0xE2BE58")]
		private void FindInputModules()
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xE2BFD0", Offset = "0xE2BFD0", VA = "0xE2BFD0")]
		private void OpenMainPanel()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xE2C3DC", Offset = "0xE2C3DC", VA = "0xE2C3DC")]
		public void CloseMainPanel()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xE2C4E4", Offset = "0xE2C4E4", VA = "0xE2C4E4")]
		public void SetActiveMainPanel(bool _display)
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xE2B89C", Offset = "0xE2B89C", VA = "0xE2B89C")]
		private void ChangeToPanel(Panel _panel)
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xE2C514", Offset = "0xE2C514", VA = "0xE2C514")]
		private void OpenChangingRoomUI(bool displayCounter)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xE2C564", Offset = "0xE2C564", VA = "0xE2C564")]
		public void GoToHomePage()
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xE2C56C", Offset = "0xE2C56C", VA = "0xE2C56C")]
		public void CreateMatchPressed(bool _autoJoin)
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xE2C5A8", Offset = "0xE2C5A8", VA = "0xE2C5A8")]
		public void OpenSearchPressed()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xE2C5F8", Offset = "0xE2C5F8", VA = "0xE2C5F8")]
		public void OpenRoomPreview(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xE2C6B0", Offset = "0xE2C6B0", VA = "0xE2C6B0")]
		public void StartPrivateMatchGamemodePressed()
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0xE2C758", Offset = "0xE2C758", VA = "0xE2C758")]
		public void SetReady(bool ready)
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xE2C840", Offset = "0xE2C840", VA = "0xE2C840")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xE2C858", Offset = "0xE2C858", VA = "0xE2C858", Slot = "4")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnCreatedRoom(PrivateMatchSettings settings)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xE2C86C", Offset = "0xE2C86C", VA = "0xE2C86C", Slot = "5")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnJoinedRoom(PrivateMatchSettings settings)
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xE2DA84", Offset = "0xE2DA84", VA = "0xE2DA84", Slot = "6")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnExitedPrivateRoom()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xE2DAA0", Offset = "0xE2DAA0", VA = "0xE2DAA0", Slot = "7")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnReceivedRoomListUpdate(RoomInfo[] roomList, List<PrivateMatchSettings> settingList)
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xE2DAA4", Offset = "0xE2DAA4", VA = "0xE2DAA4", Slot = "8")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnPlayerListUpdated(Dictionary<int, PrivateMatchPlayerStatus> players)
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xE2DAA8", Offset = "0xE2DAA8", VA = "0xE2DAA8", Slot = "9")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnPlayerStatusUpdated(int actorId, PrivateMatchPlayerStatus status)
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xE2DAAC", Offset = "0xE2DAAC", VA = "0xE2DAAC", Slot = "10")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnRoomPropertiesUpdate(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xE2DAB0", Offset = "0xE2DAB0", VA = "0xE2DAB0", Slot = "11")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnMatchEnded()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xE2DAB4", Offset = "0xE2DAB4", VA = "0xE2DAB4", Slot = "12")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnMovingToNewMatch()
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xE2DAD0", Offset = "0xE2DAD0", VA = "0xE2DAD0")]
		public PrivateMatchMenuUI()
		{
		}
	}
	[Token(Token = "0x2000605")]
	public class PrivateMatchPrivateServerSetArrowSelection : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003248")]
		private const string kLocalisationServerName = "PRIVATE_MATCH_SERVER_";

		[Token(Token = "0x4003249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ArrowsSelection serversArrowSelection;

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xE2DAE0", Offset = "0xE2DAE0", VA = "0xE2DAE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xE2DE60", Offset = "0xE2DE60", VA = "0xE2DE60")]
		public PrivateMatchPrivateServerSetArrowSelection()
		{
		}
	}
	[Token(Token = "0x2000606")]
	public class PrivateMatchRoomPlayerListItemUI : UnityEngine.MonoBehaviour, IMonoPoolable
	{
		[Token(Token = "0x2000607")]
		public class Pool : MonoPool<PrivateMatchRoomPlayerListItemUI>
		{
			[Token(Token = "0x6002476")]
			[Address(RVA = "0xE2E334", Offset = "0xE2E334", VA = "0xE2E334")]
			public Pool(PrivateMatchRoomPlayerListItemUI _pfb, Transform _holder)
			{
			}
		}

		[Token(Token = "0x400324A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_playerName;

		[Token(Token = "0x400324B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_readyBackground;

		[Token(Token = "0x400324C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_avatarImage;

		[Token(Token = "0x400324D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectMask2D m_mask2d;

		[Token(Token = "0x400324E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color normalColor;

		[Token(Token = "0x400324F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AlvoColor hostColor;

		[Token(Token = "0x4003250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AlvoColor redColor;

		[Token(Token = "0x4003251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AlvoColor greenColor;

		[Token(Token = "0x4003252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VoiceButton voiceButton;

		[Token(Token = "0x4003253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_lastPaddingRight;

		[Token(Token = "0x4003254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PrivateMatchManager m_privateMatchManager;

		[Token(Token = "0x4003255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CurvedUIVertexEffect m_readyBackgroundVertexEffect;

		[Token(Token = "0x4003256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PrivateMatchPlayerStatus m_playerStatus;

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xE2DE68", Offset = "0xE2DE68", VA = "0xE2DE68")]
		public void Setup(PrivateMatchPlayerStatus player)
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xE2E270", Offset = "0xE2E270", VA = "0xE2E270")]
		public void UpdateVoiceBubble()
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xE2E0F4", Offset = "0xE2E0F4", VA = "0xE2E0F4")]
		private void UpdateMask()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xE2E328", Offset = "0xE2E328", VA = "0xE2E328", Slot = "4")]
		private void IMonoPoolable.OnSpawn()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xE2E32C", Offset = "0xE2E32C", VA = "0xE2E32C")]
		public PrivateMatchRoomPlayerListItemUI()
		{
		}
	}
	[Token(Token = "0x2000608")]
	public class PrivateMatchRoomPreviewUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003257")]
		private const string kAlvoEmptyString = " ";

		[Token(Token = "0x4003258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_roomNameTmp;

		[Token(Token = "0x4003259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_errorMesageTmp;

		[Token(Token = "0x400325A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_InputField m_passwordField;

		[Token(Token = "0x400325B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LanguageText m_wrongPasswordTxt;

		[Token(Token = "0x400325C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LoadingTextEllipsis m_LoadingEllipsis;

		[Token(Token = "0x400325D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PrivateMatchSettings m_settings;

		[Token(Token = "0x400325E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PrivateMatchManager m_manager;

		[Token(Token = "0x1700044D")]
		private PrivateMatchManager Manager
		{
			[Token(Token = "0x6002477")]
			[Address(RVA = "0xE2E394", Offset = "0xE2E394", VA = "0xE2E394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xE2E428", Offset = "0xE2E428", VA = "0xE2E428")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xE2E484", Offset = "0xE2E484", VA = "0xE2E484")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xE2C62C", Offset = "0xE2C62C", VA = "0xE2C62C")]
		public void Setup(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xE2E4D8", Offset = "0xE2E4D8", VA = "0xE2E4D8")]
		public void OnJoinClicked()
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xE2E63C", Offset = "0xE2E63C", VA = "0xE2E63C")]
		public PrivateMatchRoomPreviewUI()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public class PrivateMatchRoomSearchItem : UnityEngine.MonoBehaviour, IMonoPoolable
	{
		[Token(Token = "0x200060A")]
		public class Pool : MonoPool<PrivateMatchRoomSearchItem>
		{
			[Token(Token = "0x6002485")]
			[Address(RVA = "0xE2EC54", Offset = "0xE2EC54", VA = "0xE2EC54")]
			public Pool(PrivateMatchRoomSearchItem _pfb, Transform _holder)
			{
			}
		}

		[Token(Token = "0x400325F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_displayNameTmp;

		[Token(Token = "0x4003260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_gameModeTmp;

		[Token(Token = "0x4003261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_mapTmp;

		[Token(Token = "0x4003262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI m_playersInTmp;

		[Token(Token = "0x4003263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PrivateMatchSettings m_settings;

		[Token(Token = "0x4003264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PrivateMatchRoomSearchUI searchUi;

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xE2E644", Offset = "0xE2E644", VA = "0xE2E644")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xE2E738", Offset = "0xE2E738", VA = "0xE2E738")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xE2E82C", Offset = "0xE2E82C", VA = "0xE2E82C")]
		public void Setup(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xE2EB10", Offset = "0xE2EB10", VA = "0xE2EB10")]
		public void OnJoinClicked()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xE2E8B8", Offset = "0xE2E8B8", VA = "0xE2E8B8")]
		private void UpdateTranslatedTexts()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xE2EB50", Offset = "0xE2EB50", VA = "0xE2EB50", Slot = "4")]
		private void IMonoPoolable.OnSpawn()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xE2EC20", Offset = "0xE2EC20", VA = "0xE2EC20")]
		public PrivateMatchRoomSearchItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060B")]
	public class PrivateMatchRoomSearchUI : UnityEngine.MonoBehaviour, IPrivateMatchListener
	{
		[Token(Token = "0x4003265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PrivateMatchMenuUI m_PrivateMatchMenuUI;

		[Token(Token = "0x4003266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_pageText;

		[Token(Token = "0x4003267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PrivateMatchRoomSearchItem m_roomItemPfb;

		[Token(Token = "0x4003268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_prevButton;

		[Token(Token = "0x4003269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button m_nextButton;

		[Token(Token = "0x400326A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ArrowsSelection m_serverArrowSelection;

		[Token(Token = "0x400326B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button m_applyFilterBtn;

		[Token(Token = "0x400326C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform m_holder;

		[Token(Token = "0x400326D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_roomsPerPage;

		[Token(Token = "0x400326E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_loadingDisplay;

		[Token(Token = "0x400326F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_currentPage;

		[Token(Token = "0x4003270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_maxPages;

		[Token(Token = "0x4003271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PrivateMatchRoomSearchItem.Pool m_itemPool;

		[Token(Token = "0x4003272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<PrivateMatchSettings> m_roomSettingsList;

		[Token(Token = "0x4003273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public PrivateMatchManager manager;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xE2ECB4", Offset = "0xE2ECB4", VA = "0xE2ECB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xE2ED38", Offset = "0xE2ED38", VA = "0xE2ED38")]
		public void ListChangePange(int v)
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xE2EB38", Offset = "0xE2EB38", VA = "0xE2EB38")]
		public void OpenRoomPreview(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xE2ED58", Offset = "0xE2ED58", VA = "0xE2ED58")]
		private void ShowCurrentPage()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xE2EF50", Offset = "0xE2EF50", VA = "0xE2EF50")]
		private void CleanPage()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xE2EFA0", Offset = "0xE2EFA0", VA = "0xE2EFA0")]
		public void FilterChanged()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xE2F074", Offset = "0xE2F074", VA = "0xE2F074")]
		public void ApplyFilter()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xE2F0D8", Offset = "0xE2F0D8", VA = "0xE2F0D8", Slot = "7")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnReceivedRoomListUpdate(RoomInfo[] roomList, List<PrivateMatchSettings> settingList)
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xE2F368", Offset = "0xE2F368", VA = "0xE2F368", Slot = "4")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnCreatedRoom(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xE2F36C", Offset = "0xE2F36C", VA = "0xE2F36C", Slot = "5")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnJoinedRoom(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xE2F370", Offset = "0xE2F370", VA = "0xE2F370", Slot = "6")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnExitedPrivateRoom()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xE2F374", Offset = "0xE2F374", VA = "0xE2F374", Slot = "8")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnPlayerListUpdated(Dictionary<int, PrivateMatchPlayerStatus> players)
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xE2F378", Offset = "0xE2F378", VA = "0xE2F378", Slot = "9")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnPlayerStatusUpdated(int actorId, PrivateMatchPlayerStatus status)
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xE2F37C", Offset = "0xE2F37C", VA = "0xE2F37C", Slot = "10")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnRoomPropertiesUpdate(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xE2F380", Offset = "0xE2F380", VA = "0xE2F380", Slot = "11")]
		public void OnMatchEnded()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xE2F384", Offset = "0xE2F384", VA = "0xE2F384", Slot = "12")]
		public void OnMovingToNewMatch()
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xE2F388", Offset = "0xE2F388", VA = "0xE2F388")]
		public PrivateMatchRoomSearchUI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060C")]
	public class PrivateMatchRoomViewUI : UnityEngine.MonoBehaviour, IPrivateMatchListener
	{
		[Serializable]
		[Token(Token = "0x200060D")]
		public class PMSAMessage
		{
			[Token(Token = "0x4003285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PrivateMatchStartAvailability type;

			[Token(Token = "0x4003286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LanguageText text;

			[Token(Token = "0x60024B4")]
			[Address(RVA = "0xE310D0", Offset = "0xE310D0", VA = "0xE310D0")]
			public PMSAMessage()
			{
			}
		}

		[Token(Token = "0x4003274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Setup")]
		private TextMeshProUGUI m_roomHeader;

		[Token(Token = "0x4003275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PrivateMatchRoomPlayerListItemUI m_playerItemPfb;

		[Token(Token = "0x4003276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PrivateMatchTeamPanelUI[] m_teamPanels;

		[Token(Token = "0x4003277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_startButton;

		[Token(Token = "0x4003278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI m_message;

		[Token(Token = "0x4003279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<PMSAMessage> m_messageTexts;

		[Token(Token = "0x400327A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI m_playersInRoomTmp;

		[Token(Token = "0x400327B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<PrivateMatchStartAvailability, LanguageText> m_avMessages;

		[Token(Token = "0x400327C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Settings")]
		[SerializeField]
		private PrivateMatchSettingsForm m_settingsForm;

		[Token(Token = "0x400327D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_wasHost;

		[Token(Token = "0x400327E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Teams Text")]
		[SerializeField]
		private LanguageText m_languageTeamNumber;

		[Token(Token = "0x400327F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LanguageText m_languagePlayer;

		[Token(Token = "0x4003280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI m_team1TextMesh;

		[Token(Token = "0x4003281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[Header("Reference")]
		private PrivateMatchMenuUI m_matchMenuUi;

		[Token(Token = "0x4003282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PrivateMatchRoomPlayerListItemUI.Pool m_playerListPool;

		[Token(Token = "0x4003283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<int, PrivateMatchRoomPlayerListItemUI> m_playerListItems;

		[Token(Token = "0x4003284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PrivateMatchManager m_manager;

		[Token(Token = "0x1700044E")]
		private Dictionary<PrivateMatchStartAvailability, LanguageText> AvMessages
		{
			[Token(Token = "0x6002497")]
			[Address(RVA = "0xE2F398", Offset = "0xE2F398", VA = "0xE2F398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		public PrivateMatchSettings Settings
		{
			[Token(Token = "0x6002498")]
			[Address(RVA = "0xE2C73C", Offset = "0xE2C73C", VA = "0xE2C73C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xE2F568", Offset = "0xE2F568", VA = "0xE2F568")]
		private void Update()
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xE2F6C4", Offset = "0xE2F6C4", VA = "0xE2F6C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0xE2C9F8", Offset = "0xE2C9F8", VA = "0xE2C9F8")]
		public void Initialize(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xE2F87C", Offset = "0xE2F87C", VA = "0xE2F87C")]
		private void SetupUI(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xE2FCB4", Offset = "0xE2FCB4", VA = "0xE2FCB4", Slot = "8")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnPlayerListUpdated(Dictionary<int, PrivateMatchPlayerStatus> players)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xE30640", Offset = "0xE30640", VA = "0xE30640", Slot = "9")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnPlayerStatusUpdated(int actorId, PrivateMatchPlayerStatus status)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xE308C8", Offset = "0xE308C8", VA = "0xE308C8", Slot = "10")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnRoomPropertiesUpdate(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xE30B8C", Offset = "0xE30B8C", VA = "0xE30B8C", Slot = "4")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnCreatedRoom(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0xE30B90", Offset = "0xE30B90", VA = "0xE30B90", Slot = "5")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnJoinedRoom(PrivateMatchSettings roomSettings)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xE30CBC", Offset = "0xE30CBC", VA = "0xE30CBC", Slot = "6")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnExitedPrivateRoom()
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xE30CC0", Offset = "0xE30CC0", VA = "0xE30CC0", Slot = "7")]
		private void Alvo.PrivateMatch.IPrivateMatchListener.OnReceivedRoomListUpdate(RoomInfo[] roomList, List<PrivateMatchSettings> settingList)
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xE2FC48", Offset = "0xE2FC48", VA = "0xE2FC48")]
		public void SetJoinTeamButtonsActive(int team)
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xE2FAE4", Offset = "0xE2FAE4", VA = "0xE2FAE4")]
		public void UseHostView(bool use)
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xE2F56C", Offset = "0xE2F56C", VA = "0xE2F56C")]
		public void UpdateVoiceBubble()
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0xE2FB30", Offset = "0xE2FB30", VA = "0xE2FB30")]
		private void ShowTeamPanels(int teamCount)
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xE303B8", Offset = "0xE303B8", VA = "0xE303B8")]
		private void CleanPlayerList()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xE30A54", Offset = "0xE30A54", VA = "0xE30A54")]
		private void GameModeEditChangeTeam(GameMode prev, GameMode current)
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xE30434", Offset = "0xE30434", VA = "0xE30434")]
		private void CheckStartButtonAvailability()
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xE30F74", Offset = "0xE30F74", VA = "0xE30F74")]
		private void OnFormChanged(object prev, object current)
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xE30F98", Offset = "0xE30F98", VA = "0xE30F98")]
		private void OnFormChanged(byte prev, byte current)
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xE30FBC", Offset = "0xE30FBC", VA = "0xE30FBC")]
		private void OnFormChanged(bool prev, bool current)
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xE30FE0", Offset = "0xE30FE0", VA = "0xE30FE0")]
		private void OnFormChanged(GameMode prev, GameMode current)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xE31014", Offset = "0xE31014", VA = "0xE31014", Slot = "11")]
		public void OnMatchEnded()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xE31018", Offset = "0xE31018", VA = "0xE31018", Slot = "12")]
		public void OnMovingToNewMatch()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xE3101C", Offset = "0xE3101C", VA = "0xE3101C")]
		private void OnSettingsOpen()
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xE31038", Offset = "0xE31038", VA = "0xE31038")]
		private void OnSettingsClose()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xE31054", Offset = "0xE31054", VA = "0xE31054")]
		public PrivateMatchRoomViewUI()
		{
		}
	}
	[Token(Token = "0x200060F")]
	public class PrivateMatchSettingsForm : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000610")]
		public delegate void FormSettingChanged<T>(T prev, T current);

		[Serializable]
		[Token(Token = "0x2000611")]
		public class GameModeToggle
		{
			[Token(Token = "0x40032B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameMode gameMode;

			[Token(Token = "0x40032B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Toggle toggle;

			[Token(Token = "0x40032B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup canvasGroup;

			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xE31FAC", Offset = "0xE31FAC", VA = "0xE31FAC")]
			public GameModeToggle()
			{
			}
		}

		[Token(Token = "0x4003289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_InputField m_nameInputField;

		[Token(Token = "0x400328A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_InputField m_passwordInputField;

		[Token(Token = "0x400328B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle m_FriendlyFireToggle;

		[Token(Token = "0x400328C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ArrowsSelection m_ServerSelection;

		[Token(Token = "0x400328D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] m_hostOnlyObjects;

		[Token(Token = "0x400328E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_changesNextMap;

		[Token(Token = "0x400328F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle m_disableAfkToggle;

		[Token(Token = "0x4003290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle m_allowBotsToggle;

		[Token(Token = "0x4003291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NumericUpDown m_minPlayersForNoBotsUpDown;

		[Token(Token = "0x4003292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NumericUpDown m_sndRoundsUpDown;

		[Token(Token = "0x4003293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle m_canJoinInProgressToggle;

		[Token(Token = "0x4003294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NumericUpDown m_maxPlayersUpDown;

		[Token(Token = "0x4003295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NumericUpDown m_sndAttackingTeamUpDown;

		[Token(Token = "0x4003296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle m_allowReviesToggle;

		[Token(Token = "0x4003297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Game mode settings setup")]
		[SerializeField]
		private PMSettingsFormMapBtn m_selectedMapBtn;

		[Token(Token = "0x4003298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PMSettingsFormMapBtn m_mapBtnPrefab;

		[Token(Token = "0x4003299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform m_mapBtnContainer;

		[Token(Token = "0x400329A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ToggleGroup m_gameModeToggleGroup;

		[Token(Token = "0x400329B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject m_mapSelectionPanel;

		[Token(Token = "0x400329C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<GameModeToggle> m_gameModeToggleList;

		[Token(Token = "0x400329D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Dictionary<GameMode, Toggle> m_gameModeToggles;

		[Token(Token = "0x400329E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private PMSettingsFormMapBtn.Pool m_mapBtnPool;

		[Token(Token = "0x400329F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Selectable[] m_allControls;

		[Token(Token = "0x40032A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Dictionary<int, AlvoLevels> m_alvoLevelsDic;

		[Token(Token = "0x40032A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public PrivateMatchSettings settings;

		[Token(Token = "0x40032A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FormSettingChanged<string> onNameChanged;

		[Token(Token = "0x40032A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FormSettingChanged<GameMode> onGamemodeChanged;

		[Token(Token = "0x40032A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public FormSettingChanged<byte> onMapChanged;

		[Token(Token = "0x40032A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FormSettingChanged<string> onPassChangeEnd;

		[Token(Token = "0x40032A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public FormSettingChanged<string> onPassChanged;

		[Token(Token = "0x40032A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public FormSettingChanged<bool> onFriendlyFireChanged;

		[Token(Token = "0x40032A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FormSettingChanged<byte> onServerChanged;

		[Token(Token = "0x40032A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public FormSettingChanged<bool> onAfkTimerEnabledChanged;

		[Token(Token = "0x40032AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public FormSettingChanged<bool> onAllowBotsChanged;

		[Token(Token = "0x40032AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FormSettingChanged<byte> onPlayersForNoBots;

		[Token(Token = "0x40032AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public FormSettingChanged<byte> onSndRoundsChanged;

		[Token(Token = "0x40032AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public FormSettingChanged<bool> onCanJoinInProgressChanged;

		[Token(Token = "0x40032AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public FormSettingChanged<byte> onMaxPlayersChanged;

		[Token(Token = "0x40032AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public FormSettingChanged<byte> onSNDAttackingTeamChanged;

		[Token(Token = "0x40032B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public FormSettingChanged<bool> onAllowRevivesChanged;

		[Token(Token = "0x17000450")]
		private byte MapNumber
		{
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0xE31198", Offset = "0xE31198", VA = "0xE31198")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0xE311C4", Offset = "0xE311C4", VA = "0xE311C4")]
			set
			{
			}
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xE20EA8", Offset = "0xE20EA8", VA = "0xE20EA8")]
		public void Initialize(PrivateMatchSettings _settings)
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xE311F0", Offset = "0xE311F0", VA = "0xE311F0")]
		private void SetMapOptions()
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xE3165C", Offset = "0xE3165C", VA = "0xE3165C")]
		private void SetupSelectedMapButton()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xE30CC4", Offset = "0xE30CC4", VA = "0xE30CC4")]
		public void SetIsEditable(bool editable)
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xE317BC", Offset = "0xE317BC", VA = "0xE317BC")]
		public void OnNameEdit(string name)
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xE31828", Offset = "0xE31828", VA = "0xE31828")]
		public void OnGameModeEdit(int n)
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xE31894", Offset = "0xE31894", VA = "0xE31894")]
		public void OnMapEdit(int mapNumber)
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xE31B70", Offset = "0xE31B70", VA = "0xE31B70")]
		public void OnPasswordChanged(string pass)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xE31BDC", Offset = "0xE31BDC", VA = "0xE31BDC")]
		public void OnPasswordEditEnd(string pass)
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xE31C48", Offset = "0xE31C48", VA = "0xE31C48")]
		public void OnFriendlyFireToggle(bool value)
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xE31C9C", Offset = "0xE31C9C", VA = "0xE31C9C")]
		public void OnServerChange()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xE31CFC", Offset = "0xE31CFC", VA = "0xE31CFC")]
		public void OnAfkTimerDisableChange(bool value)
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xE31D54", Offset = "0xE31D54", VA = "0xE31D54")]
		public void OnAllowBotsChange(bool value)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xE31DAC", Offset = "0xE31DAC", VA = "0xE31DAC")]
		public void OnMinPlayersForNoBotsChange(int value)
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xE31DF4", Offset = "0xE31DF4", VA = "0xE31DF4")]
		public void OnSNDRoundsChange(int value)
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xE31E3C", Offset = "0xE31E3C", VA = "0xE31E3C")]
		public void OnCanJoinInProgressChange(bool value)
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xE31E94", Offset = "0xE31E94", VA = "0xE31E94")]
		public void OnMaxPlayersChange(int value)
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xE31F04", Offset = "0xE31F04", VA = "0xE31F04")]
		public void OnSNDAttackingTeamChange(int value)
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xE31F4C", Offset = "0xE31F4C", VA = "0xE31F4C")]
		public void OnAllowRevivesChanged(bool value)
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xE31FA4", Offset = "0xE31FA4", VA = "0xE31FA4")]
		public PrivateMatchSettingsForm()
		{
		}
	}
}
namespace Alvo.Friends
{
	[Token(Token = "0x2000612")]
	public enum FriendStatus
	{
		[Token(Token = "0x40032B5")]
		Offline,
		[Token(Token = "0x40032B6")]
		Invisible,
		[Token(Token = "0x40032B7")]
		Online,
		[Token(Token = "0x40032B8")]
		InTDM,
		[Token(Token = "0x40032B9")]
		InFFA,
		[Token(Token = "0x40032BA")]
		InSND,
		[Token(Token = "0x40032BB")]
		InZMB,
		[Token(Token = "0x40032BC")]
		InHP,
		[Token(Token = "0x40032BD")]
		InTutorial,
		[Token(Token = "0x40032BE")]
		InPrivateMatch
	}
	[Token(Token = "0x2000613")]
	public class FriendlistManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000614")]
		private class AzureFriendCalls
		{
			[Token(Token = "0x2000615")]
			private struct OngoingAzureRequestData
			{
				[Token(Token = "0x40032EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string FID;

				[Token(Token = "0x40032F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public bool flag;

				[Token(Token = "0x40032F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Action<string> callback;
			}

			[Token(Token = "0x40032E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<string, Friend> friendList;

			[Token(Token = "0x40032E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<string, FriendIncomingInvite> inviteList;

			[Token(Token = "0x40032E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Dictionary<string, Friend> blockedList;

			[Token(Token = "0x40032E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private FriendlistManager manager;

			[Token(Token = "0x40032EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayerLocalData localData;

			[Token(Token = "0x40032EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float lastFriendlistFetchTime;

			[Token(Token = "0x40032EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int friendlistFetchRequests;

			[Token(Token = "0x40032ED")]
			private const int maxFetchRetries = 3;

			[Token(Token = "0x40032EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<int, OngoingAzureRequestData> azureOngoingRequests;

			[Token(Token = "0x600250F")]
			[Address(RVA = "0xE37F34", Offset = "0xE37F34", VA = "0xE37F34")]
			public AzureFriendCalls(FriendlistManager manager, PlayerLocalData localData)
			{
			}

			[Token(Token = "0x6002510")]
			[Address(RVA = "0xE380E8", Offset = "0xE380E8", VA = "0xE380E8", Slot = "1")]
			~AzureFriendCalls()
			{
			}

			[Token(Token = "0x6002511")]
			[Address(RVA = "0xE3820C", Offset = "0xE3820C", VA = "0xE3820C")]
			public void AcceptFriendInvite(string FID, Action<string> callback)
			{
			}

			[Token(Token = "0x6002512")]
			[Address(RVA = "0xE3849C", Offset = "0xE3849C", VA = "0xE3849C")]
			public void RejectFriendInvite(string FID)
			{
			}

			[Token(Token = "0x6002513")]
			[Address(RVA = "0xE382D4", Offset = "0xE382D4", VA = "0xE382D4")]
			private int AnswerInvite(string FID, string type)
			{
				return default(int);
			}

			[Token(Token = "0x6002514")]
			[Address(RVA = "0xE38578", Offset = "0xE38578", VA = "0xE38578")]
			public List<Friend> GetCachedFriendList()
			{
				return null;
			}

			[Token(Token = "0x6002515")]
			[Address(RVA = "0xE385E4", Offset = "0xE385E4", VA = "0xE385E4")]
			public List<FriendIncomingInvite> GetCachedInviteList()
			{
				return null;
			}

			[Token(Token = "0x6002516")]
			[Address(RVA = "0xE38650", Offset = "0xE38650", VA = "0xE38650")]
			public void GetFriendList()
			{
			}

			[Token(Token = "0x6002517")]
			[Address(RVA = "0xE388FC", Offset = "0xE388FC", VA = "0xE388FC")]
			public void GetInviteList()
			{
			}

			[Token(Token = "0x6002518")]
			[Address(RVA = "0xE38A30", Offset = "0xE38A30", VA = "0xE38A30")]
			public void RemoveFriend(string FID, Action<string> callback)
			{
			}

			[Token(Token = "0x6002519")]
			[Address(RVA = "0xE38B6C", Offset = "0xE38B6C", VA = "0xE38B6C")]
			public void SendInvite(string FID, Action<string> callback)
			{
			}

			[Token(Token = "0x600251A")]
			[Address(RVA = "0xE38CA8", Offset = "0xE38CA8", VA = "0xE38CA8")]
			public void BlockFriend(string FID, bool block, Action<string> callback)
			{
			}

			[Token(Token = "0x600251B")]
			[Address(RVA = "0xE38E14", Offset = "0xE38E14", VA = "0xE38E14")]
			private void AzureDatabaseCallback(AzureRequestTypes type, string result, int requId)
			{
			}

			[Token(Token = "0x600251C")]
			[Address(RVA = "0xE39AB8", Offset = "0xE39AB8", VA = "0xE39AB8")]
			public int ReportFriend(string FID, string name, int opt)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000616")]
		public enum PrivateMessageType
		{
			[Token(Token = "0x40032F3")]
			FriendRequest,
			[Token(Token = "0x40032F4")]
			RequestAccept,
			[Token(Token = "0x40032F5")]
			PartyInvite,
			[Token(Token = "0x40032F6")]
			AvatarRequest,
			[Token(Token = "0x40032F7")]
			AvatarResponse,
			[Token(Token = "0x40032F8")]
			Removed,
			[Token(Token = "0x40032F9")]
			JoinRequest,
			[Token(Token = "0x40032FA")]
			JoinRequestAccepted,
			[Token(Token = "0x40032FB")]
			InviteRejected,
			[Token(Token = "0x40032FC")]
			PrivateMatchInvite
		}

		[Token(Token = "0x200061A")]
		[CompilerGenerated]
		private sealed class <InviteRejected>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FriendlistManager <>4__this;

			[Token(Token = "0x4003303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string _fid;

			[Token(Token = "0x17000451")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002527")]
				[Address(RVA = "0xE39D84", Offset = "0xE39D84", VA = "0xE39D84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000452")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002529")]
				[Address(RVA = "0xE39DCC", Offset = "0xE39DCC", VA = "0xE39DCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002524")]
			[Address(RVA = "0xE39C4C", Offset = "0xE39C4C", VA = "0xE39C4C")]
			[DebuggerHidden]
			public <InviteRejected>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6002525")]
			[Address(RVA = "0xE39C74", Offset = "0xE39C74", VA = "0xE39C74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002526")]
			[Address(RVA = "0xE39C78", Offset = "0xE39C78", VA = "0xE39C78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002528")]
			[Address(RVA = "0xE39D8C", Offset = "0xE39D8C", VA = "0xE39D8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40032BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerLocalData m_localData;

		[Token(Token = "0x40032C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_maxMetPlayers;

		[Token(Token = "0x40032C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool useMockFriends;

		[Token(Token = "0x40032C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Friend[] m_mockFriends;

		[Token(Token = "0x40032C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AzureFriendCalls m_dbCalls;

		[Token(Token = "0x40032C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Friend> m_friendList;

		[Token(Token = "0x40032C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Friend> m_blockedList;

		[Token(Token = "0x40032C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<FriendIncomingInvite> m_inviteList;

		[Token(Token = "0x40032C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Dictionary<string, int> inviteNotifs;

		[Token(Token = "0x40032C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<PartyInvitationMessage> m_partyInvitesReceived;

		[Token(Token = "0x40032C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<PrivateMatchInvitationMessage> m_pmInvitesReceived;

		[Token(Token = "0x40032CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<string> m_sessionInvitesSent;

		[Token(Token = "0x40032CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<string> m_inviteTimeoutFids;

		[Token(Token = "0x40032CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<float> m_inviteTimeoutTimes;

		[Token(Token = "0x40032CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, string> m_sessionAvatarUrls;

		[Token(Token = "0x40032CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<string, FriendStatus> m_statuses;

		[Token(Token = "0x40032CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, Friend> m_metList;

		[Token(Token = "0x40032D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<string, int> m_metListPlatforms;

		[Token(Token = "0x40032D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<Friend> m_metListOrdered;

		[Token(Token = "0x40032D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AlvoPartyNet m_alvoPartyNet;

		[Token(Token = "0x40032D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AlvoSocialManager m_alvoSocialManager;

		[Token(Token = "0x40032D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChatClient m_chatClient;

		[Token(Token = "0x40032D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool connected;

		[Token(Token = "0x40032D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WaitForSeconds m_cantInviteTime;

		[Token(Token = "0x40032D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string FID;

		[Token(Token = "0x40032D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FriendlistManager Instance;

		[Token(Token = "0x40032D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action<List<Friend>> onFriendListUpdated;

		[Token(Token = "0x40032DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action<List<Friend>> onBlockedListUpdated;

		[Token(Token = "0x40032DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action<List<FriendIncomingInvite>> onInviteListUpdated;

		[Token(Token = "0x40032DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Action<List<Friend>> onPlayersMetUpdated;

		[Token(Token = "0x40032DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public System.Action onFriendStatusUpdated;

		[Token(Token = "0x40032DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public System.Action onInviteNotifsUpdated;

		[Token(Token = "0x40032DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool justFetchedInEntry;

		[Token(Token = "0x40032E0")]
		private const string m_MetKey = "PlayersMet";

		[Token(Token = "0x40032E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool m_updateChatStateOnConnect;

		[Token(Token = "0x40032E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int m_chatStatusTemp;

		[Token(Token = "0x40032E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_updateChatStateOnTitleLoad;

		[Token(Token = "0x40032E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_firstTitleLoaded;

		[Token(Token = "0x40032E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int setStatusTries;

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xE31FB4", Offset = "0xE31FB4", VA = "0xE31FB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xE32984", Offset = "0xE32984", VA = "0xE32984")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xE32BA4", Offset = "0xE32BA4", VA = "0xE32BA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xE32BF0", Offset = "0xE32BF0", VA = "0xE32BF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xE32C68", Offset = "0xE32C68", VA = "0xE32C68")]
		public void UpdateFriendList(List<Friend> _newFriendList)
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xE33550", Offset = "0xE33550", VA = "0xE33550")]
		public void UpdateBlockedList(List<Friend> _newBlockedList)
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xE33570", Offset = "0xE33570", VA = "0xE33570")]
		public void UpdateInviteList(List<FriendIncomingInvite> _inviteList)
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xE33590", Offset = "0xE33590", VA = "0xE33590")]
		public void AddPlayerMet(PlayerData player, bool callEvent = true)
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xE33A10", Offset = "0xE33A10", VA = "0xE33A10")]
		public void UpdatePlayerMet(string fid, int platform)
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xE33C4C", Offset = "0xE33C4C", VA = "0xE33C4C")]
		public List<Friend> GetFriendList()
		{
			return null;
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xE33C54", Offset = "0xE33C54", VA = "0xE33C54")]
		public List<FriendIncomingInvite> GetInviteList()
		{
			return null;
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xE33C5C", Offset = "0xE33C5C", VA = "0xE33C5C")]
		public List<Friend> GetPlayersMetList()
		{
			return null;
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xE33C64", Offset = "0xE33C64", VA = "0xE33C64")]
		public List<Friend> GetBlockedList()
		{
			return null;
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xE33C6C", Offset = "0xE33C6C", VA = "0xE33C6C")]
		public List<PartyInvitationMessage> GetPartyInviteList()
		{
			return null;
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xE33C74", Offset = "0xE33C74", VA = "0xE33C74")]
		public List<PrivateMatchInvitationMessage> GetPMInviteList()
		{
			return null;
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xE33C7C", Offset = "0xE33C7C", VA = "0xE33C7C")]
		public void SendInvite(string _toFid)
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xE33D18", Offset = "0xE33D18", VA = "0xE33D18")]
		public void SendChatInviteNotif(string _toFid)
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xE33E24", Offset = "0xE33E24", VA = "0xE33E24")]
		public void AcceptFriendInvite(string _fid)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xE33EC0", Offset = "0xE33EC0", VA = "0xE33EC0")]
		public void SendChatInviteAnswerNotif(string _fid)
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xE33FCC", Offset = "0xE33FCC", VA = "0xE33FCC")]
		public void RejectInvite(string _fid)
		{
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0xE33FE8", Offset = "0xE33FE8", VA = "0xE33FE8")]
		public void BlockUser(string _toBlockFid, bool _block)
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0xE3408C", Offset = "0xE3408C", VA = "0xE3408C")]
		public void RemoveFriend(string _toRemoveFid)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0xE34128", Offset = "0xE34128", VA = "0xE34128")]
		public void SendChatRemovedNotif(string _toRemoveFid)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0xE34234", Offset = "0xE34234", VA = "0xE34234")]
		public void SendPartyInvite(string _to)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0xE3460C", Offset = "0xE3460C", VA = "0xE3460C")]
		public void ReceivePartyInvite(PartyInvitationMessage _message)
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xE34674", Offset = "0xE34674", VA = "0xE34674")]
		public void SendPrivateMatchInvite(string _to)
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xE34510", Offset = "0xE34510", VA = "0xE34510")]
		private void UpdatePartyInviteTimeouts()
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xE34958", Offset = "0xE34958", VA = "0xE34958")]
		public void AcceptPartyInvite(string _inviterFid, string _hostFid)
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xE34AA0", Offset = "0xE34AA0", VA = "0xE34AA0")]
		public void RejectInviteNotif(string _fid)
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xE34DA0", Offset = "0xE34DA0", VA = "0xE34DA0")]
		public void ReceivePMInvite(PrivateMatchInvitationMessage _message)
		{
		}

		[Token(Token = "0x60024F1")]
		private void ReceiveInvite<T>(T message, List<T> list, int type) where T : IInvitationMessage
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xE34A44", Offset = "0xE34A44", VA = "0xE34A44")]
		public void RemovePartyInviteNotif(string _fid)
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xE34E24", Offset = "0xE34E24", VA = "0xE34E24")]
		public void RemovePMInviteNotif(string _fid)
		{
		}

		[Token(Token = "0x60024F4")]
		private void RemoveInviteNotif<T>(string _fid, List<T> list) where T : IInvitationMessage
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xE34B74", Offset = "0xE34B74", VA = "0xE34B74")]
		private void RemoveAllInvitesFrom(string _fid)
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xE34E80", Offset = "0xE34E80", VA = "0xE34E80")]
		[IteratorStateMachine(typeof(<InviteRejected>d__73))]
		public IEnumerator InviteRejected(string _fid)
		{
			return null;
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xE34EF4", Offset = "0xE34EF4", VA = "0xE34EF4")]
		public void AcceptPMInvite(string _inviterFid, string _roomName, string _roomPassword)
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xE34FCC", Offset = "0xE34FCC", VA = "0xE34FCC")]
		public void AcceptInviteNotif(string _inviterFid)
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xE35204", Offset = "0xE35204", VA = "0xE35204")]
		public void SendJoinRequest(string _fid)
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xE352CC", Offset = "0xE352CC", VA = "0xE352CC")]
		public void SendJoinRequestAccepted(string _fid)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xE35400", Offset = "0xE35400", VA = "0xE35400")]
		public void SerializePlayersMet(List<Friend> _metList)
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0xE32278", Offset = "0xE32278", VA = "0xE32278")]
		public void DeserializePlayersMet()
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xE3578C", Offset = "0xE3578C", VA = "0xE3578C")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xE33304", Offset = "0xE33304", VA = "0xE33304")]
		private void TryToGetFriendAvatar(Friend _friend)
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xE35964", Offset = "0xE35964", VA = "0xE35964")]
		private void SetupFriendAvatar(string fid, string avatarUrl)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xE35AD0", Offset = "0xE35AD0", VA = "0xE35AD0")]
		public void ReportPlayer(string FID, string name, int opt)
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xE35AEC", Offset = "0xE35AEC", VA = "0xE35AEC")]
		public void Setup(AlvoPartyNet _apn, AlvoSocialManager _asm)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xE35B0C", Offset = "0xE35B0C", VA = "0xE35B0C")]
		public void CleanAndAddFriends()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xE35C54", Offset = "0xE35C54", VA = "0xE35C54")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xE35EF4", Offset = "0xE35EF4", VA = "0xE35EF4")]
		public void OnPrivateMessage(string sender, object message, string channelName)
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xE36268", Offset = "0xE36268", VA = "0xE36268")]
		public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xE36650", Offset = "0xE36650", VA = "0xE36650")]
		private void OnChatStatusChanged(ChatState state)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xE36748", Offset = "0xE36748", VA = "0xE36748")]
		private void PresenceChanged(int FID)
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xE3688C", Offset = "0xE3688C", VA = "0xE3688C")]
		private void PresenceChanged(GameMode gameMode, int leaderFID, string roomID, bool joinable)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xE35888", Offset = "0xE35888", VA = "0xE35888")]
		public void ChangeStatus(int status)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xE367E8", Offset = "0xE367E8", VA = "0xE367E8")]
		private bool CanSetChatStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xE35E64", Offset = "0xE35E64", VA = "0xE35E64")]
		private void TryToSetOnlineStatus()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xE36944", Offset = "0xE36944", VA = "0xE36944")]
		private void AzureDatabaseCallback(AzureRequestTypes type, string result, int requId)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0xE36B80", Offset = "0xE36B80", VA = "0xE36B80")]
		public static int GetSpriteIdForPlatform(Platform platform)
		{
			return default(int);
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0xE36B90", Offset = "0xE36B90", VA = "0xE36B90")]
		public FriendlistManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061D")]
	public class Friend : IEquatable<Friend>
	{
		[Token(Token = "0x4003309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userName;

		[Token(Token = "0x400330A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fid;

		[Token(Token = "0x400330B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int platform;

		[Token(Token = "0x400330C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string avatarUrl;

		[Token(Token = "0x400330D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int status;

		[Token(Token = "0x400330E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public System.Action onAvatarUrlChanged;

		[Token(Token = "0x17000453")]
		public string AvatarUrl
		{
			[Token(Token = "0x6002532")]
			[Address(RVA = "0xE39F68", Offset = "0xE39F68", VA = "0xE39F68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002533")]
			[Address(RVA = "0xE39F70", Offset = "0xE39F70", VA = "0xE39F70")]
			set
			{
			}
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xE39F90", Offset = "0xE39F90", VA = "0xE39F90")]
		public Friend(string userName, string fid, int platform, string avatarUrl)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xE39FD8", Offset = "0xE39FD8", VA = "0xE39FD8", Slot = "4")]
		public bool Equals(Friend other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200061E")]
	public class FriendIncomingInvite : Friend
	{
		[Token(Token = "0x400330F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string notificationId;

		[Token(Token = "0x4003310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string notificationType;

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xE39FF8", Offset = "0xE39FF8", VA = "0xE39FF8")]
		public FriendIncomingInvite(string userName, string fid, int platform, string avatarUrl, string notificationId, string notificationType)
		{
		}
	}
	[Token(Token = "0x200061F")]
	public struct ChatPrivateMessage
	{
		[Token(Token = "0x4003311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte type;

		[Token(Token = "0x4003312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string data;

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xE3A054", Offset = "0xE3A054", VA = "0xE3A054")]
		public ChatPrivateMessage(byte type, string data)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xE3A060", Offset = "0xE3A060", VA = "0xE3A060")]
		public ChatPrivateMessage(FriendlistManager.PrivateMessageType type, string data)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xE3A06C", Offset = "0xE3A06C", VA = "0xE3A06C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000620")]
	internal interface IInvitationMessage
	{
		[Token(Token = "0x600253A")]
		string GetFID();
	}
	[Serializable]
	[Token(Token = "0x2000621")]
	public struct PartyInvitationMessage : IEquatable<PartyInvitationMessage>, IInvitationMessage
	{
		[Token(Token = "0x4003313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string inviterFid;

		[Token(Token = "0x4003314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string hostFid;

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xE3A0F4", Offset = "0xE3A0F4", VA = "0xE3A0F4")]
		public PartyInvitationMessage(string inviterFid, string hostFid)
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xE3A0FC", Offset = "0xE3A0FC", VA = "0xE3A0FC", Slot = "4")]
		public bool Equals(PartyInvitationMessage other)
		{
			return default(bool);
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xE3A108", Offset = "0xE3A108", VA = "0xE3A108", Slot = "5")]
		public string GetFID()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000622")]
	public struct PrivateMatchInvitationMessage : IEquatable<PrivateMatchInvitationMessage>, IInvitationMessage
	{
		[Token(Token = "0x4003315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string inviterFid;

		[Token(Token = "0x4003316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string roomName;

		[Token(Token = "0x4003317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string roomPassword;

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xE3A110", Offset = "0xE3A110", VA = "0xE3A110")]
		public PrivateMatchInvitationMessage(string inviterFid, string roomName, string roomPassword)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xE3A11C", Offset = "0xE3A11C", VA = "0xE3A11C", Slot = "4")]
		public bool Equals(PrivateMatchInvitationMessage other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xE3A12C", Offset = "0xE3A12C", VA = "0xE3A12C", Slot = "5")]
		public string GetFID()
		{
			return null;
		}
	}
	[Token(Token = "0x2000623")]
	public class FriendlistSounds : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000624")]
		private struct SoundClips
		{
			[Token(Token = "0x400331B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip partyInviteSent;

			[Token(Token = "0x400331C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip partyInviteGet;
		}

		[Token(Token = "0x4003318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FriendlistManager m_manager;

		[Token(Token = "0x4003319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x400331A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SoundClips m_soundClips;

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xE3A134", Offset = "0xE3A134", VA = "0xE3A134")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xE3A1FC", Offset = "0xE3A1FC", VA = "0xE3A1FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xE3A2C4", Offset = "0xE3A2C4", VA = "0xE3A2C4")]
		private void OnInviteGot()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xE3A330", Offset = "0xE3A330", VA = "0xE3A330")]
		public FriendlistSounds()
		{
		}
	}
}
namespace Alvo.Tutorial
{
	[Token(Token = "0x2000625")]
	public class TutorialAudioManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000626")]
		public class TutorialAudioClips
		{
			[Token(Token = "0x4003322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TutorialSounds sound;

			[Token(Token = "0x4003323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip clip;

			[Token(Token = "0x600254A")]
			[Address(RVA = "0xE3A7AC", Offset = "0xE3A7AC", VA = "0xE3A7AC")]
			public TutorialAudioClips()
			{
			}
		}

		[Token(Token = "0x400331D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TutorialAudioManager Instance;

		[Token(Token = "0x400331E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x400331F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialAudioClips[] clips;

		[Token(Token = "0x4003320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource musicSource;

		[Token(Token = "0x4003321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<TutorialSounds, AudioClip> tSClipsDictionary;

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xE3A338", Offset = "0xE3A338", VA = "0xE3A338")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xE3A460", Offset = "0xE3A460", VA = "0xE3A460")]
		public static void Play(TutorialSounds soundToPlay)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xE3A5C4", Offset = "0xE3A5C4", VA = "0xE3A5C4")]
		public static void PlayMusic(bool value)
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xE3A6A0", Offset = "0xE3A6A0", VA = "0xE3A6A0")]
		public static AudioClip Getclip(TutorialSounds desiredClip)
		{
			return null;
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xE3A730", Offset = "0xE3A730", VA = "0xE3A730")]
		public TutorialAudioManager()
		{
		}
	}
	[Token(Token = "0x2000627")]
	public enum TutorialSounds
	{
		[Token(Token = "0x4003325")]
		None,
		[Token(Token = "0x4003326")]
		WelcomeToAlvo,
		[Token(Token = "0x4003327")]
		NowLetsGetYouStarted,
		[Token(Token = "0x4003328")]
		NonExistantTest,
		[Token(Token = "0x4003329")]
		UIClick,
		[Token(Token = "0x400332A")]
		UseTheAnalogSticks,
		[Token(Token = "0x400332B")]
		TutorialCompleted,
		[Token(Token = "0x400332C")]
		DummyDeath
	}
	[Token(Token = "0x2000628")]
	public class DropdownLTBinder : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000629")]
		[CompilerGenerated]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400332E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400332F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DropdownLTBinder <>4__this;

			[Token(Token = "0x17000454")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002550")]
				[Address(RVA = "0xE3A9F8", Offset = "0xE3A9F8", VA = "0xE3A9F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000455")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002552")]
				[Address(RVA = "0xE3AA40", Offset = "0xE3AA40", VA = "0xE3AA40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600254D")]
			[Address(RVA = "0xE3A81C", Offset = "0xE3A81C", VA = "0xE3A81C")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600254E")]
			[Address(RVA = "0xE3A84C", Offset = "0xE3A84C", VA = "0xE3A84C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600254F")]
			[Address(RVA = "0xE3A850", Offset = "0xE3A850", VA = "0xE3A850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002551")]
			[Address(RVA = "0xE3AA00", Offset = "0xE3AA00", VA = "0xE3AA00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400332D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageText[] desiredOptions;

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xE3A7B4", Offset = "0xE3A7B4", VA = "0xE3A7B4")]
		[IteratorStateMachine(typeof(<Start>d__1))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xE3A844", Offset = "0xE3A844", VA = "0xE3A844")]
		public DropdownLTBinder()
		{
		}
	}
	[Token(Token = "0x200062A")]
	public class Dummy : TutorialSpawn
	{
		[Token(Token = "0x200062B")]
		[CompilerGenerated]
		private sealed class <Kill>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dummy <>4__this;

			[Token(Token = "0x17000456")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600255A")]
				[Address(RVA = "0xE3B0F4", Offset = "0xE3B0F4", VA = "0xE3B0F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000457")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600255C")]
				[Address(RVA = "0xE3B13C", Offset = "0xE3B13C", VA = "0xE3B13C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002557")]
			[Address(RVA = "0xE3AC3C", Offset = "0xE3AC3C", VA = "0xE3AC3C")]
			[DebuggerHidden]
			public <Kill>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002558")]
			[Address(RVA = "0xE3AC7C", Offset = "0xE3AC7C", VA = "0xE3AC7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002559")]
			[Address(RVA = "0xE3AC80", Offset = "0xE3AC80", VA = "0xE3AC80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600255B")]
			[Address(RVA = "0xE3B0FC", Offset = "0xE3B0FC", VA = "0xE3B0FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int maxHealth;

		[Token(Token = "0x4003332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int health;

		[Token(Token = "0x4003333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4003334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool kniveDamageOnly;

		[Token(Token = "0x4003335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool dead;

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xE3AA48", Offset = "0xE3AA48", VA = "0xE3AA48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xE3AA54", Offset = "0xE3AA54", VA = "0xE3AA54")]
		public void OnDamageTaken(DamageReceiver damageReceiver, DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xE3ABD4", Offset = "0xE3ABD4", VA = "0xE3ABD4")]
		[IteratorStateMachine(typeof(<Kill>d__7))]
		private IEnumerator Kill()
		{
			return null;
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xE3AC64", Offset = "0xE3AC64", VA = "0xE3AC64")]
		public Dummy()
		{
		}
	}
	[Token(Token = "0x200062C")]
	public class JumpStepObjective : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600255D")]
		[Address(RVA = "0xE3B144", Offset = "0xE3B144", VA = "0xE3B144")]
		private void Start()
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xE3B198", Offset = "0xE3B198", VA = "0xE3B198")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xE3B600", Offset = "0xE3B600", VA = "0xE3B600")]
		public JumpStepObjective()
		{
		}
	}
	[Token(Token = "0x200062D")]
	public class TutorialObjective : TutorialSpawn
	{
		[Token(Token = "0x6002560")]
		[Address(RVA = "0xE3B608", Offset = "0xE3B608", VA = "0xE3B608", Slot = "4")]
		protected override void UnityUpdate()
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xE3B748", Offset = "0xE3B748", VA = "0xE3B748")]
		public TutorialObjective()
		{
		}
	}
	[Token(Token = "0x200062E")]
	public class TutorialManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200062F")]
		[CompilerGenerated]
		private sealed class <Start>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialManager <>4__this;

			[Token(Token = "0x17000458")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002590")]
				[Address(RVA = "0xE3EB0C", Offset = "0xE3EB0C", VA = "0xE3EB0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000459")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002592")]
				[Address(RVA = "0xE3EB54", Offset = "0xE3EB54", VA = "0xE3EB54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0xE3C0BC", Offset = "0xE3C0BC", VA = "0xE3C0BC")]
			[DebuggerHidden]
			public <Start>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600258E")]
			[Address(RVA = "0xE3E40C", Offset = "0xE3E40C", VA = "0xE3E40C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0xE3E410", Offset = "0xE3E410", VA = "0xE3E410", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002591")]
			[Address(RVA = "0xE3EB14", Offset = "0xE3EB14", VA = "0xE3EB14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000630")]
		[CompilerGenerated]
		private sealed class <HideWeaponsOnStart>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialManager <>4__this;

			[Token(Token = "0x1700045A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002596")]
				[Address(RVA = "0xE3EC80", Offset = "0xE3EC80", VA = "0xE3EC80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002598")]
				[Address(RVA = "0xE3ECC8", Offset = "0xE3ECC8", VA = "0xE3ECC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002593")]
			[Address(RVA = "0xE3C14C", Offset = "0xE3C14C", VA = "0xE3C14C")]
			[DebuggerHidden]
			public <HideWeaponsOnStart>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0xE3EB5C", Offset = "0xE3EB5C", VA = "0xE3EB5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002595")]
			[Address(RVA = "0xE3EB60", Offset = "0xE3EB60", VA = "0xE3EB60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002597")]
			[Address(RVA = "0xE3EC88", Offset = "0xE3EC88", VA = "0xE3EC88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000631")]
		[CompilerGenerated]
		private sealed class <StepTextChange>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400335A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialManager <>4__this;

			[Token(Token = "0x400335B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TutorialStepItem newStep;

			[Token(Token = "0x400335C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TutorialStepItem.MessageAndEvent[] <>7__wrap1;

			[Token(Token = "0x400335D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x400335E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TutorialStepItem.MessageAndEvent <messageAndEvent>5__4;

			[Token(Token = "0x1700045C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600259C")]
				[Address(RVA = "0xE3F588", Offset = "0xE3F588", VA = "0xE3F588", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600259E")]
				[Address(RVA = "0xE3F5D0", Offset = "0xE3F5D0", VA = "0xE3F5D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002599")]
			[Address(RVA = "0xE3C9B0", Offset = "0xE3C9B0", VA = "0xE3C9B0")]
			[DebuggerHidden]
			public <StepTextChange>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600259A")]
			[Address(RVA = "0xE3ECD0", Offset = "0xE3ECD0", VA = "0xE3ECD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600259B")]
			[Address(RVA = "0xE3ECD4", Offset = "0xE3ECD4", VA = "0xE3ECD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600259D")]
			[Address(RVA = "0xE3F590", Offset = "0xE3F590", VA = "0xE3F590", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000632")]
		[CompilerGenerated]
		private sealed class <CompleteTutorial>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400335F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialManager <>4__this;

			[Token(Token = "0x1700045E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025A2")]
				[Address(RVA = "0xE3F924", Offset = "0xE3F924", VA = "0xE3F924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025A4")]
				[Address(RVA = "0xE3F96C", Offset = "0xE3F96C", VA = "0xE3F96C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600259F")]
			[Address(RVA = "0xE3C9D8", Offset = "0xE3C9D8", VA = "0xE3C9D8")]
			[DebuggerHidden]
			public <CompleteTutorial>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60025A0")]
			[Address(RVA = "0xE3F5D8", Offset = "0xE3F5D8", VA = "0xE3F5D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025A1")]
			[Address(RVA = "0xE3F5DC", Offset = "0xE3F5DC", VA = "0xE3F5DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025A3")]
			[Address(RVA = "0xE3F92C", Offset = "0xE3F92C", VA = "0xE3F92C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000633")]
		[CompilerGenerated]
		private sealed class <DoForceHalfAmmo>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000460")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025A8")]
				[Address(RVA = "0xE3FA50", Offset = "0xE3FA50", VA = "0xE3FA50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000461")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025AA")]
				[Address(RVA = "0xE3FA98", Offset = "0xE3FA98", VA = "0xE3FA98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025A5")]
			[Address(RVA = "0xE3DAD8", Offset = "0xE3DAD8", VA = "0xE3DAD8")]
			[DebuggerHidden]
			public <DoForceHalfAmmo>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x60025A6")]
			[Address(RVA = "0xE3F974", Offset = "0xE3F974", VA = "0xE3F974", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025A7")]
			[Address(RVA = "0xE3F978", Offset = "0xE3F978", VA = "0xE3F978", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025A9")]
			[Address(RVA = "0xE3FA58", Offset = "0xE3FA58", VA = "0xE3FA58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000634")]
		[CompilerGenerated]
		private sealed class <DoForceNeedToCockOnMotion>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000462")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025AE")]
				[Address(RVA = "0xE3FB7C", Offset = "0xE3FB7C", VA = "0xE3FB7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000463")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025B0")]
				[Address(RVA = "0xE3FBC4", Offset = "0xE3FBC4", VA = "0xE3FBC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025AB")]
			[Address(RVA = "0xE3DBC0", Offset = "0xE3DBC0", VA = "0xE3DBC0")]
			[DebuggerHidden]
			public <DoForceNeedToCockOnMotion>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x60025AC")]
			[Address(RVA = "0xE3FAA0", Offset = "0xE3FAA0", VA = "0xE3FAA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025AD")]
			[Address(RVA = "0xE3FAA4", Offset = "0xE3FAA4", VA = "0xE3FAA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xE3FB84", Offset = "0xE3FB84", VA = "0xE3FB84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TutorialManager Instance;

		[Token(Token = "0x400333A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Special Language Texts")]
		public LanguageText m_TutorialCompleteGreat;

		[Token(Token = "0x400333B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LanguageText m_TutorialCompleteItsNow;

		[Token(Token = "0x400333C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LanguageText m_Vignettes;

		[Token(Token = "0x400333D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LanguageText m_SmoothTurn;

		[Token(Token = "0x400333E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LanguageText m_SmoothTurnSpeed;

		[Token(Token = "0x400333F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LanguageText m_OnLT;

		[Token(Token = "0x4003340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LanguageText m_OffLT;

		[Token(Token = "0x4003341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space]
		[SerializeField]
		private TutorialSpawn dummy;

		[Token(Token = "0x4003342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TutorialSpawn objective;

		[Token(Token = "0x4003343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public System.Action OnTutorialRestarted;

		[Token(Token = "0x4003344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform[] objectiveSpawns;

		[Token(Token = "0x4003345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TutorialSteps m_TutorialSteps;

		[Token(Token = "0x4003346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TutorialUI m_TutorialUI;

		[Token(Token = "0x4003347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int currentStep;

		[Token(Token = "0x4003348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float timeOnStep;

		[Token(Token = "0x4003349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool executedReminderAtThisStep;

		[Token(Token = "0x400334A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool allowStepCompletion;

		[Token(Token = "0x400334B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool completeStepAfterLastMessage;

		[Token(Token = "0x400334C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine stepTextCoroutine;

		[Token(Token = "0x400334D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine completeTutorialCoroutine;

		[Token(Token = "0x400334E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private WaitForSeconds UIcontentFadeOut;

		[Token(Token = "0x400334F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool selectedIntensity;

		[Token(Token = "0x4003350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Items originalPrimary;

		[Token(Token = "0x4003351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Items originalSecondary;

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xE3B750", Offset = "0xE3B750", VA = "0xE3B750")]
		public static bool VestVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xE3B848", Offset = "0xE3B848", VA = "0xE3B848")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xE3B8B8", Offset = "0xE3B8B8", VA = "0xE3B8B8")]
		private void ControllersHaveChanged(int index, bool recenterEvent)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xE3C054", Offset = "0xE3C054", VA = "0xE3C054")]
		[IteratorStateMachine(typeof(<Start>d__25))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xE3C0E4", Offset = "0xE3C0E4", VA = "0xE3C0E4")]
		[IteratorStateMachine(typeof(<HideWeaponsOnStart>d__26))]
		private IEnumerator HideWeaponsOnStart()
		{
			return null;
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xE3C174", Offset = "0xE3C174", VA = "0xE3C174")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xE3C4C4", Offset = "0xE3C4C4", VA = "0xE3C4C4")]
		public static bool NeedToFire()
		{
			return default(bool);
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xE3C5A4", Offset = "0xE3C5A4", VA = "0xE3C5A4")]
		public static bool OnMotionReload()
		{
			return default(bool);
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xE3C6A4", Offset = "0xE3C6A4", VA = "0xE3C6A4")]
		public static void FinishTutorial()
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xE3C7EC", Offset = "0xE3C7EC", VA = "0xE3C7EC")]
		private void BeginNextStep()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xE3BE48", Offset = "0xE3BE48", VA = "0xE3BE48")]
		private void ExecuteStep(int stepIndex)
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xE3C93C", Offset = "0xE3C93C", VA = "0xE3C93C")]
		[IteratorStateMachine(typeof(<StepTextChange>d__33))]
		private IEnumerator StepTextChange(TutorialStepItem newStep)
		{
			return null;
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xE3C850", Offset = "0xE3C850", VA = "0xE3C850")]
		private void TryStopTextChange()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xE3C8D4", Offset = "0xE3C8D4", VA = "0xE3C8D4")]
		[IteratorStateMachine(typeof(<CompleteTutorial>d__35))]
		private IEnumerator CompleteTutorial()
		{
			return null;
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xE3B24C", Offset = "0xE3B24C", VA = "0xE3B24C")]
		public static void CompleteStep(TutorialStep step, bool disallowCompletionAfterCompleting = false)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xE3CA50", Offset = "0xE3CA50", VA = "0xE3CA50")]
		public static void BTN_SetLH(bool value)
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xE3CAF0", Offset = "0xE3CAF0", VA = "0xE3CAF0")]
		public static void BTN_SetComfortIntensity(int value)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xE3D004", Offset = "0xE3D004", VA = "0xE3D004")]
		public static void BTN_ApplyComfortIntensity()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xE3D180", Offset = "0xE3D180", VA = "0xE3D180")]
		public static void BTN_SetHandOrientedMovement(bool value)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xE3D210", Offset = "0xE3D210", VA = "0xE3D210")]
		public static void ForceStaticReload()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xE3D3BC", Offset = "0xE3D3BC", VA = "0xE3D3BC")]
		public static void BTN_SetStaticRifleTo(bool value)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xE3D43C", Offset = "0xE3D43C", VA = "0xE3D43C")]
		public static void ActivateObjective()
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xE3D7B8", Offset = "0xE3D7B8", VA = "0xE3D7B8")]
		public static void ActivateDummy(int stepToComplete)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xE3D5D0", Offset = "0xE3D5D0", VA = "0xE3D5D0")]
		private static Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xE3D9E8", Offset = "0xE3D9E8", VA = "0xE3D9E8")]
		public static void RefillAmmo()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xE3DA18", Offset = "0xE3DA18", VA = "0xE3DA18")]
		public static void ForceHalfAmmo()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xE3DA78", Offset = "0xE3DA78", VA = "0xE3DA78")]
		[IteratorStateMachine(typeof(<DoForceHalfAmmo>d__49))]
		private IEnumerator DoForceHalfAmmo()
		{
			return null;
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xE3DB00", Offset = "0xE3DB00", VA = "0xE3DB00")]
		public static void ForceNeedToCock()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xE3DB60", Offset = "0xE3DB60", VA = "0xE3DB60")]
		[IteratorStateMachine(typeof(<DoForceNeedToCockOnMotion>d__51))]
		public IEnumerator DoForceNeedToCockOnMotion()
		{
			return null;
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xE3DBE8", Offset = "0xE3DBE8", VA = "0xE3DBE8")]
		public static void GiveOtherWeaponType()
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xE3C7AC", Offset = "0xE3C7AC", VA = "0xE3C7AC")]
		private void ReturnLoadoutToInitState()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xE3DD48", Offset = "0xE3DD48", VA = "0xE3DD48")]
		public static void GiveDual()
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xE3D280", Offset = "0xE3D280", VA = "0xE3D280")]
		private static void TryGiveNormalWeapon(bool force = false)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xE3DE78", Offset = "0xE3DE78", VA = "0xE3DE78")]
		public static void TryGiveGrenade()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xE3DECC", Offset = "0xE3DECC", VA = "0xE3DECC")]
		public static void SwitchToGunsIfOnKnives()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xE3DF90", Offset = "0xE3DF90", VA = "0xE3DF90")]
		public static void EnableButtons(int buttonGroupIndex)
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xE3E0B8", Offset = "0xE3E0B8", VA = "0xE3E0B8")]
		public static void FocusUI(bool value)
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xE3E170", Offset = "0xE3E170", VA = "0xE3E170")]
		public static void AllowStepCompletion(bool value)
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xE3E1CC", Offset = "0xE3E1CC", VA = "0xE3E1CC")]
		public static void CompleteStepAfterLastMessage()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xE3E224", Offset = "0xE3E224", VA = "0xE3E224")]
		public static void UnhideGuns()
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xE3E288", Offset = "0xE3E288", VA = "0xE3E288")]
		[ContextMenu("Set tutorial as unplayed")]
		public void SetTutorialAsUnplayed()
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xE3E38C", Offset = "0xE3E38C", VA = "0xE3E38C")]
		public TutorialManager()
		{
		}
	}
	[Token(Token = "0x2000635")]
	public class TutorialSpawn : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AudioSource m_AudioSource;

		[Token(Token = "0x4003367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TutorialStep m_StepToComplete;

		[Token(Token = "0x4003368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NavMeshPath path;

		[Token(Token = "0x4003369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float elapsedSinceLastCalculation;

		[Token(Token = "0x400336A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected Vector3 playerPos;

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xE3FBCC", Offset = "0xE3FBCC", VA = "0xE3FBCC")]
		private void Start()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xE3FBD0", Offset = "0xE3FBD0", VA = "0xE3FBD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xE3FD34", Offset = "0xE3FD34", VA = "0xE3FD34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xE3FE18", Offset = "0xE3FE18", VA = "0xE3FE18")]
		private void Kill()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xE3FE84", Offset = "0xE3FE84", VA = "0xE3FE84")]
		private void Update()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xE3FEDC", Offset = "0xE3FEDC", VA = "0xE3FEDC", Slot = "4")]
		protected virtual void UnityUpdate()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xE3FCBC", Offset = "0xE3FCBC", VA = "0xE3FCBC")]
		private void PlaySpawnSfx()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xE3B0E8", Offset = "0xE3B0E8", VA = "0xE3B0E8")]
		protected void CompleteStep()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xE3AC74", Offset = "0xE3AC74", VA = "0xE3AC74")]
		public TutorialSpawn()
		{
		}
	}
	[Token(Token = "0x2000636")]
	[CreateAssetMenu(fileName = "Tutorial Steps", menuName = "Alvo/Tutorial/Steps")]
	public class TutorialSteps : ScriptableObject
	{
		[Token(Token = "0x400336B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialStepItem[] steps;

		[Token(Token = "0x400336C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<TutorialStep, TutorialStepItem> stepsDictionary;

		[Token(Token = "0x17000464")]
		public int MaxStepsIndex
		{
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0xE3C684", Offset = "0xE3C684", VA = "0xE3C684")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xE3E8A8", Offset = "0xE3E8A8", VA = "0xE3E8A8")]
		public void SetupStepsDictionary()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xE3B9C8", Offset = "0xE3B9C8", VA = "0xE3B9C8")]
		public int StepIndex(TutorialStep tutorialStep)
		{
			return default(int);
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xE3B818", Offset = "0xE3B818", VA = "0xE3B818")]
		public TutorialStepItem GetStepItem(int index)
		{
			return null;
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xE3FEE0", Offset = "0xE3FEE0", VA = "0xE3FEE0")]
		public TutorialSteps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000637")]
	public class TutorialStepItem
	{
		[Serializable]
		[Token(Token = "0x2000638")]
		public class MessageAndEvent
		{
			[Token(Token = "0x4003372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LanguageText m_Message;

			[Token(Token = "0x4003373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool overrideMessageIfOnDual;

			[Token(Token = "0x4003374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool overrideMessageIfStatic;

			[Token(Token = "0x4003375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageText m_DualMessage;

			[Token(Token = "0x4003376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageText m_StaticMessage;

			[Token(Token = "0x4003377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool doNotSwapForLHOnDual;

			[Token(Token = "0x4003378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public TutorialSounds sound;

			[Token(Token = "0x4003379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public UnityEvent<MessageAndEvent> m_Event;

			[Token(Token = "0x400337A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public TutorialStep stepRef;

			[Token(Token = "0x60025C0")]
			[Address(RVA = "0xE3FEF0", Offset = "0xE3FEF0", VA = "0xE3FEF0")]
			public MessageAndEvent()
			{
			}
		}

		[Token(Token = "0x400336D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialStep step;

		[Token(Token = "0x400336E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MessageAndEvent[] messagesAndEvents;

		[Token(Token = "0x400336F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool skipIfDualIsNotAllowedAndOnNormal;

		[Token(Token = "0x4003370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool overrideIfDualIsNotAllowedAndOnNormal;

		[Token(Token = "0x4003371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MessageAndEvent[] messagesAndEventsDualNotAllowed;

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xE3FEE8", Offset = "0xE3FEE8", VA = "0xE3FEE8")]
		public TutorialStepItem()
		{
		}
	}
	[Token(Token = "0x2000639")]
	public enum TutorialStep
	{
		[Token(Token = "0x400337C")]
		Introduction,
		[Token(Token = "0x400337D")]
		Comfort,
		[Token(Token = "0x400337E")]
		MovementType,
		[Token(Token = "0x400337F")]
		WalkToObjective,
		[Token(Token = "0x4003380")]
		Crouch,
		[Token(Token = "0x4003381")]
		Jump,
		[Token(Token = "0x4003382")]
		Prone,
		[Token(Token = "0x4003383")]
		Slide,
		[Token(Token = "0x4003384")]
		WeaponFiring,
		[Token(Token = "0x4003385")]
		WeaponFiringDual,
		[Token(Token = "0x4003386")]
		Knives,
		[Token(Token = "0x4003387")]
		Reload,
		[Token(Token = "0x4003388")]
		ReloadDual,
		[Token(Token = "0x4003389")]
		StaticReload,
		[Token(Token = "0x400338A")]
		ReloadType,
		[Token(Token = "0x400338B")]
		Grenades,
		[Token(Token = "0x400338C")]
		ReloadCocking
	}
	[Token(Token = "0x200063A")]
	public class TutorialUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200063B")]
		[CompilerGenerated]
		private sealed class <DoCheckIfInputIsNeeded>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400339F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40033A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40033A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialUI <>4__this;

			[Token(Token = "0x17000465")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025DD")]
				[Address(RVA = "0xE40780", Offset = "0xE40780", VA = "0xE40780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000466")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025DF")]
				[Address(RVA = "0xE407C8", Offset = "0xE407C8", VA = "0xE407C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0xE404A4", Offset = "0xE404A4", VA = "0xE404A4")]
			[DebuggerHidden]
			public <DoCheckIfInputIsNeeded>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0xE406D4", Offset = "0xE406D4", VA = "0xE406D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025DC")]
			[Address(RVA = "0xE406D8", Offset = "0xE406D8", VA = "0xE406D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0xE40788", Offset = "0xE40788", VA = "0xE40788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200063C")]
		[CompilerGenerated]
		private sealed class <TypeWriterLoop>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40033A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40033A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40033A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialUI <>4__this;

			[Token(Token = "0x40033A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x40033A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x17000467")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025E3")]
				[Address(RVA = "0xE409AC", Offset = "0xE409AC", VA = "0xE409AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000468")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025E5")]
				[Address(RVA = "0xE409F4", Offset = "0xE409F4", VA = "0xE409F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0xE4054C", Offset = "0xE4054C", VA = "0xE4054C")]
			[DebuggerHidden]
			public <TypeWriterLoop>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60025E1")]
			[Address(RVA = "0xE407D0", Offset = "0xE407D0", VA = "0xE407D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0xE407D4", Offset = "0xE407D4", VA = "0xE407D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0xE409B4", Offset = "0xE409B4", VA = "0xE409B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400338D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] unwantedUI;

		[Token(Token = "0x400338E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera headAnchor;

		[Token(Token = "0x400338F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI leaveMatchText;

		[Token(Token = "0x4003390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI mainText;

		[Token(Token = "0x4003391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup mainCg;

		[Token(Token = "0x4003392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CanvasGroup contentCg;

		[Token(Token = "0x4003393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CanvasGroup[] buttonGroups;

		[Token(Token = "0x4003394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform invisibleWall;

		[Token(Token = "0x4003395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CanvasGroup descriptionCg;

		[Token(Token = "0x4003396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI descriptionText;

		[Token(Token = "0x4003397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Slider progressSlider;

		[Token(Token = "0x4003398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LanguageText m_SkipTutorialLT;

		[Token(Token = "0x4003399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine typeWriterLoop;

		[Token(Token = "0x400339A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaitForSeconds typeWriterWaitPerChar;

		[Token(Token = "0x400339B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshCollider mainCgCollider;

		[Token(Token = "0x400339C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int activeButtonGroup;

		[Token(Token = "0x400339D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool doCenter;

		[Token(Token = "0x400339E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool reachedCenter;

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xE3E62C", Offset = "0xE3E62C", VA = "0xE3E62C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xE3C2E0", Offset = "0xE3C2E0", VA = "0xE3C2E0")]
		public void CenterUI(float dt)
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xE3FFA0", Offset = "0xE3FFA0", VA = "0xE3FFA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xE401BC", Offset = "0xE401BC", VA = "0xE401BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xE4041C", Offset = "0xE4041C", VA = "0xE4041C")]
		private void CheckIfInputIsNeeded()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xE4043C", Offset = "0xE4043C", VA = "0xE4043C")]
		[IteratorStateMachine(typeof(<DoCheckIfInputIsNeeded>d__23))]
		private IEnumerator DoCheckIfInputIsNeeded()
		{
			return null;
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xE404CC", Offset = "0xE404CC", VA = "0xE404CC")]
		private void HideUI()
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xE40504", Offset = "0xE40504", VA = "0xE40504")]
		private void UnhideUI()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xE3FF38", Offset = "0xE3FF38", VA = "0xE3FF38")]
		[IteratorStateMachine(typeof(<TypeWriterLoop>d__26))]
		private IEnumerator TypeWriterLoop()
		{
			return null;
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xE3CF78", Offset = "0xE3CF78", VA = "0xE3CF78")]
		public void EnableAndSetDescription(string description)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xE3D094", Offset = "0xE3D094", VA = "0xE3D094")]
		public void DisableDescription()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xE3F4AC", Offset = "0xE3F4AC", VA = "0xE3F4AC")]
		public void UpdateText(string newText)
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xE3F3F0", Offset = "0xE3F3F0", VA = "0xE3F3F0")]
		public void FadeOutAndInContent()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xE3F910", Offset = "0xE3F910", VA = "0xE3F910")]
		public void DisableUI()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xE3BCE0", Offset = "0xE3BCE0", VA = "0xE3BCE0")]
		public void UIInteractionMode(bool value)
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xE3C864", Offset = "0xE3C864", VA = "0xE3C864")]
		public void DisableActiveButtons(bool expandText = true)
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xE3E010", Offset = "0xE3E010", VA = "0xE3E010")]
		public void EnableButtons(int buttonGroupIndex)
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xE40574", Offset = "0xE40574", VA = "0xE40574")]
		private void ModifyTextBottom(bool shrink)
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xE3E9C8", Offset = "0xE3E9C8", VA = "0xE3E9C8")]
		public void SetCanvasLayer(string layerName)
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xE3BAAC", Offset = "0xE3BAAC", VA = "0xE3BAAC")]
		public void FocusUI(bool value)
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xE3CA00", Offset = "0xE3CA00", VA = "0xE3CA00")]
		public void FillProgressBar(float value)
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xE4061C", Offset = "0xE4061C", VA = "0xE4061C")]
		public TutorialUI()
		{
		}
	}
}
namespace Alvo.Playground
{
	[Token(Token = "0x200063D")]
	public class PlaygroundBehaviorManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40033A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlaygroundBehaviorManager Instance;

		[Token(Token = "0x40033A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundConfig m_Config;

		[Token(Token = "0x40033A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Wrap;

		[Token(Token = "0x40033AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject logger;

		[Token(Token = "0x40033AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject killzoneCube;

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xE409FC", Offset = "0xE409FC", VA = "0xE409FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xE40ABC", Offset = "0xE40ABC", VA = "0xE40ABC")]
		public PlaygroundBehaviorManager()
		{
		}
	}
	[Token(Token = "0x200063E")]
	[CreateAssetMenu(fileName = "Playground config", menuName = "Alvo/Playground Config")]
	public class PlaygroundConfig : ScriptableObject
	{
		[Token(Token = "0x40033AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_Logging;

		[Token(Token = "0x40033AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_LogMessages;

		[Token(Token = "0x40033AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_LogWarning;

		[Token(Token = "0x40033AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool m_LogError;

		[Token(Token = "0x40033B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killzoneCube;

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xE40AC4", Offset = "0xE40AC4", VA = "0xE40AC4")]
		public PlaygroundConfig()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class PlaygroundLogger : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000640")]
		public class PlaygroundLoggerScreen
		{
			[Token(Token = "0x40033B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutGroup m_LayoutGroup;

			[Token(Token = "0x40033B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshProUGUI[] m_Texts;

			[Token(Token = "0x40033B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string[] m_desiredTexts;

			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xE40E58", Offset = "0xE40E58", VA = "0xE40E58")]
			public void Print(string textToPrint)
			{
			}

			[Token(Token = "0x60025F0")]
			[Address(RVA = "0xE411C4", Offset = "0xE411C4", VA = "0xE411C4")]
			public PlaygroundLoggerScreen()
			{
			}
		}

		[Token(Token = "0x40033B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI m_Head;

		[Token(Token = "0x40033B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_ProfileName;

		[Token(Token = "0x40033B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_Master;

		[Token(Token = "0x40033B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI m_Ping;

		[Token(Token = "0x40033B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlaygroundLoggerScreen m_MiddleScreen;

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xE40ACC", Offset = "0xE40ACC", VA = "0xE40ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xE40C30", Offset = "0xE40C30", VA = "0xE40C30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xE40CB0", Offset = "0xE40CB0", VA = "0xE40CB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xE40D30", Offset = "0xE40D30", VA = "0xE40D30")]
		private void OnMsgReceived(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xE41058", Offset = "0xE41058", VA = "0xE41058")]
		private void Update()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xE411BC", Offset = "0xE411BC", VA = "0xE411BC")]
		public PlaygroundLogger()
		{
		}
	}
}
namespace Alvo.TacticalGear
{
	[Token(Token = "0x2000641")]
	public class AntiProjectileSystem : TimedDeployableTacticalGear
	{
		[Token(Token = "0x40033B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Header("Anti Projectile System")]
		public float radius;

		[Token(Token = "0x40033BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SphereCollider areaOfEffect;

		[Token(Token = "0x40033BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform shockEmissionPoint;

		[Token(Token = "0x40033BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ParticleSystem destructionParticleSystem;

		[Token(Token = "0x40033BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LayerMask rayLayer;

		[Token(Token = "0x40033BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Vector2 rayNoiseRange;

		[Token(Token = "0x40033BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float rayDuration;

		[Token(Token = "0x40033C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip destroyClip;

		[Token(Token = "0x40033C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaycastHit rayHit;

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xE411CC", Offset = "0xE411CC", VA = "0xE411CC", Slot = "62")]
		public override void SetUpTacticalGear(Vector3 _velocity, int _worldNumber, int _team, bool _isVr)
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xE41248", Offset = "0xE41248", VA = "0xE41248")]
		public void DestroyProjectile(GrenadeObject _grenade)
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xE41360", Offset = "0xE41360", VA = "0xE41360")]
		public bool InLineOfSight(Transform _target)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xE414CC", Offset = "0xE414CC", VA = "0xE414CC")]
		public AntiProjectileSystem()
		{
		}
	}
	[Token(Token = "0x2000642")]
	public abstract class BaseTacticalGear : PunBehaviour
	{
		[Token(Token = "0x40033C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Base Data")]
		public TacticalGearType gearType;

		[Token(Token = "0x40033C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TacticalGearInstantiateType instantiateType;

		[Token(Token = "0x40033C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int team;

		[Token(Token = "0x40033C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected LevelManager levelManager;

		[Token(Token = "0x40033C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected AudioSource audioSource;

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xE414EC", Offset = "0xE414EC", VA = "0xE414EC")]
		protected BaseTacticalGear()
		{
		}
	}
	[Token(Token = "0x2000643")]
	public abstract class DeployableTacticalGear : BaseTacticalGear
	{
		[Token(Token = "0x40033C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Rigidbody rb;

		[Token(Token = "0x40033C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Collider col;

		[Token(Token = "0x40033C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected AudioClip hitSound;

		[Token(Token = "0x40033CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected AudioClip destroySound;

		[Token(Token = "0x40033CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected float hp;

		[Token(Token = "0x40033CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float currrentHp;

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xE414F4", Offset = "0xE414F4", VA = "0xE414F4")]
		public void ApplyDamage(float _dmg)
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xE4151C", Offset = "0xE4151C", VA = "0xE4151C", Slot = "44")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xE415A4", Offset = "0xE415A4", VA = "0xE415A4", Slot = "62")]
		public virtual void SetUpTacticalGear(Vector3 _velocity, int _worldNumber, int _team, bool _isVr)
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xE41728", Offset = "0xE41728", VA = "0xE41728", Slot = "63")]
		public virtual void OnCollisionEnter()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xE4179C", Offset = "0xE4179C", VA = "0xE4179C", Slot = "64")]
		[PunRPC]
		public virtual void DespawnTacticalGear()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xE417C0", Offset = "0xE417C0", VA = "0xE417C0", Slot = "65")]
		[PunRPC]
		public virtual void DestroyTacticalGear()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xE4185C", Offset = "0xE4185C", VA = "0xE4185C")]
		protected DeployableTacticalGear()
		{
		}
	}
	[Token(Token = "0x2000644")]
	public abstract class TimedDeployableTacticalGear : DeployableTacticalGear
	{
		[Token(Token = "0x40033CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Timed Gear")]
		[SerializeField]
		protected float timeAlive;

		[Token(Token = "0x40033CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected float timer;

		[Token(Token = "0x40033CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool isWorking;

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xE41238", Offset = "0xE41238", VA = "0xE41238", Slot = "62")]
		public override void SetUpTacticalGear(Vector3 _velocity, int _worldNumber, int _team, bool _isVr)
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xE4186C", Offset = "0xE4186C", VA = "0xE4186C", Slot = "66")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xE414DC", Offset = "0xE414DC", VA = "0xE414DC")]
		protected TimedDeployableTacticalGear()
		{
		}
	}
	[Token(Token = "0x2000645")]
	public class ProximityMine : DeployableTacticalGear
	{
		[Token(Token = "0x40033D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MineExplosion mineExplosion;

		[Token(Token = "0x40033D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ExplosiveObject explosiveObject;

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xE41994", Offset = "0xE41994", VA = "0xE41994")]
		private void OnTriggerEnter(Collider _other)
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xE41998", Offset = "0xE41998", VA = "0xE41998")]
		public ProximityMine()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public enum TacticalGearType
	{
		[Token(Token = "0x40033D3")]
		None,
		[Token(Token = "0x40033D4")]
		AntiProjectileSystem,
		[Token(Token = "0x40033D5")]
		ProximityMine
	}
	[Token(Token = "0x2000647")]
	public enum TacticalGearInstantiateType
	{
		[Token(Token = "0x40033D7")]
		Deployable,
		[Token(Token = "0x40033D8")]
		Weapon
	}
	[Token(Token = "0x2000648")]
	[CreateAssetMenu(fileName = "Gear", menuName = "Alvo/Tactical Gear/Tactical Gear")]
	public class ScriptableTacticalGear : ScriptableObject
	{
		[Token(Token = "0x40033D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public short version;

		[Token(Token = "0x40033DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TacticalGearType tacticalGearType;

		[Token(Token = "0x40033DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TacticalGearInstantiateType instantiateType;

		[Token(Token = "0x40033DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Name that will appear on the UI.")]
		public string tacticalGearName;

		[Token(Token = "0x40033DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Rank to unlock this Gear.")]
		public int unlockRank;

		[Token(Token = "0x40033DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int zombiesCost;

		[Token(Token = "0x40033DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int buyingCost;

		[Token(Token = "0x40033E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int cooldown;

		[Token(Token = "0x40033E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Sprite that will be used on the UI.")]
		public LoadoutIcon tacticalLoadoutIcon;

		[Token(Token = "0x40033E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Prefab that will be displayed when setting your loadout.")]
		public GameObject uiDisplayPrefab;

		[Token(Token = "0x40033E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Prefab that will be displayed in the player's hand before spawning it.")]
		public GameObject handDisplayPrefab;

		[Token(Token = "0x40033E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject gameplayPrefab;

		[Token(Token = "0x40033E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject networkPrefab;

		[Token(Token = "0x40033E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int poolId;

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xE419A8", Offset = "0xE419A8", VA = "0xE419A8")]
		public static ScriptableTacticalGear Deserialize(byte[] _bytes, ScriptableTacticalGear _tacticalGear)
		{
			return null;
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xE41B4C", Offset = "0xE41B4C", VA = "0xE41B4C")]
		public static byte[] Serialize(ScriptableTacticalGear _tacticalGear)
		{
			return null;
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xE41BFC", Offset = "0xE41BFC", VA = "0xE41BFC")]
		public static BinaryWriter WriteData(BinaryWriter _writer, ScriptableTacticalGear _tacticalGear, short _currentVersion)
		{
			return null;
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xE41AE8", Offset = "0xE41AE8", VA = "0xE41AE8")]
		public static ScriptableTacticalGear ReadBytes(BinaryReader _reader, ScriptableTacticalGear _gear)
		{
			return null;
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xE41B44", Offset = "0xE41B44", VA = "0xE41B44")]
		public ScriptableTacticalGear()
		{
		}
	}
	[Token(Token = "0x2000649")]
	[CreateAssetMenu(fileName = "Gear List", menuName = "Alvo/Tactical Gear/Tactical Gear List")]
	public class TacticalGearList : ScriptableObject
	{
		[Token(Token = "0x40033E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ScriptableTacticalGear> tacticalGear;

		[Token(Token = "0x40033E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<TacticalGearType, ScriptableTacticalGear> dictionary;

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xE41C58", Offset = "0xE41C58", VA = "0xE41C58")]
		public ScriptableTacticalGear GetByItemType(TacticalGearType _gearType)
		{
			return null;
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xE41DE0", Offset = "0xE41DE0", VA = "0xE41DE0")]
		public TacticalGearList()
		{
		}
	}
	[Token(Token = "0x200064A")]
	public class VrTacticalGearManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200064B")]
		[CompilerGenerated]
		private sealed class <CooldownTracker>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrTacticalGearManager <>4__this;

			[Token(Token = "0x17000469")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002621")]
				[Address(RVA = "0xE43230", Offset = "0xE43230", VA = "0xE43230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002623")]
				[Address(RVA = "0xE43278", Offset = "0xE43278", VA = "0xE43278", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600261E")]
			[Address(RVA = "0xE43018", Offset = "0xE43018", VA = "0xE43018")]
			[DebuggerHidden]
			public <CooldownTracker>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x600261F")]
			[Address(RVA = "0xE43048", Offset = "0xE43048", VA = "0xE43048", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002620")]
			[Address(RVA = "0xE4304C", Offset = "0xE4304C", VA = "0xE4304C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002622")]
			[Address(RVA = "0xE43238", Offset = "0xE43238", VA = "0xE43238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40033E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerLocalData localData;

		[Token(Token = "0x40033EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Deployable Spawning")]
		public TacticalGearInstantiateType[] instantiateType;

		[Token(Token = "0x40033EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject spawnedTacticalGear;

		[Token(Token = "0x40033EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GranadeArchMesh archMesh;

		[Token(Token = "0x40033ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] poolIds;

		[Token(Token = "0x40033EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] paths;

		[Token(Token = "0x40033EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Header("Deployable In Hand")]
		private Transform handPositionL;

		[Token(Token = "0x40033F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform handPositionR;

		[Token(Token = "0x40033F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform vestPosition;

		[Token(Token = "0x40033F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Collider vestTrigger;

		[Token(Token = "0x40033F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject[] handTacticalGear;

		[Token(Token = "0x40033F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] vestTacticalGear;

		[Token(Token = "0x40033F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Cooldown")]
		public int currentTactical;

		[Token(Token = "0x40033F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] cooldowns;

		[Token(Token = "0x40033F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] timers;

		[Token(Token = "0x40033F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool grabbed;

		[Token(Token = "0x40033F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool thrown;

		[Token(Token = "0x40033FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool canUse;

		[Token(Token = "0x40033FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		public bool cancelled;

		[Token(Token = "0x40033FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool setUp;

		[Token(Token = "0x40033FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IEnumerator ieCooldown;

		[Token(Token = "0x40033FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[Header("UI")]
		private Color readyColor;

		[Token(Token = "0x40033FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Image cooldown;

		[Token(Token = "0x4003400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4003401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform iconParent;

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xE41DE8", Offset = "0xE41DE8", VA = "0xE41DE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xE41DEC", Offset = "0xE41DEC", VA = "0xE41DEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xE420B8", Offset = "0xE420B8", VA = "0xE420B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xE41E04", Offset = "0xE41E04", VA = "0xE41E04")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xE41FF4", Offset = "0xE41FF4", VA = "0xE41FF4")]
		private void SetUp()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xE422B8", Offset = "0xE422B8", VA = "0xE422B8")]
		private void SetUpTacticalGear(ScriptableTacticalGear _tacticalGear, int _loadoutIndex)
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xE4243C", Offset = "0xE4243C", VA = "0xE4243C")]
		private void SetCurrentTacticalGear(int _currentTacticalGear)
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xE425CC", Offset = "0xE425CC", VA = "0xE425CC")]
		public void SetDeployableTacticalGearInHand(ScriptableTacticalGear _tacticalGear, int _loadoutIndex)
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xE427D4", Offset = "0xE427D4", VA = "0xE427D4")]
		public void SetDeployableTacticalGearInVest(ScriptableTacticalGear _tacticalGear, int _loadoutIndex)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xE4295C", Offset = "0xE4295C", VA = "0xE4295C")]
		public void ToggleDeployableGearInHand(bool _toggle)
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xE429A4", Offset = "0xE429A4", VA = "0xE429A4")]
		public void SpawnDeployableTacticalGear()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xE42AC4", Offset = "0xE42AC4", VA = "0xE42AC4")]
		public void LaunchDeployableTacticalGear()
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xE42D9C", Offset = "0xE42D9C", VA = "0xE42D9C")]
		public void SetWeapon()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xE420BC", Offset = "0xE420BC", VA = "0xE420BC")]
		public void InputHandler()
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xE42DA0", Offset = "0xE42DA0", VA = "0xE42DA0")]
		public void ButtonDownHandler()
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xE42E6C", Offset = "0xE42E6C", VA = "0xE42E6C")]
		public void ThrowHandler()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xE42EE0", Offset = "0xE42EE0", VA = "0xE42EE0")]
		public void CancelTactical()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xE42A88", Offset = "0xE42A88", VA = "0xE42A88")]
		public void StartCooldown()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xE42F9C", Offset = "0xE42F9C", VA = "0xE42F9C")]
		public void StopCooldown()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xE42FB0", Offset = "0xE42FB0", VA = "0xE42FB0")]
		[IteratorStateMachine(typeof(<CooldownTracker>d__44))]
		public IEnumerator CooldownTracker()
		{
			return null;
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xE43040", Offset = "0xE43040", VA = "0xE43040")]
		public VrTacticalGearManager()
		{
		}
	}
}
namespace Alvo.Perks
{
	[Token(Token = "0x200064C")]
	public enum PerkID
	{
		[Token(Token = "0x4003406")]
		None,
		[Token(Token = "0x4003407")]
		Sprinter,
		[Token(Token = "0x4003408")]
		Phantom,
		[Token(Token = "0x4003409")]
		GasMask,
		[Token(Token = "0x400340A")]
		FlakJacket,
		[Token(Token = "0x400340B")]
		DoubleTrouble,
		[Token(Token = "0x400340C")]
		MaxAmmo,
		[Token(Token = "0x400340D")]
		Overload,
		[Token(Token = "0x400340E")]
		Ninja,
		[Token(Token = "0x400340F")]
		TacticalMask,
		[Token(Token = "0x4003410")]
		Revenge,
		[Token(Token = "0x4003411")]
		Wolverine,
		[Token(Token = "0x4003412")]
		ZProjectileDefense,
		[Token(Token = "0x4003413")]
		ZSpeedDefense,
		[Token(Token = "0x4003414")]
		ZExplosiveDefense,
		[Token(Token = "0x4003415")]
		ZTankDefense
	}
	[Token(Token = "0x200064D")]
	[CreateAssetMenu(fileName = "Perk Database", menuName = "Alvo/Perks/Perk Database")]
	public class PlayerPerkDatabase : ScriptableObject
	{
		[Token(Token = "0x4003416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<PerkID, Perk> dictionary;

		[Token(Token = "0x4003417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		internal List<Perk> perks;

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xE43280", Offset = "0xE43280", VA = "0xE43280")]
		[ContextMenu("Rename all perk items")]
		private void RenameAllPerks()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xE43320", Offset = "0xE43320", VA = "0xE43320")]
		public Perk GetByString(string perk)
		{
			return null;
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xE4341C", Offset = "0xE4341C", VA = "0xE4341C")]
		public void SetupDictionary()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xE43548", Offset = "0xE43548", VA = "0xE43548")]
		public static PerkID PerkFromString(string s)
		{
			return default(PerkID);
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xE435D4", Offset = "0xE435D4", VA = "0xE435D4")]
		public PlayerPerkDatabase()
		{
		}
	}
	[Token(Token = "0x200064E")]
	[CreateAssetMenu(fileName = "Perk", menuName = "Alvo/Perks/Perk")]
	public class Perk : ScriptableObject
	{
		[Token(Token = "0x4003418")]
		public const int BuyingCost = 3500;

		[Token(Token = "0x4003419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerPerkDatabase database;

		[Token(Token = "0x400341A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Starting from 0")]
		[Space]
		public byte unlockAtLvl;

		[Token(Token = "0x400341B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PerkID perkId;

		[Token(Token = "0x400341C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LanguageText perkNameLT;

		[Token(Token = "0x400341D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LanguageText descriptionLT;

		[Token(Token = "0x400341E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite perkSpriteSmall;

		[Token(Token = "0x400341F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite perkSpriteMed;

		[Token(Token = "0x4003420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space]
		public bool doNotShowOnTitle;

		[Token(Token = "0x4003421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CultureInfo culture;

		[Token(Token = "0x1700046B")]
		public string perkName
		{
			[Token(Token = "0x6002629")]
			[Address(RVA = "0xE43650", Offset = "0xE43650", VA = "0xE43650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046C")]
		public string perkDescription
		{
			[Token(Token = "0x600262A")]
			[Address(RVA = "0xE4366C", Offset = "0xE4366C", VA = "0xE4366C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xE4331C", Offset = "0xE4331C", VA = "0xE4331C")]
		[ContextMenu("Rename file")]
		internal void RenameFile()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xE43688", Offset = "0xE43688", VA = "0xE43688")]
		public Perk()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200064F")]
	public class PlayerPerks
	{
		[Token(Token = "0x4003422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerPerkDatabase database;

		[Token(Token = "0x4003423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Perk slot1;

		[Token(Token = "0x4003424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Perk slot2;

		[Token(Token = "0x4003425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Perk previousSlot1;

		[Token(Token = "0x4003426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Perk previousSlot2;

		[Token(Token = "0x4003427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Use these when ignoring loadout, instead of currentLoadout.m_perk1")]
		public string m_IL_perk1;

		[Token(Token = "0x4003428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Use these when ignoring loadout, instead of currentLoadout.m_perk1")]
		public string m_IL_perk2;

		[Token(Token = "0x4003429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public PlayerData playerData;

		[Token(Token = "0x400342A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GamemodeSettings gmC;

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xE4370C", Offset = "0xE4370C", VA = "0xE4370C")]
		public void DebugEquipPerk(PerkID perkID)
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xE439B0", Offset = "0xE439B0", VA = "0xE439B0")]
		public bool HasEquipped(PerkID perkID)
		{
			return default(bool);
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xE43AD8", Offset = "0xE43AD8", VA = "0xE43AD8")]
		private bool HadPreviouslyEquipped(PerkID perkID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xE43BA8", Offset = "0xE43BA8", VA = "0xE43BA8")]
		public bool ComparePerk(PerkID _perk, bool primary)
		{
			return default(bool);
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xE43BD8", Offset = "0xE43BD8", VA = "0xE43BD8")]
		public void LoadPerks(bool _updateScoreboard = true)
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xE440B8", Offset = "0xE440B8", VA = "0xE440B8")]
		public void EquipFromSync(byte slot1, byte slot2)
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xE4427C", Offset = "0xE4427C", VA = "0xE4427C")]
		public PlayerPerks()
		{
		}
	}
}
namespace Alvo.Weapons
{
	[Token(Token = "0x2000650")]
	public class Molotov : GrenadeObject
	{
		[Token(Token = "0x6002634")]
		[Address(RVA = "0xE44284", Offset = "0xE44284", VA = "0xE44284", Slot = "62")]
		public override void SetupGrenade(Vector3 velocity, int worldNumber, int team, float fuse, bool isVr, bool beep)
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xE4431C", Offset = "0xE4431C", VA = "0xE4431C", Slot = "63")]
		protected override void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xE4449C", Offset = "0xE4449C", VA = "0xE4449C")]
		public Molotov()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class MolotovHandDisplay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400342B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xE444A4", Offset = "0xE444A4", VA = "0xE444A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xE44540", Offset = "0xE44540", VA = "0xE44540")]
		private void Update()
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xE44790", Offset = "0xE44790", VA = "0xE44790")]
		public MolotovHandDisplay()
		{
		}
	}
	[Token(Token = "0x2000652")]
	public class StickyGrenade : GrenadeObject
	{
		[Token(Token = "0x2000653")]
		[CompilerGenerated]
		private sealed class <IEOnCollisionEnter>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StickyGrenade <>4__this;

			[Token(Token = "0x4003438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Collision collision;

			[Token(Token = "0x1700046D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600264D")]
				[Address(RVA = "0xE45364", Offset = "0xE45364", VA = "0xE45364", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600264F")]
				[Address(RVA = "0xE453AC", Offset = "0xE453AC", VA = "0xE453AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600264A")]
			[Address(RVA = "0xE44AC4", Offset = "0xE44AC4", VA = "0xE44AC4")]
			[DebuggerHidden]
			public <IEOnCollisionEnter>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600264B")]
			[Address(RVA = "0xE44F64", Offset = "0xE44F64", VA = "0xE44F64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600264C")]
			[Address(RVA = "0xE44F68", Offset = "0xE44F68", VA = "0xE44F68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600264E")]
			[Address(RVA = "0xE4536C", Offset = "0xE4536C", VA = "0xE4536C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000654")]
		[CompilerGenerated]
		private sealed class <IEStickyCollidedOnEntityMsg>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400343A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400343B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StickyGrenade <>4__this;

			[Token(Token = "0x400343C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int worldNumber;

			[Token(Token = "0x400343D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 localPosition;

			[Token(Token = "0x1700046F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002653")]
				[Address(RVA = "0xE455C0", Offset = "0xE455C0", VA = "0xE455C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000470")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002655")]
				[Address(RVA = "0xE45608", Offset = "0xE45608", VA = "0xE45608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002650")]
			[Address(RVA = "0xE44D34", Offset = "0xE44D34", VA = "0xE44D34")]
			[DebuggerHidden]
			public <IEStickyCollidedOnEntityMsg>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002651")]
			[Address(RVA = "0xE453B4", Offset = "0xE453B4", VA = "0xE453B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002652")]
			[Address(RVA = "0xE453B8", Offset = "0xE453B8", VA = "0xE453B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002654")]
			[Address(RVA = "0xE455C8", Offset = "0xE455C8", VA = "0xE455C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000655")]
		[CompilerGenerated]
		private sealed class <IETurnFakeLedOn>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400343E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400343F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StickyGrenade <>4__this;

			[Token(Token = "0x4003441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _time;

			[Token(Token = "0x17000471")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002659")]
				[Address(RVA = "0xE45744", Offset = "0xE45744", VA = "0xE45744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000472")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600265B")]
				[Address(RVA = "0xE4578C", Offset = "0xE4578C", VA = "0xE4578C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0xE44F34", Offset = "0xE44F34", VA = "0xE44F34")]
			[DebuggerHidden]
			public <IETurnFakeLedOn>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002657")]
			[Address(RVA = "0xE45610", Offset = "0xE45610", VA = "0xE45610", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002658")]
			[Address(RVA = "0xE45614", Offset = "0xE45614", VA = "0xE45614", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600265A")]
			[Address(RVA = "0xE4574C", Offset = "0xE4574C", VA = "0xE4574C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400342C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isSticked;

		[Token(Token = "0x400342D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform originalParent;

		[Token(Token = "0x400342E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 originalScale;

		[Token(Token = "0x400342F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine ieLedCorountine;

		[Token(Token = "0x4003430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AlvoPoolTransformSync alvoPoolTransformSync;

		[Token(Token = "0x4003431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4003432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture2D fakeLedOn;

		[Token(Token = "0x4003433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Texture2D fakeLedOff;

		[Token(Token = "0x4003434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private SpriteRenderer m_flareSprite;

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xE44798", Offset = "0xE44798", VA = "0xE44798")]
		private void Awake()
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xE448A0", Offset = "0xE448A0", VA = "0xE448A0", Slot = "62")]
		public override void SetupGrenade(Vector3 velocity, int worldNumber, int team, float fuse, bool isVr, bool beep)
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0xE449DC", Offset = "0xE449DC", VA = "0xE449DC", Slot = "63")]
		protected override void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0xE44A50", Offset = "0xE44A50", VA = "0xE44A50")]
		[IteratorStateMachine(typeof(<IEOnCollisionEnter>d__12))]
		private IEnumerator IEOnCollisionEnter(Collision collision)
		{
			return null;
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xE44AEC", Offset = "0xE44AEC", VA = "0xE44AEC")]
		private void StickyCollidedGeneric()
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0xE44C74", Offset = "0xE44C74", VA = "0xE44C74")]
		[PunRPC]
		private void StickyCollidedMsg()
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xE44C78", Offset = "0xE44C78", VA = "0xE44C78")]
		[PunRPC]
		private void StickyCollidedOnEntityMsg(int worldNumber, Vector3 localPosition)
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xE44C98", Offset = "0xE44C98", VA = "0xE44C98")]
		[IteratorStateMachine(typeof(<IEStickyCollidedOnEntityMsg>d__16))]
		private IEnumerator IEStickyCollidedOnEntityMsg(int worldNumber, Vector3 localPosition)
		{
			return null;
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0xE44D5C", Offset = "0xE44D5C", VA = "0xE44D5C")]
		public void RemoveFromParent()
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0xE44C28", Offset = "0xE44C28", VA = "0xE44C28")]
		private void Stick(bool stick)
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0xE44E1C", Offset = "0xE44E1C", VA = "0xE44E1C", Slot = "68")]
		[PunRPC]
		protected override void DetonateGrenade()
		{
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0xE44E38", Offset = "0xE44E38", VA = "0xE44E38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xE44E3C", Offset = "0xE44E3C", VA = "0xE44E3C", Slot = "66")]
		protected override void OnBeeped()
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xE44E6C", Offset = "0xE44E6C", VA = "0xE44E6C")]
		private void TurnFakeLedOn(float _time)
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xE44EBC", Offset = "0xE44EBC", VA = "0xE44EBC")]
		[IteratorStateMachine(typeof(<IETurnFakeLedOn>d__23))]
		private IEnumerator IETurnFakeLedOn(float _time)
		{
			return null;
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xE44F5C", Offset = "0xE44F5C", VA = "0xE44F5C")]
		public StickyGrenade()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public class RevolverBulletManagement : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000657")]
		public struct Bullet
		{
			[Token(Token = "0x4003448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Unadjusted transforms")]
			public Transform m_Reference;

			[Token(Token = "0x4003449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform m_Transform;

			[Token(Token = "0x400344A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody m_Rigidbody;

			[Token(Token = "0x400344B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Collider m_Collider;

			[Token(Token = "0x400344C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[HideInInspector]
			public Transform m_OriginalParent;
		}

		[Token(Token = "0x4003442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WeaponBehavior m_Weapon;

		[Token(Token = "0x4003443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_Cylinder;

		[Token(Token = "0x4003444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_BoltScrew;

		[Token(Token = "0x4003445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bullet[] m_Bullets;

		[Token(Token = "0x4003446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider[] m_GunColliders;

		[Token(Token = "0x4003447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte m_activeBullet;

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xE45794", Offset = "0xE45794", VA = "0xE45794")]
		private void Awake()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xE45814", Offset = "0xE45814", VA = "0xE45814")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xE45A04", Offset = "0xE45A04", VA = "0xE45A04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xE45B4C", Offset = "0xE45B4C", VA = "0xE45B4C")]
		private void ResetState()
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xE45D74", Offset = "0xE45D74", VA = "0xE45D74")]
		private void OnReloaded()
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xE4595C", Offset = "0xE4595C", VA = "0xE4595C")]
		private void CalculateMeshes()
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xE45D8C", Offset = "0xE45D8C", VA = "0xE45D8C")]
		private void OnWeaponFired()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xE45ED8", Offset = "0xE45ED8", VA = "0xE45ED8")]
		public void EjectBullets()
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xE460D0", Offset = "0xE460D0", VA = "0xE460D0")]
		public RevolverBulletManagement()
		{
		}
	}
}
namespace Alvo.LevelDesign
{
	[Token(Token = "0x2000658")]
	[RequireComponent(typeof(LODGroup))]
	public class AlvoLOD : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400344D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LODGroup m_LodGroup;

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xE460D8", Offset = "0xE460D8", VA = "0xE460D8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xE46130", Offset = "0xE46130", VA = "0xE46130")]
		private static void SetLODSetting(AlvoLOD alvoLOD)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xE46134", Offset = "0xE46134", VA = "0xE46134")]
		private void Start()
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xE46138", Offset = "0xE46138", VA = "0xE46138")]
		private void UpdateLightmaps()
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xE46464", Offset = "0xE46464", VA = "0xE46464")]
		public AlvoLOD()
		{
		}
	}
	[Token(Token = "0x200065A")]
	public class AndroidLightProbes : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600266D")]
		[Address(RVA = "0xE464F0", Offset = "0xE464F0", VA = "0xE464F0")]
		public AndroidLightProbes()
		{
		}
	}
	[Token(Token = "0x200065B")]
	public class BoxColliderDrawer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600266E")]
		[Address(RVA = "0xE464F8", Offset = "0xE464F8", VA = "0xE464F8")]
		public BoxColliderDrawer()
		{
		}
	}
	[Token(Token = "0x200065C")]
	public class DisableOnRecording : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600266F")]
		[Address(RVA = "0xE46500", Offset = "0xE46500", VA = "0xE46500")]
		public void Start()
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xE465AC", Offset = "0xE465AC", VA = "0xE465AC")]
		public DisableOnRecording()
		{
		}
	}
	[Token(Token = "0x200065D")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class MeshCombiner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002671")]
		[Address(RVA = "0xE465B4", Offset = "0xE465B4", VA = "0xE465B4")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x200065E")]
	public class TitlePlayerPos : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform t;

		[Token(Token = "0x4003451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftSideLimit;

		[Token(Token = "0x4003452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightSideLimit;

		[Token(Token = "0x4003453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 offsetFloor;

		[Token(Token = "0x4003454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 offsetArea;

		[Token(Token = "0x4003455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float cubeSize;

		[Token(Token = "0x4003456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float radius;

		[Token(Token = "0x4003457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Camera cam;

		[Token(Token = "0x4003458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform charactersSpawnPos;

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xE465BC", Offset = "0xE465BC", VA = "0xE465BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xE46630", Offset = "0xE46630", VA = "0xE46630")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xE46858", Offset = "0xE46858", VA = "0xE46858")]
		public TitlePlayerPos()
		{
		}
	}
}
namespace Alvo.DevelopmentTools
{
	[Token(Token = "0x200065F")]
	[RequireComponent(typeof(BoxCollider))]
	public class SafePointTeleport : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002675")]
		[Address(RVA = "0xE46878", Offset = "0xE46878", VA = "0xE46878")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xE4689C", Offset = "0xE4689C", VA = "0xE4689C")]
		public SafePointTeleport()
		{
		}
	}
}
namespace Alvo.DarkUI
{
	[Token(Token = "0x2000660")]
	[RequireComponent(typeof(DarkButtonDebugger))]
	public class DarkButton : Selectable
	{
		[Token(Token = "0x4003459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Space]
		[SerializeField]
		private Sfx m_OnHoverPlay;

		[Token(Token = "0x400345A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private Sfx m_OnClickPlay;

		[Token(Token = "0x400345B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool m_VibrateOnHover;

		[Token(Token = "0x400345C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[SerializeField]
		private bool m_VibrateOnClick;

		[Token(Token = "0x400345D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Space]
		[SerializeField]
		public UnityEvent m_OnClick;

		[Token(Token = "0x400345E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UnityEvent m_OnHover;

		[Token(Token = "0x400345F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private UnityEvent m_OnHoverExit;

		[Token(Token = "0x4003460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private VrInput m_vrInput;

		[Token(Token = "0x4003461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private bool m_RanDefaultValidation;

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xE468A4", Offset = "0xE468A4", VA = "0xE468A4", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xE46AA0", Offset = "0xE46AA0", VA = "0xE46AA0", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xE46ACC", Offset = "0xE46ACC", VA = "0xE46ACC", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xE46C0C", Offset = "0xE46C0C", VA = "0xE46C0C")]
		public DarkButton()
		{
		}
	}
	[Token(Token = "0x2000661")]
	public class DarkButtonDebugger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DarkButton m_Button;

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xE46C70", Offset = "0xE46C70", VA = "0xE46C70")]
		public DarkButtonDebugger()
		{
		}
	}
	[Token(Token = "0x2000662")]
	public class DarkButtonReplacer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600267C")]
		[Address(RVA = "0xE46C78", Offset = "0xE46C78", VA = "0xE46C78")]
		public DarkButtonReplacer()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public class DarkGenericEventListener : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4003463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sfx m_onHoverPlay;

		[Token(Token = "0x4003464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Sfx m_onClickPlay;

		[Token(Token = "0x4003465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_VibrateOnHover;

		[Token(Token = "0x4003466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool m_VibrateOnClick;

		[Token(Token = "0x4003467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Space]
		private UnityEvent OnClick;

		[Token(Token = "0x4003468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_OnHover;

		[Token(Token = "0x4003469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent m_OnHoverExit;

		[Token(Token = "0x400346A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isUsable;

		[Token(Token = "0x400346B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VrInput m_vrInput;

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xE46C80", Offset = "0xE46C80", VA = "0xE46C80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xE46D18", Offset = "0xE46D18", VA = "0xE46D18", Slot = "5")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xE46E34", Offset = "0xE46E34", VA = "0xE46E34", Slot = "6")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xE46E50", Offset = "0xE46E50", VA = "0xE46E50", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xE46F6C", Offset = "0xE46F6C", VA = "0xE46F6C")]
		public DarkGenericEventListener()
		{
		}
	}
}
namespace Alvo.DarkAudio
{
	[Token(Token = "0x2000664")]
	public class DarkAudioManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400346C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DarkAudioManager Instance;

		[Token(Token = "0x400346D")]
		private const int MindB = -30;

		[Token(Token = "0x400346E")]
		private const int RealMindB = -80;

		[Token(Token = "0x400346F")]
		private const int MaxdB = 0;

		[Token(Token = "0x4003470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixer m_AudioMixer;

		[Token(Token = "0x4003471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_SfxSource;

		[Token(Token = "0x4003472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_MusicSource1;

		[Token(Token = "0x4003473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_MusicSource2;

		[Token(Token = "0x4003474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MusicClips m_MusicGroup;

		[Token(Token = "0x4003475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SfxClips m_SfxGroup;

		[Token(Token = "0x4003476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, AudioClip> m_dictionary;

		[Token(Token = "0x4003477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween m_sceneVolumeFade;

		[Token(Token = "0x17000473")]
		public static int DefaultMasterVolume
		{
			[Token(Token = "0x6002682")]
			[Address(RVA = "0xE46F80", Offset = "0xE46F80", VA = "0xE46F80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000474")]
		public static int DefaultSfxVolume
		{
			[Token(Token = "0x6002683")]
			[Address(RVA = "0xE46FB0", Offset = "0xE46FB0", VA = "0xE46FB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000475")]
		public static int DefaultMusicVolume
		{
			[Token(Token = "0x6002684")]
			[Address(RVA = "0xE46FE0", Offset = "0xE46FE0", VA = "0xE46FE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000476")]
		public static int DefaultVoiceVolume
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0xE47010", Offset = "0xE47010", VA = "0xE47010")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000477")]
		public static int DefaultAmbienceVolume
		{
			[Token(Token = "0x6002686")]
			[Address(RVA = "0xE47040", Offset = "0xE47040", VA = "0xE47040")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000478")]
		public static float MasterVolume
		{
			[Token(Token = "0x600268A")]
			[Address(RVA = "0xE4747C", Offset = "0xE4747C", VA = "0xE4747C")]
			set
			{
			}
		}

		[Token(Token = "0x17000479")]
		public static float MusicVolume
		{
			[Token(Token = "0x600268B")]
			[Address(RVA = "0xE47510", Offset = "0xE47510", VA = "0xE47510")]
			set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public static float SfxVolume
		{
			[Token(Token = "0x600268C")]
			[Address(RVA = "0xE475A4", Offset = "0xE475A4", VA = "0xE475A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700047B")]
		public static float AmbienceVolume
		{
			[Token(Token = "0x600268D")]
			[Address(RVA = "0xE47638", Offset = "0xE47638", VA = "0xE47638")]
			set
			{
			}
		}

		[Token(Token = "0x1700047C")]
		public static float VocalsVolume
		{
			[Token(Token = "0x600268E")]
			[Address(RVA = "0xE476CC", Offset = "0xE476CC", VA = "0xE476CC")]
			set
			{
			}
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xE47070", Offset = "0xE47070", VA = "0xE47070")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xE47264", Offset = "0xE47264", VA = "0xE47264")]
		private void Start()
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xE47464", Offset = "0xE47464", VA = "0xE47464")]
		public static float GetDecibelFrom01(float x01)
		{
			return default(float);
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xE47760", Offset = "0xE47760", VA = "0xE47760")]
		public static void FadeSceneVolume(bool In)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xE47818", Offset = "0xE47818", VA = "0xE47818")]
		public static void Play(Music music)
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xE469CC", Offset = "0xE469CC", VA = "0xE469CC")]
		public static void Play(Sfx sfx, float volume = 1f)
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xE47BAC", Offset = "0xE47BAC", VA = "0xE47BAC")]
		private AudioClip GetClip(Music music)
		{
			return null;
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xE47C4C", Offset = "0xE47C4C", VA = "0xE47C4C")]
		private AudioClip GetClip(Sfx sfx)
		{
			return null;
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xE47CEC", Offset = "0xE47CEC", VA = "0xE47CEC")]
		public DarkAudioManager()
		{
		}
	}
	[Token(Token = "0x2000666")]
	[CreateAssetMenu(fileName = "Music clips", menuName = "Alvo/Audio/Music clip group")]
	public class MusicClips : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000667")]
		public struct MusicClipReference
		{
			[Token(Token = "0x400347C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Music musicClip;

			[Token(Token = "0x400347D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip clip;
		}

		[Token(Token = "0x400347B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MusicClipReference[] clips;

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xE47E18", Offset = "0xE47E18", VA = "0xE47E18")]
		public MusicClips()
		{
		}
	}
	[Token(Token = "0x2000668")]
	[CreateAssetMenu(fileName = "Sfx clips", menuName = "Alvo/Audio/Sfx clip group")]
	public class SfxClips : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000669")]
		public struct SfxClipReference
		{
			[Token(Token = "0x400347F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Sfx sfxClip;

			[Token(Token = "0x4003480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip clip;
		}

		[Token(Token = "0x400347E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SfxClipReference[] m_Clips;

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xE47E20", Offset = "0xE47E20", VA = "0xE47E20")]
		public SfxClips()
		{
		}
	}
	[Token(Token = "0x200066A")]
	public enum Music
	{
		[Token(Token = "0x4003482")]
		None
	}
	[Token(Token = "0x200066B")]
	public enum Sfx
	{
		[Token(Token = "0x4003484")]
		None,
		[Token(Token = "0x4003485")]
		UIHover,
		[Token(Token = "0x4003486")]
		UIClick,
		[Token(Token = "0x4003487")]
		UIClose,
		[Token(Token = "0x4003488")]
		UIOpen,
		[Token(Token = "0x4003489")]
		UISelect,
		[Token(Token = "0x400348A")]
		UIError
	}
}
namespace Alvo.UserInterface
{
	[Token(Token = "0x200066C")]
	public class ScrollViewAnimated : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400348B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect m_ScrollRect;

		[Token(Token = "0x400348C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Range(0.01f, 1f)]
		private float m_ScrollAmount;

		[Token(Token = "0x400348D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0.5f, 15f)]
		[SerializeField]
		private float m_ScrollSpeed;

		[Token(Token = "0x400348E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		[SerializeField]
		private CanvasGroup m_BackwardSelector;

		[Token(Token = "0x400348F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup m_ForwardSelector;

		[Token(Token = "0x4003490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_SelectorDisabledAlpha;

		[Token(Token = "0x4003491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_TargetPosition;

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xE47E28", Offset = "0xE47E28", VA = "0xE47E28")]
		public void Scroll(bool forward)
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xE47F2C", Offset = "0xE47F2C", VA = "0xE47F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xE47F30", Offset = "0xE47F30", VA = "0xE47F30")]
		private void AnimateScroll()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xE47FD4", Offset = "0xE47FD4", VA = "0xE47FD4")]
		public ScrollViewAnimated()
		{
		}
	}
	[Token(Token = "0x200066D")]
	public class ItemUnlockUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UIAnimation m_Animation;

		[Token(Token = "0x1700047D")]
		public UIAnimation Animation
		{
			[Token(Token = "0x600269F")]
			[Address(RVA = "0xE47FF0", Offset = "0xE47FF0", VA = "0xE47FF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xE47FF8", Offset = "0xE47FF8", VA = "0xE47FF8")]
		public ItemUnlockUI()
		{
		}
	}
	[Token(Token = "0x200066E")]
	public class UIAnimation : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200066F")]
		public class UIAnimationParams
		{
			[Token(Token = "0x400349B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(0f, 8f)]
			public float Delay;

			[Token(Token = "0x400349C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UIAnimation WaitFor;

			[Token(Token = "0x400349D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Range(0f, 5f)]
			public float Duration;

			[Token(Token = "0x400349E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Easings.Function EasingType;

			[Token(Token = "0x400349F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Space]
			public bool UsePositionTween;

			[Token(Token = "0x40034A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector2 PositionStart;

			[Token(Token = "0x40034A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector2 PositionEnd;

			[Token(Token = "0x40034A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[Space]
			public bool UseScaleTween;

			[Token(Token = "0x40034A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 ScaleStart;

			[Token(Token = "0x40034A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 ScaleEnd;

			[Token(Token = "0x40034A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[Space]
			public bool UseRotationTween;

			[Token(Token = "0x40034A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 RotationStart;

			[Token(Token = "0x40034A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector3 RotationEnd;

			[Token(Token = "0x40034A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[Space]
			public bool UseColorTween;

			[Token(Token = "0x40034A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Color ColorStart;

			[Token(Token = "0x40034AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Color ColorEnd;

			[Token(Token = "0x40034AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[Space]
			public bool UseAlphaTween;

			[Token(Token = "0x40034AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public float AlphaStart;

			[Token(Token = "0x40034AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public float AlphaEnd;

			[Token(Token = "0x60026A9")]
			[Address(RVA = "0xE48398", Offset = "0xE48398", VA = "0xE48398")]
			public UIAnimationParams()
			{
			}
		}

		[Token(Token = "0x2000670")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40034AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIAnimationParams animation;

			[Token(Token = "0x40034AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<bool> <>9__0;

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xE483A8", Offset = "0xE483A8", VA = "0xE483A8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60026AB")]
			[Address(RVA = "0xE483B0", Offset = "0xE483B0", VA = "0xE483B0")]
			internal bool <C_DoAnimation>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000671")]
		[CompilerGenerated]
		private sealed class <C_DoAnimation>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40034B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40034B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40034B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIAnimationParams animation;

			[Token(Token = "0x40034B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIAnimation <>4__this;

			[Token(Token = "0x40034B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass16_0 <>8__1;

			[Token(Token = "0x40034B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <isPastInitialFrame>5__2;

			[Token(Token = "0x1700047F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026AF")]
				[Address(RVA = "0xE48AB0", Offset = "0xE48AB0", VA = "0xE48AB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000480")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B1")]
				[Address(RVA = "0xE48AF8", Offset = "0xE48AF8", VA = "0xE48AF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xE48360", Offset = "0xE48360", VA = "0xE48360")]
			[DebuggerHidden]
			public <C_DoAnimation>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xE483D4", Offset = "0xE483D4", VA = "0xE483D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xE483D8", Offset = "0xE483D8", VA = "0xE483D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xE48AB8", Offset = "0xE48AB8", VA = "0xE48AB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_SetAlphaOnAwake;

		[Token(Token = "0x4003495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_AlphaOnAwake;

		[Token(Token = "0x4003496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space]
		[SerializeField]
		private UIAnimationParams[] m_Animations;

		[Token(Token = "0x4003497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform m_RectTransf;

		[Token(Token = "0x4003498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Graphic m_Graphic;

		[Token(Token = "0x4003499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasGroup m_Group;

		[Token(Token = "0x400349A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Easer m_AnimationEaser;

		[Token(Token = "0x1700047E")]
		public bool IsDoneAnimating
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0xE48000", Offset = "0xE48000", VA = "0xE48000")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0xE48008", Offset = "0xE48008", VA = "0xE48008")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0xE48014", Offset = "0xE48014", VA = "0xE48014")]
		public void PlayAnimation(int index)
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0xE48104", Offset = "0xE48104", VA = "0xE48104")]
		public void SetAnimationWaitFor(int animationIndex, UIAnimation waitFor)
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0xE4813C", Offset = "0xE4813C", VA = "0xE4813C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0xE48330", Offset = "0xE48330", VA = "0xE48330")]
		private void Update()
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0xE48090", Offset = "0xE48090", VA = "0xE48090")]
		[IteratorStateMachine(typeof(<C_DoAnimation>d__16))]
		private IEnumerator C_DoAnimation(UIAnimationParams animation)
		{
			return null;
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0xE48388", Offset = "0xE48388", VA = "0xE48388")]
		public UIAnimation()
		{
		}
	}
}
namespace Alvo.AISystem
{
	[Token(Token = "0x2000672")]
	public class HelpStrings
	{
		[Token(Token = "0x2000673")]
		public class AI
		{
			[Token(Token = "0x40034B6")]
			public const string IS_PLAYER_DEAD = "Is Player Dead";

			[Token(Token = "0x40034B7")]
			public const string IS_PLAYER_IN_SIGHT = "Player in sight";

			[Token(Token = "0x40034B8")]
			public const string CAN_ATTACK_PLAYER = "Can Attack Player";

			[Token(Token = "0x40034B9")]
			public const string NEXT_TO_FOOD = "Next To Food";

			[Token(Token = "0x40034BA")]
			public const string IS_HUNGRY = "Is Hungry";

			[Token(Token = "0x40034BB")]
			public const string IS_TIRED = "Is Tired";

			[Token(Token = "0x40034BC")]
			public const string IN_DANGER = "In Danger";

			[Token(Token = "0x40034BD")]
			public const string ANIMATOR_PARAM_WALK = "Walk";

			[Token(Token = "0x40034BE")]
			public const string ANIMATOR_PARAM_RUN = "Run";

			[Token(Token = "0x40034BF")]
			public const string ANIMATOR_PARAM_EAT = "Eat";

			[Token(Token = "0x40034C0")]
			public const string ANIMATOR_PARAM_ATTACK = "Attack";

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0xE48B08", Offset = "0xE48B08", VA = "0xE48B08")]
			public AI()
			{
			}
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xE48B00", Offset = "0xE48B00", VA = "0xE48B00")]
		public HelpStrings()
		{
		}
	}
	[Token(Token = "0x2000674")]
	public enum ActionRepeatType
	{
		[Token(Token = "0x40034C2")]
		Single,
		[Token(Token = "0x40034C3")]
		Repetitive
	}
	[Token(Token = "0x2000675")]
	public class Action
	{
		[Token(Token = "0x40034C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected AIController m_AIController;

		[Token(Token = "0x40034C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected NavMeshAgent m_Agent;

		[Token(Token = "0x40034C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int m_Priority;

		[Token(Token = "0x40034C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected bool m_IsInterruptable;

		[Token(Token = "0x40034C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ActionRepeatType m_RepeatType;

		[Token(Token = "0x40034C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_IsActive;

		[Token(Token = "0x40034CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StateData m_Preconditions;

		[Token(Token = "0x40034CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StateData m_Effects;

		[Token(Token = "0x17000481")]
		public bool IsActive
		{
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xE48B10", Offset = "0xE48B10", VA = "0xE48B10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0xE48B18", Offset = "0xE48B18", VA = "0xE48B18")]
			set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public int Priority
		{
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0xE48B24", Offset = "0xE48B24", VA = "0xE48B24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000483")]
		public bool IsInterruptable
		{
			[Token(Token = "0x60026B7")]
			[Address(RVA = "0xE48B2C", Offset = "0xE48B2C", VA = "0xE48B2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000484")]
		public ActionRepeatType RepeatType
		{
			[Token(Token = "0x60026B8")]
			[Address(RVA = "0xE48B34", Offset = "0xE48B34", VA = "0xE48B34")]
			get
			{
				return default(ActionRepeatType);
			}
		}

		[Token(Token = "0x17000485")]
		public StateData Preconditions
		{
			[Token(Token = "0x60026B9")]
			[Address(RVA = "0xE48B3C", Offset = "0xE48B3C", VA = "0xE48B3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		public StateData Effects
		{
			[Token(Token = "0x60026BA")]
			[Address(RVA = "0xE48B44", Offset = "0xE48B44", VA = "0xE48B44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xE48B4C", Offset = "0xE48B4C", VA = "0xE48B4C")]
		public Action(AIController aiController)
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xE48C0C", Offset = "0xE48C0C", VA = "0xE48C0C", Slot = "4")]
		public virtual void OnStart()
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xE48C10", Offset = "0xE48C10", VA = "0xE48C10", Slot = "5")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xE48C14", Offset = "0xE48C14", VA = "0xE48C14", Slot = "6")]
		public virtual void OnCompletion()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xE48C4C", Offset = "0xE48C4C", VA = "0xE48C4C", Slot = "7")]
		public virtual bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xE48C54", Offset = "0xE48C54", VA = "0xE48C54", Slot = "8")]
		public virtual bool StillValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xE48C5C", Offset = "0xE48C5C", VA = "0xE48C5C", Slot = "9")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xE48C60", Offset = "0xE48C60", VA = "0xE48C60", Slot = "10")]
		public virtual void OnDeactivation()
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xE48C64", Offset = "0xE48C64", VA = "0xE48C64", Slot = "11")]
		public virtual bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xE48C6C", Offset = "0xE48C6C", VA = "0xE48C6C", Slot = "12")]
		public virtual void ResetValues()
		{
		}
	}
	[Token(Token = "0x2000676")]
	public class AttackAction : Action
	{
		[Token(Token = "0x40034CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_MinAttackDistance;

		[Token(Token = "0x40034CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_AttackInterval;

		[Token(Token = "0x40034CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_HasKilledPlayer;

		[Token(Token = "0x40034CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject m_Target;

		[Token(Token = "0x40034D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_NextTimeCanAttack;

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xE48C70", Offset = "0xE48C70", VA = "0xE48C70")]
		public AttackAction(AIController aiEntity)
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xE48C80", Offset = "0xE48C80", VA = "0xE48C80", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xE48D60", Offset = "0xE48D60", VA = "0xE48D60", Slot = "7")]
		public override bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xE48D84", Offset = "0xE48D84", VA = "0xE48D84", Slot = "9")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xE48DCC", Offset = "0xE48DCC", VA = "0xE48DCC", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xE48FEC", Offset = "0xE48FEC", VA = "0xE48FEC", Slot = "8")]
		public override bool StillValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xE49114", Offset = "0xE49114", VA = "0xE49114", Slot = "11")]
		public override bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xE48E3C", Offset = "0xE48E3C", VA = "0xE48E3C")]
		private void RotateTowards(Transform transform, Transform target, float rotationSpeed)
		{
		}
	}
	[Token(Token = "0x2000677")]
	public class ChaseAction : Action
	{
		[Token(Token = "0x40034D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SoundPlayer m_InitialScreamAudio;

		[Token(Token = "0x40034D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SoundPlayer m_ScreamingAudio;

		[Token(Token = "0x40034D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector2 m_ScreamInterval;

		[Token(Token = "0x40034D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_Target;

		[Token(Token = "0x40034D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_NextScreamTime;

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xE49148", Offset = "0xE49148", VA = "0xE49148")]
		public ChaseAction(AIController aiEntity)
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xE49158", Offset = "0xE49158", VA = "0xE49158", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xE49244", Offset = "0xE49244", VA = "0xE49244", Slot = "7")]
		public override bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xE4924C", Offset = "0xE4924C", VA = "0xE4924C", Slot = "9")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xE49250", Offset = "0xE49250", VA = "0xE49250", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xE49408", Offset = "0xE49408", VA = "0xE49408", Slot = "8")]
		public override bool StillValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xE49410", Offset = "0xE49410", VA = "0xE49410", Slot = "11")]
		public override bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xE49418", Offset = "0xE49418", VA = "0xE49418", Slot = "12")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xE49258", Offset = "0xE49258", VA = "0xE49258")]
		private void RotateTowards(Transform transform, Transform target, float rotationSpeed)
		{
		}
	}
	[Token(Token = "0x2000678")]
	public class EatAction : Action
	{
		[Token(Token = "0x40034D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_EatDuration;

		[Token(Token = "0x40034D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_IsDoneEating;

		[Token(Token = "0x40034D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_EatEndTime;

		[Token(Token = "0x40034D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_TransitionStartTime;

		[Token(Token = "0x40034DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_TransitionStarted;

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xE49420", Offset = "0xE49420", VA = "0xE49420")]
		public EatAction(AIController aiEntity, Vector2 eatDuration)
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xE49458", Offset = "0xE49458", VA = "0xE49458", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xE49538", Offset = "0xE49538", VA = "0xE49538", Slot = "9")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xE495D4", Offset = "0xE495D4", VA = "0xE495D4", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xE49690", Offset = "0xE49690", VA = "0xE49690", Slot = "10")]
		public override void OnDeactivation()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xE49694", Offset = "0xE49694", VA = "0xE49694", Slot = "6")]
		public override void OnCompletion()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xE4974C", Offset = "0xE4974C", VA = "0xE4974C", Slot = "11")]
		public override bool IsDone()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000679")]
	public class FindFoodAction : WanderBase
	{
		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xE49754", Offset = "0xE49754", VA = "0xE49754")]
		public FindFoodAction(AIController aiEntity, Vector3[] waypoints)
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xE4975C", Offset = "0xE4975C", VA = "0xE4975C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xE49848", Offset = "0xE49848", VA = "0xE49848", Slot = "7")]
		public override bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xE49920", Offset = "0xE49920", VA = "0xE49920", Slot = "5")]
		public override void OnUpdate()
		{
		}
	}
	[Token(Token = "0x200067A")]
	public class FleeAction : Action
	{
		[Token(Token = "0x40034DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_NextFleePosChange;

		[Token(Token = "0x40034DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_MinFleeDistance;

		[Token(Token = "0x40034DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_CurrentFleePos;

		[Token(Token = "0x40034DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_TargetFleePos;

		[Token(Token = "0x40034E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_LastTimeScreamed;

		[Token(Token = "0x40034E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_IsTired;

		[Token(Token = "0x40034E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_NextTirednessToggleTime;

		[Token(Token = "0x17000487")]
		public float TimeSinceTargetOutOfRange
		{
			[Token(Token = "0x60026E1")]
			[Address(RVA = "0xE49928", Offset = "0xE49928", VA = "0xE49928")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xE49930", Offset = "0xE49930", VA = "0xE49930")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xE49938", Offset = "0xE49938", VA = "0xE49938")]
		public FleeAction(AIController aiEntity, float minFleeDistance)
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xE49964", Offset = "0xE49964", VA = "0xE49964", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xE49A78", Offset = "0xE49A78", VA = "0xE49A78", Slot = "7")]
		public override bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xE49B9C", Offset = "0xE49B9C", VA = "0xE49B9C", Slot = "9")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xE49BC8", Offset = "0xE49BC8", VA = "0xE49BC8", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xE4A2F0", Offset = "0xE4A2F0", VA = "0xE4A2F0", Slot = "10")]
		public override void OnDeactivation()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0xE4A2F4", Offset = "0xE4A2F4", VA = "0xE4A2F4", Slot = "8")]
		public override bool StillValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0xE4A308", Offset = "0xE4A308", VA = "0xE4A308", Slot = "11")]
		public override bool IsDone()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200067B")]
	public class FleeNoTargetAction : Action
	{
		[Token(Token = "0x40034E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_NextFleePosChange;

		[Token(Token = "0x40034E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_MinFleeDistance;

		[Token(Token = "0x40034E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_CurrentFleePos;

		[Token(Token = "0x40034E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_FleePosition;

		[Token(Token = "0x40034E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_LastTimeScreamed;

		[Token(Token = "0x40034E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_IsTired;

		[Token(Token = "0x40034EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_NextTirednessToggleTime;

		[Token(Token = "0x17000488")]
		public float TimePassed
		{
			[Token(Token = "0x60026EB")]
			[Address(RVA = "0xE4A31C", Offset = "0xE4A31C", VA = "0xE4A31C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xE4A324", Offset = "0xE4A324", VA = "0xE4A324")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xE4A32C", Offset = "0xE4A32C", VA = "0xE4A32C")]
		public FleeNoTargetAction(AIController aiController, float minFleeDistance)
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0xE4A358", Offset = "0xE4A358", VA = "0xE4A358", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xE4A424", Offset = "0xE4A424", VA = "0xE4A424", Slot = "7")]
		public override bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xE4A4DC", Offset = "0xE4A4DC", VA = "0xE4A4DC", Slot = "9")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xE4A508", Offset = "0xE4A508", VA = "0xE4A508", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xE4AA64", Offset = "0xE4AA64", VA = "0xE4AA64", Slot = "10")]
		public override void OnDeactivation()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xE4AA68", Offset = "0xE4AA68", VA = "0xE4AA68", Slot = "8")]
		public override bool StillValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xE4AA7C", Offset = "0xE4AA7C", VA = "0xE4AA7C", Slot = "11")]
		public override bool IsDone()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200067C")]
	public class RestAction : Action
	{
		[Token(Token = "0x40034EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 m_RestDuration;

		[Token(Token = "0x40034EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_RestEndTime;

		[Token(Token = "0x40034ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_TransitionStartTime;

		[Token(Token = "0x40034EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_TransitionStarted;

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xE4AA90", Offset = "0xE4AA90", VA = "0xE4AA90")]
		public RestAction(AIController entity, Vector2 restDuration)
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xE4AABC", Offset = "0xE4AABC", VA = "0xE4AABC", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xE4ABE8", Offset = "0xE4ABE8", VA = "0xE4ABE8", Slot = "9")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xE4ACE8", Offset = "0xE4ACE8", VA = "0xE4ACE8", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xE4AD90", Offset = "0xE4AD90", VA = "0xE4AD90", Slot = "7")]
		public override bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xE4AE48", Offset = "0xE4AE48", VA = "0xE4AE48", Slot = "11")]
		public override bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xE4AE6C", Offset = "0xE4AE6C", VA = "0xE4AE6C", Slot = "6")]
		public override void OnCompletion()
		{
		}
	}
	[Token(Token = "0x200067D")]
	public class WanderBase : Action
	{
		[Token(Token = "0x200067E")]
		public class SortableWaypoint : IComparable<SortableWaypoint>
		{
			[Token(Token = "0x1700048A")]
			public float Comparer
			{
				[Token(Token = "0x6002704")]
				[Address(RVA = "0xE4B5BC", Offset = "0xE4B5BC", VA = "0xE4B5BC")]
				[CompilerGenerated]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002705")]
				[Address(RVA = "0xE4B5C4", Offset = "0xE4B5C4", VA = "0xE4B5C4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700048B")]
			public Vector3 Point
			{
				[Token(Token = "0x6002706")]
				[Address(RVA = "0xE4B5CC", Offset = "0xE4B5CC", VA = "0xE4B5CC")]
				[CompilerGenerated]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002707")]
				[Address(RVA = "0xE4B5D8", Offset = "0xE4B5D8", VA = "0xE4B5D8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6002708")]
			[Address(RVA = "0xE4B0C0", Offset = "0xE4B0C0", VA = "0xE4B0C0")]
			public SortableWaypoint(Vector3 point)
			{
			}

			[Token(Token = "0x6002709")]
			[Address(RVA = "0xE4B5E4", Offset = "0xE4B5E4", VA = "0xE4B5E4", Slot = "4")]
			public int CompareTo(SortableWaypoint waypoint)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40034EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SelectionType m_PointSequence;

		[Token(Token = "0x40034F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected int m_CurrentIndex;

		[Token(Token = "0x40034F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SortableWaypoint[] m_SortableWaypoints;

		[Token(Token = "0x17000489")]
		public SortableWaypoint[] Waypoints
		{
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0xE4AF78", Offset = "0xE4AF78", VA = "0xE4AF78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xE4AF80", Offset = "0xE4AF80", VA = "0xE4AF80")]
		public WanderBase(AIController aiEntity, Vector3[] waypoints)
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xE4B0FC", Offset = "0xE4B0FC", VA = "0xE4B0FC", Slot = "7")]
		public override bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xE4B120", Offset = "0xE4B120", VA = "0xE4B120", Slot = "9")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xE4B490", Offset = "0xE4B490", VA = "0xE4B490", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xE4B530", Offset = "0xE4B530", VA = "0xE4B530", Slot = "10")]
		public override void OnDeactivation()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xE4B534", Offset = "0xE4B534", VA = "0xE4B534", Slot = "11")]
		public override bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xE4B270", Offset = "0xE4B270", VA = "0xE4B270")]
		public void ChangeWaypoint()
		{
		}
	}
	[Token(Token = "0x200067F")]
	public class AIController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40034F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("Settings")]
		private BehaviourSettings m_Behaviour;

		[Token(Token = "0x40034F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MovementHandler m_Movement;

		[Token(Token = "0x40034F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DetectionHandler m_Detection;

		[Token(Token = "0x40034F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private WanderSettings m_Wandering;

		[Token(Token = "0x40034F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Hunger & Eating")]
		[SerializeField]
		private float m_HungerDepletionRate;

		[Token(Token = "0x40034FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector2 m_ReplenishHungerThreeshold;

		[Token(Token = "0x40034FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector2 m_EatDuration;

		[Token(Token = "0x40034FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[Header("Rest")]
		private Vector2 m_RestDuration;

		[Token(Token = "0x40034FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector2 m_TirednessInterval;

		[Token(Token = "0x40034FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Header("Goal Oriented Action Planning")]
		[SerializeField]
		private float m_MinPlanInterval;

		[Token(Token = "0x40034FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_MinGoalPriorityCheckInterval;

		[Token(Token = "0x4003500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Action> m_AvailableActions;

		[Token(Token = "0x4003501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Goal> m_AvailableGoals;

		[Token(Token = "0x4003502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Action m_Fallback;

		[Token(Token = "0x4003503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Queue<Action> m_ActionQueue;

		[Token(Token = "0x4003504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Planner m_Planner;

		[Token(Token = "0x4003505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Goal m_CurrentGoal;

		[Token(Token = "0x4003506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private StateData m_WorldState;

		[Token(Token = "0x4003507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_LastPlanTime;

		[Token(Token = "0x4003508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_LastGoalPriorityCheckTime;

		[Token(Token = "0x4003509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_TriggeredHunger;

		[Token(Token = "0x400350A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_Hunger;

		[Token(Token = "0x400350B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_HungerReplenishValue;

		[Token(Token = "0x400350C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool m_TriggeredRest;

		[Token(Token = "0x400350D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_NextRestTime;

		[Token(Token = "0x1700048C")]
		public StateData WorldState
		{
			[Token(Token = "0x600270A")]
			[Address(RVA = "0xE4B60C", Offset = "0xE4B60C", VA = "0xE4B60C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		public Action CurrentAction
		{
			[Token(Token = "0x600270B")]
			[Address(RVA = "0xE4B614", Offset = "0xE4B614", VA = "0xE4B614")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		public Goal CurrentGoal
		{
			[Token(Token = "0x600270C")]
			[Address(RVA = "0xE4B688", Offset = "0xE4B688", VA = "0xE4B688")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		public DetectionHandler Detection
		{
			[Token(Token = "0x600270D")]
			[Address(RVA = "0xE4B690", Offset = "0xE4B690", VA = "0xE4B690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		public MovementHandler Movement
		{
			[Token(Token = "0x600270E")]
			[Address(RVA = "0xE4B698", Offset = "0xE4B698", VA = "0xE4B698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000491")]
		public Vector3 LastHitDirection
		{
			[Token(Token = "0x600270F")]
			[Address(RVA = "0xE4B6A0", Offset = "0xE4B6A0", VA = "0xE4B6A0")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002710")]
			[Address(RVA = "0xE4B6AC", Offset = "0xE4B6AC", VA = "0xE4B6AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0xE4B6B8", Offset = "0xE4B6B8", VA = "0xE4B6B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0xE4BDE8", Offset = "0xE4BDE8", VA = "0xE4BDE8")]
		private Vector3[] GetPointsAroundEntity(float radius, int count)
		{
			return null;
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0xE4C370", Offset = "0xE4C370", VA = "0xE4C370")]
		private void Update()
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0xE4CF10", Offset = "0xE4CF10", VA = "0xE4CF10")]
		private void OnStop_Eat()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0xE4CFE0", Offset = "0xE4CFE0", VA = "0xE4CFE0")]
		private void OnStop_Rest()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xE4C614", Offset = "0xE4C614", VA = "0xE4C614")]
		private void UpdatePlanning()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xE4D0C4", Offset = "0xE4D0C4", VA = "0xE4D0C4")]
		private bool IsReplanNeededBecauseOfGoals()
		{
			return default(bool);
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xE4D334", Offset = "0xE4D334", VA = "0xE4D334")]
		private void Replan()
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xE4D780", Offset = "0xE4D780", VA = "0xE4D780")]
		private void FallBack()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xE4BF34", Offset = "0xE4BF34", VA = "0xE4BF34")]
		private void CreateNewWorldState()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xE4C150", Offset = "0xE4C150", VA = "0xE4C150")]
		private void InitializeData()
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xE4D8EC", Offset = "0xE4D8EC", VA = "0xE4D8EC")]
		public AIController()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public class AvoidDangerGoal : Goal
	{
		[Token(Token = "0x6002720")]
		[Address(RVA = "0xE4BF24", Offset = "0xE4BF24", VA = "0xE4BF24")]
		public AvoidDangerGoal(AIController aiController, Vector2 priorityRange)
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xE4DA24", Offset = "0xE4DA24", VA = "0xE4DA24", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xE4DAAC", Offset = "0xE4DAAC", VA = "0xE4DAAC", Slot = "5")]
		public override void RecalculatePriority()
		{
		}
	}
	[Token(Token = "0x2000682")]
	public class AvoidPlayerGoal : Goal
	{
		[Token(Token = "0x6002723")]
		[Address(RVA = "0xE4BF28", Offset = "0xE4BF28", VA = "0xE4BF28")]
		public AvoidPlayerGoal(AIController aiEntity, Vector2 priorityRange)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xE4DB7C", Offset = "0xE4DB7C", VA = "0xE4DB7C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xE4DC04", Offset = "0xE4DC04", VA = "0xE4DC04", Slot = "5")]
		public override void RecalculatePriority()
		{
		}
	}
	[Token(Token = "0x2000683")]
	public abstract class Goal
	{
		[Token(Token = "0x4003510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected float m_Priority;

		[Token(Token = "0x4003511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected Vector2 m_PriorityRange;

		[Token(Token = "0x4003512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AIController m_AIEntity;

		[Token(Token = "0x4003513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected StateData m_GoalState;

		[Token(Token = "0x17000492")]
		public float Priority
		{
			[Token(Token = "0x6002726")]
			[Address(RVA = "0xE4DC94", Offset = "0xE4DC94", VA = "0xE4DC94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000493")]
		public StateData GoalState
		{
			[Token(Token = "0x6002727")]
			[Address(RVA = "0xE4DC9C", Offset = "0xE4DC9C", VA = "0xE4DC9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xE4D998", Offset = "0xE4D998", VA = "0xE4D998")]
		public Goal(AIController aiEntity, Vector2 priorityRange)
		{
		}

		[Token(Token = "0x6002729")]
		public abstract void OnStart();

		[Token(Token = "0x600272A")]
		public abstract void RecalculatePriority();
	}
	[Token(Token = "0x2000684")]
	public class KillPlayerGoal : Goal
	{
		[Token(Token = "0x600272B")]
		[Address(RVA = "0xE4DCA4", Offset = "0xE4DCA4", VA = "0xE4DCA4")]
		public KillPlayerGoal(AIController aiEntity, Vector2 priorityRange)
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xE4DCA8", Offset = "0xE4DCA8", VA = "0xE4DCA8", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xE4DD3C", Offset = "0xE4DD3C", VA = "0xE4DD3C", Slot = "5")]
		public override void RecalculatePriority()
		{
		}
	}
	[Token(Token = "0x2000685")]
	public class SatisfyHungerGoal : Goal
	{
		[Token(Token = "0x600272E")]
		[Address(RVA = "0xE4BF20", Offset = "0xE4BF20", VA = "0xE4BF20")]
		public SatisfyHungerGoal(AIController aiEntity, Vector2 priorityRange)
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0xE4DD7C", Offset = "0xE4DD7C", VA = "0xE4DD7C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xE4DE04", Offset = "0xE4DE04", VA = "0xE4DE04", Slot = "5")]
		public override void RecalculatePriority()
		{
		}
	}
	[Token(Token = "0x2000686")]
	public class TakeRestGoal : Goal
	{
		[Token(Token = "0x6002731")]
		[Address(RVA = "0xE4DED4", Offset = "0xE4DED4", VA = "0xE4DED4")]
		public TakeRestGoal(AIController aiEntity, Vector2 priorityRange)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xE4DED8", Offset = "0xE4DED8", VA = "0xE4DED8", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xE4DF60", Offset = "0xE4DF60", VA = "0xE4DF60", Slot = "5")]
		public override void RecalculatePriority()
		{
		}
	}
	[Token(Token = "0x2000687")]
	public class Planner
	{
		[Token(Token = "0x6002734")]
		[Address(RVA = "0xE4D414", Offset = "0xE4D414", VA = "0xE4D414")]
		public bool Plan(List<Goal> availableGoals, List<Action> availableActions, AIController brain, out Queue<Action> plan, out Goal selected)
		{
			return default(bool);
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xE4E030", Offset = "0xE4E030", VA = "0xE4E030")]
		private void FindActionThatMatchesState(StateData goalState, List<Action> actions, List<Action> related)
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xE4BF2C", Offset = "0xE4BF2C", VA = "0xE4BF2C")]
		public Planner()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public class StateData
	{
		[Token(Token = "0x17000494")]
		public Dictionary<string, object> m_Dictionary
		{
			[Token(Token = "0x600273A")]
			[Address(RVA = "0xE4E53C", Offset = "0xE4E53C", VA = "0xE4E53C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600273B")]
			[Address(RVA = "0xE4E544", Offset = "0xE4E544", VA = "0xE4E544")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xE4D86C", Offset = "0xE4D86C", VA = "0xE4D86C")]
		public StateData()
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xE4E54C", Offset = "0xE4E54C", VA = "0xE4E54C")]
		public StateData(Dictionary<string, object> conditions)
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xE4AB80", Offset = "0xE4AB80", VA = "0xE4AB80")]
		public void Add(string key, object value)
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xE4E574", Offset = "0xE4E574", VA = "0xE4E574")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xE4E5C4", Offset = "0xE4E5C4", VA = "0xE4E5C4")]
		public static void OverrideValue(KeyValuePair<string, object> value, StateData data)
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xE4AEFC", Offset = "0xE4AEFC", VA = "0xE4AEFC")]
		public static void OverrideValue(string key, object value, StateData data)
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xE4E648", Offset = "0xE4E648", VA = "0xE4E648")]
		public static void OverrideValues(StateData overrider, StateData data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068A")]
	public class AnimationSettings
	{
		[Token(Token = "0x6002743")]
		[Address(RVA = "0xE4E7E4", Offset = "0xE4E7E4", VA = "0xE4E7E4")]
		public AnimationSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068B")]
	public class CombatSettings
	{
		[Token(Token = "0x4003517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private WaypointType m_WanderType;

		[Token(Token = "0x4003518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_DynamicWanderRadius;

		[Token(Token = "0x4003519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MinWaitTime;

		[Token(Token = "0x400351A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_MaxWaitTime;

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xE4E7EC", Offset = "0xE4E7EC", VA = "0xE4E7EC")]
		public CombatSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068C")]
	public class DetectionHandler
	{
		[Token(Token = "0x400351B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_Head;

		[Token(Token = "0x400351C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_SearchInterval;

		[Token(Token = "0x400351D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 180f)]
		[SerializeField]
		[Space]
		private int m_FieldOfView;

		[Token(Token = "0x400351E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Range(0f, 50f)]
		private int m_DetectionDistance;

		[Token(Token = "0x400351F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Range(1f, 20f)]
		private int m_SneakThreshold;

		[Token(Token = "0x4003520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		[SerializeField]
		[Range(0.1f, 3f)]
		private float m_MinDetectionTime;

		[Token(Token = "0x4003521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Range(0.1f, 3f)]
		private float m_MaxDetectionTime;

		[Token(Token = "0x4003522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Space]
		private LayerMask m_DetectionMask;

		[Token(Token = "0x4003523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask m_ObstructionMask;

		[Token(Token = "0x4003524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> m_VisibleTargets;

		[Token(Token = "0x4003525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> m_StillInRangeTargets;

		[Token(Token = "0x4003526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AIController m_AiController;

		[Token(Token = "0x4003527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_Transform;

		[Token(Token = "0x4003528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_LastTargetFindTime;

		[Token(Token = "0x17000495")]
		public List<GameObject> StillInRangeTargets
		{
			[Token(Token = "0x6002745")]
			[Address(RVA = "0xE4E800", Offset = "0xE4E800", VA = "0xE4E800")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xE4BD24", Offset = "0xE4BD24", VA = "0xE4BD24")]
		public void Initialize(AIController aiController)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xE4C500", Offset = "0xE4C500", VA = "0xE4C500")]
		public void Update()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xE4DC44", Offset = "0xE4DC44", VA = "0xE4DC44")]
		public bool HasTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xE4EF48", Offset = "0xE4EF48", VA = "0xE4EF48")]
		public bool HasVisibleTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xE4EF98", Offset = "0xE4EF98", VA = "0xE4EF98")]
		public Transform GetRandomTarget()
		{
			return null;
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xE4EC90", Offset = "0xE4EC90", VA = "0xE4EC90")]
		private void GetTargetsStillInRange()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xE4E808", Offset = "0xE4E808", VA = "0xE4E808")]
		private List<GameObject> GetVisibleTargets()
		{
			return null;
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xE4F030", Offset = "0xE4F030", VA = "0xE4F030")]
		private Collider[] GetCollidersInRange()
		{
			return null;
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xE4F094", Offset = "0xE4F094", VA = "0xE4F094")]
		public DetectionHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068D")]
	public class FleeSettings
	{
		[Token(Token = "0x4003529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private WaypointType m_WanderPath;

		[Token(Token = "0x400352A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_DynamicWanderRadius;

		[Token(Token = "0x400352B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space]
		[SerializeField]
		private float m_MinWaitTime;

		[Token(Token = "0x400352C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_MaxWaitTime;

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xE4F148", Offset = "0xE4F148", VA = "0xE4F148")]
		public FleeSettings()
		{
		}
	}
	[Token(Token = "0x200068E")]
	public enum BehaviourType
	{
		[Token(Token = "0x400352E")]
		Passive,
		[Token(Token = "0x400352F")]
		Aggressive
	}
	[Token(Token = "0x200068F")]
	public enum ConfidenceType
	{
		[Token(Token = "0x4003531")]
		Brave,
		[Token(Token = "0x4003532")]
		Coward
	}
	[Serializable]
	[Token(Token = "0x2000690")]
	public class BehaviourSettings
	{
		[Token(Token = "0x4003533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private BehaviourType m_BehaviourType;

		[Token(Token = "0x4003534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private ConfidenceType m_ConfidenceType;

		[Token(Token = "0x4003535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Range(1f, 99f)]
		private float m_HealthLevelToFlee;

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xE4F15C", Offset = "0xE4F15C", VA = "0xE4F15C")]
		public BehaviourSettings()
		{
		}
	}
	[Token(Token = "0x2000691")]
	public enum MovementState
	{
		[Token(Token = "0x4003537")]
		Idle,
		[Token(Token = "0x4003538")]
		Walking,
		[Token(Token = "0x4003539")]
		Running
	}
	[Serializable]
	[Token(Token = "0x2000692")]
	public class MovementHandler
	{
		[Token(Token = "0x400353C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_RandomStartRotation;

		[Token(Token = "0x400353D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		public bool m_AlignWithGround;

		[Token(Token = "0x400353E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Space]
		private float[] m_MoveSpeeds;

		[Token(Token = "0x400353F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float m_TurnSpeed;

		[Token(Token = "0x4003540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space]
		[SerializeField]
		[Range(1f, 5f)]
		private float m_StoppingDistance;

		[Token(Token = "0x4003541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_RotationHelper;

		[Token(Token = "0x4003542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AIController m_AIController;

		[Token(Token = "0x4003543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NavMeshAgent m_Agent;

		[Token(Token = "0x4003544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator m_Animator;

		[Token(Token = "0x4003545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MovementState m_MovementState;

		[Token(Token = "0x4003546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_CurrentDestination;

		[Token(Token = "0x4003547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_TargetMoveSpeed;

		[Token(Token = "0x4003548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CurMoveSpeed;

		[Token(Token = "0x4003549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 m_CurMovement;

		[Token(Token = "0x17000496")]
		public bool RandomStartRotation
		{
			[Token(Token = "0x6002751")]
			[Address(RVA = "0xE4F16C", Offset = "0xE4F16C", VA = "0xE4F16C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000497")]
		public Vector3 CurrentDestination
		{
			[Token(Token = "0x6002752")]
			[Address(RVA = "0xE4F174", Offset = "0xE4F174", VA = "0xE4F174")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000498")]
		public float MoveFactor
		{
			[Token(Token = "0x6002753")]
			[Address(RVA = "0xE4F180", Offset = "0xE4F180", VA = "0xE4F180")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002754")]
			[Address(RVA = "0xE4F188", Offset = "0xE4F188", VA = "0xE4F188")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000499")]
		public float TurnFactor
		{
			[Token(Token = "0x6002755")]
			[Address(RVA = "0xE4F190", Offset = "0xE4F190", VA = "0xE4F190")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002756")]
			[Address(RVA = "0xE4F198", Offset = "0xE4F198", VA = "0xE4F198")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xE4F1A0", Offset = "0xE4F1A0", VA = "0xE4F1A0")]
		public float GetSpeedFactor(float speed)
		{
			return default(float);
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xE4BD50", Offset = "0xE4BD50", VA = "0xE4BD50")]
		public void Initialize(AIController aiEntity)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0xE4C888", Offset = "0xE4C888", VA = "0xE4C888")]
		public void Update(Transform transform)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0xE4B180", Offset = "0xE4B180", VA = "0xE4B180")]
		public NavMeshPath MoveTo(Vector3 position, int speedType)
		{
			return null;
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xE4F1FC", Offset = "0xE4F1FC", VA = "0xE4F1FC")]
		private void ChangeMovementState(int speedType)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xE4F244", Offset = "0xE4F244", VA = "0xE4F244")]
		private void ChangeMovementState(float speed, string animName, bool animValue, MovementState newState)
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xE4B558", Offset = "0xE4B558", VA = "0xE4B558")]
		public bool ReachedDestination(bool isStop = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xE4F1C4", Offset = "0xE4F1C4", VA = "0xE4F1C4")]
		private float GetSpeed(int index)
		{
			return default(float);
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0xE4F278", Offset = "0xE4F278", VA = "0xE4F278")]
		public MovementHandler()
		{
		}
	}
	[Token(Token = "0x2000693")]
	public enum WaypointType
	{
		[Token(Token = "0x400354B")]
		Dynamic,
		[Token(Token = "0x400354C")]
		Predefined
	}
	[Serializable]
	[Token(Token = "0x2000694")]
	public class WanderSettings
	{
		[Token(Token = "0x400354D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private WaypointType m_WaypointsType;

		[Token(Token = "0x400354E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[ShowIf("m_WaypointsType", 0)]
		private int m_WanderRadius;

		[Token(Token = "0x400354F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ShowIf("m_WaypointsType", 0)]
		[Range(3f, 20f)]
		private int m_WaypointCount;

		[Token(Token = "0x4003550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tag]
		private string m_WaypointTag;

		[Token(Token = "0x4003551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		[SerializeField]
		private float m_MinWaitTime;

		[Token(Token = "0x4003552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MaxWaitTime;

		[Token(Token = "0x1700049A")]
		public WaypointType WaypointType
		{
			[Token(Token = "0x6002760")]
			[Address(RVA = "0xE4F28C", Offset = "0xE4F28C", VA = "0xE4F28C")]
			get
			{
				return default(WaypointType);
			}
		}

		[Token(Token = "0x1700049B")]
		public int WanderRadius
		{
			[Token(Token = "0x6002761")]
			[Address(RVA = "0xE4F294", Offset = "0xE4F294", VA = "0xE4F294")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700049C")]
		public int WaypointCount
		{
			[Token(Token = "0x6002762")]
			[Address(RVA = "0xE4F29C", Offset = "0xE4F29C", VA = "0xE4F29C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700049D")]
		public string WaypointTag
		{
			[Token(Token = "0x6002763")]
			[Address(RVA = "0xE4F2A4", Offset = "0xE4F2A4", VA = "0xE4F2A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		public Vector2 WaitTime
		{
			[Token(Token = "0x6002764")]
			[Address(RVA = "0xE4F2AC", Offset = "0xE4F2AC", VA = "0xE4F2AC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0xE4F2B4", Offset = "0xE4F2B4", VA = "0xE4F2B4")]
		public WanderSettings()
		{
		}
	}
	[Token(Token = "0x2000695")]
	public class FSM<T>
	{
		[Token(Token = "0x2000696")]
		public abstract class FSM_State
		{
			[Token(Token = "0x4003555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected FSM<T> m_fsm;

			[Token(Token = "0x4003556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected T m_parent;

			[Token(Token = "0x600276A")]
			public FSM_State(FSM<T> fsm)
			{
			}

			[Token(Token = "0x600276B")]
			public void FSMSetup(FSM<T> fsm, T parent)
			{
			}

			[Token(Token = "0x600276C")]
			protected void PopSelf()
			{
			}

			[Token(Token = "0x600276D")]
			protected void PushState(FSM_State state)
			{
			}

			[Token(Token = "0x600276E")]
			public virtual void OnEnter()
			{
			}

			[Token(Token = "0x600276F")]
			public virtual void Update()
			{
			}

			[Token(Token = "0x6002770")]
			public virtual void OnExit()
			{
			}
		}

		[Token(Token = "0x4003553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_parent;

		[Token(Token = "0x4003554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Stack<FSM_State> m_states;

		[Token(Token = "0x6002766")]
		public FSM(T parent)
		{
		}

		[Token(Token = "0x6002767")]
		public virtual void UpdateFSM()
		{
		}

		[Token(Token = "0x6002768")]
		public virtual void PushState(FSM_State _state)
		{
		}

		[Token(Token = "0x6002769")]
		public virtual void PopState()
		{
		}
	}
}
namespace Alvo.BodySystem
{
	[Token(Token = "0x2000697")]
	public class BodyRagdoll : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000698")]
		[CompilerGenerated]
		private sealed class <C_AddSmoothHeadForce>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int frames;

			[Token(Token = "0x4003567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BodyRagdoll <>4__this;

			[Token(Token = "0x4003568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 hitDirection;

			[Token(Token = "0x4003569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float force;

			[Token(Token = "0x400356A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Rigidbody <head>5__2;

			[Token(Token = "0x400356B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <forcePerFrame>5__3;

			[Token(Token = "0x400356C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <i>5__4;

			[Token(Token = "0x1700049F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002787")]
				[Address(RVA = "0xE5078C", Offset = "0xE5078C", VA = "0xE5078C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002789")]
				[Address(RVA = "0xE507D4", Offset = "0xE507D4", VA = "0xE507D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002784")]
			[Address(RVA = "0xE4FE14", Offset = "0xE4FE14", VA = "0xE4FE14")]
			[DebuggerHidden]
			public <C_AddSmoothHeadForce>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002785")]
			[Address(RVA = "0xE50658", Offset = "0xE50658", VA = "0xE50658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002786")]
			[Address(RVA = "0xE5065C", Offset = "0xE5065C", VA = "0xE5065C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002788")]
			[Address(RVA = "0xE50794", Offset = "0xE50794", VA = "0xE50794", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000699")]
		[CompilerGenerated]
		private sealed class <C_AddExplosionForce>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400356D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400356E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400356F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BodyRagdoll <>4__this;

			[Token(Token = "0x4003570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float force;

			[Token(Token = "0x4003571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 explosionPos;

			[Token(Token = "0x170004A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600278D")]
				[Address(RVA = "0xE50944", Offset = "0xE50944", VA = "0xE50944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600278F")]
				[Address(RVA = "0xE5098C", Offset = "0xE5098C", VA = "0xE5098C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0xE4FE3C", Offset = "0xE4FE3C", VA = "0xE4FE3C")]
			[DebuggerHidden]
			public <C_AddExplosionForce>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0xE507DC", Offset = "0xE507DC", VA = "0xE507DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0xE507E0", Offset = "0xE507E0", VA = "0xE507E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600278E")]
			[Address(RVA = "0xE5094C", Offset = "0xE5094C", VA = "0xE5094C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069A")]
		[CompilerGenerated]
		private sealed class <C_DeactivateRagdoll>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4003575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BodyRagdoll <>4__this;

			[Token(Token = "0x170004A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002793")]
				[Address(RVA = "0xE50A64", Offset = "0xE50A64", VA = "0xE50A64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002795")]
				[Address(RVA = "0xE50AAC", Offset = "0xE50AAC", VA = "0xE50AAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0xE505AC", Offset = "0xE505AC", VA = "0xE505AC")]
			[DebuggerHidden]
			public <C_DeactivateRagdoll>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002791")]
			[Address(RVA = "0xE50994", Offset = "0xE50994", VA = "0xE50994", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0xE50998", Offset = "0xE50998", VA = "0xE50998", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002794")]
			[Address(RVA = "0xE50A6C", Offset = "0xE50A6C", VA = "0xE50A6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventHatManagement.EventHatTransform[] m_EventHatTransforms;

		[Token(Token = "0x4003558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventHatManagement.EventHat m_WornHat;

		[Token(Token = "0x4003559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_DisableOnAwake;

		[Token(Token = "0x400355A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_DeathForce;

		[Token(Token = "0x400355B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator m_Animator;

		[Token(Token = "0x400355C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody[] m_BoneRigidbodies;

		[Token(Token = "0x400355D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Collider> m_BoneColliders;

		[Token(Token = "0x400355E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SECTR_PointSource m_DeathAudioSrc;

		[Token(Token = "0x400355F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody m_Pelvis;

		[Token(Token = "0x4003560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_BonePhysicsEnabled;

		[Token(Token = "0x4003561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SECTR_AudioCue deathCue;

		[Token(Token = "0x4003562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rb;

		[Token(Token = "0x4003563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine DeactivationCoroutine;

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xE4F318", Offset = "0xE4F318", VA = "0xE4F318")]
		public void EnableRagdoll(Animator sourceCharacter, PlayerData entity)
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xE4F7B8", Offset = "0xE4F7B8", VA = "0xE4F7B8")]
		public void PlayDeathAudio([Optional] Animator sourceCharacter)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xE4F9E4", Offset = "0xE4F9E4", VA = "0xE4F9E4")]
		public void AddBodyForce(Vector3 force)
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xE4FB60", Offset = "0xE4FB60", VA = "0xE4FB60")]
		public void AddHeadshotForce(float force, Vector3 hitDirection)
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xE4FCC4", Offset = "0xE4FCC4", VA = "0xE4FCC4")]
		public void AddExplosionForce(float force, Vector3 explosionPos)
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xE4FC24", Offset = "0xE4FC24", VA = "0xE4FC24")]
		[IteratorStateMachine(typeof(<C_AddSmoothHeadForce>d__17))]
		private IEnumerator C_AddSmoothHeadForce(float force, Vector3 hitDirection, int frames = 3)
		{
			return null;
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0xE4FD84", Offset = "0xE4FD84", VA = "0xE4FD84")]
		[IteratorStateMachine(typeof(<C_AddExplosionForce>d__18))]
		private IEnumerator C_AddExplosionForce(float force, Vector3 explosionPos)
		{
			return null;
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xE4F47C", Offset = "0xE4F47C", VA = "0xE4F47C")]
		private void CopyBoneStates(Animator fromAnimator, Animator toAnimator)
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xE4FE64", Offset = "0xE4FE64", VA = "0xE4FE64")]
		private void CopyBoneState(Animator fromAnimator, Animator toAnimator, HumanBodyBones bone, bool onlyRotation = true)
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xE4FF98", Offset = "0xE4FF98", VA = "0xE4FF98")]
		public void SetBonesLayer(int layer)
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xE4F5F4", Offset = "0xE4F5F4", VA = "0xE4F5F4")]
		public void EnableBonePhysics(bool enablePhysics)
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xE4F660", Offset = "0xE4F660", VA = "0xE4F660")]
		public void EnableBoneColliders(bool enableColliders)
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0xE5000C", Offset = "0xE5000C", VA = "0xE5000C")]
		public void EnableCollisionWithRagdoll(Collider collider, bool enable)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0xE500B4", Offset = "0xE500B4", VA = "0xE500B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0xE50434", Offset = "0xE50434", VA = "0xE50434")]
		private void Update()
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xE504DC", Offset = "0xE504DC", VA = "0xE504DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0xE504E4", Offset = "0xE504E4", VA = "0xE504E4")]
		public void QueueRagdollDeactivation(float delay)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0xE50534", Offset = "0xE50534", VA = "0xE50534")]
		[IteratorStateMachine(typeof(<C_DeactivateRagdoll>d__30))]
		private IEnumerator C_DeactivateRagdoll(float delay)
		{
			return null;
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0xE505D4", Offset = "0xE505D4", VA = "0xE505D4")]
		public BodyRagdoll()
		{
		}
	}
}
namespace Alvo.Helpers
{
	[Token(Token = "0x200069B")]
	public class AssignCurvedUICamera : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas[] m_Canvases;

		[Token(Token = "0x4003577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_Camera;

		[Token(Token = "0x6002796")]
		[Address(RVA = "0xE50AB4", Offset = "0xE50AB4", VA = "0xE50AB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0xE50B1C", Offset = "0xE50B1C", VA = "0xE50B1C")]
		public AssignCurvedUICamera()
		{
		}
	}
}
namespace Alvo.Utils
{
	[Token(Token = "0x200069C")]
	public static class ColorsConst
	{
		[Token(Token = "0x4003578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color normalBgColor;

		[Token(Token = "0x4003579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color localPlayerlBgColor;
	}
	[Token(Token = "0x200069D")]
	[CreateAssetMenu(fileName = "AlvoColor", menuName = "Alvo/AlvoColor")]
	public class AlvoColor : ScriptableObject
	{
		[Token(Token = "0x170004A5")]
		public Color value
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0xE50B88", Offset = "0xE50B88", VA = "0xE50B88")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600279A")]
			[Address(RVA = "0xE50B94", Offset = "0xE50B94", VA = "0xE50B94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0xE50BA0", Offset = "0xE50BA0", VA = "0xE50BA0")]
		public static implicit operator Color(AlvoColor c)
		{
			return default(Color);
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0xE50BBC", Offset = "0xE50BBC", VA = "0xE50BBC")]
		public AlvoColor()
		{
		}
	}
	[Token(Token = "0x200069E")]
	public class AlvoColor_Image : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400357B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AlvoColor m_color;

		[Token(Token = "0x600279D")]
		[Address(RVA = "0xE50BD0", Offset = "0xE50BD0", VA = "0xE50BD0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0xE50BD4", Offset = "0xE50BD4", VA = "0xE50BD4")]
		private void ApplyColor()
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0xE50C88", Offset = "0xE50C88", VA = "0xE50C88")]
		public AlvoColor_Image()
		{
		}
	}
	[Token(Token = "0x200069F")]
	public class AlvoColor_Text : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400357C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AlvoColor m_color;

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0xE50C90", Offset = "0xE50C90", VA = "0xE50C90")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0xE50C94", Offset = "0xE50C94", VA = "0xE50C94")]
		private void ApplyColor()
		{
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0xE50D94", Offset = "0xE50D94", VA = "0xE50D94")]
		public AlvoColor_Text()
		{
		}
	}
	[Token(Token = "0x20006A0")]
	public class CameraLayerChangerOnEnable : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006A1")]
		public struct CameraLayer
		{
			[Token(Token = "0x400357E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Camera cam;

			[Token(Token = "0x400357F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LayerMask mask;
		}

		[Token(Token = "0x400357D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CameraLayer[] m_camerasToChange;

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0xE50D9C", Offset = "0xE50D9C", VA = "0xE50D9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0xE50E14", Offset = "0xE50E14", VA = "0xE50E14")]
		public CameraLayerChangerOnEnable()
		{
		}
	}
	[Token(Token = "0x20006A2")]
	public class CustomLogsReporter : UnityEngine.MonoBehaviour, ILogHandler
	{
		[Token(Token = "0x20006A3")]
		[CompilerGenerated]
		private sealed class <cSendLogs>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400358A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string _msg;

			[Token(Token = "0x400358B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170004A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027BC")]
				[Address(RVA = "0xE52474", Offset = "0xE52474", VA = "0xE52474", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027BE")]
				[Address(RVA = "0xE524BC", Offset = "0xE524BC", VA = "0xE524BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xE51CB8", Offset = "0xE51CB8", VA = "0xE51CB8")]
			[DebuggerHidden]
			public <cSendLogs>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xE5218C", Offset = "0xE5218C", VA = "0xE5218C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xE521A8", Offset = "0xE521A8", VA = "0xE521A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xE523C4", Offset = "0xE523C4", VA = "0xE523C4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xE5247C", Offset = "0xE5247C", VA = "0xE5247C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003580")]
		private const int kMaxLogs = 100;

		[Token(Token = "0x4003582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<string> m_debugLogs;

		[Token(Token = "0x4003583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, string> m_debugVariables;

		[Token(Token = "0x4003584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ILogHandler m_DefaultLogHandler;

		[Token(Token = "0x4003585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasBeenSended;

		[Token(Token = "0x4003586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VrInput input;

		[Token(Token = "0x4003587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float buttonsHoldingDuration;

		[Token(Token = "0x170004A6")]
		public static CustomLogsReporter Instance
		{
			[Token(Token = "0x60027A5")]
			[Address(RVA = "0xE50E1C", Offset = "0xE50E1C", VA = "0xE50E1C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60027A6")]
			[Address(RVA = "0xE50E64", Offset = "0xE50E64", VA = "0xE50E64")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0xE50EB0", Offset = "0xE50EB0", VA = "0xE50EB0")]
		public void Log(string _log, [Optional] UnityEngine.Object _obj)
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0xE51064", Offset = "0xE51064", VA = "0xE51064")]
		public void Error(string _log, [Optional] UnityEngine.Object _obj, bool _sentToUnity = true)
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0xE51260", Offset = "0xE51260", VA = "0xE51260")]
		public static void UpdateVariable(string _variableName, string _value)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0xE512F4", Offset = "0xE512F4", VA = "0xE512F4")]
		public static void UpdateVariable(string _variableName, int _value)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0xE5139C", Offset = "0xE5139C", VA = "0xE5139C")]
		public static void UpdateVariable(string _variableName, bool _value)
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0xE51448", Offset = "0xE51448", VA = "0xE51448")]
		public static void UpdateVariable(string _variableName, float _value)
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0xE514F0", Offset = "0xE514F0", VA = "0xE514F0")]
		public static void UpdateVariable(string _variableName, double _value)
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0xE51598", Offset = "0xE51598", VA = "0xE51598")]
		public static void RemoveVariable(string _variableName)
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0xE51688", Offset = "0xE51688", VA = "0xE51688", Slot = "4")]
		public void LogFormat(LogType logType, UnityEngine.Object context, string format, params object[] args)
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0xE51758", Offset = "0xE51758", VA = "0xE51758", Slot = "5")]
		public void LogException(Exception exception, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0xE518A4", Offset = "0xE518A4", VA = "0xE518A4")]
		[ContextMenu("Send Log")]
		public void SendLog()
		{
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0xE51C50", Offset = "0xE51C50", VA = "0xE51C50")]
		[IteratorStateMachine(typeof(<cSendLogs>d__21))]
		private IEnumerator cSendLogs(string _msg)
		{
			return null;
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0xE51CE0", Offset = "0xE51CE0", VA = "0xE51CE0")]
		private void Init()
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0xE51DD0", Offset = "0xE51DD0", VA = "0xE51DD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0xE51EAC", Offset = "0xE51EAC", VA = "0xE51EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0xE51F50", Offset = "0xE51F50", VA = "0xE51F50")]
		[RuntimeInitializeOnLoadMethod]
		public static void CreateLogReporter()
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0xE52078", Offset = "0xE52078", VA = "0xE52078")]
		public CustomLogsReporter()
		{
		}
	}
	[Token(Token = "0x20006A4")]
	public static class ShaderHash
	{
		[Token(Token = "0x400358C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MainTexture;

		[Token(Token = "0x400358D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int Color;

		[Token(Token = "0x400358E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int Arc1;
	}
	[Token(Token = "0x20006A5")]
	public static class UnityExtensions
	{
		[Token(Token = "0x60027C0")]
		[Address(RVA = "0xE5258C", Offset = "0xE5258C", VA = "0xE5258C")]
		public static void SetLocalX(this Transform t, float _x)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0xE525C4", Offset = "0xE525C4", VA = "0xE525C4")]
		public static void SetLocalY(this Transform t, float _y)
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0xE525FC", Offset = "0xE525FC", VA = "0xE525FC")]
		public static void SetLocalZ(this Transform t, float _z)
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0xE52634", Offset = "0xE52634", VA = "0xE52634")]
		public static void SetLocalRotationX(this Transform t, float _x)
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0xE526A8", Offset = "0xE526A8", VA = "0xE526A8")]
		public static void SetLocalRotationY(this Transform t, float _y)
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0xE5271C", Offset = "0xE5271C", VA = "0xE5271C")]
		public static void SetLocalRotationZ(this Transform t, float _z)
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xE52790", Offset = "0xE52790", VA = "0xE52790")]
		public static int GetSiblingIndexOnlyActive(this Transform t)
		{
			return default(int);
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xE52B50", Offset = "0xE52B50", VA = "0xE52B50")]
		public static bool IsDescendantOf(this Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xE52C04", Offset = "0xE52C04", VA = "0xE52C04")]
		public static Material GetSharedMaterialOnlyInBuild(this MeshRenderer render)
		{
			return null;
		}

		[Token(Token = "0x60027C9")]
		public static T RandomElement<T>(this IList<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x60027CA")]
		public static int RandomIndex<T>(this IList<T> list)
		{
			return default(int);
		}

		[Token(Token = "0x60027CB")]
		public static T[] Duplicate<T>(this T[] sourceArray)
		{
			return null;
		}

		[Token(Token = "0x60027CC")]
		public static T[] Duplicate<T>(this IReadOnlyList<T> sourceList)
		{
			return null;
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0xE52C40", Offset = "0xE52C40", VA = "0xE52C40")]
		public static float GetLag(this PhotonMessageInfo _info)
		{
			return default(float);
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0xE52CBC", Offset = "0xE52CBC", VA = "0xE52CBC")]
		public static double GetLagD(this PhotonMessageInfo _info)
		{
			return default(double);
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xE52D3C", Offset = "0xE52D3C", VA = "0xE52D3C")]
		public static void SetRect(this RectTransform rt, float left, float top, float right, float bottom)
		{
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0xE52D80", Offset = "0xE52D80", VA = "0xE52D80")]
		public static RectTransform Left(this RectTransform rt, float x)
		{
			return null;
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0xE52DC0", Offset = "0xE52DC0", VA = "0xE52DC0")]
		public static RectTransform Right(this RectTransform rt, float x)
		{
			return null;
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0xE52E00", Offset = "0xE52E00", VA = "0xE52E00")]
		public static RectTransform Bottom(this RectTransform rt, float y)
		{
			return null;
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0xE52E40", Offset = "0xE52E40", VA = "0xE52E40")]
		public static RectTransform Top(this RectTransform rt, float y)
		{
			return null;
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0xE52E80", Offset = "0xE52E80", VA = "0xE52E80")]
		public static void SetWidthHeight(this RectTransform rt, float width, float height)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0xE52E94", Offset = "0xE52E94", VA = "0xE52E94")]
		public static void SetWidth(this RectTransform rt, float width)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xE52ECC", Offset = "0xE52ECC", VA = "0xE52ECC")]
		public static void SetHeight(this RectTransform rt, float height)
		{
		}
	}
	[Token(Token = "0x20006A6")]
	public class SyncEnable : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400358F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] toEnable;

		[Token(Token = "0x4003590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] toDisable;

		[Token(Token = "0x4003591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool inverseEnable;

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0xE52F04", Offset = "0xE52F04", VA = "0xE52F04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0xE52F94", Offset = "0xE52F94", VA = "0xE52F94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xE5301C", Offset = "0xE5301C", VA = "0xE5301C")]
		public SyncEnable()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	public class DropCollectable : UnityEngine.MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006A8")]
		[CompilerGenerated]
		private struct <PickUp>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40035A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40035A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40035A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DropCollectable <>4__this;

			[Token(Token = "0x40035A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0xE536F8", Offset = "0xE536F8", VA = "0xE536F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60027E2")]
			[Address(RVA = "0xE5395C", Offset = "0xE5395C", VA = "0xE5395C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A9")]
		[CompilerGenerated]
		private struct <DoDestroy>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40035A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40035A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40035A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DropCollectable <>4__this;

			[Token(Token = "0x40035AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60027E3")]
			[Address(RVA = "0xE53968", Offset = "0xE53968", VA = "0xE53968", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60027E4")]
			[Address(RVA = "0xE53B88", Offset = "0xE53B88", VA = "0xE53B88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4003592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Collider> collidersToIgnore;

		[Token(Token = "0x4003593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Values")]
		[SerializeField]
		private float upForce;

		[Token(Token = "0x4003594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float sideForce;

		[Token(Token = "0x4003595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lifeTime;

		[Token(Token = "0x4003596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float destroyDelay;

		[Token(Token = "0x4003597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Animation")]
		[SerializeField]
		private bool animateBounce;

		[Token(Token = "0x4003598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool animateRotation;

		[Token(Token = "0x4003599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float bounceSpeed;

		[Token(Token = "0x400359A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x400359B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Components")]
		public Collider ownCollider;

		[Token(Token = "0x400359C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Rigidbody rb;

		[Token(Token = "0x400359D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform animatedTransform;

		[Token(Token = "0x400359E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool pickedUp;

		[Token(Token = "0x400359F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float timePassed;

		[Token(Token = "0x40035A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent pickUpStartEvent;

		[Token(Token = "0x40035A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent pickUpEndEvent;

		[Token(Token = "0x40035A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 bounceVector;

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xE53024", Offset = "0xE53024", VA = "0xE53024")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xE530EC", Offset = "0xE530EC", VA = "0xE530EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xE53130", Offset = "0xE53130", VA = "0xE53130")]
		private void Update()
		{
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xE53478", Offset = "0xE53478", VA = "0xE53478")]
		private void AnimateTransform()
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xE53530", Offset = "0xE53530", VA = "0xE53530")]
		[AsyncStateMachine(typeof(<PickUp>d__21))]
		private void PickUp()
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xE535C4", Offset = "0xE535C4", VA = "0xE535C4")]
		[AsyncStateMachine(typeof(<DoDestroy>d__22))]
		private void DoDestroy()
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xE53658", Offset = "0xE53658", VA = "0xE53658")]
		public DropCollectable()
		{
		}
	}
	[Token(Token = "0x20006AA")]
	public class AutoDisable : UnityEngine.MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006AB")]
		[CompilerGenerated]
		private struct <OnEnable>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x40035AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40035AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40035AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AutoDisable <>4__this;

			[Token(Token = "0x40035AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60027E7")]
			[Address(RVA = "0xE53C30", Offset = "0xE53C30", VA = "0xE53C30", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60027E8")]
			[Address(RVA = "0xE53E50", Offset = "0xE53E50", VA = "0xE53E50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40035AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float disableDelay;

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0xE53B94", Offset = "0xE53B94", VA = "0xE53B94")]
		[AsyncStateMachine(typeof(<OnEnable>d__1))]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0xE53C28", Offset = "0xE53C28", VA = "0xE53C28")]
		public AutoDisable()
		{
		}
	}
	[Token(Token = "0x20006AC")]
	public class SimpleDisablePool : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20006AD")]
		private class PoolMember : UnityEngine.MonoBehaviour
		{
			[Token(Token = "0x40035B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Pool myPool;

			[Token(Token = "0x40035B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int maxSpawns;

			[Token(Token = "0x40035B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int spawnCount;

			[Token(Token = "0x60027ED")]
			[Address(RVA = "0xE543B8", Offset = "0xE543B8", VA = "0xE543B8")]
			public void SetPoolMember(Pool pool, int maxSpawns)
			{
			}

			[Token(Token = "0x60027EE")]
			[Address(RVA = "0xE543C4", Offset = "0xE543C4", VA = "0xE543C4")]
			private void OnEnable()
			{
			}

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0xE545A0", Offset = "0xE545A0", VA = "0xE545A0")]
			private void OnDisable()
			{
			}

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0xE5473C", Offset = "0xE5473C", VA = "0xE5473C")]
			private void OnPoolSpawn()
			{
			}

			[Token(Token = "0x60027F1")]
			[Address(RVA = "0xE54788", Offset = "0xE54788", VA = "0xE54788")]
			public PoolMember()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006AE")]
		private class Pool
		{
			[Token(Token = "0x20006AF")]
			public delegate void PoolObjectSpawned();

			[Token(Token = "0x40035B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stack<GameObject> inactive;

			[Token(Token = "0x40035B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject prefab;

			[Token(Token = "0x40035B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int initialSize;

			[Token(Token = "0x40035B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int maxSpawns;

			[Token(Token = "0x40035BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public Transform parent;

			[Token(Token = "0x1400001B")]
			public event PoolObjectSpawned OnPoolObjectSpawned
			{
				[Token(Token = "0x60027F2")]
				[Address(RVA = "0xE54504", Offset = "0xE54504", VA = "0xE54504")]
				[CompilerGenerated]
				add
				{
				}
				[Token(Token = "0x60027F3")]
				[Address(RVA = "0xE54648", Offset = "0xE54648", VA = "0xE54648")]
				[CompilerGenerated]
				remove
				{
				}
			}

			[Token(Token = "0x60027F4")]
			[Address(RVA = "0xE54180", Offset = "0xE54180", VA = "0xE54180")]
			public GameObject Spawn(Vector3 pos, Quaternion rot)
			{
				return null;
			}

			[Token(Token = "0x60027F5")]
			[Address(RVA = "0xE53FB0", Offset = "0xE53FB0", VA = "0xE53FB0")]
			public void AddPoolObject(Transform parent)
			{
			}

			[Token(Token = "0x60027F6")]
			[Address(RVA = "0xE546E4", Offset = "0xE546E4", VA = "0xE546E4")]
			public void Despawn(GameObject obj)
			{
			}

			[Token(Token = "0x60027F7")]
			[Address(RVA = "0xE54790", Offset = "0xE54790", VA = "0xE54790")]
			public Pool()
			{
			}
		}

		[Token(Token = "0x40035B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Pool[] pools;

		[Token(Token = "0x40035B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform t;

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0xE53E5C", Offset = "0xE53E5C", VA = "0xE53E5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0xE53E7C", Offset = "0xE53E7C", VA = "0xE53E7C")]
		public void InitPool()
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0xE5414C", Offset = "0xE5414C", VA = "0xE5414C")]
		public GameObject Spawn(int id, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0xE543B0", Offset = "0xE543B0", VA = "0xE543B0")]
		public SimpleDisablePool()
		{
		}
	}
}
namespace Alvo.Hardpoint
{
	[Token(Token = "0x20006B0")]
	public class HardPointObjective : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40035BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_canBeUsedHasFirst;

		[Token(Token = "0x40035BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HardpointManager m_manager;

		[Token(Token = "0x40035BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HardPointObjectiveAreaColorController m_colorControler;

		[Token(Token = "0x40035BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isLocalPlayerInside;

		[Token(Token = "0x40035BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_isConquerable;

		[Token(Token = "0x170004A9")]
		public HardPointObjectiveAreaColorController MColorControler
		{
			[Token(Token = "0x60027FC")]
			[Address(RVA = "0xE547E0", Offset = "0xE547E0", VA = "0xE547E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		public bool CanBeUsedHasFirst
		{
			[Token(Token = "0x60027FD")]
			[Address(RVA = "0xE547E8", Offset = "0xE547E8", VA = "0xE547E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AB")]
		public bool IsLocalPlayerInside
		{
			[Token(Token = "0x60027FE")]
			[Address(RVA = "0xE547F0", Offset = "0xE547F0", VA = "0xE547F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0xE547F8", Offset = "0xE547F8", VA = "0xE547F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xE54848", Offset = "0xE54848", VA = "0xE54848")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0xE548F4", Offset = "0xE548F4", VA = "0xE548F4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0xE54B48", Offset = "0xE54B48", VA = "0xE54B48")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0xE548C0", Offset = "0xE548C0", VA = "0xE548C0")]
		private void CheckPlayersInsideIsNotDeadOrDisconnected()
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0xE54D28", Offset = "0xE54D28", VA = "0xE54D28")]
		private void CheckPlayersInsideIsNotDeadOrDisconnectedCheckList(List<PlayerData> insideTeamList)
		{
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0xE54E60", Offset = "0xE54E60", VA = "0xE54E60")]
		private void CheckLocalPlayerStillInside()
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0xE5486C", Offset = "0xE5486C", VA = "0xE5486C")]
		private void CheckIfIsConquerable()
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0xE54F34", Offset = "0xE54F34", VA = "0xE54F34")]
		public void Active()
		{
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0xE54FA8", Offset = "0xE54FA8", VA = "0xE54FA8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0xE55000", Offset = "0xE55000", VA = "0xE55000")]
		public void Init()
		{
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0xE55054", Offset = "0xE55054", VA = "0xE55054")]
		[ContextMenu("Adjust Y Scale")]
		private void AdjustYScale()
		{
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0xE55140", Offset = "0xE55140", VA = "0xE55140")]
		public HardPointObjective()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	public class HardPointObjectiveAreaColorController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40035C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color colorRed;

		[Token(Token = "0x40035C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color colorGreen;

		[Token(Token = "0x40035C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color colorOrange;

		[Token(Token = "0x40035C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color colorWhite;

		[Token(Token = "0x40035C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color colorWhiteMarket;

		[Token(Token = "0x40035C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color colorGreyNotConquerable;

		[Token(Token = "0x40035C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color colorGreyNotConquerableMarket;

		[Token(Token = "0x40035C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SpaceMarkerV2 _mMarker;

		[Token(Token = "0x40035C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshRenderer m_render;

		[Token(Token = "0x40035C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MaterialPropertyBlock m_matBlock;

		[Token(Token = "0x40035CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int sId_Color;

		[Token(Token = "0x600280C")]
		[Address(RVA = "0xE55150", Offset = "0xE55150", VA = "0xE55150")]
		private void Awake()
		{
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0xE5521C", Offset = "0xE5521C", VA = "0xE5521C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0xE5541C", Offset = "0xE5541C", VA = "0xE5541C")]
		public void SetTeam1()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0xE55494", Offset = "0xE55494", VA = "0xE55494")]
		public void SetTeam2()
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0xE5550C", Offset = "0xE5550C", VA = "0xE5550C")]
		public void SetUnderContested()
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0xE55584", Offset = "0xE55584", VA = "0xE55584")]
		public void SetNoneTeamControl()
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0xE553A4", Offset = "0xE553A4", VA = "0xE553A4")]
		private void SetNoneTeamAndNoConquerable()
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0xE54B28", Offset = "0xE54B28", VA = "0xE54B28")]
		public void SetVisibleMarket(bool _IsVisible)
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0xE555FC", Offset = "0xE555FC", VA = "0xE555FC")]
		public HardPointObjectiveAreaColorController()
		{
		}
	}
	[Token(Token = "0x20006B2")]
	public class HardPoint_UiController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40035CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color kColorGreen;

		[Token(Token = "0x40035CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Color kColorRed;

		[Token(Token = "0x40035CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Color kColorOrange;

		[Token(Token = "0x40035CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Teams Scores")]
		private TextMeshProUGUI m_team1Score;

		[Token(Token = "0x40035CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_team2Score;

		[Token(Token = "0x40035D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Match game counter")]
		[SerializeField]
		private TextMeshProUGUI m_gameCounterMinutes;

		[Token(Token = "0x40035D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI m_gameCounterSeconds;

		[Token(Token = "0x40035D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("Time for nextObjective counter")]
		private TextMeshProUGUI m_nextObjectiveMinutes;

		[Token(Token = "0x40035D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI m_nextObjectiveSeconds;

		[Token(Token = "0x40035D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image m_nextObjectiveImg;

		[Token(Token = "0x40035D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween m_tween_blink;

		[Token(Token = "0x6002815")]
		[Address(RVA = "0xE556B8", Offset = "0xE556B8", VA = "0xE556B8")]
		public void UpdateTeamsScore(int _team1Score, int _team2Score, LevelManager _levelManager)
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0xE55770", Offset = "0xE55770", VA = "0xE55770")]
		public void UpdateColorNextObjective(bool _isUnderControlByTeam1)
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0xE55830", Offset = "0xE55830", VA = "0xE55830")]
		public void UpdateColorNextObjectiveNoTeam()
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0xE55864", Offset = "0xE55864", VA = "0xE55864")]
		public void UpdateColorNextObjectiveUnderContested()
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0xE558E0", Offset = "0xE558E0", VA = "0xE558E0")]
		public void UpdateGameCounter(double _time)
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0xE55A34", Offset = "0xE55A34", VA = "0xE55A34")]
		public void UpdateNextObjectiveCounter(double _time)
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0xE55B88", Offset = "0xE55B88", VA = "0xE55B88")]
		public void BlinkObjectiveCounter()
		{
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0xE55CD8", Offset = "0xE55CD8", VA = "0xE55CD8")]
		private void BlinkObjectiveCounterInvoke()
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0xE55D0C", Offset = "0xE55D0C", VA = "0xE55D0C")]
		private void BlinkDone()
		{
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0xE55D38", Offset = "0xE55D38", VA = "0xE55D38")]
		public HardPoint_UiController()
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public enum HPSubMode
	{
		[Token(Token = "0x40035D7")]
		Team,
		[Token(Token = "0x40035D8")]
		FFA,
		[Token(Token = "0x40035D9")]
		MultiTeam
	}
	[Token(Token = "0x20006B4")]
	public enum HpState
	{
		[Token(Token = "0x40035DB")]
		WaitingEnoughPlayers,
		[Token(Token = "0x40035DC")]
		WaitingToStart,
		[Token(Token = "0x40035DD")]
		InGame,
		[Token(Token = "0x40035DE")]
		Ended
	}
	[Token(Token = "0x20006B5")]
	[RequireComponent(typeof(PhotonView))]
	public class HardpointManager : PunBehaviour
	{
		[Token(Token = "0x20006B6")]
		private enum LastSoundPlayed
		{
			[Token(Token = "0x4003600")]
			MyTeam,
			[Token(Token = "0x4003601")]
			EnemyTeam,
			[Token(Token = "0x4003602")]
			NoTeam
		}

		[Token(Token = "0x40035DF")]
		private const float kSyncFrequent = 1.1f;

		[Token(Token = "0x40035E0")]
		private const float kMinTimeForActivateObjective = 6f;

		[Token(Token = "0x40035E1")]
		private const float kMaxTimeForActivateObjective = 15f;

		[Token(Token = "0x40035E2")]
		private const float kMaxDistanceForMaxTimeActiveObj = 90f;

		[Token(Token = "0x40035E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("References")]
		private LevelManager m_levelManager;

		[Token(Token = "0x40035E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonView m_pv;

		[Token(Token = "0x40035E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HardPoint_UiController m_ui;

		[Token(Token = "0x40035E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpaceMarkerV2 _mMarker;

		[Token(Token = "0x40035E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource m_audio;

		[Token(Token = "0x40035E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Settings")]
		private HardpointSettings m_settings;

		[Token(Token = "0x40035EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Objectives")]
		[SerializeField]
		private HardPointObjective[] m_objectives;

		[Token(Token = "0x40035EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_selectOnlyInitialObjectives;

		[Token(Token = "0x40035EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_isObjectiveIsConquerable;

		[Token(Token = "0x40035ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double m_timerToActivateObjectiveStarted;

		[Token(Token = "0x40035EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double m_timerToActivateObjective;

		[Token(Token = "0x40035EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HPSubMode HPSubMode;

		[Token(Token = "0x40035F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_timeNextSync;

		[NonSerialized]
		[Token(Token = "0x40035F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float[] m_points;

		[Token(Token = "0x40035F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_personalPoints;

		[NonSerialized]
		[Token(Token = "0x40035F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<PlayerData> m_team1PlayersInside;

		[NonSerialized]
		[Token(Token = "0x40035F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<PlayerData> m_team2PlayersInside;

		[NonSerialized]
		[Token(Token = "0x40035F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public HpState m_gameState;

		[NonSerialized]
		[Token(Token = "0x40035F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public double m_timerStarted;

		[Token(Token = "0x40035F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_timeFinishGame;

		[Token(Token = "0x40035F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Header("Prefabs")]
		[SerializeField]
		private GameObject m_uiPrefab;

		[Token(Token = "0x40035FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[Header("Audio")]
		private AudioClip m_sndLocalTeamControlling;

		[Token(Token = "0x40035FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioClip m_sndEnemyTaking;

		[Token(Token = "0x40035FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private AudioClip m_sndTimerChangeObj;

		[Token(Token = "0x40035FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private LastSoundPlayed m_lastSoundPlayed;

		[Token(Token = "0x40035FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool m_hasNextObjectiveTimerSndPlayer;

		[Token(Token = "0x170004AC")]
		public static HardpointManager Instance
		{
			[Token(Token = "0x6002820")]
			[Address(RVA = "0xE55DB4", Offset = "0xE55DB4", VA = "0xE55DB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002821")]
			[Address(RVA = "0xE55DFC", Offset = "0xE55DFC", VA = "0xE55DFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004AD")]
		public int m_objectiveCurrentIndex
		{
			[Token(Token = "0x6002822")]
			[Address(RVA = "0xE55E48", Offset = "0xE55E48", VA = "0xE55E48")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002823")]
			[Address(RVA = "0xE55E50", Offset = "0xE55E50", VA = "0xE55E50")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004AE")]
		public HardPointObjective CurrentObjective
		{
			[Token(Token = "0x6002824")]
			[Address(RVA = "0xE55E58", Offset = "0xE55E58", VA = "0xE55E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AF")]
		public bool IsObjectiveConquerable
		{
			[Token(Token = "0x6002825")]
			[Address(RVA = "0xE54EC4", Offset = "0xE54EC4", VA = "0xE54EC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B0")]
		public double TimerStartedInSeconds
		{
			[Token(Token = "0x6002826")]
			[Address(RVA = "0xE55E9C", Offset = "0xE55E9C", VA = "0xE55E9C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004B1")]
		public SpaceMarkerV2 Marker
		{
			[Token(Token = "0x6002827")]
			[Address(RVA = "0xE55F04", Offset = "0xE55F04", VA = "0xE55F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		public HardPoint_UiController UI
		{
			[Token(Token = "0x6002828")]
			[Address(RVA = "0xE55F0C", Offset = "0xE55F0C", VA = "0xE55F0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0xE55F14", Offset = "0xE55F14", VA = "0xE55F14")]
		private void Editor_UpdateListObjectives()
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0xE55F64", Offset = "0xE55F64", VA = "0xE55F64")]
		private void Awake()
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0xE55FB0", Offset = "0xE55FB0", VA = "0xE55FB0")]
		private void Start()
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0xE5624C", Offset = "0xE5624C", VA = "0xE5624C")]
		private void CacheObjects()
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0xE563C4", Offset = "0xE563C4", VA = "0xE563C4")]
		private void ResetValuesForGame()
		{
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0xE56434", Offset = "0xE56434", VA = "0xE56434")]
		public void SetTimerToWaitPlayers(double _timer)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0xE565AC", Offset = "0xE565AC", VA = "0xE565AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0xE566A4", Offset = "0xE566A4", VA = "0xE566A4")]
		public void HPUpdate()
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0xE5687C", Offset = "0xE5687C", VA = "0xE5687C")]
		private void WaitingEnoughPlayersUpdate()
		{
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0xE56A70", Offset = "0xE56A70", VA = "0xE56A70")]
		private void PreGameTimerUpdate()
		{
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0xE56B04", Offset = "0xE56B04", VA = "0xE56B04")]
		private void GameUpdate()
		{
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0xE57200", Offset = "0xE57200", VA = "0xE57200")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0xE57C48", Offset = "0xE57C48", VA = "0xE57C48")]
		private void CheckStillEnoughPlayers()
		{
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0xE5773C", Offset = "0xE5773C", VA = "0xE5773C")]
		private void SelectNextObjective()
		{
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0xE57F50", Offset = "0xE57F50", VA = "0xE57F50")]
		private void ClearInsidePlayers()
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0xE570C4", Offset = "0xE570C4", VA = "0xE570C4")]
		private void PrintPreGameStart(double _time)
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0xE5723C", Offset = "0xE5723C", VA = "0xE5723C")]
		private void CheckIsEndOfGame()
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0xE57BCC", Offset = "0xE57BCC", VA = "0xE57BCC")]
		private void UpdateTeamColorObjective(bool isTeam1)
		{
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0xE58068", Offset = "0xE58068", VA = "0xE58068")]
		private void DisplayWinner(bool _isTeam1, bool _endedByTime)
		{
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0xE584C4", Offset = "0xE584C4", VA = "0xE584C4")]
		private void DisplayDraw()
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0xE58360", Offset = "0xE58360", VA = "0xE58360")]
		private void EndGame()
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0xE56EE4", Offset = "0xE56EE4", VA = "0xE56EE4")]
		public void SetUpInGame()
		{
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0xE5861C", Offset = "0xE5861C", VA = "0xE5861C")]
		private void HideObjectiveAndMarket()
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0xE57FEC", Offset = "0xE57FEC", VA = "0xE57FEC")]
		private bool IsLocalPlayer(bool _isTeam1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0xE5864C", Offset = "0xE5864C", VA = "0xE5864C")]
		public void ForceEndMatch()
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0xE587F0", Offset = "0xE587F0", VA = "0xE587F0", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0xE58840", Offset = "0xE58840", VA = "0xE58840")]
		[PunRPC]
		private void HpWaitingToStartRpc(double _startedTimer)
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0xE588CC", Offset = "0xE588CC", VA = "0xE588CC")]
		[PunRPC]
		public void ChangetToNextObjectiveRpc(int _nextObjectiveIndex, double _timeToNextObjective, double _timeToActiveObjective, PhotonMessageInfo _info)
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0xE58A8C", Offset = "0xE58A8C", VA = "0xE58A8C")]
		[PunRPC]
		private void HpSyncData_Rpc(float _timeToFinishGame, float[] _points, PhotonMessageInfo _info)
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0xE58AB4", Offset = "0xE58AB4", VA = "0xE58AB4")]
		[PunRPC]
		private void HpSetWinner(bool _isTeam1, bool _isDraw, bool _endedByTime, float[] _points)
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0xE58034", Offset = "0xE58034", VA = "0xE58034")]
		private void PlaySndLocalTeamControlling()
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0xE57B90", Offset = "0xE57B90", VA = "0xE57B90")]
		private void PlaySndNoLocalTeamControlling()
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0xE57B48", Offset = "0xE57B48", VA = "0xE57B48")]
		private void PlaySndTimerBeforeChangeObjective()
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0xE58B10", Offset = "0xE58B10", VA = "0xE58B10")]
		private void OnAudioFxChange()
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0xE58B88", Offset = "0xE58B88", VA = "0xE58B88")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0xE58BE4", Offset = "0xE58BE4", VA = "0xE58BE4")]
		public HardpointManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B7")]
	public struct HardpointSettings
	{
		[Token(Token = "0x4003603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Space]
		public float m_PointsToWin;

		[Token(Token = "0x4003604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_TimeBeforeChangeObjective;

		[Token(Token = "0x4003605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_TimeLimitMatch;

		[Token(Token = "0x4003606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_TimeBeforeStartMatch;

		[Token(Token = "0x4003607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space]
		[Header("DevTest")]
		public bool m_devPlayAlone;

		[Token(Token = "0x600284D")]
		[Address(RVA = "0xE58CCC", Offset = "0xE58CCC", VA = "0xE58CCC")]
		public void SetReleaseSettings()
		{
		}
	}
}
namespace Alvo.Debugg
{
	[Token(Token = "0x20006B8")]
	public class AudioDecibelDebug : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003608")]
		private const int QSAMPLES = 128;

		[Token(Token = "0x4003609")]
		private const float REFVAL = 0.1f;

		[Token(Token = "0x400360A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] samples;

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xE58CE0", Offset = "0xE58CE0", VA = "0xE58CE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xE58D30", Offset = "0xE58D30", VA = "0xE58D30")]
		private void Update()
		{
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0xE58E38", Offset = "0xE58E38", VA = "0xE58E38")]
		public AudioDecibelDebug()
		{
		}
	}
}
namespace Alvo.Deprecated
{
	[Token(Token = "0x20006B9")]
	public class VrLoadOuts : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20006BA")]
		private enum SELECTIONS
		{
			[Token(Token = "0x4003647")]
			none,
			[Token(Token = "0x4003648")]
			primaryWeapon,
			[Token(Token = "0x4003649")]
			secondaryWeapon,
			[Token(Token = "0x400364A")]
			scope,
			[Token(Token = "0x400364B")]
			attachment,
			[Token(Token = "0x400364C")]
			granadeOne,
			[Token(Token = "0x400364D")]
			granadeTwo
		}

		[Token(Token = "0x20006BB")]
		[CompilerGenerated]
		private sealed class <DisplayLoadoutCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400364E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400364F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrLoadOuts <>4__this;

			[Token(Token = "0x170004B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002875")]
				[Address(RVA = "0xE5AA8C", Offset = "0xE5AA8C", VA = "0xE5AA8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002877")]
				[Address(RVA = "0xE5AAD4", Offset = "0xE5AAD4", VA = "0xE5AAD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002872")]
			[Address(RVA = "0xE58FE0", Offset = "0xE58FE0", VA = "0xE58FE0")]
			[DebuggerHidden]
			public <DisplayLoadoutCoroutine>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6002873")]
			[Address(RVA = "0xE5A8E8", Offset = "0xE5A8E8", VA = "0xE5A8E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002874")]
			[Address(RVA = "0xE5A8EC", Offset = "0xE5A8EC", VA = "0xE5A8EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002876")]
			[Address(RVA = "0xE5AA94", Offset = "0xE5AA94", VA = "0xE5AA94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400360B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerLocalData localData;

		[Token(Token = "0x400360C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCharacterSelection charaterSelection;

		[Token(Token = "0x400360D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CustomizationModelsManager customizationManager;

		[Token(Token = "0x400360E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space]
		public ToggleGroup buttonsLoadoutGroup;

		[Token(Token = "0x400360F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle[] buttonsLoadOut;

		[Token(Token = "0x4003610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		public GameObject[] cacheSkinBtns;

		[Token(Token = "0x4003611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SkinSelectionElement[] cacheSkinElements;

		[Token(Token = "0x4003612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text primaryLbl;

		[Token(Token = "0x4003613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text secondaryLbl;

		[Token(Token = "0x4003614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TMP_Text scopeLbl;

		[Token(Token = "0x4003615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TMP_Text attachmentLbl;

		[Token(Token = "0x4003616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TMP_Text granadeOneLbl;

		[Token(Token = "0x4003617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TMP_Text granadeTwoLbl;

		[Token(Token = "0x4003618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TMP_Text titleLbl;

		[Token(Token = "0x4003619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TMP_Text loadoutNameLbl;

		[Token(Token = "0x400361A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TMP_Text currentSkinLbl;

		[Token(Token = "0x400361B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject loadOutMainPnl;

		[Token(Token = "0x400361C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject gunSelectPnl;

		[Token(Token = "0x400361D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject selectMainWeaponPnl;

		[Token(Token = "0x400361E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject mainWeaponPageOnePnl;

		[Token(Token = "0x400361F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject mainWeaponPageTwoPnl;

		[Token(Token = "0x4003620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject selectSecondaryWeaponPnl;

		[Token(Token = "0x4003621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject selectSigthPnl;

		[Token(Token = "0x4003622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject selectAttachmentPnl;

		[Token(Token = "0x4003623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject selectGranadePnl;

		[Token(Token = "0x4003624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject selectSkinPnl;

		[Token(Token = "0x4003625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Image selectedSkin;

		[Token(Token = "0x4003626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject selectSightPnl1;

		[Token(Token = "0x4003627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject selectSightPnl2;

		[Token(Token = "0x4003628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject selectSightPnlSniper;

		[Token(Token = "0x4003629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string[] skinNames;

		[Token(Token = "0x400362A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string[] scopeNames;

		[Token(Token = "0x400362B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string[] granadeNames;

		[Token(Token = "0x400362C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string[] attachmentNames;

		[Token(Token = "0x400362D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SELECTIONS currentSelection;

		[Token(Token = "0x400362E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool init;

		[Token(Token = "0x400362F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public DisplayLoadoutInventory m_DisplayLoadoutInventory;

		[Token(Token = "0x4003630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Space]
		public ClothingCustomization clothCustomization;

		[Token(Token = "0x4003631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public StartupManager startupManager;

		[Token(Token = "0x4003632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TMP_Text bodyTypeLbl;

		[Token(Token = "0x4003633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public TMP_Text hatLbl;

		[Token(Token = "0x4003634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public TMP_Text maskLbl;

		[Token(Token = "0x4003635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public TMP_Text eyewearLbl;

		[Token(Token = "0x4003636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TMP_Text suitLbl;

		[Token(Token = "0x4003637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[Space]
		[Header("Attachment Store Pnls")]
		public GameObject lasserAttachmentGo;

		[Token(Token = "0x4003638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public GameObject bayoneteAttachmentGo;

		[Token(Token = "0x4003639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[Space]
		[Header("Wepon stats sliders")]
		public Slider statMainSldr1;

		[Token(Token = "0x400363A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Slider statMainSldr2;

		[Token(Token = "0x400363B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Slider statMainSldr3;

		[Token(Token = "0x400363C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Slider statMainSldr4;

		[Token(Token = "0x400363D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Slider statMainSldr5;

		[Token(Token = "0x400363E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Slider statMainSldr6;

		[Token(Token = "0x400363F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Slider statSecondarySldr1;

		[Token(Token = "0x4003640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Slider statSecondarySldr2;

		[Token(Token = "0x4003641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Slider statSecondarySldr3;

		[Token(Token = "0x4003642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Slider statSecondarySldr4;

		[Token(Token = "0x4003643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Slider statSecondarySldr5;

		[Token(Token = "0x4003644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Slider statSecondarySldr6;

		[Token(Token = "0x4003645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private WaitForSeconds wait;

		[Token(Token = "0x6002851")]
		[Address(RVA = "0xE58E40", Offset = "0xE58E40", VA = "0xE58E40")]
		private void Start()
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0xE58F50", Offset = "0xE58F50", VA = "0xE58F50")]
		public void DisplayLoadOut()
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0xE58F78", Offset = "0xE58F78", VA = "0xE58F78")]
		[IteratorStateMachine(typeof(<DisplayLoadoutCoroutine>d__62))]
		private IEnumerator DisplayLoadoutCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0xE59008", Offset = "0xE59008", VA = "0xE59008")]
		public void HideLoadOut()
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0xE59430", Offset = "0xE59430", VA = "0xE59430")]
		public void OnlyDisplayMainPnl()
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0xE5977C", Offset = "0xE5977C", VA = "0xE5977C")]
		public void OnlyDisplaySelectedLoadOutModels()
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0xE59010", Offset = "0xE59010", VA = "0xE59010")]
		private void DisplayCurrentSelectedLoadout(bool dontShowModels = false)
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0xE594B8", Offset = "0xE594B8", VA = "0xE594B8")]
		private void HideAllPnls(bool keepMainPnl = false)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0xE59844", Offset = "0xE59844", VA = "0xE59844")]
		public void OnChangePrimaryWeapon()
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0xE598D0", Offset = "0xE598D0", VA = "0xE598D0")]
		public void OnNextPage()
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0xE59908", Offset = "0xE59908", VA = "0xE59908")]
		public void OnGoBack()
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0xE59940", Offset = "0xE59940", VA = "0xE59940")]
		public void OnNextScopePage()
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0xE59978", Offset = "0xE59978", VA = "0xE59978")]
		public void OnScopeGoBack()
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0xE599B0", Offset = "0xE599B0", VA = "0xE599B0")]
		public void OnChangeSecondaryWeapon()
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0xE59A0C", Offset = "0xE59A0C", VA = "0xE59A0C")]
		public void OnChangeScope()
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0xE59B8C", Offset = "0xE59B8C", VA = "0xE59B8C")]
		public void OnChangeAttachment()
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0xE59C40", Offset = "0xE59C40", VA = "0xE59C40")]
		public void OnChangeGranadeOne(int index)
		{
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0xE59CB0", Offset = "0xE59CB0", VA = "0xE59CB0")]
		public void OnSelectWeapon(int weaponIndex)
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0xE59EB8", Offset = "0xE59EB8", VA = "0xE59EB8")]
		public void EquipWeapon(int id, bool r)
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0xE5A0B4", Offset = "0xE5A0B4", VA = "0xE5A0B4")]
		public void OnSelectScope(int scopeIndex)
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0xE5A168", Offset = "0xE5A168", VA = "0xE5A168")]
		public void OnSelectGranade(int granadeIndex)
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0xE5A26C", Offset = "0xE5A26C", VA = "0xE5A26C")]
		public void OnSelectAttachment(int attackmentIndex)
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0xE5A320", Offset = "0xE5A320", VA = "0xE5A320")]
		public void OnChangePrimarySkin()
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0xE5A348", Offset = "0xE5A348", VA = "0xE5A348")]
		public void OnChangeSkin(int weaponIndex)
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0xE59840", Offset = "0xE59840", VA = "0xE59840")]
		private void SetCharacterPartLbls()
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0xE5A3DC", Offset = "0xE5A3DC", VA = "0xE5A3DC")]
		public string GetClothName(int id)
		{
			return null;
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0xE5A474", Offset = "0xE5A474", VA = "0xE5A474")]
		public void SwitchClothPositive(int index)
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0xE5A5F0", Offset = "0xE5A5F0", VA = "0xE5A5F0")]
		public void SwitchClothNegative(int index)
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0xE5A47C", Offset = "0xE5A47C", VA = "0xE5A47C")]
		public void SwitchGear(int index, bool positive)
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0xE5A5F8", Offset = "0xE5A5F8", VA = "0xE5A5F8")]
		public void ChangeCurrentLoadOut(int index)
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0xE5A6B4", Offset = "0xE5A6B4", VA = "0xE5A6B4")]
		public void SetPrimarySkin(int skinIndex)
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0xE5A758", Offset = "0xE5A758", VA = "0xE5A758")]
		public void SetSkin(int skinIndex)
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0xE5A878", Offset = "0xE5A878", VA = "0xE5A878")]
		public VrLoadOuts()
		{
		}
	}
}
namespace Alvo.Audio
{
	[Token(Token = "0x20006BC")]
	public class RewardsUISFX : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20006BD")]
		public enum SFX
		{
			[Token(Token = "0x400365A")]
			RANK_UP,
			[Token(Token = "0x400365B")]
			BAR_FILL,
			[Token(Token = "0x400365C")]
			UNLOCK_SHOW
		}

		[Token(Token = "0x4003651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setup")]
		[SerializeField]
		private float volume;

		[Token(Token = "0x4003652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] clips;

		[Token(Token = "0x4003653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip[] shells;

		[Token(Token = "0x4003654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RewardsUISFXPlayer sourcePrefab;

		[Token(Token = "0x4003655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Settings")]
		[SerializeField]
		private float minFillSFXInterval;

		[Token(Token = "0x4003656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool mute;

		[Token(Token = "0x4003657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<RewardsUISFXPlayer> pool;

		[Token(Token = "0x4003658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastFillSFXTime;

		[Token(Token = "0x6002878")]
		[Address(RVA = "0xE5AADC", Offset = "0xE5AADC", VA = "0xE5AADC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0xE5AC64", Offset = "0xE5AC64", VA = "0xE5AC64")]
		public void PlayClip(SFX sfx)
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0xE5B04C", Offset = "0xE5B04C", VA = "0xE5B04C")]
		public void PlayRankUp()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0xE5B054", Offset = "0xE5B054", VA = "0xE5B054")]
		public void PlayRankBarFill()
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0xE5B098", Offset = "0xE5B098", VA = "0xE5B098")]
		public void PlayUnlockShow()
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0xE5ADE4", Offset = "0xE5ADE4", VA = "0xE5ADE4")]
		private RewardsUISFXPlayer Spawn()
		{
			return null;
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0xE5B0A0", Offset = "0xE5B0A0", VA = "0xE5B0A0")]
		public void Despawn(RewardsUISFXPlayer source)
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0xE5B0FC", Offset = "0xE5B0FC", VA = "0xE5B0FC")]
		public RewardsUISFX()
		{
		}
	}
	[Token(Token = "0x20006BE")]
	[RequireComponent(typeof(AudioSource))]
	public class RewardsUISFXPlayer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400365D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x400365E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RewardsUISFX rewardsUISFX;

		[Token(Token = "0x400365F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float despawnTime;

		[Token(Token = "0x6002880")]
		[Address(RVA = "0xE5B18C", Offset = "0xE5B18C", VA = "0xE5B18C")]
		public void Init(RewardsUISFX uisfx)
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0xE5AFE4", Offset = "0xE5AFE4", VA = "0xE5AFE4")]
		public void Play(AudioClip clip)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0xE5AFC8", Offset = "0xE5AFC8", VA = "0xE5AFC8")]
		public void SetVolume(float volume)
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0xE5B194", Offset = "0xE5B194", VA = "0xE5B194")]
		private void Update()
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0xE5B0E0", Offset = "0xE5B0E0", VA = "0xE5B0E0")]
		public void OnDespawn()
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0xE5B1E0", Offset = "0xE5B1E0", VA = "0xE5B1E0")]
		public RewardsUISFXPlayer()
		{
		}
	}
}
namespace Alvo.UI
{
	[Token(Token = "0x20006BF")]
	public class EnableUIOnDelay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20006C0")]
		[CompilerGenerated]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnableUIOnDelay <>4__this;

			[Token(Token = "0x170004B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600288C")]
				[Address(RVA = "0xE5B460", Offset = "0xE5B460", VA = "0xE5B460", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600288E")]
				[Address(RVA = "0xE5B4A8", Offset = "0xE5B4A8", VA = "0xE5B4A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002889")]
			[Address(RVA = "0xE5B250", Offset = "0xE5B250", VA = "0xE5B250")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600288A")]
			[Address(RVA = "0xE5B288", Offset = "0xE5B288", VA = "0xE5B288", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600288B")]
			[Address(RVA = "0xE5B28C", Offset = "0xE5B28C", VA = "0xE5B28C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600288D")]
			[Address(RVA = "0xE5B468", Offset = "0xE5B468", VA = "0xE5B468", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup m_Target;

		[Token(Token = "0x4003661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Delay;

		[Token(Token = "0x4003662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_FadeInTime;

		[Token(Token = "0x4003663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_Disable;

		[Token(Token = "0x4003664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds waitDelay;

		[Token(Token = "0x4003665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds fadeDelay;

		[Token(Token = "0x6002886")]
		[Address(RVA = "0xE5B1E8", Offset = "0xE5B1E8", VA = "0xE5B1E8")]
		[IteratorStateMachine(typeof(<Start>d__6))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0xE5B278", Offset = "0xE5B278", VA = "0xE5B278")]
		public void SetDelay(float d)
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0xE5B280", Offset = "0xE5B280", VA = "0xE5B280")]
		public EnableUIOnDelay()
		{
		}
	}
	[Token(Token = "0x20006C1")]
	public class LeaderboardPlayerItemUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI[] m_StatTexts;

		[Token(Token = "0x400366A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_RankImage;

		[Token(Token = "0x400366B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI rankText;

		[Token(Token = "0x400366C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] perkImages;

		[Token(Token = "0x400366D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image avatarImg;

		[Token(Token = "0x400366E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_Background;

		[Token(Token = "0x400366F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VoiceButton m_VoiceButton;

		[Token(Token = "0x4003670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AlvoPingDisplay m_PingDisplay;

		[Token(Token = "0x170004B7")]
		public VoiceButton VoiceButton
		{
			[Token(Token = "0x600288F")]
			[Address(RVA = "0xE5B4B0", Offset = "0xE5B4B0", VA = "0xE5B4B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002890")]
			[Address(RVA = "0xE5B4B8", Offset = "0xE5B4B8", VA = "0xE5B4B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170004B8")]
		public AlvoPingDisplay AlvoPingDisplay
		{
			[Token(Token = "0x6002891")]
			[Address(RVA = "0xE5B4C0", Offset = "0xE5B4C0", VA = "0xE5B4C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002892")]
			[Address(RVA = "0xE5B4C8", Offset = "0xE5B4C8", VA = "0xE5B4C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0xE5B4D0", Offset = "0xE5B4D0", VA = "0xE5B4D0")]
		public void Setup(Sprite _rankSprite, int rankNumber, Sprite[] perkSprite, Sprite avatarSprite, params string[] _stats)
		{
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0xE5B790", Offset = "0xE5B790", VA = "0xE5B790")]
		public void SetBackgroundColor(Color color)
		{
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0xE5B7B4", Offset = "0xE5B7B4", VA = "0xE5B7B4")]
		public void Clean()
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0xE5B9B8", Offset = "0xE5B9B8", VA = "0xE5B9B8")]
		public LeaderboardPlayerItemUI()
		{
		}
	}
	[Token(Token = "0x20006C2")]
	public class LoadingTextEllipsis : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI ellipsisText;

		[Token(Token = "0x4003672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject toReplace;

		[Token(Token = "0x4003673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float changeFrequency;

		[Token(Token = "0x4003674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int cycle;

		[Token(Token = "0x4003675")]
		private const int maxCycles = 3;

		[Token(Token = "0x4003676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] states;

		[Token(Token = "0x6002897")]
		[Address(RVA = "0xE5B9C0", Offset = "0xE5B9C0", VA = "0xE5B9C0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0xE5BAB4", Offset = "0xE5BAB4", VA = "0xE5BAB4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0xE5BB30", Offset = "0xE5BB30", VA = "0xE5BB30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0xE5BB68", Offset = "0xE5BB68", VA = "0xE5BB68")]
		public void UpdateEllipsis()
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0xE5BC30", Offset = "0xE5BC30", VA = "0xE5BC30")]
		public LoadingTextEllipsis()
		{
		}
	}
	[Token(Token = "0x20006C3")]
	public class CharacterItemUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_Icon;

		[Token(Token = "0x4003678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_Background;

		[Token(Token = "0x4003679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_PurchaseUI;

		[Token(Token = "0x400367A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_SelectedUI;

		[Token(Token = "0x400367B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_LockedUI;

		[Token(Token = "0x400367C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI m_PriceText;

		[Token(Token = "0x400367D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Space]
		private Color m_CanBuyColor;

		[Token(Token = "0x400367E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color m_CantBuyColor;

		[Token(Token = "0x400367F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CurvedUIVertexEffect curvedUi;

		[Token(Token = "0x4003680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Index;

		[Token(Token = "0x4003681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Action<int> m_OnBuy;

		[Token(Token = "0x4003682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Action<int> m_OnSelect;

		[Token(Token = "0x170004B9")]
		public int Index
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0xE5BD84", Offset = "0xE5BD84", VA = "0xE5BD84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0xE5BD8C", Offset = "0xE5BD8C", VA = "0xE5BD8C")]
		public void Setup(int index, Sprite sprite)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0xE5BE98", Offset = "0xE5BE98", VA = "0xE5BE98")]
		public void SetSelected(bool b)
		{
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0xE5BEB8", Offset = "0xE5BEB8", VA = "0xE5BEB8")]
		public void SetPrice(int price, bool hasEnoughCoins)
		{
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0xE5BF78", Offset = "0xE5BF78", VA = "0xE5BF78")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0xE5BF98", Offset = "0xE5BF98", VA = "0xE5BF98")]
		public void SetBuyCallback(Action<int> callback)
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0xE5BFA0", Offset = "0xE5BFA0", VA = "0xE5BFA0")]
		public void SetSelectCallback(Action<int> callback)
		{
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0xE5BFA8", Offset = "0xE5BFA8", VA = "0xE5BFA8")]
		public void OnSelectClicked()
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0xE5BFC8", Offset = "0xE5BFC8", VA = "0xE5BFC8")]
		public void OnBuyClicked()
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0xE5BFE8", Offset = "0xE5BFE8", VA = "0xE5BFE8")]
		public CharacterItemUI()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	public class SkinHoverDisplay : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4003683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CustomizationModelsManager customizationManager;

		[Token(Token = "0x4003684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_WeaponIndex;

		[Token(Token = "0x4003685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_SkinIndex;

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0xE5BFF0", Offset = "0xE5BFF0", VA = "0xE5BFF0")]
		public void Setup(int wid, int sid)
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0xE5BFF8", Offset = "0xE5BFF8", VA = "0xE5BFF8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0xE5C01C", Offset = "0xE5C01C", VA = "0xE5C01C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0xE5C038", Offset = "0xE5C038", VA = "0xE5C038")]
		public SkinHoverDisplay()
		{
		}
	}
	[Token(Token = "0x20006C5")]
	public class UIModelSpawnPointSetter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CustomizationModelsManager m_CMM;

		[Token(Token = "0x4003687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CustomizationModelsManager.SpawnPoints m_SpawnPoints;

		[Token(Token = "0x4003688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_SetOnEnable;

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0xE5C040", Offset = "0xE5C040", VA = "0xE5C040")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0xE5C068", Offset = "0xE5C068", VA = "0xE5C068")]
		public void Set()
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0xE5C088", Offset = "0xE5C088", VA = "0xE5C088")]
		public UIModelSpawnPointSetter()
		{
		}
	}
	[Token(Token = "0x20006C6")]
	[RequireComponent(typeof(RectTransform))]
	public class UINotification : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20006C7")]
		public enum TitleMsg
		{
			[Token(Token = "0x400368F")]
			LOADOUT_UNLOCK,
			[Token(Token = "0x4003690")]
			LOADOUT_COINS,
			[Token(Token = "0x4003691")]
			LOADOUT_OVERLOAD
		}

		[Token(Token = "0x4003689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UINotificationItem prefab;

		[Token(Token = "0x400368A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float messageLifetime;

		[Token(Token = "0x400368B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LanguageText[] messages;

		[Token(Token = "0x400368C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform rectTransform;

		[Token(Token = "0x400368D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<UINotificationItem> pool;

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0xE5C098", Offset = "0xE5C098", VA = "0xE5C098")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0xE5C0E8", Offset = "0xE5C0E8", VA = "0xE5C0E8")]
		public void ShowMessage(string message)
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0xE5C4B4", Offset = "0xE5C4B4", VA = "0xE5C4B4")]
		public void ShowMessage(int id)
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0xE5C118", Offset = "0xE5C118", VA = "0xE5C118")]
		private UINotificationItem GetFromPool()
		{
			return null;
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0xE5C5C4", Offset = "0xE5C5C4", VA = "0xE5C5C4")]
		private void UpdateLayout()
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0xE5C7AC", Offset = "0xE5C7AC", VA = "0xE5C7AC")]
		public UINotification()
		{
		}
	}
	[Token(Token = "0x20006C8")]
	public class UINotificationItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Dependencies")]
		[SerializeField]
		private TextMeshProUGUI tmpro;

		[Token(Token = "0x4003693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UIMovementSmoother content;

		[Token(Token = "0x4003694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4003695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Header("Settings")]
		private Vector2 startOffset;

		[Token(Token = "0x4003696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float fadeOutTime;

		[Token(Token = "0x4003697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lifeTime;

		[Token(Token = "0x4003698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lifeStart;

		[Token(Token = "0x4003699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool fading;

		[Token(Token = "0x400369A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private System.Action despawnCallback;

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0xE5C830", Offset = "0xE5C830", VA = "0xE5C830")]
		public void Init(System.Action callback)
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0xE5C434", Offset = "0xE5C434", VA = "0xE5C434")]
		public void Setup(string message, float lifeTime)
		{
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0xE5C838", Offset = "0xE5C838", VA = "0xE5C838")]
		private void Update()
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0xE5C790", Offset = "0xE5C790", VA = "0xE5C790")]
		public void UpdatePosition()
		{
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0xE5C930", Offset = "0xE5C930", VA = "0xE5C930")]
		public UINotificationItem()
		{
		}
	}
	[Token(Token = "0x20006C9")]
	public class WeaponNameRankDisplay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400369B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_WeaponName;

		[Token(Token = "0x400369C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_Rank;

		[Token(Token = "0x400369D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_Kills;

		[Token(Token = "0x400369E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider m_ProgressSlider;

		[Token(Token = "0x400369F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LanguageText m_KillLabelText;

		[Token(Token = "0x40036A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LanguageText m_MaxLevelText;

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0xE5C98C", Offset = "0xE5C98C", VA = "0xE5C98C")]
		public void Set(string name, int rank, int kills, int currentRankKills, int nextRankKills)
		{
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0xE5CC54", Offset = "0xE5CC54", VA = "0xE5CC54")]
		public WeaponNameRankDisplay()
		{
		}
	}
	[Token(Token = "0x20006CA")]
	public class MatchEndExpCoinSummary : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40036A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup m_CanvasGroup;

		[Token(Token = "0x40036A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_ExpText;

		[Token(Token = "0x40036A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_CoinsText;

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0xE5CC5C", Offset = "0xE5CC5C", VA = "0xE5CC5C")]
		public void SetData(int exp, int coins)
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0xE5CCD4", Offset = "0xE5CCD4", VA = "0xE5CCD4")]
		public void Show()
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0xE5CD0C", Offset = "0xE5CD0C", VA = "0xE5CD0C")]
		public MatchEndExpCoinSummary()
		{
		}
	}
	[Token(Token = "0x20006CB")]
	public class MatchRewardsUI : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006CC")]
		public class Translations
		{
			[Token(Token = "0x40036B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LanguageText m_KillsText;

			[Token(Token = "0x40036B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LanguageText m_BotKillsText;

			[Token(Token = "0x40036B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageText m_HeadshotText;

			[Token(Token = "0x40036BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageText m_FFA1Text;

			[Token(Token = "0x40036BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LanguageText m_FFA2Text;

			[Token(Token = "0x40036BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LanguageText m_FFA3Text;

			[Token(Token = "0x40036BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LanguageText m_SNDWText;

			[Token(Token = "0x40036BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public LanguageText m_TDMWText;

			[Token(Token = "0x40036BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public LanguageText m_RoundWinText;

			[Token(Token = "0x40036C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LanguageText m_BombPlantText;

			[Token(Token = "0x40036C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public LanguageText m_BombDefuseText;

			[Token(Token = "0x40036C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public LanguageText m_EXPShort;

			[Token(Token = "0x40036C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LanguageText m_AssistsText;

			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xE5E3A8", Offset = "0xE5E3A8", VA = "0xE5E3A8")]
			public Translations()
			{
			}
		}

		[Token(Token = "0x40036A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Rank Display")]
		private RankEXPBar m_RankEXPBar;

		[Token(Token = "0x40036A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_RankIconImage;

		[Token(Token = "0x40036A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerExpGainSummary m_ExpGainSummary;

		[Token(Token = "0x40036A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WeaponProgressSummary m_WpnRankSummary;

		[Token(Token = "0x40036A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnlocksDisplay m_UnlocksDisplay;

		[Token(Token = "0x40036A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MatchEndExpCoinSummary m_EndSummary;

		[Token(Token = "0x40036AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RewardsUISFX m_SFX;

		[Token(Token = "0x40036AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Settings")]
		[SerializeField]
		private float m_StartingDelay;

		[Token(Token = "0x40036AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_PlayerExpDuration;

		[Token(Token = "0x40036AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_MinPlayerExpDuration;

		[Token(Token = "0x40036AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_WeaponRankDuration;

		[Token(Token = "0x40036AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_CurrentRank;

		[Token(Token = "0x40036B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerStats m_PlayerStats;

		[Token(Token = "0x40036B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerStats m_SessionStats;

		[Token(Token = "0x40036B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PlayerRankConfig m_RankConfig;

		[Token(Token = "0x40036B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayerRankLevels m_RankLevels;

		[Token(Token = "0x40036B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UIAnimation[] m_StatsAnimation;

		[Token(Token = "0x40036B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ItemUnlockUI[] m_ItemUnlocks;

		[Token(Token = "0x40036B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Space]
		[SerializeField]
		private Translations m_Texts;

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0xE5CD14", Offset = "0xE5CD14", VA = "0xE5CD14")]
		public void Init(PlayerStats savedStats)
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0xE5CE9C", Offset = "0xE5CE9C", VA = "0xE5CE9C")]
		public void ShowRewards(PlayerStats sessionStats, int gameType)
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0xE5E060", Offset = "0xE5E060", VA = "0xE5E060")]
		private void ShowWeaponRanks()
		{
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0xE5D454", Offset = "0xE5D454", VA = "0xE5D454")]
		private List<string> GetExpGainTexts(PlayerRankConfig.XPReward xpRewards, PlayerRankConfig.CoinsReward coinsRewards)
		{
			return null;
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0xE5E394", Offset = "0xE5E394", VA = "0xE5E394")]
		public MatchRewardsUI()
		{
		}
	}
	[Token(Token = "0x20006CD")]
	public class PlayerExpGainSummary : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40036C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setup")]
		[SerializeField]
		private PlayerExpGainSummaryItem itemPrefab;

		[Token(Token = "0x40036C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Settings")]
		private float interval;

		[Token(Token = "0x40036C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float animDuration;

		[Token(Token = "0x40036C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerExpGainSummaryItem[] items;

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0xE5E3B0", Offset = "0xE5E3B0", VA = "0xE5E3B0")]
		public void PreSpawn(List<string> texts)
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0xE5E714", Offset = "0xE5E714", VA = "0xE5E714")]
		public void ShowItems(float startDelay)
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0xE5E9AC", Offset = "0xE5E9AC", VA = "0xE5E9AC")]
		public void ExitItems()
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0xE5EB14", Offset = "0xE5EB14", VA = "0xE5EB14")]
		public PlayerExpGainSummary()
		{
		}
	}
	[Token(Token = "0x20006CE")]
	public class PlayerExpGainSummaryItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40036C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Setup")]
		private RectTransform m_Container;

		[Token(Token = "0x40036C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_Tmpro;

		[Token(Token = "0x40036CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image[] images;

		[Token(Token = "0x40036CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Settings")]
		[SerializeField]
		private Vector3 animOffsetEntry;

		[Token(Token = "0x40036CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 animOffsetExit;

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0xE5E580", Offset = "0xE5E580", VA = "0xE5E580")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0xE5E78C", Offset = "0xE5E78C", VA = "0xE5E78C")]
		public void Show(float delay, float duration)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0xE5EA14", Offset = "0xE5EA14", VA = "0xE5EA14")]
		public void Exit(float delay, float duration)
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0xE5E5A4", Offset = "0xE5E5A4", VA = "0xE5E5A4")]
		public void Hide()
		{
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0xE5EB1C", Offset = "0xE5EB1C", VA = "0xE5EB1C")]
		public PlayerExpGainSummaryItem()
		{
		}
	}
	[Token(Token = "0x20006CF")]
	public class RankEXPBar : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40036CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Setup")]
		private Image expFill;

		[Token(Token = "0x40036CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image rankIcon;

		[Token(Token = "0x40036CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI rankText;

		[Token(Token = "0x40036D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI expText;

		[Token(Token = "0x40036D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerRankIcons rankIconsList;

		[Token(Token = "0x40036D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve fillEasing;

		[Token(Token = "0x40036D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Settings")]
		[SerializeField]
		private float maxDurationPerXP;

		[Token(Token = "0x40036D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Header("Rank icon animation")]
		[SerializeField]
		private float scale;

		[Token(Token = "0x40036D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Header("Events")]
		private IntUnityEvent onRankUp;

		[Token(Token = "0x40036D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatUnityEvent onFillChange;

		[Token(Token = "0x40036D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int currentXp;

		[Token(Token = "0x40036D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private System.Action rankReachedCallback;

		[Token(Token = "0x40036D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> ranksToCallbackAt;

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0xE5EB24", Offset = "0xE5EB24", VA = "0xE5EB24")]
		public void Init(int currentRank, int currentXP, int currentLevelXP, int nextLevelXP)
		{
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0xE5EE14", Offset = "0xE5EE14", VA = "0xE5EE14")]
		public void SetCallback(System.Action callback, List<int> ranks)
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0xE5EE1C", Offset = "0xE5EE1C", VA = "0xE5EE1C")]
		public float Fill(int expGained, float duration, float delay, PlayerRankLevels playerRankLevels, float minDuration)
		{
			return default(float);
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0xE5EC70", Offset = "0xE5EC70", VA = "0xE5EC70")]
		private void UpdateRankText(int rank)
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0xE5ED5C", Offset = "0xE5ED5C", VA = "0xE5ED5C")]
		private void UpdateProgressBar(float exp, int currentLevelExp, int nextLevelExp)
		{
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0xE5ECBC", Offset = "0xE5ECBC", VA = "0xE5ECBC")]
		private void UpdateEXPText(int currentXP, int nextXP)
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0xE5EBB0", Offset = "0xE5EBB0", VA = "0xE5EBB0")]
		private void SetRankIcon(Sprite s, bool animate = true)
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0xE5F180", Offset = "0xE5F180", VA = "0xE5F180")]
		public RankEXPBar()
		{
		}
	}
	[Token(Token = "0x20006D1")]
	public class UnlockItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40036E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setup")]
		[SerializeField]
		private CanvasGroup m_CanvasGroup;

		[Token(Token = "0x40036E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_Icon;

		[Token(Token = "0x40036E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_Border;

		[Token(Token = "0x40036E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI m_Label;

		[Token(Token = "0x40036E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI m_SecondaryLabel;

		[Token(Token = "0x40036E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform m_Container;

		[Token(Token = "0x40036E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color m_WeaponColor;

		[Token(Token = "0x40036E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color m_AttachmentColor;

		[Token(Token = "0x40036E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Settings")]
		[SerializeField]
		private AnimationCurve m_ScaleEase;

		[Token(Token = "0x40036E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 m_AnimStartingScale;

		[Token(Token = "0x40036EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_AnimDuration;

		[Token(Token = "0x40036EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityEvent m_OnShow;

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0xE5F574", Offset = "0xE5F574", VA = "0xE5F574")]
		public void Init(Sprite sprite, string label, bool isWeapon, string weaponName = "")
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0xE5F6B4", Offset = "0xE5F6B4", VA = "0xE5F6B4")]
		public void Hide()
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0xE5F6E0", Offset = "0xE5F6E0", VA = "0xE5F6E0")]
		public void Show()
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0xE5F8FC", Offset = "0xE5F8FC", VA = "0xE5F8FC")]
		public void SetEvents(UnityEvent onShow)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0xE5F904", Offset = "0xE5F904", VA = "0xE5F904")]
		public UnlockItem()
		{
		}
	}
	[Token(Token = "0x20006D3")]
	public class UnlocksDisplay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40036EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Setup")]
		private UnlockItem m_GunUnlockPrefab;

		[Token(Token = "0x40036EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnlockItem m_AttachmentUnlockPrefab;

		[Token(Token = "0x40036F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LoadoutIconList m_WeaponIcons;

		[Token(Token = "0x40036F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LoadoutIconList m_AttachmentIcons;

		[Token(Token = "0x40036F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LoadoutIconList m_ScopeIcons;

		[Token(Token = "0x40036F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private WeaponStatsList m_WeaponStats;

		[Token(Token = "0x40036F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WeaponAddonList m_Attachments;

		[Token(Token = "0x40036F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WeaponAddonList m_NormalScopes;

		[Token(Token = "0x40036F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private WeaponAddonList m_SniperScopes;

		[Token(Token = "0x40036F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform m_Container;

		[Token(Token = "0x40036F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent m_OnUnlockShow;

		[Token(Token = "0x40036F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<UnlockItem> unlockItems;

		[Token(Token = "0x40036FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int lastShown;

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0xE5F9A8", Offset = "0xE5F9A8", VA = "0xE5F9A8")]
		public void Init(BitVector32 weaponUnlocks, BitArray[] attachmentUnlocks)
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0xE5FF28", Offset = "0xE5FF28", VA = "0xE5FF28")]
		public void ShowNext()
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0xE5FF8C", Offset = "0xE5FF8C", VA = "0xE5FF8C")]
		public UnlocksDisplay()
		{
		}
	}
	[Token(Token = "0x20006D4")]
	public class WeaponProgressItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40036FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_Icon;

		[Token(Token = "0x40036FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_Label;

		[Token(Token = "0x40036FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_ExpText;

		[Token(Token = "0x40036FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider m_ProgressBar;

		[Token(Token = "0x40036FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform m_Content;

		[Token(Token = "0x4003700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Settings")]
		private Vector3 m_AnimOffsetEntry;

		[Token(Token = "0x4003701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve m_FillEasing;

		[Token(Token = "0x4003702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IntUnityEvent m_OnRankUp;

		[Token(Token = "0x4003703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IntUnityEvent m_OnKillsChanged;

		[Token(Token = "0x4003704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_CurrentKills;

		[Token(Token = "0x4003705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> m_KillsToCallbackAt;

		[Token(Token = "0x4003706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private System.Action m_KillsReachedCallback;

		[Token(Token = "0x4003707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScrollRect m_ScrollRect;

		[Token(Token = "0x4003708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_IndexToScrollAt;

		[Token(Token = "0x4003709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0xE5FF94", Offset = "0xE5FF94", VA = "0xE5FF94")]
		public void Init(Sprite icon, string label, int currentKills, int nextLevelKills, int currentLevelKills)
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0xE60168", Offset = "0xE60168", VA = "0xE60168")]
		public void Hide()
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0xE60194", Offset = "0xE60194", VA = "0xE60194")]
		public void Show(int[] wpnRankKills, int sessionKills, float delay, float slideDuration, float fillDuration)
		{
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0xE6050C", Offset = "0xE6050C", VA = "0xE6050C")]
		public void SetCallback(List<int> atKills, System.Action callback)
		{
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0xE60514", Offset = "0xE60514", VA = "0xE60514")]
		public void BindScrollRect(ScrollRect scroll, int idToScrollFrom)
		{
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0xE60520", Offset = "0xE60520", VA = "0xE60520")]
		public void SetEvents(IntUnityEvent onRankUp, IntUnityEvent onKillChange)
		{
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0xE60084", Offset = "0xE60084", VA = "0xE60084")]
		private void UpdateExpText(int currentKills, int nextLevelKills)
		{
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0xE60124", Offset = "0xE60124", VA = "0xE60124")]
		private void UpdateProgressBar(float kills, int currentLevelKills, int nextLevelKills)
		{
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0xE60528", Offset = "0xE60528", VA = "0xE60528")]
		public WeaponProgressItem()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	public class WeaponProgressSummary : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WeaponProgressItem m_ItemPrefab;

		[Token(Token = "0x4003712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WeaponStatsList m_WpnStatList;

		[Token(Token = "0x4003713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LoadoutIconList m_WpnIconList;

		[Token(Token = "0x4003714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScrollRect m_ScrollRect;

		[Token(Token = "0x4003715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Animation durations")]
		[SerializeField]
		private float m_MaxSlideDuration;

		[Token(Token = "0x4003716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_MaxFillDurationPerKill;

		[Token(Token = "0x4003717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_MaxPerItemDelay;

		[Token(Token = "0x4003718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Events")]
		[SerializeField]
		private IntUnityEvent m_OnRankUp;

		[Token(Token = "0x4003719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private IntUnityEvent m_OnKillsChanged;

		[Token(Token = "0x400371A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<WeaponProgressItem> items;

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0xE608AC", Offset = "0xE608AC", VA = "0xE608AC")]
		public bool Init(int[] weaponRankKills, int[] currentKills, int[] sessionKills)
		{
			return default(bool);
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0xE60CB8", Offset = "0xE60CB8", VA = "0xE60CB8")]
		public void SetKillMilestoneCallback(System.Action callback, List<int>[] killMilestones)
		{
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0xE60D98", Offset = "0xE60D98", VA = "0xE60D98")]
		public void Show(float startDelay, float duration, int[] weaponRankKills, int[] sessionKills)
		{
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0xE60FF0", Offset = "0xE60FF0", VA = "0xE60FF0")]
		public WeaponProgressSummary()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	[CreateAssetMenu(fileName = "New TMP Sprite Asset Collection", menuName = "Alvo/TMP Sprite Atlas Collection")]
	public class TMProAtlasCollection : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006D8")]
		public class PlatformAtlas
		{
			[Token(Token = "0x400371F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Platform m_Platform;

			[Token(Token = "0x4003720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_SpriteAsset m_SpriteAsset;

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xE61158", Offset = "0xE61158", VA = "0xE61158")]
			public PlatformAtlas()
			{
			}
		}

		[Token(Token = "0x400371B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_SpriteAsset[] spriteAssets;

		[Token(Token = "0x400371C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_SpriteAsset defaultAsset;

		[Token(Token = "0x400371D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlatformAtlas[] m_PlatformAtlasRelation;

		[Token(Token = "0x400371E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Platform, TMP_SpriteAsset> m_platformAtlasDictionary;

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0xE60FF8", Offset = "0xE60FF8", VA = "0xE60FF8")]
		public TMP_SpriteAsset GetAsset(int i)
		{
			return null;
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0xE61150", Offset = "0xE61150", VA = "0xE61150")]
		public TMProAtlasCollection()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	[RequireComponent(typeof(TextMeshProUGUI))]
	public class TMProAtlasSetter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI textMesh;

		[Token(Token = "0x4003722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMProAtlasCollection atlasCollection;

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0xE61160", Offset = "0xE61160", VA = "0xE61160")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0xE6122C", Offset = "0xE6122C", VA = "0xE6122C")]
		public TMProAtlasSetter()
		{
		}
	}
	[Token(Token = "0x20006DA")]
	public class UIBreathingFade : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x4003724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_WaveLength;

		[Token(Token = "0x4003725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_MinValue;

		[Token(Token = "0x4003726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_MaxValue;

		[Token(Token = "0x4003727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color m_OgColor;

		[Token(Token = "0x4003728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_ValueDiff;

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0xE61234", Offset = "0xE61234", VA = "0xE61234")]
		private void Start()
		{
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0xE61274", Offset = "0xE61274", VA = "0xE61274")]
		private void Update()
		{
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0xE61300", Offset = "0xE61300", VA = "0xE61300")]
		public UIBreathingFade()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	public class UIHoverBlocker : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4003729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_Blocked;

		[Token(Token = "0x400372A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool callExit;

		[Token(Token = "0x400372B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PointerEventData ed;

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0xE61308", Offset = "0xE61308", VA = "0xE61308")]
		private void Update()
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0xE61374", Offset = "0xE61374", VA = "0xE61374", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0xE61384", Offset = "0xE61384", VA = "0xE61384", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0xE6143C", Offset = "0xE6143C", VA = "0xE6143C")]
		public UIHoverBlocker()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	public class UIHoverHighlight : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x400372C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject highlight;

		[Token(Token = "0x400372D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Selectable m_selectable;

		[Token(Token = "0x6002903")]
		[Address(RVA = "0xE61444", Offset = "0xE61444", VA = "0xE61444")]
		private void Start()
		{
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0xE6149C", Offset = "0xE6149C", VA = "0xE6149C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0xE61520", Offset = "0xE61520", VA = "0xE61520", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0xE615F4", Offset = "0xE615F4", VA = "0xE615F4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0xE61688", Offset = "0xE61688", VA = "0xE61688", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0xE616E8", Offset = "0xE616E8", VA = "0xE616E8")]
		public UIHoverHighlight()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	[RequireComponent(typeof(RectTransform))]
	public class UIMovementSmoother : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400372E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform targetPos;

		[Token(Token = "0x400372F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float snapMagnitude;

		[Token(Token = "0x4003730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4003731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectTransform;

		[Token(Token = "0x4003732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 globalPosition;

		[Token(Token = "0x6002909")]
		[Address(RVA = "0xE616F0", Offset = "0xE616F0", VA = "0xE616F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0xE61740", Offset = "0xE61740", VA = "0xE61740")]
		public void Update()
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0xE618CC", Offset = "0xE618CC", VA = "0xE618CC")]
		public void SetOffset(Vector3 offset)
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0xE6193C", Offset = "0xE6193C", VA = "0xE6193C")]
		public UIMovementSmoother()
		{
		}
	}
	[Token(Token = "0x20006DE")]
	public class UITimedMovement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_StartTime;

		[Token(Token = "0x4003734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_MovementDuration;

		[Token(Token = "0x4003735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve m_MovementCurve;

		[Token(Token = "0x4003736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_EndPosition;

		[Token(Token = "0x600290D")]
		[Address(RVA = "0xE61950", Offset = "0xE61950", VA = "0xE61950")]
		private void Start()
		{
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0xE619FC", Offset = "0xE619FC", VA = "0xE619FC")]
		public void SetDelay(float d)
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0xE61A04", Offset = "0xE61A04", VA = "0xE61A04")]
		public UITimedMovement()
		{
		}
	}
	[Token(Token = "0x20006DF")]
	public class VrKillstreakUISetter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LoadoutIconList m_KillstreakIcons;

		[Token(Token = "0x4003738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image[] m_KillstreakImages;

		[Token(Token = "0x4003739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerLocalData m_PlayerLocalData;

		[Token(Token = "0x6002910")]
		[Address(RVA = "0xE61A0C", Offset = "0xE61A0C", VA = "0xE61A0C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0xE61AF0", Offset = "0xE61AF0", VA = "0xE61AF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0xE61BCC", Offset = "0xE61BCC", VA = "0xE61BCC")]
		public void UpdateIcons()
		{
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0xE61FB4", Offset = "0xE61FB4", VA = "0xE61FB4")]
		public VrKillstreakUISetter()
		{
		}
	}
	[Token(Token = "0x20006E0")]
	public class AutoLanguageSetter : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006E1")]
		public struct LanguageIndex
		{
			[Token(Token = "0x400373D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemLanguage systemLanguage;

			[Token(Token = "0x400373E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string languageKey;
		}

		[Token(Token = "0x400373A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageIndex[] languageIndices;

		[Token(Token = "0x400373B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string defaultAndroidLanguage;

		[Token(Token = "0x400373C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string defaultPicoLanguage;

		[Token(Token = "0x6002914")]
		[Address(RVA = "0xE6200C", Offset = "0xE6200C", VA = "0xE6200C")]
		public int GetLanguageBySystem()
		{
			return default(int);
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0xE62150", Offset = "0xE62150", VA = "0xE62150")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0xE6267C", Offset = "0xE6267C", VA = "0xE6267C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0xE62770", Offset = "0xE62770", VA = "0xE62770")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0xE62864", Offset = "0xE62864", VA = "0xE62864")]
		private void SetUseDefaultLanguage()
		{
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0xE62578", Offset = "0xE62578", VA = "0xE62578")]
		private int GetUserSavedLanguage()
		{
			return default(int);
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0xE628F8", Offset = "0xE628F8", VA = "0xE628F8")]
		public AutoLanguageSetter()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	public class LoadoutAttachmentSelectionPanel : LoadoutSelectionPanel<WeaponAddonData, StoreItemUI>
	{
		[Token(Token = "0x400373F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StoreItemUI m_NoneSelectionItemPrefab;

		[Token(Token = "0x4003740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LoadoutIconList m_AttachmentIcons;

		[Token(Token = "0x4003741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LoadoutIconList m_ScopesIcons;

		[Token(Token = "0x4003742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LoadoutIconList m_ReticleIcons;

		[Token(Token = "0x4003743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayerRankConfig m_RankConfig;

		[Token(Token = "0x4003744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerLoadoutsManager m_LoadoutManager;

		[Token(Token = "0x4003745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private WeaponAddonList m_ToShowList;

		[Token(Token = "0x4003746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LoadoutIconList m_ToShowIcons;

		[Token(Token = "0x4003747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WeaponEquipmentUnlockList m_ToShowUnlocks;

		[Token(Token = "0x4003748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<PlayerRankConfig.EquipmentUnlock> m_ToShowEquipments;

		[Token(Token = "0x4003749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Items m_Weapon;

		[Token(Token = "0x400374A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_PlayerCoins;

		[Token(Token = "0x400374B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int m_WeaponId;

		[Token(Token = "0x400374C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private BitArray m_PurchasedAttachments;

		[Token(Token = "0x400374D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private BitArray m_UnlockedAttachments;

		[Token(Token = "0x400374E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private StoreItemUI m_NoneSelectionItem;

		[Token(Token = "0x600291B")]
		[Address(RVA = "0xE6296C", Offset = "0xE6296C", VA = "0xE6296C")]
		public void SetDependencies(PlayerRankConfig rankConfig, LoadoutIconList attachmentIcons, LoadoutIconList scopeIcons, LoadoutIconList reticleIcons)
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0xE629E4", Offset = "0xE629E4", VA = "0xE629E4")]
		public void SetToShow(PlayerStats playerStats, Func<int> selectedItemId, bool attachment, Items weapon, int parentFilter = -1)
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0xE62C28", Offset = "0xE62C28", VA = "0xE62C28", Slot = "8")]
		public override void Show(int page)
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0xE63070", Offset = "0xE63070", VA = "0xE63070")]
		private void SpawnNoneItem()
		{
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0xE631EC", Offset = "0xE631EC", VA = "0xE631EC")]
		private StoreItemUI SpawnItem(WeaponAddonData data)
		{
			return null;
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0xE633EC", Offset = "0xE633EC", VA = "0xE633EC")]
		private bool IsEquipmentOrChildSelected(PlayerRankConfig.EquipmentUnlock unlock)
		{
			return default(bool);
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0xE62ADC", Offset = "0xE62ADC", VA = "0xE62ADC")]
		protected void SetVariables(int weaponId, PlayerStats playerStats, Func<int> selectedItemId, int parentFilter)
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0xE6358C", Offset = "0xE6358C", VA = "0xE6358C", Slot = "9")]
		protected override void OnItemSelect(int itemId)
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0xE637A4", Offset = "0xE637A4", VA = "0xE637A4", Slot = "10")]
		protected override void OnItemBuy(int itemId)
		{
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0xE639B8", Offset = "0xE639B8", VA = "0xE639B8")]
		public LoadoutAttachmentSelectionPanel()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	public class LoadoutBuyingPanel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400374F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_WeaponNameText;

		[Token(Token = "0x4003750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_MessageText;

		[Token(Token = "0x4003751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_CostText;

		[Token(Token = "0x4003752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LanguageText m_MessageLanguageText;

		[Token(Token = "0x4003753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerLocalData m_LocalData;

		[Token(Token = "0x4003754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WeaponList m_Weapons;

		[Token(Token = "0x4003755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SkinsList m_Skins;

		[Token(Token = "0x4003756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerPerkDatabase m_Perks;

		[Token(Token = "0x4003757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TacticalGearList m_tacticalGear;

		[Token(Token = "0x4003758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_ItemId;

		[Token(Token = "0x4003759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_ParentId;

		[Token(Token = "0x400375A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<int, int> onConfirmedCallback;

		[Token(Token = "0x400375B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action<int, int> onConfirmedAndSelectCallback;

		[Token(Token = "0x6002926")]
		[Address(RVA = "0xE63A98", Offset = "0xE63A98", VA = "0xE63A98")]
		public void SetDependencies(PlayerLocalData localData, WeaponList weapons, SkinsList skins, PlayerPerkDatabase perks, TacticalGearList tacticalGear)
		{
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0xE63AA8", Offset = "0xE63AA8", VA = "0xE63AA8")]
		public void Init()
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0xE63AAC", Offset = "0xE63AAC", VA = "0xE63AAC")]
		public void SetToBuyWeapon(int wid, int cost)
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0xE63BF0", Offset = "0xE63BF0", VA = "0xE63BF0")]
		public void SetToBuyAttachment(int wid, int iid, int cost)
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0xE63D2C", Offset = "0xE63D2C", VA = "0xE63D2C")]
		public void SetToBuyScope(int wid, int sid, int cost)
		{
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0xE63E68", Offset = "0xE63E68", VA = "0xE63E68")]
		public void SetToBuySkin(int wid, int sid, int cost)
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0xE63FF4", Offset = "0xE63FF4", VA = "0xE63FF4")]
		public void SetToBuyPerk(int pid, int cost)
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0xE64190", Offset = "0xE64190", VA = "0xE64190")]
		public void SetToBuyTacticalGear(int _id, int _cost)
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0xE64324", Offset = "0xE64324", VA = "0xE64324")]
		public void SetToBuy(int iid, string name, string message, int cost)
		{
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0xE643B4", Offset = "0xE643B4", VA = "0xE643B4")]
		public void SetCallback(Action<int, int> confirmCallback, Action<int, int> confirmAndSelectCallback)
		{
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0xE643BC", Offset = "0xE643BC", VA = "0xE643BC")]
		public void OnYesClicked()
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0xE643DC", Offset = "0xE643DC", VA = "0xE643DC")]
		public void OnYesAndSelectedClicked()
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0xE63B84", Offset = "0xE63B84", VA = "0xE63B84")]
		private string GetWeaponName(int wid)
		{
			return null;
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0xE640CC", Offset = "0xE640CC", VA = "0xE640CC")]
		private string GetPerkName(int pid)
		{
			return null;
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0xE63F78", Offset = "0xE63F78", VA = "0xE63F78")]
		private string GetSkinName(int wid, int sid)
		{
			return null;
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0xE64268", Offset = "0xE64268", VA = "0xE64268")]
		private string GetTacticalGearName(int _id)
		{
			return null;
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0xE643FC", Offset = "0xE643FC", VA = "0xE643FC")]
		public LoadoutBuyingPanel()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	public class LoadoutCharacterSelectionPanel : LoadoutSelectionPanel<int, CharacterItemUI>
	{
		[Token(Token = "0x400375C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CharacterSkinStoreList m_CharacterList;

		[Token(Token = "0x400375D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LoadoutIconList m_CharacterIconList;

		[Token(Token = "0x400375E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerStats m_PlayerStats;

		[Token(Token = "0x400375F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BitVector32 m_CharPurchases;

		[Token(Token = "0x4003760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_PlayerCoins;

		[Token(Token = "0x6002937")]
		[Address(RVA = "0xE64404", Offset = "0xE64404", VA = "0xE64404")]
		public void Init(PlayerStats playerStats, Func<int> selectedIndex)
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0xE64444", Offset = "0xE64444", VA = "0xE64444", Slot = "8")]
		public override void Show(int page)
		{
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0xE648E4", Offset = "0xE648E4", VA = "0xE648E4")]
		private CharacterItemUI SpawnItem(int index)
		{
			return null;
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0xE64A88", Offset = "0xE64A88", VA = "0xE64A88", Slot = "9")]
		protected override void OnItemSelect(int itemId)
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0xE64C48", Offset = "0xE64C48", VA = "0xE64C48", Slot = "10")]
		protected override void OnItemBuy(int itemId)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0xE64D28", Offset = "0xE64D28", VA = "0xE64D28")]
		public LoadoutCharacterSelectionPanel()
		{
		}
	}
	[Token(Token = "0x20006E5")]
	public class LoadoutDetailedEditPanel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WeaponNameRankDisplay m_WeaponData;

		[Token(Token = "0x4003762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_SkinName;

		[Token(Token = "0x4003763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_AttachmentName;

		[Token(Token = "0x4003764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI m_ScopeName;

		[Token(Token = "0x4003765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI m_MeleeName;

		[Token(Token = "0x4003766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LoadoutStatsPanel m_WeaponStatsPanel;

		[Token(Token = "0x4003767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image[] m_SkinImages;

		[Token(Token = "0x4003768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_ReticleButton;

		[Token(Token = "0x4003769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image m_ReticleImage;

		[Token(Token = "0x400376A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_MeleeSection;

		[Token(Token = "0x400376B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image m_MeleeSkinImage;

		[Token(Token = "0x400376C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private DisplayModelInHand m_WeaponHand;

		[Token(Token = "0x400376D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private DisplayModelInHand m_AttachmentHand;

		[Token(Token = "0x400376E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private DisplayModelInHand m_ScopeHand;

		[Token(Token = "0x400376F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private DisplayModelInHand m_MeleeHand;

		[Token(Token = "0x4003770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[Space]
		private CustomizationModelsManager m_Customization;

		[Token(Token = "0x4003771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private UIModelSpawnPointSetter m_PointSetter;

		[Token(Token = "0x4003772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LoadoutIconList m_ReticleIcons;

		[Token(Token = "0x4003773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WeaponStatsList m_WeaponStats;

		[Token(Token = "0x4003774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WeaponList m_Weapons;

		[Token(Token = "0x4003775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PlayerRankConfig m_RankConfig;

		[Token(Token = "0x4003776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private WeaponList m_Grenades;

		[Token(Token = "0x4003777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SkinsList m_Skins;

		[Token(Token = "0x4003778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SkinIconList m_SkinIcons;

		[Token(Token = "0x4003779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TacticalGearList m_TacticalGear;

		[Token(Token = "0x400377A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private LanguageText[] m_StatLabels;

		[Token(Token = "0x400377B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private PlayerLocalData m_LocalData;

		[Token(Token = "0x400377C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LoadoutAndShopUI m_LoadoutUI;

		[Token(Token = "0x400377D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Items m_CurrentItem;

		[Token(Token = "0x400377E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_ShowingPrimary;

		[Token(Token = "0x600293D")]
		[Address(RVA = "0xE64D70", Offset = "0xE64D70", VA = "0xE64D70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0xE6536C", Offset = "0xE6536C", VA = "0xE6536C")]
		public void SetDependencies(WeaponStatsList weaponStats, WeaponList weapons, WeaponList grenades, SkinsList skins, SkinIconList skinIcons, TacticalGearList tacticalGear, PlayerRankConfig rankConfig, LoadoutAndShopUI loadoutAndShopUI, LanguageText[] statLabels)
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0xE65388", Offset = "0xE65388", VA = "0xE65388")]
		public void Init(PlayerLocalData localData)
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0xE65390", Offset = "0xE65390", VA = "0xE65390")]
		public void SetToShow(bool primary)
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0xE64D98", Offset = "0xE64D98", VA = "0xE64D98")]
		public void Show()
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0xE65588", Offset = "0xE65588", VA = "0xE65588")]
		public void OpenWeaponSelection()
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0xE6579C", Offset = "0xE6579C", VA = "0xE6579C")]
		public void OpenMeleeSelection()
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xE659A8", Offset = "0xE659A8", VA = "0xE659A8")]
		public void OpenSkinSelection()
		{
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0xE65BB4", Offset = "0xE65BB4", VA = "0xE65BB4")]
		public void OpenMeleeSkinSelection()
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xE65DC0", Offset = "0xE65DC0", VA = "0xE65DC0")]
		public void OpenAttachmentSelection()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0xE65FCC", Offset = "0xE65FCC", VA = "0xE65FCC")]
		public void OpenScopeSelection()
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0xE661D8", Offset = "0xE661D8", VA = "0xE661D8")]
		public void OpenReticleSelection()
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0xE6540C", Offset = "0xE6540C", VA = "0xE6540C")]
		private string GetSkinName(int wid, int sid)
		{
			return null;
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0xE663E4", Offset = "0xE663E4", VA = "0xE663E4")]
		public LoadoutDetailedEditPanel()
		{
		}
	}
	[Token(Token = "0x20006E6")]
	public class LoadoutGrenadeSelectionPanel : LoadoutSelectionPanel<Items, StoreItemUI>
	{
		[Token(Token = "0x400377F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WeaponList m_GrenadeList;

		[Token(Token = "0x4003780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LoadoutIconList m_GrenadeIcons;

		[Token(Token = "0x600294B")]
		[Address(RVA = "0xE663EC", Offset = "0xE663EC", VA = "0xE663EC")]
		public void SetDependencies(WeaponList grenades, LoadoutIconList icons)
		{
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0xE663F4", Offset = "0xE663F4", VA = "0xE663F4")]
		public void SetSelected(Func<int> selectedItem)
		{
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0xE66430", Offset = "0xE66430", VA = "0xE66430", Slot = "8")]
		public override void Show(int page)
		{
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0xE6665C", Offset = "0xE6665C", VA = "0xE6665C")]
		private StoreItemUI SpawnItem(Items item)
		{
			return null;
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0xE66778", Offset = "0xE66778", VA = "0xE66778", Slot = "9")]
		protected override void OnItemSelect(int itemId)
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0xE66928", Offset = "0xE66928", VA = "0xE66928")]
		public LoadoutGrenadeSelectionPanel()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	public class LoadoutPanel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WeaponNameRankDisplay m_PrimaryWeaponData;

		[Token(Token = "0x4003784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WeaponNameRankDisplay m_SecondaryWeaponData;

		[Token(Token = "0x4003785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_SkinName;

		[Token(Token = "0x4003786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI m_AttachmentName;

		[Token(Token = "0x4003787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI m_ScopeName;

		[Token(Token = "0x4003788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI m_GrenadeName;

		[Token(Token = "0x4003789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI m_Grenade2Name;

		[Token(Token = "0x400378A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI m_TacticalGearName;

		[Token(Token = "0x400378B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI m_PerkName;

		[Token(Token = "0x400378C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI m_Perk2Name;

		[Token(Token = "0x400378D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image m_SkinImage;

		[Token(Token = "0x400378E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image m_PerkImage;

		[Token(Token = "0x400378F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image m_Perk2Image;

		[Token(Token = "0x4003790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle[] m_LoadoutTabToggles;

		[Token(Token = "0x4003791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private KillstreakSelection m_KillstreakSelection;

		[Token(Token = "0x4003792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public MenuCharacterDisplay m_CharacterDisplay;

		[Token(Token = "0x4003793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Space]
		[SerializeField]
		private CustomizationModelsManager m_Customization;

		[Token(Token = "0x4003794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LoadoutStatsPanel m_PrimaryWeaponStats;

		[Token(Token = "0x4003795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private LoadoutStatsPanel m_SecondaryWeaponStats;

		[Token(Token = "0x4003796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[Space]
		private LanguageText[] m_StatsPanelLabels;

		[Token(Token = "0x4003797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[Space]
		private GameObject m_Granade2Panel;

		[Token(Token = "0x4003798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private UIModelSpawnPointSetter m_ModelSpawnPointSetter;

		[Token(Token = "0x4003799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WeaponStatsList m_WeaponStats;

		[Token(Token = "0x400379A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private WeaponList m_Weapons;

		[Token(Token = "0x400379B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private PlayerRankConfig m_RankConfig;

		[Token(Token = "0x400379C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WeaponList m_Grenades;

		[Token(Token = "0x400379D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SkinsList m_Skins;

		[Token(Token = "0x400379E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SkinIconList m_SkinIcons;

		[Token(Token = "0x400379F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TacticalGearList m_TacticalGearList;

		[Token(Token = "0x40037A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private PlayerPerkDatabase m_PerkDatabase;

		[Token(Token = "0x40037A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private LoadoutAndShopUI m_LoadoutAndShopUI;

		[Token(Token = "0x40037A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private PlayerLocalData m_PlayerLocalData;

		[Token(Token = "0x40037A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_CurrentLoadoutIndex;

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xE669F4", Offset = "0xE669F4", VA = "0xE669F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0xE671FC", Offset = "0xE671FC", VA = "0xE671FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xE67218", Offset = "0xE67218", VA = "0xE67218")]
		public void SetDependencies(WeaponStatsList weaponStats, WeaponList weapons, WeaponList grenades, TacticalGearList tacticalGear, SkinsList skins, SkinIconList skinIcons, PlayerRankConfig rankConfig, PlayerPerkDatabase perks, LanguageText[] statLabels, LoadoutAndShopUI loadoutAndShopUI)
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xE6723C", Offset = "0xE6723C", VA = "0xE6723C")]
		public void Init(PlayerLocalData playerLocalData)
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xE66A8C", Offset = "0xE66A8C", VA = "0xE66A8C")]
		public void ChangeLoadoutIndex(int idx)
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xE674C4", Offset = "0xE674C4", VA = "0xE674C4")]
		public void ChangeLoadoutIndexCallback()
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0xE673BC", Offset = "0xE673BC", VA = "0xE673BC")]
		private void SetLoadoutNumber(int n)
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xE67534", Offset = "0xE67534", VA = "0xE67534")]
		private string GetWeaponName(int wid)
		{
			return null;
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xE6742C", Offset = "0xE6742C", VA = "0xE6742C")]
		private string GetSkinName(int wid, int sid)
		{
			return null;
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0xE675A0", Offset = "0xE675A0", VA = "0xE675A0")]
		private string GetGrenadeName(int gid)
		{
			return null;
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xE6760C", Offset = "0xE6760C", VA = "0xE6760C")]
		public LoadoutPanel()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	public class LoadoutPerkSelectionPanel : LoadoutSelectionPanel<Perk, PerkLoadoutItemUI>
	{
		[Token(Token = "0x40037A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerPerkDatabase perkDatabase;

		[Token(Token = "0x40037A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerStats playerStats;

		[Token(Token = "0x40037A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject perkDescPanel;

		[Token(Token = "0x40037A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshProUGUI perkDescTooltip;

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xE67614", Offset = "0xE67614", VA = "0xE67614")]
		public void SetDependencies(PlayerPerkDatabase _perkDatabase)
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0xE67648", Offset = "0xE67648", VA = "0xE67648")]
		public void SetToShow(Func<int> selectedItemId, PlayerStats _playerStats)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xE6768C", Offset = "0xE6768C", VA = "0xE6768C", Slot = "8")]
		public override void Show(int page)
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0xE67EA4", Offset = "0xE67EA4", VA = "0xE67EA4", Slot = "9")]
		protected override void OnItemSelect(int itemId)
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0xE680E4", Offset = "0xE680E4", VA = "0xE680E4", Slot = "10")]
		protected override void OnItemBuy(int perkId)
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xE67AE8", Offset = "0xE67AE8", VA = "0xE67AE8")]
		private PerkLoadoutItemUI SpawnItem(PerkID perkId)
		{
			return null;
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0xE68258", Offset = "0xE68258", VA = "0xE68258")]
		private void ShowDesc(string tooltip)
		{
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0xE68300", Offset = "0xE68300", VA = "0xE68300")]
		private void HideDesc()
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0xE68378", Offset = "0xE68378", VA = "0xE68378")]
		public LoadoutPerkSelectionPanel()
		{
		}
	}
	[Token(Token = "0x20006EB")]
	public class LoadoutSelectionPanel<T1, T2> : UnityEngine.MonoBehaviour, ILoadoutPanelPageable where T2 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40037AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T2 m_ItemPrefab;

		[Token(Token = "0x40037AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected int m_ItemsPerPage;

		[Token(Token = "0x40037AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Func<int> m_CurrentIdGetter;

		[Token(Token = "0x40037AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int m_SelectedItemId;

		[Token(Token = "0x40037AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int m_CurrentPage;

		[Token(Token = "0x40037AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int m_ParentFilter;

		[Token(Token = "0x40037B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T2> m_Pool;

		[Token(Token = "0x40037B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<T1> m_ItemsShowing;

		[Token(Token = "0x40037B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public UINotification notificator;

		[Token(Token = "0x40037B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<int> m_OnItemBuy;

		[Token(Token = "0x40037B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<int> m_OnItemSelect;

		[Token(Token = "0x600296B")]
		public virtual void Show(int page)
		{
		}

		[Token(Token = "0x600296C")]
		public void SetSelectBuyCallbacks(Action<int> onSelect, Action<int> onBuy)
		{
		}

		[Token(Token = "0x600296D")]
		protected T2 GetFromPool()
		{
			return null;
		}

		[Token(Token = "0x600296E")]
		protected void DespawnAllItems()
		{
		}

		[Token(Token = "0x600296F")]
		protected virtual void OnItemSelect(int itemId)
		{
		}

		[Token(Token = "0x6002970")]
		protected virtual void OnItemBuy(int itemId)
		{
		}

		[Token(Token = "0x6002971")]
		public (int, int) GetPages()
		{
			return default((int, int));
		}

		[Token(Token = "0x6002972")]
		public void NextPage()
		{
		}

		[Token(Token = "0x6002973")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x6002974")]
		public void RefreshPage()
		{
		}

		[Token(Token = "0x6002975")]
		public LoadoutSelectionPanel()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class LoadoutSelectionPanelManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006ED")]
		private class SectionHeader
		{
			[Token(Token = "0x40037C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x40037C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string label;

			[Token(Token = "0x40037C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageText languageText;

			[Token(Token = "0x40037C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string append;

			[Token(Token = "0x170004BA")]
			public string Text
			{
				[Token(Token = "0x6002983")]
				[Address(RVA = "0xE691F0", Offset = "0xE691F0", VA = "0xE691F0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002981")]
			[Address(RVA = "0xE6989C", Offset = "0xE6989C", VA = "0xE6989C")]
			private SectionHeader()
			{
			}

			[Token(Token = "0x6002982")]
			[Address(RVA = "0xE68718", Offset = "0xE68718", VA = "0xE68718")]
			public SectionHeader(string _name, string _label)
			{
			}
		}

		[Token(Token = "0x20006EE")]
		public enum SelectionType
		{
			[Token(Token = "0x40037CB")]
			PRIMARY,
			[Token(Token = "0x40037CC")]
			SECONDARY,
			[Token(Token = "0x40037CD")]
			ATTACHMENT,
			[Token(Token = "0x40037CE")]
			SCOPE,
			[Token(Token = "0x40037CF")]
			GRENADE,
			[Token(Token = "0x40037D0")]
			GRENADE_SECONDARY,
			[Token(Token = "0x40037D1")]
			SKIN,
			[Token(Token = "0x40037D2")]
			RETICLE,
			[Token(Token = "0x40037D3")]
			PERK,
			[Token(Token = "0x40037D4")]
			PERK_SECONDARY,
			[Token(Token = "0x40037D5")]
			MELEE,
			[Token(Token = "0x40037D6")]
			MELEE_SKIN,
			[Token(Token = "0x40037D7")]
			TACTICAL_GEAR
		}

		[Token(Token = "0x40037B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Own References")]
		[SerializeField]
		private TextMeshProUGUI m_Header;

		[Token(Token = "0x40037B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CurvedUITMP m_HeaderCurvedUI;

		[Token(Token = "0x40037B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SectionHeader[] m_HeaderLabels;

		[Token(Token = "0x40037B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Space]
		private Button m_NextPageBtn;

		[Token(Token = "0x40037B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button m_PrevPageBtn;

		[Token(Token = "0x40037BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI m_PageText;

		[Token(Token = "0x40037BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Space]
		private LoadoutWeaponSelectionPanel m_WeaponSelection;

		[Token(Token = "0x40037BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LoadoutAttachmentSelectionPanel m_AttachmentSelection;

		[Token(Token = "0x40037BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LoadoutGrenadeSelectionPanel m_GrenadeSelection;

		[Token(Token = "0x40037BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LoadoutTacticalSelectionPanel m_TacticalSelection;

		[Token(Token = "0x40037BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LoadoutSkinSelectionPanel m_SkinSelection;

		[Token(Token = "0x40037C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LoadoutPerkSelectionPanel m_PerkSelection;

		[Token(Token = "0x40037C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[Space]
		private UINotification m_Notificator;

		[Token(Token = "0x40037C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayerLocalData m_PlayerLocalData;

		[Token(Token = "0x40037C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ILoadoutPanelPageable m_CurrentPanel;

		[Token(Token = "0x40037C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CurvedUITMP m_PageTextCurvedUI;

		[Token(Token = "0x40037C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public SelectionType weapon2SelectionType;

		[Token(Token = "0x6002976")]
		[Address(RVA = "0xE68444", Offset = "0xE68444", VA = "0xE68444")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0xE68744", Offset = "0xE68744", VA = "0xE68744")]
		public void SetDependencies(PlayerRankConfig rankConfig, WeaponStatsList weaponStats, WeaponList weaponList, WeaponList grenades, TacticalGearList tacticalGear, LoadoutIconList weaponIcons, LoadoutIconList attachmentIcons, LoadoutIconList scopeIcons, LoadoutIconList grenadeIcons, LoadoutIconList reticleIcons, SkinsList skins, SkinIconList skinIcons, CustomizationModelsManager customModels, PlayerPerkDatabase perks, LanguageText[] statLabels)
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0xE68898", Offset = "0xE68898", VA = "0xE68898")]
		public void Init(PlayerLocalData playerLocalData)
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0xE688A0", Offset = "0xE688A0", VA = "0xE688A0")]
		public void Open(SelectionType selectionType, bool isPrimary = true)
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0xE69280", Offset = "0xE69280", VA = "0xE69280")]
		public void SetSelectAndBuyCallback(SelectionType selectionType, Action<int> onSelect, Action<int> onBuy)
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0xE693C4", Offset = "0xE693C4", VA = "0xE693C4")]
		public void NextPage()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0xE6963C", Offset = "0xE6963C", VA = "0xE6963C")]
		public void PreviousPage()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0xE69750", Offset = "0xE69750", VA = "0xE69750")]
		public void RefreshPage()
		{
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0xE68920", Offset = "0xE68920", VA = "0xE68920")]
		private void ChangeSelectionTypeScreen(SelectionType type, bool isPrimary)
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0xE694D8", Offset = "0xE694D8", VA = "0xE694D8")]
		private void UpdatePageNavigation(int currentPage, int totalPages)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0xE6988C", Offset = "0xE6988C", VA = "0xE6988C")]
		public LoadoutSelectionPanelManager()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	public interface ILoadoutPanelPageable
	{
		[Token(Token = "0x6002993")]
		(int, int) GetPages();

		[Token(Token = "0x6002994")]
		void NextPage();

		[Token(Token = "0x6002995")]
		void PrevPage();

		[Token(Token = "0x6002996")]
		void RefreshPage();
	}
	[Token(Token = "0x20006F2")]
	public class LoadoutSkinSelectionPanel : LoadoutSelectionPanel<Skins, SkinSelectionElement>
	{
		[Token(Token = "0x40037E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinsList m_SkinsList;

		[Token(Token = "0x40037E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SkinIconList m_Icons;

		[Token(Token = "0x40037E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CustomizationModelsManager m_CustomizationModelsManager;

		[Token(Token = "0x40037E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayerStats m_PlayerStats;

		[Token(Token = "0x40037E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_WeaponId;

		[Token(Token = "0x40037E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_PlayerCoins;

		[Token(Token = "0x40037E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BitVector32 m_PurchasedSkins;

		[Token(Token = "0x6002997")]
		[Address(RVA = "0xE6888C", Offset = "0xE6888C", VA = "0xE6888C")]
		public void SetDependencies(SkinsList skins, SkinIconList skinIcons, CustomizationModelsManager customizationModelsManager)
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0xE69844", Offset = "0xE69844", VA = "0xE69844")]
		public void SetToShow(int weaponId, Func<int> selectedItemId, PlayerStats playerStats)
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0xE69B98", Offset = "0xE69B98", VA = "0xE69B98", Slot = "8")]
		public override void Show(int page)
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0xE69FF4", Offset = "0xE69FF4", VA = "0xE69FF4")]
		private SkinSelectionElement SpawnItem(Skins skin)
		{
			return null;
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0xE6A198", Offset = "0xE6A198", VA = "0xE6A198", Slot = "9")]
		protected override void OnItemSelect(int itemId)
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0xE6A358", Offset = "0xE6A358", VA = "0xE6A358", Slot = "10")]
		protected override void OnItemBuy(int itemId)
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0xE6A440", Offset = "0xE6A440", VA = "0xE6A440")]
		public LoadoutSkinSelectionPanel()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class LoadoutStatsPanel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40037E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LoadoutStatsPanelItem itemPrefab;

		[Token(Token = "0x40037EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<LoadoutStatsPanelItem> pool;

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0xE654A4", Offset = "0xE654A4", VA = "0xE654A4")]
		public void ShowStats(LanguageText[] labels, float[] values)
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0xE6A5A8", Offset = "0xE6A5A8", VA = "0xE6A5A8")]
		private LoadoutStatsPanelItem GetFromPool()
		{
			return null;
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0xE6A50C", Offset = "0xE6A50C", VA = "0xE6A50C")]
		private void DespawnAll()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0xE6A788", Offset = "0xE6A788", VA = "0xE6A788")]
		public LoadoutStatsPanel()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	public class LoadoutStatsPanelItem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40037EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI label;

		[Token(Token = "0x40037EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider slider;

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0xE6A804", Offset = "0xE6A804", VA = "0xE6A804")]
		public LoadoutStatsPanelItem()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	public class LoadoutWeaponSelectionPanel : LoadoutSelectionPanel<Items, StoreItemUI>
	{
		[Token(Token = "0x40037ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StoreItemUI m_MeleePrefab;

		[Token(Token = "0x40037EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WeaponStatsList m_WeaponStats;

		[Token(Token = "0x40037EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WeaponList m_WeaponList;

		[Token(Token = "0x40037F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LoadoutIconList m_WeaponIcons;

		[Token(Token = "0x40037F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayerRankConfig m_RankConfig;

		[Token(Token = "0x40037F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LanguageText[] m_StatLabels;

		[Token(Token = "0x40037F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int[] m_CurrentItemTypes;

		[Token(Token = "0x40037F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PlayerStats m_PlayerStats;

		[Token(Token = "0x40037F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BitVector32 m_WeaponsUnlocked;

		[Token(Token = "0x40037F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<StoreItemUI> m_MeleePool;

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0xE6887C", Offset = "0xE6887C", VA = "0xE6887C")]
		public void SetDependencies(WeaponStatsList weaponStats, WeaponList weaponList, LoadoutIconList weaponIcons, PlayerRankConfig rankConfig, LanguageText[] statLabels)
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0xE69804", Offset = "0xE69804", VA = "0xE69804")]
		public void Init(int[] itemType, PlayerStats playerStats, Func<int> selectedItemId)
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0xE6A80C", Offset = "0xE6A80C", VA = "0xE6A80C", Slot = "8")]
		public override void Show(int page)
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0xE6ACE8", Offset = "0xE6ACE8", VA = "0xE6ACE8")]
		protected StoreItemUI SpawnItem(int itemNumber)
		{
			return null;
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0xE6B2A0", Offset = "0xE6B2A0", VA = "0xE6B2A0", Slot = "9")]
		protected override void OnItemSelect(int itemId)
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0xE6B594", Offset = "0xE6B594", VA = "0xE6B594", Slot = "10")]
		protected override void OnItemBuy(int itemId)
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0xE6B0C0", Offset = "0xE6B0C0", VA = "0xE6B0C0")]
		private StoreItemUI GetFromMeleePool()
		{
			return null;
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0xE6B780", Offset = "0xE6B780", VA = "0xE6B780")]
		public LoadoutWeaponSelectionPanel()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	public class LoadoutAndShopUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20006F8")]
		private enum State
		{
			[Token(Token = "0x4003811")]
			CURRENT_LOADOUT,
			[Token(Token = "0x4003812")]
			SELECTION,
			[Token(Token = "0x4003813")]
			BUYING,
			[Token(Token = "0x4003814")]
			EDITING
		}

		[Token(Token = "0x20006FD")]
		[CompilerGenerated]
		private sealed class <OnRecievedPlayerStats>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400381E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400381F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadoutAndShopUI <>4__this;

			[Token(Token = "0x170004BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029F7")]
				[Address(RVA = "0xE6DB60", Offset = "0xE6DB60", VA = "0xE6DB60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029F9")]
				[Address(RVA = "0xE6DBA8", Offset = "0xE6DBA8", VA = "0xE6DBA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029F4")]
			[Address(RVA = "0xE6D794", Offset = "0xE6D794", VA = "0xE6D794")]
			[DebuggerHidden]
			public <OnRecievedPlayerStats>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x60029F5")]
			[Address(RVA = "0xE6D9B0", Offset = "0xE6D9B0", VA = "0xE6D9B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029F6")]
			[Address(RVA = "0xE6D9B4", Offset = "0xE6D9B4", VA = "0xE6D9B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029F8")]
			[Address(RVA = "0xE6DB68", Offset = "0xE6DB68", VA = "0xE6DB68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40037F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Local References")]
		private LoadoutPanel m_LoadoutPanel;

		[Token(Token = "0x40037F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LoadoutSelectionPanelManager m_SelectionPanel;

		[Token(Token = "0x40037F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LoadoutBuyingPanel m_BuyingPanel;

		[Token(Token = "0x40037FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LoadoutDetailedEditPanel m_EditPanel;

		[Token(Token = "0x40037FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Dependencies")]
		[SerializeField]
		private CustomizationModelsManager m_CustomModels;

		[Token(Token = "0x40037FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerRankConfig m_RankConfig;

		[Token(Token = "0x40037FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WeaponStatsList m_WeaponStats;

		[Token(Token = "0x40037FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WeaponList m_Weapons;

		[Token(Token = "0x40037FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private WeaponList m_Grenades;

		[Token(Token = "0x4003800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TacticalGearList m_TacticalGear;

		[Token(Token = "0x4003801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SkinsList m_Skins;

		[Token(Token = "0x4003802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Space]
		[Space]
		private LoadoutIconList m_WeaponIcons;

		[Token(Token = "0x4003803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LoadoutIconList m_AttachmentIcons;

		[Token(Token = "0x4003804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LoadoutIconList m_ScopeIcons;

		[Token(Token = "0x4003805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private LoadoutIconList m_GrenadeIcons;

		[Token(Token = "0x4003806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SkinIconList m_SkinIcons;

		[Token(Token = "0x4003807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private LoadoutIconList m_ReticleIcons;

		[Token(Token = "0x4003808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[Space]
		private LanguageText[] m_StatsPanelLabels;

		[Token(Token = "0x4003809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private PlayerLocalData m_LocalData;

		[Token(Token = "0x400380A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PlayerLoadoutsManager m_LoadoutManager;

		[Token(Token = "0x400380B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PlayerPerkDatabase m_Perks;

		[Token(Token = "0x400380C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private State m_State;

		[Token(Token = "0x400380D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private State m_PrevState;

		[Token(Token = "0x400380E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public LoadoutSelectionPanelManager.SelectionType weapon2SelectionType;

		[Token(Token = "0x400380F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool hasLoadoutInitialize;

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0xE6B8A4", Offset = "0xE6B8A4", VA = "0xE6B8A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0xE6BB28", Offset = "0xE6BB28", VA = "0xE6BB28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0xE6BD24", Offset = "0xE6BD24", VA = "0xE6BD24")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0xE6BE4C", Offset = "0xE6BE4C", VA = "0xE6BE4C")]
		public void OpenCurrentLoadout()
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0xE655B4", Offset = "0xE655B4", VA = "0xE655B4")]
		public void OpenPrimaryWeaponSelection()
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0xE656A4", Offset = "0xE656A4", VA = "0xE656A4")]
		public void OpenSecondaryWeaponSelection()
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0xE657C8", Offset = "0xE657C8", VA = "0xE657C8")]
		public void OpenPrimaryMeleeWeaponSelection()
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0xE658B8", Offset = "0xE658B8", VA = "0xE658B8")]
		public void OpenSecondaryMeleeWeaponSelection()
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0xE659D4", Offset = "0xE659D4", VA = "0xE659D4")]
		public void OpenPrimarySkinSelection()
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0xE65AC4", Offset = "0xE65AC4", VA = "0xE65AC4")]
		public void OpenSecondarySkinSelection()
		{
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0xE65BE0", Offset = "0xE65BE0", VA = "0xE65BE0")]
		public void OpenPrimaryMeleeSkinSelection()
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0xE65CD0", Offset = "0xE65CD0", VA = "0xE65CD0")]
		public void OpenSecondaryMeleeSkinSelection()
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0xE65DEC", Offset = "0xE65DEC", VA = "0xE65DEC")]
		public void OpenAttachmentSelection()
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xE65EDC", Offset = "0xE65EDC", VA = "0xE65EDC")]
		public void OpenSeconaryAttachmentSelection()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0xE65FF8", Offset = "0xE65FF8", VA = "0xE65FF8")]
		public void OpenScopeSelection()
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0xE660E8", Offset = "0xE660E8", VA = "0xE660E8")]
		public void OpenSecondaryScopeSelection()
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0xE66204", Offset = "0xE66204", VA = "0xE66204")]
		public void OpenReticleSelection()
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0xE662F4", Offset = "0xE662F4", VA = "0xE662F4")]
		public void OpenSecondaryReticleSelection()
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0xE6BFA8", Offset = "0xE6BFA8", VA = "0xE6BFA8")]
		public void OpenGrenadeSelection()
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0xE6C064", Offset = "0xE6C064", VA = "0xE6C064")]
		public void OpenSecondaryGrenadeSelection()
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0xE6C120", Offset = "0xE6C120", VA = "0xE6C120")]
		public void OpenPrimaryPerkSelectionPanel()
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0xE6C20C", Offset = "0xE6C20C", VA = "0xE6C20C")]
		public void OpenSecondaryPerkSelectionPanel()
		{
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0xE6C2F8", Offset = "0xE6C2F8", VA = "0xE6C2F8")]
		public void OpenTacticalGearSelectionPanel()
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0xE6C3E4", Offset = "0xE6C3E4", VA = "0xE6C3E4")]
		public void OpenPrimaryDetailedEditPanel()
		{
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0xE6C410", Offset = "0xE6C410", VA = "0xE6C410")]
		public void OpenSecondaryDetailedEditPanel()
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0xE6C43C", Offset = "0xE6C43C", VA = "0xE6C43C")]
		public void BackScreen()
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0xE6C474", Offset = "0xE6C474", VA = "0xE6C474")]
		private void BuyPrimaryWeaponRequest(int wid)
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0xE6C6AC", Offset = "0xE6C6AC", VA = "0xE6C6AC")]
		private void BuySecondaryWeaponRequest(int wid)
		{
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0xE6C784", Offset = "0xE6C784", VA = "0xE6C784")]
		private void BuyPrimaryMeleeWeaponRequest(int wid)
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0xE6C850", Offset = "0xE6C850", VA = "0xE6C850")]
		private void BuySecondaryMeleeWeaponRequest(int wid)
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0xE6C54C", Offset = "0xE6C54C", VA = "0xE6C54C")]
		private void BuyWeaponRequest(int wid, Action<int, int> confirmCallback, Action<int, int> confirmSelectCallback)
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0xE6C91C", Offset = "0xE6C91C", VA = "0xE6C91C")]
		private void BuyPrimarySkinRequest(int sid)
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0xE6CB50", Offset = "0xE6CB50", VA = "0xE6CB50")]
		private void BuySecondarySkinRequest(int sid)
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0xE6C924", Offset = "0xE6C924", VA = "0xE6C924")]
		private void BuySkinRequest(int sid, bool primary)
		{
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xE6CB58", Offset = "0xE6CB58", VA = "0xE6CB58")]
		private void BuyMeleeSkinRequest(int sid, bool primary)
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0xE6CD84", Offset = "0xE6CD84", VA = "0xE6CD84")]
		private void BuyAttachmentRequest(int aid, bool isPrimary)
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xE6CFDC", Offset = "0xE6CFDC", VA = "0xE6CFDC")]
		private void BuyScopeRequest(int sid, bool isPrimary)
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0xE6D240", Offset = "0xE6D240", VA = "0xE6D240")]
		private void BuyPerkRequest(int pid, bool primarySlot)
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0xE6D4B8", Offset = "0xE6D4B8", VA = "0xE6D4B8")]
		private void BuyTacticalGearRequest(int _id)
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0xE6D6E4", Offset = "0xE6D6E4", VA = "0xE6D6E4")]
		private void BuyAndSelectTacticalGear(int _id)
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xE6D730", Offset = "0xE6D730", VA = "0xE6D730")]
		private void ReceivePlayerStats(AzureRequestTypes type, string received, int requId)
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0xE6BAC0", Offset = "0xE6BAC0", VA = "0xE6BAC0")]
		[IteratorStateMachine(typeof(<OnRecievedPlayerStats>d__66))]
		private IEnumerator OnRecievedPlayerStats()
		{
			return null;
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xE6BE80", Offset = "0xE6BE80", VA = "0xE6BE80")]
		private void ChangeScreen(State state)
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0xE6D7BC", Offset = "0xE6D7BC", VA = "0xE6D7BC")]
		private void OnLocalPlayerPerkChanged()
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xE6D7F8", Offset = "0xE6D7F8", VA = "0xE6D7F8")]
		public LoadoutAndShopUI()
		{
		}
	}
	[Token(Token = "0x20006FE")]
	public class VrLoadOuts : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20006FF")]
		private enum SELECTIONS
		{
			[Token(Token = "0x4003859")]
			none,
			[Token(Token = "0x400385A")]
			primaryWeapon,
			[Token(Token = "0x400385B")]
			secondaryWeapon,
			[Token(Token = "0x400385C")]
			scope,
			[Token(Token = "0x400385D")]
			attachment,
			[Token(Token = "0x400385E")]
			granadeOne,
			[Token(Token = "0x400385F")]
			granadeTwo
		}

		[Token(Token = "0x2000700")]
		[CompilerGenerated]
		private sealed class <DisplayLoadoutCoroutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrLoadOuts <>4__this;

			[Token(Token = "0x170004BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A1F")]
				[Address(RVA = "0xE6F8A4", Offset = "0xE6F8A4", VA = "0xE6F8A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A21")]
				[Address(RVA = "0xE6F8EC", Offset = "0xE6F8EC", VA = "0xE6F8EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0xE6F6D0", Offset = "0xE6F6D0", VA = "0xE6F6D0")]
			[DebuggerHidden]
			public <DisplayLoadoutCoroutine>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0xE6F6F8", Offset = "0xE6F6F8", VA = "0xE6F6F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0xE6F6FC", Offset = "0xE6F6FC", VA = "0xE6F6FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A20")]
			[Address(RVA = "0xE6F8AC", Offset = "0xE6F8AC", VA = "0xE6F8AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerLocalData localData;

		[Token(Token = "0x4003822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCharacterSelection charaterSelection;

		[Token(Token = "0x4003823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CustomizationModelsManager customizationManager;

		[Token(Token = "0x4003824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space]
		public ToggleGroup buttonsLoadoutGroup;

		[Token(Token = "0x4003825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle[] buttonsLoadOut;

		[Token(Token = "0x4003826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		public GameObject[] cacheSkinBtns;

		[Token(Token = "0x4003827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SkinSelectionElement[] cacheSkinElements;

		[Token(Token = "0x4003828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text primaryLbl;

		[Token(Token = "0x4003829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text secondaryLbl;

		[Token(Token = "0x400382A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TMP_Text scopeLbl;

		[Token(Token = "0x400382B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TMP_Text attachmentLbl;

		[Token(Token = "0x400382C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TMP_Text granadeOneLbl;

		[Token(Token = "0x400382D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TMP_Text granadeTwoLbl;

		[Token(Token = "0x400382E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TMP_Text titleLbl;

		[Token(Token = "0x400382F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TMP_Text loadoutNameLbl;

		[Token(Token = "0x4003830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TMP_Text currentSkinLbl;

		[Token(Token = "0x4003831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject loadOutMainPnl;

		[Token(Token = "0x4003832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject gunSelectPnl;

		[Token(Token = "0x4003833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject selectMainWeaponPnl;

		[Token(Token = "0x4003834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject mainWeaponPageOnePnl;

		[Token(Token = "0x4003835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject mainWeaponPageTwoPnl;

		[Token(Token = "0x4003836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject selectSecondaryWeaponPnl;

		[Token(Token = "0x4003837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject selectSigthPnl;

		[Token(Token = "0x4003838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject selectAttachmentPnl;

		[Token(Token = "0x4003839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject selectGranadePnl;

		[Token(Token = "0x400383A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject selectSkinPnl;

		[Token(Token = "0x400383B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Image selectedSkin;

		[Token(Token = "0x400383C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject selectSightPnl1;

		[Token(Token = "0x400383D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject selectSightPnl2;

		[Token(Token = "0x400383E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject selectSightPnlSniper;

		[Token(Token = "0x400383F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private SELECTIONS currentSelection;

		[Token(Token = "0x4003840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool init;

		[Token(Token = "0x4003841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public DisplayLoadoutInventory m_DisplayLoadoutInventory;

		[Token(Token = "0x4003842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[Space]
		public ClothingCustomization clothCustomization;

		[Token(Token = "0x4003843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public StartupManager startupManager;

		[Token(Token = "0x4003844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public TMP_Text bodyTypeLbl;

		[Token(Token = "0x4003845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public TMP_Text hatLbl;

		[Token(Token = "0x4003846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public TMP_Text maskLbl;

		[Token(Token = "0x4003847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public TMP_Text eyewearLbl;

		[Token(Token = "0x4003848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TMP_Text suitLbl;

		[Token(Token = "0x4003849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Header("Attachment Store Pnls")]
		[Space]
		public GameObject lasserAttachmentGo;

		[Token(Token = "0x400384A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject bayoneteAttachmentGo;

		[Token(Token = "0x400384B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[Space]
		[Header("Wepon stats sliders")]
		public Slider statMainSldr1;

		[Token(Token = "0x400384C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Slider statMainSldr2;

		[Token(Token = "0x400384D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Slider statMainSldr3;

		[Token(Token = "0x400384E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Slider statMainSldr4;

		[Token(Token = "0x400384F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Slider statMainSldr5;

		[Token(Token = "0x4003850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Slider statMainSldr6;

		[Token(Token = "0x4003851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Slider statSecondarySldr1;

		[Token(Token = "0x4003852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Slider statSecondarySldr2;

		[Token(Token = "0x4003853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Slider statSecondarySldr3;

		[Token(Token = "0x4003854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Slider statSecondarySldr4;

		[Token(Token = "0x4003855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Slider statSecondarySldr5;

		[Token(Token = "0x4003856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Slider statSecondarySldr6;

		[Token(Token = "0x4003857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private WaitForSeconds wait;

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0xE6DBB0", Offset = "0xE6DBB0", VA = "0xE6DBB0")]
		private void Start()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0xE6DCC0", Offset = "0xE6DCC0", VA = "0xE6DCC0")]
		public void DisplayLoadOut()
		{
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0xE6DCE8", Offset = "0xE6DCE8", VA = "0xE6DCE8")]
		[IteratorStateMachine(typeof(<DisplayLoadoutCoroutine>d__58))]
		private IEnumerator DisplayLoadoutCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0xE6DD50", Offset = "0xE6DD50", VA = "0xE6DD50")]
		public void HideLoadOut()
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0xE6E214", Offset = "0xE6E214", VA = "0xE6E214")]
		public void OnlyDisplayMainPnl()
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0xE6E560", Offset = "0xE6E560", VA = "0xE6E560")]
		public void OnlyDisplaySelectedLoadOutModels()
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0xE6DD58", Offset = "0xE6DD58", VA = "0xE6DD58")]
		private void DisplayCurrentSelectedLoadout(bool dontShowModels = false)
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0xE6E29C", Offset = "0xE6E29C", VA = "0xE6E29C")]
		private void HideAllPnls(bool keepMainPnl = false)
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0xE6E628", Offset = "0xE6E628", VA = "0xE6E628")]
		public void OnChangePrimaryWeapon()
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0xE6E6B4", Offset = "0xE6E6B4", VA = "0xE6E6B4")]
		public void OnNextPage()
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0xE6E6EC", Offset = "0xE6E6EC", VA = "0xE6E6EC")]
		public void OnGoBack()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0xE6E724", Offset = "0xE6E724", VA = "0xE6E724")]
		public void OnNextScopePage()
		{
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0xE6E75C", Offset = "0xE6E75C", VA = "0xE6E75C")]
		public void OnScopeGoBack()
		{
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0xE6E794", Offset = "0xE6E794", VA = "0xE6E794")]
		public void OnChangeSecondaryWeapon()
		{
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0xE6E7F0", Offset = "0xE6E7F0", VA = "0xE6E7F0")]
		public void OnChangeScope()
		{
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0xE6E970", Offset = "0xE6E970", VA = "0xE6E970")]
		public void OnChangeAttachment()
		{
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0xE6EA24", Offset = "0xE6EA24", VA = "0xE6EA24")]
		public void OnChangeGranadeOne(int index)
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0xE6EA94", Offset = "0xE6EA94", VA = "0xE6EA94")]
		public void OnSelectWeapon(int weaponIndex)
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0xE6EC9C", Offset = "0xE6EC9C", VA = "0xE6EC9C")]
		public void EquipWeapon(int id, bool r)
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0xE6EE98", Offset = "0xE6EE98", VA = "0xE6EE98")]
		public void OnSelectScope(int scopeIndex)
		{
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0xE6EF4C", Offset = "0xE6EF4C", VA = "0xE6EF4C")]
		public void OnSelectGranade(int granadeIndex)
		{
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0xE6F050", Offset = "0xE6F050", VA = "0xE6F050")]
		public void OnSelectAttachment(int attackmentIndex)
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0xE6F104", Offset = "0xE6F104", VA = "0xE6F104")]
		public void OnChangePrimarySkin()
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0xE6F12C", Offset = "0xE6F12C", VA = "0xE6F12C")]
		public void OnChangeSkin(int weaponIndex)
		{
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0xE6E624", Offset = "0xE6E624", VA = "0xE6E624")]
		private void SetCharacterPartLbls()
		{
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0xE6F1C0", Offset = "0xE6F1C0", VA = "0xE6F1C0")]
		public string GetClothName(int id)
		{
			return null;
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0xE6F258", Offset = "0xE6F258", VA = "0xE6F258")]
		public void SwitchClothPositive(int index)
		{
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0xE6F3D4", Offset = "0xE6F3D4", VA = "0xE6F3D4")]
		public void SwitchClothNegative(int index)
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0xE6F260", Offset = "0xE6F260", VA = "0xE6F260")]
		public void SwitchGear(int index, bool positive)
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0xE6F3DC", Offset = "0xE6F3DC", VA = "0xE6F3DC")]
		public void ChangeCurrentLoadOut(int index)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0xE6F498", Offset = "0xE6F498", VA = "0xE6F498")]
		public void SetPrimarySkin(int skinIndex)
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0xE6F53C", Offset = "0xE6F53C", VA = "0xE6F53C")]
		public void SetSkin(int skinIndex)
		{
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0xE6F65C", Offset = "0xE6F65C", VA = "0xE6F65C")]
		public void SetSkinPreview(int weaponIndex, int skinIndex)
		{
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0xE6F660", Offset = "0xE6F660", VA = "0xE6F660")]
		public VrLoadOuts()
		{
		}
	}
	[Token(Token = "0x2000701")]
	public class ArrowsSelection : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000702")]
		public class Option
		{
			[Token(Token = "0x400386A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x400386B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LanguageText nameLT;

			[Token(Token = "0x400386C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int value;

			[Token(Token = "0x6002A30")]
			[Address(RVA = "0xE6FCE4", Offset = "0xE6FCE4", VA = "0xE6FCE4")]
			public string GetName()
			{
				return null;
			}

			[Token(Token = "0x6002A31")]
			[Address(RVA = "0xE6FD68", Offset = "0xE6FD68", VA = "0xE6FD68")]
			public Option()
			{
			}
		}

		[Token(Token = "0x4003863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Option[] m_options;

		[Token(Token = "0x4003864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_value;

		[Token(Token = "0x4003865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_interactable;

		[Token(Token = "0x4003866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("UI")]
		private TextMeshProUGUI m_selectionTxt;

		[Token(Token = "0x4003867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_leftButton;

		[Token(Token = "0x4003868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button m_rightButton;

		[Token(Token = "0x4003869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Events")]
		public UnityEvent OnChange;

		[Token(Token = "0x170004BF")]
		public Option[] Options
		{
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0xE6F8F4", Offset = "0xE6F8F4", VA = "0xE6F8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		public Option SelectedOption
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0xE6F8FC", Offset = "0xE6F8FC", VA = "0xE6F8FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C1")]
		public bool Interactable
		{
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0xE6F930", Offset = "0xE6F930", VA = "0xE6F930")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0xE6F938", Offset = "0xE6F938", VA = "0xE6F938")]
			set
			{
			}
		}

		[Token(Token = "0x170004C2")]
		public int Value
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0xE6F980", Offset = "0xE6F980", VA = "0xE6F980")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0xE6F988", Offset = "0xE6F988", VA = "0xE6F988")]
			set
			{
			}
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0xE6FA8C", Offset = "0xE6FA8C", VA = "0xE6FA8C")]
		public void RightBtn()
		{
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0xE6FAE8", Offset = "0xE6FAE8", VA = "0xE6FAE8")]
		public void LeftBtn()
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0xE6FB1C", Offset = "0xE6FB1C", VA = "0xE6FB1C")]
		public void SetOptions(Option[] _options, int _current = 0)
		{
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0xE6FBC4", Offset = "0xE6FBC4", VA = "0xE6FBC4")]
		public void SetValueFromOptionValue(int _optionValue)
		{
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0xE6FAC0", Offset = "0xE6FAC0", VA = "0xE6FAC0")]
		private void UpdateSelection()
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0xE6F990", Offset = "0xE6F990", VA = "0xE6F990")]
		private void RefreshSelection()
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0xE6FC94", Offset = "0xE6FC94", VA = "0xE6FC94")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0xE6FCDC", Offset = "0xE6FCDC", VA = "0xE6FCDC")]
		public ArrowsSelection()
		{
		}
	}
	[Token(Token = "0x2000703")]
	[CreateAssetMenu(fileName = "ScoreBoardConfiguration", menuName = "Alvo/ScoreBoardConfiguration")]
	public class ScoreBoardConfiguration : ScriptableObject
	{
		[Token(Token = "0x2000704")]
		public enum BoardType
		{
			[Token(Token = "0x400387B")]
			FFA,
			[Token(Token = "0x400387C")]
			FFAMax5,
			[Token(Token = "0x400387D")]
			Teams
		}

		[Token(Token = "0x400386D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("FFA display 10 players in same row, FFAMax5 display 1 board with max of 5 players, Teams display 2 board for 5 players each table")]
		public BoardType type;

		[Token(Token = "0x400386E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(20f)]
		[Header("Table Title Ex: Team 1 - Total Kills - 21")]
		public bool displayTableHeaderName;

		[Token(Token = "0x400386F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool overrideTableHeaderName;

		[Token(Token = "0x4003870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LanguageText tableHeaderLanguage;

		[Token(Token = "0x4003871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		public bool displayTotalKills;

		[Token(Token = "0x4003872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LanguageText teamTotalKillsLanguage;

		[Token(Token = "0x4003873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(20f)]
		[Header("Table TD")]
		public bool displayAssists;

		[Token(Token = "0x4003874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite assistsSprite;

		[Token(Token = "0x4003875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool displayExtra;

		[Token(Token = "0x4003876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Sprite extra1Sprite;

		[Token(Token = "0x4003877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Space]
		public bool displayScore;

		[Token(Token = "0x4003878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Sprite scoreSprite;

		[Token(Token = "0x4003879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Space]
		[Header("Rows")]
		public bool displayRowPlayerNumber;

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0xE6FD70", Offset = "0xE6FD70", VA = "0xE6FD70")]
		public ScoreBoardConfiguration()
		{
		}
	}
	[Token(Token = "0x2000705")]
	public class ScoreBoardPanel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000706")]
		public enum Step
		{
			[Token(Token = "0x40038A1")]
			Normal_Settings,
			[Token(Token = "0x40038A2")]
			EndRound,
			[Token(Token = "0x40038A3")]
			EndOfMatch,
			[Token(Token = "0x40038A4")]
			Death,
			[Token(Token = "0x40038A5")]
			Updating
		}

		[Token(Token = "0x400387E")]
		private const int lLimitRowsTeamSize = 5;

		[Token(Token = "0x400387F")]
		private const int lLimitRowsZombieSize = 5;

		[Token(Token = "0x4003880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Step currentStep;

		[Token(Token = "0x4003881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Teams boards")]
		private GameObject m_TeamsPanel;

		[Token(Token = "0x4003882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_team2BoardGo;

		[Token(Token = "0x4003883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform m_team1Bg;

		[Token(Token = "0x4003884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScoreBoardUserRow[] m_usersRowTeam1;

		[Token(Token = "0x4003885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ScoreBoardUserRow[] m_usersRowTeam2;

		[Token(Token = "0x4003886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space]
		[SerializeField]
		private Text m_team1TableName;

		[Token(Token = "0x4003887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text m_team1KillsText;

		[Token(Token = "0x4003888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text m_team1LabelText;

		[Token(Token = "0x4003889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text m_team2TableName;

		[Token(Token = "0x400388A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text m_team2KillsText;

		[Token(Token = "0x400388B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Text m_team2LabelText;

		[Token(Token = "0x400388C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[Header("Table TD")]
		private Image m_team1AssisIcon;

		[Token(Token = "0x400388D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image m_team2AssisIcon;

		[Token(Token = "0x400388E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Image m_team1Extra1Icon;

		[Token(Token = "0x400388F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image m_team2Extra1Icon;

		[Token(Token = "0x4003890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Image m_team1ScoreIcon;

		[Token(Token = "0x4003891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Image m_team2ScoreIcon;

		[Token(Token = "0x4003892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[Header("Configurations")]
		private ScoreBoardConfiguration FFA_Config;

		[Token(Token = "0x4003893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ScoreBoardConfiguration TDM_Config;

		[Token(Token = "0x4003894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ScoreBoardConfiguration SND_Config;

		[Token(Token = "0x4003895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ScoreBoardConfiguration HP_Config;

		[Token(Token = "0x4003896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ScoreBoardConfiguration ZMB_Config;

		[Token(Token = "0x4003897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ScoreBoardConfiguration m_currentConfig;

		[Token(Token = "0x4003898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_team1OriginalPos;

		[Token(Token = "0x4003899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 m_team2OriginalPos;

		[Token(Token = "0x400389A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion m_team1OriginalRot;

		[Token(Token = "0x400389B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Quaternion m_team2OriginalRot;

		[Token(Token = "0x400389C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Header("Managers references")]
		[SerializeField]
		private EndGameSystem m_endGameSystem;

		[Token(Token = "0x400389D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private LevelManager m_levelManager;

		[Token(Token = "0x400389E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool hasUsersRowReferencesSet;

		[Token(Token = "0x400389F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private CurvedUIVertexEffect[] m_curvedUiVertexEffects;

		[Token(Token = "0x170004C3")]
		public bool IsDisplayingBoard
		{
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0xE6FD84", Offset = "0xE6FD84", VA = "0xE6FD84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004C4")]
		private Transform Board1Tf
		{
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0xE6FE08", Offset = "0xE6FE08", VA = "0xE6FE08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C5")]
		private Transform Board2Tf
		{
			[Token(Token = "0x6002A35")]
			[Address(RVA = "0xE6FE34", Offset = "0xE6FE34", VA = "0xE6FE34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0xE6FE60", Offset = "0xE6FE60", VA = "0xE6FE60")]
		public void Display(Step _step = Step.Normal_Settings)
		{
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0xE70C94", Offset = "0xE70C94", VA = "0xE70C94")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0xE70F0C", Offset = "0xE70F0C", VA = "0xE70F0C")]
		public void UpdatePlayerRowByActorId(int _actorId)
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0xE7109C", Offset = "0xE7109C", VA = "0xE7109C")]
		public void UpdateVoicesBubble(bool _checkTeam)
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0xE70398", Offset = "0xE70398", VA = "0xE70398")]
		private void ReadConfiguration(ScoreBoardConfiguration _config)
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0xE715AC", Offset = "0xE715AC", VA = "0xE715AC")]
		private void ConfigOnlyOneBoard(float _localY)
		{
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0xE71344", Offset = "0xE71344", VA = "0xE71344")]
		private void SetTransformToBothLeft()
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0xE713D0", Offset = "0xE713D0", VA = "0xE713D0")]
		private void SetTransformForEachSide()
		{
		}

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0xE71224", Offset = "0xE71224", VA = "0xE71224")]
		private void SetTransformOverPressXToRespawn()
		{
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0xE7148C", Offset = "0xE7148C", VA = "0xE7148C")]
		private void SetTransformToEndOfMatch()
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0xE71D64", Offset = "0xE71D64", VA = "0xE71D64")]
		private void SetDirtyCurveUI()
		{
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0xE71E24", Offset = "0xE71E24", VA = "0xE71E24")]
		private void SaveOriginalTransform()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0xE71644", Offset = "0xE71644", VA = "0xE71644")]
		private void SetTableHeaderLabel()
		{
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0xE719CC", Offset = "0xE719CC", VA = "0xE719CC")]
		private void SetTotalKillsLabels()
		{
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0xE7096C", Offset = "0xE7096C", VA = "0xE7096C")]
		private void UpdateTotalTeamKills(int _team1Points, int _team2Points = 0)
		{
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0xE71B48", Offset = "0xE71B48", VA = "0xE71B48")]
		private void SetAssistsLabel()
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0xE71BFC", Offset = "0xE71BFC", VA = "0xE71BFC")]
		private void SetExtraLabel()
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0xE71CB0", Offset = "0xE71CB0", VA = "0xE71CB0")]
		private void SetScoreLabel()
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0xE70284", Offset = "0xE70284", VA = "0xE70284")]
		private void SetReferencesInTeamUsersRow()
		{
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0xE705B8", Offset = "0xE705B8", VA = "0xE705B8")]
		private void FillFFA()
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0xE70590", Offset = "0xE70590", VA = "0xE70590")]
		private void FilLBothTeams()
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0xE725BC", Offset = "0xE725BC", VA = "0xE725BC")]
		private void FillTeam(ScoreBoardUserRow[] _rowsToUse, int _teamId)
		{
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0xE709E4", Offset = "0xE709E4", VA = "0xE709E4")]
		private void FillZombies()
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0xE72B14", Offset = "0xE72B14", VA = "0xE72B14")]
		private int CompareProfilesByZKills(PlayerProfile p1, PlayerProfile p2)
		{
			return default(int);
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0xE71EAC", Offset = "0xE71EAC", VA = "0xE71EAC")]
		private string GetLocationString(bool _override, LanguageText _language)
		{
			return null;
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0xE72B38", Offset = "0xE72B38", VA = "0xE72B38")]
		public ScoreBoardPanel()
		{
		}
	}
	[Token(Token = "0x2000708")]
	public class ScoreBoardUserRow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40038AB")]
		private const string kEmpyString = " ";

		[Token(Token = "0x40038AC")]
		private const string kBotLabel = "[Bot]";

		[Token(Token = "0x40038AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		[SerializeField]
		private int teamId;

		[Token(Token = "0x40038AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("References")]
		[SerializeField]
		private TMP_Text m_nameText;

		[Token(Token = "0x40038AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_playernumberGo;

		[Token(Token = "0x40038B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_killsText;

		[Token(Token = "0x40038B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_assistText;

		[Token(Token = "0x40038B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text m_DeathsText;

		[Token(Token = "0x40038B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VrInGameUIManager.playerRank m_rank;

		[Token(Token = "0x40038B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text m_score;

		[Token(Token = "0x40038B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image m_background;

		[Token(Token = "0x40038B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private VoiceButton m_voiceBtn;

		[Token(Token = "0x40038B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AlvoPingDisplay m_pingDisplay;

		[Token(Token = "0x40038B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private VrInGameUIManager.playerPerksImg m_perks;

		[Token(Token = "0x40038B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Image m_avatar;

		[Token(Token = "0x40038BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_extraLabel1;

		[Token(Token = "0x40038BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LevelManager m_levelManager;

		[Token(Token = "0x40038BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EndGameSystem m_endGameSystem;

		[Token(Token = "0x40038BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlayerData m_playerData;

		[Token(Token = "0x40038BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool m_isLocalPlayer;

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0xE72C0C", Offset = "0xE72C0C", VA = "0xE72C0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0xE71ED0", Offset = "0xE71ED0", VA = "0xE71ED0")]
		public void InitReferences(LevelManager _levelManager, EndGameSystem _endGameSystem)
		{
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0xE71ED8", Offset = "0xE71ED8", VA = "0xE71ED8")]
		public void Clean()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0xE72C10", Offset = "0xE72C10", VA = "0xE72C10")]
		private void CleanPerks()
		{
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0xE72128", Offset = "0xE72128", VA = "0xE72128")]
		public void DisplayPlayerData(PlayerProfile _playerProfile, bool _forceDisplayVoiceButton, ScoreBoardConfiguration _config)
		{
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0xE72CD0", Offset = "0xE72CD0", VA = "0xE72CD0")]
		public void UpdateKillsAssistsDeaths(int _kills, int _assits, int _deaths)
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0xE72CAC", Offset = "0xE72CAC", VA = "0xE72CAC")]
		public void UpdateScore(string _score)
		{
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0xE72C88", Offset = "0xE72C88", VA = "0xE72C88")]
		public void UpdateExtraLabel1(string _text = " ")
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0xE71150", Offset = "0xE71150", VA = "0xE71150")]
		public void UpdateVoiceBubble(bool _checkTeam)
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0xE70FC8", Offset = "0xE70FC8", VA = "0xE70FC8")]
		public bool UpdateByActorId(int _actorId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0xE72D80", Offset = "0xE72D80", VA = "0xE72D80")]
		private void SetNameSlotAndVoice(PlayerProfile _playerProfile, bool _forceDisplayVoiceButton)
		{
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0xE732A4", Offset = "0xE732A4", VA = "0xE732A4")]
		private void SetPerks(int _playerActorId, Perk _perk1, Perk _perk2, GameMode _gameMode)
		{
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0xE73478", Offset = "0xE73478", VA = "0xE73478")]
		public static string GetPlatformSprite(Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0xE73644", Offset = "0xE73644", VA = "0xE73644")]
		private void OnLocalPlayerPerkChanged()
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0xE73530", Offset = "0xE73530", VA = "0xE73530")]
		private void ForceLocalPerks()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0xE73684", Offset = "0xE73684", VA = "0xE73684")]
		private void OnOtherPlayerPerkChanged()
		{
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0xE70D64", Offset = "0xE70D64", VA = "0xE70D64")]
		public void ReleaseActions()
		{
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0xE736F0", Offset = "0xE736F0", VA = "0xE736F0")]
		public ScoreBoardUserRow()
		{
		}
	}
	[Token(Token = "0x2000709")]
	public class SpectatorTeamsPanel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40038BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform m_relativeTf;

		[Token(Token = "0x40038C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpectatorUserRow[] m_team1UserRows;

		[Token(Token = "0x40038C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpectatorUserRow[] m_team2UserRows;

		[Token(Token = "0x40038C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_positionChangeSpeed;

		[Token(Token = "0x40038C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LevelManager m_levelManager;

		[Token(Token = "0x40038C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VrInGameUIManager m_uiManager;

		[Token(Token = "0x40038C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float boardRefreshTimer;

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0xE736F8", Offset = "0xE736F8", VA = "0xE736F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0xE73794", Offset = "0xE73794", VA = "0xE73794")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0xE7395C", Offset = "0xE7395C", VA = "0xE7395C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0xE73AA8", Offset = "0xE73AA8", VA = "0xE73AA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0xE73934", Offset = "0xE73934", VA = "0xE73934")]
		private void RefreshBoards()
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0xE73CAC", Offset = "0xE73CAC", VA = "0xE73CAC")]
		private void UpdateBoard(SpectatorUserRow[] _rows, int _teamId)
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0xE740F8", Offset = "0xE740F8", VA = "0xE740F8")]
		private void ResetPositionAndRotation()
		{
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0xE741D0", Offset = "0xE741D0", VA = "0xE741D0")]
		public SpectatorTeamsPanel()
		{
		}
	}
	[Token(Token = "0x200070A")]
	public class SpectatorUserRow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40038C6")]
		private const string kEmpyString = " ";

		[Token(Token = "0x40038C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int teamId;

		[Token(Token = "0x40038C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("References")]
		[SerializeField]
		private Image m_background;

		[Token(Token = "0x40038C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_avatar;

		[Token(Token = "0x40038CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_nameText;

		[Token(Token = "0x40038CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LevelManager m_levelManager;

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0xE741E0", Offset = "0xE741E0", VA = "0xE741E0")]
		public void InitReferences(LevelManager _levelManager)
		{
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0xE73E20", Offset = "0xE73E20", VA = "0xE73E20")]
		public void Clean()
		{
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0xE73F10", Offset = "0xE73F10", VA = "0xE73F10")]
		public void DisplayPlayerData(PlayerProfile _playerProfile)
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0xE741E8", Offset = "0xE741E8", VA = "0xE741E8")]
		public SpectatorUserRow()
		{
		}
	}
	[Token(Token = "0x200070B")]
	public class ui_ProfileDisplay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40038CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image m_Avatar;

		[Token(Token = "0x40038CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text m_PlayerDisplayName;

		[Token(Token = "0x40038CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_XP;

		[Token(Token = "0x40038CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI m_AlvoCoins;

		[Token(Token = "0x40038D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI m_Level;

		[Token(Token = "0x40038D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider m_ProgessBar;

		[Token(Token = "0x40038D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image m_Rank;

		[Token(Token = "0x40038D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D m_DefaultAvatar;

		[Token(Token = "0x40038D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PlayerRankIcons m_PlayerRankIcons;

		[Token(Token = "0x40038D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LanguageText rankLT;

		[Token(Token = "0x40038D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color fidColor;

		[Token(Token = "0x40038D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VrManager m_VrManager;

		[Token(Token = "0x40038D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayerStats m_PlayerStats;

		[Token(Token = "0x40038D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int currentRank;

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0xE741F0", Offset = "0xE741F0", VA = "0xE741F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0xE7448C", Offset = "0xE7448C", VA = "0xE7448C")]
		private void UpdateProfileDisplay(Texture2D image, string playerName, PlayerStats playerStats, VrManager vrManager)
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xE74968", Offset = "0xE74968", VA = "0xE74968")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0xE74A5C", Offset = "0xE74A5C", VA = "0xE74A5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0xE74B50", Offset = "0xE74B50", VA = "0xE74B50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0xE74774", Offset = "0xE74774", VA = "0xE74774")]
		public void UpdateExp(int value)
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0xE74920", Offset = "0xE74920", VA = "0xE74920")]
		public void UpdateCoins(int value)
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0xE74C94", Offset = "0xE74C94", VA = "0xE74C94")]
		private void UpdateRankText()
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0xE74D44", Offset = "0xE74D44", VA = "0xE74D44")]
		public ui_ProfileDisplay()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public class StoreItemUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40038DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int itemId;

		[Token(Token = "0x40038DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space]
		[SerializeField]
		private TextMeshProUGUI m_NameText;

		[Token(Token = "0x40038DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Image m_Icon;

		[Token(Token = "0x40038DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LoadoutStatsPanel loadoutStatsPanel;

		[Token(Token = "0x40038DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space]
		[SerializeField]
		private CanvasGroup m_Content;

		[Token(Token = "0x40038E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_AlphaWhenNotAvailable;

		[Token(Token = "0x40038E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_UIWhenNotBought;

		[Token(Token = "0x40038E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_UIWhenSelected;

		[Token(Token = "0x40038E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Header("Locking")]
		private GameObject[] m_LockObjects;

		[Token(Token = "0x40038E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text m_ConditionText;

		[Token(Token = "0x40038E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI m_ConditionTextTmpro;

		[Token(Token = "0x40038E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_ConditionNotMetObj;

		[Token(Token = "0x40038E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[Header("Purchasing")]
		private Text m_PriceText;

		[Token(Token = "0x40038E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshProUGUI m_PriceTMPro;

		[Token(Token = "0x40038E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color m_CanBuyColor;

		[Token(Token = "0x40038EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color m_CannotBuyColor;

		[Token(Token = "0x40038EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_HasEnoughCoins;

		[Token(Token = "0x40038EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CurvedUITMP m_NameCurvedUI;

		[Token(Token = "0x40038ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CurvedUIVertexEffect m_IconCurvedUI;

		[Token(Token = "0x40038EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CurvedUIVertexEffect m_ConditionCurvedUI;

		[Token(Token = "0x40038EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Action<int> onBuy;

		[Token(Token = "0x40038F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Action<int> onSelect;

		[Token(Token = "0x40038F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool dirty;

		[Token(Token = "0x170004C6")]
		public bool IsLocked
		{
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0xE74D4C", Offset = "0xE74D4C", VA = "0xE74D4C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0xE74D54", Offset = "0xE74D54", VA = "0xE74D54")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0xE74D60", Offset = "0xE74D60", VA = "0xE74D60")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0xE74FB0", Offset = "0xE74FB0", VA = "0xE74FB0")]
		public void SetNameAndIcon(string name, Sprite icon, int id)
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0xE75094", Offset = "0xE75094", VA = "0xE75094")]
		public void SetBoughtState(bool bought)
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0xE75198", Offset = "0xE75198", VA = "0xE75198")]
		public void SetPrice(int price, bool hasEnoughCoins)
		{
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0xE752F8", Offset = "0xE752F8", VA = "0xE752F8")]
		public void SetConditionMetAndNumber(bool isMet, int n)
		{
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0xE754D0", Offset = "0xE754D0", VA = "0xE754D0")]
		public void SetSelected(bool b)
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xE754F0", Offset = "0xE754F0", VA = "0xE754F0")]
		public void SetBuyCallback(Action<int> callback)
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0xE754F8", Offset = "0xE754F8", VA = "0xE754F8")]
		public void SetSelectCallback(Action<int> callback)
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0xE75500", Offset = "0xE75500", VA = "0xE75500")]
		public void OnBuyClicked()
		{
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0xE75528", Offset = "0xE75528", VA = "0xE75528")]
		public void OnSelectedClicked()
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0xE74D80", Offset = "0xE74D80", VA = "0xE74D80")]
		private void DirtyTexts()
		{
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0xE75550", Offset = "0xE75550", VA = "0xE75550")]
		public StoreItemUI()
		{
		}
	}
	[Token(Token = "0x200070D")]
	public class CrossplayToggle : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40038F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle m_toggleCrossplay;

		[Token(Token = "0x40038F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle m_toggleNoviceMatches;

		[Token(Token = "0x40038F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Space]
		private GameObject m_toggleCrossplayGo;

		[Token(Token = "0x40038F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_toggleNoviceGo;

		[Token(Token = "0x40038F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_noviceWarningGo;

		[Token(Token = "0x40038F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NoviceWarningUI m_noviceWarning;

		[Token(Token = "0x40038F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_mainPnl;

		[Token(Token = "0x40038F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_warningPnl;

		[Token(Token = "0x40038FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button m_enableCrossplayBtn;

		[Token(Token = "0x40038FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button m_cancelContinueBtn;

		[Token(Token = "0x40038FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TMP_Text m_bodyLbl;

		[Token(Token = "0x40038FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TMP_Text m_cancelBtnLbl;

		[Token(Token = "0x40038FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LanguageText bodySearchText;

		[Token(Token = "0x40038FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LanguageText bodyPartyText;

		[Token(Token = "0x4003900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private LanguageText continueNoCrossplayText;

		[Token(Token = "0x4003901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LanguageText cancelText;

		[Token(Token = "0x4003902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AlvoPhotonManager m_photonManager;

		[Token(Token = "0x4003903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private StartupManager m_startupManager;

		[Token(Token = "0x4003904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_gameType;

		[Token(Token = "0x4003905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string m_host;

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xE75574", Offset = "0xE75574", VA = "0xE75574")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0xE75618", Offset = "0xE75618", VA = "0xE75618")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0xE756BC", Offset = "0xE756BC", VA = "0xE756BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0xE759C0", Offset = "0xE759C0", VA = "0xE759C0")]
		public void PartyJoinWarning(string host)
		{
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0xE75B9C", Offset = "0xE75B9C", VA = "0xE75B9C")]
		public void JoinPartyEnableCrossplay()
		{
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0xE75D20", Offset = "0xE75D20", VA = "0xE75D20")]
		public void CancelJoinParty()
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0xE75D80", Offset = "0xE75D80", VA = "0xE75D80")]
		public void SearchGamesWarning(int value)
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0xE75F5C", Offset = "0xE75F5C", VA = "0xE75F5C")]
		public void NoviceSearchWarning(int value)
		{
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0xE760F0", Offset = "0xE760F0", VA = "0xE760F0")]
		public void NoviceNotNovice()
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0xE761D8", Offset = "0xE761D8", VA = "0xE761D8")]
		private void SearchGamesEnableCrossplay()
		{
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0xE762D0", Offset = "0xE762D0", VA = "0xE762D0")]
		private void ContinueSearchGames()
		{
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0xE76318", Offset = "0xE76318", VA = "0xE76318")]
		private void ReceivePlayerStats(AzureRequestTypes type, string received, int requId)
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0xE7643C", Offset = "0xE7643C", VA = "0xE7643C")]
		private void OnNoviceValueChanged(bool value)
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0xE761F4", Offset = "0xE761F4", VA = "0xE761F4")]
		private void OnCrossplayValueChanged(bool value)
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0xE76518", Offset = "0xE76518", VA = "0xE76518")]
		public CrossplayToggle()
		{
		}
	}
	[Token(Token = "0x200070E")]
	[CreateAssetMenu(fileName = "UI Skin", menuName = "Alvo/UI/Skin")]
	public class UISkin : ScriptableObject
	{
		[Token(Token = "0x4003906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UISkinID m_ID;

		[Token(Token = "0x4003907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UISkinElementColor[] m_Colors;

		[Token(Token = "0x4003908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UISkinElementSelectableColor[] m_SelectableColors;

		[Token(Token = "0x4003909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<UISkinElementID, UISkinElementColor> m_colorsDictionary;

		[Token(Token = "0x400390A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<UISkinElementID, UISkinElementSelectableColor> m_selectableColorsDictionary;

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xE76520", Offset = "0xE76520", VA = "0xE76520")]
		public Color? GetElement(UISkinElementID skinElementID)
		{
			return null;
		}

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0xE766BC", Offset = "0xE766BC", VA = "0xE766BC")]
		public UISkinElementSelectableColor GetSelectableElement(UISkinElementID skinElementID)
		{
			return null;
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0xE76810", Offset = "0xE76810", VA = "0xE76810")]
		public UISkin()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200070F")]
	public class UISkinElementColor
	{
		[Token(Token = "0x400390B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UISkinElementID m_Element;

		[Token(Token = "0x400390C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color m_Color;

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0xE76818", Offset = "0xE76818", VA = "0xE76818")]
		public UISkinElementColor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000710")]
	public class UISkinElementSelectableColor
	{
		[Token(Token = "0x400390D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UISkinElementID m_Element;

		[Token(Token = "0x400390E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color m_GraphicColor;

		[Token(Token = "0x400390F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color m_NormalColor;

		[Token(Token = "0x4003910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color m_HighlightedColor;

		[Token(Token = "0x4003911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color m_PressedColor;

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0xE76820", Offset = "0xE76820", VA = "0xE76820")]
		public UISkinElementSelectableColor()
		{
		}
	}
	[Token(Token = "0x2000711")]
	public enum UISkinID
	{
		[Token(Token = "0x4003913")]
		Dark,
		[Token(Token = "0x4003914")]
		Light
	}
	[Token(Token = "0x2000712")]
	public enum UISkinElementID
	{
		[Token(Token = "0x4003916")]
		Background,
		[Token(Token = "0x4003917")]
		RegularText,
		[Token(Token = "0x4003918")]
		Header,
		[Token(Token = "0x4003919")]
		HeaderText,
		[Token(Token = "0x400391A")]
		NormalButton,
		[Token(Token = "0x400391B")]
		NormalButtonText,
		[Token(Token = "0x400391C")]
		ImportantButton,
		[Token(Token = "0x400391D")]
		ImportantButtonText,
		[Token(Token = "0x400391E")]
		Selected,
		[Token(Token = "0x400391F")]
		BackgroundPanel
	}
	[Token(Token = "0x2000713")]
	public class UISkinDatabase : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UISkinDatabase Instance;

		[Token(Token = "0x4003921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_DisableSkins;

		[Token(Token = "0x4003922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public System.Action OnSkinChange;

		[Token(Token = "0x4003923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UISkinID m_CurrentSkin;

		[Token(Token = "0x4003924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UISkin[] m_Skins;

		[Token(Token = "0x4003925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<UISkinID, UISkin> m_skinsDictionary;

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0xE76828", Offset = "0xE76828", VA = "0xE76828")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0xE76874", Offset = "0xE76874", VA = "0xE76874")]
		public UISkin GetCurrentSkin()
		{
			return null;
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0xE769CC", Offset = "0xE769CC", VA = "0xE769CC")]
		public void DebugChangeSkin()
		{
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0xE76B40", Offset = "0xE76B40", VA = "0xE76B40")]
		public UISkinDatabase()
		{
		}
	}
	[Token(Token = "0x2000714")]
	public class UISkinElement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UISkinElementID m_SkinElementID;

		[Token(Token = "0x4003927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[ReadOnly]
		protected Graphic m_Graphic;

		[Token(Token = "0x4003928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected UISkinDatabase m_database;

		[Token(Token = "0x4003929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool m_originalStored;

		[Token(Token = "0x400392A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected Color m_originalGraphicColor;

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0xE76B48", Offset = "0xE76B48", VA = "0xE76B48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0xE76CE4", Offset = "0xE76CE4", VA = "0xE76CE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0xE76DAC", Offset = "0xE76DAC", VA = "0xE76DAC", Slot = "4")]
		protected virtual void ReturnToOriginal()
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0xE76DDC", Offset = "0xE76DDC", VA = "0xE76DDC", Slot = "5")]
		protected virtual void UpdateSkin(bool tweenIt)
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0xE77004", Offset = "0xE77004", VA = "0xE77004")]
		public UISkinElement()
		{
		}
	}
	[Token(Token = "0x2000715")]
	public class UISkinElementSelectable : UISkinElement
	{
		[Token(Token = "0x400392B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Selectable m_Selectable;

		[Token(Token = "0x400392C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ColorBlock m_originalColorBlock;

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0xE7702C", Offset = "0xE7702C", VA = "0xE7702C", Slot = "4")]
		protected override void ReturnToOriginal()
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0xE7708C", Offset = "0xE7708C", VA = "0xE7708C", Slot = "5")]
		protected override void UpdateSkin(bool tweenIt)
		{
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0xE77294", Offset = "0xE77294", VA = "0xE77294")]
		public UISkinElementSelectable()
		{
		}
	}
	[Token(Token = "0x2000716")]
	public class LoadoutTacticalSelectionPanel : LoadoutSelectionPanel<ScriptableTacticalGear, TacticalGearLoadoutStoreUI>
	{
		[Token(Token = "0x400392D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TacticalGearList m_TacticalList;

		[Token(Token = "0x400392E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerStats playerStats;

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0xE7729C", Offset = "0xE7729C", VA = "0xE7729C")]
		public void SetDependencies(TacticalGearList _tacticalGear)
		{
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0xE772D0", Offset = "0xE772D0", VA = "0xE772D0")]
		public void SetToShow(Func<int> selectedItemId, PlayerStats _playerStats)
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0xE77360", Offset = "0xE77360", VA = "0xE77360", Slot = "8")]
		public override void Show(int page)
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0xE77880", Offset = "0xE77880", VA = "0xE77880")]
		public void SelectItem(int _id)
		{
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0xE7788C", Offset = "0xE7788C", VA = "0xE7788C", Slot = "9")]
		protected override void OnItemSelect(int itemId)
		{
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0xE77A04", Offset = "0xE77A04", VA = "0xE77A04", Slot = "10")]
		protected override void OnItemBuy(int _tacticalGear)
		{
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0xE7761C", Offset = "0xE7761C", VA = "0xE7761C")]
		private TacticalGearLoadoutStoreUI SpawnItem(int _id)
		{
			return null;
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0xE77D0C", Offset = "0xE77D0C", VA = "0xE77D0C")]
		public LoadoutTacticalSelectionPanel()
		{
		}
	}
	[Token(Token = "0x2000717")]
	public class TacticalGearLoadoutStoreUI : StoreItemUI
	{
		[Token(Token = "0x400392F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Header("Purchasing")]
		[SerializeField]
		private TextMeshProUGUI m_Cooldown;

		[Token(Token = "0x4003930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TextMeshProUGUI m_CooldownHeader;

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0xE77C08", Offset = "0xE77C08", VA = "0xE77C08")]
		public void SetCooldown(int _cooldown)
		{
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0xE77BD8", Offset = "0xE77BD8", VA = "0xE77BD8")]
		public void ShowIcon(bool _icon)
		{
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0xE77D54", Offset = "0xE77D54", VA = "0xE77D54")]
		public TacticalGearLoadoutStoreUI()
		{
		}
	}
	[Token(Token = "0x2000718")]
	public class DailyXPUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleUIPanel BonusXPMessageUI;

		[Token(Token = "0x4003932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text m_DayText;

		[Token(Token = "0x4003933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LanguageText DayLangText;

		[Token(Token = "0x4003934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text m_XPText;

		[Token(Token = "0x4003935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LanguageText XPLangText;

		[Token(Token = "0x4003936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text m_PercentageText;

		[Token(Token = "0x4003937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TMP_Text m_CoinText;

		[Token(Token = "0x4003938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageText XPCoinText;

		[Token(Token = "0x4003939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text m_DaysLoggedInText;

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0xE77D78", Offset = "0xE77D78", VA = "0xE77D78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0xE77E6C", Offset = "0xE77E6C", VA = "0xE77E6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0xE77F60", Offset = "0xE77F60", VA = "0xE77F60")]
		public void TryEnableUI()
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0xE78054", Offset = "0xE78054", VA = "0xE78054")]
		private void SetText()
		{
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0xE7837C", Offset = "0xE7837C", VA = "0xE7837C")]
		public DailyXPUI()
		{
		}
	}
	[Token(Token = "0x2000719")]
	public class ContextMenuOptionUI : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400393A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_optionTextMesh;

		[Token(Token = "0x400393B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ContextMenuUI contextMenu;

		[Token(Token = "0x400393C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ContextMenuUI.Option optionData;

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0xE78384", Offset = "0xE78384", VA = "0xE78384")]
		public void Setup(ContextMenuUI _contextMenu, ContextMenuUI.Option option)
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0xE783B4", Offset = "0xE783B4", VA = "0xE783B4")]
		public void OnClicked()
		{
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0xE78498", Offset = "0xE78498", VA = "0xE78498", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0xE78524", Offset = "0xE78524", VA = "0xE78524", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0xE785B4", Offset = "0xE785B4", VA = "0xE785B4")]
		public ContextMenuOptionUI()
		{
		}
	}
	[Token(Token = "0x200071A")]
	public class ContextMenuUI : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x200071B")]
		public class Option
		{
			[Token(Token = "0x4003944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string text;

			[Token(Token = "0x4003945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public System.Action callback;

			[Token(Token = "0x4003946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool closeOnClick;

			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0xE78A28", Offset = "0xE78A28", VA = "0xE78A28")]
			public Option(string text, System.Action callback)
			{
			}
		}

		[Token(Token = "0x400393D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform rectTransform;

		[Token(Token = "0x400393E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ContextMenuOptionUI optionPrefab;

		[Token(Token = "0x400393F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform optionHolder;

		[Token(Token = "0x4003940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool closeOnDeselect;

		[Token(Token = "0x4003941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Option> m_options;

		[Token(Token = "0x4003942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ContextMenuOptionUI> pool;

		[Token(Token = "0x4003943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string openerId;

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0xE785BC", Offset = "0xE785BC", VA = "0xE785BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0xE78644", Offset = "0xE78644", VA = "0xE78644")]
		public void Open(List<string> texts, List<System.Action> callbacks, Vector3 globalPosition, [Optional] bool[] closeOnClick, [Optional] string id)
		{
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0xE78BB0", Offset = "0xE78BB0", VA = "0xE78BB0")]
		public void OpenerDeselected()
		{
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0xE78408", Offset = "0xE78408", VA = "0xE78408")]
		public void Close()
		{
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0xE78D9C", Offset = "0xE78D9C", VA = "0xE78D9C")]
		public void CloseIfById(string _id)
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0xE78A5C", Offset = "0xE78A5C", VA = "0xE78A5C")]
		private void SetupOptions()
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0xE78DF4", Offset = "0xE78DF4", VA = "0xE78DF4")]
		private ContextMenuOptionUI GetFromPool()
		{
			return null;
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0xE78C38", Offset = "0xE78C38", VA = "0xE78C38")]
		private void ClearPool()
		{
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0xE784B0", Offset = "0xE784B0", VA = "0xE784B0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0xE7853C", Offset = "0xE7853C", VA = "0xE7853C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0xE790AC", Offset = "0xE790AC", VA = "0xE790AC")]
		public ContextMenuUI()
		{
		}
	}
	[Token(Token = "0x200071C")]
	public class FriendBlockItem : SocialListItem
	{
		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0xE79174", Offset = "0xE79174", VA = "0xE79174")]
		public void Unblock()
		{
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0xE7922C", Offset = "0xE7922C", VA = "0xE7922C")]
		public FriendBlockItem()
		{
		}
	}
	[Token(Token = "0x200071D")]
	public class SocialListItem : Selectable
	{
		[Token(Token = "0x4003947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected Image m_avatar;

		[Token(Token = "0x4003948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		protected TextMeshProUGUI usernameTmp;

		[Token(Token = "0x4003949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected UIHoverTooltip m_tooltip;

		[Token(Token = "0x400394A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string FID;

		[Token(Token = "0x400394B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected int fidInt;

		[Token(Token = "0x400394C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Friend friendInfo;

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0xE79288", Offset = "0xE79288", VA = "0xE79288", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0xE793A0", Offset = "0xE793A0", VA = "0xE793A0", Slot = "39")]
		public virtual void Setup(Friend _friend)
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0xE797B0", Offset = "0xE797B0", VA = "0xE797B0", Slot = "40")]
		public virtual void SetStatus(int _status)
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0xE797B4", Offset = "0xE797B4", VA = "0xE797B4")]
		public void SetupTooltip(CanvasGroup _canvas, TextMeshProUGUI _text)
		{
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0xE7983C", Offset = "0xE7983C", VA = "0xE7983C")]
		public void UpdateStatus()
		{
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0xE79590", Offset = "0xE79590", VA = "0xE79590")]
		private void LoadAvatar()
		{
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0xE79864", Offset = "0xE79864", VA = "0xE79864")]
		private void OnAvatarLoaded(int _fid, Sprite sprite)
		{
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0xE79984", Offset = "0xE79984", VA = "0xE79984", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0xE79A70", Offset = "0xE79A70", VA = "0xE79A70", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0xE79230", Offset = "0xE79230", VA = "0xE79230")]
		public SocialListItem()
		{
		}
	}
	[Token(Token = "0x200071E")]
	public class FriendlistItem : SocialListItem
	{
		[Token(Token = "0x400394D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private TextMeshProUGUI m_statusText;

		[Token(Token = "0x400394E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject m_inviteHolder;

		[Token(Token = "0x400394F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Selectable m_acceptInviteBtn;

		[Token(Token = "0x4003950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private RectTransform contextMenuPos;

		[Token(Token = "0x4003951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private LanguageText[] m_statusName;

		[Token(Token = "0x4003952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Color[] m_statusColor;

		[Token(Token = "0x4003953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int status;

		[Token(Token = "0x4003954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[Header("Context menu settings")]
		private LanguageText[] optionText;

		[Token(Token = "0x4003955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private int[] optionToExcludeOffline;

		[Token(Token = "0x4003956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private System.Action[] optionCallback;

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0xE79B5C", Offset = "0xE79B5C", VA = "0xE79B5C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xE79C5C", Offset = "0xE79C5C", VA = "0xE79C5C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0xE79D58", Offset = "0xE79D58", VA = "0xE79D58", Slot = "39")]
		public override void Setup(Friend _friend)
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0xE79D5C", Offset = "0xE79D5C", VA = "0xE79D5C", Slot = "40")]
		public override void SetStatus(int _status)
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0xE79FA4", Offset = "0xE79FA4", VA = "0xE79FA4", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0xE7A494", Offset = "0xE7A494", VA = "0xE7A494", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0xE79DC0", Offset = "0xE79DC0", VA = "0xE79DC0")]
		private void UpdateStatusText()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0xE79E64", Offset = "0xE79E64", VA = "0xE79E64")]
		private void UpdatePartyJoinability()
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0xE7A508", Offset = "0xE7A508", VA = "0xE7A508")]
		private void InviteToParty()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0xE7A564", Offset = "0xE7A564", VA = "0xE7A564")]
		private void InviteToPrivateRoom()
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0xE7A5C0", Offset = "0xE7A5C0", VA = "0xE7A5C0")]
		private void JoinParty()
		{
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0xE7A61C", Offset = "0xE7A61C", VA = "0xE7A61C")]
		private void Block()
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0xE7A67C", Offset = "0xE7A67C", VA = "0xE7A67C")]
		private void Remove()
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0xE7A6D8", Offset = "0xE7A6D8", VA = "0xE7A6D8")]
		public void SetInviteStatus(bool enabled)
		{
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0xE7A71C", Offset = "0xE7A71C", VA = "0xE7A71C")]
		public void InviteResponse(bool accept)
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0xE79FBC", Offset = "0xE79FBC", VA = "0xE79FBC")]
		public void OpenContextMenu()
		{
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0xE7A7DC", Offset = "0xE7A7DC", VA = "0xE7A7DC")]
		public FriendlistItem()
		{
		}
	}
	[Token(Token = "0x200071F")]
	public class FriendlistUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000720")]
		private interface IListPanel
		{
			[Token(Token = "0x6002AFF")]
			void SetData(List<Friend> _data);

			[Token(Token = "0x6002B00")]
			void UpdateStatus();

			[Token(Token = "0x6002B01")]
			void ChangePage(int amount);

			[Token(Token = "0x6002B02")]
			void SetPage(int n);

			[Token(Token = "0x6002B03")]
			(bool, bool) PageAvailability();
		}

		[Serializable]
		[Token(Token = "0x2000721")]
		public class ListPanel<T> : IListPanel where T : SocialListItem
		{
			[Token(Token = "0x400396E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T prefab;

			[Token(Token = "0x400396F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject itemHolder;

			[Token(Token = "0x4003970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private int m_itemsPerPage;

			[Token(Token = "0x4003971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected List<T> m_pool;

			[Token(Token = "0x4003972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected Dictionary<string, int> m_inviteNotifs;

			[Token(Token = "0x4003973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_currentPage;

			[Token(Token = "0x4003974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_maxPage;

			[Token(Token = "0x4003975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Friend> m_data;

			[Token(Token = "0x4003976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected bool needsSorting;

			[Token(Token = "0x6002B04")]
			public void SetData(List<Friend> _data)
			{
			}

			[Token(Token = "0x6002B05")]
			public virtual void UpdateStatus()
			{
			}

			[Token(Token = "0x6002B06")]
			public void ChangePage(int _amount)
			{
			}

			[Token(Token = "0x6002B07")]
			public (bool, bool) PageAvailability()
			{
				return default((bool, bool));
			}

			[Token(Token = "0x6002B08")]
			public void SetPage(int n)
			{
			}

			[Token(Token = "0x6002B09")]
			public void SetTooltip(CanvasGroup _group, TextMeshProUGUI _tmp)
			{
			}

			[Token(Token = "0x6002B0A")]
			protected virtual void ShowCurrent()
			{
			}

			[Token(Token = "0x6002B0B")]
			private T GetFromPool()
			{
				return null;
			}

			[Token(Token = "0x6002B0C")]
			private void HideAll()
			{
			}

			[Token(Token = "0x6002B0D")]
			public ListPanel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000723")]
		public class FriendListPanel : ListPanel<FriendlistItem>
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xE7C468", Offset = "0xE7C468", VA = "0xE7C468", Slot = "10")]
			protected override void ShowCurrent()
			{
			}

			[Token(Token = "0x6002B15")]
			[Address(RVA = "0xE7BFAC", Offset = "0xE7BFAC", VA = "0xE7BFAC")]
			public void SetInviteNotifs(Dictionary<string, int> _notifs)
			{
			}

			[Token(Token = "0x6002B16")]
			[Address(RVA = "0xE7C600", Offset = "0xE7C600", VA = "0xE7C600")]
			public FriendListPanel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000724")]
		public class InviteListPanel : ListPanel<InvitelistItem>
		{
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0xE7BE64", Offset = "0xE7BE64", VA = "0xE7BE64")]
			public void SetData(List<FriendIncomingInvite> _friends)
			{
			}

			[Token(Token = "0x6002B18")]
			[Address(RVA = "0xE7C648", Offset = "0xE7C648", VA = "0xE7C648")]
			public InviteListPanel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000726")]
		public class MetListPanel : ListPanel<PlayersMetListItem>
		{
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0xE7C704", Offset = "0xE7C704", VA = "0xE7C704")]
			public MetListPanel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000727")]
		public class BlockListPanel : ListPanel<FriendBlockItem>
		{
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0xE7C74C", Offset = "0xE7C74C", VA = "0xE7C74C")]
			public BlockListPanel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000728")]
		private struct InviteStatusMessage
		{
			[Token(Token = "0x400397D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string status;

			[Token(Token = "0x400397E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LanguageText message;

			[Token(Token = "0x400397F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool showMessage;

			[Token(Token = "0x4003980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool replaceString;

			[Token(Token = "0x4003981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string replaceKey;

			[Token(Token = "0x4003982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string replaceValue;
		}

		[Token(Token = "0x4003957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("General references")]
		[SerializeField]
		private TabTableUI m_tabTable;

		[Token(Token = "0x4003958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button m_prevBtn;

		[Token(Token = "0x4003959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button m_nextBtn;

		[Token(Token = "0x400395A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_cancelFriendAddBtn;

		[Token(Token = "0x400395B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI m_friendIdInputText;

		[Token(Token = "0x400395C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatingPadInput m_padInput;

		[Token(Token = "0x400395D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] m_panelNotif;

		[Token(Token = "0x400395E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UINotification m_notificator;

		[Token(Token = "0x400395F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text m_noFriendsMessageText;

		[Token(Token = "0x4003960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LoadingTextEllipsis m_addByIdLoading;

		[Token(Token = "0x4003961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Panels")]
		[SerializeField]
		private FriendListPanel m_friendlistPanel;

		[Token(Token = "0x4003962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BlockListPanel m_blockedistPanel;

		[Token(Token = "0x4003963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private InviteListPanel m_invitelistPanel;

		[Token(Token = "0x4003964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MetListPanel m_metlistPanel;

		[Token(Token = "0x4003965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Tooltip references")]
		public CanvasGroup tooltipDisplay;

		[Token(Token = "0x4003966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshProUGUI textTmp;

		[Token(Token = "0x4003967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Others")]
		[SerializeField]
		private InviteStatusMessage[] m_inviteStatusMessages;

		[Token(Token = "0x4003968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LanguageText m_invalidFriendId;

		[Token(Token = "0x4003969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ContextMenuUI contextMenu;

		[Token(Token = "0x400396A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_openPanelIdx;

		[Token(Token = "0x400396B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IListPanel[] m_panels;

		[Token(Token = "0x400396C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FriendlistUI Instance;

		[Token(Token = "0x400396D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action<bool> OnActiveStateChanged;

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0xE7A804", Offset = "0xE7A804", VA = "0xE7A804")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0xE7B34C", Offset = "0xE7B34C", VA = "0xE7B34C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0xE7B858", Offset = "0xE7B858", VA = "0xE7B858")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0xE7B8A4", Offset = "0xE7B8A4", VA = "0xE7B8A4")]
		public void ChangePage(int amount)
		{
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0xE7BA6C", Offset = "0xE7BA6C", VA = "0xE7BA6C")]
		public void EnableNumpadInput()
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0xE7BC08", Offset = "0xE7BC08", VA = "0xE7BC08")]
		public void DisableNumpadInput()
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0xE7BD74", Offset = "0xE7BD74", VA = "0xE7BD74")]
		public void AddFriend()
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0xE7AE60", Offset = "0xE7AE60", VA = "0xE7AE60")]
		private void UpdateFriendList(List<Friend> _list)
		{
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0xE7B04C", Offset = "0xE7B04C", VA = "0xE7B04C")]
		private void UpdateBlockedList(List<Friend> _list)
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0xE7AF64", Offset = "0xE7AF64", VA = "0xE7AF64")]
		private void UpdateInviteList(List<FriendIncomingInvite> _list)
		{
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0xE7B0F0", Offset = "0xE7B0F0", VA = "0xE7B0F0")]
		private void UpdateMetList(List<Friend> _list)
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0xE7BF8C", Offset = "0xE7BF8C", VA = "0xE7BF8C")]
		public void UpdateStatus()
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0xE7B148", Offset = "0xE7B148", VA = "0xE7B148")]
		private void UpdatePartyInvites()
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0xE7B224", Offset = "0xE7B224", VA = "0xE7B224")]
		private void TabChanged(int idx)
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0xE7B978", Offset = "0xE7B978", VA = "0xE7B978")]
		private void PageChanged()
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0xE7C040", Offset = "0xE7C040", VA = "0xE7C040")]
		private void OnTyped(string s)
		{
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0xE7C1C0", Offset = "0xE7C1C0", VA = "0xE7C1C0")]
		private void OnBackspace()
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0xE7C2E4", Offset = "0xE7C2E4", VA = "0xE7C2E4")]
		private void AzureDatabaseCallback(AzureRequestTypes type, string result, int requId)
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0xE7C460", Offset = "0xE7C460", VA = "0xE7C460")]
		public FriendlistUI()
		{
		}
	}
	[Token(Token = "0x2000729")]
	public class InvitelistItem : SocialListItem
	{
		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0xE7C794", Offset = "0xE7C794", VA = "0xE7C794")]
		public void Accept()
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xE7C7F8", Offset = "0xE7C7F8", VA = "0xE7C7F8")]
		public void Reject()
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0xE7C85C", Offset = "0xE7C85C", VA = "0xE7C85C")]
		public InvitelistItem()
		{
		}
	}
	[Token(Token = "0x200072A")]
	public class PlayersMetListItem : SocialListItem
	{
		[Token(Token = "0x4003983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[Header("Context menu settings")]
		private LanguageText[] optionLanguageText;

		[Token(Token = "0x4003984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private System.Action[] optionCallback;

		[Token(Token = "0x4003985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private RectTransform contextMenuPos;

		[Token(Token = "0x4003986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private LanguageText[] reportOptionLanguageText;

		[Token(Token = "0x4003987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private System.Action[] reportOptionCallback;

		[Token(Token = "0x4003988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool[] closeOnOptionClick;

		[Token(Token = "0x4003989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool openMenuOnSelect;

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0xE7C860", Offset = "0xE7C860", VA = "0xE7C860", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0xE7CBA4", Offset = "0xE7CBA4", VA = "0xE7CBA4")]
		public void FriendRequest()
		{
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0xE7CC08", Offset = "0xE7CC08", VA = "0xE7CC08")]
		private void Block()
		{
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0xE7CC68", Offset = "0xE7CC68", VA = "0xE7CC68")]
		private void Unblock()
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0xE7CCC8", Offset = "0xE7CCC8", VA = "0xE7CCC8")]
		private void OpenReport()
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0xE7D000", Offset = "0xE7D000", VA = "0xE7D000")]
		private void Report(int opt)
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0xE7D104", Offset = "0xE7D104", VA = "0xE7D104", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0xE7D138", Offset = "0xE7D138", VA = "0xE7D138", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0xE7CCEC", Offset = "0xE7CCEC", VA = "0xE7CCEC")]
		public void OpenContextMenu(LanguageText[] _texts, System.Action[] _callbacks)
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0xE7D1A8", Offset = "0xE7D1A8", VA = "0xE7D1A8")]
		public PlayersMetListItem()
		{
		}
	}
	[Token(Token = "0x200072B")]
	public class FloatingInputForTMPInput : UnityEngine.MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x200072C")]
		[CompilerGenerated]
		private sealed class <DeselectDelay>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FloatingInputForTMPInput <>4__this;

			[Token(Token = "0x170004C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B3A")]
				[Address(RVA = "0xE7D844", Offset = "0xE7D844", VA = "0xE7D844", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B3C")]
				[Address(RVA = "0xE7D88C", Offset = "0xE7D88C", VA = "0xE7D88C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xE7D720", Offset = "0xE7D720", VA = "0xE7D720")]
			[DebuggerHidden]
			public <DeselectDelay>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002B38")]
			[Address(RVA = "0xE7D7BC", Offset = "0xE7D7BC", VA = "0xE7D7BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B39")]
			[Address(RVA = "0xE7D7C0", Offset = "0xE7D7C0", VA = "0xE7D7C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0xE7D84C", Offset = "0xE7D84C", VA = "0xE7D84C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400398A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_padObject;

		[Token(Token = "0x400398B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatingPadInput m_padInput;

		[Token(Token = "0x400398C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_InputField m_tmpInput;

		[Token(Token = "0x400398D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_autoHideOnUnfocus;

		[Token(Token = "0x400398E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int m_maxLength;

		[Token(Token = "0x400398F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool disableOnDeselect;

		[Token(Token = "0x4003990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds m_delay;

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0xE7D1D4", Offset = "0xE7D1D4", VA = "0xE7D1D4")]
		public void EnableNumpadInput()
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0xE7D2AC", Offset = "0xE7D2AC", VA = "0xE7D2AC")]
		public void DisableNumpadInput()
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0xE7D2C8", Offset = "0xE7D2C8", VA = "0xE7D2C8")]
		private void OnTyped(string s)
		{
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0xE7D3C4", Offset = "0xE7D3C4", VA = "0xE7D3C4")]
		private void OnBackspace()
		{
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0xE7D464", Offset = "0xE7D464", VA = "0xE7D464", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0xE7D680", Offset = "0xE7D680", VA = "0xE7D680", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0xE7D6B8", Offset = "0xE7D6B8", VA = "0xE7D6B8")]
		[IteratorStateMachine(typeof(<DeselectDelay>d__13))]
		private IEnumerator DeselectDelay()
		{
			return null;
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0xE7D748", Offset = "0xE7D748", VA = "0xE7D748")]
		public FloatingInputForTMPInput()
		{
		}
	}
	[Token(Token = "0x200072D")]
	public class FloatingPadInput : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_Canvas;

		[Token(Token = "0x4003995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform m_WrapRt;

		[Token(Token = "0x4003996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasGroup m_WrapCg;

		[Token(Token = "0x4003997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> onTyped;

		[Token(Token = "0x4003998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public System.Action onBackspace;

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0xE7D4B4", Offset = "0xE7D4B4", VA = "0xE7D4B4")]
		public void Open(bool value)
		{
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0xE7D89C", Offset = "0xE7D89C", VA = "0xE7D89C")]
		public void Type(string a)
		{
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0xE7D8B8", Offset = "0xE7D8B8", VA = "0xE7D8B8")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0xE7D8D4", Offset = "0xE7D8D4", VA = "0xE7D8D4")]
		public FloatingPadInput()
		{
		}
	}
	[Token(Token = "0x200072F")]
	[RequireComponent(typeof(StoreItemUI))]
	public class PerkLoadoutItemUI : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x400399B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StoreItemUI storeItemUI;

		[Token(Token = "0x400399C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Perk perk;

		[Token(Token = "0x400399D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<string> showDesc;

		[Token(Token = "0x400399E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private System.Action hideDesc;

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0xE7D914", Offset = "0xE7D914", VA = "0xE7D914")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0xE7D9A0", Offset = "0xE7D9A0", VA = "0xE7D9A0")]
		public void Setup(Perk perk, Action<string> _showDesc, System.Action _hideDesc)
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0xE7D9AC", Offset = "0xE7D9AC", VA = "0xE7D9AC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0xE7D9F0", Offset = "0xE7D9F0", VA = "0xE7D9F0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0xE7DA0C", Offset = "0xE7DA0C", VA = "0xE7DA0C", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0xE7DA28", Offset = "0xE7DA28", VA = "0xE7DA28")]
		public PerkLoadoutItemUI()
		{
		}
	}
	[Token(Token = "0x2000730")]
	public class TabButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400399F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x40039A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image tabBackground;

		[Token(Token = "0x40039A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI header;

		[Token(Token = "0x40039A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject content;

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0xE7DA30", Offset = "0xE7DA30", VA = "0xE7DA30")]
		public TabButton()
		{
		}
	}
	[Token(Token = "0x2000731")]
	public class TabHeader : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40039A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TabTableUI m_tableUI;

		[Token(Token = "0x40039A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x40039A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUIVertexEffect m_uiVertexEffect;

		[Token(Token = "0x40039A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LanguageText[] m_tabLanguageKeys;

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0xE7DA38", Offset = "0xE7DA38", VA = "0xE7DA38")]
		private void Start()
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0xE7DBE8", Offset = "0xE7DBE8", VA = "0xE7DBE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0xE7DB6C", Offset = "0xE7DB6C", VA = "0xE7DB6C")]
		private void OnTabChanged(int _tabIndex)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0xE7DCC4", Offset = "0xE7DCC4", VA = "0xE7DCC4")]
		public TabHeader()
		{
		}
	}
	[Token(Token = "0x2000732")]
	public class TabTableUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40039A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Setup")]
		private Transform m_tabHolder;

		[Token(Token = "0x40039A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_contentPagesHolder;

		[Token(Token = "0x40039A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TabButton m_tabGameobject;

		[Token(Token = "0x40039AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_PageGameobject;

		[Token(Token = "0x40039AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Settings")]
		[SerializeField]
		private Color m_selectedTabColor;

		[Token(Token = "0x40039AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color m_unselectedTabColor;

		[Token(Token = "0x40039AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<string> m_headers;

		[Token(Token = "0x40039AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<TabButton> m_tabs;

		[Token(Token = "0x40039AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action<int> onTabChanged;

		[Token(Token = "0x170004C9")]
		public int TabIndex
		{
			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0xE7DCCC", Offset = "0xE7DCCC", VA = "0xE7DCCC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0xE7DCD4", Offset = "0xE7DCD4", VA = "0xE7DCD4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0xE7DCDC", Offset = "0xE7DCDC", VA = "0xE7DCDC")]
		public void OnTabClicked(int id)
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0xE7DE08", Offset = "0xE7DE08", VA = "0xE7DE08")]
		private void HideAllTabs()
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0xE7DFAC", Offset = "0xE7DFAC", VA = "0xE7DFAC")]
		public TabTableUI()
		{
		}
	}
	[Token(Token = "0x2000733")]
	[RequireComponent(typeof(CanvasGroup))]
	public class NumericUpDown : Selectable
	{
		[Token(Token = "0x40039B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private int m_startingValue;

		[Token(Token = "0x40039B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private int m_increment;

		[Token(Token = "0x40039B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private int m_minValue;

		[Token(Token = "0x40039B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private int m_maxValue;

		[Token(Token = "0x40039B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Space]
		[SerializeField]
		private TextMeshProUGUI m_textMesh;

		[Token(Token = "0x40039B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Selectable m_upBtn;

		[Token(Token = "0x40039B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Selectable m_downBtn;

		[Token(Token = "0x40039B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x40039B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int m_internalValue;

		[Token(Token = "0x40039BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool m_initialized;

		[Token(Token = "0x40039BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public UnityEvent<int> OnValueChanged;

		[Token(Token = "0x170004CA")]
		public int Value
		{
			[Token(Token = "0x6002B54")]
			[Address(RVA = "0xE7E0B4", Offset = "0xE7E0B4", VA = "0xE7E0B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xE7E028", Offset = "0xE7E028", VA = "0xE7E028")]
			set
			{
			}
		}

		[Token(Token = "0x170004CB")]
		public int Max
		{
			[Token(Token = "0x6002B56")]
			[Address(RVA = "0xE7E0F0", Offset = "0xE7E0F0", VA = "0xE7E0F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xE7E0D4", Offset = "0xE7E0D4", VA = "0xE7E0D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public int Min
		{
			[Token(Token = "0x6002B58")]
			[Address(RVA = "0xE7E114", Offset = "0xE7E114", VA = "0xE7E114")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B57")]
			[Address(RVA = "0xE7E0F8", Offset = "0xE7E0F8", VA = "0xE7E0F8")]
			set
			{
			}
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0xE7E11C", Offset = "0xE7E11C", VA = "0xE7E11C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0xE7E25C", Offset = "0xE7E25C", VA = "0xE7E25C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0xE7E330", Offset = "0xE7E330", VA = "0xE7E330")]
		public void Up()
		{
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0xE7E354", Offset = "0xE7E354", VA = "0xE7E354")]
		public void Down()
		{
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0xE7E378", Offset = "0xE7E378", VA = "0xE7E378")]
		public void SetValueWithoutNotify(int value)
		{
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0xE7E038", Offset = "0xE7E038", VA = "0xE7E038")]
		private void OnChanged()
		{
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0xE7E288", Offset = "0xE7E288", VA = "0xE7E288")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0xE7E388", Offset = "0xE7E388", VA = "0xE7E388")]
		public NumericUpDown()
		{
		}
	}
	[Token(Token = "0x2000734")]
	[RequireComponent(typeof(RectTransform))]
	public class UIHoverTooltip : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x40039BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("References")]
		public CanvasGroup tooltipDisplay;

		[Token(Token = "0x40039BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI textTmp;

		[Token(Token = "0x40039BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Position")]
		[SerializeField]
		private Vector2 m_anchorPivot;

		[Token(Token = "0x40039BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_offset;

		[Token(Token = "0x40039C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Settings")]
		[SerializeField]
		private float m_fadeDuration;

		[Token(Token = "0x40039C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_hoverTimeToShow;

		[Token(Token = "0x40039C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LanguageText m_text;

		[Token(Token = "0x40039C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x40039C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_tooltipRect;

		[Token(Token = "0x40039C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_canShow;

		[Token(Token = "0x40039C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isHovering;

		[Token(Token = "0x40039C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_isShowing;

		[Token(Token = "0x40039C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_timeToShow;

		[Token(Token = "0x40039C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Tween m_showTweener;

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0xE7E3F0", Offset = "0xE7E3F0", VA = "0xE7E3F0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0xE7E44C", Offset = "0xE7E44C", VA = "0xE7E44C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0xE7E728", Offset = "0xE7E728", VA = "0xE7E728")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0xE7E494", Offset = "0xE7E494", VA = "0xE7E494")]
		private void Show()
		{
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0xE7E72C", Offset = "0xE7E72C", VA = "0xE7E72C")]
		private void Hide()
		{
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0xE7E810", Offset = "0xE7E810", VA = "0xE7E810", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0xE7E814", Offset = "0xE7E814", VA = "0xE7E814", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0xE7E84C", Offset = "0xE7E84C", VA = "0xE7E84C", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0xE7E860", Offset = "0xE7E860", VA = "0xE7E860")]
		public UIHoverTooltip()
		{
		}
	}
	[Token(Token = "0x2000735")]
	public class NoviceWarningUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40039CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x40039CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text titleLbl;

		[Token(Token = "0x40039CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text bodyLbl;

		[Token(Token = "0x40039CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cancelButtonGo;

		[Token(Token = "0x40039CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject acceptButtonGo;

		[Token(Token = "0x40039CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button acceptBtn;

		[Token(Token = "0x40039D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LanguageText searchWarningLT;

		[Token(Token = "0x40039D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageText notNoviceLT;

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0xE76048", Offset = "0xE76048", VA = "0xE76048")]
		public void ShowSearchWarning(UnityAction call)
		{
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0xE76168", Offset = "0xE76168", VA = "0xE76168")]
		public void ShowNotNoviceWarning()
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0xE7E89C", Offset = "0xE7E89C", VA = "0xE7E89C")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0xE7E8FC", Offset = "0xE7E8FC", VA = "0xE7E8FC")]
		public NoviceWarningUI()
		{
		}
	}
}
namespace Alvo.Pico
{
	[Token(Token = "0x2000736")]
	public enum SpatialAudioType
	{
		[Token(Token = "0x40039D3")]
		none,
		[Token(Token = "0x40039D4")]
		listener,
		[Token(Token = "0x40039D5")]
		source
	}
	[Token(Token = "0x2000737")]
	public class PicoAttachAudio : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000738")]
		public class AttachSourceEvent : UnityEvent
		{
			[Token(Token = "0x6002B70")]
			[Address(RVA = "0xE7E914", Offset = "0xE7E914", VA = "0xE7E914")]
			public AttachSourceEvent()
			{
			}
		}

		[Token(Token = "0x40039D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpatialAudioType type;

		[Token(Token = "0x40039D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x40039D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioListener listener;

		[Token(Token = "0x40039D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Range(0f, 26f)]
		private float gainDB;

		[Token(Token = "0x40039DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AttachSourceEvent onAttachSource;

		[Token(Token = "0x40039DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool destroyOnDisable;

		[Token(Token = "0x40039DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float overrideMinDistance;

		[Token(Token = "0x40039DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float overrideMaxDistance;

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0xE7E904", Offset = "0xE7E904", VA = "0xE7E904")]
		public PicoAttachAudio()
		{
		}
	}
	[Token(Token = "0x2000739")]
	public class PicoSpatialAudio : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002B71")]
		[Address(RVA = "0xE7E91C", Offset = "0xE7E91C", VA = "0xE7E91C")]
		public PicoSpatialAudio()
		{
		}
	}
}
namespace Alvo.OculusAPI
{
	[Token(Token = "0x200073A")]
	[Obsolete("Replaced by platform manager")]
	public class AlvoOculusRooms : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6002B72")]
		[Address(RVA = "0xE7E924", Offset = "0xE7E924", VA = "0xE7E924")]
		public AlvoOculusRooms()
		{
		}
	}
	[Token(Token = "0x200073B")]
	public class OculusFriends : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40039DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong demolitionID;

		[Token(Token = "0x40039DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string demolitionInviteToken;

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0xE7E92C", Offset = "0xE7E92C", VA = "0xE7E92C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0xE7EA4C", Offset = "0xE7EA4C", VA = "0xE7EA4C")]
		public void InviteUser(ulong id)
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0xE7E95C", Offset = "0xE7E95C", VA = "0xE7E95C")]
		public void GetUsersAndRooms()
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0xE7EA50", Offset = "0xE7EA50", VA = "0xE7EA50")]
		public void GetInvitableUsers()
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0xE7EB44", Offset = "0xE7EB44", VA = "0xE7EB44")]
		private void OnReceivedInvitableUsers(Message<UserList> message)
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0xE7EE64", Offset = "0xE7EE64", VA = "0xE7EE64")]
		private void OnReceivedUsersAndRooms(Message<UserAndRoomList> message)
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0xE7EFB4", Offset = "0xE7EFB4", VA = "0xE7EFB4")]
		private void LogElement(UserAndRoom userAndRoom)
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0xE7F36C", Offset = "0xE7F36C", VA = "0xE7F36C")]
		public OculusFriends()
		{
		}
	}
}
namespace Alvo.Party
{
	[Serializable]
	[Token(Token = "0x200073C")]
	public struct OculusDestination
	{
		[Token(Token = "0x40039E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string destinationAPI;

		[Token(Token = "0x40039E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string lobbySessionID;

		[Token(Token = "0x40039E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string matchSessionID;

		[Token(Token = "0x40039E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isJoinable;
	}
	[Token(Token = "0x200073D")]
	public class AlvoOculusDestinations : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200073E")]
		[CompilerGenerated]
		private sealed class <SetDestinationCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40039E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40039E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40039E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AlvoOculusDestinations <>4__this;

			[Token(Token = "0x40039EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string lobbyID;

			[Token(Token = "0x40039EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string matchID;

			[Token(Token = "0x40039EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool joinable;

			[Token(Token = "0x40039ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string destAPI;

			[Token(Token = "0x170004CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B89")]
				[Address(RVA = "0xE7FEDC", Offset = "0xE7FEDC", VA = "0xE7FEDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B8B")]
				[Address(RVA = "0xE7FF24", Offset = "0xE7FF24", VA = "0xE7FF24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B86")]
			[Address(RVA = "0xE7F770", Offset = "0xE7F770", VA = "0xE7F770")]
			[DebuggerHidden]
			public <SetDestinationCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0xE7FDB8", Offset = "0xE7FDB8", VA = "0xE7FDB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B88")]
			[Address(RVA = "0xE7FDBC", Offset = "0xE7FDBC", VA = "0xE7FDBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0xE7FEE4", Offset = "0xE7FEE4", VA = "0xE7FEE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40039E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool setError;

		[Token(Token = "0x40039E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusDestination destination;

		[Token(Token = "0x40039E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<GameMode, string> destinationsDic;

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0xE7F3D0", Offset = "0xE7F3D0", VA = "0xE7F3D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0xE7F54C", Offset = "0xE7F54C", VA = "0xE7F54C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0xE7F6C8", Offset = "0xE7F6C8", VA = "0xE7F6C8")]
		public void InitialLandingDestination(int FID)
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0xE7F6CC", Offset = "0xE7F6CC", VA = "0xE7F6CC")]
		public void SetDestination(GameMode gameMode, int leaderFID, string roomID, bool joinable)
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0xE7F6D0", Offset = "0xE7F6D0", VA = "0xE7F6D0")]
		public void SetIsJoinable(bool isJoinable)
		{
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0xE7F6D4", Offset = "0xE7F6D4", VA = "0xE7F6D4")]
		public void SetLeaderFID(int leaderFID)
		{
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0xE7F6D8", Offset = "0xE7F6D8", VA = "0xE7F6D8")]
		[IteratorStateMachine(typeof(<SetDestinationCoroutine>d__9))]
		private IEnumerator SetDestinationCoroutine(string destAPI, string lobbyID, string matchID, bool joinable)
		{
			return null;
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0xE7F798", Offset = "0xE7F798", VA = "0xE7F798")]
		public void PrintDestination()
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0xE7FAB8", Offset = "0xE7FAB8", VA = "0xE7FAB8")]
		private void LogError(string message, Error error)
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0xE7FBE0", Offset = "0xE7FBE0", VA = "0xE7FBE0")]
		public AlvoOculusDestinations()
		{
		}
	}
	[Token(Token = "0x200073F")]
	public class AlvoPartyMemberContextMenu : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40039EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text playerName;

		[Token(Token = "0x40039EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text friendId;

		[Token(Token = "0x40039F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject headerGo;

		[Token(Token = "0x40039F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject kickPlayerGo;

		[Token(Token = "0x40039F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject promotePlayerGo;

		[Token(Token = "0x40039F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject mutePlayerGo;

		[Token(Token = "0x40039F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TMP_Text mutePlayerText;

		[Token(Token = "0x40039F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject leavePartyGo;

		[Token(Token = "0x40039F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LanguageText muteText;

		[Token(Token = "0x40039F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LanguageText unmuteText;

		[Token(Token = "0x40039F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public StagedPlayer player;

		[Token(Token = "0x40039F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject mainPnlGo;

		[Token(Token = "0x40039FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VoiceChatTitle voiceChat;

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0xE7FF2C", Offset = "0xE7FF2C", VA = "0xE7FF2C")]
		public void SetContextMenu(StagedPlayer player, VoiceChatTitle voiceChat)
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0xE802C8", Offset = "0xE802C8", VA = "0xE802C8")]
		public void MutePlayer()
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0xE80364", Offset = "0xE80364", VA = "0xE80364")]
		public void KickPlayer()
		{
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0xE805B0", Offset = "0xE805B0", VA = "0xE805B0")]
		public void PromoteToLeader()
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0xE807A4", Offset = "0xE807A4", VA = "0xE807A4")]
		public void LeaveParty()
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0xE80344", Offset = "0xE80344", VA = "0xE80344")]
		public void CloseMenu()
		{
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0xE80D60", Offset = "0xE80D60", VA = "0xE80D60")]
		public AlvoPartyMemberContextMenu()
		{
		}
	}
	[Token(Token = "0x2000740")]
	public class AlvoPartyMemberElement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40039FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("UI Element references")]
		private Image avatarImg;

		[Token(Token = "0x40039FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject leaderIconGo;

		[Token(Token = "0x40039FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject go;

		[Token(Token = "0x40039FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AlvoPartySystemUI alvoPartySystemUI;

		[Token(Token = "0x40039FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StagedPlayer stagedPlayer;

		[Token(Token = "0x4003A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VoiceChatTitle voiceChat;

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0xE80D68", Offset = "0xE80D68", VA = "0xE80D68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0xE80DE8", Offset = "0xE80DE8", VA = "0xE80DE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0xE80E68", Offset = "0xE80E68", VA = "0xE80E68")]
		public void OpenContextMenu()
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0xE8105C", Offset = "0xE8105C", VA = "0xE8105C")]
		public void SetStagedPlayer(StagedPlayer stagedPlayer, bool mainPlayer = false)
		{
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0xE811BC", Offset = "0xE811BC", VA = "0xE811BC")]
		public void UpdateAvatar(int FID, Sprite texture)
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0xE81270", Offset = "0xE81270", VA = "0xE81270")]
		public void SetAsLeader(bool isLeader)
		{
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0xE81290", Offset = "0xE81290", VA = "0xE81290")]
		public AlvoPartyMemberElement()
		{
		}
	}
	[Token(Token = "0x2000741")]
	public class AlvoPartyNet : UnityEngine.MonoBehaviour, IChatClientListener
	{
		[Token(Token = "0x2000742")]
		public delegate void Notifcation(bool inGame, string id);

		[Token(Token = "0x2000743")]
		public delegate void StateChange(ChatState state);

		[Token(Token = "0x2000745")]
		[CompilerGenerated]
		private sealed class <SendAcceptInvitationCoroutine>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AlvoPartyNet <>4__this;

			[Token(Token = "0x4003A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string FIDFromPlayerWhoAccepted;

			[Token(Token = "0x4003A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string host;

			[Token(Token = "0x170004D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF2")]
				[Address(RVA = "0xEA1814", Offset = "0xEA1814", VA = "0xEA1814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF4")]
				[Address(RVA = "0xEA185C", Offset = "0xEA185C", VA = "0xEA185C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xEA0638", Offset = "0xEA0638", VA = "0xEA0638")]
			[DebuggerHidden]
			public <SendAcceptInvitationCoroutine>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xEA0660", Offset = "0xEA0660", VA = "0xEA0660", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xEA0664", Offset = "0xEA0664", VA = "0xEA0664", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xEA181C", Offset = "0xEA181C", VA = "0xEA181C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000747")]
		[CompilerGenerated]
		private sealed class <ReconectDeepLinkCoroutine>d__98 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AlvoPartyNet <>4__this;

			[Token(Token = "0x170004D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BFA")]
				[Address(RVA = "0xEA19D0", Offset = "0xEA19D0", VA = "0xEA19D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BFC")]
				[Address(RVA = "0xEA1A18", Offset = "0xEA1A18", VA = "0xEA1A18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0xEA1890", Offset = "0xEA1890", VA = "0xEA1890")]
			[DebuggerHidden]
			public <ReconectDeepLinkCoroutine>d__98(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xEA18B8", Offset = "0xEA18B8", VA = "0xEA18B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xEA18BC", Offset = "0xEA18BC", VA = "0xEA18BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xEA19D8", Offset = "0xEA19D8", VA = "0xEA19D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000748")]
		[CompilerGenerated]
		private sealed class <DelayRoomJoinCoroutine>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AlvoPartyNet <>4__this;

			[Token(Token = "0x4003A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JoinRoomInfo roomInfo;

			[Token(Token = "0x170004D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C00")]
				[Address(RVA = "0xEA1C44", Offset = "0xEA1C44", VA = "0xEA1C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C02")]
				[Address(RVA = "0xEA1C8C", Offset = "0xEA1C8C", VA = "0xEA1C8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0xEA1A20", Offset = "0xEA1A20", VA = "0xEA1A20")]
			[DebuggerHidden]
			public <DelayRoomJoinCoroutine>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xEA1A48", Offset = "0xEA1A48", VA = "0xEA1A48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xEA1A4C", Offset = "0xEA1A4C", VA = "0xEA1A4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xEA1C4C", Offset = "0xEA1C4C", VA = "0xEA1C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000749")]
		[CompilerGenerated]
		private sealed class <InvitationAcceptedCoroutine>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChatMessage deserializedMessage;

			[Token(Token = "0x4003A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AlvoPartyNet <>4__this;

			[Token(Token = "0x4003A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <searchingGames>5__2;

			[Token(Token = "0x4003A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private StagedPlayer <newPlayer>5__3;

			[Token(Token = "0x170004D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C06")]
				[Address(RVA = "0xEA2D34", Offset = "0xEA2D34", VA = "0xEA2D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C08")]
				[Address(RVA = "0xEA2D7C", Offset = "0xEA2D7C", VA = "0xEA2D7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xEA1C94", Offset = "0xEA1C94", VA = "0xEA1C94")]
			[DebuggerHidden]
			public <InvitationAcceptedCoroutine>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0xEA1CBC", Offset = "0xEA1CBC", VA = "0xEA1CBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C05")]
			[Address(RVA = "0xEA1CC0", Offset = "0xEA1CC0", VA = "0xEA1CC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xEA2D3C", Offset = "0xEA2D3C", VA = "0xEA2D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200074B")]
		[CompilerGenerated]
		private sealed class <PlayerDisconnectedLeaveDelay>d__119 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AlvoPartyNet <>4__this;

			[Token(Token = "0x170004D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C0E")]
				[Address(RVA = "0xEA2F34", Offset = "0xEA2F34", VA = "0xEA2F34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C10")]
				[Address(RVA = "0xEA2F7C", Offset = "0xEA2F7C", VA = "0xEA2F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xEA2DB4", Offset = "0xEA2DB4", VA = "0xEA2DB4")]
			[DebuggerHidden]
			public <PlayerDisconnectedLeaveDelay>d__119(int <>1__state)
			{
			}

			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xEA2DDC", Offset = "0xEA2DDC", VA = "0xEA2DDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0xEA2DE0", Offset = "0xEA2DE0", VA = "0xEA2DE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xEA2F3C", Offset = "0xEA2F3C", VA = "0xEA2F3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] ChannelsToJoinOnConnect;

		[Token(Token = "0x4003A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] FriendsList;

		[Token(Token = "0x4003A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int HistoryLengthToFetch;

		[Token(Token = "0x4003A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ChatClient chatClient;

		[Token(Token = "0x4003A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FriendlistManager m_friendlistManager;

		[Token(Token = "0x4003A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected internal ChatSettings chatAppSettings;

		[Token(Token = "0x4003A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject missingAppIdErrorPanel;

		[Token(Token = "0x4003A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject ConnectingLabel;

		[Token(Token = "0x4003A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AlvoSocialManager m_AlvoSocialManager;

		[Token(Token = "0x4003A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject UserIdFormPanel;

		[Token(Token = "0x4003A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InputField InputFieldChat;

		[Token(Token = "0x4003A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text CurrentChannelText;

		[Token(Token = "0x4003A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Toggle ChannelToggleToInstantiate;

		[Token(Token = "0x4003A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject FriendListUiItemtoInstantiate;

		[Token(Token = "0x4003A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<string, Toggle> channelToggles;

		[Token(Token = "0x4003A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<string, FriendItem> friendListItemLUT;

		[Token(Token = "0x4003A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<int> subscribedChannels;

		[Token(Token = "0x4003A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<string> channelsSubscribed;

		[Token(Token = "0x4003A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public PlayerLocalData m_PlayerLocalData;

		[Token(Token = "0x4003A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ChatState chatState;

		[Token(Token = "0x4003A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool ShowState;

		[Token(Token = "0x4003A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int sceneIndex;

		[Token(Token = "0x4003A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool init;

		[Token(Token = "0x4003A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float timer;

		[Token(Token = "0x4003A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int TestLength;

		[Token(Token = "0x4003A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private byte[] testBytes;

		[Token(Token = "0x4003A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string[] channelsToUnsuscribe;

		[Token(Token = "0x4003A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string[] channelsToCheck;

		[Token(Token = "0x4003A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<string> listOfChannels;

		[Token(Token = "0x4003A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private string[] newChannelsToSubscribe;

		[Token(Token = "0x4003A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ChatMessage chatMessage;

		[Token(Token = "0x4003A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private byte[] emptyByte;

		[Token(Token = "0x4003A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private WaitForSeconds waitFor5;

		[Token(Token = "0x4003A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private WaitForSeconds waitFor8;

		[Token(Token = "0x4003A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public DeepLinkChatSession deepLinkChatSession;

		[Token(Token = "0x4003A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public string lastHostJoined;

		[Token(Token = "0x4003A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private MissionMainUI missionMainUI;

		[Token(Token = "0x4003A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool joinResponse;

		[Token(Token = "0x4003A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public bool joining;

		[Token(Token = "0x4003A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private WaitForSeconds playerLeaveCheckDelay;

		[Token(Token = "0x170004CF")]
		public string UserName
		{
			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0xE81298", Offset = "0xE81298", VA = "0xE81298")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0xE812A0", Offset = "0xE812A0", VA = "0xE812A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004D0")]
		public string PartyHost
		{
			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0xE81590", Offset = "0xE81590", VA = "0xE81590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001C")]
		public static event Notifcation m_Notification
		{
			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0xE812A8", Offset = "0xE812A8", VA = "0xE812A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0xE81360", Offset = "0xE81360", VA = "0xE81360")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public static event StateChange StateHasChanged
		{
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0xE81418", Offset = "0xE81418", VA = "0xE81418")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0xE814D4", Offset = "0xE814D4", VA = "0xE814D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0xE815AC", Offset = "0xE815AC", VA = "0xE815AC")]
		public void Init(FriendlistManager _friendlistChat)
		{
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0xE817F8", Offset = "0xE817F8", VA = "0xE817F8")]
		public void Connect()
		{
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0xE81B38", Offset = "0xE81B38", VA = "0xE81B38")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0xE81B4C", Offset = "0xE81B4C", VA = "0xE81B4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0xE81B54", Offset = "0xE81B54", VA = "0xE81B54")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0xE81B68", Offset = "0xE81B68", VA = "0xE81B68")]
		public void Update()
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0xE81D10", Offset = "0xE81D10", VA = "0xE81D10", Slot = "4")]
		public void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0xE81DB8", Offset = "0xE81DB8", VA = "0xE81DB8")]
		public void RegisterFriends(List<string> friendsToAdd)
		{
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0xE81E48", Offset = "0xE81E48", VA = "0xE81E48")]
		public void ResetAllPartyFriends()
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0xE81ED8", Offset = "0xE81ED8", VA = "0xE81ED8")]
		public void OnEnterSend()
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0xE81F5C", Offset = "0xE81F5C", VA = "0xE81F5C")]
		public void OnClickSend()
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0xE81FF8", Offset = "0xE81FF8", VA = "0xE81FF8")]
		public void EndDataSend(Text inputField)
		{
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0xE81F58", Offset = "0xE81F58", VA = "0xE81F58")]
		public void SendChatMessage(string inputLine)
		{
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0xE8201C", Offset = "0xE8201C", VA = "0xE8201C")]
		public void AddOnlineChanngel(string channelName)
		{
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0xE82048", Offset = "0xE82048", VA = "0xE82048", Slot = "6")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0xE821C8", Offset = "0xE821C8", VA = "0xE821C8", Slot = "5")]
		public void OnDisconnected()
		{
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0xE823B8", Offset = "0xE823B8", VA = "0xE823B8", Slot = "7")]
		public void OnChatStateChange(ChatState state)
		{
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0xE824CC", Offset = "0xE824CC", VA = "0xE824CC", Slot = "10")]
		public void OnSubscribed(string[] channels, bool[] results)
		{
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0xE826EC", Offset = "0xE826EC", VA = "0xE826EC", Slot = "11")]
		public void OnUnsubscribed(string[] channels)
		{
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0xE826F0", Offset = "0xE826F0", VA = "0xE826F0")]
		public void UnsuscribeFromAllChannels()
		{
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0xE82770", Offset = "0xE82770", VA = "0xE82770")]
		public void SubscribeToNotSubscribedChannels(List<string> channelsToSubscribe)
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0xE829E0", Offset = "0xE829E0", VA = "0xE829E0", Slot = "8")]
		public void OnGetMessages(string channelName, string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0xE82D50", Offset = "0xE82D50", VA = "0xE82D50", Slot = "9")]
		public void OnPrivateMessage(string sender, object message, string channelName)
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0xE82D6C", Offset = "0xE82D6C", VA = "0xE82D6C", Slot = "12")]
		public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0xE82FEC", Offset = "0xE82FEC", VA = "0xE82FEC", Slot = "13")]
		public void OnUserSubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0xE82FF0", Offset = "0xE82FF0", VA = "0xE82FF0", Slot = "14")]
		public void OnUserUnsubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xE830A4", Offset = "0xE830A4", VA = "0xE830A4")]
		public void AddMessageToSelectedChannel(string msg)
		{
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xE82AD4", Offset = "0xE82AD4", VA = "0xE82AD4")]
		public void ShowChannel(string channelName)
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xE8330C", Offset = "0xE8330C", VA = "0xE8330C")]
		public bool ReadDeepLinkChat()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xE8358C", Offset = "0xE8358C", VA = "0xE8358C")]
		private void SendMsg(string receiverFID, byte type, byte[] bytes, string actionFID = "")
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0xE8370C", Offset = "0xE8370C", VA = "0xE8370C")]
		private void SendMsgToAll(List<StagedPlayer> receivers, byte type, byte[] bytes, string actionFID = "")
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xE837D8", Offset = "0xE837D8", VA = "0xE837D8")]
		public void SendStartGame(JoinRoomInfo roomInfo)
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0xE75C00", Offset = "0xE75C00", VA = "0xE75C00")]
		public bool SendAcceptInvitation(string FIDFromPlayerWhoAccepted, string host)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0xE838F8", Offset = "0xE838F8", VA = "0xE838F8")]
		[IteratorStateMachine(typeof(<SendAcceptInvitationCoroutine>d__86))]
		private IEnumerator SendAcceptInvitationCoroutine(string FIDFromPlayerWhoAccepted, string host)
		{
			return null;
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xE80808", Offset = "0xE80808", VA = "0xE80808")]
		public void SendLeaveParty()
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0xE83974", Offset = "0xE83974", VA = "0xE83974")]
		public void SendUpdatePartyMembers(UpdateTypes type)
		{
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0xE803D4", Offset = "0xE803D4", VA = "0xE803D4")]
		public void SendKickPlayer(string FID)
		{
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0xE80620", Offset = "0xE80620", VA = "0xE80620")]
		public void SendPromotePlayerToLeader(string FID)
		{
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0xE83A84", Offset = "0xE83A84", VA = "0xE83A84")]
		public void SendRequestSkinUpdate(byte skinIndex)
		{
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0xE83D54", Offset = "0xE83D54", VA = "0xE83D54")]
		public void SendRequestExpUpdate(int exp)
		{
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0xE83C64", Offset = "0xE83C64", VA = "0xE83C64")]
		public void SendUpdateSkinToAllPlayers(byte skinIndex, string actionFID)
		{
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0xE83F24", Offset = "0xE83F24", VA = "0xE83F24")]
		public void SendUpdateExpToAllPlayers(int exp, string actionFID)
		{
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0xE8400C", Offset = "0xE8400C", VA = "0xE8400C")]
		public void SendJoinConfirmation(string FID, JoiningResponse response, byte[] roomInfo)
		{
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0xE8413C", Offset = "0xE8413C", VA = "0xE8413C")]
		public void SendNotLeader(string FID, string leaderFID)
		{
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0xE841EC", Offset = "0xE841EC", VA = "0xE841EC")]
		public void ReconectDeepLink()
		{
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0xE8420C", Offset = "0xE8420C", VA = "0xE8420C")]
		[IteratorStateMachine(typeof(<ReconectDeepLinkCoroutine>d__98))]
		private IEnumerator ReconectDeepLinkCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0xE84274", Offset = "0xE84274", VA = "0xE84274")]
		public void SendDeepLinkJoinMsg()
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0xE842EC", Offset = "0xE842EC", VA = "0xE842EC")]
		public void LeaveDeepLinkSession()
		{
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0xE84428", Offset = "0xE84428", VA = "0xE84428")]
		private void ReceivePlayerKicked(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0xE8456C", Offset = "0xE8456C", VA = "0xE8456C")]
		private void ReceiveStartGame(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0xE848D0", Offset = "0xE848D0", VA = "0xE848D0")]
		private void CheckLanguageChanged()
		{
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0xE84850", Offset = "0xE84850", VA = "0xE84850")]
		[IteratorStateMachine(typeof(<DelayRoomJoinCoroutine>d__104))]
		private IEnumerator DelayRoomJoinCoroutine(JoinRoomInfo roomInfo)
		{
			return null;
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0xE849AC", Offset = "0xE849AC", VA = "0xE849AC")]
		private void ReceiveInvitationAccepted(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0xE84AD0", Offset = "0xE84AD0", VA = "0xE84AD0")]
		[IteratorStateMachine(typeof(<InvitationAcceptedCoroutine>d__106))]
		private IEnumerator InvitationAcceptedCoroutine(ChatMessage deserializedMessage)
		{
			return null;
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0xE84B44", Offset = "0xE84B44", VA = "0xE84B44")]
		private void ReceiveUserQuitParty(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xE84E3C", Offset = "0xE84E3C", VA = "0xE84E3C")]
		private void ReceiveUpdatePlayers(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xE851D0", Offset = "0xE851D0", VA = "0xE851D0")]
		private void ReceiveUpdateSkinRequest(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0xE85324", Offset = "0xE85324", VA = "0xE85324")]
		private void ReceiveUpdateSkin(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xE85458", Offset = "0xE85458", VA = "0xE85458")]
		private void RecieveUpdateExpRequest(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0xE855FC", Offset = "0xE855FC", VA = "0xE855FC")]
		private void RecieveUpdateExp(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0xE8578C", Offset = "0xE8578C", VA = "0xE8578C")]
		private void ReceivePlayerNotLeader(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0xE85928", Offset = "0xE85928", VA = "0xE85928")]
		private void ReceiveJoinConfirmation(ChatMessage deserializedMessage)
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0xE830A8", Offset = "0xE830A8", VA = "0xE830A8")]
		private void ReceiveMessage(byte[] message, string channelName)
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0xE84E04", Offset = "0xE84E04", VA = "0xE84E04")]
		private void ClosePartyAlone()
		{
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0xE85ECC", Offset = "0xE85ECC", VA = "0xE85ECC")]
		public void OnPhotonPlayerDisconnected(PhotonPlayer _player)
		{
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0xE85F80", Offset = "0xE85F80", VA = "0xE85F80")]
		[IteratorStateMachine(typeof(<PlayerDisconnectedLeaveDelay>d__119))]
		private IEnumerator PlayerDisconnectedLeaveDelay(PhotonPlayer _disconnectedPlayer)
		{
			return null;
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0xE85FE8", Offset = "0xE85FE8", VA = "0xE85FE8")]
		public AlvoPartyNet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200074C")]
	public struct DeepLinkChatSession
	{
		[Token(Token = "0x4003A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string deepLinkChannel;

		[Token(Token = "0x4003A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string deepLinkLeaderFID;

		[Token(Token = "0x4003A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool deepLinkSession;

		[Token(Token = "0x4003A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool deepLinkConnected;

		[Token(Token = "0x4003A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool deepLinkInit;
	}
	[Token(Token = "0x200074D")]
	public class AlvoPartySystemUI : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200074E")]
		public class JoinResponseMessage
		{
			[Token(Token = "0x4003A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JoiningResponse response;

			[Token(Token = "0x4003A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LanguageText message;

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0xEA3DA8", Offset = "0xEA3DA8", VA = "0xEA3DA8")]
			public JoinResponseMessage()
			{
			}
		}

		[Token(Token = "0x200074F")]
		[CompilerGenerated]
		private sealed class <UpdateStagedPlayersUICoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<StagedPlayer> m_PlayersJoined;

			[Token(Token = "0x4003A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AlvoPartySystemUI <>4__this;

			[Token(Token = "0x4003A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool init;

			[Token(Token = "0x4003A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool eventOverride;

			[Token(Token = "0x4003A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <count>5__2;

			[Token(Token = "0x4003A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x170004DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C29")]
				[Address(RVA = "0xEA44C8", Offset = "0xEA44C8", VA = "0xEA44C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C2B")]
				[Address(RVA = "0xEA4510", Offset = "0xEA4510", VA = "0xEA4510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C26")]
			[Address(RVA = "0xEA37B4", Offset = "0xEA37B4", VA = "0xEA37B4")]
			[DebuggerHidden]
			public <UpdateStagedPlayersUICoroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xEA3DB0", Offset = "0xEA3DB0", VA = "0xEA3DB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C28")]
			[Address(RVA = "0xEA3DB4", Offset = "0xEA3DB4", VA = "0xEA3DB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xEA44D0", Offset = "0xEA44D0", VA = "0xEA44D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsMainMenu;

		[Token(Token = "0x4003A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AlvoSocialManager alvoSocialManager;

		[Token(Token = "0x4003A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerLocalData playerLocalData;

		[Token(Token = "0x4003A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AlvoPartyNet alvoPartyNet;

		[Token(Token = "0x4003A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TitleRoomManager titleRoomManager;

		[Token(Token = "0x4003A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AlvoPartyMemberContextMenu contextMenu;

		[Token(Token = "0x4003A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TMP_Text StatusLbl;

		[Token(Token = "0x4003A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text userLbl;

		[Token(Token = "0x4003A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VrMainMenu mainMenu;

		[Token(Token = "0x4003A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VrSettings vrSettings;

		[Token(Token = "0x4003A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AlvoPartyMemberElement mainPlayerElement;

		[Token(Token = "0x4003A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AlvoPartyMemberElement[] partyMemberElements;

		[Token(Token = "0x4003A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject inviteBtn;

		[Token(Token = "0x4003A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject stagedPlayersParentGo;

		[Token(Token = "0x4003A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MenuCharacterDisplay[] hostCharacters;

		[Token(Token = "0x4003A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public MenuCharacterDisplay[] clientCharacters;

		[Token(Token = "0x4003A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public MenuCharacterDisplay[] allCharacters;

		[Token(Token = "0x4003A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject startingPartyGo;

		[Token(Token = "0x4003A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool leader;

		[Token(Token = "0x4003A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool init;

		[Token(Token = "0x4003A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WaitForSeconds cameraFadeWait;

		[Token(Token = "0x4003A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool eventInit;

		[Token(Token = "0x4003A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private List<JoinResponseMessage> joinResponseMessages;

		[Token(Token = "0x4003A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Dictionary<JoiningResponse, LanguageText> joinResponseMessagesDic;

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0xEA2F84", Offset = "0xEA2F84", VA = "0xEA2F84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0xEA321C", Offset = "0xEA321C", VA = "0xEA321C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0xEA32A4", Offset = "0xEA32A4", VA = "0xEA32A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0xEA35B8", Offset = "0xEA35B8", VA = "0xEA35B8")]
		private void StateHasChanged(ChatState state)
		{
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0xEA3678", Offset = "0xEA3678", VA = "0xEA3678")]
		public void InviteFriendsPs4()
		{
		}

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0xEA31B4", Offset = "0xEA31B4", VA = "0xEA31B4")]
		public void UpdateStagedPlayersUI(List<StagedPlayer> m_PlayersJoined, bool init = false, bool eventOverride = false)
		{
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0xEA3780", Offset = "0xEA3780", VA = "0xEA3780")]
		public void UpdateStagedPlayersIfReady()
		{
		}

		[Token(Token = "0x6002C18")]
		[Address(RVA = "0xEA36EC", Offset = "0xEA36EC", VA = "0xEA36EC")]
		[IteratorStateMachine(typeof(<UpdateStagedPlayersUICoroutine>d__31))]
		private IEnumerator UpdateStagedPlayersUICoroutine(List<StagedPlayer> m_PlayersJoined, bool init = false, bool eventOverride = false)
		{
			return null;
		}

		[Token(Token = "0x6002C19")]
		[Address(RVA = "0xEA37DC", Offset = "0xEA37DC", VA = "0xEA37DC")]
		public void Set3dCharactersParty(List<StagedPlayer> playersJoined)
		{
		}

		[Token(Token = "0x6002C1A")]
		[Address(RVA = "0xEA3988", Offset = "0xEA3988", VA = "0xEA3988")]
		public void OpenContextMenu(StagedPlayer player, VoiceChatTitle voiceChat)
		{
		}

		[Token(Token = "0x6002C1B")]
		[Address(RVA = "0xEA39A4", Offset = "0xEA39A4", VA = "0xEA39A4")]
		public void CloseContextMenu()
		{
		}

		[Token(Token = "0x6002C1C")]
		[Address(RVA = "0xEA3134", Offset = "0xEA3134", VA = "0xEA3134")]
		public void SetSettingsLeaveBtns()
		{
		}

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0xEA39C0", Offset = "0xEA39C0", VA = "0xEA39C0")]
		public void ShowJoiningParty()
		{
		}

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0xEA0E14", Offset = "0xEA0E14", VA = "0xEA0E14")]
		public void ShowJoinPartyResponse(JoiningResponse response)
		{
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0xEA3A48", Offset = "0xEA3A48", VA = "0xEA3A48")]
		public void SetVoiceChatBtn(string FID, VoiceChatTitle voiceChat)
		{
		}

		[Token(Token = "0x6002C20")]
		[Address(RVA = "0xEA3AE8", Offset = "0xEA3AE8", VA = "0xEA3AE8")]
		public Image GetVoiceBubble(string FID)
		{
			return null;
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0xEA3B88", Offset = "0xEA3B88", VA = "0xEA3B88")]
		public Image GetVoiceSlash(string FID)
		{
			return null;
		}

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0xEA3C28", Offset = "0xEA3C28", VA = "0xEA3C28")]
		public void StartingParty()
		{
		}

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0xEA3CAC", Offset = "0xEA3CAC", VA = "0xEA3CAC")]
		public void PartyStarted()
		{
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0xEA3D30", Offset = "0xEA3D30", VA = "0xEA3D30")]
		public AlvoPartySystemUI()
		{
		}
	}
	[Token(Token = "0x2000750")]
	public class AlvoSocialManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000751")]
		public struct RandomBotData
		{
			[Token(Token = "0x4003A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Obsolete]
			public Sprite botAvatar;

			[Token(Token = "0x4003A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string botName;
		}

		[Token(Token = "0x2000752")]
		public delegate void AvatarLoaded(int FID, Sprite sprite);

		[Token(Token = "0x200075B")]
		[CompilerGenerated]
		private sealed class <LoadAvatarCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string avatarUrl;

			[Token(Token = "0x4003A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool main;

			[Token(Token = "0x4003A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AlvoSocialManager <>4__this;

			[Token(Token = "0x4003AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int FID;

			[Token(Token = "0x4003AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170004DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C71")]
				[Address(RVA = "0xEA72E0", Offset = "0xEA72E0", VA = "0xEA72E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C73")]
				[Address(RVA = "0xEA7328", Offset = "0xEA7328", VA = "0xEA7328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0xEA62C8", Offset = "0xEA62C8", VA = "0xEA62C8")]
			[DebuggerHidden]
			public <LoadAvatarCoroutine>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0xEA6E74", Offset = "0xEA6E74", VA = "0xEA6E74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C70")]
			[Address(RVA = "0xEA6E78", Offset = "0xEA6E78", VA = "0xEA6E78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xEA72E8", Offset = "0xEA72E8", VA = "0xEA72E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RandomBotData[] rBotData;

		[Token(Token = "0x4003A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_PlayersIn;

		[Token(Token = "0x4003A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AlvoPartyNet m_AlvoData;

		[Token(Token = "0x4003A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_PlayButton;

		[Token(Token = "0x4003A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlayerLocalData m_PlayerLocalData;

		[Token(Token = "0x4003A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FriendlistUI m_FriendsUI;

		[Token(Token = "0x4003A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AlvoPartySystemUI m_AlvoPartySystemUI;

		[Token(Token = "0x4003A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AlvoPartyNet m_AlvoPartyNet;

		[Token(Token = "0x4003A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AlvoLevels alvoLevels;

		[Token(Token = "0x4003A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public List<StagedPlayer> m_PlayersJoined;

		[Token(Token = "0x4003A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Avatar> m_Avatars;

		[Token(Token = "0x4003A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<string> allPlayersIds;

		[Token(Token = "0x4003A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<AlvoFriend> m_FriendsList;

		[Token(Token = "0x4003A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AlvoFriend m_MainPlayer;

		[Token(Token = "0x4003A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Sony.NP.Core.NpAccountId> accountIds;

		[Token(Token = "0x4003A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string[] m_platformTrustableUrlDomain;

		[Token(Token = "0x4003A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int m_CurrentStagedLevel;

		[Token(Token = "0x4003A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int m_GameType;

		[Token(Token = "0x4003A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AlvoOculusRooms oculusRooms;

		[Token(Token = "0x4003A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string m_HostID;

		[Token(Token = "0x4003A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int m_HostIDInt;

		[Token(Token = "0x4003A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public StagedPlayer m_LocalStagedPlayer;

		[Token(Token = "0x4003A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LevelManager m_LevelManager;

		[Token(Token = "0x4003A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool queueJoinRoom;

		[Token(Token = "0x4003A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string queRoomToJoin;

		[Token(Token = "0x4003A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Space]
		[Header("Default player icons")]
		public Sprite defaultBot;

		[Token(Token = "0x4003A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Sprite defaultPS4;

		[Token(Token = "0x4003A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Sprite defaultPC;

		[Token(Token = "0x4003A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Sprite defaultOQ;

		[Token(Token = "0x4003A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Sprite defaultPICO;

		[Token(Token = "0x4003A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Space]
		[Header("Default player icons for ps4")]
		public Sprite psnGenericAvatar;

		[Token(Token = "0x4003A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Sprite psnPs4Avatar;

		[Token(Token = "0x4003A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AlvoSocialManager m_Instance;

		[Token(Token = "0x170004DD")]
		public static AlvoSocialManager Instance
		{
			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0xEA4724", Offset = "0xEA4724", VA = "0xEA4724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DE")]
		public static bool InParty
		{
			[Token(Token = "0x6002C30")]
			[Address(RVA = "0xEA476C", Offset = "0xEA476C", VA = "0xEA476C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400001E")]
		public static event AvatarLoaded AvatarHasLoaded
		{
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xEA4518", Offset = "0xEA4518", VA = "0xEA4518")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0xEA45D0", Offset = "0xEA45D0", VA = "0xEA45D0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0xEA4688", Offset = "0xEA4688", VA = "0xEA4688")]
		public Sprite GetDefaultSprite(Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0xEA485C", Offset = "0xEA485C", VA = "0xEA485C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0xEA1108", Offset = "0xEA1108", VA = "0xEA1108")]
		public void ResetLocalParty(bool init = false, bool keepDeepLink = false)
		{
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0xEA4B38", Offset = "0xEA4B38", VA = "0xEA4B38")]
		public void PromotePlayerToLeader(string FID)
		{
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0xEA4C10", Offset = "0xEA4C10", VA = "0xEA4C10")]
		public void ErrorPartyFull()
		{
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0xEA4C78", Offset = "0xEA4C78", VA = "0xEA4C78")]
		public void ErrorGameFull()
		{
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0xEA4CE0", Offset = "0xEA4CE0", VA = "0xEA4CE0")]
		public void StartingParty()
		{
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0xEA4D5C", Offset = "0xEA4D5C", VA = "0xEA4D5C")]
		public void PartyStarted()
		{
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0xEA178C", Offset = "0xEA178C", VA = "0xEA178C")]
		public void UpdatePartyUI()
		{
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0xEA1BBC", Offset = "0xEA1BBC", VA = "0xEA1BBC")]
		public void CloseContextMenu()
		{
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0xEA29B0", Offset = "0xEA29B0", VA = "0xEA29B0")]
		public void AddPlayer(StagedPlayer stagedPlayers)
		{
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0xEA4DE0", Offset = "0xEA4DE0", VA = "0xEA4DE0")]
		public void UserDisconected(string FID)
		{
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0xEA2BA8", Offset = "0xEA2BA8", VA = "0xEA2BA8")]
		public void RegisterAllFriends()
		{
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0xEA4FA8", Offset = "0xEA4FA8", VA = "0xEA4FA8")]
		public void UpdateAllPlayers(List<StagedPlayer> stagedPlayers)
		{
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xEA5358", Offset = "0xEA5358", VA = "0xEA5358")]
		public void UpdateMyCharacterSkin(byte skinIndex)
		{
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0xEA5484", Offset = "0xEA5484", VA = "0xEA5484")]
		public void UpdateMyCharacterExp(int exp)
		{
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0xEA55B0", Offset = "0xEA55B0", VA = "0xEA55B0")]
		public void UpdateCharacterSkin(string FID, byte skinIndex)
		{
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0xEA5714", Offset = "0xEA5714", VA = "0xEA5714")]
		public void UpdatePlayerExp(string FID, int exp)
		{
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0xEA58F4", Offset = "0xEA58F4", VA = "0xEA58F4")]
		public bool IsInParty(string FID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0xEA59D8", Offset = "0xEA59D8", VA = "0xEA59D8")]
		public bool IsPartyNovice()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0xEA5AE4", Offset = "0xEA5AE4", VA = "0xEA5AE4")]
		public void KickAllOtherPlatformPlayers()
		{
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0xEA5BE4", Offset = "0xEA5BE4", VA = "0xEA5BE4")]
		public void LoadMainAvatar()
		{
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0xEA5CB0", Offset = "0xEA5CB0", VA = "0xEA5CB0")]
		public bool IsAvatarFromTrustableSource(string avatarUrl, Platform platform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0xEA5D8C", Offset = "0xEA5D8C", VA = "0xEA5D8C")]
		public void LoadAvatar(string avatarUrl, int FID, int platform, bool main = false)
		{
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0xEA6070", Offset = "0xEA6070", VA = "0xEA6070")]
		public Sprite GetAvatar(int FID, Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0xEA5C1C", Offset = "0xEA5C1C", VA = "0xEA5C1C")]
		[IteratorStateMachine(typeof(<LoadAvatarCoroutine>d__67))]
		private IEnumerator LoadAvatarCoroutine(string avatarUrl, int FID, bool main = false)
		{
			return null;
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0xEA62F0", Offset = "0xEA62F0", VA = "0xEA62F0")]
		public static List<AlvoFriend> SortFriendsAlphabetically(List<AlvoFriend> _FriendsLists)
		{
			return null;
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0xEA643C", Offset = "0xEA643C", VA = "0xEA643C")]
		public static byte[] SerializeFriendsList(List<AlvoFriend> alvoFriends)
		{
			return null;
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0xEA657C", Offset = "0xEA657C", VA = "0xEA657C")]
		public static List<AlvoFriend> DeserializeFriends(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0xEA6784", Offset = "0xEA6784", VA = "0xEA6784")]
		public AlvoSocialManager()
		{
		}
	}
	[Token(Token = "0x200075C")]
	public class SimplePartyBalancer : PunBehaviour
	{
		[Token(Token = "0x4003AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool balanceDone;

		[Token(Token = "0x4003AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetManager netManager;

		[Token(Token = "0x4003AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerManager playerManager;

		[Token(Token = "0x4003AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GroupedPlayers> groupedPlayers;

		[Token(Token = "0x4003AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<PlayerBalanceData> team1;

		[Token(Token = "0x4003AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<PlayerBalanceData> team2;

		[Token(Token = "0x4003AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int lastTeamAsigned;

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0xEA7330", Offset = "0xEA7330", VA = "0xEA7330")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0xEA73A0", Offset = "0xEA73A0", VA = "0xEA73A0")]
		public void RegisterNewPlayer(PlayerBalanceData data)
		{
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0xEA7BC0", Offset = "0xEA7BC0", VA = "0xEA7BC0")]
		public void InGameTeamAssignment(PlayerProfile profile)
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0xEA7E98", Offset = "0xEA7E98", VA = "0xEA7E98")]
		public void FinishBalancePeriod()
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0xEA7FC8", Offset = "0xEA7FC8", VA = "0xEA7FC8")]
		public void SyncBalanceDone(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0xEA7688", Offset = "0xEA7688", VA = "0xEA7688")]
		private void PreGameBalance()
		{
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0xEA80F0", Offset = "0xEA80F0", VA = "0xEA80F0")]
		private void AssignGroupTeam(GroupedPlayers group)
		{
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0xEA84AC", Offset = "0xEA84AC", VA = "0xEA84AC")]
		[PunRPC]
		private void FinishBalanceMsg()
		{
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0xEA7958", Offset = "0xEA7958", VA = "0xEA7958")]
		private void SendResults()
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0xEA84B8", Offset = "0xEA84B8", VA = "0xEA84B8", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0xEA7DB0", Offset = "0xEA7DB0", VA = "0xEA7DB0")]
		private bool PartyInTeam(int team, int leaderFID)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0xEA83E4", Offset = "0xEA83E4", VA = "0xEA83E4")]
		private void AssignGroupToTeam(GroupedPlayers group, int teamNum)
		{
		}

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0xEA809C", Offset = "0xEA809C", VA = "0xEA809C")]
		private void AssignSinglePlayerTeam(int actorID, int leaderFID)
		{
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0xEA8718", Offset = "0xEA8718", VA = "0xEA8718")]
		private void AddPlayerToGroup(ref List<PlayerBalanceData> team, int actorID, int leaderFID)
		{
		}

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0xEA87D4", Offset = "0xEA87D4", VA = "0xEA87D4")]
		private int TeamLessPlayers()
		{
			return default(int);
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0xEA8370", Offset = "0xEA8370", VA = "0xEA8370")]
		private bool EnoughSpaceInTeam(int team, int playerCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0xEA8850", Offset = "0xEA8850", VA = "0xEA8850")]
		private void MoveLastPlayer(ref List<PlayerBalanceData> from, ref List<PlayerBalanceData> to)
		{
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0xEA823C", Offset = "0xEA823C", VA = "0xEA823C")]
		private void VerifyTeamBalance()
		{
		}

		[Token(Token = "0x6002C86")]
		[Address(RVA = "0xEA8958", Offset = "0xEA8958", VA = "0xEA8958")]
		public SimplePartyBalancer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000761")]
	public struct GroupedPlayers
	{
		[Token(Token = "0x4003AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leaderFID;

		[Token(Token = "0x4003AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<int> players;
	}
	[Serializable]
	[Token(Token = "0x2000762")]
	public struct PlayerBalanceData
	{
		[Token(Token = "0x4003AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int actorID;

		[Token(Token = "0x4003AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int leaderFID;
	}
}
namespace Alvo.Presence
{
	[Token(Token = "0x2000763")]
	public class AlvoPresenceManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000764")]
		public delegate void EventSetInitialPresence(int FID);

		[Token(Token = "0x2000765")]
		public delegate void EventSetPresence(GameMode gameMode, int leaderFID, string roomID, bool joinable);

		[Token(Token = "0x2000766")]
		public delegate void EventSetIsJoinable(bool isJoinable);

		[Token(Token = "0x2000767")]
		public delegate void EventSetLeaderFID(int leaderFID);

		[Token(Token = "0x4003AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AlvoSocialManager socialManager;

		[Token(Token = "0x1400001F")]
		public static event EventSetInitialPresence OnSetInitialPresence
		{
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xEA8BC0", Offset = "0xEA8BC0", VA = "0xEA8BC0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C93")]
			[Address(RVA = "0xEA8C78", Offset = "0xEA8C78", VA = "0xEA8C78")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event EventSetPresence OnSetPresence
		{
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0xEA8D30", Offset = "0xEA8D30", VA = "0xEA8D30")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C95")]
			[Address(RVA = "0xEA8DEC", Offset = "0xEA8DEC", VA = "0xEA8DEC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event EventSetIsJoinable OnSetIsJoinable
		{
			[Token(Token = "0x6002C96")]
			[Address(RVA = "0xEA8EA8", Offset = "0xEA8EA8", VA = "0xEA8EA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C97")]
			[Address(RVA = "0xEA8F64", Offset = "0xEA8F64", VA = "0xEA8F64")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event EventSetLeaderFID OnSetLeaderFID
		{
			[Token(Token = "0x6002C98")]
			[Address(RVA = "0xEA9020", Offset = "0xEA9020", VA = "0xEA9020")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C99")]
			[Address(RVA = "0xEA90DC", Offset = "0xEA90DC", VA = "0xEA90DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0xEA9198", Offset = "0xEA9198", VA = "0xEA9198")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0xEA4960", Offset = "0xEA4960", VA = "0xEA4960")]
		public void SetInitialPresence(int FID)
		{
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0xEA9274", Offset = "0xEA9274", VA = "0xEA9274")]
		public void SetPresence(GameMode gameMode, int leaderFID, string roomID, bool joinable)
		{
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0xEA9390", Offset = "0xEA9390", VA = "0xEA9390")]
		public void SetPresenseAndJoinable(GameMode gameMode, int leaderFID, string roomID)
		{
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0xEA96B4", Offset = "0xEA96B4", VA = "0xEA96B4")]
		public void SetIsJoinable(bool isJoinable)
		{
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0xEA4A4C", Offset = "0xEA4A4C", VA = "0xEA4A4C")]
		public void SetLeaderFID(int leaderFID)
		{
		}

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0xEA97C4", Offset = "0xEA97C4", VA = "0xEA97C4")]
		public void OnSceneLoaded(SceneType sceneType)
		{
		}

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0xEA5344", Offset = "0xEA5344", VA = "0xEA5344")]
		public void UpdateIsJoinable()
		{
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0xEA94B8", Offset = "0xEA94B8", VA = "0xEA94B8")]
		private bool IsJoinable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0xEA993C", Offset = "0xEA993C", VA = "0xEA993C")]
		public AlvoPresenceManager()
		{
		}
	}
}
namespace Alvo.Networking
{
	[Serializable]
	[Token(Token = "0x2000768")]
	public class AlvoMultiDimensionalPool
	{
		[Token(Token = "0x4003ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("The gameobject used to create an object pool.")]
		public GameObject prefab;

		[Token(Token = "0x4003ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Number of this type of object to store in object pool.")]
		public int poolSize;

		[Token(Token = "0x4003ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("List of pooled game objects (should never have any missing list entries at runtime).")]
		public List<GameObject> pooledObjs;

		[Token(Token = "0x4003ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loadAtStart;

		[Token(Token = "0x4003ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetReference assetToLoad;

		[Token(Token = "0x4003ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] gameModes;

		[Token(Token = "0x6002CB4")]
		[Address(RVA = "0xEA9F5C", Offset = "0xEA9F5C", VA = "0xEA9F5C")]
		public AlvoMultiDimensionalPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000769")]
	public class AlvoPhotonPool : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200076A")]
		[CompilerGenerated]
		private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AlvoPhotonPool <>4__this;

			[Token(Token = "0x4003AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x4003AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperationHandle<GameObject> <goHandle>5__3;

			[Token(Token = "0x170004E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CBD")]
				[Address(RVA = "0xEAAC58", Offset = "0xEAAC58", VA = "0xEAAC58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CBF")]
				[Address(RVA = "0xEAACA0", Offset = "0xEAACA0", VA = "0xEAACA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xEAA08C", Offset = "0xEAA08C", VA = "0xEAA08C")]
			[DebuggerHidden]
			public <Start>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0xEAA634", Offset = "0xEAA634", VA = "0xEAA634", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0xEAA638", Offset = "0xEAA638", VA = "0xEAA638", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0xEAAC60", Offset = "0xEAAC60", VA = "0xEAAC60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AlvoPhotonPool instance;

		[Token(Token = "0x4003AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform myTransform;

		[Token(Token = "0x4003AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject AIPrefab;

		[Token(Token = "0x4003AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("List of object pools that are active in the scene. Index numbers of pools in this list are used by other scripts to identify which pooled objects to spawn.")]
		public List<AlvoMultiDimensionalPool> objRegistry;

		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0xEA9FD8", Offset = "0xEA9FD8", VA = "0xEA9FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0xEAA024", Offset = "0xEAA024", VA = "0xEAA024")]
		[IteratorStateMachine(typeof(<Start>d__5))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0xEAA0B4", Offset = "0xEAA0B4", VA = "0xEAA0B4")]
		public GameObject SpawnPooledObj(int objRegIndex, Vector3 spawnPosition, Quaternion spawnRotation)
		{
			return null;
		}

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0xEAA458", Offset = "0xEAA458", VA = "0xEAA458")]
		public void RecyclePooledObj(int objRegIndex, GameObject obj)
		{
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0xEAA5B8", Offset = "0xEAA5B8", VA = "0xEAA5B8")]
		public AlvoPhotonPool()
		{
		}
	}
	[Token(Token = "0x200076B")]
	public class AlvoPingDisplay : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int perfectPingLT;

		[Token(Token = "0x4003ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int highPingLT;

		[Token(Token = "0x4003ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int midPingLT;

		[Token(Token = "0x4003ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space]
		[Header("Colors")]
		public Color32 greenColor;

		[Token(Token = "0x4003ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32 yellowColor;

		[Token(Token = "0x4003ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color32 redColor;

		[Token(Token = "0x4003ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color32 transparentColor;

		[Token(Token = "0x4003AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space]
		public TMP_Text pingDisplayTxt;

		[Token(Token = "0x4003AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject go;

		[Token(Token = "0x4003AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject pingTextGo;

		[Token(Token = "0x4003AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image[] pingImg;

		[Token(Token = "0x6002CC0")]
		[Address(RVA = "0xEAACA8", Offset = "0xEAACA8", VA = "0xEAACA8")]
		public void SetPing(int ping, bool masterClient)
		{
		}

		[Token(Token = "0x6002CC1")]
		[Address(RVA = "0xEAB0C8", Offset = "0xEAB0C8", VA = "0xEAB0C8")]
		public AlvoPingDisplay()
		{
		}
	}
	[Token(Token = "0x200076C")]
	public class AlvoPoolTransformSync : PunBehaviour
	{
		[Token(Token = "0x4003AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool syncPosition;

		[Token(Token = "0x4003AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useNetworkPositionPrediction;

		[Token(Token = "0x4003AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool syncRotation;

		[Token(Token = "0x4003AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lerpSpeed;

		[Token(Token = "0x4003AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetTransform;

		[Token(Token = "0x4003AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float velocity;

		[Token(Token = "0x4003ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 direction;

		[Token(Token = "0x4003ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 netPos;

		[Token(Token = "0x4003ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lerpPosition;

		[Token(Token = "0x4003ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 previousPos;

		[Token(Token = "0x4003ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float previousTime;

		[Token(Token = "0x4003ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool received;

		[Token(Token = "0x4003AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion netRotation;

		[Token(Token = "0x4003AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 netPosition;

		[Token(Token = "0x4003AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LevelManager levelManager;

		[Token(Token = "0x4003AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerData playerData;

		[Token(Token = "0x4003AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int playerID;

		[Token(Token = "0x6002CC2")]
		[Address(RVA = "0xEAB0E4", Offset = "0xEAB0E4", VA = "0xEAB0E4", Slot = "44")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6002CC3")]
		[Address(RVA = "0xEAB240", Offset = "0xEAB240", VA = "0xEAB240")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0xEAB2A4", Offset = "0xEAB2A4", VA = "0xEAB2A4")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0xEAB4D8", Offset = "0xEAB4D8", VA = "0xEAB4D8")]
		private void MovementCalculations()
		{
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0xEAB740", Offset = "0xEAB740", VA = "0xEAB740")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0xEABC54", Offset = "0xEABC54", VA = "0xEABC54")]
		public AlvoPoolTransformSync()
		{
		}
	}
	[Token(Token = "0x200076D")]
	public class EndMatchNetworking : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200076E")]
		[CompilerGenerated]
		private sealed class <MasterEndOfMatchRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EndMatchNetworking <>4__this;

			[Token(Token = "0x4003AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int gameType;

			[Token(Token = "0x4003AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int map;

			[Token(Token = "0x170004E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CDC")]
				[Address(RVA = "0xEACEEC", Offset = "0xEACEEC", VA = "0xEACEEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CDE")]
				[Address(RVA = "0xEACF34", Offset = "0xEACF34", VA = "0xEACF34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0xEAC0C0", Offset = "0xEAC0C0", VA = "0xEAC0C0")]
			[DebuggerHidden]
			public <MasterEndOfMatchRoutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0xEACA90", Offset = "0xEACA90", VA = "0xEACA90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0xEACA94", Offset = "0xEACA94", VA = "0xEACA94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0xEACEF4", Offset = "0xEACEF4", VA = "0xEACEF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200076F")]
		[CompilerGenerated]
		private sealed class <NextMatchRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EndMatchNetworking <>4__this;

			[Token(Token = "0x4003AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<string> <expectedUsers>5__2;

			[Token(Token = "0x170004E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CE2")]
				[Address(RVA = "0xEAD5C0", Offset = "0xEAD5C0", VA = "0xEAD5C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CE4")]
				[Address(RVA = "0xEAD608", Offset = "0xEAD608", VA = "0xEAD608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0xEAC150", Offset = "0xEAC150", VA = "0xEAC150")]
			[DebuggerHidden]
			public <NextMatchRoutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0xEACF3C", Offset = "0xEACF3C", VA = "0xEACF3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0xEACF40", Offset = "0xEACF40", VA = "0xEACF40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0xEAD5C8", Offset = "0xEAD5C8", VA = "0xEAD5C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float requestTimeOut;

		[Token(Token = "0x4003AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NewMatchInformation nextMatchData;

		[Token(Token = "0x4003AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PrivateMatchSettings nextPrivateMatchData;

		[Token(Token = "0x4003AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool receivedMatchInfo;

		[Token(Token = "0x4003AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool serverResponse;

		[Token(Token = "0x4003AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForSeconds waitHalf;

		[Token(Token = "0x4003AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WaitForSeconds waitTen;

		[Token(Token = "0x4003AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EndMatchNetworking m_Instance;

		[Token(Token = "0x4003AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_MatchHasEnded;

		[Token(Token = "0x170004E3")]
		public static EndMatchNetworking Instance
		{
			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0xEABC74", Offset = "0xEABC74", VA = "0xEABC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0xEABCBC", Offset = "0xEABCBC", VA = "0xEABCBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CCA")]
		[Address(RVA = "0xEABDC0", Offset = "0xEABDC0", VA = "0xEABDC0")]
		public void ResetEverything()
		{
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0xEABDDC", Offset = "0xEABDDC", VA = "0xEABDDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0xEABF00", Offset = "0xEABF00", VA = "0xEABF00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0xEAC024", Offset = "0xEAC024", VA = "0xEAC024")]
		public void MoveToNextMatch(int map, int gameType)
		{
		}

		[Token(Token = "0x6002CCE")]
		[Address(RVA = "0xEAC044", Offset = "0xEAC044", VA = "0xEAC044")]
		[IteratorStateMachine(typeof(<MasterEndOfMatchRoutine>d__15))]
		private IEnumerator MasterEndOfMatchRoutine(int map, int gameType)
		{
			return null;
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0xEAC0E8", Offset = "0xEAC0E8", VA = "0xEAC0E8")]
		[IteratorStateMachine(typeof(<NextMatchRoutine>d__16))]
		private IEnumerator NextMatchRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002CD0")]
		[Address(RVA = "0xEAC178", Offset = "0xEAC178", VA = "0xEAC178")]
		private void ReceiveServerStatus(AzureRequestTypes type, string result, int requId)
		{
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0xEAC238", Offset = "0xEAC238", VA = "0xEAC238")]
		private void RaiseNewMatchEvent(byte[] data)
		{
		}

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0xEAC364", Offset = "0xEAC364", VA = "0xEAC364")]
		private void RaiseNewPrivateMatchEvent(byte[] data)
		{
		}

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0xEAC49C", Offset = "0xEAC49C", VA = "0xEAC49C")]
		private void OnPhotonEvent(byte eventCode, object content, int senderId)
		{
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0xEAC578", Offset = "0xEAC578", VA = "0xEAC578")]
		private void ReceiveNewMatchEvent(byte[] data)
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0xEAC650", Offset = "0xEAC650", VA = "0xEAC650")]
		private void ReceiveNewPrivateMatchEvent(byte[] data)
		{
		}

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0xEAC8A8", Offset = "0xEAC8A8", VA = "0xEAC8A8")]
		public void MatchHasEnded()
		{
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0xEAC968", Offset = "0xEAC968", VA = "0xEAC968")]
		public void CloseRoom()
		{
		}

		[Token(Token = "0x6002CD8")]
		[Address(RVA = "0xEAC9FC", Offset = "0xEAC9FC", VA = "0xEAC9FC")]
		public EndMatchNetworking()
		{
		}
	}
	[Token(Token = "0x2000770")]
	public struct NewMatchInformation
	{
		[Token(Token = "0x4003AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int GameType;

		[Token(Token = "0x4003AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool ChangeServer;

		[Token(Token = "0x4003AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ServerLocation;

		[Token(Token = "0x4003AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string RoomName;

		[Token(Token = "0x4003AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MapToLoad;

		[Token(Token = "0x4003AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int CurrentEvent;

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0xEAD610", Offset = "0xEAD610", VA = "0xEAD610")]
		public NewMatchInformation(int gameType, bool changeServer, int serverLocation, string roomName, int mapToLoad, int currentEvent)
		{
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0xEAC83C", Offset = "0xEAC83C", VA = "0xEAC83C")]
		public NewMatchInformation(byte[] data)
		{
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0xEACDC4", Offset = "0xEACDC4", VA = "0xEACDC4")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0xEAD62C", Offset = "0xEAD62C", VA = "0xEAD62C")]
		public void Deserialize(byte[] bytes)
		{
		}
	}
	[Token(Token = "0x2000771")]
	[RequireComponent(typeof(PhotonView))]
	public class NetworkEnvironmentManager : PunBehaviour
	{
		[Token(Token = "0x4003AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetworkEnvironmentManager Instance;

		[Token(Token = "0x4003AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<PhotonPlayer> OnPhotonPlayerConnectedAction;

		[Token(Token = "0x4003AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public BreakableScreenParent breakableScreenParent;

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0xEAD758", Offset = "0xEAD758", VA = "0xEAD758")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0xEAD7A4", Offset = "0xEAD7A4", VA = "0xEAD7A4", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0xEAD844", Offset = "0xEAD844", VA = "0xEAD844")]
		public void BreakScreens(byte[] indices, [Optional] PhotonPlayer targetPlayer)
		{
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0xEAD940", Offset = "0xEAD940", VA = "0xEAD940")]
		[PunRPC]
		private void BreakScreensRPC(byte[] screenIndices)
		{
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0xEAD95C", Offset = "0xEAD95C", VA = "0xEAD95C")]
		public NetworkEnvironmentManager()
		{
		}
	}
}
namespace Alvo.Zombies
{
	[Token(Token = "0x2000772")]
	public class InventoryManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000773")]
		public class ZombieGun
		{
			[Token(Token = "0x4003B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte m_Scope;

			[Token(Token = "0x4003B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public byte m_Attachment;

			[Token(Token = "0x4003B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public BulletType m_BulletType;

			[Token(Token = "0x4003B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] cachedWoosh;

			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0xEB014C", Offset = "0xEB014C", VA = "0xEB014C")]
			public ZombieGun()
			{
			}
		}

		[Token(Token = "0x4003B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PlayerWeapons m_FPSWeapons;

		[Token(Token = "0x4003B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public LevelManager m_levelManager;

		[Token(Token = "0x4003B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public ZombiesLoadout m_zLoadout;

		[Token(Token = "0x4003B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PlayerLocalData m_localData;

		[Token(Token = "0x4003B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ZombieShopManager zShopManager;

		[Token(Token = "0x4003B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ZombieScoringManager m_ScoringManager;

		[Token(Token = "0x4003B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource sound3DFX;

		[Token(Token = "0x4003B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_coins;

		[Token(Token = "0x4003B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<string> purchases;

		[Token(Token = "0x4003B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int m_PrimaryWeapon;

		[Token(Token = "0x4003B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int m_SecondaryWeapon;

		[Token(Token = "0x4003B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool holdingDual;

		[Token(Token = "0x4003B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public WFilter m_CurrentKnives;

		[Token(Token = "0x4003B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public System.Action OnCompatibilityChecked;

		[Token(Token = "0x4003B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ZShopRefKillstreakGun killstreakGunsRef;

		[Token(Token = "0x4003B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<int, ZombieGun> zombieGuns;

		[Token(Token = "0x4003B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private EnhancementFX FXPrefab;

		[Token(Token = "0x4003B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip[] flameWooshes;

		[Token(Token = "0x4003B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EnhancementFX primaryFlame;

		[Token(Token = "0x4003B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EnhancementFX secondaryFlame;

		[Token(Token = "0x4003B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] enhancementFXSfxDelay;

		[Token(Token = "0x4003B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private byte currentDelayIndex;

		[Token(Token = "0x170004E8")]
		public bool secondarySelected
		{
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xEAD964", Offset = "0xEAD964", VA = "0xEAD964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E9")]
		[HideInInspector]
		public bool flag
		{
			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0xEADEEC", Offset = "0xEADEEC", VA = "0xEADEEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0xEADAE8", Offset = "0xEADAE8", VA = "0xEADAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0xEADC14", Offset = "0xEADC14", VA = "0xEADC14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0xEADD80", Offset = "0xEADD80", VA = "0xEADD80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0xEADF8C", Offset = "0xEADF8C", VA = "0xEADF8C")]
		private void CheckCompatibility(int index, bool recenterEvent)
		{
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0xEAE7DC", Offset = "0xEAE7DC", VA = "0xEAE7DC")]
		public void SwitchWeapons()
		{
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0xEAE5E4", Offset = "0xEAE5E4", VA = "0xEAE5E4")]
		public void ModifyLoadoutGun(ref Items loadoutPrimaryOrSecondary, Items desiredItem)
		{
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0xEAF170", Offset = "0xEAF170", VA = "0xEAF170")]
		public void SwitchToDefaultKnives(int dualGun = 12)
		{
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0xEAF558", Offset = "0xEAF558", VA = "0xEAF558")]
		public bool IsKillstreakGun(int gunId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0xEAF580", Offset = "0xEAF580", VA = "0xEAF580")]
		public ZShopRefKillstreakGun.GunInfo GetKillstreakGun(int gunId)
		{
			return null;
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0xEAF59C", Offset = "0xEAF59C", VA = "0xEAF59C")]
		public int LoadoutHasADual()
		{
			return default(int);
		}

		[Token(Token = "0x6002CFA")]
		[Address(RVA = "0xEAF6D8", Offset = "0xEAF6D8", VA = "0xEAF6D8")]
		public void AddCoins(int _amount, Vector3 animationStartPosition)
		{
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0xEAF880", Offset = "0xEAF880", VA = "0xEAF880")]
		public void RemoveCoins(int _amount, [Optional] Vector3? sound3DPos)
		{
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0xEAFA20", Offset = "0xEAFA20", VA = "0xEAFA20")]
		public int GetCurrentCoins()
		{
			return default(int);
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0xEADA10", Offset = "0xEADA10", VA = "0xEADA10")]
		public string k_Gun(int gunId)
		{
			return null;
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0xEAFA28", Offset = "0xEAFA28", VA = "0xEAFA28")]
		public string k_SB(int gunId, BulletType bulletType)
		{
			return null;
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0xEAFAE0", Offset = "0xEAFAE0", VA = "0xEAFAE0")]
		public string k_Scope(int gunId, byte scope)
		{
			return null;
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0xEAFB98", Offset = "0xEAFB98", VA = "0xEAFB98")]
		public string k_Attachment(int gunId, byte attachment)
		{
			return null;
		}

		[Token(Token = "0x6002D01")]
		[Address(RVA = "0xEAFC50", Offset = "0xEAFC50", VA = "0xEAFC50")]
		public string k_Perk(PerkID perk, bool primarySlot)
		{
			return null;
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0xEAFD18", Offset = "0xEAFD18", VA = "0xEAFD18")]
		public void ModifyZGun(int gunId, [Optional] byte? scope, [Optional] byte? attachment, BulletType bulletType = BulletType.Null)
		{
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0xEAF468", Offset = "0xEAF468", VA = "0xEAF468")]
		public ZombieGun RetreiveGun(int gunId)
		{
			return null;
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0xEB0154", Offset = "0xEB0154", VA = "0xEB0154")]
		public void RegisterPurchase(string key)
		{
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0xEADA90", Offset = "0xEADA90", VA = "0xEADA90")]
		public bool PreviouslyPurchased(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0xEB0240", Offset = "0xEB0240", VA = "0xEB0240")]
		public void EquipEnhancementFX(BulletType bulletType, bool equip, int weaponId, [Optional] bool? primary)
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0xEB0700", Offset = "0xEB0700", VA = "0xEB0700")]
		public float GetDelay()
		{
			return default(float);
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0xEB074C", Offset = "0xEB074C", VA = "0xEB074C")]
		public InventoryManager()
		{
		}
	}
	[Token(Token = "0x2000774")]
	public class NewZombieModeManager : PunBehaviour
	{
		[Token(Token = "0x2000775")]
		[CompilerGenerated]
		private sealed class <Start>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NewZombieModeManager <>4__this;

			[Token(Token = "0x170004EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D2F")]
				[Address(RVA = "0xEB5FC8", Offset = "0xEB5FC8", VA = "0xEB5FC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D31")]
				[Address(RVA = "0xEB6010", Offset = "0xEB6010", VA = "0xEB6010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0xEB5C84", Offset = "0xEB5C84", VA = "0xEB5C84")]
			[DebuggerHidden]
			public <Start>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0xEB5CAC", Offset = "0xEB5CAC", VA = "0xEB5CAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0xEB5CB0", Offset = "0xEB5CB0", VA = "0xEB5CB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xEB5FD0", Offset = "0xEB5FD0", VA = "0xEB5FD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NewZombieModeManager Instance;

		[Token(Token = "0x4003B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] disableOnPicoChina;

		[Token(Token = "0x4003B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		public KillingFrenzy frenzy;

		[Token(Token = "0x4003B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WaitForPlayers waitForPlayersGO;

		[Token(Token = "0x4003B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ZombieRoundManager roundManager;

		[Token(Token = "0x4003B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ZombieNetShopManager netShopManager;

		[Token(Token = "0x4003B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InventoryManager m_Inventory;

		[Token(Token = "0x4003B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ZombieNpcManager npcManager;

		[Token(Token = "0x4003B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ZombieShopManager m_zShopManager;

		[Token(Token = "0x4003B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnlockableAreasManager unlockedAreasManager;

		[Token(Token = "0x4003B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LevelManager m_levelManager;

		[Token(Token = "0x4003B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerManager m_PlayerManager;

		[Token(Token = "0x4003B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UITriggerTest m_shopTrigger;

		[Token(Token = "0x4003B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NewZombieSpawner m_spawner;

		[Token(Token = "0x4003B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public VrInGameUIManager.ZombieUI m_zombieUI;

		[Token(Token = "0x4003B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Room room;

		[Token(Token = "0x4003B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PlayerData localPlayer;

		[Token(Token = "0x4003B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PlayerLocalData localData;

		[Token(Token = "0x4003B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool debugInput;

		[Token(Token = "0x4003B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VrManager.ZombieSettings zombieSettings;

		[Token(Token = "0x4003B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private VrAudioManager vrAudioManager;

		[Token(Token = "0x4003B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public ZombieBackroomsManager m_BackroomsManager;

		[Token(Token = "0x4003B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public ZombiesObjective newObjective;

		[Token(Token = "0x4003B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public bool notifyWithoutDelay;

		[Token(Token = "0x4003B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[HideInInspector]
		public byte currentRound;

		[Token(Token = "0x4003B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public TimeSpan timeSpan;

		[Token(Token = "0x4003B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<IDOTDamager> dotDamagers;

		[Token(Token = "0x4003B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public bool gameEnded;

		[Token(Token = "0x4003B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private double timer;

		[Token(Token = "0x4003B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private double startTime;

		[Token(Token = "0x4003B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float subtractFromTimer;

		[Token(Token = "0x4003B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool remindedWithSfx;

		[Token(Token = "0x4003B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float timeoutLastRemindedAt;

		[Token(Token = "0x4003B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Action<int> onRoundStart;

		[Token(Token = "0x4003B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public System.Action OnRoundEnd;

		[Token(Token = "0x4003B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public System.Action OnGameEnd;

		[Token(Token = "0x4003B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public System.Action OnBazookaDisabled;

		[Token(Token = "0x4003B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Action<PhotonPlayer> OnPhotonPlayerConnectedAction;

		[Token(Token = "0x4003B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private StatTracking m_statTracking;

		[Token(Token = "0x4003B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[Tooltip("ALL DEATH")]
		public LanguageText lk_allDeath;

		[Token(Token = "0x4003B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Tooltip("OBJECTIVE FAIL")]
		public LanguageText lk_objectiveFail;

		[Token(Token = "0x4003B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Tooltip("EXTRACTION")]
		public LanguageText lk_extraction;

		[Token(Token = "0x4003B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public LanguageText roundStartingInLT;

		[Token(Token = "0x4003B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public LanguageText captureTheObjectiveHeaderLT;

		[Token(Token = "0x4003B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public LanguageText captureTheObjectiveDescriptionLT;

		[Token(Token = "0x4003B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public LanguageText surviveHeaderLT;

		[Token(Token = "0x4003B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public LanguageText surviveDescriptionLT;

		[Token(Token = "0x4003B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public LanguageText roundNCompletedLT;

		[Token(Token = "0x4003B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public LanguageText roomClosedLT;

		[Token(Token = "0x4003B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public LanguageText usedSelfReviveLT;

		[Token(Token = "0x4003B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public LanguageText gunNotCompatibleLT;

		[Token(Token = "0x4003B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public LanguageText objTimeRunningOutLt;

		[Token(Token = "0x4003B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Sprite warningSprite;

		[Token(Token = "0x4003B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Sprite watchSprite;

		[Token(Token = "0x4003B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[HideInInspector]
		public State state;

		[Token(Token = "0x4003B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[HideInInspector]
		public byte lastObjectiveSpawnIndex;

		[Token(Token = "0x4003B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private State m_LastRoundType;

		[Token(Token = "0x4003B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private byte m_ConsecutiveRoundsOfType;

		[Token(Token = "0x4003B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C5")]
		private bool m_ExecutedOnEnd;

		[Token(Token = "0x4003B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C6")]
		public bool m_RoundStartBlocked;

		[Token(Token = "0x4003B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C7")]
		public bool m_ActivatedBackroomsOnce;

		[Token(Token = "0x170004EA")]
		public bool m_StateIsRound
		{
			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0xEB0820", Offset = "0xEB0820", VA = "0xEB0820")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0xEB0834", Offset = "0xEB0834", VA = "0xEB0834")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0xEB0880", Offset = "0xEB0880", VA = "0xEB0880")]
		private void CacheReferences()
		{
		}

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0xEB09A4", Offset = "0xEB09A4", VA = "0xEB09A4")]
		[IteratorStateMachine(typeof(<Start>d__65))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0xEB0A0C", Offset = "0xEB0A0C", VA = "0xEB0A0C", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0xEB0DE0", Offset = "0xEB0DE0", VA = "0xEB0DE0")]
		[PunRPC]
		public void SyncStateMsg(byte state, double startTime, byte m_ConsecutiveRoundsOfType, byte m_LastRoundType, byte currentRound, byte lastObjectiveSpawnIndex, double waitForPlayersSubtractFrom, double waitForPlayersStartTime, byte spawnLimit)
		{
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0xEB14EC", Offset = "0xEB14EC", VA = "0xEB14EC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0xEB16CC", Offset = "0xEB16CC", VA = "0xEB16CC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0xEB1934", Offset = "0xEB1934", VA = "0xEB1934")]
		[PunRPC]
		public void Z_ChangeState(byte stateIndex, double startTime)
		{
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0xEB1940", Offset = "0xEB1940", VA = "0xEB1940")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0xEB2BE4", Offset = "0xEB2BE4", VA = "0xEB2BE4")]
		public void EndRound()
		{
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0xEB22E4", Offset = "0xEB22E4", VA = "0xEB22E4")]
		private void CheckState()
		{
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0xEB0EFC", Offset = "0xEB0EFC", VA = "0xEB0EFC")]
		public void SetSate(byte stateIndex, bool incrementRound)
		{
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0xEB2740", Offset = "0xEB2740", VA = "0xEB2740")]
		public void InitializeRound()
		{
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0xEB2F74", Offset = "0xEB2F74", VA = "0xEB2F74")]
		private void CheckConsecutiveRounds(State newRoundType)
		{
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0xEB3088", Offset = "0xEB3088", VA = "0xEB3088")]
		public void WaitForPlayers()
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0xEB311C", Offset = "0xEB311C", VA = "0xEB311C")]
		public void _RoundStart(State roundType)
		{
		}

		[Token(Token = "0x6002D1E")]
		[Address(RVA = "0xEB4464", Offset = "0xEB4464", VA = "0xEB4464")]
		public void SpawnObjective()
		{
		}

		[Token(Token = "0x6002D1F")]
		[Address(RVA = "0xEB2DD0", Offset = "0xEB2DD0", VA = "0xEB2DD0")]
		public void RoundEnd()
		{
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0xEB3428", Offset = "0xEB3428", VA = "0xEB3428")]
		private void _RoundEnd(bool playSfx)
		{
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0xEB2554", Offset = "0xEB2554", VA = "0xEB2554")]
		public void GamemodeEnd()
		{
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0xEB4850", Offset = "0xEB4850", VA = "0xEB4850")]
		public void GamemodeEndExtraction()
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0xEB3840", Offset = "0xEB3840", VA = "0xEB3840")]
		private void _GamemodeEnd(EndConditions condition)
		{
		}

		[Token(Token = "0x6002D24")]
		[Address(RVA = "0xEB4A3C", Offset = "0xEB4A3C", VA = "0xEB4A3C")]
		public float GetHealthDifficultyProgression()
		{
			return default(float);
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0xEB4B20", Offset = "0xEB4B20", VA = "0xEB4B20")]
		public float GetCombatDifficultyProgression(float breadth, float curve)
		{
			return default(float);
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0xEB4B48", Offset = "0xEB4B48", VA = "0xEB4B48")]
		public NewZombieModeManager()
		{
		}
	}
	[Token(Token = "0x2000776")]
	public enum State
	{
		[Token(Token = "0x4003B5B")]
		Stateless,
		[Token(Token = "0x4003B5C")]
		WaitingForPlayers,
		[Token(Token = "0x4003B5D")]
		OnTransition,
		[Token(Token = "0x4003B5E")]
		OnRound,
		[Token(Token = "0x4003B5F")]
		OnRoundSurvival,
		[Token(Token = "0x4003B60")]
		OnEnd,
		[Token(Token = "0x4003B61")]
		GameOver,
		[Token(Token = "0x4003B62")]
		GameOverTimeOut,
		[Token(Token = "0x4003B63")]
		GameOverExtraction
	}
	[Token(Token = "0x2000777")]
	public enum EndConditions
	{
		[Token(Token = "0x4003B65")]
		AllDeath,
		[Token(Token = "0x4003B66")]
		ObjectiveFail,
		[Token(Token = "0x4003B67")]
		Extraction
	}
	[Token(Token = "0x2000778")]
	public enum ReviveType
	{
		[Token(Token = "0x4003B69")]
		None,
		[Token(Token = "0x4003B6A")]
		Self,
		[Token(Token = "0x4003B6B")]
		Other,
		[Token(Token = "0x4003B6C")]
		SelfPerked,
		[Token(Token = "0x4003B6D")]
		OtherPerked
	}
	[Token(Token = "0x2000779")]
	public class ZombieShopManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200077A")]
		private struct ZTab
		{
			[Token(Token = "0x4003B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Image tabIcon;

			[Token(Token = "0x4003B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image tabBorder;

			[Token(Token = "0x4003B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Button tabButton;

			[Token(Token = "0x4003B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CurvedUIVertexEffect vertexEffect;

			[Token(Token = "0x4003B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[HideInInspector]
			public bool overriden;
		}

		[Token(Token = "0x200077B")]
		[CompilerGenerated]
		private sealed class <ItemAnimation>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image image;

			[Token(Token = "0x4003B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sprite[] sprites;

			[Token(Token = "0x4003B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ZombieShopManager <>4__this;

			[Token(Token = "0x4003B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte <index>5__2;

			[Token(Token = "0x170004EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D54")]
				[Address(RVA = "0xEB84BC", Offset = "0xEB84BC", VA = "0xEB84BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D56")]
				[Address(RVA = "0xEB8504", Offset = "0xEB8504", VA = "0xEB8504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D51")]
			[Address(RVA = "0xEB733C", Offset = "0xEB733C", VA = "0xEB733C")]
			[DebuggerHidden]
			public <ItemAnimation>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002D52")]
			[Address(RVA = "0xEB83DC", Offset = "0xEB83DC", VA = "0xEB83DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D53")]
			[Address(RVA = "0xEB83E0", Offset = "0xEB83E0", VA = "0xEB83E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D55")]
			[Address(RVA = "0xEB84C4", Offset = "0xEB84C4", VA = "0xEB84C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077C")]
		[CompilerGenerated]
		private sealed class <EnableLineRenderer>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieShopManager <>4__this;

			[Token(Token = "0x4003B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ZShopOptionFiller filler;

			[Token(Token = "0x170004F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D5A")]
				[Address(RVA = "0xEB8624", Offset = "0xEB8624", VA = "0xEB8624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D5C")]
				[Address(RVA = "0xEB866C", Offset = "0xEB866C", VA = "0xEB866C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D57")]
			[Address(RVA = "0xEB774C", Offset = "0xEB774C", VA = "0xEB774C")]
			[DebuggerHidden]
			public <EnableLineRenderer>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6002D58")]
			[Address(RVA = "0xEB850C", Offset = "0xEB850C", VA = "0xEB850C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D59")]
			[Address(RVA = "0xEB8510", Offset = "0xEB8510", VA = "0xEB8510", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D5B")]
			[Address(RVA = "0xEB862C", Offset = "0xEB862C", VA = "0xEB862C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Design 0", order = 0)]
		[Header("LoadoutLists", order = 1)]
		public WeaponStatsList m_weaponsStatList;

		[Token(Token = "0x4003B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZShopCostList m_weaponCostsList;

		[Token(Token = "0x4003B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("External Scripts")]
		public InventoryManager m_inventory;

		[Token(Token = "0x4003B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public VrInGameUIManager m_uiManager;

		[Token(Token = "0x4003B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Shop Elements")]
		public TextMeshProUGUI m_coinsTMP;

		[Token(Token = "0x4003B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		public Transform m_mainCanvas;

		[Token(Token = "0x4003B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup mainCG;

		[Token(Token = "0x4003B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Animators")]
		public Animator m_anim;

		[Token(Token = "0x4003B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Animator m_confirmationAnim;

		[Token(Token = "0x4003B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool shopOpen;

		[Token(Token = "0x4003B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool wasAttachmentEnabled;

		[Token(Token = "0x4003B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_AnimationCoroutine;

		[Token(Token = "0x4003B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WaitForSeconds m_ItemAnimationWaitForSeconds;

		[Token(Token = "0x4003B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Assign camera to canvases", order = 1)]
		[Header("-- Shop rework --", order = 0)]
		public Canvas[] canvases;

		[Token(Token = "0x4003B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("For checkers")]
		[SerializeField]
		private ZShopGrenade grenadeItem;

		[Token(Token = "0x4003B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public int darkWeaponIndex;

		[Token(Token = "0x4003B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Tabs structs")]
		[SerializeField]
		private ZTab primaryTab;

		[Token(Token = "0x4003B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ZTab secondaryTab;

		[Token(Token = "0x4003B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ZTab thirdTab;

		[Token(Token = "0x4003B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Space]
		[SerializeField]
		private Sprite noWeaponSprite;

		[Token(Token = "0x4003B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Color selectedTabColor;

		[Token(Token = "0x4003B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Color unselectedTabColor;

		[Token(Token = "0x4003B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Space]
		[SerializeField]
		private ZShopAmmo zShopAmmo;

		[Token(Token = "0x4003B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Header("Option canvas")]
		public RectTransform optionCanvas;

		[Token(Token = "0x4003B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private TextMeshProUGUI optionHeadText;

		[Token(Token = "0x4003B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4003B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Transform node;

		[Token(Token = "0x4003B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public ZShopOptionFiller lastFilledWith;

		[Token(Token = "0x4003B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[Space]
		private Image[] weaponTabContents;

		[Token(Token = "0x4003B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int SpinToggle1;

		[Token(Token = "0x170004ED")]
		public bool darkIsPrimary
		{
			[Token(Token = "0x6002D40")]
			[Address(RVA = "0xEB7364", Offset = "0xEB7364", VA = "0xEB7364")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0xEB6018", Offset = "0xEB6018", VA = "0xEB6018")]
		public void Start()
		{
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0xEB61CC", Offset = "0xEB61CC", VA = "0xEB61CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0xEB644C", Offset = "0xEB644C", VA = "0xEB644C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0xEB6058", Offset = "0xEB6058", VA = "0xEB6058")]
		public void SetupCanvasCamera(Camera _cam)
		{
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0xEB678C", Offset = "0xEB678C", VA = "0xEB678C")]
		private void ShowUI()
		{
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0xEB67AC", Offset = "0xEB67AC", VA = "0xEB67AC")]
		public void HideUI()
		{
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0xEB67CC", Offset = "0xEB67CC", VA = "0xEB67CC")]
		public void OpenShop()
		{
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0xEB60C0", Offset = "0xEB60C0", VA = "0xEB60C0")]
		public void CloseShop()
		{
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0xEB70E0", Offset = "0xEB70E0", VA = "0xEB70E0")]
		public bool IsShopOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0xEB6864", Offset = "0xEB6864", VA = "0xEB6864")]
		public void UpdateCoins()
		{
		}

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0xEB70E8", Offset = "0xEB70E8", VA = "0xEB70E8")]
		public void SpinToggle()
		{
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0xEB7264", Offset = "0xEB7264", VA = "0xEB7264")]
		public void SetItemAnimation(Image image, Sprite[] sprites)
		{
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0xEB70CC", Offset = "0xEB70CC", VA = "0xEB70CC")]
		public void StopItemAnimation()
		{
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0xEB72C0", Offset = "0xEB72C0", VA = "0xEB72C0")]
		[IteratorStateMachine(typeof(<ItemAnimation>d__26))]
		private IEnumerator ItemAnimation(Image image, Sprite[] sprites)
		{
			return null;
		}

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0xEB738C", Offset = "0xEB738C", VA = "0xEB738C")]
		public void BuyItem(DarkZShopItem zshopItem)
		{
		}

		[Token(Token = "0x6002D42")]
		[Address(RVA = "0xEB741C", Offset = "0xEB741C", VA = "0xEB741C")]
		public void CheckItems()
		{
		}

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0xEB74D8", Offset = "0xEB74D8", VA = "0xEB74D8")]
		public void ActivateOptions(ZShopOptionFiller filler)
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0xEB76D8", Offset = "0xEB76D8", VA = "0xEB76D8")]
		[IteratorStateMachine(typeof(<EnableLineRenderer>d__50))]
		private IEnumerator EnableLineRenderer(ZShopOptionFiller filler)
		{
			return null;
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0xEB6EE0", Offset = "0xEB6EE0", VA = "0xEB6EE0")]
		public void DeactivateOptions(bool clearOnly = false)
		{
		}

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0xEB7774", Offset = "0xEB7774", VA = "0xEB7774")]
		public void UpdateFillerOverlay(Sprite desiredSprite, bool textEnabled)
		{
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0xEB68FC", Offset = "0xEB68FC", VA = "0xEB68FC")]
		public void CheckCurrentWeapons()
		{
		}

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0xEB7868", Offset = "0xEB7868", VA = "0xEB7868")]
		private void ActivateThirdTab()
		{
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0xEB7BC8", Offset = "0xEB7BC8", VA = "0xEB7BC8")]
		private void RefreshThirdTabUI()
		{
		}

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0xEB7D1C", Offset = "0xEB7D1C", VA = "0xEB7D1C")]
		public void SwitchToThirdTab()
		{
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0xEB7E68", Offset = "0xEB7E68", VA = "0xEB7E68")]
		public void SwitchToTab(bool primary)
		{
		}

		[Token(Token = "0x6002D4C")]
		[Address(RVA = "0xEB8264", Offset = "0xEB8264", VA = "0xEB8264")]
		public void ClearWeaponTabContents()
		{
		}

		[Token(Token = "0x6002D4D")]
		[Address(RVA = "0xEB79F4", Offset = "0xEB79F4", VA = "0xEB79F4")]
		public void RefreshWeaponUI()
		{
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0xEB82D4", Offset = "0xEB82D4", VA = "0xEB82D4")]
		private void ForceCheckGrenade()
		{
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0xEB8304", Offset = "0xEB8304", VA = "0xEB8304")]
		public ZombieShopManager()
		{
		}
	}
	[Token(Token = "0x200077D")]
	public class UITriggerTest : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZombieShopManager m_shopManager;

		[Token(Token = "0x4003B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float interactionDistance;

		[Token(Token = "0x4003B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerManager m_playerManager;

		[Token(Token = "0x4003B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VrInGameUIManager m_uiManager;

		[Token(Token = "0x4003B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool canTrigger;

		[Token(Token = "0x4003BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool setup;

		[Token(Token = "0x4003BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CanvasGroup directionArrow;

		[Token(Token = "0x6002D5D")]
		[Address(RVA = "0xEB8674", Offset = "0xEB8674", VA = "0xEB8674")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0xEB86FC", Offset = "0xEB86FC", VA = "0xEB86FC")]
		public void FaceCarousel()
		{
		}

		[Token(Token = "0x6002D5F")]
		[Address(RVA = "0xEB882C", Offset = "0xEB882C", VA = "0xEB882C")]
		public void Update()
		{
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0xEB8D24", Offset = "0xEB8D24", VA = "0xEB8D24")]
		public void ToggleTrigger(bool _bool)
		{
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0xEB8C74", Offset = "0xEB8C74", VA = "0xEB8C74")]
		public void CloseShop()
		{
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0xEB8A28", Offset = "0xEB8A28", VA = "0xEB8A28")]
		public void OpenShop()
		{
		}

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0xEB8B0C", Offset = "0xEB8B0C", VA = "0xEB8B0C")]
		private void ActivateLaserInput(bool value)
		{
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0xEB8DE4", Offset = "0xEB8DE4", VA = "0xEB8DE4")]
		public UITriggerTest()
		{
		}
	}
	[Token(Token = "0x200077E")]
	public class AIMovement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public NavMeshAgent m_Agent;

		[Token(Token = "0x4003BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_Animator;

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0xEB8E20", Offset = "0xEB8E20", VA = "0xEB8E20")]
		public void StopMoving()
		{
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0xEB8E6C", Offset = "0xEB8E6C", VA = "0xEB8E6C")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0xEB904C", Offset = "0xEB904C", VA = "0xEB904C")]
		public void ContinueMoving()
		{
		}

		[Token(Token = "0x6002D69")]
		[Address(RVA = "0xEB906C", Offset = "0xEB906C", VA = "0xEB906C")]
		public bool MoveToTarget(Vector3 targetPos, float speed, float range)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0xEB91D0", Offset = "0xEB91D0", VA = "0xEB91D0")]
		public float GetPathDistance(Vector3 destination)
		{
			return default(float);
		}

		[Token(Token = "0x6002D6B")]
		[Address(RVA = "0xEB9500", Offset = "0xEB9500", VA = "0xEB9500")]
		public AIMovement()
		{
		}
	}
	[Token(Token = "0x200077F")]
	public class ZombieAI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000780")]
		public enum AddedEffect
		{
			[Token(Token = "0x4003BC2")]
			NONE,
			[Token(Token = "0x4003BC3")]
			EXPLOSIVE,
			[Token(Token = "0x4003BC4")]
			AOE_DROP,
			[Token(Token = "0x4003BC5")]
			BLIND
		}

		[Serializable]
		[Token(Token = "0x2000781")]
		public struct LevelStats
		{
			[Serializable]
			[Token(Token = "0x2000782")]
			public class FX
			{
				[Token(Token = "0x4003BCB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public AddedEffect fx;

				[Token(Token = "0x4003BCC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[Tooltip("If it is used on above levels too")]
				public bool cumulativeFx;

				[Token(Token = "0x4003BCD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
				public bool fxOnAttack;

				[Token(Token = "0x4003BCE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
				public bool fxOnDeath;

				[Token(Token = "0x6002D86")]
				[Address(RVA = "0xEBBA10", Offset = "0xEBBA10", VA = "0xEBBA10")]
				public FX()
				{
				}
			}

			[Token(Token = "0x4003BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int moneyDrop;

			[Token(Token = "0x4003BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float atkDmg;

			[Token(Token = "0x4003BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float atkSpd;

			[Token(Token = "0x4003BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float spd;

			[Token(Token = "0x4003BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FX[] effects;

			[Token(Token = "0x6002D83")]
			[Address(RVA = "0xEBA8E4", Offset = "0xEBA8E4", VA = "0xEBA8E4")]
			public float GetAtkDmg()
			{
				return default(float);
			}

			[Token(Token = "0x6002D84")]
			[Address(RVA = "0xEB9E64", Offset = "0xEB9E64", VA = "0xEB9E64")]
			public float GetAtkSpd()
			{
				return default(float);
			}

			[Token(Token = "0x6002D85")]
			[Address(RVA = "0xEB9EE4", Offset = "0xEB9EE4", VA = "0xEB9EE4")]
			public float GetSpd()
			{
				return default(float);
			}
		}

		[Serializable]
		[Token(Token = "0x2000783")]
		public class CombatStats
		{
			[Token(Token = "0x4003BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_movementSpeed;

			[Token(Token = "0x4003BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_attackInterval;

			[Token(Token = "0x4003BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_damage;

			[Token(Token = "0x4003BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_attackRadius;

			[Token(Token = "0x4003BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float m_attackHeight;

			[Token(Token = "0x4003BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float m_damageRadius;

			[Token(Token = "0x4003BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float m_damageCap;

			[Token(Token = "0x6002D87")]
			[Address(RVA = "0xEBBA18", Offset = "0xEBBA18", VA = "0xEBBA18")]
			public CombatStats()
			{
			}

			[Token(Token = "0x6002D88")]
			[Address(RVA = "0xEB9578", Offset = "0xEB9578", VA = "0xEB9578")]
			public CombatStats(CombatStats _c)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000784")]
		public class ZombieFSM : FSM<ZombieAI>
		{
			[Token(Token = "0x2000785")]
			private abstract class State : FSM_State
			{
				[Token(Token = "0x4003BDF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				protected ZombieFSM m_zombieFsm;

				[Token(Token = "0x4003BE0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public string name;

				[Token(Token = "0x6002D8F")]
				[Address(RVA = "0xEBBE68", Offset = "0xEBBE68", VA = "0xEBBE68")]
				public State(ZombieFSM fsm)
				{
				}
			}

			[Serializable]
			[Token(Token = "0x2000786")]
			private class Idle : State
			{
				[Token(Token = "0x4003BE1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public float timeToWaitFor;

				[Token(Token = "0x4003BE2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float m_enterTime;

				[Token(Token = "0x6002D90")]
				[Address(RVA = "0xEBBA3C", Offset = "0xEBBA3C", VA = "0xEBBA3C")]
				public Idle(ZombieFSM fsm)
				{
				}

				[Token(Token = "0x6002D91")]
				[Address(RVA = "0xEBBEC8", Offset = "0xEBBEC8", VA = "0xEBBEC8", Slot = "4")]
				public override void OnEnter()
				{
				}

				[Token(Token = "0x6002D92")]
				[Address(RVA = "0xEBBEE4", Offset = "0xEBBEE4", VA = "0xEBBEE4", Slot = "5")]
				public override void Update()
				{
				}
			}

			[Token(Token = "0x2000787")]
			private class Walk : State
			{
				[Token(Token = "0x4003BE3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private float lastSearchTime;

				[Token(Token = "0x6002D93")]
				[Address(RVA = "0xEBBAA4", Offset = "0xEBBAA4", VA = "0xEBBAA4")]
				public Walk(ZombieFSM fsm)
				{
				}

				[Token(Token = "0x6002D94")]
				[Address(RVA = "0xEBBF50", Offset = "0xEBBF50", VA = "0xEBBF50", Slot = "4")]
				public override void OnEnter()
				{
				}

				[Token(Token = "0x6002D95")]
				[Address(RVA = "0xEBBFFC", Offset = "0xEBBFFC", VA = "0xEBBFFC", Slot = "5")]
				public override void Update()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x2000788")]
			private class Attack : State
			{
				[Token(Token = "0x4003BE4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private float m_attackTime;

				[Token(Token = "0x6002D96")]
				[Address(RVA = "0xEBBB04", Offset = "0xEBBB04", VA = "0xEBBB04")]
				public Attack(ZombieFSM fsm)
				{
				}

				[Token(Token = "0x6002D97")]
				[Address(RVA = "0xEBC2D4", Offset = "0xEBC2D4", VA = "0xEBC2D4", Slot = "4")]
				public override void OnEnter()
				{
				}

				[Token(Token = "0x6002D98")]
				[Address(RVA = "0xEBC564", Offset = "0xEBC564", VA = "0xEBC564", Slot = "5")]
				public override void Update()
				{
				}

				[Token(Token = "0x6002D99")]
				[Address(RVA = "0xEBC27C", Offset = "0xEBC27C", VA = "0xEBC27C")]
				public bool CanAttack(ZombieAI parent)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x2000789")]
			private class SearchTarget : State
			{
				[Token(Token = "0x6002D9A")]
				[Address(RVA = "0xEBBB64", Offset = "0xEBBB64", VA = "0xEBBB64")]
				public SearchTarget(ZombieFSM fsm)
				{
				}

				[Token(Token = "0x6002D9B")]
				[Address(RVA = "0xEBC600", Offset = "0xEBC600", VA = "0xEBC600", Slot = "4")]
				public override void OnEnter()
				{
				}
			}

			[Token(Token = "0x200078A")]
			private class Dead : State
			{
				[Token(Token = "0x6002D9C")]
				[Address(RVA = "0xEBBBC4", Offset = "0xEBBBC4", VA = "0xEBBBC4")]
				public Dead(ZombieFSM fsm)
				{
				}

				[Token(Token = "0x6002D9D")]
				[Address(RVA = "0xEBCCD0", Offset = "0xEBCCD0", VA = "0xEBCCD0", Slot = "4")]
				public override void OnEnter()
				{
				}
			}

			[Token(Token = "0x4003BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Idle idle;

			[Token(Token = "0x4003BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Walk walk;

			[Token(Token = "0x4003BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Attack attack;

			[Token(Token = "0x4003BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SearchTarget searchTarget;

			[Token(Token = "0x4003BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dead dead;

			[Token(Token = "0x4003BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float samplePositionRange;

			[Token(Token = "0x4003BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool log;

			[Token(Token = "0x4003BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[Header("Settings")]
			[SerializeField]
			private float targetAgainInterval;

			[Token(Token = "0x4003BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[Header("Debug")]
			[SerializeField]
			private List<string> stateStack;

			[Token(Token = "0x6002D89")]
			[Address(RVA = "0xEB97C0", Offset = "0xEB97C0", VA = "0xEB97C0")]
			public ZombieFSM(ZombieAI parent)
			{
			}

			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0xEBBC24", Offset = "0xEBBC24", VA = "0xEBBC24", Slot = "5")]
			public override void PushState(FSM_State _state)
			{
			}

			[Token(Token = "0x6002D8B")]
			[Address(RVA = "0xEBBD2C", Offset = "0xEBBD2C", VA = "0xEBBD2C", Slot = "6")]
			public override void PopState()
			{
			}

			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0xEBACF4", Offset = "0xEBACF4", VA = "0xEBACF4")]
			public void Die()
			{
			}

			[Token(Token = "0x6002D8D")]
			[Address(RVA = "0xEBBDB0", Offset = "0xEBBDB0", VA = "0xEBBDB0")]
			public static bool TargetIsInRange(ZombieAI parent)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D8E")]
			[Address(RVA = "0xEBA234", Offset = "0xEBA234", VA = "0xEBA234")]
			public static bool TargetIsInRange(Vector3 attackerPos, Vector3 targetPos, float height, float radius)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4003BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Dependencies/references")]
		public ZombieHealth health;

		[Token(Token = "0x4003BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AIMovement m_movement;

		[Token(Token = "0x4003BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NavMeshAgent m_agent;

		[Token(Token = "0x4003BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ZombieNpcElement m_element;

		[Token(Token = "0x4003BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_anim;

		[Token(Token = "0x4003BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ZombieAISounds m_sounds;

		[Token(Token = "0x4003BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space]
		[SerializeField]
		private Transform m_projectileAnchor;

		[Token(Token = "0x4003BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem m_explosionPtr;

		[Token(Token = "0x4003BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_aoeDrop_pfb;

		[Token(Token = "0x4003BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_projectile_pfb;

		[Token(Token = "0x4003BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private PlayerData m_target;

		[Token(Token = "0x4003BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ZombieGlow[] glowComponents;

		[Token(Token = "0x4003BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Stats")]
		public bool alive;

		[Token(Token = "0x4003BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CombatStats m_combatStats;

		[Token(Token = "0x4003BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float progressionBreadth;

		[Token(Token = "0x4003BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float progressionCurve;

		[Token(Token = "0x4003BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CombatStats m_progressCombatStats;

		[Token(Token = "0x4003BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Space]
		public WFilter zombieType;

		[Token(Token = "0x4003BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private PerkID m_DefensePerkWeakness;

		[Token(Token = "0x4003BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Space]
		public LevelStats[] levelStats;

		[Token(Token = "0x4003BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int zombieLevel;

		[Token(Token = "0x4003BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PlayerManager m_playerManager;

		[Token(Token = "0x4003BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LevelManager m_levelManager;

		[Token(Token = "0x4003BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ZombieNpcManager m_zombieNPCManager;

		[Token(Token = "0x4003BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ZombieFSM m_zombieFsm;

		[Token(Token = "0x4003BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_attackTimer;

		[Token(Token = "0x4003BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_init;

		[Token(Token = "0x4003BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[Header("Debug")]
		public bool overrideDamage;

		[Token(Token = "0x4003BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		public bool exploded;

		[Token(Token = "0x170004F2")]
		private CombatStats ProgressCombatStats
		{
			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0xEB9508", Offset = "0xEB9508", VA = "0xEB9508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0xEB95E0", Offset = "0xEB95E0", VA = "0xEB95E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0xEB9638", Offset = "0xEB9638", VA = "0xEB9638")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0xEB9978", Offset = "0xEB9978", VA = "0xEB9978")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0xEB99D4", Offset = "0xEB99D4", VA = "0xEB99D4")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x6002D71")]
		[Address(RVA = "0xEB9A04", Offset = "0xEB9A04", VA = "0xEB9A04")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0xEB9A24", Offset = "0xEB9A24", VA = "0xEB9A24")]
		public List<AddedEffect> GetFx(int level, bool onAttack, bool onDeath)
		{
			return null;
		}

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0xEB9BE0", Offset = "0xEB9BE0", VA = "0xEB9BE0")]
		public void UseModifiers(float _healthMod, float _combatMod)
		{
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0xEB9D98", Offset = "0xEB9D98", VA = "0xEB9D98")]
		public void SetZombieLevel(int _lvl)
		{
		}

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0xEB9E78", Offset = "0xEB9E78", VA = "0xEB9E78")]
		public float GetFinalVel()
		{
			return default(float);
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0xEB9EF8", Offset = "0xEB9EF8", VA = "0xEB9EF8")]
		public void DoDamage()
		{
		}

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0xEBA408", Offset = "0xEBA408", VA = "0xEBA408")]
		public void RPCMsgFxs()
		{
		}

		[Token(Token = "0x6002D78")]
		[Address(RVA = "0xEBA2F8", Offset = "0xEBA2F8", VA = "0xEBA2F8")]
		public int CalculateDamage()
		{
			return default(int);
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0xEBA8F8", Offset = "0xEBA8F8", VA = "0xEBA8F8")]
		public void Die()
		{
		}

		[Token(Token = "0x6002D7A")]
		[Address(RVA = "0xEBAD04", Offset = "0xEBAD04", VA = "0xEBAD04")]
		public void DoProjectile()
		{
		}

		[Token(Token = "0x6002D7B")]
		[Address(RVA = "0xEBA99C", Offset = "0xEBA99C", VA = "0xEBA99C")]
		public void DeathFx()
		{
		}

		[Token(Token = "0x6002D7C")]
		[Address(RVA = "0xEBB5C4", Offset = "0xEBB5C4", VA = "0xEBB5C4")]
		public void DoExplosionPre()
		{
		}

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0xEBA6C0", Offset = "0xEBA6C0", VA = "0xEBA6C0")]
		public void DoExplosion()
		{
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0xEBA7E0", Offset = "0xEBA7E0", VA = "0xEBA7E0")]
		public void DropAOE()
		{
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0xEBA87C", Offset = "0xEBA87C", VA = "0xEBA87C")]
		public void DoBlind()
		{
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0xEBB6A8", Offset = "0xEBB6A8", VA = "0xEBB6A8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002D81")]
		[Address(RVA = "0xEBBA00", Offset = "0xEBBA00", VA = "0xEBBA00")]
		public ZombieAI()
		{
		}
	}
	[Token(Token = "0x200078B")]
	public class ZombieHealth : PunBehaviour
	{
		[Token(Token = "0x200078C")]
		[CompilerGenerated]
		private sealed class <DisableObj>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieHealth <>4__this;

			[Token(Token = "0x170004F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DBB")]
				[Address(RVA = "0xEBF940", Offset = "0xEBF940", VA = "0xEBF940", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DBD")]
				[Address(RVA = "0xEBF988", Offset = "0xEBF988", VA = "0xEBF988", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DB8")]
			[Address(RVA = "0xEBF24C", Offset = "0xEBF24C", VA = "0xEBF24C")]
			[DebuggerHidden]
			public <DisableObj>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002DB9")]
			[Address(RVA = "0xEBF868", Offset = "0xEBF868", VA = "0xEBF868", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0xEBF86C", Offset = "0xEBF86C", VA = "0xEBF86C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DBC")]
			[Address(RVA = "0xEBF948", Offset = "0xEBF948", VA = "0xEBF948", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200078D")]
		[CompilerGenerated]
		private sealed class <DisableHPBar>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieHealth <>4__this;

			[Token(Token = "0x170004F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DC1")]
				[Address(RVA = "0xEBF9F8", Offset = "0xEBF9F8", VA = "0xEBF9F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DC3")]
				[Address(RVA = "0xEBFA40", Offset = "0xEBFA40", VA = "0xEBFA40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DBE")]
			[Address(RVA = "0xEBF5DC", Offset = "0xEBF5DC", VA = "0xEBF5DC")]
			[DebuggerHidden]
			public <DisableHPBar>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6002DBF")]
			[Address(RVA = "0xEBF990", Offset = "0xEBF990", VA = "0xEBF990", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DC0")]
			[Address(RVA = "0xEBF994", Offset = "0xEBF994", VA = "0xEBF994", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0xEBFA00", Offset = "0xEBFA00", VA = "0xEBFA00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200078E")]
		[CompilerGenerated]
		private sealed class <ZombieExplodingRoutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieHealth <>4__this;

			[Token(Token = "0x170004F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DC7")]
				[Address(RVA = "0xEBFC74", Offset = "0xEBFC74", VA = "0xEBFC74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DC9")]
				[Address(RVA = "0xEBFCBC", Offset = "0xEBFCBC", VA = "0xEBFCBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0xEBF684", Offset = "0xEBF684", VA = "0xEBF684")]
			[DebuggerHidden]
			public <ZombieExplodingRoutine>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002DC5")]
			[Address(RVA = "0xEBFA48", Offset = "0xEBFA48", VA = "0xEBFA48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0xEBFA4C", Offset = "0xEBFA4C", VA = "0xEBFA4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DC8")]
			[Address(RVA = "0xEBFC7C", Offset = "0xEBFC7C", VA = "0xEBFC7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BulletType[] bulletWeakness;

		[Token(Token = "0x4003BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HPBar hpBar;

		[Token(Token = "0x4003BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_hpBarDelay;

		[Token(Token = "0x4003BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds HPBarDelay;

		[Token(Token = "0x4003BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine disableCoroutine;

		[Token(Token = "0x4003BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool alive;

		[Token(Token = "0x4003BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool explosiveDeath;

		[Token(Token = "0x4003BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[Range(1f, 500f)]
		public int m_StartupHealth;

		[Token(Token = "0x4003BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(1f, 500f)]
		private int m_MaxHealth;

		[Token(Token = "0x4003BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Space]
		[SerializeField]
		private float m_RagdollDisableTime;

		[Token(Token = "0x4003BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WaitForSeconds waitRagdollDisable;

		[Token(Token = "0x4003BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space]
		[SerializeField]
		private Behaviour[] m_ComponentsToDisableOnDeath;

		[Token(Token = "0x4003BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_Health;

		[Token(Token = "0x4003BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Renderer[] renderers;

		[Token(Token = "0x4003BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Collider[] colliders;

		[Token(Token = "0x4003BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private DamageReceiver[] damageReceivers;

		[Token(Token = "0x4003BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private DamageInfo inf;

		[Token(Token = "0x4003BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 zombieCenterOffset;

		[Token(Token = "0x4003BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_Init;

		[Token(Token = "0x4003BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Space]
		public ZombieScoringManager scoringManager;

		[Token(Token = "0x4003BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public InventoryManager invManager;

		[Token(Token = "0x4003BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public NewZombieSpawner spawner;

		[Token(Token = "0x4003BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ZombieNpcElement npcElement;

		[Token(Token = "0x4003BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ZombieAISounds zombieSounds;

		[Token(Token = "0x4003BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ZombieAI zombieAi;

		[Token(Token = "0x4003BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Animator m_Animator;

		[Token(Token = "0x4003BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public BodyRagdoll m_CachedRagdoll;

		[Token(Token = "0x4003C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AIMovement aiMovement;

		[Token(Token = "0x4003C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool printMsgOnDeath;

		[Token(Token = "0x4003C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float lastHitOn;

		[Token(Token = "0x4003C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool disabling;

		[Token(Token = "0x4003C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public AudioSource explosionAS;

		[Token(Token = "0x4003C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private WaitForSeconds waitZombieExplode1;

		[Token(Token = "0x4003C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private WaitForSeconds waitZombieExplode2;

		[Token(Token = "0x4003C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int HitHeadshot;

		[Token(Token = "0x4003C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Hit;

		[Token(Token = "0x4003C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int Death;

		[Token(Token = "0x6002D9E")]
		[Address(RVA = "0xEBCCD4", Offset = "0xEBCCD4", VA = "0xEBCCD4")]
		public void CacheElements()
		{
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0xEBCD74", Offset = "0xEBCD74", VA = "0xEBCD74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DA0")]
		[Address(RVA = "0xEBD130", Offset = "0xEBD130", VA = "0xEBD130")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0xEBD5D4", Offset = "0xEBD5D4", VA = "0xEBD5D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0xEBD8CC", Offset = "0xEBD8CC", VA = "0xEBD8CC")]
		private void MyOnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0xEBDAD8", Offset = "0xEBDAD8", VA = "0xEBDAD8")]
		[PunRPC]
		private void MyOnPhotonPlayerConnectedMsg(int m_Health)
		{
		}

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0xEBD3F0", Offset = "0xEBD3F0", VA = "0xEBD3F0")]
		public void ReenableComponents()
		{
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0xEBA750", Offset = "0xEBA750", VA = "0xEBA750")]
		public void Kill()
		{
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0xEBDF64", Offset = "0xEBDF64", VA = "0xEBDF64")]
		private void OnDamageTaken(DamageReceiver dmgReceiver, DamageInfo dmgInfo)
		{
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0xEBE1E8", Offset = "0xEBE1E8", VA = "0xEBE1E8")]
		[PunRPC]
		private void RPCTakeDamage(short dmg, bool isHead)
		{
		}

		[Token(Token = "0x6002DA8")]
		[Address(RVA = "0xEBDC24", Offset = "0xEBDC24", VA = "0xEBDC24")]
		public void OnDeath(bool isHead, DamageInfo dmgInfo, bool auto = false)
		{
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0xEBE6F0", Offset = "0xEBE6F0", VA = "0xEBE6F0")]
		[PunRPC]
		private void _OnDeathRPC(Vector3 dmgerPos, bool isExplosion, bool isHead, int killerID, bool auto)
		{
		}

		[Token(Token = "0x6002DAA")]
		[Address(RVA = "0xEBF1E4", Offset = "0xEBF1E4", VA = "0xEBF1E4")]
		[IteratorStateMachine(typeof(<DisableObj>d__42))]
		public IEnumerator DisableObj()
		{
			return null;
		}

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0xEBECD4", Offset = "0xEBECD4", VA = "0xEBECD4")]
		private void ActivateRagdoll(Vector3 killerPosition, bool diedByExplosion, bool diedByHeadshot, float killForceMultiplier)
		{
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0xEB9D88", Offset = "0xEB9D88", VA = "0xEB9D88")]
		public void SetupHP(int _hp)
		{
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0xEBE2D4", Offset = "0xEBE2D4", VA = "0xEBE2D4")]
		private void UpdateHPBar(bool enableUI)
		{
		}

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0xEBF2DC", Offset = "0xEBF2DC", VA = "0xEBF2DC")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x6002DAF")]
		[Address(RVA = "0xEBF274", Offset = "0xEBF274", VA = "0xEBF274")]
		[IteratorStateMachine(typeof(<DisableHPBar>d__48))]
		private IEnumerator DisableHPBar()
		{
			return null;
		}

		[Token(Token = "0x6002DB0")]
		[Address(RVA = "0xEBE5B8", Offset = "0xEBE5B8", VA = "0xEBE5B8")]
		private int GetCoinsValue(bool isHead)
		{
			return default(int);
		}

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0xEBEB90", Offset = "0xEBEB90", VA = "0xEBEB90")]
		private void FadeOutBar()
		{
		}

		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0xEBF604", Offset = "0xEBF604", VA = "0xEBF604")]
		[PunRPC]
		public void RPCFxs()
		{
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0xEBB624", Offset = "0xEBB624", VA = "0xEBB624")]
		public void PlayExplosionSFX()
		{
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0xEBF61C", Offset = "0xEBF61C", VA = "0xEBF61C")]
		[IteratorStateMachine(typeof(<ZombieExplodingRoutine>d__59))]
		private IEnumerator ZombieExplodingRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0xEBF6AC", Offset = "0xEBF6AC", VA = "0xEBF6AC")]
		public ZombieHealth()
		{
		}
	}
	[Token(Token = "0x200078F")]
	public class ZombieModeConfig : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_cam;

		[Token(Token = "0x4003C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerData m_player;

		[Token(Token = "0x4003C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] m_SpawnPoints;

		[Token(Token = "0x4003C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] m_PlayerSpawnPoints;

		[Token(Token = "0x4003C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask m_sightLayer;

		[Token(Token = "0x4003C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Mode References")]
		public ZombieScoringManager scoringManager;

		[Token(Token = "0x4003C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InventoryManager invManager;

		[Token(Token = "0x4003C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ZombieNpcManager npcManager;

		[Token(Token = "0x4003C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<Transform> m_unlockedSpawnPoints;

		[Token(Token = "0x170004F9")]
		public Transform[] SpawnPoints
		{
			[Token(Token = "0x6002DCA")]
			[Address(RVA = "0xEBFCC4", Offset = "0xEBFCC4", VA = "0xEBFCC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0xEBFCCC", Offset = "0xEBFCCC", VA = "0xEBFCCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0xEBFCF0", Offset = "0xEBFCF0", VA = "0xEBFCF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0xEBFD2C", Offset = "0xEBFD2C", VA = "0xEBFD2C")]
		public Vector3 GetRandomSpawnPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0xEC085C", Offset = "0xEC085C", VA = "0xEC085C")]
		public void UnlockSpawnpoints(ZombiesAreas _unlockedArea)
		{
		}

		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0xEC09B4", Offset = "0xEC09B4", VA = "0xEC09B4")]
		public void UnlockAllSpawnpoints()
		{
		}

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0xEBFDC4", Offset = "0xEBFDC4", VA = "0xEBFDC4")]
		public Vector3 GetRandomSpawnPoint(Transform _objectivePos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0xEC0CFC", Offset = "0xEC0CFC", VA = "0xEC0CFC")]
		public bool SpawnPointVisible(Transform _spawnPoint, Vector3 sightPoint, Vector3 forward)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0xEC0F2C", Offset = "0xEC0F2C", VA = "0xEC0F2C")]
		public Transform GetRandomPlayerSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0xEC0F6C", Offset = "0xEC0F6C", VA = "0xEC0F6C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002DD4")]
		[Address(RVA = "0xEC1048", Offset = "0xEC1048", VA = "0xEC1048")]
		public ZombieModeConfig()
		{
		}
	}
	[Token(Token = "0x2000790")]
	public class ZombieSpawnTest : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelManager m_levelManager;

		[Token(Token = "0x4003C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InventoryManager m_inventoryManager;

		[Token(Token = "0x4003C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int zombieSpawnLimit;

		[Token(Token = "0x4003C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] m_ZombiePrefabs;

		[Token(Token = "0x4003C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZombieModeConfig m_Config;

		[Token(Token = "0x4003C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ZombieHealth> m_SpawnedZombies;

		[Token(Token = "0x4003C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_NextSpawnTime;

		[Token(Token = "0x4003C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public bool spawnOn;

		[Token(Token = "0x6002DD6")]
		[Address(RVA = "0xEC10C4", Offset = "0xEC10C4", VA = "0xEC10C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0xEC1154", Offset = "0xEC1154", VA = "0xEC1154")]
		private void Start()
		{
		}

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0xEC119C", Offset = "0xEC119C", VA = "0xEC119C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0xEC1418", Offset = "0xEC1418", VA = "0xEC1418")]
		public ZombieSpawnTest()
		{
		}
	}
	[Token(Token = "0x2000791")]
	public enum ZombieSounds
	{
		[Token(Token = "0x4003C25")]
		Hit,
		[Token(Token = "0x4003C26")]
		Attack,
		[Token(Token = "0x4003C27")]
		Death
	}
	[Token(Token = "0x2000792")]
	public class ZombieAISounds : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000793")]
		[CompilerGenerated]
		private sealed class <ZombieMoanRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieAISounds <>4__this;

			[Token(Token = "0x170004FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DE3")]
				[Address(RVA = "0xEC1AD0", Offset = "0xEC1AD0", VA = "0xEC1AD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DE5")]
				[Address(RVA = "0xEC1B18", Offset = "0xEC1B18", VA = "0xEC1B18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DE0")]
			[Address(RVA = "0xEC15DC", Offset = "0xEC15DC", VA = "0xEC15DC")]
			[DebuggerHidden]
			public <ZombieMoanRoutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002DE1")]
			[Address(RVA = "0xEC1838", Offset = "0xEC1838", VA = "0xEC1838", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DE2")]
			[Address(RVA = "0xEC183C", Offset = "0xEC183C", VA = "0xEC183C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DE4")]
			[Address(RVA = "0xEC1AD8", Offset = "0xEC1AD8", VA = "0xEC1AD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource primaryAS;

		[Token(Token = "0x4003C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource secondaryAS;

		[Token(Token = "0x4003C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource tertiaryAS;

		[Token(Token = "0x4003C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip[] moanSounds;

		[Token(Token = "0x4003C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip constantMoaning;

		[Token(Token = "0x4003C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip[] attackSounds;

		[Token(Token = "0x4003C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip[] hitSounds;

		[Token(Token = "0x4003C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip[] deathSounds;

		[Token(Token = "0x4003C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Range(0f, 1f)]
		private float moanVolume;

		[Token(Token = "0x4003C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0f, 1f)]
		[SerializeField]
		private float deathVolume;

		[Token(Token = "0x4003C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 1f)]
		[SerializeField]
		private float attackVolume;

		[Token(Token = "0x4003C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[Range(0f, 1f)]
		private float hitVolume;

		[Token(Token = "0x4003C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaitForSeconds[] random3dSfxDelay;

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0xEC149C", Offset = "0xEC149C", VA = "0xEC149C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0xEBAC48", Offset = "0xEBAC48", VA = "0xEBAC48")]
		public void OnDeath(bool playDeathSound = true)
		{
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0xEC1574", Offset = "0xEC1574", VA = "0xEC1574")]
		[IteratorStateMachine(typeof(<ZombieMoanRoutine>d__15))]
		private IEnumerator ZombieMoanRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0xEBE3DC", Offset = "0xEBE3DC", VA = "0xEBE3DC")]
		public void PlayZombieSound(ZombieSounds sound)
		{
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0xEC1604", Offset = "0xEC1604", VA = "0xEC1604")]
		private void PlaySoundOneShot(AudioClip clip, float volume)
		{
		}

		[Token(Token = "0x6002DDF")]
		[Address(RVA = "0xEC16D8", Offset = "0xEC16D8", VA = "0xEC16D8")]
		public ZombieAISounds()
		{
		}
	}
	[Token(Token = "0x2000794")]
	public enum Z_SFX
	{
		[Token(Token = "0x4003C39")]
		None = -2,
		[Token(Token = "0x4003C3A")]
		RoundComplete_Random,
		[Token(Token = "0x4003C3B")]
		RoundStart,
		[Token(Token = "0x4003C3C")]
		RoundComplete_1,
		[Token(Token = "0x4003C3D")]
		RoundComplete_2,
		[Token(Token = "0x4003C3E")]
		Notification,
		[Token(Token = "0x4003C3F")]
		CoinsShake,
		[Token(Token = "0x4003C40")]
		MatchEnd,
		[Token(Token = "0x4003C41")]
		ShopError,
		[Token(Token = "0x4003C42")]
		PlayerDown,
		[Token(Token = "0x4003C43")]
		FrenzyDropChirp,
		[Token(Token = "0x4003C44")]
		PickUpHealth,
		[Token(Token = "0x4003C45")]
		PercussionAlert,
		[Token(Token = "0x4003C46")]
		BleedingOutAlert,
		[Token(Token = "0x4003C47")]
		FleshExplosion,
		[Token(Token = "0x4003C48")]
		FleshExplosionImpact,
		[Token(Token = "0x4003C49")]
		FleshExplosionFireIgnition,
		[Token(Token = "0x4003C4A")]
		DefensePerkEquip,
		[Token(Token = "0x4003C4B")]
		DefensePerkEquip2,
		[Token(Token = "0x4003C4C")]
		DefensePerkEquip3,
		[Token(Token = "0x4003C4D")]
		Heartbeat,
		[Token(Token = "0x4003C4E")]
		DefaultChatSound,
		[Token(Token = "0x4003C4F")]
		SBEquip,
		[Token(Token = "0x4003C50")]
		SBEquip2,
		[Token(Token = "0x4003C51")]
		SBEquip3,
		[Token(Token = "0x4003C52")]
		SBFlameEquip,
		[Token(Token = "0x4003C53")]
		FlashStun,
		[Token(Token = "0x4003C54")]
		UIOpenMenu,
		[Token(Token = "0x4003C55")]
		UIHover,
		[Token(Token = "0x4003C56")]
		UIGenericClick,
		[Token(Token = "0x4003C57")]
		UICloseMenu,
		[Token(Token = "0x4003C58")]
		ZombieDucksExterminated,
		[Token(Token = "0x4003C59")]
		BackroomsImpact
	}
	[Token(Token = "0x2000795")]
	public class ZombieSoundManager : UnityEngine.MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000796")]
		[CompilerGenerated]
		private struct <PlayOneShot2D>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4003C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4003C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4003C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Z_SFX sfx;

			[Token(Token = "0x4003C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float delay;

			[Token(Token = "0x4003C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool musicSfx;

			[Token(Token = "0x4003C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float volume;

			[Token(Token = "0x4003C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002DEF")]
			[Address(RVA = "0xEC2488", Offset = "0xEC2488", VA = "0xEC2488", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002DF0")]
			[Address(RVA = "0xEC28A4", Offset = "0xEC28A4", VA = "0xEC28A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4003C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ZombieSoundManager m;

		[Token(Token = "0x4003C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x4003C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource revivingAS;

		[Token(Token = "0x4003C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource altMusicAS;

		[Token(Token = "0x4003C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ASAutoVolume altMusicAV;

		[Token(Token = "0x4003C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte currentIndex;

		[Token(Token = "0x4003C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip[] clips;

		[Token(Token = "0x4003C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float nextSoundTime;

		[Token(Token = "0x4003C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Random 3d sound effects")]
		[SerializeField]
		private Transform random3dAudioWrap;

		[Token(Token = "0x4003C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource[] random3dAudioSources;

		[Token(Token = "0x4003C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] random3dSfxDelay;

		[Token(Token = "0x4003C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, float> random3dAsOGVolumes;

		[Token(Token = "0x6002DE6")]
		[Address(RVA = "0xEC1B20", Offset = "0xEC1B20", VA = "0xEC1B20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0xEC1C74", Offset = "0xEC1C74", VA = "0xEC1C74")]
		private void Update()
		{
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0xEB71AC", Offset = "0xEB71AC", VA = "0xEB71AC")]
		[AsyncStateMachine(typeof(<PlayOneShot2D>d__14))]
		public static void PlayOneShot2D(Z_SFX sfx, float delay = 0f, float volume = 1f, bool musicSfx = false)
		{
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0xEC1DEC", Offset = "0xEC1DEC", VA = "0xEC1DEC")]
		public static void PlayAltMusic(AudioClip clip, float volume)
		{
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0xEC1F78", Offset = "0xEC1F78", VA = "0xEC1F78")]
		public static void FadeOutAltMusic()
		{
		}

		[Token(Token = "0x6002DEB")]
		[Address(RVA = "0xEBFBFC", Offset = "0xEBFBFC", VA = "0xEBFBFC")]
		public static AudioClip GetClip(Z_SFX sfx)
		{
			return null;
		}

		[Token(Token = "0x6002DEC")]
		[Address(RVA = "0xEC20D0", Offset = "0xEC20D0", VA = "0xEC20D0")]
		public static void FadeRevivingMusic(bool fadeIn)
		{
		}

		[Token(Token = "0x6002DED")]
		[Address(RVA = "0xEC2214", Offset = "0xEC2214", VA = "0xEC2214")]
		public static void FadeOutRevivingMusic()
		{
		}

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0xEC23BC", Offset = "0xEC23BC", VA = "0xEC23BC")]
		public ZombieSoundManager()
		{
		}
	}
	[Token(Token = "0x2000798")]
	public class BackroomsBacteria : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000799")]
		[CompilerGenerated]
		private sealed class <Run>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BackroomsBacteria <>4__this;

			[Token(Token = "0x170004FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DFF")]
				[Address(RVA = "0xEC2F48", Offset = "0xEC2F48", VA = "0xEC2F48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E01")]
				[Address(RVA = "0xEC2F90", Offset = "0xEC2F90", VA = "0xEC2F90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DFC")]
			[Address(RVA = "0xEC2D94", Offset = "0xEC2D94", VA = "0xEC2D94")]
			[DebuggerHidden]
			public <Run>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002DFD")]
			[Address(RVA = "0xEC2DC4", Offset = "0xEC2DC4", VA = "0xEC2DC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0xEC2DC8", Offset = "0xEC2DC8", VA = "0xEC2DC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E00")]
			[Address(RVA = "0xEC2F50", Offset = "0xEC2F50", VA = "0xEC2F50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ZombieBackroomsManager m_backroomsManager;

		[Token(Token = "0x4003C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Space]
		private Animator m_bacteriaAnimator;

		[Token(Token = "0x4003C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_screechingAS;

		[Token(Token = "0x4003C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool m_Ending;

		[Token(Token = "0x4003C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_position;

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0xEC29E4", Offset = "0xEC29E4", VA = "0xEC29E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DF6")]
		[Address(RVA = "0xEC2A28", Offset = "0xEC2A28", VA = "0xEC2A28")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0xEC2BA8", Offset = "0xEC2BA8", VA = "0xEC2BA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0xEC2BE4", Offset = "0xEC2BE4", VA = "0xEC2BE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0xEC2C38", Offset = "0xEC2C38", VA = "0xEC2C38")]
		public void PlayRunAnimation()
		{
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0xEC2D2C", Offset = "0xEC2D2C", VA = "0xEC2D2C")]
		[IteratorStateMachine(typeof(<Run>d__10))]
		private IEnumerator Run()
		{
			return null;
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0xEC2DBC", Offset = "0xEC2DBC", VA = "0xEC2DBC")]
		public BackroomsBacteria()
		{
		}
	}
	[Token(Token = "0x200079A")]
	public class BackroomLever : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public byte m_Index;

		[Token(Token = "0x4003C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public double m_LastInteractedAt;

		[Token(Token = "0x4003C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4003C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_audiosource;

		[Token(Token = "0x4003C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space]
		[SerializeField]
		private ZombieBackroomsManager m_backroomsManager;

		[Token(Token = "0x4003C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_enteredRange;

		[Token(Token = "0x6002E02")]
		[Address(RVA = "0xEC2F98", Offset = "0xEC2F98", VA = "0xEC2F98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E03")]
		[Address(RVA = "0xEC3090", Offset = "0xEC3090", VA = "0xEC3090")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0xEC3188", Offset = "0xEC3188", VA = "0xEC3188")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0xEC31C8", Offset = "0xEC31C8", VA = "0xEC31C8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0xEC3204", Offset = "0xEC3204", VA = "0xEC3204")]
		private void TryInteract()
		{
		}

		[Token(Token = "0x6002E07")]
		[Address(RVA = "0xEC3480", Offset = "0xEC3480", VA = "0xEC3480")]
		public void PlayInteractAnimation()
		{
		}

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0xEC34D4", Offset = "0xEC34D4", VA = "0xEC34D4")]
		public void PlaySFX()
		{
		}

		[Token(Token = "0x6002E09")]
		[Address(RVA = "0xEC3578", Offset = "0xEC3578", VA = "0xEC3578")]
		public BackroomLever()
		{
		}
	}
	[Token(Token = "0x200079B")]
	public class ZombieDuck : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public byte m_Index;

		[Token(Token = "0x4003C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool m_Killed;

		[Token(Token = "0x4003C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ZombieBackroomsManager m_backroomsManager;

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0xEC3580", Offset = "0xEC3580", VA = "0xEC3580")]
		public void OnDamageTaken(DamageReceiver damageReceiver, DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0xEC36D0", Offset = "0xEC36D0", VA = "0xEC36D0")]
		public ZombieDuck()
		{
		}
	}
	[Token(Token = "0x200079C")]
	public class ZombieBackroomsManager : PunBehaviour
	{
		[Token(Token = "0x200079D")]
		[CompilerGenerated]
		private sealed class <DeathCries>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieBackroomsManager <>4__this;

			[Token(Token = "0x4003C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AudioClip <clip>5__2;

			[Token(Token = "0x4003C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <index>5__3;

			[Token(Token = "0x170004FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E2D")]
				[Address(RVA = "0xEC5CC0", Offset = "0xEC5CC0", VA = "0xEC5CC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E2F")]
				[Address(RVA = "0xEC5D08", Offset = "0xEC5D08", VA = "0xEC5D08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0xEC5288", Offset = "0xEC5288", VA = "0xEC5288")]
			[DebuggerHidden]
			public <DeathCries>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0xEC58E4", Offset = "0xEC58E4", VA = "0xEC58E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0xEC58E8", Offset = "0xEC58E8", VA = "0xEC58E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E2E")]
			[Address(RVA = "0xEC5CC8", Offset = "0xEC5CC8", VA = "0xEC5CC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200079E")]
		[CompilerGenerated]
		private sealed class <BackroomsHeightCheck>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieBackroomsManager <>4__this;

			[Token(Token = "0x17000500")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E33")]
				[Address(RVA = "0xEC5E50", Offset = "0xEC5E50", VA = "0xEC5E50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000501")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E35")]
				[Address(RVA = "0xEC5E98", Offset = "0xEC5E98", VA = "0xEC5E98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E30")]
			[Address(RVA = "0xEC52B0", Offset = "0xEC52B0", VA = "0xEC52B0")]
			[DebuggerHidden]
			public <BackroomsHeightCheck>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6002E31")]
			[Address(RVA = "0xEC5D10", Offset = "0xEC5D10", VA = "0xEC5D10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E32")]
			[Address(RVA = "0xEC5D14", Offset = "0xEC5D14", VA = "0xEC5D14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E34")]
			[Address(RVA = "0xEC5E58", Offset = "0xEC5E58", VA = "0xEC5E58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200079F")]
		[CompilerGenerated]
		private sealed class <ClipThrough>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieBackroomsManager <>4__this;

			[Token(Token = "0x17000502")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E39")]
				[Address(RVA = "0xEC6064", Offset = "0xEC6064", VA = "0xEC6064", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000503")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E3B")]
				[Address(RVA = "0xEC60AC", Offset = "0xEC60AC", VA = "0xEC60AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E36")]
			[Address(RVA = "0xEC52D8", Offset = "0xEC52D8", VA = "0xEC52D8")]
			[DebuggerHidden]
			public <ClipThrough>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002E37")]
			[Address(RVA = "0xEC5EA0", Offset = "0xEC5EA0", VA = "0xEC5EA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E38")]
			[Address(RVA = "0xEC5EA4", Offset = "0xEC5EA4", VA = "0xEC5EA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E3A")]
			[Address(RVA = "0xEC606C", Offset = "0xEC606C", VA = "0xEC606C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A0")]
		[CompilerGenerated]
		private sealed class <IEEndBackroomsSequenceMsg>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieBackroomsManager <>4__this;

			[Token(Token = "0x4003CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <ending>5__2;

			[Token(Token = "0x17000504")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E3F")]
				[Address(RVA = "0xEC61AC", Offset = "0xEC61AC", VA = "0xEC61AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E41")]
				[Address(RVA = "0xEC61F4", Offset = "0xEC61F4", VA = "0xEC61F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E3C")]
			[Address(RVA = "0xEC5388", Offset = "0xEC5388", VA = "0xEC5388")]
			[DebuggerHidden]
			public <IEEndBackroomsSequenceMsg>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6002E3D")]
			[Address(RVA = "0xEC60B4", Offset = "0xEC60B4", VA = "0xEC60B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0xEC60B8", Offset = "0xEC60B8", VA = "0xEC60B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E40")]
			[Address(RVA = "0xEC61B4", Offset = "0xEC61B4", VA = "0xEC61B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ZombieDuck[] m_zombieDucks;

		[Token(Token = "0x4003C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] m_possibleDuckPositions;

		[Token(Token = "0x4003C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] m_lastDuckPositions;

		[Token(Token = "0x4003C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_leversActive;

		[Token(Token = "0x4003C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BackroomLever[] m_levers;

		[Token(Token = "0x4003C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] m_possibleLeversPositions;

		[Token(Token = "0x4003C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private byte[] m_lastLeversPositions;

		[Token(Token = "0x4003C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform m_BackroomsSafePoint;

		[Token(Token = "0x4003C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_BackroomsActive;

		[Token(Token = "0x4003C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip m_backroomsMusic;

		[Token(Token = "0x4003C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip m_backroomsImpact;

		[Token(Token = "0x4003C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioSource[] m_deathCriesAsses;

		[Token(Token = "0x4003C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public BackroomsBacteria m_Bacteria;

		[Token(Token = "0x4003C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_backroomsEnvironment;

		[Token(Token = "0x4003C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CharacterController m_controller;

		[Token(Token = "0x4003C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Rigidbody m_addedRb;

		[Token(Token = "0x4003C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_clipThroughCoroutine;

		[Token(Token = "0x4003C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine m_heightCheckCoroutine;

		[Token(Token = "0x4003C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine m_deathCriesCoroutine;

		[Token(Token = "0x4003C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private NewZombieModeManager m_modeManager;

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0xEC36D8", Offset = "0xEC36D8", VA = "0xEC36D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0xEC37B8", Offset = "0xEC37B8", VA = "0xEC37B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0xEC37FC", Offset = "0xEC37FC", VA = "0xEC37FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0xEC3A04", Offset = "0xEC3A04", VA = "0xEC3A04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0xEC3C0C", Offset = "0xEC3C0C", VA = "0xEC3C0C")]
		private void OnPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0xEC3F58", Offset = "0xEC3F58", VA = "0xEC3F58")]
		[PunRPC]
		private void OnPlayerConnectedMsg(byte[] lastDuckPositions, byte[] killedDucks)
		{
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0xEC4284", Offset = "0xEC4284", VA = "0xEC4284")]
		[PunRPC]
		private void OnPlayerConnectedWithDucksKilled(byte[] lastLeversPositions, bool backroomsActive)
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0xEC47B0", Offset = "0xEC47B0", VA = "0xEC47B0")]
		private void DisableAllDucks()
		{
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0xEC4840", Offset = "0xEC4840", VA = "0xEC4840")]
		private void RandomizeDuckPositions(int round)
		{
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0xEC3FC8", Offset = "0xEC3FC8", VA = "0xEC3FC8")]
		[PunRPC]
		private void RandomizeDuckPositionsMsg(byte[] positionIndexes)
		{
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0xEC35A0", Offset = "0xEC35A0", VA = "0xEC35A0")]
		public void KillDuck(byte duckIndex)
		{
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0xEC4AC4", Offset = "0xEC4AC4", VA = "0xEC4AC4")]
		[PunRPC]
		private void KillDuckMsg(byte duckIndex)
		{
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0xEC4BC0", Offset = "0xEC4BC0", VA = "0xEC4BC0")]
		private void ActivateLevers()
		{
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0xEC42BC", Offset = "0xEC42BC", VA = "0xEC42BC")]
		[PunRPC]
		private void ActivateLeversMsg(byte[] positionIndexes)
		{
		}

		[Token(Token = "0x6002E1A")]
		[Address(RVA = "0xEC3374", Offset = "0xEC3374", VA = "0xEC3374")]
		public void InteractWithLever(byte leverIndex)
		{
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0xEC4E3C", Offset = "0xEC4E3C", VA = "0xEC4E3C")]
		[PunRPC]
		private void InteractWithLeverMsg(byte leverIndex)
		{
		}

		[Token(Token = "0x6002E1C")]
		[Address(RVA = "0xEC4FF4", Offset = "0xEC4FF4", VA = "0xEC4FF4")]
		private void ActivateBackrooms()
		{
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0xEC45A8", Offset = "0xEC45A8", VA = "0xEC45A8")]
		[PunRPC]
		private void ActivateBackroomsMsg()
		{
		}

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0xEC5100", Offset = "0xEC5100", VA = "0xEC5100")]
		private void StopCoroutines()
		{
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0xEC5220", Offset = "0xEC5220", VA = "0xEC5220")]
		[IteratorStateMachine(typeof(<DeathCries>d__39))]
		private IEnumerator DeathCries()
		{
			return null;
		}

		[Token(Token = "0x6002E20")]
		[Address(RVA = "0xEC51B8", Offset = "0xEC51B8", VA = "0xEC51B8")]
		[IteratorStateMachine(typeof(<BackroomsHeightCheck>d__40))]
		private IEnumerator BackroomsHeightCheck()
		{
			return null;
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0xEC5150", Offset = "0xEC5150", VA = "0xEC5150")]
		[IteratorStateMachine(typeof(<ClipThrough>d__41))]
		private IEnumerator ClipThrough()
		{
			return null;
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0xEC2AE0", Offset = "0xEC2AE0", VA = "0xEC2AE0")]
		public void TryEndBackrooms()
		{
		}

		[Token(Token = "0x6002E23")]
		[Address(RVA = "0xEC5300", Offset = "0xEC5300", VA = "0xEC5300")]
		[PunRPC]
		private void EndBackroomsSequenceMsg()
		{
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0xEC5320", Offset = "0xEC5320", VA = "0xEC5320")]
		[IteratorStateMachine(typeof(<IEEndBackroomsSequenceMsg>d__44))]
		private IEnumerator IEEndBackroomsSequenceMsg()
		{
			return null;
		}

		[Token(Token = "0x6002E25")]
		[Address(RVA = "0xEC53B0", Offset = "0xEC53B0", VA = "0xEC53B0")]
		private void DeactivateBackrooms()
		{
		}

		[Token(Token = "0x6002E26")]
		[Address(RVA = "0xEC54BC", Offset = "0xEC54BC", VA = "0xEC54BC")]
		[PunRPC]
		private void DeactivateBackroomsMsg()
		{
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0xEC5814", Offset = "0xEC5814", VA = "0xEC5814")]
		public ZombieBackroomsManager()
		{
		}
	}
	[Token(Token = "0x20007A1")]
	public class ZDrop : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20007A2")]
		public enum DropType
		{
			[Token(Token = "0x4003CAF")]
			Health,
			[Token(Token = "0x4003CB0")]
			Ammo,
			[Token(Token = "0x4003CB1")]
			Armor
		}

		[StructLayout(3)]
		[Token(Token = "0x20007A3")]
		[CompilerGenerated]
		private struct <PickUp>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4003CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4003CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4003CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ZDrop <>4__this;

			[Token(Token = "0x4003CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002E49")]
			[Address(RVA = "0xEC6958", Offset = "0xEC6958", VA = "0xEC6958", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0xEC6C3C", Offset = "0xEC6C3C", VA = "0xEC6C3C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4003CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Collider> collidersToIgnore;

		[Token(Token = "0x4003CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Values")]
		[SerializeField]
		private float upForce;

		[Token(Token = "0x4003CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float sideForce;

		[Token(Token = "0x4003CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Components")]
		public Collider ownCollider;

		[Token(Token = "0x4003CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody rb;

		[Token(Token = "0x4003CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool pickedUp;

		[Token(Token = "0x4003CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float timePassed;

		[Token(Token = "0x4003CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		[SerializeField]
		private GameObject[] dropTypes;

		[Token(Token = "0x4003CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public DropType dropType;

		[Token(Token = "0x4003CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Checker checker;

		[Token(Token = "0x17000506")]
		private bool needDrop
		{
			[Token(Token = "0x6002E46")]
			[Address(RVA = "0xEC6748", Offset = "0xEC6748", VA = "0xEC6748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0xEC61FC", Offset = "0xEC61FC", VA = "0xEC61FC")]
		public void Setup(DropType _dropType, Checker _checker)
		{
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0xEC6304", Offset = "0xEC6304", VA = "0xEC6304")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E44")]
		[Address(RVA = "0xEC66B4", Offset = "0xEC66B4", VA = "0xEC66B4")]
		[AsyncStateMachine(typeof(<PickUp>d__13))]
		private void PickUp()
		{
		}

		[Token(Token = "0x6002E45")]
		[Address(RVA = "0xEC65C0", Offset = "0xEC65C0", VA = "0xEC65C0")]
		private void DoDestroy()
		{
		}

		[Token(Token = "0x6002E47")]
		[Address(RVA = "0xEC6770", Offset = "0xEC6770", VA = "0xEC6770")]
		private void GetItem()
		{
		}

		[Token(Token = "0x6002E48")]
		[Address(RVA = "0xEC68D0", Offset = "0xEC68D0", VA = "0xEC68D0")]
		public ZDrop()
		{
		}
	}
	[Token(Token = "0x20007A4")]
	public class KillingFrenzy : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20007A5")]
		[CompilerGenerated]
		private sealed class <SpawnDrop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KillingFrenzy <>4__this;

			[Token(Token = "0x4003CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4003CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int amount;

			[Token(Token = "0x4003CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <ammoGiven>5__2;

			[Token(Token = "0x4003CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__3;

			[Token(Token = "0x17000507")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E56")]
				[Address(RVA = "0xEC73B0", Offset = "0xEC73B0", VA = "0xEC73B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000508")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E58")]
				[Address(RVA = "0xEC73F8", Offset = "0xEC73F8", VA = "0xEC73F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E53")]
			[Address(RVA = "0xEC6D18", Offset = "0xEC6D18", VA = "0xEC6D18")]
			[DebuggerHidden]
			public <SpawnDrop>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002E54")]
			[Address(RVA = "0xEC7058", Offset = "0xEC7058", VA = "0xEC7058", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E55")]
			[Address(RVA = "0xEC705C", Offset = "0xEC705C", VA = "0xEC705C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E57")]
			[Address(RVA = "0xEC73B8", Offset = "0xEC73B8", VA = "0xEC73B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject dropPrefab;

		[Token(Token = "0x4003CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InventoryManager m_Inventory;

		[Token(Token = "0x4003CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource chirp3dSound;

		[Token(Token = "0x4003CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentKills;

		[Token(Token = "0x4003CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int rewardCounter;

		[Token(Token = "0x4003CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timer;

		[Token(Token = "0x4003CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForFixedUpdate wait;

		[Token(Token = "0x4003CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool needC;

		[Token(Token = "0x4003CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[HideInInspector]
		public bool needCs;

		[Token(Token = "0x6002E4B")]
		[Address(RVA = "0xEC6C48", Offset = "0xEC6C48", VA = "0xEC6C48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002E4C")]
		[Address(RVA = "0xEC6C50", Offset = "0xEC6C50", VA = "0xEC6C50")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x6002E4D")]
		[Address(RVA = "0xEBF030", Offset = "0xEBF030", VA = "0xEBF030")]
		public void RegisterKill(Vector3 position)
		{
		}

		[Token(Token = "0x6002E4E")]
		[Address(RVA = "0xEC6C7C", Offset = "0xEC6C7C", VA = "0xEC6C7C")]
		[IteratorStateMachine(typeof(<SpawnDrop>d__10))]
		private IEnumerator SpawnDrop(Vector3 position, int amount)
		{
			return null;
		}

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0xEC6D40", Offset = "0xEC6D40", VA = "0xEC6D40")]
		private bool NeedAmmo(bool absolute = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0xEC6F04", Offset = "0xEC6F04", VA = "0xEC6F04")]
		private bool NeedHealth(bool absolute = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0xEC6FF0", Offset = "0xEC6FF0", VA = "0xEC6FF0")]
		public KillingFrenzy()
		{
		}
	}
	[Token(Token = "0x20007A7")]
	public delegate bool Checker(bool absolute);
	[Token(Token = "0x20007A8")]
	public class ZombiesLoadout : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20007A9")]
		[CompilerGenerated]
		private sealed class <InitializeZLoadout>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombiesLoadout <>4__this;

			[Token(Token = "0x4003CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool dualWield;

			[Token(Token = "0x17000509")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E65")]
				[Address(RVA = "0xEC7A34", Offset = "0xEC7A34", VA = "0xEC7A34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E67")]
				[Address(RVA = "0xEC7A7C", Offset = "0xEC7A7C", VA = "0xEC7A7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E62")]
			[Address(RVA = "0xEC760C", Offset = "0xEC760C", VA = "0xEC760C")]
			[DebuggerHidden]
			public <InitializeZLoadout>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002E63")]
			[Address(RVA = "0xEC7774", Offset = "0xEC7774", VA = "0xEC7774", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E64")]
			[Address(RVA = "0xEC7778", Offset = "0xEC7778", VA = "0xEC7778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E66")]
			[Address(RVA = "0xEC7A3C", Offset = "0xEC7A3C", VA = "0xEC7A3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007AA")]
		[CompilerGenerated]
		private sealed class <_SwitchToDefaultKnives>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombiesLoadout <>4__this;

			[Token(Token = "0x4003CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <dualWield>5__2;

			[Token(Token = "0x1700050B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E6B")]
				[Address(RVA = "0xEC7C84", Offset = "0xEC7C84", VA = "0xEC7C84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E6D")]
				[Address(RVA = "0xEC7CCC", Offset = "0xEC7CCC", VA = "0xEC7CCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E68")]
			[Address(RVA = "0xEC7634", Offset = "0xEC7634", VA = "0xEC7634")]
			[DebuggerHidden]
			public <_SwitchToDefaultKnives>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002E69")]
			[Address(RVA = "0xEC7A84", Offset = "0xEC7A84", VA = "0xEC7A84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0xEC7A88", Offset = "0xEC7A88", VA = "0xEC7A88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0xEC7C8C", Offset = "0xEC7C8C", VA = "0xEC7C8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Loadout")]
		public Loadout m_Loadout;

		[Token(Token = "0x4003CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerLocalData m_PlayerLocalData;

		[Token(Token = "0x4003CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InventoryManager m_InventoryManager;

		[Token(Token = "0x4003CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlayerWeapons m_PlayerWeapons;

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0xEC74C8", Offset = "0xEC74C8", VA = "0xEC74C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0xEC7590", Offset = "0xEC7590", VA = "0xEC7590")]
		[IteratorStateMachine(typeof(<InitializeZLoadout>d__5))]
		private IEnumerator InitializeZLoadout(bool dualWield)
		{
			return null;
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0xEC7528", Offset = "0xEC7528", VA = "0xEC7528")]
		[IteratorStateMachine(typeof(<_SwitchToDefaultKnives>d__6))]
		private IEnumerator _SwitchToDefaultKnives()
		{
			return null;
		}

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0xEC765C", Offset = "0xEC765C", VA = "0xEC765C")]
		public void RegisterDefaultGun(bool primary)
		{
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0xEC776C", Offset = "0xEC776C", VA = "0xEC776C")]
		public ZombiesLoadout()
		{
		}
	}
	[Token(Token = "0x20007AB")]
	[RequireComponent(typeof(PhotonView))]
	public class ZombieNpcElement : Photon.MonoBehaviour
	{
		[Token(Token = "0x4003CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZombieNpcManager manager;

		[Token(Token = "0x4003CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x4003CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 targetPos;

		[Token(Token = "0x4003CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool botWarped;

		[Token(Token = "0x4003CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Transform t;

		[Token(Token = "0x4003CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion targetRot;

		[Token(Token = "0x4003CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public byte byteID;

		[Token(Token = "0x4003CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4003CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ZombieAISounds zombieSounds;

		[Token(Token = "0x4003CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ZombieHealth zombieHealth;

		[Token(Token = "0x4003CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Controls how fast or slow the netwoprked agent will transition speed")]
		[SerializeField]
		private float networkLerpMovementMultiplier;

		[Token(Token = "0x4003CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[Tooltip("Controls how mast the velocity calculated for the animator will switch between values")]
		private float speedAnimationLerpMultiplier;

		[Token(Token = "0x4003CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float lerpMagVel;

		[Token(Token = "0x4003CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lerpSpeed;

		[Token(Token = "0x4003CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magVel;

		[Token(Token = "0x4003CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private bool useAnimTypes;

		[Token(Token = "0x4003CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private int[] movementTypes;

		[Token(Token = "0x4003CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private int[] attackTypes;

		[Token(Token = "0x4003CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Projectile")]
		public GameObject projectilePrefab;

		[Token(Token = "0x4003CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Attack;

		[Token(Token = "0x4003CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int MoveSpeed;

		[Token(Token = "0x6002E6E")]
		[Address(RVA = "0xEC7CD4", Offset = "0xEC7CD4", VA = "0xEC7CD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E6F")]
		[Address(RVA = "0xEC7DE8", Offset = "0xEC7DE8", VA = "0xEC7DE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E70")]
		[Address(RVA = "0xEC7EDC", Offset = "0xEC7EDC", VA = "0xEC7EDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002E71")]
		[Address(RVA = "0xEC7F6C", Offset = "0xEC7F6C", VA = "0xEC7F6C")]
		public void SetTransforms(Vector3 position, float rot_y)
		{
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0xEC7FC4", Offset = "0xEC7FC4", VA = "0xEC7FC4")]
		public void UpdateTransforms()
		{
		}

		[Token(Token = "0x6002E73")]
		[Address(RVA = "0xEC81E0", Offset = "0xEC81E0", VA = "0xEC81E0")]
		public void SpeedAndLerpCalculation()
		{
		}

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0xEBEC70", Offset = "0xEBEC70", VA = "0xEBEC70")]
		public void Delete()
		{
		}

		[Token(Token = "0x6002E75")]
		[Address(RVA = "0xEC8368", Offset = "0xEC8368", VA = "0xEC8368")]
		private void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6002E76")]
		[Address(RVA = "0xEC849C", Offset = "0xEC849C", VA = "0xEC849C")]
		private void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6002E77")]
		[Address(RVA = "0xEC8538", Offset = "0xEC8538", VA = "0xEC8538")]
		[PunRPC]
		public void RPCAttack()
		{
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0xEBB3BC", Offset = "0xEBB3BC", VA = "0xEBB3BC")]
		public void InstantiateProjectile(Vector3 direction, float velocity, Vector3 anchorPosition)
		{
		}

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0xEC85B8", Offset = "0xEC85B8", VA = "0xEC85B8")]
		[PunRPC]
		private void RPCProjectile(Vector3 direction, float velocity, Vector3 anchorPosition)
		{
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0xEC8748", Offset = "0xEC8748", VA = "0xEC8748")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002E7B")]
		[Address(RVA = "0xEC87EC", Offset = "0xEC87EC", VA = "0xEC87EC")]
		public ZombieNpcElement()
		{
		}
	}
	[Token(Token = "0x20007AC")]
	public class ZombiesObjective : PunBehaviour
	{
		[Token(Token = "0x4003CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform uiTarget;

		[Token(Token = "0x4003CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup cg;

		[Token(Token = "0x4003CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform rangeIndicator;

		[Token(Token = "0x4003CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_activeRange;

		[Token(Token = "0x4003CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float progressRate;

		[Token(Token = "0x4003CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Transform progressLocation;

		[Token(Token = "0x4003CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Header("UI")]
		private Canvas worldSpaceCanvas;

		[Token(Token = "0x4003CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image fillImage;

		[Token(Token = "0x4003CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Models")]
		public GameObject[] models;

		[Token(Token = "0x4003CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private byte lastActivatedModel;

		[Token(Token = "0x4003CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LevelManager m_levelManager;

		[Token(Token = "0x4003CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerManager m_playerManager;

		[Token(Token = "0x4003CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NewZombieModeManager m_zManager;

		[Token(Token = "0x4003CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private byte playersInRange;

		[Token(Token = "0x4003CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private byte prevPlayersInRange;

		[Token(Token = "0x4003CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float currentProgress;

		[Token(Token = "0x4003CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float ogScale;

		[Token(Token = "0x4003CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform uiRt;

		[Token(Token = "0x4003CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float currentMultiplier;

		[Token(Token = "0x4003CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] secondsToComplete;

		[Token(Token = "0x4003CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float rangeIndicatorRotationSpeed;

		[Token(Token = "0x4003CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Tween rotationTween;

		[Token(Token = "0x1700050D")]
		private Transform UITarget
		{
			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0xEC9934", Offset = "0xEC9934", VA = "0xEC9934")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0xEC99C0", Offset = "0xEC99C0", VA = "0xEC99C0")]
			set
			{
			}
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0xEC99C8", Offset = "0xEC99C8", VA = "0xEC99C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0xEC9A64", Offset = "0xEC9A64", VA = "0xEC9A64")]
		private void Start()
		{
		}

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0xEC9B00", Offset = "0xEC9B00", VA = "0xEC9B00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0xEC9D2C", Offset = "0xEC9D2C", VA = "0xEC9D2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0xEC9FE0", Offset = "0xEC9FE0", VA = "0xEC9FE0")]
		private void ShowUI()
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0xECA000", Offset = "0xECA000", VA = "0xECA000")]
		private void HideUI()
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0xECA020", Offset = "0xECA020", VA = "0xECA020")]
		private void MyOnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0xECA3EC", Offset = "0xECA3EC", VA = "0xECA3EC", Slot = "44")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0xECA950", Offset = "0xECA950", VA = "0xECA950")]
		[PunRPC]
		private void NetSetup(byte spawnPointIndex, byte modelToActivate)
		{
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0xECAB94", Offset = "0xECAB94", VA = "0xECAB94")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0xECA8FC", Offset = "0xECA8FC", VA = "0xECA8FC")]
		private void CalculateCurrentMultiplier()
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0xECB00C", Offset = "0xECB00C", VA = "0xECB00C")]
		private int GetPlayersInRange()
		{
			return default(int);
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0xECB258", Offset = "0xECB258", VA = "0xECB258")]
		private float GetProgressRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0xECB2B4", Offset = "0xECB2B4", VA = "0xECB2B4")]
		public void ObjectiveComplete()
		{
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0xECB334", Offset = "0xECB334", VA = "0xECB334")]
		[PunRPC]
		private void SyncPlayersInRange(byte _playersInRange, float _progress)
		{
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0xECB390", Offset = "0xECB390", VA = "0xECB390")]
		public ZombiesObjective()
		{
		}
	}
	[Token(Token = "0x20007AD")]
	public class WaitForPlayers : PunBehaviour
	{
		[Token(Token = "0x4003CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color lightOn;

		[Token(Token = "0x4003CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color lightOff;

		[Token(Token = "0x4003D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform canvas;

		[Token(Token = "0x4003D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NewZombieModeManager manager;

		[Token(Token = "0x4003D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float range;

		[Token(Token = "0x4003D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public double subtractFrom;

		[Token(Token = "0x4003D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public double timer;

		[Token(Token = "0x4003D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public double startTime;

		[Token(Token = "0x4003D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float globalTime;

		[Token(Token = "0x4003D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TimeSpan timespan;

		[Token(Token = "0x4003D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool receivedData;

		[Token(Token = "0x4003D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float t;

		[Token(Token = "0x4003D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int lastReadPlayersInRange;

		[Token(Token = "0x4003D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int lastReadPlayersInRoom;

		[Token(Token = "0x4003D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int neededPlayers;

		[Token(Token = "0x4003D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool imMasterClient;

		[Token(Token = "0x4003D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("LanguageTexts")]
		public LanguageText playersReadyLT;

		[Token(Token = "0x4003D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LanguageText inRoomLT;

		[Token(Token = "0x4003D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public LanguageText autoStartInLT;

		[Token(Token = "0x4003D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CanvasGroup cg;

		[Token(Token = "0x4003D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform target;

		[Token(Token = "0x4003D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float ogScale;

		[Token(Token = "0x4003D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x4003D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool warned;

		[Token(Token = "0x1700050E")]
		private bool playersReady
		{
			[Token(Token = "0x6002E91")]
			[Address(RVA = "0xECB424", Offset = "0xECB424", VA = "0xECB424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0xECBD20", Offset = "0xECBD20", VA = "0xECBD20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0xECBD78", Offset = "0xECBD78", VA = "0xECBD78")]
		private void Start()
		{
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0xECBE60", Offset = "0xECBE60", VA = "0xECBE60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0xECC078", Offset = "0xECC078", VA = "0xECC078")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0xECC26C", Offset = "0xECC26C", VA = "0xECC26C")]
		private void HideUI()
		{
		}

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0xECC28C", Offset = "0xECC28C", VA = "0xECC28C")]
		private void ShowUI()
		{
		}

		[Token(Token = "0x6002E98")]
		[Address(RVA = "0xECC2AC", Offset = "0xECC2AC", VA = "0xECC2AC")]
		[PunRPC]
		private void SetStartTime(double _subtractFrom, double timestamp)
		{
		}

		[Token(Token = "0x6002E99")]
		[Address(RVA = "0xECBBAC", Offset = "0xECBBAC", VA = "0xECBBAC")]
		private void Setup()
		{
		}

		[Token(Token = "0x6002E9A")]
		[Address(RVA = "0xECC2C4", Offset = "0xECC2C4", VA = "0xECC2C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E9B")]
		[Address(RVA = "0xECCC80", Offset = "0xECCC80", VA = "0xECCC80", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0xECCD38", Offset = "0xECCD38", VA = "0xECCD38")]
		public WaitForPlayers()
		{
		}
	}
	[Token(Token = "0x20007AE")]
	public class ZombieRoundManager : PunBehaviour
	{
		[Token(Token = "0x4003D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectiveSpawnPoint[] objectiveSpawnPoints;

		[Token(Token = "0x4003D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ObjectiveSpawnPoint> unlockedOSPs;

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0xECCD54", Offset = "0xECCD54", VA = "0xECCD54")]
		public void UnlockObjectiveSpawnPoint(ZombiesAreas _unlockedArea)
		{
		}

		[Token(Token = "0x6002E9F")]
		[Address(RVA = "0xECCEAC", Offset = "0xECCEAC", VA = "0xECCEAC")]
		public void UnlockAllObjectiveSpawnPoints()
		{
		}

		[Token(Token = "0x6002EA0")]
		[Address(RVA = "0xECCB74", Offset = "0xECCB74", VA = "0xECCB74")]
		public void SendSfxMessage(Z_SFX sfx)
		{
		}

		[Token(Token = "0x6002EA1")]
		[Address(RVA = "0xECCFC8", Offset = "0xECCFC8", VA = "0xECCFC8")]
		[PunRPC]
		public void SfxMessage(byte sfx)
		{
		}

		[Token(Token = "0x6002EA2")]
		[Address(RVA = "0xECCFE0", Offset = "0xECCFE0", VA = "0xECCFE0")]
		public ZombieRoundManager()
		{
		}
	}
	[Token(Token = "0x20007AF")]
	public class ZSelfRevive : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20007B0")]
		[CompilerGenerated]
		private sealed class <EnableFuckingDiedScreen>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZSelfRevive <>4__this;

			[Token(Token = "0x4003D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <originalText>5__2;

			[Token(Token = "0x4003D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <timerText>5__3;

			[Token(Token = "0x1700050F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EAD")]
				[Address(RVA = "0xECE4CC", Offset = "0xECE4CC", VA = "0xECE4CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000510")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EAF")]
				[Address(RVA = "0xECE514", Offset = "0xECE514", VA = "0xECE514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0xECD3E0", Offset = "0xECD3E0", VA = "0xECD3E0")]
			[DebuggerHidden]
			public <EnableFuckingDiedScreen>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002EAB")]
			[Address(RVA = "0xECDFD8", Offset = "0xECDFD8", VA = "0xECDFD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0xECDFDC", Offset = "0xECDFDC", VA = "0xECDFDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EAE")]
			[Address(RVA = "0xECE4D4", Offset = "0xECE4D4", VA = "0xECE4D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Disabled when this object is enabled, reenabled on disable")]
		public GameObject[] objectsToDisable;

		[Token(Token = "0x4003D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup wrap;

		[Token(Token = "0x4003D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Self revive")]
		public RectTransform prompt;

		[Token(Token = "0x4003D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform reviveProgressWrap;

		[Token(Token = "0x4003D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image reviveProgressFill;

		[Token(Token = "0x4003D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float secondsToRevive;

		[Token(Token = "0x4003D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float hasHeldForSeconds;

		[Token(Token = "0x4003D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool reviving;

		[Token(Token = "0x4003D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Bleed out")]
		public Image bleedFill;

		[Token(Token = "0x4003D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CanvasGroup bleedWarning;

		[Token(Token = "0x4003D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CanvasGroup deadScreen;

		[Token(Token = "0x4003D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CanvasGroup deadCanvas;

		[Token(Token = "0x4003D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI deadText;

		[Token(Token = "0x4003D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Image revivingIcon;

		[Token(Token = "0x4003D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float secondsToDie;

		[Token(Token = "0x4003D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float reviveOthersTime;

		[Token(Token = "0x4003D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float bleedTimer;

		[Token(Token = "0x4003D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool dead;

		[Token(Token = "0x4003D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerData playerData;

		[Token(Token = "0x4003D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private LanguageText reviveOnRoundEndMsgLT;

		[Token(Token = "0x4003D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LanguageText reviveOnRoundStartMsgLT;

		[Token(Token = "0x4003D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WaitForSeconds fuckingDiedScreenDelay;

		[Token(Token = "0x6002EA3")]
		[Address(RVA = "0xECD05C", Offset = "0xECD05C", VA = "0xECD05C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002EA4")]
		[Address(RVA = "0xECD0B8", Offset = "0xECD0B8", VA = "0xECD0B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002EA5")]
		[Address(RVA = "0xECD2F0", Offset = "0xECD2F0", VA = "0xECD2F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002EA6")]
		[Address(RVA = "0xECD378", Offset = "0xECD378", VA = "0xECD378")]
		[IteratorStateMachine(typeof(<EnableFuckingDiedScreen>d__25))]
		private IEnumerator EnableFuckingDiedScreen()
		{
			return null;
		}

		[Token(Token = "0x6002EA7")]
		[Address(RVA = "0xECD408", Offset = "0xECD408", VA = "0xECD408")]
		private void Update()
		{
		}

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0xECDEE4", Offset = "0xECDEE4", VA = "0xECDEE4")]
		private void BledOut()
		{
		}

		[Token(Token = "0x6002EA9")]
		[Address(RVA = "0xECDF68", Offset = "0xECDF68", VA = "0xECDF68")]
		public ZSelfRevive()
		{
		}
	}
	[Token(Token = "0x20007B1")]
	public class EnhancementFX : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007B2")]
		private class ____EnhancementFX
		{
			[Token(Token = "0x4003D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BulletType bulletType;

			[Token(Token = "0x4003D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject wrap;

			[Token(Token = "0x4003D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Space]
			[SerializeField]
			private Texture2D flameTexture;

			[Token(Token = "0x4003D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Material material;

			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0xECE660", Offset = "0xECE660", VA = "0xECE660")]
			public void UpdateMaterialTexture()
			{
			}

			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xECE7B0", Offset = "0xECE7B0", VA = "0xECE7B0")]
			public ____EnhancementFX()
			{
			}
		}

		[Token(Token = "0x4003D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ____EnhancementFX[] effects;

		[Token(Token = "0x4003D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<BulletType, ____EnhancementFX> fxDictionary;

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0xECE51C", Offset = "0xECE51C", VA = "0xECE51C")]
		public void EnableFX(BulletType bulletType)
		{
		}

		[Token(Token = "0x6002EB1")]
		[Address(RVA = "0xECE54C", Offset = "0xECE54C", VA = "0xECE54C")]
		private ____EnhancementFX FX(BulletType bulletType)
		{
			return null;
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0xECE73C", Offset = "0xECE73C", VA = "0xECE73C")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0xECE7A8", Offset = "0xECE7A8", VA = "0xECE7A8")]
		public EnhancementFX()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	public class EnhancementFXSoundManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4003D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float pitch;

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0xECE7B8", Offset = "0xECE7B8", VA = "0xECE7B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002EB7")]
		[Address(RVA = "0xECE7F4", Offset = "0xECE7F4", VA = "0xECE7F4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0xECE944", Offset = "0xECE944", VA = "0xECE944")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002EB9")]
		[Address(RVA = "0xECE910", Offset = "0xECE910", VA = "0xECE910")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0xECE948", Offset = "0xECE948", VA = "0xECE948")]
		public EnhancementFXSoundManager()
		{
		}
	}
	[Token(Token = "0x20007B4")]
	public class ZShopOverlayAnimator : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4003D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZombieShopManager shopManager;

		[Token(Token = "0x4003D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image image;

		[Token(Token = "0x4003D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite[] sprites;

		[Token(Token = "0x6002EBC")]
		[Address(RVA = "0xECE96C", Offset = "0xECE96C", VA = "0xECE96C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002EBD")]
		[Address(RVA = "0xECE990", Offset = "0xECE990", VA = "0xECE990", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002EBE")]
		[Address(RVA = "0xECE9AC", Offset = "0xECE9AC", VA = "0xECE9AC")]
		public ZShopOverlayAnimator()
		{
		}
	}
	[Token(Token = "0x20007B5")]
	public abstract class DarkZShopItem : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4003D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool itemOfOptionsCanvas;

		[Token(Token = "0x4003D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LanguageText fullLT;

		[Token(Token = "0x4003D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Cost")]
		[SerializeField]
		private int baseCost;

		[Token(Token = "0x4003D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool increaseWithRounds;

		[Token(Token = "0x4003D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int cost;

		[Token(Token = "0x4003D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ZombieShopManager manager;

		[Token(Token = "0x4003D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI costText;

		[Token(Token = "0x4003D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Button button;

		[Token(Token = "0x4003D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected ZShopTooltip tooltip;

		[Token(Token = "0x4003D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Check if the item is part of the option pop-up panel and it's wrapped along with other items")]
		public bool wrapped;

		[Token(Token = "0x4003D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float lastPlayedAt;

		[Token(Token = "0x6002EBF")]
		[Address(RVA = "0xECE9B4", Offset = "0xECE9B4", VA = "0xECE9B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0xECEAAC", Offset = "0xECEAAC", VA = "0xECEAAC")]
		protected void EnableButton(bool value)
		{
		}

		[Token(Token = "0x6002EC1")]
		[Address(RVA = "0xECEBE8", Offset = "0xECEBE8", VA = "0xECEBE8", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002EC2")]
		[Address(RVA = "0xECEDA8", Offset = "0xECEDA8", VA = "0xECEDA8", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002EC3")]
		[Address(RVA = "0xECEC08", Offset = "0xECEC08", VA = "0xECEC08")]
		protected void UpdateCost()
		{
		}

		[Token(Token = "0x6002EC4")]
		[Address(RVA = "0xECEDAC", Offset = "0xECEDAC", VA = "0xECEDAC", Slot = "7")]
		public virtual void Checker()
		{
		}

		[Token(Token = "0x6002EC5")]
		[Address(RVA = "0xECEDB0", Offset = "0xECEDB0", VA = "0xECEDB0")]
		public void UpdateDynamicTooltip()
		{
		}

		[Token(Token = "0x6002EC6")]
		public abstract void GetItem();

		[Token(Token = "0x6002EC7")]
		[Address(RVA = "0xECEEB4", Offset = "0xECEEB4", VA = "0xECEEB4")]
		public void Buy()
		{
		}

		[Token(Token = "0x6002EC8")]
		[Address(RVA = "0xECEF08", Offset = "0xECEF08", VA = "0xECEF08", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002EC9")]
		[Address(RVA = "0xECEF78", Offset = "0xECEF78", VA = "0xECEF78")]
		protected DarkZShopItem()
		{
		}
	}
	[Token(Token = "0x20007B6")]
	public class ZShopAmmo : DarkZShopItem
	{
		[Token(Token = "0x4003D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI weaponNameLabel;

		[Token(Token = "0x4003D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI currentAmmoLabel;

		[Token(Token = "0x4003D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI currentAmmoDualLabel;

		[Token(Token = "0x4003D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public WeaponStatsList weaponList;

		[Token(Token = "0x4003D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CanvasGroup cg;

		[Token(Token = "0x4003D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool interactable;

		[Token(Token = "0x4003D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private byte needAmmo;

		[Token(Token = "0x4003D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool pNeedAmmo;

		[Token(Token = "0x4003D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		private bool sNeedAmmo;

		[Token(Token = "0x4003D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WeaponBehavior darkSecondaryWeapon;

		[Token(Token = "0x17000511")]
		private WeaponBehavior darkWeapon
		{
			[Token(Token = "0x6002ECB")]
			[Address(RVA = "0xECEFA0", Offset = "0xECEFA0", VA = "0xECEFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0xECF040", Offset = "0xECF040", VA = "0xECF040", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6002ECD")]
		[Address(RVA = "0xECF130", Offset = "0xECF130", VA = "0xECF130", Slot = "6")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0xECF208", Offset = "0xECF208", VA = "0xECF208", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0xECF268", Offset = "0xECF268", VA = "0xECF268")]
		private bool GetAmmo(WeaponBehavior wb)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0xECF610", Offset = "0xECF610", VA = "0xECF610")]
		public void UpdateLabels()
		{
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0xECF44C", Offset = "0xECF44C", VA = "0xECF44C")]
		private void UpdateAmmoText()
		{
		}

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0xECF6B4", Offset = "0xECF6B4", VA = "0xECF6B4", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0xECFBFC", Offset = "0xECFBFC", VA = "0xECFBFC")]
		private bool CheckIfInteractable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED4")]
		[Address(RVA = "0xECFCC8", Offset = "0xECFCC8", VA = "0xECFCC8")]
		public ZShopAmmo()
		{
		}
	}
	[Token(Token = "0x20007B7")]
	public class ZShopArmor : DarkZShopItem
	{
		[Token(Token = "0x4003D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Armor")]
		public int armorAmount;

		[Token(Token = "0x4003D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image fill;

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0xECFCD0", Offset = "0xECFCD0", VA = "0xECFCD0", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0xECFD9C", Offset = "0xECFD9C", VA = "0xECFD9C", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0xECFD58", Offset = "0xECFD58", VA = "0xECFD58")]
		private void UpdateFill()
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0xECFE58", Offset = "0xECFE58", VA = "0xECFE58")]
		public ZShopArmor()
		{
		}
	}
	[Token(Token = "0x20007B8")]
	public class ZShopGrenade : DarkZShopItem
	{
		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0xECFE60", Offset = "0xECFE60", VA = "0xECFE60", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002EDA")]
		[Address(RVA = "0xECFEC8", Offset = "0xECFEC8", VA = "0xECFEC8")]
		private bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0xECFF14", Offset = "0xECFF14", VA = "0xECFF14", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0xED0070", Offset = "0xED0070", VA = "0xED0070")]
		public ZShopGrenade()
		{
		}
	}
	[Token(Token = "0x20007B9")]
	public class ZShopHealth : DarkZShopItem
	{
		[Token(Token = "0x4003D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Health")]
		public int chunks;

		[Token(Token = "0x4003D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image fill;

		[Token(Token = "0x17000512")]
		private PlayerData localPlayer
		{
			[Token(Token = "0x6002EDD")]
			[Address(RVA = "0xED0078", Offset = "0xED0078", VA = "0xED0078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000513")]
		private float hitpoints
		{
			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0xED00A0", Offset = "0xED00A0", VA = "0xED00A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002EDF")]
		[Address(RVA = "0xED00EC", Offset = "0xED00EC", VA = "0xED00EC", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0xED01BC", Offset = "0xED01BC", VA = "0xED01BC", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0xED017C", Offset = "0xED017C", VA = "0xED017C")]
		private void UpdateFill()
		{
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0xED0270", Offset = "0xED0270", VA = "0xED0270")]
		public ZShopHealth()
		{
		}
	}
	[Token(Token = "0x20007BA")]
	public class ZShopKnives : DarkZShopItem
	{
		[Token(Token = "0x4003D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WFilter m_Knifes;

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0xED0280", Offset = "0xED0280", VA = "0xED0280", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0xED0454", Offset = "0xED0454", VA = "0xED0454", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0xED05EC", Offset = "0xED05EC", VA = "0xED05EC")]
		public ZShopKnives()
		{
		}
	}
	[Token(Token = "0x20007BB")]
	public class ZShopKnivesFiller : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZShopOptionFiller m_Filler;

		[Token(Token = "0x4003D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZombieShopManager m_Manager;

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0xED05F4", Offset = "0xED05F4", VA = "0xED05F4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0xED064C", Offset = "0xED064C", VA = "0xED064C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0xED06B8", Offset = "0xED06B8", VA = "0xED06B8")]
		public ZShopKnivesFiller()
		{
		}
	}
	[Token(Token = "0x20007BC")]
	[AddComponentMenu("Zombies/Shop/ZShopAttachments")]
	public class ZShopLaser : DarkZShopItem
	{
		[Token(Token = "0x4003D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public byte attachmentIndex;

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0xED06C0", Offset = "0xED06C0", VA = "0xED06C0", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0xED0900", Offset = "0xED0900", VA = "0xED0900", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0xED0B20", Offset = "0xED0B20", VA = "0xED0B20")]
		public ZShopLaser()
		{
		}
	}
	[Token(Token = "0x20007BD")]
	public class ZShopPerk : DarkZShopItem
	{
		[Token(Token = "0x4003D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Perk")]
		public PerkID perk;

		[Token(Token = "0x4003D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Sprite overrideFillerEnablerWith;

		[Token(Token = "0x4003D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("For perks different than None")]
		public Image lockedImage;

		[Token(Token = "0x4003D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color alreadyOwnedInAnotherSlotDisabledColor;

		[Token(Token = "0x4003D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color alreadyOwnedInThisSlotDisabledColor;

		[Token(Token = "0x4003D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Language Texts")]
		public LanguageText inThisSlotLT;

		[Token(Token = "0x4003D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LanguageText inSlot1LT;

		[Token(Token = "0x4003D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public LanguageText inslot2LT;

		[Token(Token = "0x17000514")]
		public PlayerPerks playerPerks
		{
			[Token(Token = "0x6002EEC")]
			[Address(RVA = "0xED0B30", Offset = "0xED0B30", VA = "0xED0B30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0xED0B60", Offset = "0xED0B60", VA = "0xED0B60", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0xED0D38", Offset = "0xED0D38", VA = "0xED0D38", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0xED11A8", Offset = "0xED11A8", VA = "0xED11A8")]
		public ZShopPerk()
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public class ZShopScope : DarkZShopItem
	{
		[Token(Token = "0x4003D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Scope")]
		public byte scopeId;

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0xED11B0", Offset = "0xED11B0", VA = "0xED11B0", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0xED13F0", Offset = "0xED13F0", VA = "0xED13F0", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0xED1610", Offset = "0xED1610", VA = "0xED1610")]
		public ZShopScope()
		{
		}
	}
	[Token(Token = "0x20007BF")]
	public class ZShopSelfRevive : DarkZShopItem
	{
		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0xED1618", Offset = "0xED1618", VA = "0xED1618", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0xED1660", Offset = "0xED1660", VA = "0xED1660", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0xED1718", Offset = "0xED1718", VA = "0xED1718")]
		public ZShopSelfRevive()
		{
		}
	}
	[Token(Token = "0x20007C0")]
	public class ZShopSpecialBullets : DarkZShopItem
	{
		[Token(Token = "0x4003D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BulletType bulletType;

		[Token(Token = "0x4003D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Z_SFX equipSfx;

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0xED1720", Offset = "0xED1720", VA = "0xED1720", Slot = "8")]
		public override void GetItem()
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0xED1A38", Offset = "0xED1A38", VA = "0xED1A38", Slot = "7")]
		public override void Checker()
		{
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0xED1D08", Offset = "0xED1D08", VA = "0xED1D08")]
		public ZShopSpecialBullets()
		{
		}
	}
	[Token(Token = "0x20007C1")]
	public class ZShopOptionFiller : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerClickHandler
	{
		[Token(Token = "0x4003D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageText headerLT;

		[Token(Token = "0x4003D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Optional")]
		public Image overlay;

		[Token(Token = "0x4003D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI selectText;

		[Token(Token = "0x4003D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space]
		public DarkZShopItem[] fillWithItems;

		[Token(Token = "0x4003D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space]
		[SerializeField]
		private ZombieShopManager manager;

		[Token(Token = "0x4003D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Optional (Used for perks only)")]
		public bool perkPrimary;

		[Token(Token = "0x4003D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int unlockWhilePreparingRound;

		[Token(Token = "0x4003D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_LockIfDualIsNotAllowed;

		[Token(Token = "0x4003D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Sprite lockedSprite;

		[Token(Token = "0x4003D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite emptySprite;

		[Token(Token = "0x4003D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Button button;

		[Token(Token = "0x4003D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastPlayedAt;

		[Token(Token = "0x17000515")]
		[HideInInspector]
		public string header
		{
			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0xED1D18", Offset = "0xED1D18", VA = "0xED1D18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0xED1D34", Offset = "0xED1D34", VA = "0xED1D34")]
		[ContextMenu("Copy fillWith to fillWithItem")]
		public void ____EDITOR_COPYARRAY_TMP()
		{
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0xED1D38", Offset = "0xED1D38", VA = "0xED1D38")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002EFC")]
		[Address(RVA = "0xED1D54", Offset = "0xED1D54", VA = "0xED1D54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0xED1E20", Offset = "0xED1E20", VA = "0xED1E20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0xED2098", Offset = "0xED2098", VA = "0xED2098", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0xED2108", Offset = "0xED2108", VA = "0xED2108", Slot = "5")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0xED218C", Offset = "0xED218C", VA = "0xED218C")]
		public ZShopOptionFiller()
		{
		}
	}
	[Token(Token = "0x20007C2")]
	public class ZShopTimer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Round x starting in y")]
		public TextMeshProUGUI roundText;

		[Token(Token = "0x4003D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI timerText;

		[Token(Token = "0x4003D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Round x completed")]
		public TextMeshProUGUI roundxCompletedText;

		[Token(Token = "0x4003D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastReadSeconds;

		[Token(Token = "0x4003D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NewZombieModeManager manager;

		[Token(Token = "0x4003D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("LT")]
		public LanguageText roundCompletedLT;

		[Token(Token = "0x4003D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LanguageText roundStartInLT;

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0xED21C0", Offset = "0xED21C0", VA = "0xED21C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0xED2228", Offset = "0xED2228", VA = "0xED2228")]
		private void Update()
		{
		}

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0xED25FC", Offset = "0xED25FC", VA = "0xED25FC")]
		public ZShopTimer()
		{
		}
	}
	[Token(Token = "0x20007C3")]
	public class ZShopTooltip : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4003D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZShopTooltipManager manager;

		[Token(Token = "0x4003D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool minimalist;

		[Token(Token = "0x4003D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LanguageText headerLT;

		[Token(Token = "0x4003D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LanguageText descriptionLT;

		[Token(Token = "0x4003D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool bindHeaderToDescription;

		[Token(Token = "0x4003D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string bindTo;

		[Token(Token = "0x4003D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string dynamicDescription;

		[Token(Token = "0x4003D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Sprite background;

		[Token(Token = "0x4003D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Execute an event to set the description")]
		public ZToolTipEvent descriptionEvent;

		[Token(Token = "0x17000516")]
		public string header
		{
			[Token(Token = "0x6002F05")]
			[Address(RVA = "0xED260C", Offset = "0xED260C", VA = "0xED260C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000517")]
		public string description
		{
			[Token(Token = "0x6002F06")]
			[Address(RVA = "0xED2628", Offset = "0xED2628", VA = "0xED2628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F07")]
		[Address(RVA = "0xED2644", Offset = "0xED2644", VA = "0xED2644", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0xED2840", Offset = "0xED2840", VA = "0xED2840", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0xED28A8", Offset = "0xED28A8", VA = "0xED28A8")]
		public ZShopTooltip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007C4")]
	public class ZToolTipEvent : UnityEvent<ZShopTooltip>
	{
		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0xED28B0", Offset = "0xED28B0", VA = "0xED28B0")]
		public ZToolTipEvent()
		{
		}
	}
	[Token(Token = "0x20007C5")]
	public class ZShopTooltipManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_tooltip;

		[Token(Token = "0x4003D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_tooltipMinimalist;

		[Token(Token = "0x4003D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Components")]
		[SerializeField]
		private Image background;

		[Token(Token = "0x4003D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI header;

		[Token(Token = "0x4003D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI description;

		[Token(Token = "0x4003D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Minimalist Components")]
		private TextMeshProUGUI minimalistHeader;

		[Token(Token = "0x4003D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI minimalistDescription;

		[Token(Token = "0x4003D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Header("LT")]
		private LanguageText currentLT;

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0xED2660", Offset = "0xED2660", VA = "0xED2660")]
		public void Enable(ZShopTooltip tooltipData)
		{
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0xED2858", Offset = "0xED2858", VA = "0xED2858")]
		public void Disable()
		{
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0xECEE3C", Offset = "0xECEE3C", VA = "0xECEE3C")]
		public void RefreshTooltipDescription(ZShopTooltip tooltipData)
		{
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0xED28F8", Offset = "0xED28F8", VA = "0xED28F8")]
		public void GetCurrentGrenades(ZShopTooltip tooltipToModify)
		{
		}

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0xED29D8", Offset = "0xED29D8", VA = "0xED29D8")]
		public ZShopTooltipManager()
		{
		}
	}
	[Token(Token = "0x20007C6")]
	public class ZombieNetShopManager : PunBehaviour
	{
		[Token(Token = "0x20007C7")]
		[CompilerGenerated]
		private sealed class <IEChangeCurrent>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte objectiveSpawnIndex;

			[Token(Token = "0x4003D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ZombieNetShopManager <>4__this;

			[Token(Token = "0x17000519")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F1A")]
				[Address(RVA = "0xED2EA8", Offset = "0xED2EA8", VA = "0xED2EA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F1C")]
				[Address(RVA = "0xED2EF0", Offset = "0xED2EF0", VA = "0xED2EF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F17")]
			[Address(RVA = "0xED2B28", Offset = "0xED2B28", VA = "0xED2B28")]
			[DebuggerHidden]
			public <IEChangeCurrent>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002F18")]
			[Address(RVA = "0xED2CA0", Offset = "0xED2CA0", VA = "0xED2CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F19")]
			[Address(RVA = "0xED2CA4", Offset = "0xED2CA4", VA = "0xED2CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F1B")]
			[Address(RVA = "0xED2EB0", Offset = "0xED2EB0", VA = "0xED2EB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform defaultShopLocation;

		[Token(Token = "0x4003D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform defaultShopCarouselLocation;

		[Token(Token = "0x4003D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Objects")]
		[SerializeField]
		private Transform trigger;

		[Token(Token = "0x4003D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform carousel;

		[Token(Token = "0x4003D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _currentShopLocation;

		[Token(Token = "0x4003D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Transform currentShopCarouselLocation;

		[Token(Token = "0x17000518")]
		[HideInInspector]
		public Vector3 currentShopLocation
		{
			[Token(Token = "0x6002F11")]
			[Address(RVA = "0xED2A84", Offset = "0xED2A84", VA = "0xED2A84")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002F10")]
			[Address(RVA = "0xED29E0", Offset = "0xED29E0", VA = "0xED29E0")]
			set
			{
			}
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0xED2A90", Offset = "0xED2A90", VA = "0xED2A90")]
		[PunRPC]
		public void ChangeCurrent(byte objectiveSpawnIndex)
		{
		}

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0xED2AB0", Offset = "0xED2AB0", VA = "0xED2AB0")]
		[IteratorStateMachine(typeof(<IEChangeCurrent>d__10))]
		private IEnumerator IEChangeCurrent(byte objectiveSpawnIndex)
		{
			return null;
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0xED2B50", Offset = "0xED2B50", VA = "0xED2B50")]
		public void SetDefault()
		{
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0xED2B88", Offset = "0xED2B88", VA = "0xED2B88")]
		public void UpdateLocation()
		{
		}

		[Token(Token = "0x6002F16")]
		[Address(RVA = "0xED2C98", Offset = "0xED2C98", VA = "0xED2C98")]
		public ZombieNetShopManager()
		{
		}
	}
	[Token(Token = "0x20007C8")]
	[CreateAssetMenu(fileName = "Data", menuName = "Alvo/Zombies/Killstreak gun references", order = 1)]
	public class ZShopRefKillstreakGun : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20007C9")]
		public class GunInfo
		{
			[Token(Token = "0x4003D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_WeaponNumber;

			[Token(Token = "0x4003D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_WeaponName;

			[Token(Token = "0x6002F20")]
			[Address(RVA = "0xED3064", Offset = "0xED3064", VA = "0xED3064")]
			public GunInfo()
			{
			}
		}

		[Token(Token = "0x4003D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GunInfo[] guns;

		[Token(Token = "0x4003D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, GunInfo> dictionary;

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0xED2EF8", Offset = "0xED2EF8", VA = "0xED2EF8")]
		public GunInfo GetKillstreakGun(int weaponNumber)
		{
			return null;
		}

		[Token(Token = "0x6002F1E")]
		[Address(RVA = "0xED2F70", Offset = "0xED2F70", VA = "0xED2F70")]
		private void SetupDictionary()
		{
		}

		[Token(Token = "0x6002F1F")]
		[Address(RVA = "0xED305C", Offset = "0xED305C", VA = "0xED305C")]
		public ZShopRefKillstreakGun()
		{
		}
	}
	[Token(Token = "0x20007CA")]
	public static class BulletTypeEXT
	{
		[Token(Token = "0x6002F21")]
		[Address(RVA = "0xED306C", Offset = "0xED306C", VA = "0xED306C")]
		public static bool IsEnhancementFX(this BulletType bulletType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007CB")]
	public enum BulletType
	{
		[Token(Token = "0x4003D99")]
		Null = -2,
		[Token(Token = "0x4003D9A")]
		None = -1,
		[Token(Token = "0x4003D9B")]
		Projectile = 0,
		[Token(Token = "0x4003D9C")]
		Tank = 1,
		[Token(Token = "0x4003D9D")]
		Explosive = 2,
		[Token(Token = "0x4003D9E")]
		Speed = 3,
		[Token(Token = "0x4003D9F")]
		FlamingRed = 20,
		[Token(Token = "0x4003DA0")]
		FlamingPurple = 21,
		[Token(Token = "0x4003DA1")]
		FlamingBlue = 22,
		[Token(Token = "0x4003DA2")]
		FlamingSkyBlue = 23
	}
	[Token(Token = "0x20007CC")]
	public class ZombieSpecialBullet
	{
		[Token(Token = "0x4003DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InventoryManager ___Inventory;

		[Token(Token = "0x1700051B")]
		private InventoryManager m_Inventory
		{
			[Token(Token = "0x6002F22")]
			[Address(RVA = "0xED307C", Offset = "0xED307C", VA = "0xED307C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0xED1890", Offset = "0xED1890", VA = "0xED1890")]
		public void GetBulletForGun(BulletType desiredBulletType, int gunIndex)
		{
		}

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0xED3118", Offset = "0xED3118", VA = "0xED3118")]
		public void CheckIfWeaponHasBullet(int gunIndex, bool primary)
		{
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0xED1CAC", Offset = "0xED1CAC", VA = "0xED1CAC")]
		public bool CompareBullet(int weaponId, BulletType bulletType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0xED33C4", Offset = "0xED33C4", VA = "0xED33C4")]
		public bool IsPlayerBulletZombieWeakness(BulletType[] zombieWeakness, int weaponNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0xED34EC", Offset = "0xED34EC", VA = "0xED34EC")]
		public ZombieSpecialBullet()
		{
		}
	}
	[Token(Token = "0x20007CD")]
	public abstract class WallShop : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("ShopReferences")]
		public TMP_Text m_prompt;

		[Token(Token = "0x4003DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_interactionDistance;

		[Token(Token = "0x4003DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ZombieShopManager zShop;

		[Token(Token = "0x4003DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected InventoryManager inventory;

		[Token(Token = "0x4003DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected LevelManager levelManager;

		[Token(Token = "0x4003DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected PlayerManager playerManager;

		[Token(Token = "0x4003DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected PlayerWeapons fpsWeapons;

		[Token(Token = "0x4003DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected InputControl inputController;

		[Token(Token = "0x4003DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool enteredRange;

		[Token(Token = "0x4003DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected NewZombieModeManager modeManager;

		[Token(Token = "0x4003DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int darkCost;

		[Token(Token = "0x4003DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected bool canInteract;

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0xED34F4", Offset = "0xED34F4", VA = "0xED34F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F29")]
		[Address(RVA = "0xED35EC", Offset = "0xED35EC", VA = "0xED35EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0xED36A4", Offset = "0xED36A4", VA = "0xED36A4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002F2B")]
		[Address(RVA = "0xED37C8", Offset = "0xED37C8", VA = "0xED37C8")]
		protected void RefreshCost(int baseCost)
		{
		}

		[Token(Token = "0x6002F2C")]
		[Address(RVA = "0xED3824", Offset = "0xED3824", VA = "0xED3824")]
		protected void CheckPromptForLH()
		{
		}

		[Token(Token = "0x6002F2D")]
		[Address(RVA = "0xED3998", Offset = "0xED3998", VA = "0xED3998", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0xED3AF8", Offset = "0xED3AF8", VA = "0xED3AF8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002F2F")]
		[Address(RVA = "0xED3C58", Offset = "0xED3C58", VA = "0xED3C58", Slot = "6")]
		protected virtual void CheckCompatibility(int index, bool recenterEvent)
		{
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0xED3C5C", Offset = "0xED3C5C", VA = "0xED3C5C")]
		private void TryInteract()
		{
		}

		[Token(Token = "0x6002F31")]
		public abstract void UpdatePrompt();

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0xED3F40", Offset = "0xED3F40", VA = "0xED3F40")]
		protected void DoUpdatePrompt(int round)
		{
		}

		[Token(Token = "0x6002F33")]
		[Address(RVA = "0xED3638", Offset = "0xED3638", VA = "0xED3638")]
		private void OnEnterRange()
		{
		}

		[Token(Token = "0x6002F34")]
		[Address(RVA = "0xED36F0", Offset = "0xED36F0", VA = "0xED36F0")]
		private void OnExitRange()
		{
		}

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0xED3CCC", Offset = "0xED3CCC", VA = "0xED3CCC")]
		private void Interact()
		{
		}

		[Token(Token = "0x6002F36")]
		protected abstract void Buy();

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0xED3F4C", Offset = "0xED3F4C", VA = "0xED3F4C")]
		protected WallShop()
		{
		}
	}
	[Token(Token = "0x20007CE")]
	public class WallshopGrenade : WallShop
	{
		[Token(Token = "0x4003DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LanguageText grenadeNameLT;

		[Token(Token = "0x4003DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LanguageText fullGrenadesLT;

		[Token(Token = "0x4003DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LanguageText buyPromptGrenadeLT;

		[Token(Token = "0x4003DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool suscribed;

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0xED3F80", Offset = "0xED3F80", VA = "0xED3F80", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002F3A")]
		[Address(RVA = "0xED4108", Offset = "0xED4108", VA = "0xED4108", Slot = "7")]
		public override void UpdatePrompt()
		{
		}

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0xED43EC", Offset = "0xED43EC", VA = "0xED43EC", Slot = "8")]
		protected override void Buy()
		{
		}

		[Token(Token = "0x6002F3C")]
		[Address(RVA = "0xED4424", Offset = "0xED4424", VA = "0xED4424")]
		public WallshopGrenade()
		{
		}
	}
	[Token(Token = "0x20007CF")]
	public class WallshopGun : WallShop
	{
		[Token(Token = "0x4003DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("WeaponInfo")]
		public int m_weaponId;

		[Token(Token = "0x4003DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool dualWield;

		[Token(Token = "0x4003DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("LanguageTexts")]
		public LanguageText purchasePromptLT;

		[Token(Token = "0x4003DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LanguageText buyAmmoPromptLT;

		[Token(Token = "0x4003DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public LanguageText fullAmmoLT;

		[Token(Token = "0x4003DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LanguageText swapLT;

		[Token(Token = "0x4003DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool darkOwned;

		[Token(Token = "0x4003DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private WeaponBehavior inspectedWeapon;

		[Token(Token = "0x4003DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WeaponBehavior leftHandWb;

		[Token(Token = "0x4003DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool suscribed;

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0xED442C", Offset = "0xED442C", VA = "0xED442C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0xED46A4", Offset = "0xED46A4", VA = "0xED46A4", Slot = "6")]
		protected override void CheckCompatibility(int index, bool recenterEvent)
		{
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0xED4798", Offset = "0xED4798", VA = "0xED4798")]
		private void SetNotCompatible()
		{
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0xED485C", Offset = "0xED485C", VA = "0xED485C", Slot = "7")]
		public override void UpdatePrompt()
		{
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0xED5214", Offset = "0xED5214", VA = "0xED5214", Slot = "8")]
		protected override void Buy()
		{
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0xED5594", Offset = "0xED5594", VA = "0xED5594")]
		private void BuyAndEquip(bool replacePrimary)
		{
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0xED5958", Offset = "0xED5958", VA = "0xED5958")]
		private WeaponBehavior LHWb()
		{
			return null;
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0xED4E48", Offset = "0xED4E48", VA = "0xED4E48")]
		private bool CheckForAmmo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0xED59C0", Offset = "0xED59C0", VA = "0xED59C0")]
		private void TryCheckForAmmo()
		{
		}

		[Token(Token = "0x6002F46")]
		[Address(RVA = "0xED5A90", Offset = "0xED5A90", VA = "0xED5A90")]
		public WallshopGun()
		{
		}
	}
	[Token(Token = "0x20007D0")]
	public class WallshopKillstreakGun : WallShop
	{
		[Token(Token = "0x4003DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public KillStreakManager.Streak killStreak;

		[Token(Token = "0x4003DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int m_GunId;

		[Token(Token = "0x4003DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool buyAmmo;

		[Token(Token = "0x6002F47")]
		[Address(RVA = "0xED5A98", Offset = "0xED5A98", VA = "0xED5A98", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002F48")]
		[Address(RVA = "0xED5BF8", Offset = "0xED5BF8", VA = "0xED5BF8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0xED5D9C", Offset = "0xED5D9C", VA = "0xED5D9C", Slot = "7")]
		public override void UpdatePrompt()
		{
		}

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0xED5FC0", Offset = "0xED5FC0", VA = "0xED5FC0", Slot = "8")]
		protected override void Buy()
		{
		}

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0xED6330", Offset = "0xED6330", VA = "0xED6330")]
		public WallshopKillstreakGun()
		{
		}
	}
	[Token(Token = "0x20007D1")]
	public class EnableInZombies : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_target;

		[Token(Token = "0x4003DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_deleteIfDisable;

		[Token(Token = "0x6002F4C")]
		[Address(RVA = "0xED6338", Offset = "0xED6338", VA = "0xED6338")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0xED6458", Offset = "0xED6458", VA = "0xED6458")]
		public EnableInZombies()
		{
		}
	}
	[Token(Token = "0x20007D2")]
	public class PersistentAoEDamage : PunBehaviour, IDOTDamager
	{
		[Token(Token = "0x20007D3")]
		[CompilerGenerated]
		private sealed class <DoSelfDestroy>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PersistentAoEDamage <>4__this;

			[Token(Token = "0x1700051D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F5E")]
				[Address(RVA = "0xED6C64", Offset = "0xED6C64", VA = "0xED6C64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F60")]
				[Address(RVA = "0xED6CAC", Offset = "0xED6CAC", VA = "0xED6CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F5B")]
			[Address(RVA = "0xED6918", Offset = "0xED6918", VA = "0xED6918")]
			[DebuggerHidden]
			public <DoSelfDestroy>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002F5C")]
			[Address(RVA = "0xED6BB0", Offset = "0xED6BB0", VA = "0xED6BB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F5D")]
			[Address(RVA = "0xED6BB4", Offset = "0xED6BB4", VA = "0xED6BB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F5F")]
			[Address(RVA = "0xED6C6C", Offset = "0xED6C6C", VA = "0xED6C6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_range;

		[Token(Token = "0x4003DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_damage;

		[Token(Token = "0x4003DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_damageDelay;

		[Token(Token = "0x4003DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource loopAS;

		[Token(Token = "0x4003DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerManager playerManager;

		[Token(Token = "0x4003DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastTickTime;

		[Token(Token = "0x4003DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds wait;

		[Token(Token = "0x1700051C")]
		private PlayerManager PlayerManager
		{
			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0xED6460", Offset = "0xED6460", VA = "0xED6460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0xED64E8", Offset = "0xED64E8", VA = "0xED64E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002F50")]
		[Address(RVA = "0xED6694", Offset = "0xED6694", VA = "0xED6694")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0xED67E8", Offset = "0xED67E8", VA = "0xED67E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F52")]
		[Address(RVA = "0xED6810", Offset = "0xED6810", VA = "0xED6810", Slot = "44")]
		public override void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0xED68B0", Offset = "0xED68B0", VA = "0xED68B0")]
		[IteratorStateMachine(typeof(<DoSelfDestroy>d__13))]
		private IEnumerator DoSelfDestroy()
		{
			return null;
		}

		[Token(Token = "0x6002F54")]
		[Address(RVA = "0xED6940", Offset = "0xED6940", VA = "0xED6940")]
		private void SelfDestroy()
		{
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0xED69E0", Offset = "0xED69E0", VA = "0xED69E0", Slot = "62")]
		public bool IsTickReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F56")]
		[Address(RVA = "0xED6AF8", Offset = "0xED6AF8", VA = "0xED6AF8", Slot = "63")]
		public int GetDamage()
		{
			return default(int);
		}

		[Token(Token = "0x6002F57")]
		[Address(RVA = "0xED6B00", Offset = "0xED6B00", VA = "0xED6B00", Slot = "64")]
		public void OnTickDone()
		{
		}

		[Token(Token = "0x6002F58")]
		[Address(RVA = "0xED6B1C", Offset = "0xED6B1C", VA = "0xED6B1C", Slot = "65")]
		public short GetWFilter()
		{
			return default(short);
		}

		[Token(Token = "0x6002F59")]
		[Address(RVA = "0xED6B24", Offset = "0xED6B24", VA = "0xED6B24", Slot = "66")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F5A")]
		[Address(RVA = "0xED6B44", Offset = "0xED6B44", VA = "0xED6B44")]
		public PersistentAoEDamage()
		{
		}
	}
	[Token(Token = "0x20007D4")]
	public class ZombieProjectile : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20007D5")]
		[CompilerGenerated]
		private sealed class <SelfDespawn>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ZombieProjectile <>4__this;

			[Token(Token = "0x1700051F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F6A")]
				[Address(RVA = "0xED7798", Offset = "0xED7798", VA = "0xED7798", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000520")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F6C")]
				[Address(RVA = "0xED77E0", Offset = "0xED77E0", VA = "0xED77E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F67")]
			[Address(RVA = "0xED75D4", Offset = "0xED75D4", VA = "0xED75D4")]
			[DebuggerHidden]
			public <SelfDespawn>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002F68")]
			[Address(RVA = "0xED7604", Offset = "0xED7604", VA = "0xED7604", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F69")]
			[Address(RVA = "0xED7608", Offset = "0xED7608", VA = "0xED7608", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F6B")]
			[Address(RVA = "0xED77A0", Offset = "0xED77A0", VA = "0xED77A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody rig;

		[Token(Token = "0x4003DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider col;

		[Token(Token = "0x4003DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_destroyTime;

		[Token(Token = "0x4003DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem m_trailPtr;

		[Token(Token = "0x4003DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem m_impactPtr;

		[Token(Token = "0x4003DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int dmg;

		[Token(Token = "0x4003DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer rend;

		[Token(Token = "0x4003DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LevelManager m_levelManager;

		[Token(Token = "0x4003DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(0f, 1f)]
		public float trailVolume;

		[Token(Token = "0x4003DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0f, 1f)]
		public float castVolume;

		[Token(Token = "0x4003DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 1f)]
		public float impactVolume;

		[Token(Token = "0x4003DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource trailSfxAS;

		[Token(Token = "0x4003DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioSource wooshNImpactAS;

		[Token(Token = "0x4003DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip[] impactClips;

		[Token(Token = "0x4003DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip[] castClips;

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0xED6CB4", Offset = "0xED6CB4", VA = "0xED6CB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F62")]
		[Address(RVA = "0xED6CDC", Offset = "0xED6CDC", VA = "0xED6CDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0xED6EEC", Offset = "0xED6EEC", VA = "0xED6EEC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0xED74D0", Offset = "0xED74D0", VA = "0xED74D0")]
		public void SetVelocity(Vector3 _dir, float _vel)
		{
		}

		[Token(Token = "0x6002F65")]
		[Address(RVA = "0xED7468", Offset = "0xED7468", VA = "0xED7468")]
		[IteratorStateMachine(typeof(<SelfDespawn>d__19))]
		private IEnumerator SelfDespawn()
		{
			return null;
		}

		[Token(Token = "0x6002F66")]
		[Address(RVA = "0xED75FC", Offset = "0xED75FC", VA = "0xED75FC")]
		public ZombieProjectile()
		{
		}
	}
	[Token(Token = "0x20007D6")]
	public class AreaBlockade : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int unlockCost;

		[Token(Token = "0x4003DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZombiesAreas[] linkedAreas;

		[Token(Token = "0x4003DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject blockadeProps;

		[Token(Token = "0x4003DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject blockadeCanvas;

		[Token(Token = "0x4003DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public UnlockableAreasManager areasManager;

		[Token(Token = "0x4003DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int blockadeKey;

		[Token(Token = "0x4003DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InventoryManager inventory;

		[Token(Token = "0x4003DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool enteredRange;

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0xED77E8", Offset = "0xED77E8", VA = "0xED77E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002F6E")]
		[Address(RVA = "0xED78E0", Offset = "0xED78E0", VA = "0xED78E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002F6F")]
		[Address(RVA = "0xED79D8", Offset = "0xED79D8", VA = "0xED79D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F70")]
		[Address(RVA = "0xED7A34", Offset = "0xED7A34", VA = "0xED7A34")]
		public void SetManagerReferences(UnlockableAreasManager _manager, int _key)
		{
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0xED7A40", Offset = "0xED7A40", VA = "0xED7A40")]
		public void Interact()
		{
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0xED7CEC", Offset = "0xED7CEC", VA = "0xED7CEC")]
		public void RemoveBlock()
		{
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0xED7F8C", Offset = "0xED7F8C", VA = "0xED7F8C")]
		public void DoRemoveBlock()
		{
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0xED82DC", Offset = "0xED82DC", VA = "0xED82DC")]
		public AreaBlockade()
		{
		}
	}
	[Token(Token = "0x20007D7")]
	public class AreaBlockadeTrigger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text promptTMP;

		[Token(Token = "0x4003DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AreaBlockade blockade;

		[Token(Token = "0x6002F75")]
		[Address(RVA = "0xED82E4", Offset = "0xED82E4", VA = "0xED82E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0xED83FC", Offset = "0xED83FC", VA = "0xED83FC")]
		private void OnTriggerEnter(Collider _col)
		{
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0xED84B8", Offset = "0xED84B8", VA = "0xED84B8")]
		private void OnTriggerExit(Collider _col)
		{
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0xED8450", Offset = "0xED8450", VA = "0xED8450")]
		private void OnEnterRange()
		{
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0xED850C", Offset = "0xED850C", VA = "0xED850C")]
		private void OnExitRange()
		{
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0xED85E8", Offset = "0xED85E8", VA = "0xED85E8")]
		public AreaBlockadeTrigger()
		{
		}
	}
	[Token(Token = "0x20007D8")]
	public enum ZombiesAreas
	{
		[Token(Token = "0x4003DEA")]
		SNTR_Lobby,
		[Token(Token = "0x4003DEB")]
		SNTR_Gym,
		[Token(Token = "0x4003DEC")]
		SNTR_Outside,
		[Token(Token = "0x4003DED")]
		SNTR_HallwayBot,
		[Token(Token = "0x4003DEE")]
		SNTR_Library,
		[Token(Token = "0x4003DEF")]
		SNTR_Balcony,
		[Token(Token = "0x4003DF0")]
		SNTR_Rooftop,
		[Token(Token = "0x4003DF1")]
		SNTR_Helicopter
	}
	[Serializable]
	[Token(Token = "0x20007D9")]
	public struct UnlockableArea
	{
		[Token(Token = "0x4003DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ZombiesAreas areaName;

		[Token(Token = "0x4003DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[HideInInspector]
		public bool areaUnlocked;
	}
	[Token(Token = "0x20007DA")]
	public class UnlockableAreasManager : PunBehaviour
	{
		[Token(Token = "0x4003DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AreaBlockade[] allBlockades;

		[Token(Token = "0x4003DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, AreaBlockade> allBlockadesDict;

		[Token(Token = "0x4003DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnlockableArea[] unlockableAreas;

		[Token(Token = "0x4003DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dictionary<ZombiesAreas, UnlockableArea> unlockableAreasDictionary;

		[Token(Token = "0x4003DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ZombiesAreas spawningArea;

		[Token(Token = "0x4003DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NewZombieModeManager m_ModeManager;

		[Token(Token = "0x4003DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ZombieModeConfig zombiesConfig;

		[Token(Token = "0x4003DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ZombieRoundManager zombiesRoundConfig;

		[Token(Token = "0x4003DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool[] blockadesStatus;

		[Token(Token = "0x4003DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LanguageText unlockPromptLT;

		[Token(Token = "0x4003DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LanguageText unlockNotify;

		[Token(Token = "0x4003DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Space]
		public bool unlockAllSpawnpoints;

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0xED861C", Offset = "0xED861C", VA = "0xED861C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0xED86BC", Offset = "0xED86BC", VA = "0xED86BC")]
		private void BuildAreaDictionary()
		{
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0xED87D8", Offset = "0xED87D8", VA = "0xED87D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0xED8950", Offset = "0xED8950", VA = "0xED8950")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0xED8A2C", Offset = "0xED8A2C", VA = "0xED8A2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0xED8144", Offset = "0xED8144", VA = "0xED8144")]
		public bool CheckForStatusInitialization()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F82")]
		[Address(RVA = "0xED8B08", Offset = "0xED8B08", VA = "0xED8B08")]
		private void MyOnPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0xED8C74", Offset = "0xED8C74", VA = "0xED8C74")]
		[PunRPC]
		public void SetAllBlockades(bool[] blockadesStatus)
		{
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0xED8240", Offset = "0xED8240", VA = "0xED8240")]
		public void UnlockArea(ZombiesAreas areaToUnlock)
		{
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0xED7D0C", Offset = "0xED7D0C", VA = "0xED7D0C")]
		public void NotifyAreaUnlocked()
		{
		}

		[Token(Token = "0x6002F86")]
		[Address(RVA = "0xED7E80", Offset = "0xED7E80", VA = "0xED7E80")]
		public void Removeblock(int key)
		{
		}

		[Token(Token = "0x6002F87")]
		[Address(RVA = "0xED8D24", Offset = "0xED8D24", VA = "0xED8D24")]
		[PunRPC]
		public void RemoveBlockMsg(byte key)
		{
		}

		[Token(Token = "0x6002F88")]
		[Address(RVA = "0xED8E1C", Offset = "0xED8E1C", VA = "0xED8E1C")]
		public UnlockableAreasManager()
		{
		}
	}
	[Token(Token = "0x20007DB")]
	public class ZombiesAreaLink : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZombiesAreas areaName;

		[Token(Token = "0x6002F89")]
		[Address(RVA = "0xED8E98", Offset = "0xED8E98", VA = "0xED8E98")]
		public ZombiesAreaLink()
		{
		}
	}
	[Token(Token = "0x20007DC")]
	public class ExtractionArea : PunBehaviour
	{
		[Token(Token = "0x20007DD")]
		[CompilerGenerated]
		private sealed class <DoDisableObj>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExtractionArea <>4__this;

			[Token(Token = "0x17000521")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F95")]
				[Address(RVA = "0xED97A0", Offset = "0xED97A0", VA = "0xED97A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F97")]
				[Address(RVA = "0xED97E8", Offset = "0xED97E8", VA = "0xED97E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F92")]
			[Address(RVA = "0xED9398", Offset = "0xED9398", VA = "0xED9398")]
			[DebuggerHidden]
			public <DoDisableObj>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002F93")]
			[Address(RVA = "0xED96E8", Offset = "0xED96E8", VA = "0xED96E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F94")]
			[Address(RVA = "0xED96EC", Offset = "0xED96EC", VA = "0xED96EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F96")]
			[Address(RVA = "0xED97A8", Offset = "0xED97A8", VA = "0xED97A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float extractionRange;

		[Token(Token = "0x4003E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float extractionSpeed;

		[Token(Token = "0x4003E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float extractionTime;

		[Token(Token = "0x4003E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float currentTime;

		[Token(Token = "0x4003E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform target;

		[Token(Token = "0x4003E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Canvas canvas;

		[Token(Token = "0x4003E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text extractionLabel_TMP;

		[Token(Token = "0x4003E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject extractionVfx;

		[Token(Token = "0x4003E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageText lk_extractionLabel;

		[Token(Token = "0x4003E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool extractionCalled;

		[Token(Token = "0x4003E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NewZombieModeManager modeManager;

		[Token(Token = "0x4003E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerManager m_playerManager;

		[Token(Token = "0x4003E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public List<ExtractionTrigger> m_RenderTriggers;

		[Token(Token = "0x4003E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_rendering;

		[Token(Token = "0x6002F8A")]
		[Address(RVA = "0xED8EA0", Offset = "0xED8EA0", VA = "0xED8EA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F8B")]
		[Address(RVA = "0xED8F90", Offset = "0xED8F90", VA = "0xED8F90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002F8C")]
		[Address(RVA = "0xED9074", Offset = "0xED9074", VA = "0xED9074")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0xED9158", Offset = "0xED9158", VA = "0xED9158")]
		public void TryEnableRendering(bool value)
		{
		}

		[Token(Token = "0x6002F8E")]
		[Address(RVA = "0xED9310", Offset = "0xED9310", VA = "0xED9310")]
		private void DisableObj()
		{
		}

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0xED9330", Offset = "0xED9330", VA = "0xED9330")]
		[IteratorStateMachine(typeof(<DoDisableObj>d__19))]
		private IEnumerator DoDisableObj()
		{
			return null;
		}

		[Token(Token = "0x6002F90")]
		[Address(RVA = "0xED93C0", Offset = "0xED93C0", VA = "0xED93C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002F91")]
		[Address(RVA = "0xED9664", Offset = "0xED9664", VA = "0xED9664")]
		public ExtractionArea()
		{
		}
	}
	[Token(Token = "0x20007DE")]
	public class ExtractionTrigger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExtractionArea m_ExtractionArea;

		[Token(Token = "0x4003E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool m_Entered;

		[Token(Token = "0x6002F98")]
		[Address(RVA = "0xED97F0", Offset = "0xED97F0", VA = "0xED97F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0xED989C", Offset = "0xED989C", VA = "0xED989C")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002F9A")]
		[Address(RVA = "0xED98F0", Offset = "0xED98F0", VA = "0xED98F0")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0xED9940", Offset = "0xED9940", VA = "0xED9940")]
		public ExtractionTrigger()
		{
		}
	}
}
namespace Alvo.Zombies.UI
{
	[Token(Token = "0x20007DF")]
	public class ZombieUIPlayerElement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image avatar;

		[Token(Token = "0x4003E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text username;

		[Token(Token = "0x4003E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text description;

		[Token(Token = "0x6002F9C")]
		[Address(RVA = "0xED9948", Offset = "0xED9948", VA = "0xED9948")]
		public void SetCard(Sprite avatar, string username, string description)
		{
		}

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0xED99B0", Offset = "0xED99B0", VA = "0xED99B0")]
		public ZombieUIPlayerElement()
		{
		}
	}
}
namespace Alvo.Zombies.Scoring
{
	[Token(Token = "0x20007E0")]
	public class StatTracking
	{
		[Token(Token = "0x4003E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Kills;

		[Token(Token = "0x4003E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TeamKills;

		[Token(Token = "0x4003E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TimesRevived;

		[Token(Token = "0x4003E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int PlayersRevived;

		[Token(Token = "0x4003E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Deaths;

		[Token(Token = "0x4003E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int TeamDeaths;

		[Token(Token = "0x4003E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int RoundsReached;

		[Token(Token = "0x4003E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Players;

		[Token(Token = "0x4003E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ActivatedBackrooms;

		[Token(Token = "0x4003E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool SafelyEscaped;

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0xED99B8", Offset = "0xED99B8", VA = "0xED99B8")]
		public StatTracking()
		{
		}
	}
	[Token(Token = "0x20007E1")]
	public class ZombieScoringManager : Photon.MonoBehaviour
	{
		[Token(Token = "0x4003E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Language texts")]
		[Tooltip("Most kills")]
		public LanguageText lk_mostKills;

		[Token(Token = "0x4003E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("most revives")]
		public LanguageText lk_mostRevives;

		[Token(Token = "0x4003E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("mot deaths")]
		public LanguageText lk_mostDeaths;

		[Token(Token = "0x4003E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("mvp")]
		public LanguageText lk_mvp;

		[Token(Token = "0x4003E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerManager m_PlayerManager;

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0xED99C0", Offset = "0xED99C0", VA = "0xED99C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002FA0")]
		[Address(RVA = "0xED99E8", Offset = "0xED99E8", VA = "0xED99E8")]
		public void AddKill(int id, int coins)
		{
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0xED9C0C", Offset = "0xED9C0C", VA = "0xED9C0C")]
		public void AddDeath(int id)
		{
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0xED9C3C", Offset = "0xED9C3C", VA = "0xED9C3C")]
		public void AddRevive(int reviverId, int revivedId)
		{
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0xED9D88", Offset = "0xED9D88", VA = "0xED9D88")]
		[PunRPC]
		private void AddReviveRPC(int reviverId, int revivedId)
		{
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0xED9DF4", Offset = "0xED9DF4", VA = "0xED9DF4")]
		public void SyncCoins(int id, int coinAmmount)
		{
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0xED9F58", Offset = "0xED9F58", VA = "0xED9F58")]
		[PunRPC]
		private void SyncCoinsRPC(int id, int coinAmmount)
		{
		}

		[Token(Token = "0x6002FA6")]
		[Address(RVA = "0xED9F84", Offset = "0xED9F84", VA = "0xED9F84")]
		public PlayerScoreElement[] GetPlayerScoreElements()
		{
			return null;
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0xEDA6F8", Offset = "0xEDA6F8", VA = "0xEDA6F8")]
		public void GiveMVPPoints(List<PlayerProfile> profiles, float multiplier = 1f)
		{
		}

		[Token(Token = "0x6002FA8")]
		[Address(RVA = "0xEDA504", Offset = "0xEDA504", VA = "0xEDA504")]
		private PlayerScoreElement GetPlayerScoreElement(PlayerProfile profile)
		{
			return null;
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0xEDA7B0", Offset = "0xEDA7B0", VA = "0xEDA7B0")]
		public ZombieScoringManager()
		{
		}
	}
	[Token(Token = "0x20007E4")]
	public class PlayerScoreElement
	{
		[Token(Token = "0x4003E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite avatar;

		[Token(Token = "0x4003E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string userName;

		[Token(Token = "0x4003E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string kills;

		[Token(Token = "0x4003E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string revives;

		[Token(Token = "0x4003E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string money;

		[Token(Token = "0x4003E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string description;

		[Token(Token = "0x6002FB2")]
		[Address(RVA = "0xEDA7A8", Offset = "0xEDA7A8", VA = "0xEDA7A8")]
		public PlayerScoreElement()
		{
		}
	}
}
namespace Alvo.Ranks
{
	[Token(Token = "0x20007E5")]
	[CreateAssetMenu(fileName = "new Weapon Equipment Unlock List", menuName = "Alvo/Unlocks/Weapon Equipment Unlock List")]
	public class WeaponEquipmentUnlockList : ScriptableObject
	{
		[Token(Token = "0x4003E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<PlayerRankConfig.EquipmentUnlock> m_Unlocks;

		[Token(Token = "0x17000523")]
		public int Count
		{
			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0xEDA8B0", Offset = "0xEDA8B0", VA = "0xEDA8B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002FB4")]
		[Address(RVA = "0xEDA8F8", Offset = "0xEDA8F8", VA = "0xEDA8F8")]
		public PlayerRankConfig.EquipmentUnlock GetUnlock(int i)
		{
			return default(PlayerRankConfig.EquipmentUnlock);
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0xEDA978", Offset = "0xEDA978", VA = "0xEDA978")]
		public PlayerRankConfig.EquipmentUnlock? GetUnlockById(int id)
		{
			return null;
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0xEDAA9C", Offset = "0xEDAA9C", VA = "0xEDAA9C")]
		public List<PlayerRankConfig.EquipmentUnlock> GetRootAttachments()
		{
			return null;
		}

		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0xEDAC4C", Offset = "0xEDAC4C", VA = "0xEDAC4C")]
		public List<PlayerRankConfig.EquipmentUnlock> GetEquipmentFamily(PlayerRankConfig.EquipmentUnlock unlock)
		{
			return null;
		}

		[Token(Token = "0x6002FB8")]
		[Address(RVA = "0xEDAE90", Offset = "0xEDAE90", VA = "0xEDAE90")]
		public List<PlayerRankConfig.EquipmentUnlock> GetEquipmentChildren(PlayerRankConfig.EquipmentUnlock unlock)
		{
			return null;
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0xEDB048", Offset = "0xEDB048", VA = "0xEDB048")]
		public List<PlayerRankConfig.EquipmentUnlock> GetEquipmentFamily(int idx)
		{
			return null;
		}

		[Token(Token = "0x6002FBA")]
		[Address(RVA = "0xEDB160", Offset = "0xEDB160", VA = "0xEDB160")]
		public static WeaponEquipmentUnlockList Combine(WeaponEquipmentUnlockList a, WeaponEquipmentUnlockList b)
		{
			return null;
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0xEDB208", Offset = "0xEDB208", VA = "0xEDB208")]
		public WeaponEquipmentUnlockList()
		{
		}
	}
	[Token(Token = "0x20007E6")]
	[CreateAssetMenu(fileName = "new PlayerRankConfig", menuName = "Alvo/Ranks/Player Rank Config")]
	public class PlayerRankConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20007E7")]
		public struct XPReward
		{
			[Token(Token = "0x4003E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int PlayerKill;

			[Token(Token = "0x4003E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int BotKill;

			[Token(Token = "0x4003E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Headshot;

			[Token(Token = "0x4003E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int Assist;

			[Token(Token = "0x4003E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Space]
			public int FFAFirstPlace;

			[Token(Token = "0x4003E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int FFASecondPlace;

			[Token(Token = "0x4003E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int FFAThirdPlace;

			[Token(Token = "0x4003E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Space]
			public int TDMWin;

			[Token(Token = "0x4003E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Space]
			public int SNDWin;

			[Token(Token = "0x4003E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int SNDRoundWin;

			[Token(Token = "0x4003E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int SNDBombPlant;

			[Token(Token = "0x4003E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int SNDBombDefuse;

			[Token(Token = "0x4003E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Space]
			public int HpWin;

			[Token(Token = "0x4003E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int HpPersonalPoints;

			[Token(Token = "0x4003E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[Space]
			public int maxNoviceLevel;

			[Token(Token = "0x4003E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float noviceBonusMultiplier;
		}

		[Serializable]
		[Token(Token = "0x20007E8")]
		public struct CoinsReward
		{
			[Token(Token = "0x4003E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int KillCoins;

			[Token(Token = "0x4003E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int FFA1stCoins;

			[Token(Token = "0x4003E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int FFA2ndCoins;

			[Token(Token = "0x4003E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int FFA3rdCoins;

			[Token(Token = "0x4003E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int TDMWinCoins;

			[Token(Token = "0x4003E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int SNDWinCoins;

			[Token(Token = "0x4003E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int HPWinCoins;
		}

		[Serializable]
		[Token(Token = "0x20007E9")]
		public struct WeaponUnlock
		{
			[Token(Token = "0x4003E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int WeaponNumber;

			[Token(Token = "0x4003E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int RankToUnlock;

			[Token(Token = "0x4003E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int CoinsToUnlock;

			[Token(Token = "0x4003E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool UnlockedByDefault;
		}

		[Serializable]
		[Token(Token = "0x20007EA")]
		public struct EquipmentUnlock
		{
			[Token(Token = "0x4003E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int killsNeeded;

			[Token(Token = "0x4003E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int coinsToUnlock;

			[Token(Token = "0x4003E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isIncludedWithParent;

			[Token(Token = "0x4003E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int parentAttachment;

			[Token(Token = "0x4003E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int itemNumber;

			[Token(Token = "0x4003E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool unlcokedByDefault;
		}

		[Serializable]
		[Token(Token = "0x20007EB")]
		private struct IndexedUnlockList
		{
			[Token(Token = "0x4003E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int key;

			[Token(Token = "0x4003E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public WeaponEquipmentUnlockList value;
		}

		[Token(Token = "0x4003E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerRankLevels m_RankLevels;

		[Token(Token = "0x4003E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XPReward m_XPSettings;

		[Token(Token = "0x4003E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CoinsReward m_CoinsSettings;

		[Token(Token = "0x4003E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private WeaponUnlock[] m_WeaponUnlocks;

		[Token(Token = "0x4003E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int[] m_WeaponRankKills;

		[Token(Token = "0x4003E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[Header("Attachments")]
		private WeaponEquipmentUnlockList m_AttachmentUnlocks;

		[Token(Token = "0x4003E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_SniperAttachmentUnlocks;

		[Token(Token = "0x4003E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_PistolAttachmentUnlocks;

		[Token(Token = "0x4003E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_ShotgunAttachmentUnlocks;

		[Token(Token = "0x4003E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_DualAttachmentUnlocks;

		[Token(Token = "0x4003E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_DualShotgunAttachmentUnlocks;

		[Token(Token = "0x4003E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private List<IndexedUnlockList> m_ExceptionAttachmentUnlocks;

		[Token(Token = "0x4003E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[Header("Scopes")]
		private WeaponEquipmentUnlockList m_NormalScopeUnlocks;

		[Token(Token = "0x4003E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_SniperScopesUnlocks;

		[Token(Token = "0x4003E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_PistolScopesUnlocks;

		[Token(Token = "0x4003E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_ShotgunScopesUnlocks;

		[Token(Token = "0x4003E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_DualScopesUnlocks;

		[Token(Token = "0x4003E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private WeaponEquipmentUnlockList m_DualShotgunScopesUnlocks;

		[Token(Token = "0x4003E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private List<IndexedUnlockList> m_ExceptionScopesUnlocks;

		[Token(Token = "0x4003E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Dictionary<int, WeaponEquipmentUnlockList> exceptionAttachmentUnlocks;

		[Token(Token = "0x4003E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Dictionary<int, WeaponEquipmentUnlockList> exceptionScopesUnlocks;

		[Token(Token = "0x17000524")]
		private Dictionary<int, WeaponEquipmentUnlockList> ExceptionAttachmentUnlocks
		{
			[Token(Token = "0x6002FBC")]
			[Address(RVA = "0xEDC284", Offset = "0xEDC284", VA = "0xEDC284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000525")]
		private Dictionary<int, WeaponEquipmentUnlockList> ExceptionScopesUnlocks
		{
			[Token(Token = "0x6002FBD")]
			[Address(RVA = "0xEDC44C", Offset = "0xEDC44C", VA = "0xEDC44C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0xEDC614", Offset = "0xEDC614", VA = "0xEDC614")]
		public PlayerRankLevels GetRankLevels()
		{
			return null;
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0xEDC61C", Offset = "0xEDC61C", VA = "0xEDC61C")]
		public XPReward GetXPSettings()
		{
			return default(XPReward);
		}

		[Token(Token = "0x6002FC0")]
		[Address(RVA = "0xEDC630", Offset = "0xEDC630", VA = "0xEDC630")]
		public CoinsReward GetCoinsSettings()
		{
			return default(CoinsReward);
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0xEDC644", Offset = "0xEDC644", VA = "0xEDC644")]
		public WeaponUnlock[] GetWeaponUnlocks()
		{
			return null;
		}

		[Token(Token = "0x6002FC2")]
		[Address(RVA = "0xEDC64C", Offset = "0xEDC64C", VA = "0xEDC64C")]
		public WeaponUnlock? GetWeaponUnlockById(int weaponId)
		{
			return null;
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0xEDC718", Offset = "0xEDC718", VA = "0xEDC718")]
		public int[] GetWeaponRankKills()
		{
			return null;
		}

		[Token(Token = "0x6002FC4")]
		[Address(RVA = "0xEDC720", Offset = "0xEDC720", VA = "0xEDC720")]
		public WeaponEquipmentUnlockList GetScopeUnlockList(Items weapon)
		{
			return null;
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0xEDC848", Offset = "0xEDC848", VA = "0xEDC848")]
		public WeaponEquipmentUnlockList GetAttachmentUnlockList(Items weapon)
		{
			return null;
		}

		[Token(Token = "0x6002FC6")]
		[Address(RVA = "0xEDC970", Offset = "0xEDC970", VA = "0xEDC970")]
		public WeaponEquipmentUnlockList GetAttachmentAndScopeUnlockList(Items weapon)
		{
			return null;
		}

		[Token(Token = "0x6002FC7")]
		[Address(RVA = "0xEDCB38", Offset = "0xEDCB38", VA = "0xEDCB38")]
		public int GetRequiredRankForWeapon(int weaponNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6002FC8")]
		[Address(RVA = "0xEDCB8C", Offset = "0xEDCB8C", VA = "0xEDCB8C")]
		public void SetMaxNoviceLevel(int lvl)
		{
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0xEDCC40", Offset = "0xEDCC40", VA = "0xEDCC40")]
		public static int WeaponRankByKills(int kills, int[] rankKills)
		{
			return default(int);
		}

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0xEDCC8C", Offset = "0xEDCC8C", VA = "0xEDCC8C")]
		public PlayerRankConfig()
		{
		}
	}
	[Token(Token = "0x20007EC")]
	[CreateAssetMenu(fileName = "New PlayerRankIcons", menuName = "Alvo/Ranks/Icons List")]
	public class PlayerRankIcons : ScriptableObject
	{
		[Token(Token = "0x4003E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite[] icons;

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0xEDCC94", Offset = "0xEDCC94", VA = "0xEDCC94")]
		public Sprite GetIcon(int i)
		{
			return null;
		}

		[Token(Token = "0x6002FCC")]
		[Address(RVA = "0xEDCCC4", Offset = "0xEDCCC4", VA = "0xEDCCC4")]
		public PlayerRankIcons()
		{
		}
	}
	[Token(Token = "0x20007ED")]
	[CreateAssetMenu(fileName = "new PlayerRankLevels", menuName = "Alvo/Ranks/Player Rank Levels")]
	public class PlayerRankLevels : ScriptableObject
	{
		[Token(Token = "0x4003E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxRank;

		[Token(Token = "0x4003E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float baseXP;

		[Token(Token = "0x4003E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float xpIncrementMult;

		[Token(Token = "0x4003E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int xpRoundMultiple;

		[Token(Token = "0x4003E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private int[] totalXp;

		[Token(Token = "0x4003E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private int[] xpToNextRank;

		[Token(Token = "0x6002FCD")]
		[Address(RVA = "0xEDCCCC", Offset = "0xEDCCCC", VA = "0xEDCCCC")]
		public void CalculateLevels()
		{
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0xEDCFE8", Offset = "0xEDCFE8", VA = "0xEDCFE8")]
		public int GetTotalXP(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0xEDD024", Offset = "0xEDD024", VA = "0xEDD024")]
		public int GetXpToNextRank(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6002FD0")]
		[Address(RVA = "0xEDD060", Offset = "0xEDD060", VA = "0xEDD060")]
		public int LevelsLength()
		{
			return default(int);
		}

		[Token(Token = "0x6002FD1")]
		[Address(RVA = "0xEDD07C", Offset = "0xEDD07C", VA = "0xEDD07C")]
		public int GetRankForEXP(int exp)
		{
			return default(int);
		}

		[Token(Token = "0x6002FD2")]
		[Address(RVA = "0xEDD0C8", Offset = "0xEDD0C8", VA = "0xEDD0C8")]
		public float CalculateProgress(int rank, int exp)
		{
			return default(float);
		}

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0xEDD148", Offset = "0xEDD148", VA = "0xEDD148")]
		public PlayerRankLevels()
		{
		}
	}
}
namespace ThirdPersonCamera
{
	[Token(Token = "0x20007EE")]
	[RequireComponent(typeof(Camera))]
	public class CameraController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4003E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offsetVector;

		[Token(Token = "0x4003E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 cameraOffsetVector;

		[Token(Token = "0x4003E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool smartPivot;

		[Token(Token = "0x4003E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool occlusionCheck;

		[Token(Token = "0x4003E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool thicknessCheck;

		[Token(Token = "0x4003E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float desiredDistance;

		[Token(Token = "0x4003E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float collisionDistance;

		[Token(Token = "0x4003E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxThickness;

		[Token(Token = "0x4003E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int maxThicknessIterations;

		[Token(Token = "0x4003E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float zoomOutStepValue;

		[Token(Token = "0x4003E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float zoomOutStepValuePerFrame;

		[Token(Token = "0x4003E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool smoothTargetMode;

		[Token(Token = "0x4003E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float smoothTargetValue;

		[Token(Token = "0x4003E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool hideSkinnedMeshRenderers;

		[Token(Token = "0x4003E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LayerMask collisionLayer;

		[Token(Token = "0x4003E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LayerMask playerLayer;

		[Token(Token = "0x4003E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool playerCollision;

		[Token(Token = "0x4003E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool cameraNormalMode;

		[Token(Token = "0x4003E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[HideInInspector]
		public bool bGroundHit;

		[Token(Token = "0x4003E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public float startingY;

		[Token(Token = "0x4003E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initDone;

		[Token(Token = "0x4003E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 prevTargetPos;

		[Token(Token = "0x4003E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 prevPosition;

		[Token(Token = "0x4003E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SkinnedMeshRenderer[] smrs;

		[Token(Token = "0x4003E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float distance;

		[Token(Token = "0x4003E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float thickness;

		[Token(Token = "0x4003E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 targetPosWithOffset;

		[Token(Token = "0x4003E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 dirToTarget;

		[Token(Token = "0x4003E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 dirToTargetSmartPivot;

		[Token(Token = "0x4003E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 thicknessStartPoint;

		[Token(Token = "0x4003E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 thicknessEndPoint;

		[Token(Token = "0x4003E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private RaycastHit? occlusionHit;

		[Token(Token = "0x4003E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private RaycastHit groundHit;

		[Token(Token = "0x4003E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private RaycastHit thicknessHit;

		[Token(Token = "0x4003E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private RaycastHit hitSmartPivot;

		[Token(Token = "0x4003E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private RaycastHit offsetTest;

		[Token(Token = "0x4003E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private int currentIterations;

		[Token(Token = "0x4003E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Dictionary<string, RaycastHit> thicknessStarts;

		[Token(Token = "0x4003E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Dictionary<string, RaycastHit> thicknessEnds;

		[Token(Token = "0x4003E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<RayCastWithMags> rcms;

		[Token(Token = "0x4003E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private SortRayCastsCamera sortMethodCamera;

		[Token(Token = "0x4003E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private SortRayCastsTarget sortMethodTarget;

		[Token(Token = "0x4003E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 targetPosition;

		[Token(Token = "0x4003E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private Vector3 smoothedTargetPosition;

		[Token(Token = "0x17000526")]
		public float Distance
		{
			[Token(Token = "0x6002FD4")]
			[Address(RVA = "0xEDD150", Offset = "0xEDD150", VA = "0xEDD150")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0xEDD158", Offset = "0xEDD158", VA = "0xEDD158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0xEDD398", Offset = "0xEDD398", VA = "0xEDD398")]
		public void InitTarget(Transform mTarget)
		{
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0xEDD49C", Offset = "0xEDD49C", VA = "0xEDD49C")]
		public void DisableCam()
		{
		}

		[Token(Token = "0x6002FD8")]
		[Address(RVA = "0xEDD27C", Offset = "0xEDD27C", VA = "0xEDD27C")]
		private void InitTarget()
		{
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0xEDD4C0", Offset = "0xEDD4C0", VA = "0xEDD4C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0xEDF7E4", Offset = "0xEDF7E4", VA = "0xEDF7E4")]
		public void RotateTo(Quaternion targetRotation, float timeModifier)
		{
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0xEDF880", Offset = "0xEDF880", VA = "0xEDF880")]
		public float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0xEDF8F0", Offset = "0xEDF8F0", VA = "0xEDF8F0")]
		public void InitSmartPivot()
		{
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0xEDF944", Offset = "0xEDF944", VA = "0xEDF944")]
		public void DisableSmartPivot()
		{
		}

		[Token(Token = "0x6002FDE")]
		[Address(RVA = "0xEDF9EC", Offset = "0xEDF9EC", VA = "0xEDF9EC")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0xEDFA7C", Offset = "0xEDFA7C", VA = "0xEDFA7C")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0xEDFB08", Offset = "0xEDFB08", VA = "0xEDFB08")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20007EF")]
	public struct RayCastWithMags
	{
		[Token(Token = "0x4003E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit hit;

		[Token(Token = "0x4003EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float distanceFromCamera;

		[Token(Token = "0x4003EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float distanceFromTarget;
	}
	[Token(Token = "0x20007F0")]
	public class TransformWithTime
	{
		[Token(Token = "0x4003EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4003EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rot;

		[Token(Token = "0x4003EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x4003EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float time;

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0xEDFB60", Offset = "0xEDFB60", VA = "0xEDFB60")]
		public TransformWithTime()
		{
		}
	}
	[Token(Token = "0x20007F1")]
	public class SortRayCastsTarget : IComparer<RayCastWithMags>
	{
		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0xEDFB68", Offset = "0xEDFB68", VA = "0xEDFB68", Slot = "4")]
		public int Compare(RayCastWithMags a, RayCastWithMags b)
		{
			return default(int);
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0xEDD274", Offset = "0xEDD274", VA = "0xEDD274")]
		public SortRayCastsTarget()
		{
		}
	}
	[Token(Token = "0x20007F2")]
	public class SortRayCastsCamera : IComparer<RayCastWithMags>
	{
		[Token(Token = "0x6002FE4")]
		[Address(RVA = "0xEDFB88", Offset = "0xEDFB88", VA = "0xEDFB88", Slot = "4")]
		public int Compare(RayCastWithMags a, RayCastWithMags b)
		{
			return default(int);
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0xEDD26C", Offset = "0xEDD26C", VA = "0xEDD26C")]
		public SortRayCastsCamera()
		{
		}
	}
	[Token(Token = "0x20007F3")]
	[RequireComponent(typeof(FreeForm))]
	[RequireComponent(typeof(Follow))]
	[RequireComponent(typeof(CameraController))]
	public class DisableFollow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool activateMotionCheck;

		[Token(Token = "0x4003EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool activateTimeCheck;

		[Token(Token = "0x4003EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool activateMouseCheck;

		[Token(Token = "0x4003EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeToActivate;

		[Token(Token = "0x4003EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float motionThreshold;

		[Token(Token = "0x4003EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CameraController cameraController;

		[Token(Token = "0x4003EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FreeForm freeForm;

		[Token(Token = "0x4003EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Follow follow;

		[Token(Token = "0x4003EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool followDisabled;

		[Token(Token = "0x4003EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 prevPosition;

		[Token(Token = "0x6002FE6")]
		[Address(RVA = "0xEDFBA8", Offset = "0xEDFBA8", VA = "0xEDFBA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0xEDFC60", Offset = "0xEDFC60", VA = "0xEDFC60")]
		private void Update()
		{
		}

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0xEDFE3C", Offset = "0xEDFE3C", VA = "0xEDFE3C")]
		public void ActivateFollow()
		{
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0xEDFED0", Offset = "0xEDFED0", VA = "0xEDFED0")]
		public DisableFollow()
		{
		}
	}
	[Token(Token = "0x20007F4")]
	public enum CameraMode
	{
		[Token(Token = "0x4003EB1")]
		Always,
		[Token(Token = "0x4003EB2")]
		Input
	}
	[Token(Token = "0x20007F5")]
	[RequireComponent(typeof(CameraController))]
	public class FreeForm : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool cameraEnabled;

		[Token(Token = "0x4003EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public CameraMode cameraMode;

		[Token(Token = "0x4003EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> mouseInput;

		[Token(Token = "0x4003EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<KeyCode> keyboardInput;

		[Token(Token = "0x4003EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool controllerEnabled;

		[Token(Token = "0x4003EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool controllerInvertY;

		[Token(Token = "0x4003EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool mouseInvertY;

		[Token(Token = "0x4003EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool lockMouseCursor;

		[Token(Token = "0x4003EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 mouseSensitivity;

		[Token(Token = "0x4003EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 controllerSensitivity;

		[Token(Token = "0x4003EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yAngleLimitMin;

		[Token(Token = "0x4003EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yAngleLimitMax;

		[Token(Token = "0x4003EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float x;

		[Token(Token = "0x4003EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float y;

		[Token(Token = "0x4003EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float yAngle;

		[Token(Token = "0x4003EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float angle;

		[Token(Token = "0x4003EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string rightAxisXName;

		[Token(Token = "0x4003EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string rightAxisYName;

		[Token(Token = "0x4003EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 upVector;

		[Token(Token = "0x4003EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 downVector;

		[Token(Token = "0x4003EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool smartPivotInit;

		[Token(Token = "0x4003EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float smoothX;

		[Token(Token = "0x4003EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float smoothY;

		[Token(Token = "0x4003ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool smoothing;

		[Token(Token = "0x4003ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float smoothSpeed;

		[Token(Token = "0x4003ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CameraController cameraController;

		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0xEDFEF4", Offset = "0xEDFEF4", VA = "0xEDFEF4")]
		public void Start()
		{
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0xEE0178", Offset = "0xEE0178", VA = "0xEE0178")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0xEE0C34", Offset = "0xEE0C34", VA = "0xEE0C34")]
		public FreeForm()
		{
		}
	}
	[Token(Token = "0x20007F6")]
	public static class LayerMaskHelper
	{
		[Token(Token = "0x6002FED")]
		[Address(RVA = "0xEE0DFC", Offset = "0xEE0DFC", VA = "0xEE0DFC")]
		public static bool IsInLayerMask(this LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0xEDF794", Offset = "0xEDF794", VA = "0xEDF794")]
		public static bool IsInLayerMask(this LayerMask mask, GameObject obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007F7")]
	public struct TargetableWithDistance
	{
		[Token(Token = "0x17000527")]
		public Targetable target
		{
			[Token(Token = "0x6002FEF")]
			[Address(RVA = "0xEE0E34", Offset = "0xEE0E34", VA = "0xEE0E34")]
			[CompilerGenerated]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0xEE0E3C", Offset = "0xEE0E3C", VA = "0xEE0E3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public float distance
		{
			[Token(Token = "0x6002FF1")]
			[Address(RVA = "0xEE0E44", Offset = "0xEE0E44", VA = "0xEE0E44")]
			[CompilerGenerated]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x6002FF2")]
			[Address(RVA = "0xEE0E4C", Offset = "0xEE0E4C", VA = "0xEE0E4C")]
			[CompilerGenerated]
			set
			{
			}
		}
	}
	[Token(Token = "0x20007F8")]
	public class SortTargetables : IComparer<TargetableWithDistance>
	{
		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0xEE0E54", Offset = "0xEE0E54", VA = "0xEE0E54", Slot = "4")]
		public int Compare(TargetableWithDistance a, TargetableWithDistance b)
		{
			return default(int);
		}

		[Token(Token = "0x6002FF4")]
		[Address(RVA = "0xEE0E74", Offset = "0xEE0E74", VA = "0xEE0E74")]
		public SortTargetables()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	[RequireComponent(typeof(CameraController))]
	[RequireComponent(typeof(FreeForm))]
	public class LockOnTarget : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Targetable followTarget;

		[Token(Token = "0x4003ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationSpeed;

		[Token(Token = "0x4003ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 tiltVector;

		[Token(Token = "0x4003ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Targetable> targets;

		[Token(Token = "0x4003ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraController cc;

		[Token(Token = "0x4003ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FreeForm ff;

		[Token(Token = "0x4003ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SortTargetables sortTargetsMethod;

		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0xEE0E7C", Offset = "0xEE0E7C", VA = "0xEE0E7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FF6")]
		[Address(RVA = "0xEE0F2C", Offset = "0xEE0F2C", VA = "0xEE0F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002FF7")]
		[Address(RVA = "0xEE1464", Offset = "0xEE1464", VA = "0xEE1464")]
		public LockOnTarget()
		{
		}
	}
	[Token(Token = "0x20007FA")]
	[RequireComponent(typeof(CameraController))]
	public class OverTheShoulder : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxValue;

		[Token(Token = "0x4003ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float aimSpeed;

		[Token(Token = "0x4003ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float releaseSpeed;

		[Token(Token = "0x4003ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool left;

		[Token(Token = "0x4003EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode changeLeaning;

		[Token(Token = "0x4003EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 baseOffset;

		[Token(Token = "0x4003EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 slideAxis;

		[Token(Token = "0x4003EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 additionalAxisMovement;

		[Token(Token = "0x4003EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CameraController cc;

		[Token(Token = "0x4003EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 offsetValue;

		[Token(Token = "0x6002FF8")]
		[Address(RVA = "0xEE1474", Offset = "0xEE1474", VA = "0xEE1474")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FF9")]
		[Address(RVA = "0xEE1540", Offset = "0xEE1540", VA = "0xEE1540")]
		private void Update()
		{
		}

		[Token(Token = "0x6002FFA")]
		[Address(RVA = "0xEE16EC", Offset = "0xEE16EC", VA = "0xEE16EC")]
		public OverTheShoulder()
		{
		}
	}
	[Token(Token = "0x20007FB")]
	public class Targetable : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 offset;

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0xEE171C", Offset = "0xEE171C", VA = "0xEE171C")]
		public Targetable()
		{
		}
	}
	[Token(Token = "0x20007FC")]
	public class Follow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool follow;

		[Token(Token = "0x4003EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool alignOnSlopes;

		[Token(Token = "0x4003EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationSpeed;

		[Token(Token = "0x4003EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationSpeedSlopes;

		[Token(Token = "0x4003EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool lookBackwards;

		[Token(Token = "0x4003EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool checkMotionForBackwards;

		[Token(Token = "0x4003EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float backwardsMotionThreshold;

		[Token(Token = "0x4003EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float angleThreshold;

		[Token(Token = "0x4003EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 tiltVector;

		[Token(Token = "0x4003EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask layerMask;

		[Token(Token = "0x4003EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 prevPosition;

		[Token(Token = "0x4003EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CameraController cc;

		[Token(Token = "0x4003EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool stop;

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0xEE1724", Offset = "0xEE1724", VA = "0xEE1724")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0xEE1774", Offset = "0xEE1774", VA = "0xEE1774")]
		private void Update()
		{
		}

		[Token(Token = "0x6002FFE")]
		[Address(RVA = "0xEE1D48", Offset = "0xEE1D48", VA = "0xEE1D48")]
		public float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0xEE1DB8", Offset = "0xEE1DB8", VA = "0xEE1DB8")]
		public Follow()
		{
		}
	}
}
namespace NOT_Lonely
{
	[Token(Token = "0x20007FD")]
	public class NL_CableHanging : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6003000")]
		[Address(RVA = "0xEE1DE8", Offset = "0xEE1DE8", VA = "0xEE1DE8")]
		public NL_CableHanging()
		{
		}
	}
	[Token(Token = "0x20007FE")]
	public class NL_CablePoint : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pointName;

		[Token(Token = "0x6003001")]
		[Address(RVA = "0xEE1DF0", Offset = "0xEE1DF0", VA = "0xEE1DF0")]
		public NL_CablePoint()
		{
		}
	}
	[Token(Token = "0x20007FF")]
	public class NL_ColumnControl : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6003002")]
		[Address(RVA = "0xEE1E40", Offset = "0xEE1E40", VA = "0xEE1E40")]
		public NL_ColumnControl()
		{
		}
	}
	[Token(Token = "0x2000800")]
	public class NL_Gear : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x6003003")]
		[Address(RVA = "0xEE1E48", Offset = "0xEE1E48", VA = "0xEE1E48")]
		public NL_Gear()
		{
		}
	}
	[Token(Token = "0x2000801")]
	public class NL_Hook : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Transform wireDrumMount;

		[Token(Token = "0x4003EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Transform wireHookMount;

		[Token(Token = "0x4003EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public SkinnedMeshRenderer wires_mesh;

		[Token(Token = "0x4003EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public MaterialPropertyBlock mtlPropBlock;

		[Token(Token = "0x4003EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public ConfigurableJoint hookJoint;

		[Token(Token = "0x4003EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Rigidbody rb;

		[Token(Token = "0x4003EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LayerMask layerMask;

		[Token(Token = "0x4003EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float hookOffset;

		[Token(Token = "0x4003EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NL_OverheadCrane crane;

		[Token(Token = "0x4003EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NL_RemoteButton buttonDown;

		[Token(Token = "0x4003EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NL_AttachCargo attachCargo;

		[Token(Token = "0x6003004")]
		[Address(RVA = "0xEE1E50", Offset = "0xEE1E50", VA = "0xEE1E50")]
		public void Init()
		{
		}

		[Token(Token = "0x6003005")]
		[Address(RVA = "0xEE2144", Offset = "0xEE2144", VA = "0xEE2144")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003006")]
		[Address(RVA = "0xEE23AC", Offset = "0xEE23AC", VA = "0xEE23AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003007")]
		[Address(RVA = "0xEE24CC", Offset = "0xEE24CC", VA = "0xEE24CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6003008")]
		[Address(RVA = "0xEE1FB8", Offset = "0xEE1FB8", VA = "0xEE1FB8")]
		private Transform GetChildByName(Transform parent, string childName)
		{
			return null;
		}

		[Token(Token = "0x6003009")]
		[Address(RVA = "0xEE2658", Offset = "0xEE2658", VA = "0xEE2658")]
		private void Update()
		{
		}

		[Token(Token = "0x600300A")]
		[Address(RVA = "0xEE27A4", Offset = "0xEE27A4", VA = "0xEE27A4")]
		public void UpdateHookHeight(float speed, float t, float craneHeight)
		{
		}

		[Token(Token = "0x600300B")]
		[Address(RVA = "0xEE2A7C", Offset = "0xEE2A7C", VA = "0xEE2A7C")]
		public NL_Hook()
		{
		}
	}
	[Token(Token = "0x2000802")]
	public class NL_OverheadCrane : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000803")]
		public delegate void HookHeightChanged(float hookSpeed, float hookHeight, float craneHeight);

		[Token(Token = "0x2000804")]
		public delegate void HookRemoteChanged(float craneHeight, float remoteHeight);

		[Token(Token = "0x2000805")]
		public delegate void SwitchKeyboard(bool value);

		[Token(Token = "0x4003EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform supportBeams;

		[Token(Token = "0x4003EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform movingParts;

		[Token(Token = "0x4003F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform endBeams;

		[Token(Token = "0x4003F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform endBeam_01;

		[Token(Token = "0x4003F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform endBeam_02;

		[Token(Token = "0x4003F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform mainBeam_end;

		[Token(Token = "0x4003F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform telpherParent;

		[Token(Token = "0x4003F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform telpherFan;

		[Token(Token = "0x4003F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform supportBeam_01;

		[Token(Token = "0x4003F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform supportBeam_01_end;

		[Token(Token = "0x4003F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform supportBeam_02;

		[Token(Token = "0x4003F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform supportBeam_02_end;

		[Token(Token = "0x4003F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform columns_A;

		[Token(Token = "0x4003F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform columns_B;

		[Token(Token = "0x4003F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform column_01;

		[Token(Token = "0x4003F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform column_01_end;

		[Token(Token = "0x4003F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform column_02;

		[Token(Token = "0x4003F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform column_02_end;

		[Token(Token = "0x4003F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform column_03;

		[Token(Token = "0x4003F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform column_03_end;

		[Token(Token = "0x4003F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform column_04;

		[Token(Token = "0x4003F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform column_04_end;

		[Token(Token = "0x4003F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NL_Wheel[] beamWheels;

		[Token(Token = "0x4003F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private NL_Gear[] telpherGears;

		[Token(Token = "0x4003F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private MeshRenderer drumWires;

		[Token(Token = "0x4003F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform telpherWireHolder;

		[Token(Token = "0x4003F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Transform mainBeam_decal;

		[Token(Token = "0x4003F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Transform cablesSupportBeam_parent;

		[Token(Token = "0x4003F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform cablesSupportBeam_endPoint;

		[Token(Token = "0x4003F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Transform> cablesSupportBeam_endPointParents;

		[Token(Token = "0x4003F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<Transform> cablesSupportBeam_endPoints;

		[Token(Token = "0x4003F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<Rigidbody> cablesSupportBeam_endPoints_rb;

		[Token(Token = "0x4003F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Rigidbody> cablesSupportBeam_startPoints_rb;

		[Token(Token = "0x4003F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<Transform> cablesSupportBeam_startPoints;

		[Token(Token = "0x4003F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<SkinnedMeshRenderer> cablesSupportBeam_meshes;

		[Token(Token = "0x4003F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform cablesMainBeam_parent;

		[Token(Token = "0x4003F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform cablesMainBeam_endPoint;

		[Token(Token = "0x4003F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<Transform> cablesMainBeam_endPointParents;

		[Token(Token = "0x4003F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<Transform> cablesMainBeam_endPoints;

		[Token(Token = "0x4003F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<Rigidbody> cablesMainBeam_endPoints_rb;

		[Token(Token = "0x4003F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<Rigidbody> cablesMainBeam_startPoints_rb;

		[Token(Token = "0x4003F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private List<Transform> cablesMainBeam_startPoints;

		[Token(Token = "0x4003F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private List<SkinnedMeshRenderer> cablesMainBeam_meshes;

		[Token(Token = "0x4003F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private SkinnedMeshRenderer supportBeams_mesh;

		[Token(Token = "0x4003F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private SkinnedMeshRenderer endBeams_mesh;

		[Token(Token = "0x4003F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private SkinnedMeshRenderer mainBeam_mesh;

		[Token(Token = "0x4003F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public List<Transform> basicColumns;

		[Token(Token = "0x4003F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public List<Transform> basicColumnControls;

		[Token(Token = "0x4003F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public List<SkinnedMeshRenderer> basicColumnMeshes;

		[Token(Token = "0x4003F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public List<Transform> extraColumns_A;

		[Token(Token = "0x4003F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public List<Transform> extraColumns_B;

		[Token(Token = "0x4003F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public List<Transform> extraColumnControls_A;

		[Token(Token = "0x4003F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public List<Transform> extraColumnControls_B;

		[Token(Token = "0x4003F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public List<SkinnedMeshRenderer> extraColumnMeshes_A;

		[Token(Token = "0x4003F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public List<SkinnedMeshRenderer> extraColumnMeshes_B;

		[Token(Token = "0x4003F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private List<Transform> columnDecals;

		[Token(Token = "0x4003F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public GameObject combinedColumns;

		[Token(Token = "0x4003F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public GameObject supportBeamObj;

		[Token(Token = "0x4003F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public GameObject mainBeamObj;

		[Token(Token = "0x4003F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float fanRotationIncrement;

		[Token(Token = "0x4003F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float fanTargetSpeed;

		[Token(Token = "0x4003F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float fanSpeedEasing;

		[Token(Token = "0x4003F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float curVel;

		[Token(Token = "0x4003F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private float refVel;

		[Token(Token = "0x4003F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private float rotation;

		[Token(Token = "0x4003F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float lastPos;

		[Token(Token = "0x4003F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private AnimationCurve cablesSupportBeamCurve;

		[Token(Token = "0x4003F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private AnimationCurve cablesMainBeamCurve;

		[Token(Token = "0x4003F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private AnimationCurve scaleCurve;

		[Token(Token = "0x4003F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private AnimationCurve _curve;

		[Token(Token = "0x4003F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float[] cablesSupportBeamRotValues;

		[Token(Token = "0x4003F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private float[] cablesSupportBeamScaleValues;

		[Token(Token = "0x4003F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private float[] cablesMainBeamRotValues;

		[Token(Token = "0x4003F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float[] cablesMainBeamScaleValues;

		[Token(Token = "0x4003F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		public bool useColumns;

		[Token(Token = "0x4003F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public int additionalColumnsCount;

		[Token(Token = "0x4003F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		public float craneHeight;

		[Token(Token = "0x4003F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		public float craneWidth;

		[Token(Token = "0x4003F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		public float craneLength;

		[Token(Token = "0x4003F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		public float initialBeamPos;

		[Token(Token = "0x4003F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		public float initialTelpherPos;

		[Token(Token = "0x4003F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		public float hookHeight;

		[Token(Token = "0x4003F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		public float remoteHeight;

		[Token(Token = "0x4003F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		public MaterialPropertyBlock mtlPropertyBlock;

		[Token(Token = "0x4003F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		public MaterialPropertyBlock wiresDrumPropBlock;

		[Token(Token = "0x4003F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		public bool useMainBeamDecal;

		[Token(Token = "0x4003F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
		[SerializeField]
		public bool useColumnDecal;

		[Token(Token = "0x4003F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
		[SerializeField]
		public bool isCombined;

		[Token(Token = "0x4003F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A3")]
		[SerializeField]
		public bool keyboardControls;

		[Token(Token = "0x4003F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		public float beamSpeed;

		[Token(Token = "0x4003F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		public float telpherSpeed;

		[Token(Token = "0x4003F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[SerializeField]
		public float hookSpeed;

		[Token(Token = "0x4003F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		public float cablesSwayAmplitude;

		[Token(Token = "0x4003F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		[SerializeField]
		public bool useCableSwaying;

		[Token(Token = "0x14000023")]
		public event HookHeightChanged OnHookHeightChanged
		{
			[Token(Token = "0x600300C")]
			[Address(RVA = "0xEE2310", Offset = "0xEE2310", VA = "0xEE2310")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600300D")]
			[Address(RVA = "0xEE2430", Offset = "0xEE2430", VA = "0xEE2430")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event HookRemoteChanged OnRemoteHeightChanged
		{
			[Token(Token = "0x600300E")]
			[Address(RVA = "0xEE2AAC", Offset = "0xEE2AAC", VA = "0xEE2AAC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600300F")]
			[Address(RVA = "0xEE2B48", Offset = "0xEE2B48", VA = "0xEE2B48")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event SwitchKeyboard OnKeyboardControlsSwitched
		{
			[Token(Token = "0x6003010")]
			[Address(RVA = "0xEE2BE4", Offset = "0xEE2BE4", VA = "0xEE2BE4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003011")]
			[Address(RVA = "0xEE2C80", Offset = "0xEE2C80", VA = "0xEE2C80")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6003012")]
		[Address(RVA = "0xEE2D1C", Offset = "0xEE2D1C", VA = "0xEE2D1C")]
		public void Start()
		{
		}

		[Token(Token = "0x6003013")]
		[Address(RVA = "0xEE50D8", Offset = "0xEE50D8", VA = "0xEE50D8")]
		private void SetPropBlocksForCombinedMeshes()
		{
		}

		[Token(Token = "0x6003014")]
		[Address(RVA = "0xEE4000", Offset = "0xEE4000", VA = "0xEE4000")]
		private float[] GetRandomFloatValues(float[] valuesArray, List<Transform> endPointParents, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x6003015")]
		[Address(RVA = "0xEE3C34", Offset = "0xEE3C34", VA = "0xEE3C34")]
		private void InitCables(Transform cablesParent, List<Transform> endPointParents, List<Transform> endPoints, List<Rigidbody> endPoints_rb, List<Transform> startPoints, List<Rigidbody> startPoints_rb, List<SkinnedMeshRenderer> meshes)
		{
		}

		[Token(Token = "0x6003016")]
		[Address(RVA = "0xEE5328", Offset = "0xEE5328", VA = "0xEE5328")]
		private void SetCablesForSwaying(int i, List<Rigidbody> points_rb, NL_CablePoint[] tempPoints)
		{
		}

		[Token(Token = "0x6003017")]
		[Address(RVA = "0xEE5634", Offset = "0xEE5634", VA = "0xEE5634")]
		private void Update()
		{
		}

		[Token(Token = "0x6003018")]
		[Address(RVA = "0xEE3C14", Offset = "0xEE3C14", VA = "0xEE3C14")]
		public void SwitchKeyboardControls(bool value)
		{
		}

		[Token(Token = "0x6003019")]
		[Address(RVA = "0xEE56EC", Offset = "0xEE56EC", VA = "0xEE56EC")]
		public void SwitchMainBeamDecal(bool value)
		{
		}

		[Token(Token = "0x600301A")]
		[Address(RVA = "0xEE571C", Offset = "0xEE571C", VA = "0xEE571C")]
		public void SwitchColumnDecal(bool value)
		{
		}

		[Token(Token = "0x600301B")]
		[Address(RVA = "0xEE4A2C", Offset = "0xEE4A2C", VA = "0xEE4A2C")]
		public void UpdateHookHeight()
		{
		}

		[Token(Token = "0x600301C")]
		[Address(RVA = "0xEE589C", Offset = "0xEE589C", VA = "0xEE589C")]
		public void MoveHookUp()
		{
		}

		[Token(Token = "0x600301D")]
		[Address(RVA = "0xEE590C", Offset = "0xEE590C", VA = "0xEE590C")]
		public void MoveHookDown()
		{
		}

		[Token(Token = "0x600301E")]
		[Address(RVA = "0xEE5974", Offset = "0xEE5974", VA = "0xEE5974")]
		public void MoveCraneForward()
		{
		}

		[Token(Token = "0x600301F")]
		[Address(RVA = "0xEE59D8", Offset = "0xEE59D8", VA = "0xEE59D8")]
		public void MoveCraneBackward()
		{
		}

		[Token(Token = "0x6003020")]
		[Address(RVA = "0xEE5A38", Offset = "0xEE5A38", VA = "0xEE5A38")]
		public void MoveCraneLeft()
		{
		}

		[Token(Token = "0x6003021")]
		[Address(RVA = "0xEE5A9C", Offset = "0xEE5A9C", VA = "0xEE5A9C")]
		public void CraneXMoveChanged()
		{
		}

		[Token(Token = "0x6003022")]
		[Address(RVA = "0xEE5C98", Offset = "0xEE5C98", VA = "0xEE5C98")]
		public void CraneZMoveChanged()
		{
		}

		[Token(Token = "0x6003023")]
		[Address(RVA = "0xEE5CD8", Offset = "0xEE5CD8", VA = "0xEE5CD8")]
		public void MoveCraneRight()
		{
		}

		[Token(Token = "0x6003024")]
		[Address(RVA = "0xEE4BAC", Offset = "0xEE4BAC", VA = "0xEE4BAC")]
		public void UpdateRemoteHeight()
		{
		}

		[Token(Token = "0x6003025")]
		[Address(RVA = "0xEE4818", Offset = "0xEE4818", VA = "0xEE4818")]
		public void UpdateMainBeamPos(float position)
		{
		}

		[Token(Token = "0x6003026")]
		[Address(RVA = "0xEE4920", Offset = "0xEE4920", VA = "0xEE4920")]
		public void UpdateTelpherPos(float position)
		{
		}

		[Token(Token = "0x6003027")]
		[Address(RVA = "0xEE5AB8", Offset = "0xEE5AB8", VA = "0xEE5AB8")]
		private void CablesSway(List<Transform> endPointParents, List<Rigidbody> endPoints_rb, List<Rigidbody> startPoints_rb, float t)
		{
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0xEE5D38", Offset = "0xEE5D38", VA = "0xEE5D38")]
		private void CablesUpdate(Transform cablesParent, Transform cablesEndPoint, List<Transform> endPointParents, List<Transform> endPoints, List<Transform> startPoints, float[] rotValues, float[] scaleValues, List<SkinnedMeshRenderer> meshes, AnimationCurve distributionCurve, AnimationCurve _scaleCurve)
		{
		}

		[Token(Token = "0x6003029")]
		[Address(RVA = "0xEE40C0", Offset = "0xEE40C0", VA = "0xEE40C0")]
		private SkinnedMeshRenderer FindNeighbourMesh(Transform neighbour)
		{
			return null;
		}

		[Token(Token = "0x600302A")]
		[Address(RVA = "0xEE3A88", Offset = "0xEE3A88", VA = "0xEE3A88")]
		private Transform GetChildByName(Transform parent, string childName)
		{
			return null;
		}

		[Token(Token = "0x600302B")]
		[Address(RVA = "0xEE5274", Offset = "0xEE5274", VA = "0xEE5274")]
		private float StepAngleRandomize()
		{
			return default(float);
		}

		[Token(Token = "0x600302C")]
		[Address(RVA = "0xEE61F0", Offset = "0xEE61F0", VA = "0xEE61F0")]
		private float CalculatePositionZ(float totalDistance, int itemsCount, int itemIndex)
		{
			return default(float);
		}

		[Token(Token = "0x600302D")]
		[Address(RVA = "0xEE41FC", Offset = "0xEE41FC", VA = "0xEE41FC")]
		private void InitBasicColumns()
		{
		}

		[Token(Token = "0x600302E")]
		[Address(RVA = "0xEE47BC", Offset = "0xEE47BC", VA = "0xEE47BC")]
		public void SwitchColumns(bool value)
		{
		}

		[Token(Token = "0x600302F")]
		[Address(RVA = "0xEE6210", Offset = "0xEE6210", VA = "0xEE6210")]
		public void SetAdditionalColumns(int count)
		{
		}

		[Token(Token = "0x6003030")]
		[Address(RVA = "0xEE6290", Offset = "0xEE6290", VA = "0xEE6290")]
		private void AddExtraColumn(List<Transform> listToAdd, List<Transform> extraControls, List<SkinnedMeshRenderer> meshes, Transform parentObj)
		{
		}

		[Token(Token = "0x6003031")]
		[Address(RVA = "0xEE64F0", Offset = "0xEE64F0", VA = "0xEE64F0")]
		private void RemoveExtraColumn(List<Transform> listToRemoveFrom, List<Transform> listOfColumnControls, List<SkinnedMeshRenderer> meshes)
		{
		}

		[Token(Token = "0x6003032")]
		[Address(RVA = "0xEE6638", Offset = "0xEE6638", VA = "0xEE6638")]
		private void UpdateExtraColumnsPos(List<Transform> listOfColumns)
		{
		}

		[Token(Token = "0x6003033")]
		[Address(RVA = "0xEE6710", Offset = "0xEE6710", VA = "0xEE6710")]
		private void UpdateExtraColumnsHeight(List<Transform> listOfColumnControls, List<SkinnedMeshRenderer> meshes)
		{
		}

		[Token(Token = "0x6003034")]
		[Address(RVA = "0xEE4BDC", Offset = "0xEE4BDC", VA = "0xEE4BDC")]
		public void CraneHeightChange()
		{
		}

		[Token(Token = "0x6003035")]
		[Address(RVA = "0xEE69A8", Offset = "0xEE69A8", VA = "0xEE69A8")]
		private MaterialPropertyBlock SetMtlPropertyBlock(SkinnedMeshRenderer mesh, MaterialPropertyBlock propBlock, float xTiling)
		{
			return null;
		}

		[Token(Token = "0x6003036")]
		[Address(RVA = "0xEE4EE0", Offset = "0xEE4EE0", VA = "0xEE4EE0")]
		public void CraneWidthChange()
		{
		}

		[Token(Token = "0x6003037")]
		[Address(RVA = "0xEE4FF4", Offset = "0xEE4FF4", VA = "0xEE4FF4")]
		public void CraneLengthChange()
		{
		}

		[Token(Token = "0x6003038")]
		[Address(RVA = "0xEE6A4C", Offset = "0xEE6A4C", VA = "0xEE6A4C")]
		private void UpdateSupportBeamBounds()
		{
		}

		[Token(Token = "0x6003039")]
		[Address(RVA = "0xEE6B4C", Offset = "0xEE6B4C", VA = "0xEE6B4C")]
		private void UpdateEndBeamBounds()
		{
		}

		[Token(Token = "0x600303A")]
		[Address(RVA = "0xEE6C4C", Offset = "0xEE6C4C", VA = "0xEE6C4C")]
		private void UpdateMainBeamBounds()
		{
		}

		[Token(Token = "0x600303B")]
		[Address(RVA = "0xEE6D4C", Offset = "0xEE6D4C", VA = "0xEE6D4C")]
		public NL_OverheadCrane()
		{
		}
	}
	[Token(Token = "0x2000806")]
	public class NL_Remote : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Transform cable_remoteMount;

		[Token(Token = "0x4003F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public SkinnedMeshRenderer cable_mesh;

		[Token(Token = "0x4003F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public ConfigurableJoint joint;

		[Token(Token = "0x4003F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public MaterialPropertyBlock mtlPropBlock;

		[Token(Token = "0x4003F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool enableKeyboardControls;

		[Token(Token = "0x4003F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NL_RemoteButton[] buttons;

		[Token(Token = "0x4003F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NL_OverheadCrane crane;

		[Token(Token = "0x6003048")]
		[Address(RVA = "0xEE75A4", Offset = "0xEE75A4", VA = "0xEE75A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6003049")]
		[Address(RVA = "0xEE7794", Offset = "0xEE7794", VA = "0xEE7794")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600304A")]
		[Address(RVA = "0xEE78E4", Offset = "0xEE78E4", VA = "0xEE78E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600304B")]
		[Address(RVA = "0xEE79C8", Offset = "0xEE79C8", VA = "0xEE79C8")]
		private void SwitchKeyboardControls(bool value)
		{
		}

		[Token(Token = "0x600304C")]
		[Address(RVA = "0xEE79D4", Offset = "0xEE79D4", VA = "0xEE79D4")]
		private void Update()
		{
		}

		[Token(Token = "0x600304D")]
		[Address(RVA = "0xEE7658", Offset = "0xEE7658", VA = "0xEE7658")]
		private SkinnedMeshRenderer FindNeighbourMesh(Transform neighbour)
		{
			return null;
		}

		[Token(Token = "0x600304E")]
		[Address(RVA = "0xEE82B8", Offset = "0xEE82B8", VA = "0xEE82B8")]
		public void UpdateRemoteHeight(float craneHeight, float t)
		{
		}

		[Token(Token = "0x600304F")]
		[Address(RVA = "0xEE80E8", Offset = "0xEE80E8", VA = "0xEE80E8")]
		public void UpdateRemoteCableBounds()
		{
		}

		[Token(Token = "0x6003050")]
		[Address(RVA = "0xEE83FC", Offset = "0xEE83FC", VA = "0xEE83FC")]
		public NL_Remote()
		{
		}
	}
	[Token(Token = "0x2000807")]
	public class NL_RemoteButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider[] excludeTriggers;

		[Token(Token = "0x4003F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool excludedTrigger;

		[Token(Token = "0x4003F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Collider btnCollider;

		[Token(Token = "0x4003F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onButtonPressed;

		[Token(Token = "0x4003F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onButtonHold;

		[Token(Token = "0x4003F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onButtonRelease;

		[Token(Token = "0x4003F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool isInteractable;

		[Token(Token = "0x6003051")]
		[Address(RVA = "0xEE845C", Offset = "0xEE845C", VA = "0xEE845C")]
		private void Start()
		{
		}

		[Token(Token = "0x6003052")]
		[Address(RVA = "0xEE84AC", Offset = "0xEE84AC", VA = "0xEE84AC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6003053")]
		[Address(RVA = "0xEE85DC", Offset = "0xEE85DC", VA = "0xEE85DC")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6003054")]
		[Address(RVA = "0xEE870C", Offset = "0xEE870C", VA = "0xEE870C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6003055")]
		[Address(RVA = "0xEE8240", Offset = "0xEE8240", VA = "0xEE8240")]
		public void OnPressed()
		{
		}

		[Token(Token = "0x6003056")]
		[Address(RVA = "0xEE8204", Offset = "0xEE8204", VA = "0xEE8204")]
		public void OnHold()
		{
		}

		[Token(Token = "0x6003057")]
		[Address(RVA = "0xEE827C", Offset = "0xEE827C", VA = "0xEE827C")]
		public void OnRelease()
		{
		}

		[Token(Token = "0x6003058")]
		[Address(RVA = "0xEE883C", Offset = "0xEE883C", VA = "0xEE883C")]
		public void ButtonSwitch(bool value)
		{
		}

		[Token(Token = "0x6003059")]
		[Address(RVA = "0xEE88AC", Offset = "0xEE88AC", VA = "0xEE88AC")]
		public NL_RemoteButton()
		{
		}
	}
	[Token(Token = "0x2000808")]
	public class NL_Wheel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x600305A")]
		[Address(RVA = "0xEE88BC", Offset = "0xEE88BC", VA = "0xEE88BC")]
		public NL_Wheel()
		{
		}
	}
}
namespace VRUiKits.Utils
{
	[Token(Token = "0x2000809")]
	public class UIKitInputField : UnityEngine.MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerClickHandler, IDeselectHandler
	{
		[Token(Token = "0x200080A")]
		public enum ContentType
		{
			[Token(Token = "0x4003F78")]
			Standard,
			[Token(Token = "0x4003F79")]
			Password
		}

		[Token(Token = "0x200080B")]
		[CompilerGenerated]
		private sealed class <BlinkCaret>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIKitInputField <>4__this;

			[Token(Token = "0x17000529")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003067")]
				[Address(RVA = "0xEE9058", Offset = "0xEE9058", VA = "0xEE9058", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003069")]
				[Address(RVA = "0xEE90A0", Offset = "0xEE90A0", VA = "0xEE90A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003064")]
			[Address(RVA = "0xEE8EA4", Offset = "0xEE8EA4", VA = "0xEE8EA4")]
			[DebuggerHidden]
			public <BlinkCaret>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6003065")]
			[Address(RVA = "0xEE8F28", Offset = "0xEE8F28", VA = "0xEE8F28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003066")]
			[Address(RVA = "0xEE8F2C", Offset = "0xEE8F2C", VA = "0xEE8F2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003068")]
			[Address(RVA = "0xEE9060", Offset = "0xEE9060", VA = "0xEE9060", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4003F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform wrapper;

		[Token(Token = "0x4003F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text textComponent;

		[Token(Token = "0x4003F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4003F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int characterLimit;

		[Token(Token = "0x4003F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ContentType contentType;

		[Token(Token = "0x4003F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text placeholder;

		[Token(Token = "0x4003F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform caretTransform;

		[Token(Token = "0x4003F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 4f)]
		public float caretBlinkRate;

		[Token(Token = "0x4003F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float maxW_textComponent;

		[Token(Token = "0x4003F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string displayedText;

		[Token(Token = "0x4003F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string prevText;

		[Token(Token = "0x4003F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text caretText;

		[Token(Token = "0x600305B")]
		[Address(RVA = "0xEE88C4", Offset = "0xEE88C4", VA = "0xEE88C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600305C")]
		[Address(RVA = "0xEE8958", Offset = "0xEE8958", VA = "0xEE8958", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600305D")]
		[Address(RVA = "0xEE89FC", Offset = "0xEE89FC", VA = "0xEE89FC", Slot = "5")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x600305E")]
		[Address(RVA = "0xEE8A78", Offset = "0xEE8A78", VA = "0xEE8A78", Slot = "6")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600305F")]
		[Address(RVA = "0xEE8AE8", Offset = "0xEE8AE8", VA = "0xEE8AE8")]
		public void ForceCaretUpdate()
		{
		}

		[Token(Token = "0x6003060")]
		[Address(RVA = "0xEE8B44", Offset = "0xEE8B44", VA = "0xEE8B44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6003061")]
		[Address(RVA = "0xEE8C60", Offset = "0xEE8C60", VA = "0xEE8C60")]
		private void CalculateLengthOfText(string text)
		{
		}

		[Token(Token = "0x6003062")]
		[Address(RVA = "0xEE8E3C", Offset = "0xEE8E3C", VA = "0xEE8E3C")]
		[IteratorStateMachine(typeof(<BlinkCaret>d__20))]
		private IEnumerator BlinkCaret()
		{
			return null;
		}

		[Token(Token = "0x6003063")]
		[Address(RVA = "0xEE8ECC", Offset = "0xEE8ECC", VA = "0xEE8ECC")]
		public UIKitInputField()
		{
		}
	}
	[Token(Token = "0x200080C")]
	public class KeyboardExtentionMethods : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject symbols;

		[Token(Token = "0x4003F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject alphabets;

		[Token(Token = "0x600306A")]
		[Address(RVA = "0xEE90A8", Offset = "0xEE90A8", VA = "0xEE90A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0xEE91AC", Offset = "0xEE91AC", VA = "0xEE91AC")]
		public void SwitchSymbols()
		{
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0xEE91C8", Offset = "0xEE91C8", VA = "0xEE91C8")]
		public void ToggleObject(GameObject go)
		{
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0xEE91FC", Offset = "0xEE91FC", VA = "0xEE91FC")]
		public KeyboardExtentionMethods()
		{
		}
	}
	[Token(Token = "0x200080D")]
	public class MobileKeyboardManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4003F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("User defined")]
		[Tooltip("If the character is uppercase at the initialization")]
		public bool isUppercase;

		[Token(Token = "0x4003F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Essentials")]
		public Transform keys;

		[Token(Token = "0x4003F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIKitInputField target;

		[Token(Token = "0x4003F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Key[] keyList;

		[Token(Token = "0x4003F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool capslockFlag;

		[Token(Token = "0x1700052B")]
		public static UIKitInputField Target
		{
			[Token(Token = "0x600306E")]
			[Address(RVA = "0xEE9204", Offset = "0xEE9204", VA = "0xEE9204")]
			get
			{
				return null;
			}
			[Token(Token = "0x600306F")]
			[Address(RVA = "0xEE9368", Offset = "0xEE9368", VA = "0xEE9368")]
			set
			{
			}
		}

		[Token(Token = "0x1700052C")]
		private string Input
		{
			[Token(Token = "0x6003070")]
			[Address(RVA = "0xEE93B4", Offset = "0xEE93B4", VA = "0xEE93B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003071")]
			[Address(RVA = "0xEE944C", Offset = "0xEE944C", VA = "0xEE944C")]
			set
			{
			}
		}

		[Token(Token = "0x6003072")]
		[Address(RVA = "0xEE9528", Offset = "0xEE9528", VA = "0xEE9528")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003073")]
		[Address(RVA = "0xEE9584", Offset = "0xEE9584", VA = "0xEE9584")]
		private void Start()
		{
		}

		[Token(Token = "0x6003074")]
		[Address(RVA = "0xEE973C", Offset = "0xEE973C", VA = "0xEE973C")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0xEE9794", Offset = "0xEE9794", VA = "0xEE9794")]
		public void Clear()
		{
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0xEE9668", Offset = "0xEE9668", VA = "0xEE9668")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0xEE9834", Offset = "0xEE9834", VA = "0xEE9834")]
		public void Shift()
		{
		}

		[Token(Token = "0x6003078")]
		[Address(RVA = "0xEE98F8", Offset = "0xEE98F8", VA = "0xEE98F8")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0xEE991C", Offset = "0xEE991C", VA = "0xEE991C")]
		public MobileKeyboardManager()
		{
		}
	}
}
namespace Technie.PhysicsCreator
{
	[Token(Token = "0x200080E")]
	public class HullData : ScriptableObject
	{
		[Token(Token = "0x600307A")]
		[Address(RVA = "0xEE9924", Offset = "0xEE9924", VA = "0xEE9924")]
		public HullData()
		{
		}
	}
}
